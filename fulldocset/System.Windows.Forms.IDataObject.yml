### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.IDataObject
  id: IDataObject
  children:
  - System.Windows.Forms.IDataObject.GetData(System.String)
  - System.Windows.Forms.IDataObject.GetData(System.Type)
  - System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetFormats
  - System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  - System.Windows.Forms.IDataObject.SetData(System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  langs:
  - csharp
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
  type: Interface
  summary: "Udostępnia mechanizm format niezależny od transferu danych."
  remarks: "`IDataObject` Interfejs jest używany przez <xref:System.Windows.Forms.Clipboard>klasy w operacji przeciągania i upuszczania.</xref:System.Windows.Forms.Clipboard>       Po zaimplementowaniu w klasie, metody IDataObject pozwala na przechowywanie danych w wielu formatach w wystąpieniu klasy. Przechowywanie danych w więcej niż jeden format zwiększa prawdopodobieństwo, że aplikacja docelowa, których użytkownik może nie wiedzieć, wymagania dotyczące formatu można pobrać przechowywanych danych. Do przechowywania danych w wystąpieniu obiektu IDataObject, wywołaj <xref:System.Windows.Forms.IDataObject.SetData%2A>metodę i określić format danych `format` parametru.</xref:System.Windows.Forms.IDataObject.SetData%2A> Ustaw `autoConvert` parametr `false` , jeśli nie chcesz przechowywanych danych ma zostać przekonwertowany do innego formatu podczas pobierania. Wywołanie <xref:System.Windows.Forms.IDataObject.SetData%2A>wiele razy w jedno wystąpienie obiektu IDataObject na przechowywanie danych w więcej niż jeden format.</xref:System.Windows.Forms.IDataObject.SetData%2A>       Pobieranie przechowywanych danych z elementu IDataObject przez wywołanie metody <xref:System.Windows.Forms.IDataObject.GetData%2A>— Metoda i określania danych formatowania w `format` parametru.</xref:System.Windows.Forms.IDataObject.GetData%2A> Ustaw `autoConvert` parametr `false` pobierać tylko te dane, które były przechowywane w określonym formacie. Aby przekonwertować określony format przechowywanych danych, ustaw `autoConvert` do `true`, albo nie używaj `autoConvert`.       Aby określić formaty danych przechowywanych w IDataObject, należy użyć następujących metod IDataObject.      -Wywołaj <xref:System.Windows.Forms.IDataObject.GetFormats%2A>Metoda pobierania tablicy wszystkich formatów, w którym dane są dostępne.</xref:System.Windows.Forms.IDataObject.GetFormats%2A> Ustaw `autoConvert` parametr `false` uzyskać formatów, w których dane są przechowywane. Aby uzyskać wszystkie formaty, w których dane są dostępne, należy ustawić `autoConvert` do `true`, albo nie używaj tego parametru.      -Wywołaj <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>metodę, aby określić, czy przechowywanych danych jest dostępna w określonym formacie.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Jeśli nie chcesz, aby przechowywane dane, które ma zostać przekonwertowane na określony format, ustaw `autoConvert` parametr `false`.       Zobacz <xref:System.Windows.Forms.DataObject>klasy dla implementację tego interfejsu.</xref:System.Windows.Forms.DataObject> Zobacz <xref:System.Windows.Forms.DataFormats>klasy dla wstępnie zdefiniowane <xref:System.Windows.Forms.Clipboard>formaty danych.</xref:System.Windows.Forms.Clipboard> </xref:System.Windows.Forms.DataFormats>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDataObject
  implements: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera dane skojarzone z formatu określone dane."
  remarks: "Jeśli ta metoda nie może znaleźć danych w określonym formacie, próbuje przekonwertować na format danych. Jeśli dane nie można przekonwertować na określony format, ta metoda zwraca `null`.       Czy jest skojarzony z danych, czy można przekonwertować na format, połączenie <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>przed wywołaniem <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Wywołanie <xref:System.Windows.Forms.IDataObject.GetFormats%2A>listę prawidłowe formaty danych przechowywanych w tym wystąpieniu.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Danych można przekonwertować na inny format był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.       Implementacja tej metody Aby zapoznać <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cpp[GetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_9_1.cpp)]\n [!code-cs[GetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_9_1.cs)]\n [!code-vb[GetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_9_1.vb)]"
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "Format danych do pobrania. Zobacz <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> formatów wstępnie zdefiniowane."
    return:
      type: System.Object
      description: "Dane skojarzone z określonym formacie lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera dane skojarzone z formatem typu określonej klasy."
  remarks: "Jeśli ta metoda nie może znaleźć danych w określonym formacie, próbuje przekonwertować na format danych. Jeśli dane nie można przekonwertować na określony format, ta metoda zwraca `null`.       Czy jest skojarzony z danych, czy można przekonwertować na format, połączenie <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>przed wywołaniem <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Wywołanie <xref:System.Windows.Forms.IDataObject.GetFormats%2A>listę prawidłowe formaty danych przechowywanych w tym wystąpieniu.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Danych można przekonwertować na inny format był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.       Implementacja tej metody Aby zapoznać <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`. The type of the retrieved data is displayed in a message box. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_4_1.cpp)]\n [!code-cs[GetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_4_1.cs)]\n [!code-vb[GetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_4_1.vb)]"
  syntax:
    content: public object GetData (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type>reprezentujący format danych do pobrania.</xref:System.Type> Zobacz <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> formatów wstępnie zdefiniowane."
    return:
      type: System.Object
      description: "Dane skojarzone z określonym formacie lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera dane skojarzone z formatem określone dane, do ustalenia, czy do przekonwertowania na format danych przy użyciu wartość logiczną."
  remarks: "Jeśli `autoConvert` parametr jest `true` i tej metody nie można odnaleźć danych w określonym formacie, próbuje przekonwertować na format danych. Jeśli dane nie można przekonwertować na określony format lub dane są przechowywane z `autoConvert` ustawiona `false`, ta metoda zwraca `null`.       Jeśli `autoConvert` parametr jest `false`, ta metoda zwraca dane w określonym formacie lub `null` w przypadku nieodnalezienia żadnych danych w tym formacie.       Aby ustalić, czy jest skojarzony z danych, czy można przekonwertować na format, należy wywołać <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>przed wywołaniem metody GetData.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Wywołanie <xref:System.Windows.Forms.IDataObject.GetFormats%2A>listę prawidłowe formaty danych przechowywanych w tym wystąpieniu.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Danych można przekonwertować na inny format był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.       Implementacja tej metody Aby zapoznać <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format. First, `myDataObject` is created with text data. Then the example tries twice to retrieve the data. In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_14_1.cs)]\n [!code-cpp[GetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_14_1.cpp)]\n [!code-vb[GetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_14_1.vb)]"
  syntax:
    content: public object GetData (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "Format danych do pobrania. Zobacz <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> formatów wstępnie zdefiniowane."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby przekonwertować danych na określonym formacie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Dane skojarzone z określonym formacie lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Określa, czy jest skojarzony z danych przechowywanych w tym wystąpieniu i można przekonwertować na określony format."
  remarks: "Wywołaj tę metodę, aby określić, czy format istnieje w tym <xref:System.Windows.Forms.DataObject>przed wywołaniem <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Wywołanie <xref:System.Windows.Forms.IDataObject.GetFormats%2A>formatów, które są dostępne w tym wystąpieniu.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Danych można przekonwertować na inny format był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.       Implementacja tej metody Aby zapoznać <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object using a string and the `Text` format. Then it verifies that the data is present in the `Text` format and displays the results in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetDataPresent1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_12_1.vb)]\n [!code-cs[GetDataPresent1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_12_1.cs)]\n [!code-cpp[GetDataPresent1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_12_1.cpp)]"
  syntax:
    content: public bool GetDataPresent (string format);
    parameters:
    - id: format
      type: System.String
      description: "Format, do których chcesz sprawdzić. Zobacz <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> formatów wstępnie zdefiniowane."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>dane przechowywane w tym wystąpieniu jest skojarzony z, czy można przekonwertować na określony format; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Określa, czy jest skojarzony z danych przechowywanych w tym wystąpieniu i można przekonwertować na określony format."
  remarks: "Wywołaj tę metodę, aby określić, czy format istnieje w tym <xref:System.Windows.Forms.DataObject>przed wywołaniem <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Wywołanie <xref:System.Windows.Forms.IDataObject.GetFormats%2A>formatów, które są dostępne w tym wystąpieniu.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Danych można przekonwertować na inny format był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.       Implementacja tej metody Aby zapoznać <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in `myDataObject`. If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box. This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cs[GetDataPresent2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_15_1.cs)]\n [!code-cpp[GetDataPresent2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_15_1.cpp)]\n [!code-vb[GetDataPresent2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_15_1.vb)]"
  syntax:
    content: public bool GetDataPresent (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type>reprezentujący formatu, do których chcesz sprawdzić.</xref:System.Type> Zobacz <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> formatów wstępnie zdefiniowane."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>dane przechowywane w tym wystąpieniu jest skojarzony z, czy można przekonwertować na określony format; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Określa, czy dane przechowywane w tym wystąpieniu jest skojarzony z określonym formacie przy użyciu wartość logiczną do ustalenia, czy można przekonwertować danych na format."
  remarks: "Wywołaj tę metodę, aby określić, czy format istnieje w tym <xref:System.Windows.Forms.DataObject>przed wywołaniem <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Wywołanie <xref:System.Windows.Forms.IDataObject.GetFormats%2A>formatów, które są dostępne w tym wystąpieniu.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>       Ta metoda zwraca `true` podczas: - `autoConvert` parametr jest `true` , a dane są w formacie, który można przekonwertować na odpowiedni format.      - `autoConvert` Parametr jest `false` i danych jest w odpowiednim formacie.       Ta metoda zwraca `false` podczas: - `autoConvert` parametr jest `true` tej metody nie można odnaleźć danych w określonym formacie i nie można go przekonwertować danych na określony format lub przechowywane dane z `autoConvert` ustawioną `false`.      - `autoConvert` Parametr jest `false`, i danych nie istnieje w tym wystąpieniu w określonym formacie.      > [!NOTE] > Danych można przekonwertować na inny format był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.       Implementacja tej metody Aby zapoznać <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, it sets the `autoConvert` parameter to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetDataPresent3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_17_1.cs)]\n [!code-cpp[GetDataPresent3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_17_1.cpp)]\n [!code-vb[GetDataPresent3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_17_1.vb)]"
  syntax:
    content: public bool GetDataPresent (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "Format, do których chcesz sprawdzić. Zobacz <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> formatów wstępnie zdefiniowane."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby określić, czy dane są przechowywane w tym wystąpieniu można przekonwertować na określony format; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> do sprawdzenia, czy w danych jest w określonym formacie."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dane w lub można przekonwertować na określony format; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats
  id: GetFormats
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Zwraca listę wszystkich danych przechowywanych w tym wystąpieniu jest skojarzony z lub może zostać przekonwertowany na formaty."
  remarks: "Wywołanie tej metody można pobrać danych obsługiwane formaty przed wywołaniem <xref:System.Windows.Forms.IDataObject.GetData%2A>metody.</xref:System.Windows.Forms.IDataObject.GetData%2A> Zobacz <xref:System.Windows.Forms.DataFormats>klasy dla wstępnie zdefiniowanych formatów.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > Danych można przekonwertować na inny format był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.       Implementacja tej metody Aby zapoznać <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetFormats1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_3_1.cs)]\n [!code-cpp[GetFormats1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_3_1.cpp)]\n [!code-vb[GetFormats1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_3_1.vb)]"
  syntax:
    content: public string[] GetFormats ();
    parameters: []
    return:
      type: System.String[]
      description: "Tablica nazw reprezentuje listę wszystkich formatów, które są obsługiwane przez dane przechowywane w tym obiekcie."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera listę wszystkich formatów, które dane przechowywane w tym wystąpieniu jest skojarzony z lub może zostać przekonwertowany na, przy użyciu wartość logiczną w celu określenia, czy można pobrać wszystkich formatów, które można przekonwertować danych lub tylko danych natywnych formaty."
  remarks: "Wywołanie tej metody można pobrać danych obsługiwane formaty przed wywołaniem <xref:System.Windows.Forms.IDataObject.GetData%2A>metody.</xref:System.Windows.Forms.IDataObject.GetData%2A> Zobacz <xref:System.Windows.Forms.DataFormats>klasy dla wstępnie zdefiniowanych formatów.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > Danych można przekonwertować na inny format był przechowywany określenie, czy konwersja jest dozwolone, a żądany format jest zgodny z formatem przechowywane. Na przykład dane przechowywane jako Unicode można przekonwertować na tekst.       Implementacja tej metody Aby zapoznać <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format. Then it makes two queries to get the formats associated with the data. In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned. In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to. In each case, the resulting list is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetFormats2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_13_1.vb)]\n [!code-cpp[GetFormats2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_13_1.cpp)]\n [!code-cs[GetFormats2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_13_1.cs)]"
  syntax:
    content: public string[] GetFormats (bool autoConvert);
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby pobrać wszystkie formaty danych przechowywanych w tym wystąpieniu jest skojarzony z lub może zostać przekonwertowany na; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> można pobrać tylko formaty danych w trybie macierzystym."
    return:
      type: System.String[]
      description: "Tablica nazw reprezentuje listę wszystkich formatów, które są obsługiwane przez dane przechowywane w tym obiekcie."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Zapisuje określone dane w tym wystąpieniu, za pomocą klasy danych do formatu."
  remarks: "Format jest pochodną klasy danych.       Podczas pobierania danych przechowywane przy użyciu tej metody można przekonwertować na format zgodny.       Implementacja tej metody Aby zapoznać <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in the data object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_1_1.cs)]\n [!code-vb[SetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_1_1.vb)]\n [!code-cpp[SetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_1_1.cpp)]"
  syntax:
    content: public void SetData (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Dane, które mają być przechowywane."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Przechowuje określonych danych i jego skojarzony format, w tym wystąpieniu."
  remarks: "Jeśli nie znasz format w aplikacji docelowej, można przechowywać dane w wielu formatach za pomocą tej metody.       Podczas pobierania danych przechowywane przy użyciu tej metody można przekonwertować na format zgodny.       Implementacja tej metody Aby zapoznać <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format. Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format. The result is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_0_1.cs)]\n [!code-cpp[SetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_0_1.cpp)]\n [!code-vb[SetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_0_1.vb)]"
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "Format skojarzonego z danymi. Zobacz <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> formatów wstępnie zdefiniowane."
    - id: data
      type: System.Object
      description: "Dane, które mają być przechowywane."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Zapisuje określone dane, a jego typ klasy skojarzone w tym wystąpieniu."
  remarks: "Jeśli nie znasz format w aplikacji docelowej, można przechowywać dane w wielu formatach za pomocą tej metody.       Podczas pobierania danych przechowywane przy użyciu tej metody można przekonwertować na format zgodny.       Implementacja tej metody Aby zapoznać <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format. Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[SetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_11_1.vb)]\n [!code-cpp[SetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_11_1.cpp)]\n [!code-cs[SetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_11_1.cs)]"
  syntax:
    content: public void SetData (Type format, object data);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type>reprezentujący format skojarzonego z danymi.</xref:System.Type> Zobacz <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> formatów wstępnie zdefiniowane."
    - id: data
      type: System.Object
      description: "Dane, które mają być przechowywane."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  id: SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Przechowuje określonych danych i jego skojarzony format w tym wystąpieniu, za pomocą wartość logiczną, aby określić, czy dane mogą być konwertowane do innego formatu."
  remarks: "Jeśli nie znasz format w aplikacji docelowej, można przechowywać dane w wielu formatach za pomocą tej metody.       Implementacja tej metody Aby zapoznać <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`. Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box. The only format associated with the data is the `UnicodeText` format. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData4#1](~/add/codesnippet/cpp/14ad2ca0-1678-4ad5-a287-_1.cpp)]\n [!code-vb[SetData4#1](~/add/codesnippet/visualbasic/14ad2ca0-1678-4ad5-a287-_1.vb)]\n [!code-cs[SetData4#1](~/add/codesnippet/csharp/14ad2ca0-1678-4ad5-a287-_1.cs)]"
  syntax:
    content: public void SetData (string format, bool autoConvert, object data);
    parameters:
    - id: format
      type: System.String
      description: "Format skojarzonego z danymi. Zobacz <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> formatów wstępnie zdefiniowane."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby umożliwić danych do innego formatu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: data
      type: System.Object
      description: "Dane, które mają być przechowywane."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
- uid: System.Windows.Forms.IDataObject.GetFormats
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
- uid: System.Windows.Forms.IDataObject.GetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData
  nameWithType: IDataObject.GetData
- uid: System.Windows.Forms.IDataObject.GetDataPresent*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent
  nameWithType: IDataObject.GetDataPresent
- uid: System.Windows.Forms.IDataObject.GetFormats*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats
  nameWithType: IDataObject.GetFormats
- uid: System.Windows.Forms.IDataObject.SetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData
  nameWithType: IDataObject.SetData
