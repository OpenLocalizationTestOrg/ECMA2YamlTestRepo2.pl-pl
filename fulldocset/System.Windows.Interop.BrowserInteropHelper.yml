### YamlMime:ManagedReference
items:
- uid: System.Windows.Interop.BrowserInteropHelper
  id: BrowserInteropHelper
  children:
  - System.Windows.Interop.BrowserInteropHelper.ClientSite
  - System.Windows.Interop.BrowserInteropHelper.HostScript
  - System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  - System.Windows.Interop.BrowserInteropHelper.Source
  langs:
  - csharp
  name: BrowserInteropHelper
  nameWithType: BrowserInteropHelper
  fullName: System.Windows.Interop.BrowserInteropHelper
  type: Class
  summary: "Klasa pomocy, która zawiera informacje o środowisku przeglądarki, w którym [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] aplikacja jest obsługiwana."
  syntax:
    content: public static class BrowserInteropHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite
  id: ClientSite
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
  fullName: System.Windows.Interop.BrowserInteropHelper.ClientSite
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Zwraca odwołanie do obiektu, który może być używane do dostępu w przeglądarce hosta za pośrednictwem interfejsy kontenera OLE (na przykład IOleClientSite::GetContainer();)."
  syntax:
    content: public static object ClientSite { get; }
    return:
      type: System.Object
      description: "Obiekt, który mogą być rzutowane na <xref:Microsoft.VisualStudio.OLE.Interop.IOleClientSite>.</xref:Microsoft.VisualStudio.OLE.Interop.IOleClientSite>"
  overload: System.Windows.Interop.BrowserInteropHelper.ClientSite*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript
  id: HostScript
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
  fullName: System.Windows.Interop.BrowserInteropHelper.HostScript
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Pobiera obiekt skryptu, który zapewnia dostęp do okna obiektu kodu HTML, funkcje skryptu niestandardowego i zmienne globalne dla strony HTML, jeśli [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] znajduje się w ramce."
  remarks: "Z zwrócony obiekt HostScript można uzyskać dostępu do właściwości, metod i zdarzeń obiektu okna HTML, bezpośrednio wywołać funkcję skryptu lub dostęp do zmiennej globalnej. Składnia służąca do dostęp do tych elementów używa znanych kropkowego.       Aby uzyskać więcej informacji o obiekcie okna, zobacz [obiekt window](http://go.microsoft.com/fwlink/?LinkId=160274) w dokumentacji dynamiczne DHTML (HTML).       Zwraca właściwości HostScript `null` Jeśli ramki jest przejście z lokalizacji między domenami.       Tę funkcję można wyłączyć dla programu Internet Explorer, ustawiając **ScriptInteropDisallow** wartości rejestru. Aby uzyskać więcej informacji, zobacz [zabezpieczeń (WPF)](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to retrieve the HostScript object and close the browser window.  \n  \n [!code-xml[XbapBrowserInterop#1](~/add/codesnippet/xaml/wpfbrowserapplication1/page1.xaml#1)]  \n[!code-cs[XbapBrowserInterop#10](~/add/codesnippet/csharp/wpfbrowserapplication1/page1.xaml.cs#10)]\n[!code-vb[XbapBrowserInterop#10](~/add/codesnippet/visualbasic/wpfbrowserapplication1vb/page1.xaml.vb#10)]"
  syntax:
    content: public static dynamic HostScript { get; }
    return:
      type: System.Object
      description: "Obiekt skryptów, który zapewnia dostęp do obiektu okna HTML, funkcje skryptu niestandardowego i zmienne globalne dla strony HTML, jeśli [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] hostowanej w ramce, a w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Interop.BrowserInteropHelper.HostScript*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  id: IsBrowserHosted
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
  fullName: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Pobiera wartość, która określa, czy bieżący [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] aplikacja jest hostowana przeglądarki."
  remarks: "A <xref:System.Windows.Controls.Page>może być niezależny od hosta i, w związku z tym może być załadowany do wielu różnych typów hostów, w tym <xref:System.Windows.Controls.Frame>, <xref:System.Windows.Navigation.NavigationWindow>, lub w przeglądarce.</xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Controls.Page> Może się to zdarzyć, jeśli masz w zestawie biblioteki, która zawiera jedną lub więcej stron, odwołuje się wiele autonomicznych i można przeglądać ([!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]) hostowania aplikacji."
  example:
  - "The following example demonstrates how to use IsBrowserHosted to determine if a <xref:System.Windows.Controls.Page> is hosted in a browser.  \n  \n [!code-cs[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/add/codesnippet/csharp/BrowserInteropHelperSnippet/Page1.xaml.cs#isbrowserhostedcode)]\n [!code-vb[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/add/codesnippet/visualbasic/browserinterophelpersnippet/page1.xaml.vb#isbrowserhostedcode)]"
  syntax:
    content: public static bool IsBrowserHosted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli aplikacja jest przeglądarki hostowanej; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.Source
  id: Source
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: Source
  nameWithType: BrowserInteropHelper.Source
  fullName: System.Windows.Interop.BrowserInteropHelper.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Pobiera [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] dla lokalizacji, z której [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] aplikacja była uruchomiona."
  remarks: "Właściwość źródła zawiera tylko <xref:System.Uri>dla [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] aplikacji.</xref:System.Uri> Na przykład właściwość Source zobacz <xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>.</xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>"
  syntax:
    content: public static Uri Source { get; }
    return:
      type: System.Uri
      description: "<xref:System.Uri>Dla lokalizacji, z której [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] aplikacja została uruchomiona, a w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Uri>"
  overload: System.Windows.Interop.BrowserInteropHelper.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
  fullName: System.Windows.Interop.BrowserInteropHelper.ClientSite
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
  fullName: System.Windows.Interop.BrowserInteropHelper.HostScript
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
  fullName: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Interop.BrowserInteropHelper.Source
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: Source
  nameWithType: BrowserInteropHelper.Source
  fullName: System.Windows.Interop.BrowserInteropHelper.Source
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
- uid: System.Windows.Interop.BrowserInteropHelper.Source*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: Source
  nameWithType: BrowserInteropHelper.Source
