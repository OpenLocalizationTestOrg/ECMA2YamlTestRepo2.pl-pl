### YamlMime:ManagedReference
items:
- uid: System.Windows.DataTemplate
  id: DataTemplate
  children:
  - System.Windows.DataTemplate.#ctor
  - System.Windows.DataTemplate.#ctor(System.Object)
  - System.Windows.DataTemplate.DataTemplateKey
  - System.Windows.DataTemplate.DataType
  - System.Windows.DataTemplate.Triggers
  - System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  langs:
  - csharp
  name: DataTemplate
  nameWithType: DataTemplate
  fullName: System.Windows.DataTemplate
  type: Class
  summary: "Opisuje visual strukturę obiektu danych."
  remarks: "Obiekt DataTemplate służy do określenia wizualizacji obiektów danych. DataTemplate obiektów są szczególnie użyteczne w przypadku, gdy dokonywane jest wiązanie <xref:System.Windows.Controls.ItemsControl>takich jak <xref:System.Windows.Controls.ListBox>do całej kolekcji.</xref:System.Windows.Controls.ListBox> </xref:System.Windows.Controls.ItemsControl> Bez szczegółowych instrukcji <xref:System.Windows.Controls.ListBox>Wyświetla reprezentację ciągu obiektów w kolekcji.</xref:System.Windows.Controls.ListBox> W takim przypadku można użyć DataTemplate do określenia jej wyglądu obiektów danych. Zawartość użytkownika DataTemplate staje się visual struktury obiektów danych.       Szczegółowe omówienie, zobacz [omówienie tworzenia szablonów danych](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to create a DataTemplate inline. The DataTemplate specifies that each data item appears as three <xref:System.Windows.Controls.TextBlock> elements within a <xref:System.Windows.Controls.StackPanel>. In this example, the data object is a class called `Task`. Note that each <xref:System.Windows.Controls.TextBlock> element in this template is bound to a property of the `Task` class.  \n  \n [!code-xml[DataTemplatingIntro_snip#Inline](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#inline)]  \n  \n It is more common to define a DataTemplate in the resources section so it can be a reusable object, as in the following example:  \n  \n [!code-xml[DataTemplatingIntro_snip#R1](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r1)]  \n[!code-xml[DataTemplatingIntro_snip#AsResource](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#asresource)]  \n[!code-xml[DataTemplatingIntro_snip#R2](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r2)]  \n  \n Now you can use `myTaskTemplate` as a resource, as in the following example:  \n  \n [!code-xml[DataTemplatingIntro_snip#MyTaskTemplate](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#mytasktemplate)]  \n  \n For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)."
  syntax:
    content: >-
      [System.Windows.Markup.DictionaryKeyProperty("DataTemplateKey")]

      public class DataTemplate : System.Windows.FrameworkTemplate
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.FrameworkTemplate
  implements: []
  inheritedMembers:
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.VisualTree
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.DataTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplate()
  nameWithType: DataTemplate.DataTemplate()
  fullName: System.Windows.DataTemplate.DataTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> klasy."
  syntax:
    content: public DataTemplate ();
    parameters: []
  overload: System.Windows.DataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplate(Object)
  nameWithType: DataTemplate.DataTemplate(Object)
  fullName: System.Windows.DataTemplate.DataTemplate(Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> klasy z określonym <xref:System.Windows.DataTemplate.DataType*>Właściwości.</xref:System.Windows.DataTemplate.DataType*>"
  remarks: "Aby odwołać się do nazwy typu klasy, należy użyć [x: Type — rozszerzenie znaczników](~/add/includes/ajax-current-ext-md.md). Jeśli szablon jest przeznaczony dla [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] danych, jest to ciąg, który reprezentuje nazwę tagu danych."
  syntax:
    content: public DataTemplate (object dataType);
    parameters:
    - id: dataType
      type: System.Object
      description: "Jeśli szablon jest przeznaczony dla obiekt danych, jest to nazwa typu obiektu danych."
  overload: System.Windows.DataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.DataTemplateKey
  id: DataTemplateKey
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
  fullName: System.Windows.DataTemplate.DataTemplateKey
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera domyślny klucz <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>."
  remarks: "Jeśli nie ustawisz [dyrektywy x: Key](~/add/includes/ajax-current-ext-md.md) na <xref:System.Windows.DataTemplate>w <xref:System.Windows.ResourceDictionary>, DataTemplateKey jest używany jako klucz.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.DataTemplate>"
  syntax:
    content: public object DataTemplateKey { get; }
    return:
      type: System.Object
      description: "Domyślny klucz <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>."
  overload: System.Windows.DataTemplate.DataTemplateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.DataType
  id: DataType
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataType
  nameWithType: DataTemplate.DataType
  fullName: System.Windows.DataTemplate.DataType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera lub ustawia typ, dla której ta <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> ma."
  remarks: "Ta właściwość jest bardzo podobna do <xref:System.Windows.Style.TargetType%2A>właściwości <xref:System.Windows.Style>klasy.</xref:System.Windows.Style> </xref:System.Windows.Style.TargetType%2A> Po ustawieniu tej właściwości na typ danych bez określania `x:Key`, <xref:System.Windows.DataTemplate>pobiera automatycznie stosowane do danych obiektów tego typu.</xref:System.Windows.DataTemplate> Należy pamiętać, że po wykonaniu tych `x:Key` jest ustawiane niejawnie. W związku z tym po przypisaniu to <xref:System.Windows.DataTemplate> `x:Key` wartości są zastępowanie niejawne `x:Key` i <xref:System.Windows.DataTemplate>nie będzie można automatycznie zastosować.</xref:System.Windows.DataTemplate> </xref:System.Windows.DataTemplate>       Należy również zauważyć, że są wiązane <xref:System.Windows.Controls.ContentControl>do kolekcji `Task` obiektów, <xref:System.Windows.Controls.ContentControl>nie używa <xref:System.Windows.DataTemplate>automatycznie.</xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ContentControl> </xref:System.Windows.Controls.ContentControl> Jest to spowodowane powiązania w <xref:System.Windows.Controls.ContentControl>potrzebuje dodatkowych informacji w celu odróżnienia czy chcesz powiązać całą kolekcję lub pojedyncze obiekty.</xref:System.Windows.Controls.ContentControl> Jeśli Twoje <xref:System.Windows.Controls.ContentControl>służy do śledzenia wybór <xref:System.Windows.Controls.ItemsControl>typu, możesz ustawić <xref:System.Windows.Data.Binding.Path%2A>Właściwość <xref:System.Windows.Controls.ContentControl>powiązanie z &quot;`/`&quot; Aby wskazać, że jesteś zainteresowany w bieżącym elemencie.</xref:System.Windows.Controls.ContentControl> </xref:System.Windows.Data.Binding.Path%2A> </xref:System.Windows.Controls.ItemsControl> </xref:System.Windows.Controls.ContentControl> Na przykład zobacz [porady: powiązanie do zbierania i wyświetlania informacji na podstawie zaznaczenia](~/add/includes/ajax-current-ext-md.md). W przeciwnym razie należy określić <xref:System.Windows.DataTemplate>jawnie ustawiając <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A>Właściwości.</xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> </xref:System.Windows.DataTemplate>       Właściwość DataType jest szczególnie przydatne w przypadku <xref:System.Windows.Data.CompositeCollection>różnych typów obiektów danych.</xref:System.Windows.Data.CompositeCollection>       Jeśli ta właściwość jest przeznaczony dla elementu XML, który nie znajduje się w domyślnej przestrzeni nazw, należy poprzedzić nazwy elementu z przestrzeni nazw lub oznaczeniem przestrzeni nazw. XML za pośrednictwem LINQ dla pliku XML, przestrzeń nazw zostanie wyświetlona w nawiasach klamrowych, poprzedzone sekwencji unikowej nawiasu klamrowego: ```xaml   <DataTemplate DataType=&quot;{}{http://myNamespace}Details&quot;>   ``` For XML za pośrednictwem XPath, nazwa elementu jest poprzedzony desygnator przestrzeni nazw ustanowionych przez wystąpienie <xref:System.Windows.Data.XmlNamespaceMapping>: ```xaml   <DataTemplate DataType=&quot;mn:Details&quot;>   ``` <a name=&quot;xamlAttributeUsage_DataType&quot;> </a> ## użycie atrybutu XAML ```   <object DataType=&quot;typeName&quot;/>   ``` <a name=&quot;xamlValues_DataType&quot;> </a> ## wartości XAML *typeName* Jeśli szablon jest przeznaczony dla obiekt danych, ta właściwość zawiera nazwę typu obiektu danych (jako ciąg).            </xref:System.Windows.Data.XmlNamespaceMapping> Aby odwołać się do nazwy typu klasy, należy użyć [x: Type — rozszerzenie znaczników](~/add/includes/ajax-current-ext-md.md). Jeśli szablon jest przeznaczony dla [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] danych, ta właściwość zawiera nazwę elementu XML. Zobacz uwagi dokumentacji szczegółowe informacje o określaniu z systemem innym niż domyślny obszar nazw dla elementu XML."
  syntax:
    content: public object DataType { get; set; }
    return:
      type: System.Object
      description: "Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DataTemplate.DataType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.Triggers
  id: Triggers
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: Triggers
  nameWithType: DataTemplate.Triggers
  fullName: System.Windows.DataTemplate.Triggers
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera kolekcję wyzwalacze, które stosowanie wartości właściwości lub wykonania akcji w oparciu o co najmniej jeden warunek."
  remarks: "Jeśli tworzysz Wyzwalacze w szablonie danych metod ustawiających wyzwalacze powinien ustawienie właściwości, które znajdują się w zakresie szablonu danych. W przeciwnym razie może być odpowiedniejsze można utworzyć wyzwalaczy przy użyciu stylu, przeznaczonego dla typu, który zawiera dane. Na przykład, jeśli są powiązanie <xref:System.Windows.Controls.ListBox>kontroli, kontenery są <xref:System.Windows.Controls.ListBoxItem>obiektów.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Controls.ListBox> Jeśli używasz wyzwalaczy można ustawić właściwości, które nie są w zakresie <xref:System.Windows.DataTemplate>, może być bardziej odpowiednie do utworzenia <xref:System.Windows.Controls.ListBoxItem>styl i Utwórz Wyzwalacze w stylu.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.DataTemplate> Aby uzyskać więcej informacji zobacz, co należy w szablonie danych? w [omówienie tworzenia szablonów danych](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Tej właściwości można ustawić tylko [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] za pomocą składni kolekcji pokazano lub uzyskiwania dostępu do obiektu kolekcji i używając jej różnych metod, takich jak dodawanie. Właściwość do samego obiektu kolekcji jest tylko do odczytu, sama kolekcja odczytu i zapisu.      <a name=&quot;xamlPropertyElementUsage_Triggers&quot;></a>## Użycie elementu właściwości języka XAML ```   <object>     <object.Triggers>       OneOrMoreTriggers     </object.Triggers>   </object>   ``` <a name=&quot;xamlValues_Triggers&quot;> </a> ## wartości XAML *OneOrMoreTriggers* Zero lub więcej <xref:System.Windows.TriggerBase>obiektów.</xref:System.Windows.TriggerBase>      "
  example:
  - "The following <xref:System.Windows.DataTemplate> demonstrates the use of the Triggers property.  \n  \n [!code-xml[DataBindingLab#AuctionItemDataTemplate](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#auctionitemdatatemplate)]  \n  \n For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public System.Windows.TriggerCollection Triggers { get; }
    return:
      type: System.Windows.TriggerCollection
      description: "Kolekcja obiektów wyzwalacza. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DataTemplate.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  id: ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: DataTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.DataTemplate.ValidateTemplatedParent(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Sprawdza, czy opartego na szablonie nadrzędnego pod kątem zestawu reguł."
  remarks: "Metody stosowane są następujące reguły: - `templatedParent` musi być <xref:System.Windows.FrameworkElement>.</xref:System.Windows.FrameworkElement> inną niż null      <xref:System.Windows.DataTemplate>Należy zastosować do <xref:System.Windows.Controls.ContentPresenter>.</xref:System.Windows.Controls.ContentPresenter> </xref:System.Windows.DataTemplate>"
  syntax:
    content: protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);
    parameters:
    - id: templatedParent
      type: System.Windows.FrameworkElement
      description: "Element ten szablon jest stosowany do."
  overload: System.Windows.DataTemplate.ValidateTemplatedParent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.FrameworkTemplate
  isExternal: false
  name: System.Windows.FrameworkTemplate
- uid: System.Windows.DataTemplate.#ctor
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate()
  nameWithType: DataTemplate.DataTemplate()
  fullName: System.Windows.DataTemplate.DataTemplate()
- uid: System.Windows.DataTemplate.#ctor(System.Object)
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate(Object)
  nameWithType: DataTemplate.DataTemplate(Object)
  fullName: System.Windows.DataTemplate.DataTemplate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DataTemplate.DataTemplateKey
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
  fullName: System.Windows.DataTemplate.DataTemplateKey
- uid: System.Windows.DataTemplate.DataType
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataType
  nameWithType: DataTemplate.DataType
  fullName: System.Windows.DataTemplate.DataType
- uid: System.Windows.DataTemplate.Triggers
  parent: System.Windows.DataTemplate
  isExternal: false
  name: Triggers
  nameWithType: DataTemplate.Triggers
  fullName: System.Windows.DataTemplate.Triggers
- uid: System.Windows.TriggerCollection
  parent: System.Windows
  isExternal: false
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.TriggerCollection
- uid: System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.DataTemplate
  isExternal: false
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: DataTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.DataTemplate.ValidateTemplatedParent(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.DataTemplate.#ctor*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate
  nameWithType: DataTemplate.DataTemplate
- uid: System.Windows.DataTemplate.DataTemplateKey*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
- uid: System.Windows.DataTemplate.DataType*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataType
  nameWithType: DataTemplate.DataType
- uid: System.Windows.DataTemplate.Triggers*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: Triggers
  nameWithType: DataTemplate.Triggers
- uid: System.Windows.DataTemplate.ValidateTemplatedParent*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: ValidateTemplatedParent
  nameWithType: DataTemplate.ValidateTemplatedParent
