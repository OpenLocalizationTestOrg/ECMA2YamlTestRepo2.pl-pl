### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebEventProvider
  id: WebEventProvider
  children:
  - System.Web.Management.WebEventProvider.#ctor
  - System.Web.Management.WebEventProvider.Flush
  - System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebEventProvider.Shutdown
  langs:
  - csharp
  name: WebEventProvider
  nameWithType: WebEventProvider
  fullName: System.Web.Management.WebEventProvider
  type: Class
  summary: "Udostępnia klasę podstawową dla dostawców innych niż buforowanego zdarzeń."
  remarks: "Monitorowanie kondycji ASP.NET umożliwia pracownikom produkcyjnego i operacji zarządzania wdrożonej aplikacji sieci Web. <xref:System.Web.Management>Przestrzeń nazw zawiera typy zdarzeń kondycji odpowiedzialnych za tworzenie pakietów danych stanu kondycji aplikacji i typów dostawcy odpowiedzialna za przetwarzanie tych danych.</xref:System.Web.Management> Zawiera ona także pomocnicze typy, które pomagają w trakcie zarządzania zdarzenia kondycji.       Jeśli chcesz dostosować przetwarzania kondycji zdarzenie, może pochodzić z klasy WebEventProvider w celu utworzenia niestandardowego dostawcy.      > [!NOTE] > W większości przypadków będzie można korzystać z typów monitorowanie kondycji programu ASP.NET, zgodnie z implementacją i sterowania monitorowanie kondycji systemu, podając wartości w `healthMonitoring` sekcji konfiguracji. Można również pochodną typy monitorowanie kondycji, aby utworzyć własne niestandardowe zdarzenia i dostawców. Przykład tworzenia klasy pochodnej z klasy WebEventProvider Zobacz przykład podane w tym temacie."
  example:
  - "The following code example shows how to derive from the WebEventProvider class to create a custom provider that writes the configured events to a local file for which appropriate access rights must be granted. This custom provider example is simple and its main intent is to give you as developer full control of its basic mechanisms. In a real-world scenario, you could use this provider and especially the example buffered provider available at <xref:System.Web.Management.BufferedWebEventProvider>, as a preliminary probe into the behavior of an application. This can help you during the design stage to gain an understanding of the information available; then later you can direct this information to a more complex provider.  \n  \n The following configuration file excerpt shows a `healthMonitoring` section configuration that enables ASP.NET to use the custom provider defined above to process all health-monitoring events.  \n  \n```  \n<healthMonitoring   \n  heartBeatInterval=\"0\"   \n  enabled=\"true\">  \n  \n    <providers>  \n  \n      <add name=\"SampleWebEventProvider\"   \n        type=\"SamplesAspNet.SampleEventProvider,webeventprovider, Version=1.0.1773.33989, Culture=neutral, PublicKeyToken=cf85aa6c978d9dea, processorArchitecture=MSIL\" />  \n  \n    </providers>  \n  \n    <rules>  \n  \n      <rule   \n        name=\"Custom Event Provider\"  \n        eventName=\"All Events\"  \n        provider=\"SampleWebEventProvider\"  \n        profile=\"Default\" />  \n    </rules>  \n  \n</healthMonitoring>  \n```  \n  \n [!code-vb[System.Web.Management.WebEventProvider#1](~/add/codesnippet/visualbasic/t-system.web.management._8_1.vb)]\n [!code-cs[System.Web.Management.WebEventProvider#1](~/add/codesnippet/csharp/t-system.web.management._8_1.cs)]"
  syntax:
    content: 'public abstract class WebEventProvider : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.WebEventProvider.#ctor
  id: '#ctor'
  parent: System.Web.Management.WebEventProvider
  langs:
  - csharp
  name: WebEventProvider()
  nameWithType: WebEventProvider.WebEventProvider()
  fullName: System.Web.Management.WebEventProvider.WebEventProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Management.WebEventProvider&quot;> </xref> klasy."
  remarks: "Konstruktor WebEventProvider nie jest przeznaczona do użycia bezpośrednio w kodzie. Jest ona wywoływana przez program ASP.NET. Można wywołać konstruktora WebEventProvider w przypadku tworzenia klasy pochodnej z <xref:System.Web.Management.WebEventProvider>klasy.</xref:System.Web.Management.WebEventProvider>"
  example:
  - "The following code example shows how to use this constructor in a custom event provider.  \n  \n [!code-vb[System.Web.Management.WebEventProvider#2](~/add/codesnippet/visualbasic/m-system.web.management._4_1.vb)]\n [!code-cs[System.Web.Management.WebEventProvider#2](~/add/codesnippet/csharp/m-system.web.management._4_1.cs)]"
  syntax:
    content: protected WebEventProvider ();
    parameters: []
  overload: System.Web.Management.WebEventProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.WebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: WebEventProvider.Flush()
  fullName: System.Web.Management.WebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Przenosi zdarzenia z buforu dostawcy do dziennika zdarzeń."
  remarks: "Gdy ta metoda jest wywoływana, wszystkie zdarzenia w buforze od razu są przenoszone z buforu w dzienniku zdarzeń, niezależnie od tego, ile czasu upłynął od ostatniego zapisu lub liczbę zdarzeń znajdują się w buforze. Czas ostatniego zapisu jest resetowany do czasu opróżniania akcji."
  example:
  - "The following code example shows how to use the Flush method.  \n  \n [!code-vb[System.Web.Management.WebEventProvider#3](~/add/codesnippet/visualbasic/m-system.web.management._8_1.vb)]\n [!code-cs[System.Web.Management.WebEventProvider#3](~/add/codesnippet/csharp/m-system.web.management._8_1.cs)]"
  syntax:
    content: public abstract void Flush ();
    parameters: []
  overload: System.Web.Management.WebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.WebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: WebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.WebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Przetwarza zdarzenia przekazywane do dostawcy."
  remarks: "Jest to metoda, że monitorowanie kondycji programu ASP.NET wymaga przetwarzania zdarzenia."
  example:
  - "The following code example shows how to implement the ProcessEvent method. This method appends the customized string representation of the event to a specific log file.  \n  \n [!code-vb[System.Web.Management.WebEventProvider#5](~/add/codesnippet/visualbasic/c7aedb1e-f1f1-4da6-99cd-_1.vb)]\n [!code-cs[System.Web.Management.WebEventProvider#5](~/add/codesnippet/csharp/c7aedb1e-f1f1-4da6-99cd-_1.cs)]"
  syntax:
    content: public abstract void ProcessEvent (System.Web.Management.WebBaseEvent raisedEvent);
    parameters:
    - id: raisedEvent
      type: System.Web.Management.WebBaseEvent
      description: "<xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref> Obiekt do procesu."
  overload: System.Web.Management.WebEventProvider.ProcessEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.WebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: WebEventProvider.Shutdown()
  fullName: System.Web.Management.WebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Wykonuje zadania skojarzone z zamykanie dostawcy."
  remarks: "Wywołania ASP.NET <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A>metody, gdy domena aplikacji hosting aplikacji sieci Web zakończenie.</xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> Metoda jest wywoływana do wykonywania zadań, które umożliwią aplikacji do końca bezpiecznie, np. zamknięcie zasobów."
  example:
  - "The following code example shows how to use the Shutdown method.  \n  \n [!code-vb[System.Web.Management.WebEventProvider#4](~/add/codesnippet/visualbasic/m-system.web.management._0_1.vb)]\n [!code-cs[System.Web.Management.WebEventProvider#4](~/add/codesnippet/csharp/m-system.web.management._0_1.cs)]"
  syntax:
    content: public abstract void Shutdown ();
    parameters: []
  overload: System.Web.Management.WebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Web.Management.WebEventProvider.#ctor
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: WebEventProvider()
  nameWithType: WebEventProvider.WebEventProvider()
  fullName: System.Web.Management.WebEventProvider.WebEventProvider()
- uid: System.Web.Management.WebEventProvider.Flush
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: WebEventProvider.Flush()
  fullName: System.Web.Management.WebEventProvider.Flush()
- uid: System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: WebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.WebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.WebEventProvider.Shutdown
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: WebEventProvider.Shutdown()
  fullName: System.Web.Management.WebEventProvider.Shutdown()
- uid: System.Web.Management.WebEventProvider.#ctor*
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: WebEventProvider
  nameWithType: WebEventProvider.WebEventProvider
- uid: System.Web.Management.WebEventProvider.Flush*
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: Flush
  nameWithType: WebEventProvider.Flush
- uid: System.Web.Management.WebEventProvider.ProcessEvent*
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: WebEventProvider.ProcessEvent
- uid: System.Web.Management.WebEventProvider.Shutdown*
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: WebEventProvider.Shutdown
