### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter
  id: AsymmetricSignatureFormatter
  children:
  - System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor
  - System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Byte[])
  - System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)
  - System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(System.String)
  - System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  langs:
  - csharp
  name: AsymmetricSignatureFormatter
  nameWithType: AsymmetricSignatureFormatter
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter
  type: Class
  summary: "Reprezentuje klasę podstawową, z którego pochodzi implementacje wszystkich programów formatujących podpisu asymetrycznego."
  remarks: "Podpisu asymetrycznego programy formatujące tworzą podpisy cyfrowe, które są weryfikowane przy użyciu implementacji <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter>.</xref:System.Security.Cryptography.AsymmetricSignatureDeformatter>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class AsymmetricSignatureFormatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  langs:
  - csharp
  name: AsymmetricSignatureFormatter()
  nameWithType: AsymmetricSignatureFormatter.AsymmetricSignatureFormatter()
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.AsymmetricSignatureFormatter()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.AsymmetricSignatureFormatter&quot;> </xref>."
  remarks: "Nie można utworzyć wystąpienia klasy abstrakcyjnej. Kod aplikacji utworzy nowe wystąpienie klasy pochodnej.       Użyć implementacji i <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey%2A> <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm%2A>ustawić algorytm klucza i wyznaczania wartości skrótu przed wywołaniem implementacja <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A>.</xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A> </xref:System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm%2A> </xref:System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey%2A>"
  syntax:
    content: protected AsymmetricSignatureFormatter ();
    parameters: []
  overload: System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Byte[])
  id: CreateSignature(System.Byte[])
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  langs:
  - csharp
  name: CreateSignature(Byte[])
  nameWithType: AsymmetricSignatureFormatter.CreateSignature(Byte[])
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "W przypadku przesłonięcia w klasie pochodnej tworzy podpis dla określonych danych."
  remarks: "Przed wywołaniem tej metody należy określić klucz i algorytm wyznaczania wartości skrótu."
  syntax:
    content: public abstract byte[] CreateSignature (byte[] rgbHash);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "Dane były podpisane."
    return:
      type: System.Byte[]
      description: "Podpis cyfrowy dla <code> rgbHash </code> parametru."
  overload: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)
  id: CreateSignature(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  langs:
  - csharp
  name: CreateSignature(HashAlgorithm)
  nameWithType: AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Tworzy podpisu na podstawie wartości skrótu określonej."
  remarks: "Ta metoda ustawia wartość skrótu algorytmu mają być używane, zwraca podpis wejściowy algorytm mieszania."
  syntax:
    content: public virtual byte[] CreateSignature (System.Security.Cryptography.HashAlgorithm hash);
    parameters:
    - id: hash
      type: System.Security.Cryptography.HashAlgorithm
      description: "Algorytm wyznaczania wartości skrótu służące do tworzenia podpisu."
    return:
      type: System.Byte[]
      description: "Podpis dla skrótu określonej wartości."
  overload: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>hash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(System.String)
  id: SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  langs:
  - csharp
  name: SetHashAlgorithm(String)
  nameWithType: AsymmetricSignatureFormatter.SetHashAlgorithm(String)
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "W przypadku przesłonięcia w klasie pochodnej, ustawia algorytmu wyznaczania wartości skrótu do użycia na potrzeby tworzenia podpisu."
  remarks: "Należy ustawić przed wywołaniem implementacja <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A>.</xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A> algorytmu wyznaczania wartości skrótu"
  syntax:
    content: public abstract void SetHashAlgorithm (string strName);
    parameters:
    - id: strName
      type: System.String
      description: "Nazwa algorytmu wyznaczania wartości skrótu do użycia na potrzeby tworzenia podpisu."
  overload: System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  langs:
  - csharp
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: AsymmetricSignatureFormatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "W przypadku przesłonięcia w klasie pochodnej, ustawia algorytmu asymetrycznego służące do tworzenia podpisu."
  remarks: "Klucz należy ustawić przed wywołaniem implementacja <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A>.</xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A>"
  syntax:
    content: public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Wystąpienie implementacji <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> służące do tworzenia podpisu."
  overload: System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  isExternal: false
  name: AsymmetricSignatureFormatter()
  nameWithType: AsymmetricSignatureFormatter.AsymmetricSignatureFormatter()
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.AsymmetricSignatureFormatter()
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Byte[])
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  isExternal: false
  name: CreateSignature(Byte[])
  nameWithType: AsymmetricSignatureFormatter.CreateSignature(Byte[])
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  isExternal: false
  name: CreateSignature(HashAlgorithm)
  nameWithType: AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  isExternal: false
  name: SetHashAlgorithm(String)
  nameWithType: AsymmetricSignatureFormatter.SetHashAlgorithm(String)
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  isExternal: false
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: AsymmetricSignatureFormatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor*
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  isExternal: false
  name: AsymmetricSignatureFormatter
  nameWithType: AsymmetricSignatureFormatter.AsymmetricSignatureFormatter
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature*
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  isExternal: false
  name: CreateSignature
  nameWithType: AsymmetricSignatureFormatter.CreateSignature
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm*
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  isExternal: false
  name: SetHashAlgorithm
  nameWithType: AsymmetricSignatureFormatter.SetHashAlgorithm
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey*
  parent: System.Security.Cryptography.AsymmetricSignatureFormatter
  isExternal: false
  name: SetKey
  nameWithType: AsymmetricSignatureFormatter.SetKey
