### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.MessageFilter
  id: MessageFilter
  children:
  - System.ServiceModel.Dispatcher.MessageFilter.#ctor
  - System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  - System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: MessageFilter
  nameWithType: MessageFilter
  fullName: System.ServiceModel.Dispatcher.MessageFilter
  type: Class
  summary: "<xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;></xref>Klasa podstawowa dla różnych klas filtry używane do wiadomości zapytania."
  remarks: "Jest MessageFilter `abstract` klasy które implementują deweloperzy celu Określ kryteria używane do sprawdzania wiadomości. Zazwyczaj filtry są używane przez aplikację punktu końcowego do określenia, jakie z komunikatu na podstawie badania niektórych części wiadomości. Proces kolejkowania, na przykład można użyć zapytania XPath 1.0 do sprawdzenia elementu priority znane nagłówka do ustalenia, czy można przenieść komunikatu z przodu kolejki.       Filtry są przechowywane w tabeli filtr, który implementuje <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> Każdy filtr w tabeli jest skojarzony z danymi określony filtr, który może służyć wskaż, jakie akcje do wykonania, jeśli komunikat jest zgodny z filtrem. <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A>Metody są używane do określania, jeśli wiadomość ma spełnia filtru.</xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A>       Nie można zmienić kryteria używane w filtrze, gdy filtr jest tworzony, ponieważ tabele filtru nie ma możliwości wykrywa zmian. Jedynym sposobem, aby zmodyfikować kryteria filtru jest utworzyć nowy i usuń istniejący filtr.       Następujące klasy wdrożenie `abstract`klasy MessageFilter:- <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>do określ kryteria dopasowanie używane wyrażenie XPath 1.0.</xref:System.ServiceModel.Dispatcher.XPathMessageFilter>      - <xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter>dopasowuje wszystkie komunikaty.</xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter>      - <xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter>odpowiada żadna wiadomość.</xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter>      - <xref:System.ServiceModel.Dispatcher.ActionMessageFilter>sprawdza, czy akcja komunikatu jest jednym z określonego zestawu działań.</xref:System.ServiceModel.Dispatcher.ActionMessageFilter>      - <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>sprawdzenie, czy wiadomość spełnia adres określony punkt końcowy.</xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter>       <xref:System.ServiceModel.Channels.ChannelListenerBase%601>jest `abstract` podstawowa klasa, która służy do pisania-kolejkowania odbiorników.</xref:System.ServiceModel.Channels.ChannelListenerBase%601>"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))]

      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))]

      public abstract class MessageFilter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: MessageFilter()
  nameWithType: MessageFilter.MessageFilter()
  fullName: System.ServiceModel.Dispatcher.MessageFilter.MessageFilter()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Wywołanego w klasie pochodnej inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.Dispatcher.MessageFilter&quot;> </xref> klasy."
  remarks: "Konstruktor jest chroniony tak, aby tylko filtry pochodzi od <xref:System.ServiceModel.Dispatcher.MessageFilter>można utworzyć wystąpienia.</xref:System.ServiceModel.Dispatcher.MessageFilter>"
  syntax:
    content: protected MessageFilter ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.MessageFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  id: CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: CreateFilterTable()
  nameWithType: MessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  syntax:
    content: protected virtual System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData> CreateFilterTable<FilterData> ();
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
      description: "Do dodania."
  overload: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable<FilterData>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  id: Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: Match(Message)
  nameWithType: MessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.MessageFilter.Match(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "W przypadku przesłonięcia w klasie pochodnej, sprawdzenie, czy wiadomość spełnia kryteria filtrowania. Nie można zbadać treści."
  remarks: "Ta metoda nie może sprawdzić zawartość treści wiadomości."
  syntax:
    content: public abstract bool Match (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>Obiekt do testu.</xref:System.ServiceModel.Channels.Message>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.ServiceModel.Channels.Message>obiektu spełnia kryteria filtru; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Dispatcher.MessageFilter.Match*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  id: Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  langs:
  - csharp
  name: Match(MessageBuffer)
  nameWithType: MessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageFilter.Match(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "W przypadku przesłonięcia w klasie pochodnej, sprawdza, czy buforowanego wiadomości nie będzie spełniał kryteriów filtru."
  remarks: "Wiadomość musi w pełni buforowane, jeśli treść jest poddanych przez filtr. Treść <xref:System.ServiceModel.Channels.MessageBuffer>jest w pełni buforowane i mogą być kontrolowane przez filtr krotki.</xref:System.ServiceModel.Channels.MessageBuffer> Treść <xref:System.ServiceModel.Channels.Message>została pełni buforowane mogą być używane przez filtr inspekcji.</xref:System.ServiceModel.Channels.Message> Element nagłówka <xref:System.ServiceModel.Channels.Message>są automatycznie buforowane i mogą być kontrolowane bez wykorzystany.</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);
    parameters:
    - id: buffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "<xref:System.ServiceModel.Channels.MessageBuffer>Obiekt do testu.</xref:System.ServiceModel.Channels.MessageBuffer>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.ServiceModel.Channels.MessageBuffer>obiektu spełnia kryteria filtru; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Channels.MessageBuffer>"
  overload: System.ServiceModel.Dispatcher.MessageFilter.Match*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: MessageFilter()
  nameWithType: MessageFilter.MessageFilter()
  fullName: System.ServiceModel.Dispatcher.MessageFilter.MessageFilter()
- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: CreateFilterTable()
  nameWithType: MessageFilter.CreateFilterTable()
  fullName: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable()
- uid: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: IMessageFilterTable<FilterData>
  nameWithType: IMessageFilterTable<FilterData>
  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData>
  spec.csharp:
  - uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1
    name: IMessageFilterTable
    nameWithType: IMessageFilterTable
    fullName: IMessageFilterTable<FilterData>
  - name: <
    nameWithType: <
    fullName: <
  - uid: FilterData
    name: FilterData
    nameWithType: FilterData
    fullName: FilterData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: Match(Message)
  nameWithType: MessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.MessageFilter.Match(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: Match(MessageBuffer)
  nameWithType: MessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.MessageFilter.Match(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor*
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: MessageFilter
  nameWithType: MessageFilter.MessageFilter
- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable<FilterData>*
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: CreateFilterTable<FilterData>
  nameWithType: MessageFilter.CreateFilterTable<FilterData>
- uid: System.ServiceModel.Dispatcher.MessageFilter.Match*
  parent: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: Match
  nameWithType: MessageFilter.Match
