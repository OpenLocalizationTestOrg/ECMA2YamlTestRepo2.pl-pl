### YamlMime:ManagedReference
items:
- uid: System.Configuration.GenericEnumConverter
  id: GenericEnumConverter
  children:
  - System.Configuration.GenericEnumConverter.#ctor(System.Type)
  - System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: GenericEnumConverter
  nameWithType: GenericEnumConverter
  fullName: System.Configuration.GenericEnumConverter
  type: Class
  summary: "Wykonuje konwersję między ciągu i typem wyliczenia."
  remarks: "Ten typ, takich jak wszystkich innych konfiguracji konwertera typów, konwertuje znaleziono w pliku konfiguracji do i z powiązane właściwości jednoznacznie ciągów.       W szczególności Konwertuje obiekt GenericEnumConverter <xref:System.String>wartość przypisana do właściwości konfiguracji do <xref:System.Enum>wartość i na odwrót.</xref:System.Enum> </xref:System.String>"
  example:
  - "The following code example shows how to access a custom section property that uses the GenericEnumConverter type.  \n  \n [!code-cs[System.Configuration.GenericEnumConverter#1](~/add/codesnippet/csharp/t-system.configuration.g_1.cs)]\n [!code-vb[System.Configuration.GenericEnumConverter#1](~/add/codesnippet/visualbasic/t-system.configuration.g_1.vb)]  \n  \n The following code example shows how to define a custom enumerator property accessed in the previous example. Notice that there is no need to specify the GenericEnumConverter type; it is implicitly invoked by the system.  \n  \n [!code-cs[System.Configuration.ConfigurationConvertersCustomSection#5](~/add/codesnippet/csharp/t-system.configuration.g_2.cs)]\n [!code-vb[System.Configuration.ConfigurationConvertersCustomSection#5](~/add/codesnippet/visualbasic/t-system.configuration.g_2.vb)]  \n  \n The following example is a configuration excerpt used by the previous example.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n  \n  <configSections>  \n    <section name=\"CustomSection\"   \n      type=\"Samples.AspNet.CustomSection,   \n      ConfigurationConverters,   \n      Version=1.0.0.0, Culture=neutral,   \n      PublicKeyToken=null\"   \n      allowDefinition=\"Everywhere\"   \n      allowExeDefinition=\"MachineToApplication\"   \n      restartOnExternalChanges=\"true\" />  \n  </configSections>  \n  \n  <CustomSection fileName=\"default.txt\" maxIdleTime=\"90\" timeDelay=\"infinite\" cdStr=\"str0, str1\" permission=\"Read\" maxUsers=\"Infinite\"/>  \n  \n</configuration>  \n```"
  syntax:
    content: 'public sealed class GenericEnumConverter : System.Configuration.ConfigurationConverterBase'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.Configuration.ConfigurationConverterBase
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  - System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  platform:
  - net462
- uid: System.Configuration.GenericEnumConverter.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Configuration.GenericEnumConverter
  langs:
  - csharp
  name: GenericEnumConverter(Type)
  nameWithType: GenericEnumConverter.GenericEnumConverter(Type)
  fullName: System.Configuration.GenericEnumConverter.GenericEnumConverter(Type)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Configuration.GenericEnumConverter&quot;> </xref> klasy."
  remarks: "Zwykle, można użyć typów konwertera obsługiwanych przez system. Tylko wtedy, należy użyć konstruktora GenericEnumConverter jest podczas tworzenia własnych konwersji typu."
  syntax:
    content: public GenericEnumConverter (Type typeEnum);
    parameters:
    - id: typeEnum
      type: System.Type
      description: "Typ wyliczeniowy do konwersji."
  overload: System.Configuration.GenericEnumConverter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeEnum</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Configuration.GenericEnumConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: GenericEnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Configuration.GenericEnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Konwertuje <xref:System.String>do <xref:System.Enum>typu.</xref:System.Enum> </xref:System.String>"
  remarks: "System używa metody ConvertFrom w trakcie odczytywania z pliku konfiguracji, aby przekonwertować <xref:System.String>do wartości <xref:System.Enum>typu.</xref:System.Enum> </xref:System.String>"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> Obiekt używany do konwersji typu."
    - id: ci
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>Obiekt używany podczas konwersji.</xref:System.Globalization.CultureInfo>"
    - id: data
      type: System.Object
      description: "<xref:System.String>Obiektu do skonwertowania.</xref:System.String>"
    return:
      type: System.Object
      description: "<xref:System.Enum>Typ, który reprezentuje <code> data </code> parametru.</xref:System.Enum>"
  overload: System.Configuration.GenericEnumConverter.ConvertFrom*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>data</code> is null or an empty string (\"\").  \n  \n \\- or -  \n  \n <code>data</code> starts with a numeric character.  \n  \n \\- or -  \n  \n <code>data</code> includes white space."
  platform:
  - net462
- uid: System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Configuration.GenericEnumConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: GenericEnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Configuration.GenericEnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Konwertuje <xref:System.Enum>typ <xref:System.String>wartość.</xref:System.String> </xref:System.Enum>"
  remarks: "System używa metody ConvertTo podczas zapisuje w pliku konfiguracji, aby przekonwertować <xref:System.Enum>typ <xref:System.String>wartość.</xref:System.String> </xref:System.Enum>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> Obiekt używany do konwersji typu."
    - id: ci
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>Obiekt używany podczas konwersji.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "Wartość do przekonwertowania na."
    - id: type
      type: System.Type
      description: "Typ docelowy konwersji."
    return:
      type: System.Object
      description: "<xref:System.String>Reprezentujący <code> value </code> parametru.</xref:System.String>"
  overload: System.Configuration.GenericEnumConverter.ConvertTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationConverterBase
  isExternal: false
  name: System.Configuration.ConfigurationConverterBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.GenericEnumConverter.#ctor(System.Type)
  parent: System.Configuration.GenericEnumConverter
  isExternal: false
  name: GenericEnumConverter(Type)
  nameWithType: GenericEnumConverter.GenericEnumConverter(Type)
  fullName: System.Configuration.GenericEnumConverter.GenericEnumConverter(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Configuration.GenericEnumConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: GenericEnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Configuration.GenericEnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Configuration.GenericEnumConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: GenericEnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Configuration.GenericEnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Configuration.GenericEnumConverter.#ctor*
  parent: System.Configuration.GenericEnumConverter
  isExternal: false
  name: GenericEnumConverter
  nameWithType: GenericEnumConverter.GenericEnumConverter
- uid: System.Configuration.GenericEnumConverter.ConvertFrom*
  parent: System.Configuration.GenericEnumConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: GenericEnumConverter.ConvertFrom
- uid: System.Configuration.GenericEnumConverter.ConvertTo*
  parent: System.Configuration.GenericEnumConverter
  isExternal: false
  name: ConvertTo
  nameWithType: GenericEnumConverter.ConvertTo
