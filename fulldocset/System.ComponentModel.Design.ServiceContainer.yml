### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ServiceContainer
  id: ServiceContainer
  children:
  - System.ComponentModel.Design.ServiceContainer.#ctor
  - System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  - System.ComponentModel.Design.ServiceContainer.DefaultServices
  - System.ComponentModel.Design.ServiceContainer.Dispose
  - System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  - System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  - System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  - System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  langs:
  - csharp
  name: ServiceContainer
  nameWithType: ServiceContainer
  fullName: System.ComponentModel.Design.ServiceContainer
  type: Class
  summary: "Udostępnia implementację prostego <xref href=&quot;System.ComponentModel.Design.IServiceContainer&quot;> </xref> interfejsu. Ta klasa nie może być dziedziczona."
  remarks: "Obiekt kontenera usług ServiceContainer może służyć do przechowywania i świadczenia usług. Implementuje kontenera usług ServiceContainer <xref:System.ComponentModel.Design.IServiceContainer>interfejsu.</xref:System.ComponentModel.Design.IServiceContainer>       Obiekt kontenera usług ServiceContainer można utworzyć za pomocą konstruktora, który dodaje nadrzędnej <xref:System.ComponentModel.Design.IServiceContainer>za pośrednictwem której usług można opcjonalnie dodawać lub usuwane z <xref:System.ComponentModel.Design.IServiceContainer>obiektów, łącznie z bezpośrednim nadrzędnej <xref:System.ComponentModel.Design.IServiceContainer>.</xref:System.ComponentModel.Design.IServiceContainer> </xref:System.ComponentModel.Design.IServiceContainer> wszystkie nadrzędne</xref:System.ComponentModel.Design.IServiceContainer> Aby dodać lub usunąć usługi ze wszystkich <xref:System.ComponentModel.Design.IServiceContainer>implementacji, które są połączone z tym <xref:System.ComponentModel.Design.IServiceContainer>przez element nadrzędny, należy wywołać <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A>lub <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A>przeciążenie metody, który przyjmuje wartość logiczną wskazującą, czy do promowania żądania obsługi.</xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> </xref:System.ComponentModel.Design.ServiceContainer.AddService%2A> </xref:System.ComponentModel.Design.IServiceContainer> </xref:System.ComponentModel.Design.IServiceContainer>      > [!NOTE] > <xref:System.Security.Permissions.HostProtectionAttribute>Atrybut zastosowany do ta klasa zawiera następujące <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A>wartość właściwości: <xref:System.Security.Permissions.HostProtectionResource>.</xref:System.Security.Permissions.HostProtectionResource> </xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> </xref:System.Security.Permissions.HostProtectionAttribute> <xref:System.Security.Permissions.HostProtectionAttribute>Nie wpływa na aplikacje klasyczne (które typowo są uruchamiane przez dwukrotne kliknięcie ikony, wpisanie polecenia lub wprowadzenie adresu URL w przeglądarce).</xref:System.Security.Permissions.HostProtectionAttribute> Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.HostProtectionAttribute>klasy lub [atrybuty ochrony hosta i programowanie programu SQL Server](~/add/includes/ajax-current-ext-md.md).</xref:System.Security.Permissions.HostProtectionAttribute>"
  example:
  - "The following example program demonstrates service chaining and the resultant service availability of a chain of linked ServiceContainer objects. The program provides a user interface that allows you to see the availability of services within a chain of linked services, and uses the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A>, <xref:System.ComponentModel.Design.ServiceContainer.GetService%2A>, and <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> methods as well as linked service containers.  \n  \n [!code-cpp[ServiceArchitectureExample#1](~/add/codesnippet/cpp/t-system.componentmodel._126_1.cpp)]\n [!code-vb[ServiceArchitectureExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._126_1.vb)]\n [!code-cs[ServiceArchitectureExample#1](~/add/codesnippet/csharp/t-system.componentmodel._126_1.cs)]"
  syntax:
    content: 'public class ServiceContainer : IDisposable, IServiceProvider, System.ComponentModel.Design.IServiceContainer'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.Design.IServiceContainer
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: ServiceContainer()
  nameWithType: ServiceContainer.ServiceContainer()
  fullName: System.ComponentModel.Design.ServiceContainer.ServiceContainer()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.Design.ServiceContainer&quot;> </xref> klasy."
  syntax:
    content: public ServiceContainer ();
    parameters: []
  overload: System.ComponentModel.Design.ServiceContainer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: ServiceContainer(IServiceProvider)
  nameWithType: ServiceContainer.ServiceContainer(IServiceProvider)
  fullName: System.ComponentModel.Design.ServiceContainer.ServiceContainer(IServiceProvider)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.Design.ServiceContainer&quot;> </xref> przy użyciu dostawcy usługi określonego elementu nadrzędnego."
  remarks: "Kontener usługi używa tego obiektu usługodawcy do pobierania usługi, jeśli nie są dostępne lokalnie w kontenerze."
  syntax:
    content: public ServiceContainer (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "Nadrzędny dostawca usługi."
  overload: System.ComponentModel.Design.ServiceContainer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type,ServiceCreatorCallback)
  nameWithType: ServiceContainer.AddService(Type,ServiceCreatorCallback)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,ServiceCreatorCallback)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Dodaje określoną usługę kontenera usług."
  remarks: ''
  example:
  - "The following example illustrates how to add a service to a <xref:System.ComponentModel.Design.ServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#3](~/add/codesnippet/csharp/361e39aa-642e-4002-bd54-_1.cs)]\n [!code-vb[ServiceContainerExample#3](~/add/codesnippet/visualbasic/361e39aa-642e-4002-bd54-_1.vb)]\n [!code-cpp[ServiceContainerExample#3](~/add/codesnippet/cpp/361e39aa-642e-4002-bd54-_1.cpp)]"
  syntax:
    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Typ usługi do dodania."
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: "Obiekt wywołania zwrotnego, który można utworzyć usługi. Umożliwia usłudze można zadeklarować jako dostępne, ale opóźnienia tworzenia obiektu, dopóki żądanej usługi."
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>callback</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Usługa typu <code> serviceType </code> już istnieje w kontenerze."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  id: AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type,Object)
  nameWithType: ServiceContainer.AddService(Type,Object)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Dodaje określoną usługę kontenera usług."
  remarks: ''
  example:
  - "The following example illustrates how to add a service to a <xref:System.ComponentModel.Design.ServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#2](~/add/codesnippet/csharp/7d5e79e6-2750-48e2-b4e9-_1.cs)]\n [!code-vb[ServiceContainerExample#2](~/add/codesnippet/visualbasic/7d5e79e6-2750-48e2-b4e9-_1.vb)]\n [!code-cpp[ServiceContainerExample#2](~/add/codesnippet/cpp/7d5e79e6-2750-48e2-b4e9-_1.cpp)]"
  syntax:
    content: public void AddService (Type serviceType, object serviceInstance);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Typ usługi do dodania."
    - id: serviceInstance
      type: System.Object
      description: "Wystąpienie usługi do dodania. Ten obiekt musi implementować lub dziedziczyć po typie wskazywanym przez `serviceType` parametru."
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>serviceInstance</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Usługa typu <code> serviceType </code> już istnieje w kontenerze."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type,ServiceCreatorCallback,Boolean)
  nameWithType: ServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Dodaje określoną usługę kontenera usług."
  syntax:
    content: public virtual void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Typ usługi do dodania."
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: "Obiekt wywołania zwrotnego, który można utworzyć usługi. Umożliwia usłudze można zadeklarować jako dostępne, ale opóźnienia tworzenia obiektu, dopóki żądanej usługi."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta usługa powinny zostać dodane do żadnych kontenerów usługi nadrzędnej; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>callback</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Usługa typu <code> serviceType </code> już istnieje w kontenerze."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  id: AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type,Object,Boolean)
  nameWithType: ServiceContainer.AddService(Type,Object,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Dodaje określoną usługę kontenera usług."
  syntax:
    content: public virtual void AddService (Type serviceType, object serviceInstance, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Typ usługi do dodania."
    - id: serviceInstance
      type: System.Object
      description: "Wystąpienia typu usługi do dodania. Ten obiekt musi implementować lub dziedziczyć po typie wskazywanym przez `serviceType` parametru."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta usługa powinny zostać dodane do żadnych kontenerów usługi nadrzędnej; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>serviceInstance</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Usługa typu <code> serviceType </code> już istnieje w kontenerze."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices
  id: DefaultServices
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: DefaultServices
  nameWithType: ServiceContainer.DefaultServices
  fullName: System.ComponentModel.Design.ServiceContainer.DefaultServices
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera usług domyślnych zaimplementowana bezpośrednio przez <xref href=&quot;System.ComponentModel.Design.ServiceContainer&quot;> </xref>."
  remarks: "Ta właściwość zwraca usług domyślnych, które są wdrażane bezpośrednio na tym <xref:System.ComponentModel.Design.IServiceContainer>.</xref:System.ComponentModel.Design.IServiceContainer> Domyślna implementacja ta właściwość ma zwrócić <xref:System.ComponentModel.Design.IServiceContainer>i <xref:System.ComponentModel.Design.ServiceContainer>typów.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.IServiceContainer> Można zastąpić tę właściwość i zwracać własnych typów modyfikowanie domyślnego <xref:System.ComponentModel.Component.GetService%2A>.</xref:System.ComponentModel.Component.GetService%2A>"
  syntax:
    content: protected virtual Type[] DefaultServices { get; }
    return:
      type: System.Type[]
      description: "Usług domyślnych."
  overload: System.ComponentModel.Design.ServiceContainer.DefaultServices*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: Dispose()
  nameWithType: ServiceContainer.Dispose()
  fullName: System.ComponentModel.Design.ServiceContainer.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Usuwa ten kontener usług."
  remarks: "Dispose przeprowadzi wszystkich wystąpień usług w kontenerze i usuwa wszystkie które implementują <xref:System.IDisposable>i czyści listę usług.</xref:System.IDisposable>       Wywołania <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>po zakończeniu korzystania <xref:System.ComponentModel.Design.ServiceContainer>.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>Pozostawia metody <xref:System.ComponentModel.Design.ServiceContainer>w stanie uniemożliwiającym jego używanie.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> Po wywołaniu <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.ComponentModel.Design.ServiceContainer>, moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.ComponentModel.Design.ServiceContainer>klasy.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/add/includes/ajax-current-ext-md.md) i [implementacja metody Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Zawsze wywołać <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>przed zwolnieniem ostatniego odwołania do <xref:System.ComponentModel.Design.ServiceContainer>.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.ComponentModel.Design.ServiceContainer>obiektu `Finalize` metody.</xref:System.ComponentModel.Design.ServiceContainer>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.ServiceContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ServiceContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Usuwa ten kontener usług."
  remarks: "<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>Zawiera opis wszystkich wystąpień usług w kontenerze i usuwa wszystkie które implementują <xref:System.IDisposable>i czyści listę usług.</xref:System.IDisposable></xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>       Ta metoda jest wywoływana przez metodę publiczną `Dispose()`— metoda i <xref:System.Object.Finalize%2A>metody.</xref:System.Object.Finalize%2A> `Dispose()`wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`. <xref:System.Object.Finalize%2A>wywołuje `Dispose` z `disposing` ustawioną `false`.</xref:System.Object.Finalize%2A>       Gdy `disposing` parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.ComponentModel.Design.ServiceContainer>odwołań.</xref:System.ComponentModel.Design.ServiceContainer> Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.ComponentModel.Design.ServiceContainer&quot;> </xref> jest właśnie trwa usuniętego elementu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.ServiceContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: ServiceContainer.GetService(Type)
  fullName: System.ComponentModel.Design.ServiceContainer.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera żądanej usługi."
  syntax:
    content: public virtual object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Typ usługi do pobrania."
    return:
      type: System.Object
      description: "Wystąpienie usługi, jeśli można go znaleźć, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , jeśli nie można go odnaleźć."
  overload: System.ComponentModel.Design.ServiceContainer.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  id: RemoveService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: RemoveService(Type)
  nameWithType: ServiceContainer.RemoveService(Type)
  fullName: System.ComponentModel.Design.ServiceContainer.RemoveService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Usuwa podany typ usługi z kontenera usług."
  remarks: ''
  example:
  - "The following example illustrates how to remove a service from a <xref:System.ComponentModel.Design.ServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#4](~/add/codesnippet/csharp/m-system.componentmodel._24_1.cs)]\n [!code-vb[ServiceContainerExample#4](~/add/codesnippet/visualbasic/m-system.componentmodel._24_1.vb)]\n [!code-cpp[ServiceContainerExample#4](~/add/codesnippet/cpp/m-system.componentmodel._24_1.cpp)]"
  syntax:
    content: public void RemoveService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Typ usługi do usunięcia."
  overload: System.ComponentModel.Design.ServiceContainer.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  id: RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: RemoveService(Type,Boolean)
  nameWithType: ServiceContainer.RemoveService(Type,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.RemoveService(Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Usuwa podany typ usługi z kontenera usług."
  syntax:
    content: public virtual void RemoveService (Type serviceType, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Typ usługi do usunięcia."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta usługa powinna zostać usunięta z kontenerach usługi nadrzędnej; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.ServiceContainer.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.ServiceContainer.#ctor
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: ServiceContainer()
  nameWithType: ServiceContainer.ServiceContainer()
  fullName: System.ComponentModel.Design.ServiceContainer.ServiceContainer()
- uid: System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: ServiceContainer(IServiceProvider)
  nameWithType: ServiceContainer.ServiceContainer(IServiceProvider)
  fullName: System.ComponentModel.Design.ServiceContainer.ServiceContainer(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type,ServiceCreatorCallback)
  nameWithType: ServiceContainer.AddService(Type,ServiceCreatorCallback)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,ServiceCreatorCallback)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.ServiceCreatorCallback
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceCreatorCallback
  nameWithType: ServiceCreatorCallback
  fullName: System.ComponentModel.Design.ServiceCreatorCallback
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type,Object)
  nameWithType: ServiceContainer.AddService(Type,Object)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,Object)
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type,ServiceCreatorCallback,Boolean)
  nameWithType: ServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type,Object,Boolean)
  nameWithType: ServiceContainer.AddService(Type,Object,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,Object,Boolean)
- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: DefaultServices
  nameWithType: ServiceContainer.DefaultServices
  fullName: System.ComponentModel.Design.ServiceContainer.DefaultServices
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Design.ServiceContainer.Dispose
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: Dispose()
  nameWithType: ServiceContainer.Dispose()
  fullName: System.ComponentModel.Design.ServiceContainer.Dispose()
- uid: System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ServiceContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.Dispose(Boolean)
- uid: System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: GetService(Type)
  nameWithType: ServiceContainer.GetService(Type)
  fullName: System.ComponentModel.Design.ServiceContainer.GetService(Type)
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: RemoveService(Type)
  nameWithType: ServiceContainer.RemoveService(Type)
  fullName: System.ComponentModel.Design.ServiceContainer.RemoveService(Type)
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: RemoveService(Type,Boolean)
  nameWithType: ServiceContainer.RemoveService(Type,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.RemoveService(Type,Boolean)
- uid: System.ComponentModel.Design.ServiceContainer.#ctor*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: ServiceContainer
  nameWithType: ServiceContainer.ServiceContainer
- uid: System.ComponentModel.Design.ServiceContainer.AddService*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService
  nameWithType: ServiceContainer.AddService
- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: DefaultServices
  nameWithType: ServiceContainer.DefaultServices
- uid: System.ComponentModel.Design.ServiceContainer.Dispose*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: Dispose
  nameWithType: ServiceContainer.Dispose
- uid: System.ComponentModel.Design.ServiceContainer.GetService*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: GetService
  nameWithType: ServiceContainer.GetService
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: RemoveService
  nameWithType: ServiceContainer.RemoveService
