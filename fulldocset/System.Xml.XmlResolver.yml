### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlResolver
  id: XmlResolver
  children:
  - System.Xml.XmlResolver.#ctor
  - System.Xml.XmlResolver.Credentials
  - System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
  type: Class
  summary: "Usuwa zasoby zewnętrzne XML o nazwie przez zasób identyfikator URI (Uniform)."
  remarks: "Typ element XmlResolver jest używany do rozpoznawania zasobów XML zewnętrznych, takich jak jednostki, definicji typu dokumentu (pliki DTD) lub schematów. Jest również używane do procesu obejmują i zaimportować elementy znalezione w arkusze stylów Extensible Stylesheet Language (XSL) lub schematu XML definition language (XSD) schematów.       Element XmlResolver obsługuje wszystkie aspekty negocjowania połączenia z zasobami, w tym obsługi poświadczenia zabezpieczeń, Otwieranie połączenia ze źródłem danych i zwracając zasobu w postaci strumienia lub innego typu obiektu. Obiekt, który wywołuje element XmlResolver ma za zadanie interpretowanie strumienia.       <xref:System.Xml>Przestrzeń nazw zawiera dwa konkretnych implementacji klasy element XmlResolver:- <xref:System.Xml.XmlUrlResolver>jest domyślny program rozpoznawania nazw dla wszystkich klas w <xref:System.Xml>przestrzeni nazw.</xref:System.Xml> </xref:System.Xml.XmlUrlResolver> </xref:System.Xml> Obsługuje on `file://` i `http://` protokoły i żądań z <xref:System.Net.WebRequest?displayProperty=fullName>klasy.</xref:System.Net.WebRequest?displayProperty=fullName> Przykłady rozszerzania klasy, aby zwiększyć wydajność można znaleźć <xref:System.Xml.XmlUrlResolver>Strona referencyjna.</xref:System.Xml.XmlUrlResolver>      - <xref:System.Xml.XmlSecureResolver>ułatwia zabezpieczenie innego obiektu element XmlResolver zawijania dla obiektu i ograniczenie zasobów, które mogą uzyskać dostęp.</xref:System.Xml.XmlSecureResolver> Na przykład <xref:System.Xml.XmlSecureResolver>można zabronić dostępu do określonych witryn internetowych lub strefy.</xref:System.Xml.XmlSecureResolver>       Można utworzyć i określić własne programu rozpoznawania nazw. Jeśli nie określisz program rozpoznawania nazw, czytnik używa domyślnego <xref:System.Xml.XmlUrlResolver>bez poświadczeń użytkownika.</xref:System.Xml.XmlUrlResolver>       Określ element XmlResolver do użycia przez ustawienie <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>Właściwości i przekazywanie <xref:System.Xml.XmlReaderSettings>do obiektu <xref:System.Xml.XmlReader.Create%2A>metody.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings> </xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>       Jeśli dany zasób jest przechowywany na komputerze, który wymaga uwierzytelniania, możesz użyć <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>Właściwości w celu określenia niezbędnych poświadczeń.</xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>      ## Dostarczanie poświadczeń uwierzytelniania pliku zawierającego dane XML do odczytu może mieć zasady ograniczonego dostępu. Jeśli wymagane jest uwierzytelnienie dostępu do zasobu sieciowego, użyj <xref:System.Xml.XmlResolver.Credentials%2A>Właściwości w celu określenia niezbędnych poświadczeń.</xref:System.Xml.XmlResolver.Credentials%2A> Jeśli <xref:System.Xml.XmlResolver.Credentials%2A>właściwość nie jest ustawiona, poświadczenia zostaną ustawione na `null`.</xref:System.Xml.XmlResolver.Credentials%2A>       Na przykład załóżmy, że poświadczenia są wymagane, gdy żądanie danych z sieci web na potrzeby uwierzytelniania. Jeśli katalog wirtualny sieci web umożliwia dostęp anonimowy, należy ustawić <xref:System.Xml.XmlResolver.Credentials%2A>właściwość, aby podać poświadczenia.</xref:System.Xml.XmlResolver.Credentials%2A> Poniższy przykład tworzy <xref:System.Xml.XmlReader>obiekt, który używa <xref:System.Xml.XmlUrlResolver>z poświadczeń domyślnych w celu uzyskania dostępu do witryny http://localhost/bookstore/inventory.xml.</xref:System.Xml.XmlUrlResolver> </xref:System.Xml.XmlReader>       [!code-cpp[XmlReaderSettings.cctor#2](~/add/codesnippet/cpp/t-system.xml.xmlresolver_1.cpp)][!code-cs[XmlReaderSettings.cctor#2](~/add/codesnippet/csharp/t-system.xml.xmlresolver_1.cs)][!code-vb[XmlReaderSettings.cctor#2](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_1.vb) ] można podać inne poświadczenia różne identyfikatory URI i dodać je do pamięci podręcznej.     Te poświadczenia są używane do sprawdzania uwierzytelniania różne identyfikatory URI, niezależnie od oryginalnego źródła kodu XML. Poniższy przykład przedstawia sposób dodawania poświadczeń do pamięci podręcznej.       [!code-vb[XslCompiledTransform.Load#11](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_2.vb)][!code-cs[XslCompiledTransform.Load#11](~/add/codesnippet/csharp/t-system.xml.xmlresolver_2.cs) ] ## zagadnienia dotyczące zabezpieczeń należy wziąć pod uwagę następujące elementy podczas pracy z klasy element XmlResolver.        — Element XmlResolver obiekty mogą zawierać poufne informacje, takie jak poświadczenia użytkownika. Należy zachować ostrożność podczas buforowania element XmlResolver obiektów i nie powinno przekazać obiekt element XmlResolver do niezaufany składnik.      — Jeśli projektujesz właściwości klasy, która używa klasy element XmlResolver powinna być zdefiniowana jako właściwość tylko do zapisu. Właściwość może służyć do określenia element XmlResolver do użycia, ale nie może służyć do zwrócił element XmlResolver obiektu.      — Jeśli aplikacja akceptuje element XmlResolver obiekty z niezaufanych kodu, nie założono, że identyfikator URI przekazane do <xref:System.Xml.XmlResolver.GetEntity%2A>będzie taki sam jak zwracany przez metodę <xref:System.Xml.XmlResolver.ResolveUri%2A>metody.</xref:System.Xml.XmlResolver.ResolveUri%2A> </xref:System.Xml.XmlResolver.GetEntity%2A> Klasy pochodnej z klasy element XmlResolver może zastąpić <xref:System.Xml.XmlResolver.GetEntity%2A>— Metoda i wróć dane, które są inne niż zawarte w oryginalnym identyfikatora URI.</xref:System.Xml.XmlResolver.GetEntity%2A>      -Aplikacji można ograniczyć pamięci odmowa usługi zagrożeń <xref:System.Xml.XmlResolver.GetEntity%2A>metody zaimplementowanie <xref:System.Runtime.InteropServices.ComTypes.IStream>, która ogranicza liczbę bajtów odczytanych.</xref:System.Runtime.InteropServices.ComTypes.IStream> </xref:System.Xml.XmlResolver.GetEntity%2A> Dzięki temu, chronią przed sytuacji, gdy próbuje nieskończone strumień bajtów do przekazania złośliwego kodu <xref:System.Xml.XmlResolver.GetEntity%2A>metody.</xref:System.Xml.XmlResolver.GetEntity%2A>"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> with default credentials. A <xref:System.Xml.XmlReader> is used to read and display the resulting data stream.  \n  \n [!code-cs[XmlResolver_ex#1](~/add/codesnippet/csharp/t-system.xml.xmlresolver_3.cs)]\n [!code-vb[XmlResolver_ex#1](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_3.vb)]"
  syntax:
    content: public abstract class XmlResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> klasy."
  remarks: "Ten konstruktor jest wywoływany przez konstruktory klas pochodnych zainicjować stanu, w tym typie."
  syntax:
    content: protected XmlResolver ();
    parameters: []
  overload: System.Xml.XmlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "W przypadku przesłonięcia w klasie pochodnej, ustawia poświadczenia używane do uwierzytelniania żądań sieci web."
  remarks: "Jeśli katalog wirtualny nie wymaga uwierzytelniania, ta właściwość nie muszą być ustawione. W przeciwnym razie należy podać poświadczenia użytkownika.       Poniższy kod C# Ustawia poświadczenia na <xref:System.Xml.XmlResolver>obiektu.</xref:System.Xml.XmlResolver>      ```   NetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = nc;   ```Można skojarzyć z różnych identyfikatorów URI różnych poświadczeń i dodaj je do pamięci podręcznej. Można następnie używać poświadczeń do sprawdzenia uwierzytelniania różne identyfikatory URI niezależnie od oryginalnego źródła kodu XML.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - See <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> for an example that uses this property.
  syntax:
    content: public virtual System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Poświadczenia, które ma być używany do uwierzytelniania żądań sieci web. Jeśli ta właściwość nie jest ustawiona, domyślnie przyjmowana jest wartość <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref> nie poświadczeniami użytkownika."
  overload: System.Xml.XmlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "W przypadku przesłonięcia w klasie pochodnej, identyfikator URI jest mapowany na obiekt, który zawiera zasobów."
  remarks: "Ta metoda jest używana, gdy obiekt wywołujący chce mapować dany identyfikator URI do obiektu zawierającego rzeczywiste zasób, który reprezentuje identyfikator URI. Typ obiektu, zwracana jest negotiable; Jednak implementacja zawsze musi obsługiwać <xref:System.IO.Stream?displayProperty=fullName>.</xref:System.IO.Stream?displayProperty=fullName>       Asynchroniczne wersję tej metody zobacz <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.</xref:System.Xml.XmlResolver.GetEntityAsync%2A>      > [!IMPORTANT] > Aplikacji można ograniczyć odmowa pamięci zagrożeń usługi do metody GetEntity zaimplementowanie <xref:System.Runtime.InteropServices.ComTypes.IStream>, która ogranicza liczbę bajtów odczytanych.</xref:System.Runtime.InteropServices.ComTypes.IStream> Dzięki temu można zabezpieczyć się przed sytuacji, gdy próbuje przekazać nieskończone strumień bajtów do metody GetEntity złośliwego kodu."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example using this method.
  syntax:
    content: public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Identyfikator URI zwrócony z <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Obecnie nieużywane."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ obiektu do zwrócenia. Bieżąca wersja zwraca tylko obiekty System.IO.Stream."
    return:
      type: System.Object
      description: "Obiekt stream lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli określono typ innych niż strumienia."
  overload: System.Xml.XmlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>nie jest <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;> </xref> typu."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Określony identyfikator URI nie jest bezwzględnym identyfikatorem URI."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Istnieje błąd w czasie wykonywania (na przykład połączenie serwera przerwania)."
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Asynchronicznie identyfikatora URI jest mapowany na obiekt, który zawiera zasobów."
  remarks: "Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlResolver.GetEntity%2A>, z tą samą funkcjonalnością.</xref:System.Xml.XmlResolver.GetEntity%2A> Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlReaderSettings.Async%2A>Flaga `true`.</xref:System.Xml.XmlReaderSettings.Async%2A>"
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Identyfikator URI zwrócony z <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Obecnie nieużywane."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ obiektu do zwrócenia. Zwraca tylko bieżącą wersję <xref:System.IO.Stream>obiektów.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Obiekt stream lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli określono typ innych niż strumienia."
  overload: System.Xml.XmlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "W przypadku przesłonięcia w klasie pochodnej usuwa bezwzględnego identyfikatora URI z podstawową i względne identyfikatory URI."
  remarks: "Bezwzględny identyfikator URI może służyć jako podstawowy identyfikator URI dla kolejnych żądań dla jednostek, które są względem tego identyfikatora URI."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example that uses this method.
  syntax:
    content: public virtual Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Podstawowy identyfikator URI używany do rozpoznania względnym identyfikatorem URI."
    - id: relativeUri
      type: System.String
      description: "Identyfikator URI do rozpoznania. Identyfikator URI może być bezwzględny lub względny. Jeśli bezwzględne, ta wartość skutecznie zastępuje `baseUri` wartość. Jeśli względną, składa się z `baseUri` być bezwzględnym identyfikatorem URI."
    return:
      type: System.Uri
      description: "Bezwzględny identyfikator URI lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli względny identyfikator URI nie można rozpoznać."
  overload: System.Xml.XmlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relativeUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  id: SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Włącza mechanizm rozpoznawania do zwracanych typów innych niż &lt;xref:System.IO.Stream?displayProperty=fullName&gt;."
  syntax:
    content: public virtual bool SupportsType (Uri absoluteUri, Type type);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Identyfikator URI."
    - id: type
      type: System.Type
      description: "Typ do zwrócenia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> type </code> jest obsługiwany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlResolver.SupportsType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlResolver.#ctor
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
- uid: System.Xml.XmlResolver.Credentials
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlResolver.#ctor*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver.XmlResolver
- uid: System.Xml.XmlResolver.Credentials*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
- uid: System.Xml.XmlResolver.GetEntity*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlResolver.GetEntity
- uid: System.Xml.XmlResolver.GetEntityAsync*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlResolver.GetEntityAsync
- uid: System.Xml.XmlResolver.ResolveUri*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlResolver.ResolveUri
- uid: System.Xml.XmlResolver.SupportsType*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType
  nameWithType: XmlResolver.SupportsType
