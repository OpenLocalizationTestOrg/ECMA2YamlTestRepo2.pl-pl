### YamlMime:ManagedReference
items:
- uid: System.Messaging.ReceiveCompletedEventArgs
  id: ReceiveCompletedEventArgs
  children:
  - System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  - System.Messaging.ReceiveCompletedEventArgs.Message
  langs:
  - csharp
  name: ReceiveCompletedEventArgs
  nameWithType: ReceiveCompletedEventArgs
  fullName: System.Messaging.ReceiveCompletedEventArgs
  type: Class
  summary: "Udostępnia dane dla <xref href=&quot;System.Messaging.MessageQueue.ReceiveCompleted&quot;> </xref> zdarzeń. Jeśli Twoje asynchronicznego odbioru operację wywołuje program obsługi zdarzeń, wystąpienia tej klasy jest przekazywane do programu obsługi."
  remarks: "Gdy używasz powiadamianie o zdarzeniach, aby asynchronicznie otrzymywać wiadomości z kolejki, należy utworzyć metoda, która obsługuje przetwarzania komunikatu. Kod musi wywoływać <xref:System.Messaging.MessageQueue.BeginReceive%2A>celu rozpoczęcia asynchronicznego przetwarzania.</xref:System.Messaging.MessageQueue.BeginReceive%2A> Po otrzymaniu komunikatu aplikacji zostanie powiadomiony poprzez <xref:System.Messaging.MessageQueue.ReceiveCompleted>zdarzeń.</xref:System.Messaging.MessageQueue.ReceiveCompleted> Wystąpienie ReceiveCompletedEventArgs jest przekazywany do delegata zdarzenia, który wywołuje obsługi zdarzenia. Dane skojarzone z <xref:System.Messaging.MessageQueue.ReceiveCompleted>zdarzeń jest zawarty w elemencie delegowanym <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A>parametru.</xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> </xref:System.Messaging.MessageQueue.ReceiveCompleted>       Istnieją dwa sposoby zapewnienia powiadomienia o zakończeniu zdarzenia: powiadamianie o zdarzeniach i wywołania zwrotne. ReceiveCompletedEventArgs jest używana tylko z powiadomienie o zdarzeniu. Informacji dotyczących porównania wywołania zwrotne i powiadamianie o zdarzeniach zobacz &quot;vs zdarzenia. Wywołania zwrotne&quot;w witrynie MSDN.       ReceiveCompletedEventArgs zapewnia dostęp do wiadomości, który zainicjował koniec asynchroniczną operacji, odbierania za pośrednictwem <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A>elementu członkowskiego.</xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> To jest alternatywny dostęp do tej wiadomości i zachowuje się znacznie taki sam, jak wywołanie <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>.</xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>"
  example:
  - "The following code example creates an event handler for the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event and associates it with the event delegate by using the <xref:System.Messaging.ReceiveCompletedEventHandler>. The event handler, `MyReceiveCompleted`, receives a message from a queue and writes its body to the screen.  \n  \n [!code-cs[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/csharp/t-system.messaging.recei_1_1.cs)]\n [!code-cpp[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/cpp/t-system.messaging.recei_1_1.cpp)]\n [!code-vb[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/visualbasic/t-system.messaging.recei_1_1.vb)]"
  syntax:
    content: 'public class ReceiveCompletedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  id: AsyncResult
  parent: System.Messaging.ReceiveCompletedEventArgs
  langs:
  - csharp
  name: AsyncResult
  nameWithType: ReceiveCompletedEventArgs.AsyncResult
  fullName: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Pobiera lub ustawia wynik żądanej operacji asynchronicznej."
  remarks: "AsyncResult identyfikuje bieżących lub zakończonych operacji asynchronicznych. Właściwość zawiera dane, które ułatwia określenie kilka potencjalnych asynchronicznych operacji do wykonania, i po przekazywane do programu obsługi zdarzeń, umożliwia <xref:System.Messaging.MessageQueue.EndReceive%2A>dostępu do wiadomości, skojarzone z ukończoną operację.</xref:System.Messaging.MessageQueue.EndReceive%2A>       Podczas wywoływania <xref:System.Messaging.MessageQueue.BeginReceive%2A>, <xref:System.IAsyncResult>zwrócił natychmiast, nawet jeśli komunikat, jeśli istnieje, nie jeszcze został pobrany, ponieważ operacja nie została wykonana.</xref:System.IAsyncResult> </xref:System.Messaging.MessageQueue.BeginReceive%2A> AsyncResult wskazuje stan operacji asynchronicznej. <xref:System.Messaging.MessageQueue.BeginReceive%2A>Tworzy obiekt, który jest modyfikowany podczas operacji do <xref:System.Messaging.MessageQueue.EndReceive%2A>ukończeniu go.</xref:System.Messaging.MessageQueue.EndReceive%2A></xref:System.Messaging.MessageQueue.BeginReceive%2A>"
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>zawierający dane skojarzone z działaniem receive.</xref:System.IAsyncResult>"
  overload: System.Messaging.ReceiveCompletedEventArgs.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.ReceiveCompletedEventArgs.Message
  id: Message
  parent: System.Messaging.ReceiveCompletedEventArgs
  langs:
  - csharp
  name: Message
  nameWithType: ReceiveCompletedEventArgs.Message
  fullName: System.Messaging.ReceiveCompletedEventArgs.Message
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Pobiera komunikat skojarzony z asynchronicznej operacji odbioru."
  remarks: "Właściwość wiadomości umożliwia pobieranie wiadomości, który zainicjował koniec asynchroniczną operacji odbioru.       <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>jest wywoływana po raz pierwszy właściwości wiadomości jest do odczytu, więc nie można wywołać <xref:System.Messaging.MessageQueue.EndReceive%2A>przed pobierania wartości tej właściwości.</xref:System.Messaging.MessageQueue.EndReceive%2A></xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>"
  syntax:
    content: public System.Messaging.Message Message { get; }
    return:
      type: System.Messaging.Message
      description: "A <xref href=&quot;System.Messaging.Message&quot;> </xref> reprezentujący koniec wynik asynchronicznej operacji odbioru."
  overload: System.Messaging.ReceiveCompletedEventArgs.Message*
  exceptions:
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "Nie można pobrać komunikatu. Upłynął limit czasu na operację asynchroniczną."
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Messaging.MessageQueueException
  parent: System.Messaging
  isExternal: false
  name: MessageQueueException
  nameWithType: MessageQueueException
  fullName: System.Messaging.MessageQueueException
- uid: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: AsyncResult
  nameWithType: ReceiveCompletedEventArgs.AsyncResult
  fullName: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Messaging.ReceiveCompletedEventArgs.Message
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: Message
  nameWithType: ReceiveCompletedEventArgs.Message
  fullName: System.Messaging.ReceiveCompletedEventArgs.Message
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.ReceiveCompletedEventArgs.AsyncResult*
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: AsyncResult
  nameWithType: ReceiveCompletedEventArgs.AsyncResult
- uid: System.Messaging.ReceiveCompletedEventArgs.Message*
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: Message
  nameWithType: ReceiveCompletedEventArgs.Message
