### YamlMime:ManagedReference
items:
- uid: System.Threading.LockCookie
  id: LockCookie
  children:
  - System.Threading.LockCookie.Equals(System.Object)
  - System.Threading.LockCookie.Equals(System.Threading.LockCookie)
  - System.Threading.LockCookie.GetHashCode
  - System.Threading.LockCookie.op_Equality(System.Threading.LockCookie,System.Threading.LockCookie)
  - System.Threading.LockCookie.op_Inequality(System.Threading.LockCookie,System.Threading.LockCookie)
  langs:
  - csharp
  name: LockCookie
  nameWithType: LockCookie
  fullName: System.Threading.LockCookie
  type: Struct
  summary: "Definiuje blokady, która implementuje semantykę pojedynczego — moduł zapisujący/wielu czytników. Jest to typ wartości."
  remarks: ''
  example:
  - "The following example shows how to request a reader lock, upgrade the reader lock to a writer lock, and save the LockCookie. It then uses the LockCookie to downgrade to a reader lock again.  \n  \n This code is part of a larger example provided for the <xref:System.Threading.ReaderWriterLock> class.  \n  \n [!code-cpp[System.Threading.ReaderWriterLock#2](~/add/codesnippet/cpp/t-system.threading.lockc_1.cpp)]\n [!code-cs[System.Threading.ReaderWriterLock#2](~/add/codesnippet/csharp/t-system.threading.lockc_1.cs)]\n [!code-vb[System.Threading.ReaderWriterLock#2](~/add/codesnippet/visualbasic/t-system.threading.lockc_1.vb)]  \n[!code-cpp[System.Threading.ReaderWriterLock#5](~/add/codesnippet/cpp/t-system.threading.lockc_2.cpp)]\n[!code-cs[System.Threading.ReaderWriterLock#5](~/add/codesnippet/csharp/t-system.threading.lockc_2.cs)]\n[!code-vb[System.Threading.ReaderWriterLock#5](~/add/codesnippet/visualbasic/t-system.threading.lockc_2.vb)]  \n[!code-cpp[System.Threading.ReaderWriterLock#7](~/add/codesnippet/cpp/t-system.threading.lockc_3.cpp)]\n[!code-cs[System.Threading.ReaderWriterLock#7](~/add/codesnippet/csharp/t-system.threading.lockc_3.cs)]\n[!code-vb[System.Threading.ReaderWriterLock#7](~/add/codesnippet/visualbasic/t-system.threading.lockc_3.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct LockCookie
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Threading.LockCookie.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Threading.LockCookie
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: LockCookie.Equals(Object)
  fullName: System.Threading.LockCookie.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Wskazuje, czy określony obiekt jest <xref href=&quot;System.Threading.LockCookie&quot;> </xref> i jest taki sam, jak bieżące wystąpienie."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do porównania z bieżącym wystąpieniem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość <code> obj </code> wartość bieżącego wystąpienia, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Threading.LockCookie.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.LockCookie.Equals(System.Threading.LockCookie)
  id: Equals(System.Threading.LockCookie)
  parent: System.Threading.LockCookie
  langs:
  - csharp
  name: Equals(LockCookie)
  nameWithType: LockCookie.Equals(LockCookie)
  fullName: System.Threading.LockCookie.Equals(LockCookie)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Wskazuje, czy bieżące wystąpienie jest równe określonej <xref href=&quot;System.Threading.LockCookie&quot;> </xref>."
  syntax:
    content: public bool Equals (System.Threading.LockCookie obj);
    parameters:
    - id: obj
      type: System.Threading.LockCookie
      description: "<xref href=&quot;System.Threading.LockCookie&quot;> </xref> Do porównania z bieżącym wystąpieniem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> obj </code> wartość bieżącego wystąpienia, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Threading.LockCookie.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.LockCookie.GetHashCode
  id: GetHashCode
  parent: System.Threading.LockCookie
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: LockCookie.GetHashCode()
  fullName: System.Threading.LockCookie.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Zwraca wartość skrótu dla tego wystąpienia."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32-bitowej podpisanej liczby całkowitej wartość skrótu."
  overload: System.Threading.LockCookie.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.LockCookie.op_Equality(System.Threading.LockCookie,System.Threading.LockCookie)
  id: op_Equality(System.Threading.LockCookie,System.Threading.LockCookie)
  parent: System.Threading.LockCookie
  langs:
  - csharp
  name: op_Equality(LockCookie,LockCookie)
  nameWithType: LockCookie.op_Equality(LockCookie,LockCookie)
  fullName: System.Threading.LockCookie.op_Equality(LockCookie,LockCookie)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Wskazuje, czy dwa <xref href=&quot;System.Threading.LockCookie&quot;> </xref> struktury są takie same."
  syntax:
    content: public static bool op_Equality (System.Threading.LockCookie a, System.Threading.LockCookie b);
    parameters:
    - id: a
      type: System.Threading.LockCookie
      description: "<xref href=&quot;System.Threading.LockCookie&quot;> </xref> Do porównania `b`."
    - id: b
      type: System.Threading.LockCookie
      description: "<xref href=&quot;System.Threading.LockCookie&quot;> </xref> Do porównania `a`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Threading.LockCookie.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.LockCookie.op_Inequality(System.Threading.LockCookie,System.Threading.LockCookie)
  id: op_Inequality(System.Threading.LockCookie,System.Threading.LockCookie)
  parent: System.Threading.LockCookie
  langs:
  - csharp
  name: op_Inequality(LockCookie,LockCookie)
  nameWithType: LockCookie.op_Inequality(LockCookie,LockCookie)
  fullName: System.Threading.LockCookie.op_Inequality(LockCookie,LockCookie)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Wskazuje, czy dwa <xref href=&quot;System.Threading.LockCookie&quot;> </xref> struktur nie są takie same."
  syntax:
    content: public static bool op_Inequality (System.Threading.LockCookie a, System.Threading.LockCookie b);
    parameters:
    - id: a
      type: System.Threading.LockCookie
      description: "<xref href=&quot;System.Threading.LockCookie&quot;> </xref> Do porównania `b`."
    - id: b
      type: System.Threading.LockCookie
      description: "<xref href=&quot;System.Threading.LockCookie&quot;> </xref> Do porównania `a`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>a</code> is not equal to <code>b</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Threading.LockCookie.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Threading.LockCookie.Equals(System.Object)
  parent: System.Threading.LockCookie
  isExternal: false
  name: Equals(Object)
  nameWithType: LockCookie.Equals(Object)
  fullName: System.Threading.LockCookie.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.LockCookie.Equals(System.Threading.LockCookie)
  parent: System.Threading.LockCookie
  isExternal: false
  name: Equals(LockCookie)
  nameWithType: LockCookie.Equals(LockCookie)
  fullName: System.Threading.LockCookie.Equals(LockCookie)
- uid: System.Threading.LockCookie
  parent: System.Threading
  isExternal: false
  name: LockCookie
  nameWithType: LockCookie
  fullName: System.Threading.LockCookie
- uid: System.Threading.LockCookie.GetHashCode
  parent: System.Threading.LockCookie
  isExternal: false
  name: GetHashCode()
  nameWithType: LockCookie.GetHashCode()
  fullName: System.Threading.LockCookie.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.LockCookie.op_Equality(System.Threading.LockCookie,System.Threading.LockCookie)
  parent: System.Threading.LockCookie
  isExternal: false
  name: op_Equality(LockCookie,LockCookie)
  nameWithType: LockCookie.op_Equality(LockCookie,LockCookie)
  fullName: System.Threading.LockCookie.op_Equality(LockCookie,LockCookie)
- uid: System.Threading.LockCookie.op_Inequality(System.Threading.LockCookie,System.Threading.LockCookie)
  parent: System.Threading.LockCookie
  isExternal: false
  name: op_Inequality(LockCookie,LockCookie)
  nameWithType: LockCookie.op_Inequality(LockCookie,LockCookie)
  fullName: System.Threading.LockCookie.op_Inequality(LockCookie,LockCookie)
- uid: System.Threading.LockCookie.Equals*
  parent: System.Threading.LockCookie
  isExternal: false
  name: Equals
  nameWithType: LockCookie.Equals
- uid: System.Threading.LockCookie.GetHashCode*
  parent: System.Threading.LockCookie
  isExternal: false
  name: GetHashCode
  nameWithType: LockCookie.GetHashCode
- uid: System.Threading.LockCookie.op_Equality*
  parent: System.Threading.LockCookie
  isExternal: false
  name: op_Equality
  nameWithType: LockCookie.op_Equality
- uid: System.Threading.LockCookie.op_Inequality*
  parent: System.Threading.LockCookie
  isExternal: false
  name: op_Inequality
  nameWithType: LockCookie.op_Inequality
