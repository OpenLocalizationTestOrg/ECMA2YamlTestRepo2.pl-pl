### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.Grammar
  id: Grammar
  children:
  - System.Speech.Recognition.Grammar.#ctor
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  - System.Speech.Recognition.Grammar.#ctor(System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  langs:
  - csharp
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
  type: Class
  summary: "Obiektu środowiska wykonawczego, który odwołuje się do gramatyki rozpoznawania mowy, którego aplikacja może użyć do definiowania ograniczeń rozpoznawania mowy."
  remarks: "Gramatyka rozpoznawania mowy to zestaw reguł lub ograniczenia definiujące aparat rozpoznawania mowy rozpoznał jako dane wejściowe łatwy do rozpoznania. Aby uzyskać więcej informacji na temat tworzenia i używania gramatyki rozpoznawania mowy, zobacz [rozpoznawania mowy](http://msdn.microsoft.com/en-us/6a7dc524-07fc-4862-8d48-8c10dc64b919), [utworzyć gramatyki XML przy użyciu](http://msdn.microsoft.com/en-us/2d799487-49c6-4cc9-b42f-f71cd3824fe1), [utworzyć GrammarBuilder przy użyciu gramatyki](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae), i [utworzyć SrgsGrammar gramatyki przy użyciu](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906).       Po autora gramatyki, należy utworzyć go na obiekt gramatyki można załadować aparatu rozpoznawania mowy, a aplikacja może używać w czasie wykonywania do zarządzania rozpoznawania mowy. Można użyć <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktora, aby utworzyć wystąpienia gramatyki z <xref:System.Speech.Recognition.GrammarBuilder>lub <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>obiekt, lub z pliku lub <xref:System.IO.Stream>zawierający opis gramatyki w obsługiwanym formacie.</xref:System.IO.Stream> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> Obsługiwane formaty są następujące:-pliki w formacie XML, zgodnych ze standardami W3C [mowy rozpoznawania gramatyki specyfikacja (SRGS) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -gramatyki, które zostały skompilowane do pliku binarnego z .cfg pliku konstruktorów gramatyki rozszerzenia, które akceptują pliki gramatyki formatu XML w ich argumentów skompilować gramatyki XML do formatu binarnego w celu optymalizacji ich ładowania oraz zużycie przez aparat rozpoznawania mowy. Można zmniejszyć ilość czasu potrzebnego do utworzenia obiektu gramatyki od gramatyki formatu XML z wyprzedzeniem kompilując gramatyki przy użyciu jednej z <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metody.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>       Aplikacja aparat rozpoznawania mowy jako zarządzany przez <xref:System.Speech.Recognition.SpeechRecognizer>lub <xref:System.Speech.Recognition.SpeechRecognitionEngine>obiektów, można załadować wiele gramatyk rozpoznawania mowy.</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognizer> Aplikacji niezależnie można włączyć lub wyłączyć poszczególne gramatyki, ustawiając <xref:System.Speech.Recognition.Grammar.Enabled%2A>właściwości oraz modyfikowanie zachowania uznania za pośrednictwem właściwości gramatyki, takich jak <xref:System.Speech.Recognition.Grammar.Priority%2A>i <xref:System.Speech.Recognition.Grammar.Weight%2A>Właściwości.</xref:System.Speech.Recognition.Grammar.Weight%2A> </xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.Speech.Recognition.Grammar.Enabled%2A>       Gramatyka <xref:System.Speech.Recognition.Grammar.SpeechRecognized>zdarzenie jest wywoływane, gdy dane wejściowe jest zgodna z ścieżkę za pośrednictwem gramatyki.</xref:System.Speech.Recognition.Grammar.SpeechRecognized>      > [!NOTE] > Jest najlepszym rozwiązaniem bezpieczeństwa identyfikatora URI lub biblioteki DLL używane do tworzenia obiektu gramatyki Sprawdź.   >> Systemu Windows i platform mowy zabezpieczenia aplikacji tworzenia wystąpienia gramatyki, z biblioteki DLL lub gramatyki, która obsługuje wykonywanie skryptów.   >> Skrypty w obiektach gramatyki są zawsze uruchamiane tak, jakby pobrane ze strony sieci web w `Internet Zone`. Środowisko uruchomieniowe języka wspólnego (CLR) izoluje każdej biblioteki DLL ładowane do uzyskania definicji gramatyki."
  example:
  - "The following example constructs a Grammar object from a speech recognition grammar defined in a XML file (cities.xml). The content of the cities.xml file appears in the following XML example.  \n  \n```c#  \n// Load a cities grammar from a local file and return the grammar object.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item> Seattle </item>  \n      <item> Los Angeles </item>  \n      <item> New York </item>  \n      <item> Miami </item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Grammar: {(_uri != null ? "uri=" + _uri.ToString () + " " : "") + "rule=" + _ruleName }")]

      public class Grammar
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> — klasa"
  syntax:
    content: protected Grammar ();
    parameters: []
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> z <xref:System.IO.Stream>.</xref:System.IO.Stream> — klasa"
  remarks: "Ten konstruktor nie zostały spełnione wszystkie parametry do inicjowania obsługi i opis nie powinien definiować inicjowania obsługi, która wymaga argumentów.       Ten konstruktor można utworzyć <xref:System.Speech.Recognition.Grammar>wystąpienie z następujących formatów:-pliki w formacie XML, zgodnych ze standardami W3C [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -gramatyki, które zostały skompilowane do pliku binarnego pliku z rozszerzeniem pliku .cfg to Konstruktor kompiluje pliki gramatyki XML format do formatu binarnego w celu optymalizacji ich ładowania oraz zużycie przez aparat rozpoznawania mowy.</xref:System.Speech.Recognition.Grammar> Może skrócić czas wymagany do utworzenia <xref:System.Speech.Recognition.Grammar>obiektu z formatu XML gramatyki przez skompilowanie gramatyki z wyprzedzeniem, przy użyciu jednej z <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metody.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Gramatyka SRGS można zdefiniować reguły głównego. Aby utworzyć <xref:System.Speech.Recognition.Grammar>obiektów ze strumienia i określ główna reguła, użyj <xref:System.Speech.Recognition.Grammar.%23ctor%2A>lub <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktora.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Aby utworzyć <xref:System.Speech.Recognition.Grammar>obiektów ze strumienia i określić podstawowy identyfikator URI do użycia rozpoznania odwołania względne reguła użyj <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktora.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar from a local SRGS file (cities.xml) using a file stream. The content of the cities.xml file appears following C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream and    \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromStream()  \n{  \n  string fileName = @\"c:\\temp\\cities.xml\";  \n  Grammar citiesGrammar =  \n    new Grammar(new FileStream(fileName, FileMode.Open));  \n  citiesGrammar.Name = \"Stream Cities Grammar\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Strumień, który opisuje gramatyki rozpoznawanie mowy w obsługiwanym formacie."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>Zawiera opis gramatyki, która nie zawiera reguły głównego."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Strumień nie zawiera prawidłowy opis gramatyki lub opis gramatyki, która zawiera odwołanie do reguły, których nie można rozpoznać."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  id: '#ctor(System.Speech.Recognition.GrammarBuilder)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasę z <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref> obiektu."
  remarks: "Aby uzyskać więcej informacji o używaniu <xref:System.Speech.Recognition.GrammarBuilder>klasę, aby zdefiniować gramatyki, zobacz [utworzyć GrammarBuilder przy użyciu gramatyki](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</xref:System.Speech.Recognition.GrammarBuilder>"
  example:
  - "The following example creates a speech recognition grammar using <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects. The Grammar constructor creates a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.GrammarBuilder> object.  \n  \n```c#  \n  \n// Create a grammar using a GrammarBuilder and return the new grammar.   \nprivate static Grammar CreateGrammarBuilderGrammar()  \n{  \n  GrammarBuilder builder = new GrammarBuilder();  \n  \n  Choices cityChoice = new Choices (new string[]   \n  {\"Seattle\", \"New York\", \"Miami\", \"Los Angeles\"});  \n  \n  builder.Append(\"I would like to fly from\");  \n  builder.Append(cityChoice);  \n  builder.Append(\"to\");  \n  builder.Append(cityChoice);  \n  \n  Grammar citiesGrammar = new Grammar(builder);  \n  citiesGrammar.Name = \"GrammarBuilder Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.GrammarBuilder builder);
    parameters:
    - id: builder
      type: System.Speech.Recognition.GrammarBuilder
      description: "Wystąpienie <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref> zawierający ograniczenia dla gramatyki rozpoznawania mowy."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasę z <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> obiektu."
  remarks: "Ten konstruktor nie zostały spełnione wszystkie parametry do inicjowania obsługi i <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>inicjowania obsługi, która wymaga argumentów, które nie powinny zawierać.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       A <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>może mieć główna reguła.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> Aby utworzyć <xref:System.Speech.Recognition.Grammar>obiekt, który określa główna reguła, użyj <xref:System.Speech.Recognition.Grammar.%23ctor%2A>lub <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktora.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Aby utworzyć rozpoznawania mowy <xref:System.Speech.Recognition.Grammar>z <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>i określić podstawowy identyfikator URI do użycia rozpoznania odwołania względne reguła użyj <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktora.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance, which is then used to construct a <xref:System.Speech.Recognition.Grammar> object.  \n  \n```c#  \nprivate static Grammar CreateSrgsDocumentGrammar()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Cities rule and add it to the document.  \n  SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n  \n  SrgsOneOf cityChoice = new SrgsOneOf();  \n  cityChoice.Add(new SrgsItem(\"Seattle\"));  \n  cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n  cityChoice.Add(new SrgsItem(\"New York\"));  \n  cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n  citiesRule.Add(cityChoice);  \n  document.Rules.Add(citiesRule);  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"I would like to fly from\");  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  item.Add(new SrgsText(\"to\"));  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the Grammar object.  \n  Grammar citiesGrammar = new Grammar(document);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Ograniczenia dla gramatyki rozpoznawania mowy."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>srgsDocument</code>nie zawiera główna reguła."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>zawiera odwołanie do reguły, których nie można rozpoznać."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasy z pliku."
  remarks: "Ten konstruktor nie zostały spełnione wszystkie parametry do inicjowania obsługi i opis nie powinien definiować inicjowania obsługi, która wymaga argumentów.       Ten konstruktor można utworzyć <xref:System.Speech.Recognition.Grammar>wystąpienie z następujących formatów:-pliki w formacie XML, zgodnych ze standardami W3C [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -gramatyki, które zostały skompilowane do pliku binarnego pliku z rozszerzeniem pliku .cfg to Konstruktor kompiluje pliki gramatyki XML format do formatu binarnego w celu optymalizacji ich ładowania oraz zużycie przez aparat rozpoznawania mowy.</xref:System.Speech.Recognition.Grammar> Może skrócić czas wymagany do utworzenia <xref:System.Speech.Recognition.Grammar>obiektu z formatu XML gramatyki przez skompilowanie gramatyki z wyprzedzeniem, przy użyciu jednej z <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metody.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Gramatyka SRGS można zdefiniować reguły głównego. Aby utworzyć <xref:System.Speech.Recognition.Grammar>obiekt z ciągu i określ główna reguła, użyj <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktora.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Aby utworzyć <xref:System.Speech.Recognition.Grammar>obiekt, który określa podstawowy identyfikator URI do użycia rozpoznania odwołania względne reguła, otwórz plik w strumienia pliku i użyj <xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName>konstruktora.</xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a speech recognition grammar from a local SRGS file to build a <xref:System.Speech.Recognition.Grammar> object. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n// Load a cities grammar from a local file and  \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka pliku, który opisuje gramatyki rozpoznawanie mowy w obsługiwanym formacie."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>zawiera ciąg pusty (&quot;&quot;), lub plik zawiera opis gramatyki, która nie zawiera reguły głównego."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Plik nie zawiera prawidłowy opis lub opis gramatyki, która zawiera odwołanie do reguły, których nie można rozpoznać."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasę z <xref:System.IO.Stream>i określa główna reguła.</xref:System.IO.Stream>"
  remarks: "Ten konstruktor nie zostały spełnione wszystkie parametry do inicjowania obsługi i opis nie powinien definiować inicjowania obsługi, która wymaga argumentów.       Ten konstruktor można utworzyć <xref:System.Speech.Recognition.Grammar>wystąpienie z następujących formatów:-pliki w formacie XML, zgodnych ze standardami W3C [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -gramatyki, które zostały skompilowane do pliku binarnego pliku z rozszerzeniem pliku .cfg to Konstruktor kompiluje pliki gramatyki XML format do formatu binarnego w celu optymalizacji ich ładowania oraz zużycie przez aparat rozpoznawania mowy.</xref:System.Speech.Recognition.Grammar> Może skrócić czas wymagany do utworzenia <xref:System.Speech.Recognition.Grammar>obiektu z formatu XML gramatyki przez skompilowanie gramatyki z wyprzedzeniem, przy użyciu jednej z <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metody.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Aby utworzyć <xref:System.Speech.Recognition.Grammar>ze strumienia i określić podstawowy identyfikator URI do użycia rozpoznania odwołania względne reguła użyj <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktora.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file stream and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream, use a specific  \n// rule as the root of the grammar, and return the new grammar.   \nprivate static Grammar CreateGrammarFromStream2()  \n{  \n  FileInfo file = new FileInfo(@\"c:\\temp\\cities.xml\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), \"Main\");  \n  citiesGrammar.Name = \"Stream Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Strumień, który opisuje gramatyki rozpoznawanie mowy w obsługiwanym formacie."
    - id: ruleName
      type: System.String
      description: "Identyfikator reguły do użycia jako punkt wejścia gramatyki rozpoznawania mowy, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Aby użyć domyślnej reguły głównego opis gramatyki."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>Nie można rozpoznać nazwy lub nie jest publiczny, lub <code>ruleName</code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i opis gramatyki nie definiuje główna reguła."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Strumień nie zawiera prawidłowy opis lub opis gramatyki, która zawiera odwołanie do reguły, których nie można rozpoznać."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasę z <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> obiektu i określa główna reguła."
  remarks: "Ten konstruktor nie zostały spełnione wszystkie parametry do inicjowania obsługi i <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>inicjowania obsługi, która wymaga argumentów, które nie powinny zawierać.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       Aby utworzyć <xref:System.Speech.Recognition.Grammar>obiekt z <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>i określić podstawowy identyfikator URI do użycia rozpoznania odwołania względne reguła użyj <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktora.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and specifies a rule to use as the root rule of the grammar. The example constructs a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and loads it into the speech recognition engine.  \n  \n```c#  \nusing System;  \nusing System.Speech.Recognition;  \nusing System.Speech.Recognition.SrgsGrammar;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize an in-process speech recognition engine.  \n    {  \n      using (SpeechRecognitionEngine recognizer =  \n         new SpeechRecognitionEngine())  \n      {  \n  \n        // Create the SrgsDocument.  \n        SrgsDocument document = new SrgsDocument();  \n  \n        // Create the Cities rule and add it to the document.  \n        SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n        citiesRule.Scope = SrgsRuleScope.Public;  \n  \n        SrgsOneOf cityChoice = new SrgsOneOf();  \n        cityChoice.Add(new SrgsItem(\"Seattle\"));  \n        cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n        cityChoice.Add(new SrgsItem(\"New York\"));  \n        cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n        citiesRule.Add(cityChoice);  \n        document.Rules.Add(citiesRule);  \n  \n        // Create the Main rule and add it to the document.  \n        SrgsRule mainRule = new SrgsRule(\"Main\");  \n        mainRule.Scope = SrgsRuleScope.Public;  \n  \n        mainRule.Add(new SrgsItem(\"I would like to fly from\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n        mainRule.Add(new SrgsItem(\"to\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n  \n        document.Rules.Add(mainRule);  \n  \n        // Create the Grammar object and specify which rule to use as the root.  \n        Grammar citiesGrammar = new Grammar(document,\"Main\");  \n  \n        // Load the grammar object to the recognizer.  \n        recognizer.LoadGrammarAsync(citiesGrammar);  \n  \n        // Attach a handler for the SpeechRecognized event.  \n        recognizer.SpeechRecognized +=  \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n  \n        // Set the input to the recognizer.  \n        recognizer.SetInputToDefaultAudioDevice();  \n  \n        // Start recognition.  \n        recognizer.RecognizeAsync();  \n        Console.WriteLine(\"Starting aynchronous recognition...\");  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"  Speech recognized: \" + e.Result.Text);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Ograniczenia dla gramatyki rozpoznawania mowy."
    - id: ruleName
      type: System.String
      description: "Identyfikator reguły do użycia jako punkt wejścia gramatyki rozpoznawania mowy, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Aby użyć domyślnej reguły głównego z <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>Nie można rozpoznać nazwy lub nie jest publiczny, lub <code>ruleName</code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i <code>srgsDocument</code> nie zawiera reguły głównego."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>zawiera odwołanie do reguły, których nie można rozpoznać."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> z pliku, określa główna reguła."
  remarks: "Ten konstruktor nie zostały spełnione wszystkie parametry do inicjowania obsługi i opis nie powinien definiować inicjowania obsługi, która wymaga argumentów.       Ten konstruktor można utworzyć <xref:System.Speech.Recognition.Grammar>wystąpienie z następujących formatów:-pliki w formacie XML, zgodnych ze standardami W3C [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -gramatyki, które zostały skompilowane do pliku binarnego pliku z rozszerzeniem pliku .cfg to Konstruktor kompiluje pliki gramatyki XML format do formatu binarnego w celu optymalizacji ich ładowania oraz zużycie przez aparat rozpoznawania mowy.</xref:System.Speech.Recognition.Grammar> Może skrócić czas wymagany do utworzenia <xref:System.Speech.Recognition.Grammar>obiektu z formatu XML gramatyki przez skompilowanie gramatyki z wyprzedzeniem, przy użyciu jednej z <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metody.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Aby utworzyć <xref:System.Speech.Recognition.Grammar>, który określa podstawowy identyfikator URI na potrzeby rozpoznawania odwołań względne reguła, otwórz strumień pliku dla pliku i użyć <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktora.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from a local file, use a specific  \n// rule as the root of the grammar, and return the new grammar.  \nprivate static Grammar CreateGrammarFromFile2()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\", \"Main\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path, string ruleName);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka pliku, który opisuje gramatyki rozpoznawanie mowy w obsługiwanym formacie."
    - id: ruleName
      type: System.String
      description: "Identyfikator reguły do użycia jako punkt wejścia gramatyki rozpoznawania mowy, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Aby użyć domyślnej reguły głównego opis gramatyki."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>Nie można rozpoznać nazwy lub nie jest publiczny, <code>path</code> jest pustym ciągiem (&quot;&quot;), lub <code>ruleName</code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i opis gramatyki nie definiuje główna reguła."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Plik nie zawiera prawidłowy opis lub opis gramatyki, która zawiera odwołanie do reguły, których nie można rozpoznać."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasę z <xref:System.IO.Stream>i określa główna reguła.</xref:System.IO.Stream>"
  remarks: "Można także określić parametry inicjowania obsługi."
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>podłączone do obiektu wejścia/wyjścia (w tym pliki, zasoby Visual Studio i bibliotek DLL), który zawiera specyfikację gramatyki.</xref:System.IO.Stream>"
    - id: ruleName
      type: System.String
      description: "Identyfikator reguły do użycia jako punkt wejścia gramatyki rozpoznawania mowy, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Aby użyć domyślnej reguły głównego opis gramatyki."
    - id: parameters
      type: System.Object[]
      description: "Parametry do przekazania do inicjowania obsługi określonego przez <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>Właściwości dla punktu wejścia lub główna reguła z <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> ma zostać utworzony.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Ten parametr może mieć wartości null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>jest podłączony do gramatyki który:-nie zawiera reguły, określona w <code>ruleName</code>       - wymaga parametrów inicjowania różne od tych określonych w <code>parameters</code>       - zawiera odwołanie względne reguła, którego nie można rozwiązać przez base domyślne <xref:System.Uri> reguła gramatyki"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  id: '#ctor(System.IO.Stream,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasy ze strumienia, określa główna reguła i definiuje podstawowej zasobów identyfikator URI (Uniform) do rozpoznawania odwołań względne reguła."
  remarks: "Ten konstruktor nie zostały spełnione wszystkie parametry do inicjowania obsługi i opis nie powinien definiować inicjowania obsługi, która wymaga argumentów.       Ten konstruktor można utworzyć <xref:System.Speech.Recognition.Grammar>wystąpienie z następujących formatów:-pliki w formacie XML, zgodnych ze standardami W3C [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -gramatyki, które zostały skompilowane do pliku binarnego pliku z rozszerzeniem pliku .cfg to Konstruktor kompiluje pliki gramatyki XML format do formatu binarnego w celu optymalizacji ich ładowania oraz zużycie przez aparat rozpoznawania mowy.</xref:System.Speech.Recognition.Grammar> Może skrócić czas wymagany do utworzenia <xref:System.Speech.Recognition.Grammar>obiektu z formatu XML gramatyki przez skompilowanie gramatyki z wyprzedzeniem, przy użyciu jednej z <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>metody.</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> </xref:System.Speech.Recognition.Grammar>       Nie można zweryfikować tego konstruktora `baseUri`. Jednak `LoadGrammar` metody <xref:System.Speech.Recognition.SpeechRecognitionEngine>lub <xref:System.Speech.Recognition.SpeechRecognizer>obiektu zgłasza wyjątek, jeśli nie można rozpoznać wszystkich odwołań do reguły w opisie gramatyki.</xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Jeśli `baseUri` nie jest `null`, `LoadGrammar` metoda używa Rozwiąż wszelkie odwołania reguły, które w przeciwnym razie nie można rozpoznać identyfikatora URI. Jeśli `baseUri` reprezentuje plik, a następnie `LoadGrammar` używa zarówno wskazanego pliku i katalog pliku podczas próby rozpoznania odwołania względne reguła."
  example:
  - "The following example loads a local SRGS file (shuttle.xml) from a file stream. The file contains a relative rule reference to a rule in the cities.xml file, and specifies a base URI to use to resolve the rule reference. The content of the shuttle.xml and cities.xml files appears in the XML examples that follow the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateGrammarFromStream3()  \n{  \n  FileInfo file = new FileInfo(@\".\\shuttle.xml\");  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), null, baseUri);  \n  citiesGrammar.Name = \"Stream Cities Grammar 3\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- shuttle.xml:   \n    Defines an SRGS grammar for asking about a shuttle service. This grammar  \n    references a Cities rule that is defined in the cities.xml grammar. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      Can I get a shuttle in  \n      <ruleref uri=\"cities.xml#Cities\"/>  \n    </item>  \n  </rule>  \n</grammar>  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Strumień, który opisuje gramatyki rozpoznawanie mowy w obsługiwanym formacie."
    - id: ruleName
      type: System.String
      description: "Identyfikator reguły do użycia jako punkt wejścia gramatyki rozpoznawania mowy, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Aby użyć domyślnej reguły głównego opis gramatyki."
    - id: baseUri
      type: System.Uri
      description: "Podstawowy identyfikator URI do użycia rozpoznania wszystkich odwołań względne reguła w opisie gramatyki lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>Nie można rozpoznać nazwy lub nie jest publiczny, lub <code>ruleName</code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i opis gramatyki nie definiuje główna reguła."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Strumień nie zawiera prawidłowy opis lub opis gramatyki, która zawiera odwołanie do reguły, których nie można rozpoznać."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasy z wystąpienia <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>i określa nazwę reguły punktu wejścia do gramatyki."
  remarks: "Można także określić parametry inicjowania obsługi."
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Wystąpienie <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> zawierający ograniczenia dla gramatyki rozpoznawania mowy."
    - id: ruleName
      type: System.String
      description: "Identyfikator reguły do użycia jako punkt wejścia gramatyki rozpoznawania mowy, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Aby użyć domyślnej reguły głównego opis gramatyki."
    - id: parameters
      type: System.Object[]
      description: "Parametry do przekazania do inicjowania obsługi określonego przez <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>Właściwości dla punktu wejścia lub główna reguła z <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> ma zostać utworzony.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Ten parametr może mieć wartości null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Żadnego z parametrów zawiera nieprawidłową wartość.      - <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> Określonego przez <code> srgsDocument </code> nie zawiera reguły, określone przez <code> ruleName </code>.      -Zawartości tablicy parametrów nie są zgodne argumenty reguły inicjowania obsługi."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasę z <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> obiektu, określa główna reguła i definiuje podstawowej zasobów identyfikator URI (Uniform) do rozpoznawania odwołań względne reguła."
  remarks: "Ten konstruktor nie zostały spełnione wszystkie parametry do inicjowania obsługi i <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>inicjowania obsługi, która wymaga argumentów, które nie powinny zawierać.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>       Nie można zweryfikować tego konstruktora `baseUri`. Jednak `LoadGrammar` metody <xref:System.Speech.Recognition.SpeechRecognitionEngine>lub <xref:System.Speech.Recognition.SpeechRecognizer>obiektu zgłasza wyjątek, jeśli nie można rozpoznać wszystkich odwołań do reguły w opisie gramatyki.</xref:System.Speech.Recognition.SpeechRecognizer> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Jeśli `baseUri` nie jest `null`, `LoadGrammar` metoda używa Rozwiąż wszelkie odwołania reguły, które w przeciwnym razie nie można rozpoznać identyfikatora URI. Jeśli `baseUri` reprezentuje plik, a następnie `LoadGrammar` metoda używa zarówno wskazanego pliku i katalog pliku podczas próby rozpoznania odwołania względne reguła."
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> that contains a relative rule reference to the cities.xml file, and specifies a URI to use to resolve the rule reference. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateSrgsDocumentGrammar3()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"Can I get a shuttle in\");  \n  \n  // Create a relative URI for the cities rule.  \n  Uri ruleUri = new Uri(\"cities.xml#Cities\", UriKind.Relative);  \n  \n  item.Add(new SrgsRuleRef(ruleUri));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the grammar.  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(document, null, baseUri);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar 3\";  \n  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Ograniczenia dla gramatyki rozpoznawania mowy."
    - id: ruleName
      type: System.String
      description: "Identyfikator reguły do użycia jako punkt wejścia gramatyki rozpoznawania mowy, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Aby użyć domyślnej reguły głównego z <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>."
    - id: baseUri
      type: System.Uri
      description: "Podstawowy identyfikator URI do użycia rozpoznania wszystkich odwołań względne reguła w <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>Nie można rozpoznać nazwy lub nie jest publiczny, lub <code>ruleName</code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i <code>srgsDocument</code> nie zawiera reguły głównego."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>zawiera odwołanie do reguły, których nie można rozpoznać."
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  id: '#ctor(System.String,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasy z pliku, który zawiera definicję gramatyki i określa nazwę reguły punktu wejścia do gramatyki."
  remarks: "Można także określić parametry inicjowania obsługi."
  syntax:
    content: public Grammar (string path, string ruleName, object[] parameters);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka do pliku, łącznie z biblioteki dll, zawiera specyfikację gramatyki."
    - id: ruleName
      type: System.String
      description: "Identyfikator reguły do użycia jako punkt wejścia gramatyki rozpoznawania mowy, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Aby użyć domyślnej reguły głównego opis gramatyki."
    - id: parameters
      type: System.Object[]
      description: "Parametry do przekazania do inicjowania obsługi określonego przez <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>Właściwości dla punktu wejścia lub główna reguła z <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> ma zostać utworzony.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Ten parametr może mieć wartości null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Żadnego z parametrów zawiera nieprawidłową wartość.      -Plik określony przez <code> path </code> nie zawiera nieprawidłowy gramatyki lub reguły, określona w <code> ruleName </code>.      -Zawartości tablicy parametrów nie są zgodne argumenty reguły inicjowania obsługi.      — Gramatyka zawiera odwołanie względne reguła nie została rozpoznana przez base domyślne <xref:System.Uri>Reguła gramatyki.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasy <xref:System.IO.Stream>i określa główna reguła i podstawowy identyfikator URI do rozpoznania odwołania względne.</xref:System.IO.Stream>"
  remarks: "Można także określić parametry inicjowania obsługi."
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>podłączone do obiektu wejścia/wyjścia (w tym pliki, zasoby Visual Studio i bibliotek DLL), który zawiera specyfikację gramatyki.</xref:System.IO.Stream>"
    - id: ruleName
      type: System.String
      description: "Identyfikator reguły do użycia jako punkt wejścia gramatyki rozpoznawania mowy, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Aby użyć domyślnej reguły głównego opis gramatyki."
    - id: baseUri
      type: System.Uri
      description: "Podstawowy identyfikator URI do użycia rozpoznania wszystkich odwołań względne reguła w opisie gramatyki lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: parameters
      type: System.Object[]
      description: "Parametry do przekazania do inicjowania obsługi określonego przez <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>Właściwości dla punktu wejścia lub główna reguła z <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> ma zostać utworzony.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*> Ten parametr może mieć wartości null."
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Żadnego z parametrów zawiera nieprawidłową wartość.      - <code> stream </code> Jest podłączony do gramatyki, która nie zawiera reguły, określone przez <code> ruleName </code>.      -Zawartości tablicy parametrów nie są zgodne argumenty reguły inicjowania obsługi.      — Gramatyka zawiera odwołanie względne reguła, którego nie można rozwiązać przez base domyślne <xref:System.Uri>Reguła gramatyki lub identyfikator URI dostarczony przez <code> baseUri </code>.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> klasy z wystąpienia <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>i określa nazwę reguły jako punkt wejścia podstawowy identyfikator URI do rozpoznania odwołania względne i gramatyki."
  remarks: "Można także określić parametry inicjowania obsługi."
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "Wystąpienie <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> zawierający ograniczenia dla gramatyki rozpoznawania mowy."
    - id: ruleName
      type: System.String
      description: "Identyfikator reguły do użycia jako punkt wejścia gramatyki rozpoznawania mowy, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Aby użyć domyślnej reguły głównego opis gramatyki."
    - id: baseUri
      type: System.Uri
      description: "Podstawowy identyfikator URI do użycia rozpoznania wszystkich odwołań względne reguła w opisie gramatyki lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: parameters
      type: System.Object[]
      description: "Parametry do przekazania do inicjowania obsługi określoną przez właściwość <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>dla punktu wejścia lub główna reguła z <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> ma zostać utworzony. Ten parametr może mieć wartości null.</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-Żadnego z parametrów zawiera nieprawidłową wartość.      - <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref> Określonego przez <code> srgsDocument </code> nie zawiera reguły, określona w <code> ruleName </code>.      -Zawartości tablicy parametrów nie są zgodne argumenty reguły inicjowania obsługi.      — Gramatyka zawiera odwołanie względne reguła nie została rozpoznana przez base domyślne <xref:System.Uri>Reguła gramatyki lub identyfikator URI dostarczony przez <code> baseUri </code>.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Enabled
  id: Enabled
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera lub ustawia wartość, która kontroluje, czy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> rozpoznawania mowy można przeprowadzać rozpoznawania."
  remarks: "Wystąpienie <xref:System.Speech.Recognition.Grammar>mogą być włączone lub wyłączone niezależnie od ładowany przez aparat rozpoznawania mowy.</xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Enabled&quot; name=&quot;Enabled&quot; href=&quot;&quot;> </xref> Zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli rozpoznawania mowy można wykonywać rozpoznawanie przy użyciu gramatyki rozpoznawania mowy; w przeciwnym razie wartość właściwości zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.IsStg
  id: IsStg
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera czy gramatyki jest silnie typizowane."
  remarks: "Silnie typizowanego <xref:System.Speech.Recognition.Grammar>obiektu (`IsStg` jest równe `true`) można zwrócić wyników jednoznacznie (obiekty, zamiast tekstu raw) do aplikacji klienckiej.</xref:System.Speech.Recognition.Grammar> Na przykład może zwrócić gramatyki jednoznacznie <xref:System.DateTime>obiektów zamiast nieprzetworzone dane wejściowe rozpoznanym.</xref:System.DateTime>       Można zaimplementować jednoznacznie gramatyki dołączając kodu z zasadami gramatyki. Jak aparat rozpoznawania przetwarza danej reguły, pobierania jako danych wejściowych bieżące wyniki częściowe, wykonywany jest skojarzony kod i informacji tekstowych staje się zaawansowanych typów obiektów. Dzięki temu klient łatwiej korzystania z rozszerzonej sprawdzanie semantycznego, obsługa wielu kultur i logiki wewnętrzny gramatyki.       Wystąpienia jednoznacznie <xref:System.Speech.Recognition.Grammar>obiekty są zazwyczaj uzyskiwane z zasobów w zestawie jako <xref:System.Type>z środowiska uruchomieniowego języka wspólnego (CLR).</xref:System.Type> </xref:System.Speech.Recognition.Grammar> Przykłady takich są zlokalizowane typy używane do obsługi różnych języków <xref:System.Speech.Recognition.Grammar>obiektów.</xref:System.Speech.Recognition.Grammar>"
  syntax:
    content: protected virtual bool IsStg { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_IsStg&quot; name=&quot;IsStg&quot; href=&quot;&quot;> </xref> Zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli gramatyki jest jednoznacznie; w przeciwnym razie wartość właściwości zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.IsStg*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Loaded
  id: Loaded
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera czy <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> została załadowana przez aparat rozpoznawania mowy."
  remarks: "Raz <xref:System.Speech.Recognition.Grammar>został załadowany, wartości <xref:System.Speech.Recognition.Grammar.Weight%2A>, i <xref:System.Speech.Recognition.Grammar.Priority%2A>nie można zmienić.</xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.Speech.Recognition.Grammar.Weight%2A> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Loaded { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Loaded&quot; name=&quot;Loaded&quot; href=&quot;&quot;> </xref> Zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli gramatyki rozpoznawania mowy przywoływanego jest aktualnie załadowany w rozpoznawania mowy; w przeciwnym razie wartość właściwości zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Loaded*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  id: LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "<xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref> Metoda zwraca zlokalizowany wystąpienia <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> obiektu pochodną <xref:System.Type>.</xref:System.Type>"
  remarks: "Zlokalizowane gramatyki uzyskany z `LoadLocalizedGrammarFromType` są zwykle jednoznacznie (zobacz <xref:System.Speech.Recognition.Grammar.IsStg%2A>uzyskać więcej informacji o jednoznacznie gramatyki).</xref:System.Speech.Recognition.Grammar.IsStg%2A> Jeśli `onInitParameters` jest odwołanie o wartości null (Nothing w języku Visual Basic) zlokalizowanych gramatyki powinny mieć żadnej metody inicjowania lub metodę, która nie przyjmuje żadnych argumentów."
  syntax:
    content: public static System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType (Type type, object[] onInitParameters);
    parameters:
    - id: type
      type: System.Type
      description: "W zestawie <xref:System.Type>obiektu na podstawie <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>.</xref:System.Type>"
    - id: onInitParameters
      type: System.Object[]
      description: "Na podstawie parametrów, które mają być przekazane do metody inicjowania localizedobject <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>. Ten parametr może mieć wartości null."
    return:
      type: System.Speech.Recognition.Grammar
      description: "<xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref> Metoda zwraca prawidłowy obiekt na podstawie <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli wystąpił błąd."
  overload: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Name
  id: Name
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera lub ustawia nazwę <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> obiektu."
  remarks: ''
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The Grammar objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> Właściwość zwraca nazwę <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> obiektu. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Priority
  id: Priority
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera lub ustawia wartość priorytetu <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> obiektu."
  remarks: "`Priority` Właściwość jest używana do wybierania gramatyki, gdy więcej niż jedną gramatykę da wynik identyczne rozpoznawania. Jeśli aparat rozpoznawania mowy ma więcej niż jeden mowy rozpoznawania gramatyki załadowany i włączone odpowiadających danych wejściowych, i dopasowania jest najlepszym wynik aparatu rozpoznawania, a następnie aparat rozpoznawania używa gramatyki, która ma najwyższy `Priority`. Jeśli gramatyki, które dają w wyniku rozpoznawania identyczne również mają taki sam `Priority` wartości, a następnie gramatyki, która korzysta z aparatu rozpoznawania jest niezdefiniowana."
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public int Priority { get; set; }
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Priority&quot; name=&quot;Priority&quot; href=&quot;&quot;> </xref> Właściwość zwraca wartość całkowitą reprezentującą względny priorytet określony <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>. Zakres wynosi od -128 do 127 znaków włącznie. Wartość domyślna to 0."
  overload: System.Speech.Recognition.Grammar.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.ResourceName
  id: ResourceName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera lub ustawia wartość z nazwą zasobu binarnego, użytej do załadowania bieżącej <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>."
  syntax:
    content: protected string ResourceName { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_ResourceName&quot; name=&quot;ResourceName&quot; href=&quot;&quot;> </xref> Właściwość zwraca nazwę zasobu binarnego, z którego gramatyki jednoznacznie używane przez <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>, został załadowany."
  overload: System.Speech.Recognition.Grammar.ResourceName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.RuleName
  id: RuleName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera nazwę głównej reguły lub wpis punktu <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> obiektu."
  remarks: "Aby utworzyć <xref:System.Speech.Recognition.Grammar>obiektu i określić nazwę dla jej główna reguła, użyj jednej z <xref:System.Speech.Recognition.Grammar.%23ctor%2A>konstruktorów `ruleName` parametru.</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar>       Jeśli główna reguła z <xref:System.Speech.Recognition.Grammar>nie ma nazwy, właściwości zwraca `null`.</xref:System.Speech.Recognition.Grammar>       Zasady głównego <xref:System.Speech.Recognition.Grammar>wystąpienia utworzone na podstawie <xref:System.Speech.Recognition.GrammarBuilder>obiektów zwykle nie mieć nazwy, więc zwraca RuleName `null`.</xref:System.Speech.Recognition.GrammarBuilder> </xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public string RuleName { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_RuleName&quot; name=&quot;RuleName&quot; href=&quot;&quot;> </xref> Właściwość zwraca identyfikator reguły głównego gramatyki rozpoznawania mowy do którego istnieje odwołanie. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Speech.Recognition.Grammar.RuleName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  id: SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Wywoływane, gdy aparat rozpoznawania mowy przeprowadza rozpoznawanie przy użyciu <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> obiektu."
  remarks: "Aparat rozpoznawania mowy również zgłasza `SpeechRecognized` zdarzeń po znalezieniu danych wejściowych. <xref:System.Speech.Recognition.Grammar>Obiektu SpeechRecognized zdarzenie jest wywoływane przed rozpoznawania mowy `SpeechRecognized` zdarzeń.</xref:System.Speech.Recognition.Grammar> Aby uzyskać więcej informacji, zobacz <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, i <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted>zdarzeń.</xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted> </xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName> </xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>       Wszystkie zadania, które są specyficzne dla konkretnego gramatyki zawsze powinno zostać obsłużone przez programy obsługi dla <xref:System.Speech.Recognition.Grammar>obiektu SpeechRecognized zdarzeń.</xref:System.Speech.Recognition.Grammar>"
  example:
  - "The following example shows the use of an event handler for the <xref:System.Speech.Recognition.Grammar> object's SpeechRecognized event. It outputs the recognition results to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \npublic partial class Form1 : Form  \n{  \n  SpeechRecognitionEngine sre;  \n  \n  public Form1()  \n  {  \n  InitializeComponent();  \n  \n  // Create an in-process speech recognizer.  \n  sre = new SpeechRecognitionEngine();  \n  \n  // Configure input to the speech recognizer.  \n  sre.SetInputToDefaultAudioDevice();  \n  \n  // Create a simple grammar and load it.  \n  Grammar testGrammar = new Grammar(new GrammarBuilder(\"testing\"));  \n  sre.LoadGrammarAsync(testGrammar);  \n  \n  // Add a handler for the grammar's speech recognized event.  \n  testGrammar.SpeechRecognized += new EventHandler<SpeechRecognizedEventArgs>(testGrammar_SpeechRecognized);  \n  \n  // Start asynchronous speech recognition.  \n  sre.RecognizeAsync();  \n  }  \n  \n  // Handle the grammar's SpeechRecognized event, output the recognized text.  \n  void testGrammar_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n  {  \n    Console.WriteLine(\"Recognized text: \" + e.Result.Text);  \n  }  \n}  \n```"
  syntax:
    content: public event EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs> SpeechRecognized;
    return:
      type: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  id: StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "<xref uid=&quot;langword_csharp_StgInit&quot; name=&quot;StgInit&quot; href=&quot;&quot;> </xref> Metoda inicjuje jednoznacznie gramatyki."
  remarks: "Silnie typizowanego <xref:System.Speech.Recognition.Grammar>obiektu (`IsStg` jest równe `true`) można zwrócić wyników jednoznacznie (obiekty, zamiast tekstu raw) do aplikacji klienckiej.</xref:System.Speech.Recognition.Grammar> Na przykład może zwrócić gramatyki jednoznacznie <xref:System.DateTime>obiektów zamiast nieprzetworzone dane wejściowe rozpoznanym.</xref:System.DateTime>       Można zaimplementować jednoznacznie gramatyki dołączając kodu z zasadami gramatyki. Jak aparat rozpoznawania przetwarza danej reguły, pobierania jako danych wejściowych bieżące wyniki częściowe, wykonywany jest skojarzony kod i informacji tekstowych staje się zaawansowanych typów obiektów. Dzięki temu klient łatwiej korzystania z rozszerzonej sprawdzanie semantycznego, obsługa wielu kultur i logiki wewnętrzny gramatyki.       Wystąpienia jednoznacznie <xref:System.Speech.Recognition.Grammar>obiekty są zazwyczaj uzyskiwane z zasobów w zestawie jako <xref:System.Type>z środowiska uruchomieniowego języka wspólnego (CLR).</xref:System.Type> </xref:System.Speech.Recognition.Grammar> Przykłady takich są zlokalizowane typy używane do obsługi różnych języków <xref:System.Speech.Recognition.Grammar>obiektów.</xref:System.Speech.Recognition.Grammar>"
  syntax:
    content: protected void StgInit (object[] parameters);
    parameters:
    - id: parameters
      type: System.Object[]
      description: "Parametry do przekazania do zainicjowania jednoznacznie gramatyki. Ten parametr może mieć wartości null."
  overload: System.Speech.Recognition.Grammar.StgInit*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Weight
  id: Weight
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera lub ustawia wartość wagi <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> obiektu."
  remarks: "Ze względu na złożoność używanie aparatu rozpoznawania **wagi**, jego wpływ na wydajność określonego gramatyki nie jest bezpośrednio jako wartości prognozowanych co <xref:System.Speech.Recognition.Grammar.Priority%2A>.</xref:System.Speech.Recognition.Grammar.Priority%2A>       Rozpoznawanie mowy jest ważony systemu. Oblicza wszystkie ścieżki rozpoznawania możliwe oparty na kombinacji wagę gramatyki, wag zdefiniowane dla alternatyw w ramach gramatyki i prawdopodobieństwa zdefiniowany przez modele mowy. Aparat rozpoznawania mowy używa kombinacji tych wag i prawdopodobieństwa do rangi potencjalnych uznania alternatywnych. Gramatyki o wagach wyższej przyczyniają się więcej na temat klasyfikacji alternatyw rozpoznawania niż gramatyki o wagach niższa.       Wpływ właściwość wagi na rozpoznawania mowy zależy od implementacji aparat rozpoznawania. Mimo że właściwość wagi może być używana do dopasowywania dokładność rozpoznawania mowy dla aplikacji, powinien być używany tylko po kontrolowane badania diagnostycznych rozpoznawanie konkretnego środowiska i wszystkie informacje o aparatu rozpoznawania pod użycia."
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public float Weight { get; set; }
    return:
      type: System.Single
      description: "<xref uid=&quot;langword_csharp_Weight&quot; name=&quot;Weight&quot; href=&quot;&quot;> </xref> Zwraca zmiennoprzecinkowa wartość wskazującą względną wagę, które wystąpienie aparatu rozpoznawania należy przypisać do gramatyki podczas przetwarzania danych wejściowych mowy. Zakres wynosi od 0,0 do 1,0 włącznie. Wartość domyślna to 1.0."
  overload: System.Speech.Recognition.Grammar.Weight*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Speech.Recognition.Grammar.#ctor
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
- uid: System.Speech.Recognition.GrammarBuilder
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsDocument
  nameWithType: SrgsDocument
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.Enabled
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.Recognition.Grammar.IsStg
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Speech.Recognition.Grammar.Name
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.Grammar.ResourceName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
- uid: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeechRecognizedEventArgs>
  nameWithType: EventHandler<SpeechRecognizedEventArgs>
  fullName: System.EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.SpeechRecognizedEventArgs
    name: SpeechRecognizedEventArgs
    nameWithType: SpeechRecognizedEventArgs
    fullName: SpeechRecognizedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
- uid: System.Speech.Recognition.Grammar.Weight
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.Grammar.#ctor*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar
  nameWithType: Grammar.Grammar
- uid: System.Speech.Recognition.Grammar.Enabled*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
- uid: System.Speech.Recognition.Grammar.IsStg*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType
  nameWithType: Grammar.LoadLocalizedGrammarFromType
- uid: System.Speech.Recognition.Grammar.Name*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
- uid: System.Speech.Recognition.Grammar.ResourceName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.StgInit*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit
  nameWithType: Grammar.StgInit
- uid: System.Speech.Recognition.Grammar.Weight*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
