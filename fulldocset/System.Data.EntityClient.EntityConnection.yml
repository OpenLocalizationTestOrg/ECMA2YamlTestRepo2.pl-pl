### YamlMime:ManagedReference
items:
- uid: System.Data.EntityClient.EntityConnection
  id: EntityConnection
  children:
  - System.Data.EntityClient.EntityConnection.#ctor
  - System.Data.EntityClient.EntityConnection.#ctor(System.String)
  - System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)
  - System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.EntityClient.EntityConnection.BeginTransaction
  - System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)
  - System.Data.EntityClient.EntityConnection.Close
  - System.Data.EntityClient.EntityConnection.ConnectionString
  - System.Data.EntityClient.EntityConnection.ConnectionTimeout
  - System.Data.EntityClient.EntityConnection.CreateCommand
  - System.Data.EntityClient.EntityConnection.CreateDbCommand
  - System.Data.EntityClient.EntityConnection.Database
  - System.Data.EntityClient.EntityConnection.DataSource
  - System.Data.EntityClient.EntityConnection.DbProviderFactory
  - System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)
  - System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.EntityClient.EntityConnection.GetMetadataWorkspace
  - System.Data.EntityClient.EntityConnection.Open
  - System.Data.EntityClient.EntityConnection.ServerVersion
  - System.Data.EntityClient.EntityConnection.State
  - System.Data.EntityClient.EntityConnection.StoreConnection
  langs:
  - csharp
  name: EntityConnection
  nameWithType: EntityConnection
  fullName: System.Data.EntityClient.EntityConnection
  type: Class
  summary: "Zawiera odwołania do modelu koncepcyjnego i połączenie ze źródłem danych. Ta klasa nie może być dziedziczona."
  remarks: "Aby uniknąć przypadkowo umieszczanie obiektów, takich jak <xref:System.Data.Common.CommandTrees>i <xref:System.Data.Objects.ObjectContext>zsynchronizowane z metadanymi ich EntityConnection zablokować jej metadane.</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Wprowadzanie zmian w parametrach połączenia jest niedozwolone, po zablokowaniu metadanych. Poniżej przedstawiono dwa scenariusze, w których metadanych jest zablokowana:-wystąpienie typu EntityConnection jest tworzony za pomocą konstruktora domyślnego lub za pomocą <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>konstruktora, który akceptuje parametry połączenia.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> W obu przypadkach ciągu połączenia może ulec zmianie wielokrotnie przed otwarciem połączenia. Wywoływanie <xref:System.Data.EntityClient.EntityConnection.Open%2A>lub <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>blokuje metadanych.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      Wystąpienie typu EntityConnection został skonstruowany przy użyciu <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>konstruktora, który akceptuje <xref:System.Data.Metadata.Edm.MetadataWorkspace>i <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> W takim przypadku metadanych jest zablokowane w momencie tworzenia. Wprowadzanie zmian w parametrach połączenia kiedykolwiek jest niedozwolone.       Po załadowaniu metadanych EntityConnection sprawdza, czy modelu koncepcyjnego i modelu magazynu, plik mapowania są wszystkie.       Aby uzyskać przykłady kodu, zobacz [Praca z EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."
  syntax:
    content: 'public sealed class EntityConnection : System.Data.Common.DbConnection'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.GetSchema
  - System.Data.Common.DbConnection.GetSchema(System.String)
  - System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.#ctor
  id: '#ctor'
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EntityConnection()
  nameWithType: EntityConnection.EntityConnection()
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> klasy."
  remarks: "Aby uniknąć przypadkowo umieszczanie obiektów, takich jak <xref:System.Data.Common.CommandTrees>i <xref:System.Data.Objects.ObjectContext>zsynchronizowane z ich metadanych <xref:System.Data.EntityClient.EntityConnection>zablokować jej metadane.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Wprowadzanie zmian w parametrach połączenia jest niedozwolone, po zablokowaniu metadanych. Poniżej przedstawiono dwa scenariusze, w których metadanych jest zablokowana: - <xref:System.Data.EntityClient.EntityConnection>wystąpienie jest tworzony za pomocą konstruktora domyślnego lub za pomocą <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>konstruktora, który akceptuje parametry połączenia.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> W obu przypadkach ciągu połączenia może ulec zmianie wielokrotnie przed otwarciem połączenia. Wywoływanie <xref:System.Data.EntityClient.EntityConnection.Open%2A>lub <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>blokuje metadanych.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      <xref:System.Data.EntityClient.EntityConnection>Wystąpienia jest tworzony za pomocą <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>konstruktora, który akceptuje <xref:System.Data.Metadata.Edm.MetadataWorkspace>i <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> W takim przypadku metadanych jest zablokowane w momencie konstrukcji. Wprowadzanie zmian w parametrach połączenia kiedykolwiek jest niedozwolone.       Po załadowaniu metadanych <xref:System.Data.EntityClient.EntityConnection>sprawdza, czy modelu koncepcyjnego i modelu magazynu, plik mapowania są wszystkie dostępne.</xref:System.Data.EntityClient.EntityConnection>       Aby uzyskać przykłady kodu, zobacz [Praca z EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."
  syntax:
    content: public EntityConnection ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EntityConnection(String)
  nameWithType: EntityConnection.EntityConnection(String)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(String)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> klasy oparte na parametry połączenia."
  remarks: "Wygeneruj ciąg połączenia nazwanego, który jest przechowywany w pliku konfiguracji aplikacji. Ten ciąg połączenia nazwanego mogą być dostarczane zamiast `connectionString` parametrem w przypadku wystąpienia <xref:System.Data.EntityClient.EntityConnection>klasy.</xref:System.Data.EntityClient.EntityConnection>       Aby uniknąć przypadkowego wprowadzenia obiektów <xref:System.Data.Common.CommandTrees>i <xref:System.Data.Objects.ObjectContext>zsynchronizowane z ich metadanych <xref:System.Data.EntityClient.EntityConnection>zablokować jej metadane.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Wprowadzanie zmian w parametrach połączenia jest niedozwolone, po zablokowaniu metadanych. Poniżej przedstawiono dwa scenariusze, w których metadanych jest zablokowana: - <xref:System.Data.EntityClient.EntityConnection>wystąpienie jest tworzony za pomocą konstruktora domyślnego lub przy użyciu tego konstruktora (EntityConnection), która przyjmuje parametry połączenia.</xref:System.Data.EntityClient.EntityConnection> W obu przypadkach ciągu połączenia może ulec zmianie wielokrotnie przed otwarciem połączenia. Wywoływanie <xref:System.Data.EntityClient.EntityConnection.Open%2A>lub <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>blokuje metadanych.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      <xref:System.Data.EntityClient.EntityConnection>Wystąpienia jest tworzony za pomocą <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>konstruktora, który akceptuje <xref:System.Data.Metadata.Edm.MetadataWorkspace>i <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> W takim przypadku metadanych jest zablokowane w momencie konstrukcji. Wprowadzanie zmian w parametrach połączenia kiedykolwiek jest niedozwolone.       Po załadowaniu metadanych <xref:System.Data.EntityClient.EntityConnection>sprawdza, czy modelu koncepcyjnego i modelu magazynu, plik mapowania są wszystkie dostępne.</xref:System.Data.EntityClient.EntityConnection>       Aby uzyskać przykłady kodu, zobacz [Praca z EntityClient](http://msdn.microsoft.com/en-us/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)."
  syntax:
    content: public EntityConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Parametry połączenia specyficzne dla dostawcy."
  overload: System.Data.EntityClient.EntityConnection.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Podano słowo kluczowe parametrów połączenia nieprawidłowy lub nie podano słowo kluczowe parametrów połączenia wymagane."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)
  id: '#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)'
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EntityConnection(MetadataWorkspace,DbConnection)
  nameWithType: EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> z określonym <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> i <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref>."
  remarks: "Ten konstruktor umożliwia utworzenie <xref:System.Data.EntityClient.EntityConnection>z metadanych nie z pliku na dysku lub z zasobu osadzonego w zestawie.</xref:System.Data.EntityClient.EntityConnection>       Aby uniknąć przypadkowo umieszczanie obiektów, takich jak <xref:System.Data.Common.CommandTrees>i <xref:System.Data.Objects.ObjectContext>zsynchronizowane z ich metadanych <xref:System.Data.EntityClient.EntityConnection>zablokować jej metadane.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Wprowadzanie zmian w parametrach połączenia jest niedozwolone, po zablokowaniu metadanych. Poniżej przedstawiono dwa scenariusze, w których metadanych jest zablokowana: - <xref:System.Data.EntityClient.EntityConnection>wystąpienie jest tworzony za pomocą konstruktora domyślnego lub za pomocą <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>konstruktora, który akceptuje parametry połączenia.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> W obu przypadkach ciągu połączenia może ulec zmianie wielokrotnie przed otwarciem połączenia. Wywoływanie <xref:System.Data.EntityClient.EntityConnection.Open%2A>lub <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>blokuje metadanych.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      <xref:System.Data.EntityClient.EntityConnection>Wystąpienia jest tworzony przy użyciu tego konstruktora (EntityConnection), który akceptuje <xref:System.Data.Metadata.Edm.MetadataWorkspace>i <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection> W takim przypadku metadanych jest zablokowane w momencie konstrukcji. Wprowadzanie zmian w parametrach połączenia kiedykolwiek jest niedozwolone.       Po załadowaniu metadanych <xref:System.Data.EntityClient.EntityConnection>sprawdza, czy modelu koncepcyjnego i modelu magazynu, plik mapowania są wszystkie dostępne.</xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public EntityConnection (System.Data.Metadata.Edm.MetadataWorkspace workspace, System.Data.Common.DbConnection connection);
    parameters:
    - id: workspace
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "A <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> ma zostać skojarzony z tym <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>."
    - id: connection
      type: System.Data.Common.DbConnection
      description: "Połączenia dla tego źródła danych <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> obiektu."
  overload: System.Data.EntityClient.EntityConnection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>workspace</code> or <code>connection</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Brak modelu koncepcyjnego z obszaru roboczego.       - lub - Brak pliku mapowania z obszaru roboczego.       - lub - Brak modelu magazynu z obszaru roboczego.       - lub - <code> connection </code> nie jest w stanie zamkniętym."
  - type: System.Data.ProviderIncompatibleException
    commentId: T:System.Data.ProviderIncompatibleException
    description: "<code> connection </code> Nie pochodzi od dostawcy programu ADO.NET Entity Framework zgodnego."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Do dodania."
    return:
      type: System.Data.Common.DbTransaction
      description: "Do dodania."
  overload: System.Data.EntityClient.EntityConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: EntityConnection.BeginTransaction()
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Rozpoczyna transakcją przy użyciu podstawowego dostawcy."
  remarks: "Używa metody BeginTransaction <xref:System.Data.IsolationLevel>poziom izolacji transakcji.</xref:System.Data.IsolationLevel> Aby określić poziom izolacji innego, należy wywołać <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> Ta wartość mogą być interpretowane inaczej przez różnych dostawców podstawowej. Jeśli chcesz, aby aplikacja ma być przenośnego przez wielu dostawców, należy go jawnie określić poziom izolacji transakcji przez wywołanie metody <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>       W określonym momencie może istnieć co najwyżej jeden aktywnej transakcji, który został utworzony za pomocą BeginTransaction. Próba wywołania żadnego przeciążenia BeginTransaction na <xref:System.Data.EntityClient.EntityConnection>już mający bieżących wyników transakcji w <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public System.Data.EntityClient.EntityTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.EntityClient.EntityTransaction
      description: "A new <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;></xref>. Zwrócona <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;> </xref> wystąpienia później można ją skojarzyć z <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref> można wykonać polecenia w ramach tej transakcji."
  overload: System.Data.EntityClient.EntityConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Źródłowy dostawca nie jest znany.       Wykonano wywołanie BeginTransaction w - lub - <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> ma już bieżącej transakcji.       - lub - stanu <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> nie jest <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Rozpoczyna się transakcji o poziomie izolacji określony przy użyciu podstawowego dostawcy."
  remarks: "W określonym momencie nie mogą istnieć co najwyżej jeden aktywnej transakcji, który został utworzony za pomocą <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> Próba wywołania żadnego <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>przeciążenia, na <xref:System.Data.EntityClient.EntityConnection>który już ma bieżących wyników transakcji w <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>"
  syntax:
    content: public System.Data.EntityClient.EntityTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Poziom izolacji transakcji."
    return:
      type: System.Data.EntityClient.EntityTransaction
      description: "A new <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;></xref>. Zwrócona <xref href=&quot;System.Data.EntityClient.EntityTransaction&quot;> </xref> wystąpienia później można ją skojarzyć z <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref> można wykonać polecenia w ramach tej transakcji."
  overload: System.Data.EntityClient.EntityConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Źródłowy dostawca nie jest znany.       - lub - wywołanie <xref:System.Data.EntityClient.EntityConnection.BeginTransaction*>zostało wykonane w <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> ma już bieżącej transakcji.</xref:System.Data.EntityClient.EntityConnection.BeginTransaction*>       - lub - stanu <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> nie jest <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: EntityConnection.ChangeDatabase(String)
  fullName: System.Data.EntityClient.EntityConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Nieobsługiwane."
  remarks: "Metoda ChangeDatabase jest wymagany, jeśli pochodny <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> Ta metoda nie jest obsługiwana i zgłosi <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  syntax:
    content: public override void ChangeDatabase (string databaseName);
    parameters:
    - id: databaseName
      type: System.String
      description: "Nieobsługiwane."
  overload: System.Data.EntityClient.EntityConnection.ChangeDatabase*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Gdy jest wywoływana metoda."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Close
  id: Close
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Close()
  nameWithType: EntityConnection.Close()
  fullName: System.Data.EntityClient.EntityConnection.Close()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Zamyka połączenie z bazą danych."
  remarks: "Jeśli źródłowy dostawca danych nie jest znany, w wywołaniu Close nie działa."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnection.Close*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wystąpił błąd podczas zamykania połączenia."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: EntityConnection.ConnectionString
  fullName: System.Data.EntityClient.EntityConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Pobiera lub ustawia <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> parametry połączenia."
  remarks: "An `EntityClient` connection string consists of a sequence of keyword/value parameter pairs separated by semicolons. The equals sign (=) connects each keyword and its value. The following table lists the valid names for keyword values in the ConnectionString.  \n  \n|Keyword|Description|  \n|-------------|-----------------|  \n|`Provider`|Required if the `Name` keyword is not specified. The provider name, which is used to retrieve the <xref:System.Data.Common.DbProviderFactory> object for the underlying provider. This value is constant.<br /><br /> When the `Name` keyword is not included in the connection string, a non-empty value for the `Provider` keyword is required. This keyword is mutually exclusive with the `Name` keyword.|  \n|`Provider Connection String`|Optional. Specifies the provider-specific connection string that is passed to the underlying data source. This connection string is expressed by using valid keyword/value pairs for the data provider. An invalid `Provider Connection String` will cause a run-time error when it is evaluated by the data source.<br /><br /> This keyword is mutually exclusive with the `Name` keyword.<br /><br /> The value of the `Provider Connection String` must be surrounded by quotes. The following is an example:<br /><br /> `Provider Connection String =\"Server=serverName; User ID = userID\";`<br /><br /> The following example is not going to work:<br /><br /> `Provider Connection String =Server=serverName; User ID = userID`|  \n|`Metadata`|Required if the `Name` keyword is not specified. A pipe-delimited list of directories, files, and resource locations in which to look for model and mapping information. The following is an example:<br /><br /> `Metadata=`<br /><br /> `c:\\model &#124; c:\\model\\sql\\mapping.msl;`<br /><br /> Blank spaces on each side of the pipe separator are ignored.<br /><br /> This keyword is mutually exclusive with the `Name` keyword.|  \n|`Name`|The application can optionally specify the connection name in an application configuration file that provides the required keyword/value connection string values. In this case, you cannot supply them directly in the connection string. The `Name` keyword is not allowed in a configuration file.<br /><br /> When the `Name` keyword is not included in the connection string, a non-empty values for Provider keyword is required.<br /><br /> This keyword is mutually exclusive with all the other connection string keywords.|  \n  \n The application can supply the keyword/values directly in the ConnectionString property, or it can specify a value for the `Name` keyword. If the `Name` keyword is specified, the connection string keyword/values are retrieved from an application configuration file, as follows:  \n  \n `Name=AdventureWorksEntities;`  \n  \n If the `Name` keyword is used in the ConnectionString property, other keywords are not allowed. The `Name` keyword refers to a named connection string that is stored in the `connectionStrings` section in an application configuration file, as shown in the following example. The `Provider`, `Metadata`, and `Provider Connection String` values are retrieved from the configuration file at run time.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The keyword/value pairs can also be supplied directly in the ConnectionString property, as shown in the following example. In this case, the `Name` keyword is not used.  \n  \n```  \n\"Provider=System.Data.SqlClient;  \nMetadata=c:\\metadata|c:\\Metadata\\Sql;  \nProvider Connection String= 'Data Source=localhost;  \n    Initial Catalog=AdventureWorks;Integrated Security=True;Connection Timeout=60' \"  \n```  \n  \n To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata. No changes to the connection string are allowed after the metadata is locked. The following are two scenarios in which metadata is locked:  \n  \n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string. In either case the connection string might be changed multiple times before the connection is opened. Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.  \n  \n-   The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>. In this case the metadata is locked at construction time. No changes to the connection string are ever allowed.  \n  \n When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present."
  example:
  - "The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> string that supplies part of the underlying provider connection string. Note that the `Provider` name cannot be set by using the `SqlConnectionStringBuilder`, because it does not use valid `SqlConnection` syntax. The code creates the <xref:System.Data.EntityClient.EntityConnection> string by setting `EntityConnectionStringBuilder` properties.  \n  \n [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/visualbasic/eSQLExamplesVB/Program.vb#buildingconnectionstringwithentitycommand)]\n [!code-cs[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/add/codesnippet/csharp/eSQLExamplesCS/Program.cs#buildingconnectionstringwithentitycommand)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "Parametry połączenia wymagane do ustanowienia początkowego połączenia ze źródłem danych. Wartość domyślna to ciąg pusty. Połączenie zamknięte, aktualnie ustawione jest zwracana wartość. Jeśli nie ustawiono żadnej wartości, zwracany jest pustym ciągiem."
  overload: System.Data.EntityClient.EntityConnection.ConnectionString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nastąpiła próba można ustawić właściwości ConnectionString po [EntityConnection](~/add/includes/ajax-current-ext-md.md)w <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> został zainicjowany. [Obiektu MetadataWorkspace](~/add/includes/ajax-current-ext-md.md) jest zainicjowany albo gdy <xref href=&quot;System.Data.Odbc.OdbcError&quot;> </xref> wystąpienia jest tworzony za pomocą przeciążenia, które przyjmuje <xref href=&quot;System.Data.Odbc.OdbcError&quot;> </xref> jako parametru, lub gdy <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> wystąpienie zostało otwarte."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Podano słowo kluczowe parametrów połączenia nieprawidłowy lub nie podano słowo kluczowe parametrów połączenia wymagane."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: EntityConnection.ConnectionTimeout
  fullName: System.Data.EntityClient.EntityConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Pobiera liczbę sekund oczekiwania podczas próby ustanowienia połączenia przed zakończeniem próby i wygenerowaniem błędu."
  remarks: "Zwraca zero, jeśli źródłowy dostawca danych nie jest znany."
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "Czas (w sekundach) oczekiwania na połączenie, aby otworzyć. Wartość domyślna to podstawowy dostawca danych domyślny limit czasu."
  overload: System.Data.EntityClient.EntityConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Podana wartość jest mniejsza niż 0."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: EntityConnection.CreateCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref>, z <xref:System.Data.EntityClient.EntityCommand.Connection*>ustawioną to <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>.</xref:System.Data.EntityClient.EntityCommand.Connection*>"
  syntax:
    content: public System.Data.EntityClient.EntityCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.EntityClient.EntityCommand
      description: "<xref href=&quot;System.Data.EntityClient.EntityCommand&quot;> </xref> Obiektu."
  overload: System.Data.EntityClient.EntityConnection.CreateCommand*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nieznana nazwa źródłowego dostawcy danych."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: EntityConnection.CreateDbCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Do dodania."
  overload: System.Data.EntityClient.EntityConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Database
  id: Database
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Database
  nameWithType: EntityConnection.Database
  fullName: System.Data.EntityClient.EntityConnection.Database
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Pobiera nazwę bieżącej bazy danych lub bazy danych, który będzie używany po otwarciu połączenia."
  remarks: "Wartości określone słowo kluczowe takie jak `Database`, która jest mapowana do właściwości bazy danych, zobacz dokumentację dla podstawowego dostawcy danych. Aby uzyskać [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] równoważne słów kluczowych, zobacz dokumentację <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>Właściwości.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "Wartość <xref uid=&quot;langword_csharp_Database&quot; name=&quot;Database&quot; href=&quot;&quot;> </xref> właściwości podstawowego dostawcy danych."
  overload: System.Data.EntityClient.EntityConnection.Database*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Źródłowy dostawca danych jest nieznany."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.DataSource
  id: DataSource
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: EntityConnection.DataSource
  fullName: System.Data.EntityClient.EntityConnection.DataSource
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Pobiera nazwę lub adres sieciowy źródła danych, aby nawiązać połączenie."
  remarks: "Wartości określone słowo kluczowe takie jak `DataSource`, która jest mapowana do właściwości źródła danych, zobacz dokumentację dla podstawowego dostawcy danych. Aby uzyskać [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] równoważne słów kluczowych, zobacz dokumentację <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>Właściwości.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "Nazwa źródła danych. Wartość domyślna to ciąg pusty."
  overload: System.Data.EntityClient.EntityConnection.DataSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Źródłowy dostawca danych jest nieznany."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory
  id: DbProviderFactory
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: DbProviderFactory
  nameWithType: EntityConnection.DbProviderFactory
  fullName: System.Data.EntityClient.EntityConnection.DbProviderFactory
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }
    return:
      type: System.Data.Common.DbProviderFactory
      description: "Do dodania."
  overload: System.Data.EntityClient.EntityConnection.DbProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EntityConnection.Dispose(Boolean)
  fullName: System.Data.EntityClient.EntityConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Do dodania."
  overload: System.Data.EntityClient.EntityConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: EntityConnection.EnlistTransaction(Transaction)
  fullName: System.Data.EntityClient.EntityConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Powoduje to zarejestrowanie <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> w określonej transakcji."
  remarks: "Ta metoda przekazuje wywołanie połączenia źródła danych można zarejestrować jawnie przekazany <xref:System.Transactions.Transaction>.</xref:System.Transactions.Transaction>"
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Obiekt transakcji można zarejestrować do."
  overload: System.Data.EntityClient.EntityConnection.EnlistTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Stan <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> nie jest <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace
  id: GetMetadataWorkspace
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: GetMetadataWorkspace()
  nameWithType: EntityConnection.GetMetadataWorkspace()
  fullName: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Zwraca <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> skojarzony z tym <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>."
  remarks: "A <xref:System.Data.Metadata.Edm.MetadataWorkspace>jest tworzony automatycznie podczas <xref:System.Data.EntityClient.EntityConnection>Klasa jest tworzona.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> Proces tworzenia może zgłaszać wyjątków dotyczących metadanych. Metadane jest ładowany do pamięci i aplikacja modelu danych jednostki (EDM) używa tych metadanych dostęp do informacji o źródle danych. Aby uzyskać więcej informacji, zobacz [metadanych ADO.NET](http://msdn.microsoft.com/en-us/196097a5-a791-4ac4-9e6a-805685d481d5).       Aby uniknąć przypadkowo umieszczanie obiektów, takich jak <xref:System.Data.Common.CommandTrees>i <xref:System.Data.Objects.ObjectContext>zsynchronizowane z ich metadanych <xref:System.Data.EntityClient.EntityConnection>zablokować jej metadane.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Wprowadzanie zmian w parametrach połączenia jest niedozwolone, po zablokowaniu metadanych. Poniżej przedstawiono dwa scenariusze, w których metadanych jest zablokowana: - <xref:System.Data.EntityClient.EntityConnection>wystąpienie jest tworzony za pomocą konstruktora domyślnego lub za pomocą <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>konstruktora, który akceptuje parametry połączenia.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> W obu przypadkach parametry połączenia mogą ulec zmianie wielokrotnie przed otwarciem połączenia. <xref:System.Data.EntityClient.EntityConnection.Open%2A>lub <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>blokuje metadanych.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A></xref:System.Data.EntityClient.EntityConnection.Open%2A>      <xref:System.Data.EntityClient.EntityConnection>Wystąpienia jest tworzony za pomocą <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>konstruktora, który akceptuje <xref:System.Data.Metadata.Edm.MetadataWorkspace>i <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> W takim przypadku metadanych jest zablokowane w momencie konstrukcji. Wprowadzanie zmian w parametrach połączenia kiedykolwiek jest niedozwolone.       Po załadowaniu metadanych <xref:System.Data.EntityClient.EntityConnection>sprawdza, czy modelu koncepcyjnego i modelu magazynu, plik mapowania są wszystkie dostępne.</xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace ();
    parameters: []
    return:
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "<xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> Skojarzony z tym <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>."
  overload: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace*
  exceptions:
  - type: System.Data.MetadataException
    commentId: T:System.Data.MetadataException
    description: "Parametry połączenia wbudowanego zawiera nieprawidłową <xref uid=&quot;langword_csharp_Metadata&quot; name=&quot;Metadata&quot; href=&quot;&quot;> </xref> wartości słowa kluczowego."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.Open
  id: Open
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: Open()
  nameWithType: EntityConnection.Open()
  fullName: System.Data.EntityClient.EntityConnection.Open()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Nawiązuje połączenie ze źródłem danych, wywołując podstawowego dostawcy danych<xref uid=&quot;langword_csharp_ Open&quot; name=&quot; Open&quot; href=&quot;&quot;> </xref> metody."
  remarks: "Aby uniknąć przypadkowo umieszczanie obiektów, takich jak <xref:System.Data.Common.CommandTrees>i <xref:System.Data.Objects.ObjectContext>zsynchronizowane z ich metadanych <xref:System.Data.EntityClient.EntityConnection>zablokować jej metadane.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Common.CommandTrees> Wprowadzanie zmian w parametrach połączenia jest niedozwolone, po zablokowaniu metadanych. Poniżej przedstawiono dwa scenariusze, w których metadanych jest zablokowana: - <xref:System.Data.EntityClient.EntityConnection>wystąpienie jest tworzony za pomocą konstruktora domyślnego lub za pomocą <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>konstruktora, który akceptuje parametry połączenia.</xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> </xref:System.Data.EntityClient.EntityConnection> W obu przypadkach ciągu połączenia może ulec zmianie wielokrotnie przed otwarciem połączenia. Wywoływanie <xref:System.Data.EntityClient.EntityConnection.Open%2A>lub <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>blokuje metadanych.</xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> </xref:System.Data.EntityClient.EntityConnection.Open%2A>      - <xref:System.Data.EntityClient.EntityConnection>Wystąpienie jest tworzony za pomocą <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>konstruktora, który akceptuje który <xref:System.Data.Metadata.Edm.MetadataWorkspace>i <xref:System.Data.Common.DbConnection>.</xref:System.Data.Common.DbConnection> </xref:System.Data.Metadata.Edm.MetadataWorkspace> </xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> </xref:System.Data.EntityClient.EntityConnection> W takim przypadku metadanych jest zablokowane w momencie konstrukcji. Wprowadzanie zmian w parametrach połączenia kiedykolwiek jest niedozwolone.       Po załadowaniu metadanych <xref:System.Data.EntityClient.EntityConnection>sprawdza, czy modelu koncepcyjnego i modelu magazynu, plik mapowania są wszystkie dostępne.</xref:System.Data.EntityClient.EntityConnection>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.EntityClient.EntityConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wystąpi błąd podczas otwierania połączenia lub nie jest znana nazwa źródłowego dostawcy danych."
  - type: System.Data.MetadataException
    commentId: T:System.Data.MetadataException
    description: "Parametry połączenia wbudowanego zawiera nieprawidłową <xref uid=&quot;langword_csharp_Metadata&quot; name=&quot;Metadata&quot; href=&quot;&quot;> </xref> wartości słowa kluczowego."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: EntityConnection.ServerVersion
  fullName: System.Data.EntityClient.EntityConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Pobiera ciąg, który zawiera wersję źródła danych, z którym klient jest połączony."
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "Wersja źródła danych, który jest zawarty w parametrach połączenia dostawcy."
  overload: System.Data.EntityClient.EntityConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Połączenie jest zamknięte."
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.State
  id: State
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: State
  nameWithType: EntityConnection.State
  fullName: System.Data.EntityClient.EntityConnection.State
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Pobiera <xref href=&quot;System.Data.ConnectionState&quot;> </xref> właściwości źródłowy Dostawca Jeśli <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> jest otwarty. W przeciwnym razie zwraca <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "<xref href=&quot;System.Data.ConnectionState&quot;></xref>, jeśli i tylko wtedy, gdy oba <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>jego stan wewnętrzny i źródłowy dostawca <xref href=&quot;System.Data.ConnectionState&quot;> </xref> są otwarte. Jeśli <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref>jego stan jest otwarty, ale dostawcy <xref href=&quot;System.Data.ConnectionState&quot;> </xref> jest zamknięty, ta właściwość zwraca <xref href=&quot;System.Data.ConnectionState&quot;> </xref>. W przeciwnym razie zwraca <xref href=&quot;System.Data.ConnectionState&quot;> </xref>."
  overload: System.Data.EntityClient.EntityConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityClient.EntityConnection.StoreConnection
  id: StoreConnection
  parent: System.Data.EntityClient.EntityConnection
  langs:
  - csharp
  name: StoreConnection
  nameWithType: EntityConnection.StoreConnection
  fullName: System.Data.EntityClient.EntityConnection.StoreConnection
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.EntityClient
  summary: "Zapewnia dostęp do podstawowego połączenia źródła danych, który jest używany przez <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> obiektu."
  remarks: "Jeśli <xref:System.Data.EntityClient.EntityConnection>obiekt jest zamknięty, połączenie ze źródłem danych zwróconych zostanie zamknięte.</xref:System.Data.EntityClient.EntityConnection> Jeśli jest on otwarty, połączenie ze źródłem danych otwórz zostaną zwrócone. Jeśli ustawiono informacji dotyczących połączenia źródła danych, zwracana wartość jest zawsze inną niż null. Jeśli nie ma żadnych informacji połączenia źródła danych, (na przykład jeśli użyto domyślnego konstruktora, a ciąg połączenia nie została ustawiona później), zwracana jest odwołanie o wartości null.       Inne części aplikacji można udostępniać tego samego połączenia źródła danych używane przez program Entity Framework. Połączenie ze źródłem danych jest zwracana jako <xref:System.Data.Common.DbConnection>obiekt z <xref:System.Data.Objects.ObjectContext.Connection%2A>Właściwość <xref:System.Data.Objects.ObjectContext>, lub z właściwości StoreConnection <xref:System.Data.EntityClient.EntityConnection>.</xref:System.Data.EntityClient.EntityConnection> </xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext.Connection%2A> </xref:System.Data.Common.DbConnection>"
  syntax:
    content: public System.Data.Common.DbConnection StoreConnection { get; }
    return:
      type: System.Data.Common.DbConnection
      description: "<xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> Dla połączenia źródła danych."
  overload: System.Data.EntityClient.EntityConnection.StoreConnection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.ProviderIncompatibleException
  parent: System.Data
  isExternal: false
  name: ProviderIncompatibleException
  nameWithType: ProviderIncompatibleException
  fullName: System.Data.ProviderIncompatibleException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.MetadataException
  parent: System.Data
  isExternal: false
  name: MetadataException
  nameWithType: MetadataException
  fullName: System.Data.MetadataException
- uid: System.Data.EntityClient.EntityConnection.#ctor
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection()
  nameWithType: EntityConnection.EntityConnection()
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection()
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.String)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection(String)
  nameWithType: EntityConnection.EntityConnection(String)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection(MetadataWorkspace,DbConnection)
  nameWithType: EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
  fullName: System.Data.EntityClient.EntityConnection.EntityConnection(MetadataWorkspace,DbConnection)
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: EntityConnection.BeginTransaction()
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction()
- uid: System.Data.EntityClient.EntityTransaction
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityTransaction
  nameWithType: EntityTransaction
  fullName: System.Data.EntityClient.EntityTransaction
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: EntityConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.EntityClient.EntityConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: EntityConnection.ChangeDatabase(String)
  fullName: System.Data.EntityClient.EntityConnection.ChangeDatabase(String)
- uid: System.Data.EntityClient.EntityConnection.Close
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Close()
  nameWithType: EntityConnection.Close()
  fullName: System.Data.EntityClient.EntityConnection.Close()
- uid: System.Data.EntityClient.EntityConnection.ConnectionString
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionString
  nameWithType: EntityConnection.ConnectionString
  fullName: System.Data.EntityClient.EntityConnection.ConnectionString
- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: EntityConnection.ConnectionTimeout
  fullName: System.Data.EntityClient.EntityConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.EntityClient.EntityConnection.CreateCommand
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: EntityConnection.CreateCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateCommand()
- uid: System.Data.EntityClient.EntityCommand
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityCommand
  nameWithType: EntityCommand
  fullName: System.Data.EntityClient.EntityCommand
- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: EntityConnection.CreateDbCommand()
  fullName: System.Data.EntityClient.EntityConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.EntityClient.EntityConnection.Database
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Database
  nameWithType: EntityConnection.Database
  fullName: System.Data.EntityClient.EntityConnection.Database
- uid: System.Data.EntityClient.EntityConnection.DataSource
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DataSource
  nameWithType: EntityConnection.DataSource
  fullName: System.Data.EntityClient.EntityConnection.DataSource
- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: EntityConnection.DbProviderFactory
  fullName: System.Data.EntityClient.EntityConnection.DbProviderFactory
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EntityConnection.Dispose(Boolean)
  fullName: System.Data.EntityClient.EntityConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: EntityConnection.EnlistTransaction(Transaction)
  fullName: System.Data.EntityClient.EntityConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: GetMetadataWorkspace()
  nameWithType: EntityConnection.GetMetadataWorkspace()
  fullName: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace()
- uid: System.Data.EntityClient.EntityConnection.Open
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Open()
  nameWithType: EntityConnection.Open()
  fullName: System.Data.EntityClient.EntityConnection.Open()
- uid: System.Data.EntityClient.EntityConnection.ServerVersion
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ServerVersion
  nameWithType: EntityConnection.ServerVersion
  fullName: System.Data.EntityClient.EntityConnection.ServerVersion
- uid: System.Data.EntityClient.EntityConnection.State
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: State
  nameWithType: EntityConnection.State
  fullName: System.Data.EntityClient.EntityConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.EntityClient.EntityConnection.StoreConnection
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: StoreConnection
  nameWithType: EntityConnection.StoreConnection
  fullName: System.Data.EntityClient.EntityConnection.StoreConnection
- uid: System.Data.EntityClient.EntityConnection.#ctor*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EntityConnection
  nameWithType: EntityConnection.EntityConnection
- uid: System.Data.EntityClient.EntityConnection.BeginDbTransaction*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: EntityConnection.BeginDbTransaction
- uid: System.Data.EntityClient.EntityConnection.BeginTransaction*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: EntityConnection.BeginTransaction
- uid: System.Data.EntityClient.EntityConnection.ChangeDatabase*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: EntityConnection.ChangeDatabase
- uid: System.Data.EntityClient.EntityConnection.Close*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Close
  nameWithType: EntityConnection.Close
- uid: System.Data.EntityClient.EntityConnection.ConnectionString*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionString
  nameWithType: EntityConnection.ConnectionString
- uid: System.Data.EntityClient.EntityConnection.ConnectionTimeout*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: EntityConnection.ConnectionTimeout
- uid: System.Data.EntityClient.EntityConnection.CreateCommand*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateCommand
  nameWithType: EntityConnection.CreateCommand
- uid: System.Data.EntityClient.EntityConnection.CreateDbCommand*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: EntityConnection.CreateDbCommand
- uid: System.Data.EntityClient.EntityConnection.Database*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Database
  nameWithType: EntityConnection.Database
- uid: System.Data.EntityClient.EntityConnection.DataSource*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DataSource
  nameWithType: EntityConnection.DataSource
- uid: System.Data.EntityClient.EntityConnection.DbProviderFactory*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: EntityConnection.DbProviderFactory
- uid: System.Data.EntityClient.EntityConnection.Dispose*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Dispose
  nameWithType: EntityConnection.Dispose
- uid: System.Data.EntityClient.EntityConnection.EnlistTransaction*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: EntityConnection.EnlistTransaction
- uid: System.Data.EntityClient.EntityConnection.GetMetadataWorkspace*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: GetMetadataWorkspace
  nameWithType: EntityConnection.GetMetadataWorkspace
- uid: System.Data.EntityClient.EntityConnection.Open*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: Open
  nameWithType: EntityConnection.Open
- uid: System.Data.EntityClient.EntityConnection.ServerVersion*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: ServerVersion
  nameWithType: EntityConnection.ServerVersion
- uid: System.Data.EntityClient.EntityConnection.State*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: State
  nameWithType: EntityConnection.State
- uid: System.Data.EntityClient.EntityConnection.StoreConnection*
  parent: System.Data.EntityClient.EntityConnection
  isExternal: false
  name: StoreConnection
  nameWithType: EntityConnection.StoreConnection
