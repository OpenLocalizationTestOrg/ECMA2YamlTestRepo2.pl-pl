### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymBinder
  id: SymBinder
  children:
  - System.Diagnostics.SymbolStore.SymBinder.#ctor
  - System.Diagnostics.SymbolStore.SymBinder.Dispose
  - System.Diagnostics.SymbolStore.SymBinder.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymBinder.Finalize
  - System.Diagnostics.SymbolStore.SymBinder.GetReader(System.Int32,System.String,System.String)
  - System.Diagnostics.SymbolStore.SymBinder.GetReader(System.IntPtr,System.String,System.String)
  langs:
  - csharp
  name: SymBinder
  nameWithType: SymBinder
  fullName: System.Diagnostics.SymbolStore.SymBinder
  type: Class
  summary: "Reprezentuje integrator symbol dla kodu zarządzanego."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymBinder : System.Diagnostics.SymbolStore.SymBinderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolBinder, System.Diagnostics.SymbolStore.ISymbolBinder1
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymBinderBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolBinder
  - System.Diagnostics.SymbolStore.ISymbolBinder1
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymBinderBase.{dtor}
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymBinder.#ctor
  id: '#ctor'
  parent: System.Diagnostics.SymbolStore.SymBinder
  langs:
  - csharp
  name: SymBinder()
  nameWithType: SymBinder.SymBinder()
  fullName: System.Diagnostics.SymbolStore.SymBinder.SymBinder()
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Diagnostics.SymbolStore.SymBinder&quot;> </xref> klasy."
  syntax:
    content: public SymBinder ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymBinder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymBinder.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymBinder
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymBinder.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymBinder.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Zwalnia zasoby używane przez bieżące wystąpienie klasy <xref href=&quot;System.Diagnostics.SymbolStore.SymBinder&quot;> </xref> klasy."
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymBinder.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymBinder.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymBinder
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymBinder.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymBinder.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Wywoływane przez <> </> *> i <> </> *> metod, aby zwolnić zasoby zarządzane i niezarządzane używane przez bieżące wystąpienie klasy <xref href=&quot;System.Diagnostics.SymbolStore.SymBinder&quot;> </xref> klasy."
  remarks: "Ta metoda jest wywoływana tylko przez metodę publiczną <xref:System.Diagnostics.SymbolStore.SymBinder.Dispose%2A>i <xref:System.Diagnostics.SymbolStore.SymBinder.Finalize%2A>metod; nie należy wywoływać tej metody bezpośrednio.</xref:System.Diagnostics.SymbolStore.SymBinder.Finalize%2A> </xref:System.Diagnostics.SymbolStore.SymBinder.Dispose%2A>"
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.Diagnostics.SymbolStore.SymBinder.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymBinder.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymBinder
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymBinder.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymBinder.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Zwalnia zasoby zajmowane przez bieżące wystąpienie."
  remarks: "Ta metoda zastępuje <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Kod aplikacji nie powinny wywoływać tej metody; obiekt `Finalize` metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacji przez moduł garbage collector została wyłączona przez wywołanie do <xref:System.GC.SuppressFinalize%2A>metody.</xref:System.GC.SuppressFinalize%2A>"
  syntax:
    content: ~SymBinder ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymBinder.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymBinder.GetReader(System.Int32,System.String,System.String)
  id: GetReader(System.Int32,System.String,System.String)
  parent: System.Diagnostics.SymbolStore.SymBinder
  langs:
  - csharp
  name: GetReader(Int32,String,String)
  nameWithType: SymBinder.GetReader(Int32,String,String)
  fullName: System.Diagnostics.SymbolStore.SymBinder.GetReader(Int32,String,String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Pobiera interfejs czytnika symboli dla bieżącego pliku przy użyciu wskaźnika określona liczba całkowita 32-bitowego interfejsu metadanych z określoną nazwą pliku i ścieżki wyszukiwania."
  remarks: "Podany wskaźnik interfejsu metadanych, nazwę pliku i ścieżkę wyszukiwania, metody GetReader zwraca <xref:System.Diagnostics.SymbolStore.ISymbolReader>interfejsu odczytujący symbole debugowania skojarzone z modułem.</xref:System.Diagnostics.SymbolStore.ISymbolReader>      > [!NOTE] > Przy użyciu 32-bitową liczbę całkowitą jako wskaźnik nie jest zalecane. Użyj <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A>zamiast tego przeciążenia.</xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolReader GetReader (int importer, string filename, string searchPath);
    parameters:
    - id: importer
      type: System.Int32
      description: "32-bitowa liczba całkowita, która wskazuje interfejs importu metadanych."
    - id: filename
      type: System.String
      description: "Nazwa pliku, dla których interfejs czytnik jest wymagana."
    - id: searchPath
      type: System.String
      description: "Ścieżka wyszukiwania używana do lokalizowania pliku symboli."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolReader
      description: "Interfejs, który odczytuje symbole debugowania."
  overload: System.Diagnostics.SymbolStore.SymBinder.GetReader*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymBinder.GetReader(System.IntPtr,System.String,System.String)
  id: GetReader(System.IntPtr,System.String,System.String)
  parent: System.Diagnostics.SymbolStore.SymBinder
  langs:
  - csharp
  name: GetReader(IntPtr,String,String)
  nameWithType: SymBinder.GetReader(IntPtr,String,String)
  fullName: System.Diagnostics.SymbolStore.SymBinder.GetReader(IntPtr,String,String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Pobiera interfejs czytnika symboli dla bieżącego pliku przy użyciu określonego wskaźnika interfejsu metadanych z określoną nazwą pliku i ścieżki wyszukiwania."
  remarks: "Podany wskaźnik interfejsu metadanych, nazwę pliku i ścieżkę wyszukiwania, metody GetReader zwraca <xref:System.Diagnostics.SymbolStore.ISymbolReader>interfejsu odczytujący symbole debugowania skojarzone z modułem.</xref:System.Diagnostics.SymbolStore.ISymbolReader>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolReader GetReader (IntPtr importer, string filename, string searchPath);
    parameters:
    - id: importer
      type: System.IntPtr
      description: "Struktura, która wskazuje interfejs importu metadanych."
    - id: filename
      type: System.String
      description: "Nazwa pliku, dla których interfejs czytnik jest wymagana."
    - id: searchPath
      type: System.String
      description: "Ścieżka wyszukiwania używana do lokalizowania pliku symboli."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolReader
      description: "Interfejs, który odczytuje symbole debugowania."
  overload: System.Diagnostics.SymbolStore.SymBinder.GetReader*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.SymBinderBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymBinderBase
- uid: System.Diagnostics.SymbolStore.SymBinder.#ctor
  parent: System.Diagnostics.SymbolStore.SymBinder
  isExternal: false
  name: SymBinder()
  nameWithType: SymBinder.SymBinder()
  fullName: System.Diagnostics.SymbolStore.SymBinder.SymBinder()
- uid: System.Diagnostics.SymbolStore.SymBinder.Dispose
  parent: System.Diagnostics.SymbolStore.SymBinder
  isExternal: false
  name: Dispose()
  nameWithType: SymBinder.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymBinder.Dispose()
- uid: System.Diagnostics.SymbolStore.SymBinder.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymBinder
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymBinder.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymBinder.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymBinder.Finalize
  parent: System.Diagnostics.SymbolStore.SymBinder
  isExternal: false
  name: Finalize()
  nameWithType: SymBinder.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymBinder.Finalize()
- uid: System.Diagnostics.SymbolStore.SymBinder.GetReader(System.Int32,System.String,System.String)
  parent: System.Diagnostics.SymbolStore.SymBinder
  isExternal: false
  name: GetReader(Int32,String,String)
  nameWithType: SymBinder.GetReader(Int32,String,String)
  fullName: System.Diagnostics.SymbolStore.SymBinder.GetReader(Int32,String,String)
- uid: System.Diagnostics.SymbolStore.ISymbolReader
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolReader
  nameWithType: ISymbolReader
  fullName: System.Diagnostics.SymbolStore.ISymbolReader
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.SymbolStore.SymBinder.GetReader(System.IntPtr,System.String,System.String)
  parent: System.Diagnostics.SymbolStore.SymBinder
  isExternal: false
  name: GetReader(IntPtr,String,String)
  nameWithType: SymBinder.GetReader(IntPtr,String,String)
  fullName: System.Diagnostics.SymbolStore.SymBinder.GetReader(IntPtr,String,String)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.SymbolStore.SymBinder.#ctor*
  parent: System.Diagnostics.SymbolStore.SymBinder
  isExternal: false
  name: SymBinder
  nameWithType: SymBinder.SymBinder
- uid: System.Diagnostics.SymbolStore.SymBinder.Dispose*
  parent: System.Diagnostics.SymbolStore.SymBinder
  isExternal: false
  name: Dispose
  nameWithType: SymBinder.Dispose
- uid: System.Diagnostics.SymbolStore.SymBinder.Finalize*
  parent: System.Diagnostics.SymbolStore.SymBinder
  isExternal: false
  name: Finalize
  nameWithType: SymBinder.Finalize
- uid: System.Diagnostics.SymbolStore.SymBinder.GetReader*
  parent: System.Diagnostics.SymbolStore.SymBinder
  isExternal: false
  name: GetReader
  nameWithType: SymBinder.GetReader
