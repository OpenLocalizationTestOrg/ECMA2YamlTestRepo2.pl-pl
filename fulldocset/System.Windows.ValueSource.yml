### YamlMime:ManagedReference
items:
- uid: System.Windows.ValueSource
  id: ValueSource
  children:
  - System.Windows.ValueSource.BaseValueSource
  - System.Windows.ValueSource.Equals(System.Object)
  - System.Windows.ValueSource.GetHashCode
  - System.Windows.ValueSource.IsAnimated
  - System.Windows.ValueSource.IsCoerced
  - System.Windows.ValueSource.IsCurrent
  - System.Windows.ValueSource.IsExpression
  - System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  - System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  langs:
  - csharp
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
  type: Struct
  summary: "Raportuje informacje zwrócone z &lt;xref:System.Windows.DependencyPropertyHelper.GetValueSource%2A?displayProperty=fullName&gt;."
  remarks: "Większość informacji, który przesyła ValueSource znajduje się w <xref:System.Windows.ValueSource.BaseValueSource%2A>Właściwości.</xref:System.Windows.ValueSource.BaseValueSource%2A> Ta właściwość zawiera wartość wyliczenia, która określa dokładnie jeden aspekt ogólnych [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] właściwości systemu, który jest odpowiedzialny za efektywna wartość właściwości zależności.       Oprócz wartości podstawowej inne informacje, które mogą być interesujące o wartość właściwości zależności jest Określa, czy wartość jest animowanej i określa, czy wartość zawiera wyrażenie (na przykład powiązanie, lub odwołanie do zasobu dynamicznego). Te informacje są zgłaszane przez <xref:System.Windows.ValueSource.IsAnimated%2A>i <xref:System.Windows.ValueSource.IsExpression%2A>odpowiednio.</xref:System.Windows.ValueSource.IsExpression%2A> </xref:System.Windows.ValueSource.IsAnimated%2A> Ponadto jeśli koercja działa na wartość właściwości, właściwość zachowuje żądaną wartość i wartość właściwości będzie próbują uzyskać dostęp tego żądaną wartość, jeśli ograniczenia określonych koercja zostaną zmienione lub unosiło. Coerced właściwość, która nie znajduje się na jego żądaną wartość zgłasza, że <xref:System.Windows.ValueSource.IsCoerced%2A>jest `true`.</xref:System.Windows.ValueSource.IsCoerced%2A>"
  syntax:
    content: public struct ValueSource
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.ValueSource.BaseValueSource
  id: BaseValueSource
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
  fullName: System.Windows.ValueSource.BaseValueSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera wartość <xref href=&quot;System.Windows.BaseValueSource&quot;> </xref> wyliczenia, która źródle pod warunkiem system właściwości zależności o wartości."
  remarks: "Wartości podstawowej nie jest wartością efektywną, jeśli przekształcenie lub animacji działa we właściwości. Sprawdź <xref:System.Windows.ValueSource.IsAnimated%2A>i <xref:System.Windows.ValueSource.IsCoerced%2A>Jeśli chcesz określić, czy wartości podstawowej jest wartością efektywną.</xref:System.Windows.ValueSource.IsCoerced%2A> </xref:System.Windows.ValueSource.IsAnimated%2A>       Można także sprawdzić <xref:System.Windows.ValueSource.IsExpression%2A>Aby zobaczyć, czy wartości podstawowej obliczeniem poza wyrażenie.</xref:System.Windows.ValueSource.IsExpression%2A>"
  syntax:
    content: public System.Windows.BaseValueSource BaseValueSource { get; }
    return:
      type: System.Windows.BaseValueSource
      description: "Wartość wyliczenia."
  overload: System.Windows.ValueSource.BaseValueSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ValueSource.Equals(Object)
  fullName: System.Windows.ValueSource.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Zwraca wartość wskazującą czy to <xref href=&quot;System.Windows.ValueSource&quot;> </xref> jest taki sam jak określony obiekt."
  remarks: "Ta implementacja obsługuje równości wartości, oparte na każdym z wartości właściwości każdego <xref:System.Windows.ValueSource>struktury.</xref:System.Windows.ValueSource>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Obiekt do porównania z tym <xref href=&quot;System.Windows.ValueSource&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli podany obiekt jest odpowiednikiem bieżącego <xref href=&quot;System.Windows.ValueSource&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.GetHashCode
  id: GetHashCode
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ValueSource.GetHashCode()
  fullName: System.Windows.ValueSource.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Zwraca wartość skrótu dla tego <xref href=&quot;System.Windows.ValueSource&quot;> </xref>."
  remarks: "Ta wartość skrótu jest oparta na <xref:System.Windows.ValueSource.BaseValueSource%2A>wartość.</xref:System.Windows.ValueSource.BaseValueSource%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu 32-bitowej liczby całkowitej bez znaku."
  overload: System.Windows.ValueSource.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsAnimated
  id: IsAnimated
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
  fullName: System.Windows.ValueSource.IsAnimated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera wartość, która deklaruje, czy właściwość jest animowany."
  remarks: "Dla właściwości, która jest obecnie animowany, źródło zgłoszone przez <xref:System.Windows.ValueSource.BaseValueSource%2A>nie jest od razu istotne, ponieważ animacji operuje na wyższy priorytet właściwości zależności od wartości podstawowej.</xref:System.Windows.ValueSource.BaseValueSource%2A> Aby uzyskać więcej informacji na temat priorytet i animacji, zobacz [pierwszeństwo wartość właściwości zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsAnimated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli właściwość jest animowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.IsAnimated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsCoerced
  id: IsCoerced
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
  fullName: System.Windows.ValueSource.IsCoerced
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera wartość, która deklaruje, czy ta wartość jest wynikiem <xref href=&quot;System.Windows.CoerceValueCallback&quot;> </xref> implementacji stosowany do właściwości zależności."
  remarks: "Jeśli koercja działa na wartość właściwości, właściwość zachowuje żądaną wartość i wartość właściwości będzie próbują uzyskać dostęp tego żądaną wartość, jeśli ograniczenia określonych koercja zostaną zmienione lub unosiło. Coerced właściwość, która nie znajduje się na jego żądaną wartość zgłasza, że IsCoerced jest `true`.       Koercja zachowuje się na wyższy priorytet niż wartość podstawową i nie jest mówiąc ściślej uczestnika konfiguracji wartości podstawowej. W związku z tym wykorzystaną stan jest zgłaszany przez tę właściwość, a nie przez wartość <xref:System.Windows.BaseValueSource>wyliczenie.</xref:System.Windows.BaseValueSource> Aby uzyskać więcej informacji na temat koercja, wartości podstawowe i pierwszeństwo zobacz [pierwszeństwo wartość właściwości zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsCoerced { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość jest wynikiem <xref href=&quot;System.Windows.CoerceValueCallback&quot;> </xref> implementacji stosowany do właściwości zależności; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.IsCoerced*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsCurrent
  id: IsCurrent
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
  fullName: System.Windows.ValueSource.IsCurrent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera informację, czy wartość została ustawiona przez <xref:System.Windows.DependencyObject.SetCurrentValue*>metody.</xref:System.Windows.DependencyObject.SetCurrentValue*>"
  syntax:
    content: public bool IsCurrent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość została ustawiona <xref:System.Windows.DependencyObject.SetCurrentValue*>metody; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.DependencyObject.SetCurrentValue*>"
  overload: System.Windows.ValueSource.IsCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.IsExpression
  id: IsExpression
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: IsExpression
  nameWithType: ValueSource.IsExpression
  fullName: System.Windows.ValueSource.IsExpression
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera wartość, która deklaruje, czy ta wartość jest wynikiem obliczane wyrażenie. Może to być <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> pomocniczych powiązanie lub wyrażenie wewnętrznych, takich jak te, które obsługują [DynamicResource — rozszerzenie znaczników](~/add/includes/ajax-current-ext-md.md)."
  remarks: "Obliczane wyrażenie będzie zgłaszać także określonej wartości podstawowej ustawienie warunku, w którym wyrażenie została zastosowana, jako wartość <xref:System.Windows.ValueSource.BaseValueSource%2A>.</xref:System.Windows.ValueSource.BaseValueSource%2A> <xref:System.Windows.ValueSource.BaseValueSource%2A>Jest nadal bardzo istotny dla każdej właściwości, który IsExpression `true`.</xref:System.Windows.ValueSource.BaseValueSource%2A> Znajomość, czy wartość pochodzi za pomocą wyrażenia może być szczególnie przydatne, jeśli wartość została ustawiona pośrednio, takie jak za pomocą szablonu lub wartość właściwości dziedziczone.       Jeśli nie zostanie obliczone wyrażenie (powiązania nie powiodła się; nie znaleziono zasobów o tej nazwie), a następnie wartość będą pobierane z niektórych uczestnika, w systemie właściwości najbardziej prawdopodobną wartość domyślną. Następnie zgłaszania źródła w <xref:System.Windows.ValueSource.BaseValueSource%2A>.</xref:System.Windows.ValueSource.BaseValueSource%2A> Obliczanie wyrażenia nie powiodło się, którą będzie zwracać `false` dla IsExpression."
  syntax:
    content: public bool IsExpression { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość pochodzi z obliczane wyrażenie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.IsExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  id: op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: op_Equality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Equality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Equality(ValueSource,ValueSource)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Określa, czy dwa <xref href=&quot;System.Windows.ValueSource&quot;> </xref> wystąpienia mają taką samą wartość."
  remarks: "Ta implementacja wywołuje <xref:System.Windows.ValueSource.Equals%2A>, i obsługuje wartość równości oparte na wszystkie właściwości <xref:System.Windows.ValueSource>.</xref:System.Windows.ValueSource> </xref:System.Windows.ValueSource.Equals%2A>"
  syntax:
    content: public static bool op_Equality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);
    parameters:
    - id: vs1
      type: System.Windows.ValueSource
      description: "Pierwszy <xref href=&quot;System.Windows.ValueSource&quot;> </xref> do porównania."
    - id: vs2
      type: System.Windows.ValueSource
      description: "Drugi <xref href=&quot;System.Windows.ValueSource&quot;> </xref> do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dwa <xref href=&quot;System.Windows.ValueSource&quot;> </xref> wystąpienia są równoważne; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  id: op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  langs:
  - csharp
  name: op_Inequality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Inequality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Inequality(ValueSource,ValueSource)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Określa, czy dwa <xref href=&quot;System.Windows.ValueSource&quot;> </xref> wystąpień nie mają tej samej wartości."
  remarks: "Ta implementacja wywołuje <xref:System.Windows.ValueSource.Equals%2A>, i zwraca jego negacji i obsługuje równości wartości na podstawie wszystkich właściwości <xref:System.Windows.ValueSource>.</xref:System.Windows.ValueSource> </xref:System.Windows.ValueSource.Equals%2A>"
  syntax:
    content: public static bool op_Inequality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);
    parameters:
    - id: vs1
      type: System.Windows.ValueSource
      description: "Pierwszy <xref href=&quot;System.Windows.ValueSource&quot;> </xref> do porównania."
    - id: vs2
      type: System.Windows.ValueSource
      description: "Drugi <xref href=&quot;System.Windows.ValueSource&quot;> </xref> do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dwa <xref href=&quot;System.Windows.ValueSource&quot;> </xref> wystąpień nie są równoważne; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ValueSource.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.ValueSource.BaseValueSource
  parent: System.Windows.ValueSource
  isExternal: false
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
  fullName: System.Windows.ValueSource.BaseValueSource
- uid: System.Windows.BaseValueSource
  parent: System.Windows
  isExternal: false
  name: BaseValueSource
  nameWithType: BaseValueSource
  fullName: System.Windows.BaseValueSource
- uid: System.Windows.ValueSource.Equals(System.Object)
  parent: System.Windows.ValueSource
  isExternal: false
  name: Equals(Object)
  nameWithType: ValueSource.Equals(Object)
  fullName: System.Windows.ValueSource.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.ValueSource.GetHashCode
  parent: System.Windows.ValueSource
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueSource.GetHashCode()
  fullName: System.Windows.ValueSource.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ValueSource.IsAnimated
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
  fullName: System.Windows.ValueSource.IsAnimated
- uid: System.Windows.ValueSource.IsCoerced
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
  fullName: System.Windows.ValueSource.IsCoerced
- uid: System.Windows.ValueSource.IsCurrent
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
  fullName: System.Windows.ValueSource.IsCurrent
- uid: System.Windows.ValueSource.IsExpression
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsExpression
  nameWithType: ValueSource.IsExpression
  fullName: System.Windows.ValueSource.IsExpression
- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Equality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Equality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Equality(ValueSource,ValueSource)
- uid: System.Windows.ValueSource
  parent: System.Windows
  isExternal: false
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Inequality(ValueSource,ValueSource)
  nameWithType: ValueSource.op_Inequality(ValueSource,ValueSource)
  fullName: System.Windows.ValueSource.op_Inequality(ValueSource,ValueSource)
- uid: System.Windows.ValueSource.BaseValueSource*
  parent: System.Windows.ValueSource
  isExternal: false
  name: BaseValueSource
  nameWithType: ValueSource.BaseValueSource
- uid: System.Windows.ValueSource.Equals*
  parent: System.Windows.ValueSource
  isExternal: false
  name: Equals
  nameWithType: ValueSource.Equals
- uid: System.Windows.ValueSource.GetHashCode*
  parent: System.Windows.ValueSource
  isExternal: false
  name: GetHashCode
  nameWithType: ValueSource.GetHashCode
- uid: System.Windows.ValueSource.IsAnimated*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsAnimated
  nameWithType: ValueSource.IsAnimated
- uid: System.Windows.ValueSource.IsCoerced*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCoerced
  nameWithType: ValueSource.IsCoerced
- uid: System.Windows.ValueSource.IsCurrent*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsCurrent
  nameWithType: ValueSource.IsCurrent
- uid: System.Windows.ValueSource.IsExpression*
  parent: System.Windows.ValueSource
  isExternal: false
  name: IsExpression
  nameWithType: ValueSource.IsExpression
- uid: System.Windows.ValueSource.op_Equality*
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Equality
  nameWithType: ValueSource.op_Equality
- uid: System.Windows.ValueSource.op_Inequality*
  parent: System.Windows.ValueSource
  isExternal: false
  name: op_Inequality
  nameWithType: ValueSource.op_Inequality
