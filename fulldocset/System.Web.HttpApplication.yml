### YamlMime:ManagedReference
items:
- uid: System.Web.HttpApplication
  id: HttpApplication
  children:
  - System.Web.HttpApplication.#ctor
  - System.Web.HttpApplication.AcquireRequestState
  - System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.Application
  - System.Web.HttpApplication.AuthenticateRequest
  - System.Web.HttpApplication.AuthorizeRequest
  - System.Web.HttpApplication.BeginRequest
  - System.Web.HttpApplication.CompleteRequest
  - System.Web.HttpApplication.Context
  - System.Web.HttpApplication.Dispose
  - System.Web.HttpApplication.Disposed
  - System.Web.HttpApplication.EndRequest
  - System.Web.HttpApplication.Error
  - System.Web.HttpApplication.Events
  - System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
  - System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
  - System.Web.HttpApplication.Init
  - System.Web.HttpApplication.LogRequest
  - System.Web.HttpApplication.MapRequestHandler
  - System.Web.HttpApplication.Modules
  - System.Web.HttpApplication.PostAcquireRequestState
  - System.Web.HttpApplication.PostAuthenticateRequest
  - System.Web.HttpApplication.PostAuthorizeRequest
  - System.Web.HttpApplication.PostLogRequest
  - System.Web.HttpApplication.PostMapRequestHandler
  - System.Web.HttpApplication.PostReleaseRequestState
  - System.Web.HttpApplication.PostRequestHandlerExecute
  - System.Web.HttpApplication.PostResolveRequestCache
  - System.Web.HttpApplication.PostUpdateRequestCache
  - System.Web.HttpApplication.PreRequestHandlerExecute
  - System.Web.HttpApplication.PreSendRequestContent
  - System.Web.HttpApplication.PreSendRequestHeaders
  - System.Web.HttpApplication.RegisterModule(System.Type)
  - System.Web.HttpApplication.ReleaseRequestState
  - System.Web.HttpApplication.Request
  - System.Web.HttpApplication.RequestCompleted
  - System.Web.HttpApplication.ResolveRequestCache
  - System.Web.HttpApplication.Response
  - System.Web.HttpApplication.Server
  - System.Web.HttpApplication.Session
  - System.Web.HttpApplication.Site
  - System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
  - System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
  - System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  - System.Web.HttpApplication.UpdateRequestCache
  - System.Web.HttpApplication.User
  langs:
  - csharp
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
  type: Class
  summary: "Definiuje metody, właściwości i zdarzenia, które są wspólne dla wszystkich obiektów aplikacji w aplikacji ASP.NET. Ta klasa jest klasą bazową dla aplikacji, które są zdefiniowane przez użytkownika w pliku Global.asax."
  remarks: "Wystąpienia klasy obiekcie HttpApplication są tworzone w infrastrukturze programu ASP.NET nie przez użytkownika bezpośrednio. Jedno wystąpienie tej klasy w obiekcie HttpApplication jest używane do przetwarzania dużej liczby żądań w okresie użytkowania. Jednak on przetwarzać tylko jedno żądanie naraz. W związku z tym zmienne Członkowskie może służyć do przechowywania danych na żądanie.       Aplikacja zgłasza zdarzenia, które są obsługiwane przez niestandardowe moduły, które implementują <xref:System.Web.IHttpModule>przez kod obsługi zdarzeń, która jest zdefiniowana w pliku Global.asax pliku lub interfejsu.</xref:System.Web.IHttpModule> Niestandardowe moduły, które implementują <xref:System.Web.IHttpModule>interfejs może znajdować się w folderze App_Code lub biblioteki DLL w folderze Bin.</xref:System.Web.IHttpModule>       W programie .NET Framework w wersji 3.5 została wprowadzona obiekcie HttpApplication.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Podczas uruchamiania usług IIS 7.0 w trybie zintegrowanym, niestandardowe moduły w folderze App_Code lub Bin folderu stosowana do wszystkich żądań w potoku żądania. Kod obsługi zdarzenia w pliku Global.asax ma zastosowanie tylko do żądań, które są mapowane do obsługi programu ASP.NET.       Zdarzenia aplikacji są generowane w następującej kolejności: 1.  <xref:System.Web.HttpApplication.BeginRequest>2.</xref:System.Web.HttpApplication.BeginRequest>  <xref:System.Web.HttpApplication.AuthenticateRequest>3.</xref:System.Web.HttpApplication.AuthenticateRequest>  <xref:System.Web.HttpApplication.PostAuthenticateRequest>4.</xref:System.Web.HttpApplication.PostAuthenticateRequest>  <xref:System.Web.HttpApplication.AuthorizeRequest>5.</xref:System.Web.HttpApplication.AuthorizeRequest>  <xref:System.Web.HttpApplication.PostAuthorizeRequest>6.</xref:System.Web.HttpApplication.PostAuthorizeRequest>  <xref:System.Web.HttpApplication.ResolveRequestCache>7.</xref:System.Web.HttpApplication.ResolveRequestCache>  <xref:System.Web.HttpApplication.PostResolveRequestCache>Po <xref:System.Web.HttpApplication.PostResolveRequestCache>zdarzeń i przed <xref:System.Web.HttpApplication.PostMapRequestHandler>jest tworzone zdarzenie, program obsługi zdarzeń (która jest strona, która odpowiada adresowi URL żądania).</xref:System.Web.HttpApplication.PostMapRequestHandler> </xref:System.Web.HttpApplication.PostResolveRequestCache></xref:System.Web.HttpApplication.PostResolveRequestCache> Gdy serwer korzysta z usług IIS 7.0 w trybie zintegrowanym i w co najmniej programu .NET Framework w wersji 3.0, <xref:System.Web.HttpApplication.MapRequestHandler>zdarzenie jest wywoływane.</xref:System.Web.HttpApplication.MapRequestHandler> Gdy serwer działa usług IIS 7.0 w trybie klasycznym lub starszej wersji programu IIS, to zdarzenie nie mogą być obsługiwane.      8.  <xref:System.Web.HttpApplication.PostMapRequestHandler>9.</xref:System.Web.HttpApplication.PostMapRequestHandler> <xref:System.Web.HttpApplication.AcquireRequestState>10.</xref:System.Web.HttpApplication.AcquireRequestState> <xref:System.Web.HttpApplication.PostAcquireRequestState>11.</xref:System.Web.HttpApplication.PostAcquireRequestState> <xref:System.Web.HttpApplication.PreRequestHandlerExecute>Program obsługi zdarzeń jest wykonywany.</xref:System.Web.HttpApplication.PreRequestHandlerExecute>      12. <xref:System.Web.HttpApplication.PostRequestHandlerExecute>13.</xref:System.Web.HttpApplication.PostRequestHandlerExecute> <xref:System.Web.HttpApplication.ReleaseRequestState>14.</xref:System.Web.HttpApplication.ReleaseRequestState> <xref:System.Web.HttpApplication.PostReleaseRequestState>Po <xref:System.Web.HttpApplication.PostReleaseRequestState>zdarzenie jest zgłaszane, wszystkie istniejące filtry odpowiedzi będzie Filtruj dane wyjściowe.</xref:System.Web.HttpApplication.PostReleaseRequestState></xref:System.Web.HttpApplication.PostReleaseRequestState>      15. <xref:System.Web.HttpApplication.UpdateRequestCache>16.</xref:System.Web.HttpApplication.UpdateRequestCache> <xref:System.Web.HttpApplication.PostUpdateRequestCache>17.</xref:System.Web.HttpApplication.PostUpdateRequestCache> <xref:System.Web.HttpApplication.LogRequest>.</xref:System.Web.HttpApplication.LogRequest>           To zdarzenie jest obsługiwane w trybie zintegrowanym pakietu usług IIS 7.0 i w co najmniej programu .NET Framework 3.0 18. <xref:System.Web.HttpApplication.PostLogRequest>To zdarzenie jest obsługiwany tryb usługi IIS 7.0 zintegrowanego i co najmniej programu .NET Framework 3.0 19.</xref:System.Web.HttpApplication.PostLogRequest> <xref:System.Web.HttpApplication.EndRequest></xref:System.Web.HttpApplication.EndRequest>"
  example:
  - "The following two examples demonstrate how to use the HttpApplication class and its events. The first example demonstrates how to create a custom HTTP module and connect an event to it. The second example demonstrates how to modify the Web.config file.  \n  \n The following example demonstrates how to create a custom HTTP module and connect the <xref:System.Web.HttpApplication.AcquireRequestState> event to the HTTP module. HTTP modules intercept each request to Web application resources, thereby allowing you to filter client requests. Any HTTP module that subscribes to an HttpApplication event must implement the <xref:System.Web.IHttpModule> interface.  \n  \n [!code-cs[System.Web.HttpApplication1#1](~/add/codesnippet/csharp/t-system.web.httpapplica_1.cs)]\n [!code-vb[System.Web.HttpApplication1#1](~/add/codesnippet/visualbasic/t-system.web.httpapplica_1.vb)]  \n  \n Before an event in a custom HTTP module can occur, you must modify the configuration settings in the Web.config file to notify ASP.NET about the HTTP module. The following example shows the appropriate configuration setting in the `httpModules` section of the Web.config file. The following setting applies to IIS 7.0 Classic mode and to earlier versions of IIS.  \n  \n```c#  \n<configuration>  \n  <system.web>  \n    <httpModules>  \n      <add type=\"Samples.AspNet.CS.CustomHTTPModule\"  \n        name=\"CustomHttpModule\" />  \n      </httpModules>  \n  </system.web>  \n</configuration>  \n```  \n  \n```vb#  \n<configuration>  \n  <system.web>  \n    <httpModules>  \n      <add type=\"Samples.AspNet.VB.CustomHTTPModule\"  \n        name=\"CustomHttpModule\" />  \n      </httpModules>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following setting applies to IIS 7.0 Integrated mode.  \n  \n```c#  \n<configuration>  \n  <system.webServer>  \n    <modules>  \n      <add type=\"Samples.AspNet.CS.CustomHTTPModule\"  \n        name=\"CustomHttpModule\" />  \n      </modules>  \n  </system.webServer>  \n</configuration>  \n```  \n  \n```vb#  \n<configuration>  \n  <system.webServer>  \n    <modules>  \n      <add type=\"Samples.AspNet.VB.CustomHTTPModule\"  \n        name=\"CustomHttpModule\" />  \n      <modules>  \n  </system.webServer>  \n</configuration>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.ToolboxItem(false)]

      public class HttpApplication : IDisposable, System.ComponentModel.IComponent, System.Web.IHttpAsyncHandler
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  - System.Web.IHttpAsyncHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpApplication.#ctor
  id: '#ctor'
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: HttpApplication()
  nameWithType: HttpApplication.HttpApplication()
  fullName: System.Web.HttpApplication.HttpApplication()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.HttpApplication&quot;> </xref> klasy."
  syntax:
    content: public HttpApplication ();
    parameters: []
  overload: System.Web.HttpApplication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AcquireRequestState
  id: AcquireRequestState
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AcquireRequestState
  nameWithType: HttpApplication.AcquireRequestState
  fullName: System.Web.HttpApplication.AcquireRequestState
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy bieżący stan (na przykład stan sesji) jest skojarzona z bieżącym żądaniem żądań ASP.NET."
  remarks: "AcquireRequestState zdarzenie jest wywoływane po programu obsługi zdarzeń został utworzony.       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - For an example of handling the AcquireRequestState event, see the <xref:System.Web.HttpApplication> overview topic.
  syntax:
    content: public event EventHandler AcquireRequestState;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnAcquireRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnAcquireRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnAuthenticateRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnAuthenticateRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnAuthorizeRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnAuthorizeRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnBeginRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnBeginRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnBeginRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnBeginRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnEndRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnEndRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnEndRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnEndRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnEndRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnEndRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnLogRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  remarks: "AddOnLogRequestAsync wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AddOnLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnLogRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnLogRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  remarks: "AddOnMapRequestHandlerAsync wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnMapRequestHandlerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnMapRequestHandlerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref> do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  remarks: "AddOnPostLogRequestAsync wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostLogRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostLogRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref> kolekcji."
  overload: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego zdarzenia."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref> kolekcji."
  overload: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnReleaseRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnReleaseRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref> obsługi zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnResolveRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref> obsługi zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnResolveRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje określony <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref> zdarzeń do kolekcji asynchroniczne <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref> obsługi zdarzeń dla bieżącego żądania."
  syntax:
    content: public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "<xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> Zaczynającym się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "<xref href=&quot;System.Web.EndEventHandler&quot;> </xref> Który kończy się przetwarzania asynchronicznego <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Skojarzony stan, aby dodać do asynchroniczną <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Application
  id: Application
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Application
  nameWithType: HttpApplication.Application
  fullName: System.Web.HttpApplication.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera bieżący stan aplikacji."
  remarks: "Bieżący stan aplikacji składa się z klucza i wartości ze słownika obiektów całej aplikacji, które służy do przechowywania obiektów .NET Framework i wartości skalarne, które są związane z wielu żądań sieci Web z wielu klientów."
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "<xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> Dla bieżącego żądania."
  overload: System.Web.HttpApplication.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AuthenticateRequest
  id: AuthenticateRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AuthenticateRequest
  nameWithType: HttpApplication.AuthenticateRequest
  fullName: System.Web.HttpApplication.AuthenticateRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy moduł zabezpieczeń przejęło tożsamości użytkownika."
  remarks: "Zdarzenie AuthenticateRequest sygnalizuje, że mechanizm uwierzytelniania skonfigurowane uwierzytelnił bieżącego żądania. Subskrybowanie zdarzeń AuthenticateRequest gwarantuje, że żądania są uwierzytelniane przed przetworzeniem dołączonego modułu lub procedury obsługi zdarzeń.       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler AuthenticateRequest;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AuthorizeRequest
  id: AuthorizeRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AuthorizeRequest
  nameWithType: HttpApplication.AuthorizeRequest
  fullName: System.Web.HttpApplication.AuthorizeRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy moduł zabezpieczeń zweryfikował uwierzytelnienia użytkownika."
  remarks: "Zdarzenie AuthorizeRequest sygnalizuje, że program ASP.NET ma uprawnienia bieżącego żądania. Subskrybowanie zdarzeń AuthorizeRequest temu żądania uwierzytelnienia i autoryzacji przed przetworzeniem dołączonego modułu lub procedury obsługi zdarzeń.       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler AuthorizeRequest;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.BeginRequest
  id: BeginRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: BeginRequest
  nameWithType: HttpApplication.BeginRequest
  fullName: System.Web.HttpApplication.BeginRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje jako pierwsze zdarzenie w łańcuchu potoku HTTP wykonywania, gdy program ASP.NET ma odpowiadać na żądania."
  remarks: "Zdarzenie powstaniem zdarzenia BeginRequest sygnalizuje tworzenia żadnych danego nowe żądanie. To zdarzenie jest wywoływane zawsze i jest zawsze pierwsze zdarzenie, aby powstających podczas przetwarzania żądania.       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler BeginRequest;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.CompleteRequest
  id: CompleteRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: CompleteRequest()
  nameWithType: HttpApplication.CompleteRequest()
  fullName: System.Web.HttpApplication.CompleteRequest()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Powoduje, że program ASP.NET pominąć wszystkie zdarzenia i filtrowanie danych na HTTP potoku łańcucha wykonywania i wykonać bezpośrednio <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> zdarzeń."
  syntax:
    content: public void CompleteRequest ();
    parameters: []
  overload: System.Web.HttpApplication.CompleteRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Context
  id: Context
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Context
  nameWithType: HttpApplication.Context
  fullName: System.Web.HttpApplication.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera informacje specyficzne dla protokołu HTTP o bieżącym żądaniu."
  syntax:
    content: public System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Dla bieżącego żądania."
  overload: System.Web.HttpApplication.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Dispose
  id: Dispose
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Dispose()
  nameWithType: HttpApplication.Dispose()
  fullName: System.Web.HttpApplication.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Usuwa <xref href=&quot;System.Web.HttpApplication&quot;> </xref> wystąpienia."
  remarks: "<xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, <xref:System.Web.HttpApplication.Session%2A>, I <xref:System.Web.HttpApplication.Application%2A>Właściwości nie są dostępne do użycia podczas wykonywania metody Dispose.</xref:System.Web.HttpApplication.Application%2A> </xref:System.Web.HttpApplication.Session%2A> </xref:System.Web.HttpApplication.Response%2A> </xref:System.Web.HttpApplication.Request%2A>       Wywołania metody Dispose <xref:System.Web.IHttpModule.Dispose%2A>metody na każdym z zarejestrowaną <xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A>wystąpienia aplikacji i zgłasza <xref:System.Web.HttpApplication.Disposed>zdarzeń.</xref:System.Web.HttpApplication.Disposed> </xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A> </xref:System.Web.IHttpModule.Dispose%2A>"
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.Web.HttpApplication.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Disposed
  id: Disposed
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Disposed
  nameWithType: HttpApplication.Disposed
  fullName: System.Web.HttpApplication.Disposed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy aplikacja zostanie usunięty."
  remarks: "Podczas tworzenia usuniętego obiektu delegowanego, należy określić metodę, która obsługuje zdarzenie. Aby skojarzyć zdarzenie z obsługi zdarzenia, należy dodać wystąpienia usunięty delegata zdarzenia. Program obsługi zdarzeń jest wywoływana, gdy wystąpi zdarzenie, o ile nie usuniesz usuniętego obiektu delegowanego.       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler Disposed;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.EndRequest
  id: EndRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: EndRequest
  nameWithType: HttpApplication.EndRequest
  fullName: System.Web.HttpApplication.EndRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje jako ostatnie zdarzenie w łańcuchu potoku HTTP wykonywania, gdy program ASP.NET ma odpowiadać na żądania."
  remarks: "Zdarzenie EndRequest zawsze jest wywoływane, gdy <xref:System.Web.HttpApplication.CompleteRequest%2A>Metoda jest wywoływana.</xref:System.Web.HttpApplication.CompleteRequest%2A>       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler EndRequest;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Error
  id: Error
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Error
  nameWithType: HttpApplication.Error
  fullName: System.Web.HttpApplication.Error
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy jest nieobsługiwany wyjątek."
  remarks: "Wyjątek, który wywołuje zdarzenie błędu mogą uzyskiwać przez wywołanie do <xref:System.Web.HttpServerUtility.GetLastError%2A>metody.</xref:System.Web.HttpServerUtility.GetLastError%2A> Jeśli aplikacja generuje dane wyjściowe błędów niestandardowych, Pomiń komunikat o błędzie domyślne generowany przez platformę ASP.NET, przez wywołanie do <xref:System.Web.HttpServerUtility.ClearError%2A>metody.</xref:System.Web.HttpServerUtility.ClearError%2A>      > [!NOTE] > Jeśli Twoja aplikacja sieci Web usług XML sieci Web, nie można użyć zdarzenia błędu dla obsługi wyjątków globalnego tych usług. Program obsługi HTTP dla usług XML sieci Web zużywa wyjątek występuje w usługi XML sieci Web i konwertuje ją na przed wystąpieniem błędu wywoływana błędu protokołu SOAP. Do obsługi wyjątków usługi XML sieci Web, kompilacji rozszerzenie SOAP, aby przetworzyć wyjątki usług sieci Web w niestandardowych globalnego programu obsługi wyjątków.       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler Error;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Events
  id: Events
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Events
  nameWithType: HttpApplication.Events
  fullName: System.Web.HttpApplication.Events
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera listę zdarzeń delegatów obsługi, które przetwarzają wszystkich zdarzeń aplikacji."
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "<xref href=&quot;System.ComponentModel.EventHandlerList&quot;> </xref> Zawierający nazwy delegatów obsługi zdarzeń."
  overload: System.Web.HttpApplication.Events*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
  id: GetOutputCacheProviderName(System.Web.HttpContext)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: GetOutputCacheProviderName(HttpContext)
  nameWithType: HttpApplication.GetOutputCacheProviderName(HttpContext)
  fullName: System.Web.HttpApplication.GetOutputCacheProviderName(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera nazwę domyślnego dostawcy pamięci podręcznej danych wyjściowych, która jest skonfigurowana dla witryny sieci Web."
  remarks: "Należy przesłonić tę metodę i użyj go, aby zwrócić nazwę każdego dostawcy pamięci podręcznej danych wyjściowych, która jest skonfigurowana dla witryny sieci Web. Program ASP.NET pobiera odwołanie do nazwanego dostawcy i używa do przechowywania danych w pamięci podręcznej danych wyjściowych dla aktualnie wykonywane żądania.       Domyślnie w programie ASP.NET wszystkie odpowiedzi HTTP w celu renderowania stron i kontrolek obsługi pamięci podręcznej danych wyjściowych w pamięci. Można zmienić domyślnego dostawcę pamięci podręcznej danych wyjściowych, który jest używany dla aplikacji sieci Web, określając nazwę innego dostawcę `defaultProvider`.       Ponadto można wybrać innego dostawcy pamięci podręcznej danych wyjściowych dla poszczególnych kontrolek i poszczególnych żądań. Najprostszym sposobem wybierz innego dostawcę pamięci podręcznej danych wyjściowych w przypadku różnych kontrolek użytkownika sieci Web jest tak deklaratywnie przy użyciu nowej `providerName` atrybutu w dyrektywie strony lub kontroli, jak pokazano w poniższym przykładzie: ```   <%@ OutputCache Duration=&quot;60&quot; VaryByParam=&quot;None&quot;        providerName=&quot;DiskCache&quot; %>   ``` Aby określić dostawcę różne dane wyjściowe pamięci podręcznej dla żądania HTTP, należy przesłonić tę metodę w pliku Global.asax do programowego Określ, który dostawca do użycia na potrzeby określonego żądania. Aby uzyskać więcej informacji, zobacz [ASP.NET buforowanie omówienie](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to programmatically specify the cache provider named `DiskCache` for any HTTP request that goes to the Advanced.aspx page.  \n  \n [Visual Basic]  \n  \n```  \nPublic Overloads Overrides Sub GetOutputCacheProviderName(ByVal context _  \n        As HttpContext) As String   \n    If context.Request.Path.EndsWith(\"Advanced.aspx\") Then   \n        Return \"DiskCache\"   \n    Else   \n        Return MyBase.GetOutputCacheProviderName(context)   \n    End If   \nEnd Sub  \n```  \n  \n```c#  \npublic override string GetOutputCacheProviderName(HttpContext context)  \n{  \n    if (context.Request.Path.EndsWith(\"Advanced.aspx\"))  \n        return \"DiskCache\";  \n    else  \n        return base.GetOutputCacheProviderName(context);  \n}  \n```"
  syntax:
    content: public virtual string GetOutputCacheProviderName (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Który zawiera odwołania do wewnętrznych obiektów serwera, które są używane do obsługi żądań HTTP."
    return:
      type: System.String
      description: "Nazwa domyślnego dostawcy."
  overload: System.Web.HttpApplication.GetOutputCacheProviderName*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>context</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub jest pustym ciągiem."
  platform:
  - net462
- uid: System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
  id: GetVaryByCustomString(System.Web.HttpContext,System.String)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: GetVaryByCustomString(HttpContext,String)
  nameWithType: HttpApplication.GetVaryByCustomString(HttpContext,String)
  fullName: System.Web.HttpApplication.GetVaryByCustomString(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Udostępnia implementację całej aplikacji <xref:System.Web.UI.PartialCachingAttribute.VaryByCustom*>Właściwości.</xref:System.Web.UI.PartialCachingAttribute.VaryByCustom*>"
  remarks: 'Można zastąpić GetVaryByCustomString, aby dodać nową metodę do obliczania wartości niestandardowych różnią się według, które są oparte na bieżącego żądania. Implementacja ma Wywołaj klasę bazową dla wartości niestandardowych, które nie rozpoznaje. Aby uzyskać więcej informacji, zobacz [porady: wersje pamięci podręcznej ciągów za pomocą niestandardowej strony](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public virtual string GetVaryByCustomString (System.Web.HttpContext context, string custom);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Obiektu, który zawiera informacje dotyczące bieżącego żądania sieci Web."
    - id: custom
      type: System.String
      description: "Niestandardowy ciąg, który określa, które buforowanej odpowiedzi jest używana do odpowiadania na bieżącego żądania."
    return:
      type: System.String
      description: "Jeśli wartość <code> custom </code> parametr jest <xref uid=&quot;langword_csharp_&quot;browser&quot;&quot; name=&quot;&quot;browser&quot;&quot; href=&quot;&quot;> </xref>, przeglądarki <xref:System.Web.Configuration.HttpCapabilitiesBase.Type*>; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Configuration.HttpCapabilitiesBase.Type*>"
  overload: System.Web.HttpApplication.GetVaryByCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Init
  id: Init
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Init()
  nameWithType: HttpApplication.Init()
  fullName: System.Web.HttpApplication.Init()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje kod inicjujący niestandardowych, po dodaniu wszystkich modułów obsługi zdarzeń."
  remarks: "W klasie pochodnej można zastąpić metody Init w celu dodania niestandardowych jednorazowe inicjowanie kodu."
  syntax:
    content: public virtual void Init ();
    parameters: []
  overload: System.Web.HttpApplication.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.LogRequest
  id: LogRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: LogRequest
  nameWithType: HttpApplication.LogRequest
  fullName: System.Web.HttpApplication.LogRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje zaraz przed ASP.NET wykonuje wszelkie rejestrowania dla bieżącego żądania."
  remarks: "Zdarzenie LogRequest jest uruchamiany nawet w przypadku wystąpienia błędu. Możesz podać programu obsługi zdarzeń dla zdarzenia LogRequest w celu zapewnienia rejestrowania niestandardowego dla żądania.       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       LogRequest wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to provide an event handler for the LogRequest event. The event handler also handles several other events. Therefore, the <xref:System.Web.HttpContext.CurrentNotification%2A> and <xref:System.Web.HttpContext.IsPostNotification%2A> properties are used to determine what code to run.  \n  \n [!code-cs[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/csharp/e-system.web.httpapplica_1.cs)]\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/visualbasic/e-system.web.httpapplica_1.vb)]"
  syntax:
    content: public event EventHandler LogRequest;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.MapRequestHandler
  id: MapRequestHandler
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: MapRequestHandler
  nameWithType: HttpApplication.MapRequestHandler
  fullName: System.Web.HttpApplication.MapRequestHandler
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy program obsługi został wybrany do odpowiedzi na żądanie."
  remarks: "Zdarzenie MapRequestHandler jest używany przez infrastrukturę programu ASP.NET do określenia programu obsługi żądania dla bieżącego żądania. Aby uzyskać więcej informacji, zobacz [porady: rejestrowanie programów obsługi HTTP](~/add/includes/ajax-current-ext-md.md).       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       MapRequestHandler wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler MapRequestHandler;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Modules
  id: Modules
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Modules
  nameWithType: HttpApplication.Modules
  fullName: System.Web.HttpApplication.Modules
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera kolekcję modułów dla bieżącej aplikacji."
  syntax:
    content: public System.Web.HttpModuleCollection Modules { get; }
    return:
      type: System.Web.HttpModuleCollection
      description: "<xref href=&quot;System.Web.HttpModuleCollection&quot;> </xref> Zawierający nazwy modułów dla aplikacji."
  overload: System.Web.HttpApplication.Modules*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostAcquireRequestState
  id: PostAcquireRequestState
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostAcquireRequestState
  nameWithType: HttpApplication.PostAcquireRequestState
  fullName: System.Web.HttpApplication.PostAcquireRequestState
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy stan żądania (na przykład stan sesji) jest skojarzona z bieżącym żądaniem został uzyskany."
  remarks: "PostAcquireRequestState zdarzenie jest wywoływane po wykonaniu <xref:System.Web.HttpApplication.AcquireRequestState>wystąpiło zdarzenie.</xref:System.Web.HttpApplication.AcquireRequestState> Funkcje, które subskrybuje <xref:System.Web.HttpApplication.AcquireRequestState>zdarzeń mają dostęp do wszelkich danych jest przetwarzany przez PostAcquireRequestState.</xref:System.Web.HttpApplication.AcquireRequestState>       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PostAcquireRequestState;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostAuthenticateRequest
  id: PostAuthenticateRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostAuthenticateRequest
  nameWithType: HttpApplication.PostAuthenticateRequest
  fullName: System.Web.HttpApplication.PostAuthenticateRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy moduł zabezpieczeń przejęło tożsamości użytkownika."
  remarks: "PostAuthenticateRequest zdarzenie jest wywoływane po wykonaniu <xref:System.Web.HttpApplication.AuthenticateRequest>wystąpiło zdarzenie.</xref:System.Web.HttpApplication.AuthenticateRequest> Funkcje, które subskrybuje zdarzenia PostAuthenticateRequest mają dostęp do danych jest przetwarzany przez PostAuthenticateRequest.       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PostAuthenticateRequest;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostAuthorizeRequest
  id: PostAuthorizeRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostAuthorizeRequest
  nameWithType: HttpApplication.PostAuthorizeRequest
  fullName: System.Web.HttpApplication.PostAuthorizeRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy zezwolenie użytkownika dla bieżącego żądania."
  remarks: "Zdarzenie PostAuthorizeRequest sygnalizuje, że program ASP.NET ma uprawnienia bieżącego żądania. Subskrybowanie zdarzeń PostAuthorizeRequest zapewnia uwierzytelniania i autoryzacji żądania przed przetworzeniem dołączonego modułu lub program obsługi zdarzeń.       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PostAuthorizeRequest;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostLogRequest
  id: PostLogRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostLogRequest
  nameWithType: HttpApplication.PostLogRequest
  fullName: System.Web.HttpApplication.PostLogRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy program ASP.NET ma ukończyła przetwarzanie obsługi zdarzeń dla <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref> zdarzeń."
  remarks: "Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       PostLogRequest wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler PostLogRequest;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostMapRequestHandler
  id: PostMapRequestHandler
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostMapRequestHandler
  nameWithType: HttpApplication.PostMapRequestHandler
  fullName: System.Web.HttpApplication.PostMapRequestHandler
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy ASP.NET został zmapowany bieżące żądanie do programu obsługi zdarzeń odpowiednie."
  remarks: 'Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PostMapRequestHandler;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostReleaseRequestState
  id: PostReleaseRequestState
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostReleaseRequestState
  nameWithType: HttpApplication.PostReleaseRequestState
  fullName: System.Web.HttpApplication.PostReleaseRequestState
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy program ASP.NET ma ukończył wykonywanie się, że wszystkie żądania obsługi zdarzeń i stanu żądania, w którym dane były przechowywane."
  remarks: 'Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PostReleaseRequestState;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostRequestHandlerExecute
  id: PostRequestHandlerExecute
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostRequestHandlerExecute
  nameWithType: HttpApplication.PostRequestHandlerExecute
  fullName: System.Web.HttpApplication.PostRequestHandlerExecute
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy program obsługi zdarzeń ASP.NET (na przykład strona lub usługi XML sieci Web) kończy działanie."
  remarks: 'Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PostRequestHandlerExecute;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostResolveRequestCache
  id: PostResolveRequestCache
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostResolveRequestCache
  nameWithType: HttpApplication.PostResolveRequestCache
  fullName: System.Web.HttpApplication.PostResolveRequestCache
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy ASP.NET pomija wykonywania bieżącej obsługi zdarzeń i umożliwia buforowanie modułu do obsłużenia żądania z pamięci podręcznej."
  remarks: 'Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PostResolveRequestCache;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostUpdateRequestCache
  id: PostUpdateRequestCache
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostUpdateRequestCache
  nameWithType: HttpApplication.PostUpdateRequestCache
  fullName: System.Web.HttpApplication.PostUpdateRequestCache
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje po zakończeniu ASP.NET buforowanie modułów aktualizowania i przechowywanie odpowiedzi, które są używane do obsługi kolejnych żądań wysyłanych z pamięci podręcznej."
  remarks: "PostUpdateRequestCache zdarzenie jest wywoływane po wykonaniu <xref:System.Web.HttpApplication.UpdateRequestCache>wystąpiło zdarzenie.</xref:System.Web.HttpApplication.UpdateRequestCache> Zgłoszony PostUpdateRequestCache ASP.NET została ukończona przetwarzania kodu i zawartości pamięci podręcznej jest zakończona.       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PostUpdateRequestCache;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PreRequestHandlerExecute
  id: PreRequestHandlerExecute
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PreRequestHandlerExecute
  nameWithType: HttpApplication.PreRequestHandlerExecute
  fullName: System.Web.HttpApplication.PreRequestHandlerExecute
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje zaraz przed ASP.NET rozpoczyna wykonywanie programu obsługi zdarzeń (na przykład strona lub usługi XML sieci Web)."
  remarks: 'Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PreRequestHandlerExecute;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PreSendRequestContent
  id: PreSendRequestContent
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PreSendRequestContent
  nameWithType: HttpApplication.PreSendRequestContent
  fullName: System.Web.HttpApplication.PreSendRequestContent
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje zaraz przed ASP.NET wysyła zawartość do klienta."
  remarks: "Zdarzenie PreSendRequestContent może wystąpić wiele razy.       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PreSendRequestContent;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PreSendRequestHeaders
  id: PreSendRequestHeaders
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PreSendRequestHeaders
  nameWithType: HttpApplication.PreSendRequestHeaders
  fullName: System.Web.HttpApplication.PreSendRequestHeaders
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje zaraz przed ASP.NET wysyła do klienta, nagłówków HTTP."
  remarks: 'Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PreSendRequestHeaders;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.RegisterModule(System.Type)
  id: RegisterModule(System.Type)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: RegisterModule(Type)
  nameWithType: HttpApplication.RegisterModule(Type)
  fullName: System.Web.HttpApplication.RegisterModule(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Rejestruje Moduł aplikacji."
  syntax:
    content: public static void RegisterModule (Type moduleType);
    parameters:
    - id: moduleType
      type: System.Type
      description: "Typ modułu."
  overload: System.Web.HttpApplication.RegisterModule*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.ReleaseRequestState
  id: ReleaseRequestState
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: ReleaseRequestState
  nameWithType: HttpApplication.ReleaseRequestState
  fullName: System.Web.HttpApplication.ReleaseRequestState
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje po zakończeniu ASP.NET wykonywania wszystkie żądania procedury obsługi zdarzeń. To zdarzenie powoduje, że stan moduły, aby zapisać bieżące dane o stanie."
  remarks: "Po wywołaniu zdarzenia ReleaseRequestState, aplikacji zostało zakończone z żądaniem i ASP.NET jest informowany przechowywane informacje o stanie żądania.       Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler ReleaseRequestState;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Request
  id: Request
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Request
  nameWithType: HttpApplication.Request
  fullName: System.Web.HttpApplication.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera obiekt wewnętrzne żądanie dla bieżącego żądania."
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "<xref href=&quot;System.Web.HttpRequest&quot;> </xref> Obiekt, który przetwarza aplikacji."
  overload: System.Web.HttpApplication.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The <xref href=&quot;System.Web.HttpRequest&quot;></xref> object is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpApplication.RequestCompleted
  id: RequestCompleted
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: RequestCompleted
  nameWithType: HttpApplication.RequestCompleted
  fullName: System.Web.HttpApplication.RequestCompleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy zostały wydane zarządzanych obiektów, które są skojarzone z żądaniem."
  remarks: "Zdarzenia RequestCompleted, które zdarzenie jest wywoływane po wszystkich modułów zarządzanych, oraz o nazwie programy obsługi zdarzeń w potoku ASP.NET. Umożliwia on modułów wyczyścić zasoby, które zostały wykonane po wszystkich zarządzanych modułów i obsługi. Użyj tego zdarzenia, jeśli potrzebna jest określony czas, aby jawnie usuwa zarządzane zasoby, które zostały utworzone podczas żądania."
  syntax:
    content: public event EventHandler RequestCompleted;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.ResolveRequestCache
  id: ResolveRequestCache
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: ResolveRequestCache
  nameWithType: HttpApplication.ResolveRequestCache
  fullName: System.Web.HttpApplication.ResolveRequestCache
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy zdarzenie autoryzacji, aby umożliwić zakończy ASP.NET buforowania modułów obsługi żądań z pamięci podręcznej, pomijanie wykonywanie programu obsługi zdarzeń (na przykład strona lub usługi XML sieci Web)."
  remarks: 'Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler ResolveRequestCache;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Response
  id: Response
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Response
  nameWithType: HttpApplication.Response
  fullName: System.Web.HttpApplication.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera obiekt wewnętrzny odpowiedzi dla bieżącego żądania."
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "<xref href=&quot;System.Web.HttpResponse&quot;> </xref> Obiekt, który przetwarza aplikacji."
  overload: System.Web.HttpApplication.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The <xref href=&quot;System.Web.HttpResponse&quot;></xref> object is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpApplication.Server
  id: Server
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Server
  nameWithType: HttpApplication.Server
  fullName: System.Web.HttpApplication.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera obiekt wewnętrzny serwer dla bieżącego żądania."
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "<xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> Obiekt, który przetwarza aplikacji."
  overload: System.Web.HttpApplication.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Session
  id: Session
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Session
  nameWithType: HttpApplication.Session
  fullName: System.Web.HttpApplication.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera obiekt wewnętrzny sesji, który zapewnia dostęp do danych sesji."
  syntax:
    content: public System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> Obiektu dla bieżącej sesji."
  overload: System.Web.HttpApplication.Session*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;></xref> object is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpApplication.Site
  id: Site
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Site
  nameWithType: HttpApplication.Site
  fullName: System.Web.HttpApplication.Site
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia interfejs lokacji do <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> implementacji."
  syntax:
    content: public System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "<xref href=&quot;System.ComponentModel.ISite&quot;> </xref> Obiekt, który umożliwia kontener służący do zarządzania i komunikować się z jego elementów podrzędnych."
  overload: System.Web.HttpApplication.Site*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicjuje asynchroniczne połączenie z programem obsługi zdarzeń HTTP."
  syntax:
    content: IAsyncResult IHttpAsyncHandler.BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Który zawiera odwołania do wewnętrznych obiektów serwera, które są używane do obsługi żądań HTTP."
    - id: cb
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Do wywołania po ukończeniu asynchronicznego wywołania metody.</xref:System.AsyncCallback> Jeśli `cb` parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, delegat nie jest wywoływany."
    - id: extraData
      type: System.Object
      description: "Dodatkowe dane wymagane do przetwarzania żądania."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Zawierający informacje o stanie procesu.</xref:System.IAsyncResult>"
  overload: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
  id: System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
  isEii: true
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Udostępnia proces asynchroniczny <xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;> </xref> metody zakończenie tego procesu."
  remarks: "Metoda IHttpAsyncHandler.EndProcessRequest Zgłoś wszelkie wyjątki, które są przechwytywane podczas procesu asynchronicznego."
  syntax:
    content: void IHttpAsyncHandler.EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Zawierający informacje o stanie procesu.</xref:System.IAsyncResult>"
  overload: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
  id: System#Web#IHttpHandler#IsReusable
  isEii: true
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: HttpApplication.System.Web.IHttpHandler.IsReusable
  fullName: System.Web.HttpApplication.System.Web.IHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> wartość wskazującą, czy inne żądanie może użyć <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> obiektu."
  remarks: "Aby jawnie ustawić `IsReusable` właściwości `true` lub `false`, podaj kod, który zastępuje `IsReusable` metody dostępu właściwości."
  syntax:
    content: bool System.Web.IHttpHandler.IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> obiekt jest wielokrotnego użytku; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  id: System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  isEii: true
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  nameWithType: HttpApplication.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.HttpApplication.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Umożliwia przetwarzanie żądań sieci HTTP Web przez niestandardowy program obsługi HTTP, który implementuje <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interfejsu."
  remarks: "Klasy, które dziedziczą <xref:System.Web.IHttpModule>i <xref:System.Web.IHttpHandler>interfejsy jako odwołanie do <xref:System.Web.HttpContext>dla bieżącego żądania HTTP.</xref:System.Web.HttpContext> </xref:System.Web.IHttpHandler> </xref:System.Web.IHttpModule> Obiekt zapewnia dostęp do wewnętrznych `Request`, `Response`, i `Server` obiektów dla żądania."
  syntax:
    content: void IHttpHandler.ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Który zawiera odwołania do wewnętrznych obiektów serwera, które są używane do obsługi żądań HTTP."
  overload: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "We wszystkich przypadkach."
  platform:
  - net462
- uid: System.Web.HttpApplication.UpdateRequestCache
  id: UpdateRequestCache
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: UpdateRequestCache
  nameWithType: HttpApplication.UpdateRequestCache
  fullName: System.Web.HttpApplication.UpdateRequestCache
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Występuje, gdy ASP.NET zakończeniem wykonywania programu obsługi zdarzeń, aby umożliwić buforowanie modułów przechowywania odpowiedzi, które będą używane do obsługi kolejnych żądań wysyłanych z pamięci podręcznej."
  remarks: 'Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler UpdateRequestCache;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.User
  id: User
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: User
  nameWithType: HttpApplication.User
  fullName: System.Web.HttpApplication.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera obiekt wewnętrzny użytkownika dla bieżącego żądania."
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "<xref:System.Security.Principal.IPrincipal>Obiekt, który reprezentuje bieżący użytkownik uwierzytelnieni lub anonimowi.</xref:System.Security.Principal.IPrincipal>"
  overload: System.Web.HttpApplication.User*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref:System.Security.Principal.IPrincipal>Obiekt jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Principal.IPrincipal>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpApplication.#ctor
  parent: System.Web.HttpApplication
  isExternal: false
  name: HttpApplication()
  nameWithType: HttpApplication.HttpApplication()
  fullName: System.Web.HttpApplication.HttpApplication()
- uid: System.Web.HttpApplication.AcquireRequestState
  parent: System.Web.HttpApplication
  isExternal: false
  name: AcquireRequestState
  nameWithType: HttpApplication.AcquireRequestState
  fullName: System.Web.HttpApplication.AcquireRequestState
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.BeginEventHandler
  parent: System.Web
  isExternal: false
  name: BeginEventHandler
  nameWithType: BeginEventHandler
  fullName: System.Web.BeginEventHandler
- uid: System.Web.EndEventHandler
  parent: System.Web
  isExternal: false
  name: EndEventHandler
  nameWithType: EndEventHandler
  fullName: System.Web.EndEventHandler
- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnEndRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnEndRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnLogRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.Application
  parent: System.Web.HttpApplication
  isExternal: false
  name: Application
  nameWithType: HttpApplication.Application
  fullName: System.Web.HttpApplication.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.HttpApplication.AuthenticateRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: AuthenticateRequest
  nameWithType: HttpApplication.AuthenticateRequest
  fullName: System.Web.HttpApplication.AuthenticateRequest
- uid: System.Web.HttpApplication.AuthorizeRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: AuthorizeRequest
  nameWithType: HttpApplication.AuthorizeRequest
  fullName: System.Web.HttpApplication.AuthorizeRequest
- uid: System.Web.HttpApplication.BeginRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: BeginRequest
  nameWithType: HttpApplication.BeginRequest
  fullName: System.Web.HttpApplication.BeginRequest
- uid: System.Web.HttpApplication.CompleteRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: CompleteRequest()
  nameWithType: HttpApplication.CompleteRequest()
  fullName: System.Web.HttpApplication.CompleteRequest()
- uid: System.Web.HttpApplication.Context
  parent: System.Web.HttpApplication
  isExternal: false
  name: Context
  nameWithType: HttpApplication.Context
  fullName: System.Web.HttpApplication.Context
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.HttpApplication.Dispose
  parent: System.Web.HttpApplication
  isExternal: false
  name: Dispose()
  nameWithType: HttpApplication.Dispose()
  fullName: System.Web.HttpApplication.Dispose()
- uid: System.Web.HttpApplication.Disposed
  parent: System.Web.HttpApplication
  isExternal: false
  name: Disposed
  nameWithType: HttpApplication.Disposed
  fullName: System.Web.HttpApplication.Disposed
- uid: System.Web.HttpApplication.EndRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: EndRequest
  nameWithType: HttpApplication.EndRequest
  fullName: System.Web.HttpApplication.EndRequest
- uid: System.Web.HttpApplication.Error
  parent: System.Web.HttpApplication
  isExternal: false
  name: Error
  nameWithType: HttpApplication.Error
  fullName: System.Web.HttpApplication.Error
- uid: System.Web.HttpApplication.Events
  parent: System.Web.HttpApplication
  isExternal: false
  name: Events
  nameWithType: HttpApplication.Events
  fullName: System.Web.HttpApplication.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
  parent: System.Web.HttpApplication
  isExternal: false
  name: GetOutputCacheProviderName(HttpContext)
  nameWithType: HttpApplication.GetOutputCacheProviderName(HttpContext)
  fullName: System.Web.HttpApplication.GetOutputCacheProviderName(HttpContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
  parent: System.Web.HttpApplication
  isExternal: false
  name: GetVaryByCustomString(HttpContext,String)
  nameWithType: HttpApplication.GetVaryByCustomString(HttpContext,String)
  fullName: System.Web.HttpApplication.GetVaryByCustomString(HttpContext,String)
- uid: System.Web.HttpApplication.Init
  parent: System.Web.HttpApplication
  isExternal: false
  name: Init()
  nameWithType: HttpApplication.Init()
  fullName: System.Web.HttpApplication.Init()
- uid: System.Web.HttpApplication.LogRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: LogRequest
  nameWithType: HttpApplication.LogRequest
  fullName: System.Web.HttpApplication.LogRequest
- uid: System.Web.HttpApplication.MapRequestHandler
  parent: System.Web.HttpApplication
  isExternal: false
  name: MapRequestHandler
  nameWithType: HttpApplication.MapRequestHandler
  fullName: System.Web.HttpApplication.MapRequestHandler
- uid: System.Web.HttpApplication.Modules
  parent: System.Web.HttpApplication
  isExternal: false
  name: Modules
  nameWithType: HttpApplication.Modules
  fullName: System.Web.HttpApplication.Modules
- uid: System.Web.HttpModuleCollection
  parent: System.Web
  isExternal: false
  name: HttpModuleCollection
  nameWithType: HttpModuleCollection
  fullName: System.Web.HttpModuleCollection
- uid: System.Web.HttpApplication.PostAcquireRequestState
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostAcquireRequestState
  nameWithType: HttpApplication.PostAcquireRequestState
  fullName: System.Web.HttpApplication.PostAcquireRequestState
- uid: System.Web.HttpApplication.PostAuthenticateRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostAuthenticateRequest
  nameWithType: HttpApplication.PostAuthenticateRequest
  fullName: System.Web.HttpApplication.PostAuthenticateRequest
- uid: System.Web.HttpApplication.PostAuthorizeRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostAuthorizeRequest
  nameWithType: HttpApplication.PostAuthorizeRequest
  fullName: System.Web.HttpApplication.PostAuthorizeRequest
- uid: System.Web.HttpApplication.PostLogRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostLogRequest
  nameWithType: HttpApplication.PostLogRequest
  fullName: System.Web.HttpApplication.PostLogRequest
- uid: System.Web.HttpApplication.PostMapRequestHandler
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostMapRequestHandler
  nameWithType: HttpApplication.PostMapRequestHandler
  fullName: System.Web.HttpApplication.PostMapRequestHandler
- uid: System.Web.HttpApplication.PostReleaseRequestState
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostReleaseRequestState
  nameWithType: HttpApplication.PostReleaseRequestState
  fullName: System.Web.HttpApplication.PostReleaseRequestState
- uid: System.Web.HttpApplication.PostRequestHandlerExecute
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostRequestHandlerExecute
  nameWithType: HttpApplication.PostRequestHandlerExecute
  fullName: System.Web.HttpApplication.PostRequestHandlerExecute
- uid: System.Web.HttpApplication.PostResolveRequestCache
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostResolveRequestCache
  nameWithType: HttpApplication.PostResolveRequestCache
  fullName: System.Web.HttpApplication.PostResolveRequestCache
- uid: System.Web.HttpApplication.PostUpdateRequestCache
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostUpdateRequestCache
  nameWithType: HttpApplication.PostUpdateRequestCache
  fullName: System.Web.HttpApplication.PostUpdateRequestCache
- uid: System.Web.HttpApplication.PreRequestHandlerExecute
  parent: System.Web.HttpApplication
  isExternal: false
  name: PreRequestHandlerExecute
  nameWithType: HttpApplication.PreRequestHandlerExecute
  fullName: System.Web.HttpApplication.PreRequestHandlerExecute
- uid: System.Web.HttpApplication.PreSendRequestContent
  parent: System.Web.HttpApplication
  isExternal: false
  name: PreSendRequestContent
  nameWithType: HttpApplication.PreSendRequestContent
  fullName: System.Web.HttpApplication.PreSendRequestContent
- uid: System.Web.HttpApplication.PreSendRequestHeaders
  parent: System.Web.HttpApplication
  isExternal: false
  name: PreSendRequestHeaders
  nameWithType: HttpApplication.PreSendRequestHeaders
  fullName: System.Web.HttpApplication.PreSendRequestHeaders
- uid: System.Web.HttpApplication.RegisterModule(System.Type)
  parent: System.Web.HttpApplication
  isExternal: false
  name: RegisterModule(Type)
  nameWithType: HttpApplication.RegisterModule(Type)
  fullName: System.Web.HttpApplication.RegisterModule(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.HttpApplication.ReleaseRequestState
  parent: System.Web.HttpApplication
  isExternal: false
  name: ReleaseRequestState
  nameWithType: HttpApplication.ReleaseRequestState
  fullName: System.Web.HttpApplication.ReleaseRequestState
- uid: System.Web.HttpApplication.Request
  parent: System.Web.HttpApplication
  isExternal: false
  name: Request
  nameWithType: HttpApplication.Request
  fullName: System.Web.HttpApplication.Request
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.HttpApplication.RequestCompleted
  parent: System.Web.HttpApplication
  isExternal: false
  name: RequestCompleted
  nameWithType: HttpApplication.RequestCompleted
  fullName: System.Web.HttpApplication.RequestCompleted
- uid: System.Web.HttpApplication.ResolveRequestCache
  parent: System.Web.HttpApplication
  isExternal: false
  name: ResolveRequestCache
  nameWithType: HttpApplication.ResolveRequestCache
  fullName: System.Web.HttpApplication.ResolveRequestCache
- uid: System.Web.HttpApplication.Response
  parent: System.Web.HttpApplication
  isExternal: false
  name: Response
  nameWithType: HttpApplication.Response
  fullName: System.Web.HttpApplication.Response
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.HttpApplication.Server
  parent: System.Web.HttpApplication
  isExternal: false
  name: Server
  nameWithType: HttpApplication.Server
  fullName: System.Web.HttpApplication.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.HttpApplication.Session
  parent: System.Web.HttpApplication
  isExternal: false
  name: Session
  nameWithType: HttpApplication.Session
  fullName: System.Web.HttpApplication.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.HttpApplication.Site
  parent: System.Web.HttpApplication
  isExternal: false
  name: Site
  nameWithType: HttpApplication.Site
  fullName: System.Web.HttpApplication.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
- uid: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: HttpApplication.System.Web.IHttpHandler.IsReusable
  fullName: System.Web.HttpApplication.System.Web.IHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  nameWithType: HttpApplication.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.HttpApplication.System.Web.IHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpApplication.UpdateRequestCache
  parent: System.Web.HttpApplication
  isExternal: false
  name: UpdateRequestCache
  nameWithType: HttpApplication.UpdateRequestCache
  fullName: System.Web.HttpApplication.UpdateRequestCache
- uid: System.Web.HttpApplication.User
  parent: System.Web.HttpApplication
  isExternal: false
  name: User
  nameWithType: HttpApplication.User
  fullName: System.Web.HttpApplication.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.HttpApplication.#ctor*
  parent: System.Web.HttpApplication
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication.HttpApplication
- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAcquireRequestStateAsync
  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync
- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAuthenticateRequestAsync
  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync
- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAuthorizeRequestAsync
  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync
- uid: System.Web.HttpApplication.AddOnBeginRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnBeginRequestAsync
  nameWithType: HttpApplication.AddOnBeginRequestAsync
- uid: System.Web.HttpApplication.AddOnEndRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnEndRequestAsync
  nameWithType: HttpApplication.AddOnEndRequestAsync
- uid: System.Web.HttpApplication.AddOnLogRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnLogRequestAsync
  nameWithType: HttpApplication.AddOnLogRequestAsync
- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnMapRequestHandlerAsync
  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync
- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAcquireRequestStateAsync
  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync
- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAuthenticateRequestAsync
  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync
- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAuthorizeRequestAsync
  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync
- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostLogRequestAsync
  nameWithType: HttpApplication.AddOnPostLogRequestAsync
- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostMapRequestHandlerAsync
  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync
- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostReleaseRequestStateAsync
  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync
- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostRequestHandlerExecuteAsync
  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync
- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostResolveRequestCacheAsync
  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync
- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostUpdateRequestCacheAsync
  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync
- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPreRequestHandlerExecuteAsync
  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync
- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnReleaseRequestStateAsync
  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync
- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnResolveRequestCacheAsync
  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync
- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnUpdateRequestCacheAsync
  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync
- uid: System.Web.HttpApplication.Application*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Application
  nameWithType: HttpApplication.Application
- uid: System.Web.HttpApplication.CompleteRequest*
  parent: System.Web.HttpApplication
  isExternal: false
  name: CompleteRequest
  nameWithType: HttpApplication.CompleteRequest
- uid: System.Web.HttpApplication.Context*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Context
  nameWithType: HttpApplication.Context
- uid: System.Web.HttpApplication.Dispose*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Dispose
  nameWithType: HttpApplication.Dispose
- uid: System.Web.HttpApplication.Events*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Events
  nameWithType: HttpApplication.Events
- uid: System.Web.HttpApplication.GetOutputCacheProviderName*
  parent: System.Web.HttpApplication
  isExternal: false
  name: GetOutputCacheProviderName
  nameWithType: HttpApplication.GetOutputCacheProviderName
- uid: System.Web.HttpApplication.GetVaryByCustomString*
  parent: System.Web.HttpApplication
  isExternal: false
  name: GetVaryByCustomString
  nameWithType: HttpApplication.GetVaryByCustomString
- uid: System.Web.HttpApplication.Init*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Init
  nameWithType: HttpApplication.Init
- uid: System.Web.HttpApplication.Modules*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Modules
  nameWithType: HttpApplication.Modules
- uid: System.Web.HttpApplication.RegisterModule*
  parent: System.Web.HttpApplication
  isExternal: false
  name: RegisterModule
  nameWithType: HttpApplication.RegisterModule
- uid: System.Web.HttpApplication.Request*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Request
  nameWithType: HttpApplication.Request
- uid: System.Web.HttpApplication.Response*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Response
  nameWithType: HttpApplication.Response
- uid: System.Web.HttpApplication.Server*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Server
  nameWithType: HttpApplication.Server
- uid: System.Web.HttpApplication.Session*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Session
  nameWithType: HttpApplication.Session
- uid: System.Web.HttpApplication.Site*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Site
  nameWithType: HttpApplication.Site
- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest*
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpAsyncHandler.BeginProcessRequest
  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest
- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest*
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpAsyncHandler.EndProcessRequest
  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest
- uid: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable*
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: HttpApplication.System.Web.IHttpHandler.IsReusable
- uid: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest*
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpHandler.ProcessRequest
  nameWithType: HttpApplication.System.Web.IHttpHandler.ProcessRequest
- uid: System.Web.HttpApplication.User*
  parent: System.Web.HttpApplication
  isExternal: false
  name: User
  nameWithType: HttpApplication.User
