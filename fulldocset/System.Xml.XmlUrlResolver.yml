### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlUrlResolver
  id: XmlUrlResolver
  children:
  - System.Xml.XmlUrlResolver.#ctor
  - System.Xml.XmlUrlResolver.CachePolicy
  - System.Xml.XmlUrlResolver.Credentials
  - System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlUrlResolver.Proxy
  - System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  langs:
  - csharp
  name: XmlUrlResolver
  nameWithType: XmlUrlResolver
  fullName: System.Xml.XmlUrlResolver
  type: Class
  summary: "Usuwa zasoby zewnętrzne XML o nazwie przez zasób identyfikator URI (Uniform)."
  remarks: "XmlUrlResolver jest używany do rozpoznawania zewnętrznych zasobów XML, takich jak jednostki, definicji typu dokumentu (pliki DTD) lub schematów. Jest również używane do procesu obejmują i zaimportować elementy znalezione w arkusze stylów Extensible StyleSheet Language (XSL) lub schematu XML definition language (XSD) schematów.       XmlUrlResolver jest domyślny program rozpoznawania nazw dla wszystkich klas w <xref:System.Xml>przestrzeni nazw.</xref:System.Xml> Obsługuje on `file://` i `http://` protokoły i żądań z <xref:System.Net.WebRequest>klasy.</xref:System.Net.WebRequest>      > [!IMPORTANT] > XmlUrlResolver obiekty mogą zawierać poufne informacje, takie jak poświadczenia użytkownika. Należy zachować ostrożność podczas buforowania obiektów XmlUrlResolver i nie powinno przekazać XmlUrlResolver obiekty do niezaufany składnik.      ## Rozpoznawanie definicji DTD, jeśli czytnik XML (<xref:System.Xml.XmlReader>) odczytuje plik XML, który zawiera zewnętrznego elementu DTD, wywołuje <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName>metody można uzyskać strumienia reprezentację element DTD.</xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> Jeśli identyfikator URI element DTD jest względnym identyfikatorem URI, wywołuje metodę modułu odczytującego XML <xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName>metodę i zwraca bezwzględny identyfikator URI dla danego `relativeUri` i `baseURi` parametrów.</xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName> Jeśli XmlUrlResolver nie wiadomo, jak rozwiązać identyfikatora URI, zwraca `null`.       <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName>— Metoda korzysta z informacji w <xref:System.Xml.XmlUrlResolver.Credentials%2A>właściwości odpowiednio w celu uzyskania dostępu do zasobu.</xref:System.Xml.XmlUrlResolver.Credentials%2A> </xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> Brak nie `get` dostępu do tej właściwości ze względów bezpieczeństwa. Podczas zastępowania <xref:System.Xml.XmlResolver>, **GetEntity** to metoda, która używa informacji poświadczeń w **poświadczenia** właściwości.</xref:System.Xml.XmlResolver>       Rozpoznawanie innych zasobów XML jest bardzo podobny do rozpoznawania elementów DTD. <xref:System.Xml.XmlResolver>negocjuje połączenie z zewnętrznych zasobów i zwraca <xref:System.IO.Stream>reprezentację zawartości.</xref:System.IO.Stream></xref:System.Xml.XmlResolver> Obiekt, do której wysłano wywołaniu <xref:System.Xml.XmlResolver>interpretuje strumienia.</xref:System.Xml.XmlResolver>      ## Rozszerzenie klasy XmlUrlResolver domyślne zachowanie klasy XmlUrlResolver jest rozwiązanie zasobów danych XML od źródła, a nie z pamięci podręcznej. W niektórych przypadkach rozpoznawania zasobu danych z pamięci podręcznej może poprawić wydajność aplikacji przez zapisanie podróży serwer zasobów danych. Zwiększenie wydajności w tym miejscu należy porównać potrzebę aktualna zawartość.       W poniższym przykładzie rozszerza XmlUrlResolver i tworzy nową klasę `XmlCachingResolver`, aby pobrać zasobów z pamięci podręcznej. Odbywa się przez zastąpienie <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName>Właściwości i <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName>metody.</xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName>       [!code-vb[XmlCachingResolver_ex&#1;](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_1.vb)][!code-cs[XmlCachingResolver_ex&#1;](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_1.cs) ] zachowania buforowania `XmlCachingResolver` klasy jest zaimplementowana w `GetEntity` metody.   Jest to realizowane przez tworzenie nowego <xref:System.Net.WebRequest>i <xref:System.Net.Cache.HttpRequestCachePolicy>obiektów.</xref:System.Net.Cache.HttpRequestCachePolicy> </xref:System.Net.WebRequest> <xref:System.Net.Cache.HttpRequestCachePolicy>Obiekt jest tworzony przy użyciu <xref:System.Net.Cache.HttpRequestCacheLevel>członkiem <xref:System.Net.Cache.HttpRequestCacheLevel>wyliczenie.</xref:System.Net.Cache.HttpRequestCacheLevel> </xref:System.Net.Cache.HttpRequestCacheLevel> </xref:System.Net.Cache.HttpRequestCachePolicy>       <xref:System.Net.WebRequest.CachePolicy%2A>Właściwość <xref:System.Net.WebRequest>ustawiono obiektu <xref:System.Net.Cache.HttpRequestCachePolicy>obiektu.</xref:System.Net.Cache.HttpRequestCachePolicy> </xref:System.Net.WebRequest> </xref:System.Net.WebRequest.CachePolicy%2A>       Wystąpienie `XmlCachingResolver` klasy jest tworzony z `Boolean``enableHttpCaching`. Jeśli ta wartość jest równa `true`, wystąpienie jest rozpoznawany jako zasób z pamięci podręcznej domyślne, jeśli to możliwe. Gdy `enableHttpCaching` ma ustawioną wartość `false`, wystąpienie stosowanie domyślnego zachowania i usuwa zasoby z ich źródłem.      > [!NOTE] > W tym przykładzie korzysta z rozszerzeń klas XML w programie .NET Framework. Inne klasy można ją rozszerzać oraz dostosowywać odpowiednio do potrzeb określonej aplikacji."
  example:
  - "The following example creates an <xref:System.Xml.XmlReader> that uses an XmlUrlResolver with default credentials.  \n  \n [!code-vb[XmlResolver_Samples#1](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_2.vb)]\n [!code-cs[XmlResolver_Samples#1](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_2.cs)]"
  syntax:
    content: 'public class XmlUrlResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers:
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: XmlUrlResolver()
  nameWithType: XmlUrlResolver.XmlUrlResolver()
  fullName: System.Xml.XmlUrlResolver.XmlUrlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> klasy."
  syntax:
    content: public XmlUrlResolver ();
    parameters: []
  overload: System.Xml.XmlUrlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.CachePolicy
  id: CachePolicy
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
  fullName: System.Xml.XmlUrlResolver.CachePolicy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera lub ustawia zasady pamięci podręcznej dla podstawowych <xref:System.Net.WebRequest>obiektu.</xref:System.Net.WebRequest>"
  syntax:
    content: public System.Net.Cache.RequestCachePolicy CachePolicy { set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "Zasady pamięci podręcznej dla podstawowego żądania sieci web."
  overload: System.Xml.XmlUrlResolver.CachePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
  fullName: System.Xml.XmlUrlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ustawia poświadczenia używane do uwierzytelniania żądań sieci web."
  remarks: "Jeśli katalog wirtualny nie wymaga uwierzytelniania, ta właściwość nie trzeba ustawić. W przeciwnym razie należy podać poświadczenia użytkownika.       Można skojarzyć z różnych identyfikatorów URI różnych poświadczeń i dodaj je do pamięci podręcznej. Można następnie używać poświadczeń do sprawdzenia uwierzytelniania różne identyfikatory URI, niezależnie od oryginalnego źródła kodu XML.       Poniższy kod C# przedstawia sposób ustawiania właściwości poświadczenia do pamięci podręcznej poświadczeń.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> object with credentials. The <xref:System.Xml.XmlReader> uses the credentials on the <xref:System.Xml.XmlUrlResolver> object to access a network resource.  \n  \n [!code-vb[XmlResolver_Samples#2](~/add/codesnippet/visualbasic/p-system.xml.xmlurlresol_1.vb)]\n [!code-cs[XmlResolver_Samples#2](~/add/codesnippet/csharp/p-system.xml.xmlurlresol_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Poświadczenia, które ma być używany do uwierzytelniania żądań sieci web. Jeśli ta właściwość nie jest ustawiona, domyślnie przyjmowana jest wartość <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_XmlUrlResolver&quot; name=&quot;XmlUrlResolver&quot; href=&quot;&quot;> </xref> nie poświadczeniami użytkownika."
  overload: System.Xml.XmlUrlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Identyfikator URI jest mapowany na obiekt, który zawiera zasobów."
  remarks: "Ta metoda jest używana, gdy obiekt wywołujący chce mapy dany identyfikator URI do obiektu, który zawiera zasób, który reprezentuje identyfikator URI.       Asynchroniczne wersję tej metody zobacz <xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>.</xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A>      > [!IMPORTANT] > Aplikacji można ograniczyć odmowa pamięci zagrożeń usługi do metody GetEntity dzięki implementacji IStream<xref:System.Runtime.InteropServices.ComTypes.IStream> Aby ograniczyć liczbę bajtów odczytanych.</xref:System.Runtime.InteropServices.ComTypes.IStream> Dzięki temu można zabezpieczyć się przed sytuacji, gdy próbuje przekazać nieskończone strumień bajtów do metody GetEntity złośliwego kodu."
  example:
  - "The following example demonstrates the `GetEntity` and <xref:System.Xml.XmlResolver.ResolveUri%2A> methods.  \n  \n [!code-vb[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlurlresol_1.vb)]\n [!code-cpp[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/cpp/m-system.xml.xmlurlresol_1.cpp)]\n [!code-cs[Classic WebData XmlUrlResolver.ResolveUri Example#1](~/add/codesnippet/csharp/m-system.xml.xmlurlresol_1.cs)]"
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Identyfikator URI zwrócony z <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Obecnie nieużywane."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ obiektu do zwrócenia. Bieżąca implementacja zwraca tylko <xref:System.IO.Stream>obiektów.</xref:System.IO.Stream>"
    return:
      type: System.Object
      description: "Obiekt stream lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli określono typ innych niż strumienia."
  overload: System.Xml.XmlUrlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>nie jest ani <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ani <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;> </xref> typu."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Określony identyfikator URI nie jest bezwzględnym identyfikatorem URI."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Istnieje błąd w czasie wykonywania (na przykład połączenie serwera przerwania)."
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Asynchronicznie identyfikatora URI jest mapowany na obiekt, który zawiera zasobów."
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Identyfikator URI zwrócony z <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Obecnie nieużywane."
    - id: ofObjectToReturn
      type: System.Type
      description: "Typ obiektu do zwrócenia. Bieżąca implementacja zwraca tylko <xref:System.IO.Stream>obiektów.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Obiekt stream lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli określono typ innych niż strumienia."
  overload: System.Xml.XmlUrlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.Proxy
  id: Proxy
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
  fullName: System.Xml.XmlUrlResolver.Proxy
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Pobiera lub ustawia sieciowego serwera proxy dla podstawowych <xref:System.Net.WebRequest>obiektu.</xref:System.Net.WebRequest>"
  syntax:
    content: public System.Net.IWebProxy Proxy { set; }
    return:
      type: System.Net.IWebProxy
      description: "<xref:System.Net.IWebProxy>Na potrzeby dostępu do zasobu internetowego.</xref:System.Net.IWebProxy>"
  overload: System.Xml.XmlUrlResolver.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlUrlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlUrlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlUrlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Rozpoznaje bezwzględnego identyfikatora URI z podstawową i względne identyfikatory URI."
  remarks: "Bezwzględny identyfikator URI może służyć jako podstawowy identyfikator URI dla kolejnych żądań dla jednostek, które są względem tego identyfikatora URI."
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Podstawowy identyfikator URI używany do rozpoznania względnym identyfikatorem URI."
    - id: relativeUri
      type: System.String
      description: "Identyfikator URI do rozpoznania. Identyfikator URI może być bezwzględny lub względny. Jeśli bezwzględne, ta wartość skutecznie zastępuje `baseUri` wartość. Jeśli względną, składa się z `baseUri` być bezwzględnym identyfikatorem URI."
    return:
      type: System.Uri
      description: "Bezwzględny identyfikator URI lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli względny identyfikator URI nie można rozpoznać."
  overload: System.Xml.XmlUrlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>baseUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>relativeUri</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Xml.XmlUrlResolver.#ctor
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: XmlUrlResolver()
  nameWithType: XmlUrlResolver.XmlUrlResolver()
  fullName: System.Xml.XmlUrlResolver.XmlUrlResolver()
- uid: System.Xml.XmlUrlResolver.CachePolicy
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
  fullName: System.Xml.XmlUrlResolver.CachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Xml.XmlUrlResolver.Credentials
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
  fullName: System.Xml.XmlUrlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlUrlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlUrlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlUrlResolver.Proxy
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
  fullName: System.Xml.XmlUrlResolver.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlUrlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlUrlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlUrlResolver.#ctor*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: XmlUrlResolver
  nameWithType: XmlUrlResolver.XmlUrlResolver
- uid: System.Xml.XmlUrlResolver.CachePolicy*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: CachePolicy
  nameWithType: XmlUrlResolver.CachePolicy
- uid: System.Xml.XmlUrlResolver.Credentials*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlUrlResolver.Credentials
- uid: System.Xml.XmlUrlResolver.GetEntity*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlUrlResolver.GetEntity
- uid: System.Xml.XmlUrlResolver.GetEntityAsync*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlUrlResolver.GetEntityAsync
- uid: System.Xml.XmlUrlResolver.Proxy*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: Proxy
  nameWithType: XmlUrlResolver.Proxy
- uid: System.Xml.XmlUrlResolver.ResolveUri*
  parent: System.Xml.XmlUrlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlUrlResolver.ResolveUri
