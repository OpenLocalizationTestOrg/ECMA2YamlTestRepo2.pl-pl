### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.RecognizedPhrase
  id: RecognizedPhrase
  children:
  - System.Speech.Recognition.RecognizedPhrase.Confidence
  - System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  - System.Speech.Recognition.RecognizedPhrase.Grammar
  - System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  - System.Speech.Recognition.RecognizedPhrase.Homophones
  - System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  - System.Speech.Recognition.RecognizedPhrase.Semantics
  - System.Speech.Recognition.RecognizedPhrase.Text
  - System.Speech.Recognition.RecognizedPhrase.Words
  langs:
  - csharp
  name: RecognizedPhrase
  nameWithType: RecognizedPhrase
  fullName: System.Speech.Recognition.RecognizedPhrase
  type: Class
  summary: "Zawiera szczegółowe informacje, generowane przez aparat rozpoznawania mowy o rozpoznanym danych wejściowych."
  remarks: "Ta klasa zawiera szczegółowe informacje na temat słów i wyrażeń przetworzone podczas operacji rozpoznawania mowy, w tym następujące: - <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>odwołań do właściwości <xref:System.Speech.Recognition.Grammar>czy aparat rozpoznawania używany do identyfikowania danych wejściowych.</xref:System.Speech.Recognition.Grammar> </xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>      - <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>Właściwość zawiera znormalizowane tekst frazy.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>      - <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A>Semantycznego informacje zawarte w wyniku odwołuje się do właściwości.</xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> Informacje semantyczne jest słownikiem nazwy kluczy i skojarzone dane semantycznego.      - <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>Właściwość zawiera uporządkowaną kolekcję <xref:System.Speech.Recognition.RecognizedWordUnit>obiekty reprezentujące każdego rozpoznany programu word w danych wejściowych.</xref:System.Speech.Recognition.RecognizedWordUnit> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Każdej jednostki word zawiera wymowy informacje dotyczące odpowiedniego programu word, format leksykalne i format wyświetlania.      - <xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>Właściwość zawiera informacje dotyczące specjalnych word podstawienia.</xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>      - <xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>i <xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A>Właściwości zawierają informacje o zastępców rozpoznawania, które mają takie same lub podobne wymowy.</xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>      — Wartość <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>właściwość wskazuje stopień pewności, przypisany przez aparat rozpoznawania mowy rozpoznaną frazę zgodność danych wejściowych.</xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>       Aparat rozpoznawania mowy zwraca wyniki rozpoznawania w <xref:System.Speech.Recognition.RecognitionResult>obiektu, który dziedziczy RecognizedPhrase.</xref:System.Speech.Recognition.RecognitionResult> Wynik rozpoznawania <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>właściwość zawiera uporządkowaną kolekcję obiektów RecognizedPhrase, z których każdy jest możliwe dopasowania dla danych wejściowych dla aparatu rozpoznawania.</xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>"
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event and some of the information associated with the <xref:System.Speech.Recognition.RecognitionResult> object. The <xref:System.Speech.Recognition.RecognitionResult> class derives from the RecognizedPhrase class.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{Text}")]

      public class RecognizedPhrase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  id: Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera wartość, przypisany przez aparat rozpoznawania, który reprezentuje prawdopodobieństwo który <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> odpowiada określonych danych wejściowych."
  remarks: "Wyniki zaufania nie wskazują bezwzględną prawdopodobieństwo frazę rozpoznano poprawnie. Zamiast tego zaufania wyniki mechanizm umożliwiający porównanie względną dokładność wielu alternatyw rozpoznawania dla określonych danych wejściowych. Ułatwia to zwrócenia wyniku rozpoznawania najbardziej dokładna. Na przykład jeśli rozpoznaną frazę ma wynik zaufania 0,8, to oznacza, że wyrażenie ma prawidłowe dopasowania dla danych wejściowych jest ryzyko 80%.  Go oznacza, że wyrażenie więcej mogą być prawidłowe dopasowania dla danych wejściowych od innych wyników, które mają zaufanie wyników mniejsza niż 0,8.       Wynik zaufania na jego własnej nie ma sensu, chyba że masz alternatywnych wyniki do porównania z tej samej operacji rozpoznawania albo z poprzedniego uznania tego samego danych wejściowych. Wartości są używane do rank candidate alternatywnych fraz zwrócony przez <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>Właściwość <xref:System.Speech.Recognition.RecognitionResult>obiektów.</xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>       Względne i unikatowe mają wartości zaufania każdego aparatu rozpoznawania. Nie można uzyskać wiarygodny porównać wartości zaufania zwrócony przez dwa aparatów rozpoznawania inny.       Aparat rozpoznawania mowy może przydzielić wynik niski zaufania dane głosowe różnych powodów, takich jak zakłócenia w tle, inarticulate mowy lub nieprzewidziane słowa lub sekwencji programu word. Jeśli aplikacja korzysta <xref:System.Speech.Recognition.SpeechRecognitionEngine>wystąpienia, można zmodyfikować poziom ufności, w których mowy danych wejściowych jest zaakceptowane lub odrzucone z jednym z <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A>metody.</xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Progi zaufania udostępniony aparat rozpoznawania zarządza <xref:System.Speech.Recognition.SpeechRecognizer>, są skojarzone z profilem użytkownika i przechowywane w rejestrze systemu Windows.</xref:System.Speech.Recognition.SpeechRecognizer> Aplikacje nie należy zapisać zmiany w rejestrze dla właściwości udostępniony aparat rozpoznawania.       <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>Właściwość <xref:System.Speech.Recognition.RecognitionResult>uporządkowana kolekcja zawiera obiekt <xref:System.Speech.Recognition.RecognizedPhrase>obiektów, z których każdy jest możliwe dopasowania dla danych wejściowych dla aparatu rozpoznawania.</xref:System.Speech.Recognition.RecognizedPhrase> </xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> Zastępcy są uporządkowane od najwyższego do najniższego zaufania."
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event. The example shows information associated with the <xref:System.Speech.Recognition.RecognitionResult> object, some of which is derived from <xref:System.Speech.Recognition.RecognizedPhrase>. The handler displays confidence scores for a recognized phrase as well as for recognition alternates.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n  \n```"
  syntax:
    content: public float Confidence { get; }
    return:
      type: System.Single
      description: "Miara względnych pewności poprawne rozpoznawanie frazę. Wartość jest od 0,0 do 1,0, niski wysokiego zaufania, aby uzyskać odpowiednio."
  overload: System.Speech.Recognition.RecognizedPhrase.Confidence*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  id: ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Zwracają dokument języka (SML) znaczników semantyki informacje semantyczne w <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> obiektu."
  remarks: "Aby uzyskać informacje na temat języka znaczników semantyki (SML), zobacz [dokumentację języka znaczników semantyki](http://msdn.microsoft.com/en-us/f9d83443-2cac-49bc-a447-210feda62f5d)."
  example:
  - "In the following example, a method returns a string that contains the SML for the semantics of a recognized phrase.  \n  \n```  \nprivate string GetSemanticsSML(RecognizedPhrase result)  \n{  \n  if (result.Semantics.Count > 0)  \n  {  \n    return result.ConstructSmlFromSemantics().CreateNavigator().OuterXml;  \n  }  \n  else  \n  {  \n    return null;  \n  }  \n}  \n```"
  syntax:
    content: public System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics ();
    parameters: []
    return:
      type: System.Xml.XPath.IXPathNavigable
      description: "Zwraca opis SML semantykę <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> jako [XPath](http://msdn.microsoft.com/library/ms256115.aspx) obiektu można nawigować."
  overload: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  id: Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> używanego przez aparat rozpoznawania mowy do zwrócenia <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref>."
  syntax:
    content: public System.Speech.Recognition.Grammar Grammar { get; }
    return:
      type: System.Speech.Recognition.Grammar
      description: "Obiekt gramatyki rozpoznawania mowy umożliwia identyfikowanie danych wejściowych."
  overload: System.Speech.Recognition.RecognizedPhrase.Grammar*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  id: HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera identyfikator grupy homophone frazy."
  remarks: "Aparat rozpoznawania mowy przypisuje identyfikator grupy wszystkich zastępców rozpoznawania mających wymowy tego samego. Dla każdego zastępcy ma unikatowy wymowy aparat rozpoznawania tworzy grupę homophone. Aparat rozpoznawania mowy generuje nową grupę identyfikatorów dla każdej operacji rozpoznawania, i identyfikatory nie może służyć do porównania alternatyw generowane na podstawie rozpoznawania osobne operacje.       Na przykład wyniku rozpoznawania, który zawiera zastępcy &quot;wskaźnik&quot;, &quot;fragmentu&quot; i &quot;ale&quot;, pierwsze dwa elementy alternatywne może należeć do jednej grupy homophone i ostatniego alternatywnego byłoby pojedynczy element członkowski drugiej grupy homophone."
  syntax:
    content: public int HomophoneGroupId { get; }
    return:
      type: System.Int32
      description: "Identyfikator grupy homophone frazy."
  overload: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  id: Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera kolekcję alternatyw rozpoznawania mających tego samego wymowy jako ta fraza rozpoznany."
  remarks: "Ta właściwość zwraca wszystkie inne zastępców rozpoznawania mających tego samego wymowy jako ta fraza rozpoznany.       Na przykład dla wyników rozpoznawania zawierający zastępcy, &quot;wskaźnik&quot; i &quot;fragmentu&quot;, Kolekcja homophones dla pierwszego alternatywnego &quot;wskaźnik&quot; zawiera drugi frazę &quot;fragmentu&quot;. Kolekcja homophones dla drugiego alternatywnego &quot;fragmentu&quot; zawiera pierwszy frazę &quot;wskaźnik&quot;."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase> Homophones { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
      description: "Kolekcja tylko do odczytu alternatyw rozpoznawania mających tego samego wymowy jako ta fraza rozpoznany."
  overload: System.Speech.Recognition.RecognizedPhrase.Homophones*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  id: ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera informacje o tekst, który aparat rozpoznawania mowy zmienić jako część mowy na tekst normalizacji."
  remarks: "W ramach procesu rozpoznawania mowy aparat rozpoznawania mowy normalizuje rozpoznanym wprowadzania w formie wyświetlania.       Na przykład rozmowy dane wejściowe &quot;dwadzieścia pięć dolarów&quot;, generuje wyniku rozpoznawania gdzie <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>właściwość zawiera wyrazy, &quot;20&quot;, &quot;5&quot; i &quot;kwoty&quot; i <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>właściwość zawiera słowo &quot;25,00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Aby uzyskać więcej informacji na temat normalizacji tekstu zobacz <xref:System.Speech.Recognition.ReplacementText>klasy.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText> ReplacementWordUnits { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
      description: "Kolekcja <xref href=&quot;System.Speech.Recognition.ReplacementText&quot;> </xref> obiektów, które opisują fragmentów tekstu, który aparat rozpoznawania mowy zastąpiony podczas jego znormalizowany rozpoznanym danych wejściowych."
  overload: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  id: Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera informacje semantyczne, który jest skojarzony z rozpoznaną frazę."
  remarks: "Gramatyka rozpoznawania mowy mogą obejmować informacje semantyczne. Podczas rozpoznawania mowy wygeneruje wyniku rozpoznawania takich gramatyki, informacje semantyczne mogą zostać dołączone do wyniku rozpoznawania zgodnie z regułami gramatyki i dane wejściowe dla aparatu rozpoznawania. Aby uzyskać więcej informacji na temat informacje semantyczne, zobacz [opis wyników semantycznego](http://msdn.microsoft.com/en-us/2a9dbd8b-cf6d-42cd-bbb9-ca0b3e534005) i <xref:System.Speech.Recognition.SemanticResultKey>i <xref:System.Speech.Recognition.SemanticResultValue>klasy.</xref:System.Speech.Recognition.SemanticResultValue> </xref:System.Speech.Recognition.SemanticResultKey>"
  example:
  - "The following example defines a method that gets specific semantic information from a recognized phrase. When this method returns, it contains the value for the semantic key, or null if the value was not retrieved. This method checks only for top-level keys. Since the semantic information is contained in a tree of values, lower-level keys must be accessed through the returned semantic value.  \n  \n```  \nstatic bool TryGetSemanticValue(  \n      RecognizedPhrase phrase, string key, out SemanticValue value)  \n{  \n  value = null;  \n  bool found = phrase.Semantics.ContainsKey(key);  \n  if (found)  \n  {  \n    value = phrase.Semantics[key];  \n  }  \n  \n  return found;  \n}  \n```"
  syntax:
    content: public System.Speech.Recognition.SemanticValue Semantics { get; }
    return:
      type: System.Speech.Recognition.SemanticValue
      description: "Informacje semantycznego skojarzonego z rozpoznaną frazę."
  overload: System.Speech.Recognition.RecognizedPhrase.Semantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  id: Text
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera tekst znormalizowane wygenerowany przez aparat rozpoznawania mowy z rozpoznanym danych wejściowych."
  remarks: "W ramach procesu rozpoznawania mowy aparat rozpoznawania mowy wykonuje normalizacji mowy na tekst rozpoznany danych wejściowych do wyświetlania formularza.       Na przykład rozmowy dane wejściowe &quot;dwadzieścia pięć dolarów&quot;, generuje wyniku rozpoznawania gdzie <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>właściwość zawiera wyrazy, &quot;20&quot;, &quot;5&quot; i &quot;kwoty&quot;, a właściwość Text frazę &quot;25,00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Aby uzyskać więcej informacji na temat normalizacji tekstu zobacz <xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public string Text { get; }
    return:
      type: System.String
      description: "Tekst znormalizowane wygenerowany przez aparat rozpoznawania mowy z rozpoznanym danych wejściowych."
  overload: System.Speech.Recognition.RecognizedPhrase.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  id: Words
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Pobiera słowa wygenerowany przez aparat rozpoznawania mowy z rozpoznanym danych wejściowych."
  remarks: "Ta właściwość zawiera wyrazy, utworzonej z danych wejściowych przez aparat rozpoznawania mowy przed aparat rozpoznawania mowy na tekst normalizacji wyniku.       Na przykład rozmowy dane wejściowe &quot;dwadzieścia pięć dolarów&quot;, generuje wynik rozpoznawania, gdy właściwość słowa zawiera wyrazy, &quot;20&quot;, &quot;5&quot; i &quot;kwoty&quot; i <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>właściwość zawiera słowo &quot;25,00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> Aby uzyskać więcej informacji na temat normalizacji tekstu zobacz <xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit> Words { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
      description: "Kolekcja <xref href=&quot;System.Speech.Recognition.RecognizedWordUnit&quot;> </xref> obiektów wygenerowany przez aparat rozpoznawania mowy dla rozpoznanego danych wejściowych."
  overload: System.Speech.Recognition.RecognizedPhrase.Words*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedPhrase>
  nameWithType: ReadOnlyCollection<RecognizedPhrase>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedPhrase
    name: RecognizedPhrase
    nameWithType: RecognizedPhrase
    fullName: RecognizedPhrase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
- uid: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ReplacementText>
  nameWithType: Collection<ReplacementText>
  fullName: System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Speech.Recognition.ReplacementText>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.ReplacementText
    name: ReplacementText
    nameWithType: ReplacementText
    fullName: ReplacementText
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.SemanticValue
  parent: System.Speech.Recognition
  isExternal: false
  name: SemanticValue
  nameWithType: SemanticValue
  fullName: System.Speech.Recognition.SemanticValue
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedWordUnit>
  nameWithType: ReadOnlyCollection<RecognizedWordUnit>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedWordUnit
    name: RecognizedWordUnit
    nameWithType: RecognizedWordUnit
    fullName: RecognizedWordUnit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.RecognizedPhrase.Text*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
- uid: System.Speech.Recognition.RecognizedPhrase.Words*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
