### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.ResultTypeAttribute
  id: ResultTypeAttribute
  children:
  - System.Data.Linq.Mapping.ResultTypeAttribute.#ctor(System.Type)
  - System.Data.Linq.Mapping.ResultTypeAttribute.Type
  langs:
  - csharp
  name: ResultTypeAttribute
  nameWithType: ResultTypeAttribute
  fullName: System.Data.Linq.Mapping.ResultTypeAttribute
  type: Class
  summary: "Służy do określania każdego typu wyniku; w przypadku funkcji o różnych typach wyników."
  remarks: "Ten atrybut ma zastosowanie do funkcji zwracających różnych typach wyników. Służy do deklarowania typy możliwe wyniki zwrócone z funkcji. W przypadku typów dziedziczenia, należy określić tylko typ główny hierarchii dziedziczenia.       Zobacz <xref:System.Data.Linq.Mapping.ResultTypeAttribute.Type?displayProperty=fullName>.</xref:System.Data.Linq.Mapping.ResultTypeAttribute.Type?displayProperty=fullName>"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)]

      public sealed class ResultTypeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ResultTypeAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Data.Linq.Mapping.ResultTypeAttribute
  langs:
  - csharp
  name: ResultTypeAttribute(Type)
  nameWithType: ResultTypeAttribute.ResultTypeAttribute(Type)
  fullName: System.Data.Linq.Mapping.ResultTypeAttribute.ResultTypeAttribute(Type)
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.Linq.Mapping.ResultTypeAttribute&quot;> </xref> klasy."
  syntax:
    content: public ResultTypeAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Typ wyniku zwracanego przez funkcję o różnych typach wyników."
  overload: System.Data.Linq.Mapping.ResultTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.ResultTypeAttribute.Type
  id: Type
  parent: System.Data.Linq.Mapping.ResultTypeAttribute
  langs:
  - csharp
  name: Type
  nameWithType: ResultTypeAttribute.Type
  fullName: System.Data.Linq.Mapping.ResultTypeAttribute.Type
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Pobiera mapowania prawidłowe lub oczekiwanego typu dla funkcji o różnych typach wyników."
  remarks: "Ten atrybut ma zastosowanie do funkcji zwracających różnych typach wyników. Służy do deklarowania typy możliwe wyniki zwrócone z funkcji. W przypadku typów dziedziczenia, należy określić tylko typ główny hierarchii dziedziczenia."
  example:
  - >-
    [!code-vb[DLinqSprox#4](~/add/codesnippet/visualbasic/sprox/northwind-sprox.vb#4)]
     [!code-cs[DLinqSprox#4](~/add/codesnippet/csharp/sprox/northwind-sprox.cs#4)]
  syntax:
    content: public Type Type { get; }
    return:
      type: System.Type
      description: "Typ wyniku (<xref:System.Type>).</xref:System.Type>"
  overload: System.Data.Linq.Mapping.ResultTypeAttribute.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Linq.Mapping.ResultTypeAttribute.#ctor(System.Type)
  parent: System.Data.Linq.Mapping.ResultTypeAttribute
  isExternal: false
  name: ResultTypeAttribute(Type)
  nameWithType: ResultTypeAttribute.ResultTypeAttribute(Type)
  fullName: System.Data.Linq.Mapping.ResultTypeAttribute.ResultTypeAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Mapping.ResultTypeAttribute.Type
  parent: System.Data.Linq.Mapping.ResultTypeAttribute
  isExternal: false
  name: Type
  nameWithType: ResultTypeAttribute.Type
  fullName: System.Data.Linq.Mapping.ResultTypeAttribute.Type
- uid: System.Data.Linq.Mapping.ResultTypeAttribute.#ctor*
  parent: System.Data.Linq.Mapping.ResultTypeAttribute
  isExternal: false
  name: ResultTypeAttribute
  nameWithType: ResultTypeAttribute.ResultTypeAttribute
- uid: System.Data.Linq.Mapping.ResultTypeAttribute.Type*
  parent: System.Data.Linq.Mapping.ResultTypeAttribute
  isExternal: false
  name: Type
  nameWithType: ResultTypeAttribute.Type
