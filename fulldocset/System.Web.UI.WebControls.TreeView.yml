### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeView
  id: TreeView
  children:
  - System.Web.UI.WebControls.TreeView.#ctor
  - System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
  - System.Web.UI.WebControls.TreeView.CheckedNodes
  - System.Web.UI.WebControls.TreeView.CollapseAll
  - System.Web.UI.WebControls.TreeView.CollapseImageToolTip
  - System.Web.UI.WebControls.TreeView.CollapseImageUrl
  - System.Web.UI.WebControls.TreeView.CreateControlCollection
  - System.Web.UI.WebControls.TreeView.CreateNode
  - System.Web.UI.WebControls.TreeView.DataBind
  - System.Web.UI.WebControls.TreeView.DataBindings
  - System.Web.UI.WebControls.TreeView.EnableClientScript
  - System.Web.UI.WebControls.TreeView.ExpandAll
  - System.Web.UI.WebControls.TreeView.ExpandDepth
  - System.Web.UI.WebControls.TreeView.ExpandImageToolTip
  - System.Web.UI.WebControls.TreeView.ExpandImageUrl
  - System.Web.UI.WebControls.TreeView.FindNode(System.String)
  - System.Web.UI.WebControls.TreeView.GetCallbackResult
  - System.Web.UI.WebControls.TreeView.HoverNodeStyle
  - System.Web.UI.WebControls.TreeView.ImageSet
  - System.Web.UI.WebControls.TreeView.LeafNodeStyle
  - System.Web.UI.WebControls.TreeView.LevelStyles
  - System.Web.UI.WebControls.TreeView.LineImagesFolder
  - System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeView.MaxDataBindDepth
  - System.Web.UI.WebControls.TreeView.NodeIndent
  - System.Web.UI.WebControls.TreeView.Nodes
  - System.Web.UI.WebControls.TreeView.NodeStyle
  - System.Web.UI.WebControls.TreeView.NodeWrap
  - System.Web.UI.WebControls.TreeView.NoExpandImageUrl
  - System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.ParentNodeStyle
  - System.Web.UI.WebControls.TreeView.PathSeparator
  - System.Web.UI.WebControls.TreeView.PerformDataBinding
  - System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
  - System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent
  - System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeView.RootNodeStyle
  - System.Web.UI.WebControls.TreeView.SaveViewState
  - System.Web.UI.WebControls.TreeView.SelectedNode
  - System.Web.UI.WebControls.TreeView.SelectedNodeChanged
  - System.Web.UI.WebControls.TreeView.SelectedNodeStyle
  - System.Web.UI.WebControls.TreeView.SelectedValue
  - System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)
  - System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)
  - System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)
  - System.Web.UI.WebControls.TreeView.ShowCheckBoxes
  - System.Web.UI.WebControls.TreeView.ShowExpandCollapse
  - System.Web.UI.WebControls.TreeView.ShowLines
  - System.Web.UI.WebControls.TreeView.SkipLinkText
  - System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  - System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  - System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.TreeView.TagKey
  - System.Web.UI.WebControls.TreeView.Target
  - System.Web.UI.WebControls.TreeView.TrackViewState
  - System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
  - System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
  - System.Web.UI.WebControls.TreeView.TreeNodeDataBound
  - System.Web.UI.WebControls.TreeView.TreeNodeExpanded
  - System.Web.UI.WebControls.TreeView.TreeNodePopulate
  - System.Web.UI.WebControls.TreeView.Visible
  langs:
  - csharp
  name: TreeView
  nameWithType: TreeView
  fullName: System.Web.UI.WebControls.TreeView
  type: Class
  summary: "Wyświetla hierarchiczne dane, takie jak spis treści, w strukturze drzewa."
  remarks: "W tym temacie:- [wprowadzenie](#introduction)      -   [węzłów](#nodes)      -   [danych statycznych](#static_data)      -   [powiązanie z danymi](#binding_to_data)      -   [dynamiczne wypełnianie węzła](#dynamic_node_population)      -   [Dostosowywanie interfejsu użytkownika](#customizing_the_user_interface)      -   [zdarzenia](#events)      -   [przewijanie](#scrolling)      -   [ułatwień dostępu](#accessibility)      -   [składni deklaratywnej](#declarative_syntax) <a name=&quot;introduction&quot;> </a> ## formantu TreeView wprowadzenie służy do wyświetlania hierarchiczne dane, takie jak spis treści lub katalog pliku w strukturze drzewa i obsługuje następujące funkcje:-węzłów formantu, aby powiązać dane XML, tabelarycznych lub relacyjnych umożliwia powiązanie danych.            -Lokacji nawigacji dzięki integracji z <xref:System.Web.UI.WebControls.SiteMapDataSource>kontroli.</xref:System.Web.UI.WebControls.SiteMapDataSource>      — Węzeł tekst, który może być wyświetlana jako zwykłego tekstu lub hiperłącza.      -Programowy dostęp do modelu obiektu TreeView można utworzyć drzewa, zapełniać węzły, ustaw właściwości, i tak dalej dynamicznie.      — Wypełnianie węzła po stronie klienta (w nieobsługiwanych przeglądarkach).      -Możliwość wyświetlania pola wyboru obok każdego węzła.      — Można dostosować wygląd za pośrednictwem kompozycje, zdefiniowane przez użytkownika obrazów i style.          > [!NOTE] > Formantu TreeView jest przeznaczony do użycia w <xref:System.Web.UI.UpdatePanel>kontroli tylko wtedy, gdy <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>ustawiono `true`.</xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> </xref:System.Web.UI.UpdatePanel> <xref:System.Web.UI.UpdatePanel>Formanty są używane do aktualizacji wybranych regionach strony zamiast aktualizowania całej strony odświeżania strony.</xref:System.Web.UI.UpdatePanel> Aby uzyskać więcej informacji, zobacz [informacje o formancie UpdatePanel](~/add/includes/ajax-current-ext-md.md) i [omówienie renderowania stron częściowych](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;nodes&quot;></a>## Węzłów formantu TreeView składa się z węzłów. Każdy wpis w drzewie węzeł i jest reprezentowana przez <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> Typy węzłów są zdefiniowane w następujący sposób:-nosi nazwę węzła, który zawiera inne węzły *węzła nadrzędnego*.      -Węzeł, który jest zawarty w innym węźle jest nazywany *podrzędnym*.      -Węzeł, który nie ma elementów podrzędnych jest nazywany *węzeł liścia*.      -Węzeł, który nie jest zawarty w innym węźle, ale jest elementem nadrzędnym dla wszystkich innych węzłów jest *węzła głównego*.       Węzeł może być nadrzędną podrzędny, ale głównego i nadrzędnym, a węzłów liści wzajemnie się wykluczają. Kilka właściwości visual i behawioralnych węzłów zależą od tego, czy węzeł jest główny, podrzędny lub węzeł liścia.       Chociaż w strukturze drzewa typowe jest tylko jeden węzeł główny, formantu TreeView umożliwia dodawanie wielu węzłów głównych do struktury drzewa. Jest to przydatne, jeśli chcesz wyświetlić listy elementów bez wyświetlania na jednym węźle głównym, tak jak listę kategorii produktów.       Każdy węzeł ma <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwości i <xref:System.Web.UI.WebControls.TreeNode.Value%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> Wartość <xref:System.Web.UI.WebControls.TreeNode.Text%2A>właściwość jest wyświetlana w widoku drzewa, podczas gdy <xref:System.Web.UI.WebControls.TreeNode.Value%2A>jest używana do przechowywania wszelkich dodatkowych danych dotyczących tego węzła, takich jak dane są przekazywane do zdarzenia odświeżania strony, który jest skojarzony z węzłem.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>       Węzeł może być w jednym z dwóch trybów: trybu wyboru ani nawigacji. Domyślnie węzeł jest w trybie wyboru. Aby ustawić węzła trybu nawigacji, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>Właściwości dla węzła na wartość inną niż ciąg pusty (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> Aby przełączyć węzła do trybu wyboru, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>Właściwości dla węzła na ciąg pusty (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > Niektóre przeglądarki ma ograniczenie, które mogą wpłynąć na wydajność w formancie TreeView. Na przykład program Microsoft Internet Explorer 6.0 ma limit znaków adresu URL 2067 znaki, które go zapisuje. Jeśli liczba znaków w adresie URL węzła jest większy niż ten numer, rozwinięcie tego węzła zakończy się niepowodzeniem i nie jest wyjątek.      <a name=&quot;static_data&quot;></a>## Statycznych danych najprostszym modelem danych formantu TreeView jest danych statycznych. Aby wyświetlić dane statyczne, za pomocą składni deklaratywnej, najpierw zagnieździć otwierające i zamykające `<Nodes>` tagi pomiędzy otwierającym, a zamykającym tagiem formantu TreeView. Następnie należy utworzyć struktury drzewa przez zagnieżdżanie `<asp:TreeNode>` elementy między otwarcia i zamknięcia `<Nodes>` tagów. Każdy `<asp:TreeNode>` — element reprezentuje węzeł drzewa i mapowanym na <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> Można ustawić właściwości każdego węzła przez ustawienie atrybuty jego `<asp:TreeNode>` elementu. Aby utworzyć podrzędnych węzłów, zagnieżdżać dodatkowe `<asp:TreeNode>` elementy między otwarcia i zamknięcia `<asp:TreeNode>` tagi węzła nadrzędnego.      <a name=&quot;binding_to_data&quot;></a>## Powiązanie do formantu TreeView danych również może być powiązana z danymi. Można użyć jednej z dwóch metod do wiązania kontrolki TreeView typowi źródła danych:-formantu TreeView służy do formantu źródła danych, który implementuje <xref:System.Web.UI.IHierarchicalDataSource>interfejsu, takich jak <xref:System.Web.UI.WebControls.XmlDataSource>kontroli lub <xref:System.Web.UI.WebControls.SiteMapDataSource>kontroli.</xref:System.Web.UI.WebControls.SiteMapDataSource> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.IHierarchicalDataSource> Aby powiązać z kontroli źródła danych, ustaw <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>Właściwości formantu TreeView <xref:System.Web.UI.Control.ID%2A>wartość formantu źródła danych.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> TreeView — kontrolka automatycznie wiąże określone dane kontroli źródła. Jest to preferowana metoda można powiązać z danymi.      -W formancie TreeView może być związany także <xref:System.Xml.XmlDocument>obiektu lub <xref:System.Data.DataSet>obiektu z relacjami.</xref:System.Data.DataSet> </xref:System.Xml.XmlDocument> Aby powiązać z jednego z tych źródeł danych, ustaw <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>Właściwości elementu TreeView kontrolować ze źródłem danych, a następnie wywołać <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>metody.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>       Podczas wiązania ze źródłem danych, w którym każdy element danych zawiera wiele właściwości (na przykład element XML o kilka atrybutów), węzeł Wyświetla wartość, która jest zwracana przez `ToString` metody elementu danych domyślnie. W przypadku elementu XML węzła wyświetla nazwy elementu, która zawiera wewnętrzna struktura drzewa, ale nie jest przydatne w przeciwnym razie wartość. Węzeł można powiązać właściwość elementu danych z konkretnych określając przy użyciu powiązań węzła drzewa <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>kolekcji.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>Kolekcja zawiera `TreeNodeBinding` obiektów, które definiują relację między elementem danych i węzeł, który jest wiązany.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Możesz określić kryteria dla powiązania i właściwości elementu danych, które mają być wyświetlane w węźle. Aby uzyskać więcej informacji o powiązaniach węzła drzewa zobacz <xref:System.Web.UI.WebControls.TreeNodeBinding>.</xref:System.Web.UI.WebControls.TreeNodeBinding>      > [!IMPORTANT] > Złośliwy użytkownik może utworzyć żądania wywołania zwrotnego i pobieranie danych dla węzłów formantu TreeView developer strony nie jest wyświetlana. W związku z tym bezpieczeństwo danych musi być implementowana przez źródło danych. Nie używaj <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>Właściwości, aby ukryć dane.</xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>      <a name=&quot;dynamic_node_population&quot;></a>## Czasami populacji w węźle dynamicznych, nie jest praktyczne statycznie definiowania struktury drzewa, ponieważ źródło danych zwraca za dużo danych lub danych do wyświetlenia zależy od informacji, które otrzymujesz w czasie wykonywania. W związku z tym formancie TreeView obsługuje populacji dynamiczne węzła. Gdy <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ma ustawioną wartość właściwości dla węzła `true`, pobiera wypełnione tego węzła, w czasie wykonywania, gdy węzeł jest rozwinięty.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Aby wypełnić węzła dynamicznie, musi definiować metodę obsługi zdarzeń, która zawiera logikę do wypełnienia węzła dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>zdarzeń.</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>       Przeglądarek, które obsługują skrypty wywołania zwrotnego można również korzystać z populacji węzła po stronie klienta. (W tym program Internet Explorer 5.5 i nowsze oraz innych przeglądarek.) Wypełnianie węzła po stronie klienta umożliwia formantu TreeView do wypełnienia węzła przy użyciu skryptu klienta, gdy użytkownicy rozwiń węzeł, bez konieczności obiegu do serwera. Aby uzyskać więcej informacji dotyczących populacji węzła po stronie klienta zobacz <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>      <a name=&quot;customizing_the_user_interface&quot;></a>## Dostosowywanie interfejsu użytkownika nie można na wiele sposobów, aby dostosować wygląd formantu TreeView. Po pierwsze możesz określić inny styl (na przykład rozmiar i kolor czcionki) dla każdego typu węzła.       Jeśli używasz kaskadowych arkuszy stylów (CSS), aby dostosować wygląd formantu, użyj style wbudowane lub pliku CSS, ale nie oba. Używając style wbudowane i osobnego pliku CSS może spowodować nieoczekiwane wyniki. Aby uzyskać więcej informacji o użyciu arkuszy stylów z formantami, zobacz [kontrolki serwera sieci Web i style CSS](~/add/includes/ajax-current-ext-md.md).       W poniższej tabeli wymieniono style dostępnego węzła.      | Właściwość stylu węzła | Opis elementu |   |-------------------------|-----------------|   | <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>| Ustawienia stylu dla węzła, gdy wskaźnik myszy znajduje się nad nim. |   | <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>| Ustawienia stylu dla węzłów liści. |   | <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>| Ustawienia domyślne style dla węzła. |   | <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>| Ustawienia stylu dla węzłów nadrzędnych. |   | <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>| Ustawienia stylu dla węzła głównego. |   | <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>| Ustawienia stylu dla wybranego węzła. |       Styl węzłów w określonych głębokości w drzewie można również sterować przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>kolekcji.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Styl pierwszy w kolekcji odpowiada styl węzłów na pierwszy poziom w drzewie. Drugi styl w kolekcji odpowiada styl węzłów na drugim poziomie drzewa i tak dalej. To najczęściej służy do generowania spisu treści — styl menu nawigacji gdzie węzły na niektórych głębokości powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzłów podrzędnych.      > [!NOTE] > Jeżeli styl jest zdefiniowany dla niektórych głębokość poziomie przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>kolekcji, przesłonięcia stylu dowolnego katalogu głównego, nadrzędny lub ustawienia stylu węzeł liścia dla węzłów na tym poziomie.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>       Innym sposobem zmienić wygląd formantu jest dostosowanie obrazów, które są wyświetlane w formancie TreeView. Własny niestandardowy zestaw obrazów dla różnych części formantu można określić przez ustawienie właściwości przedstawione w poniższej tabeli.      | Obraz właściwości | Opis elementu |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>| Adres URL, który obraz wyświetlany dla wskaźnika zwijanej węzła.</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> Ten obraz jest zwykle znak minus (-). |   | <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>| Adres URL, który obraz wyświetlany dla wskaźnika rozwijanego węzła.</xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> Ten obraz jest zwykle znak plus (+). |   | <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>| Adres URL do folderu zawierającego obrazy liniowe używanego do łączenia węzłów nadrzędnych do węzłów podrzędnych.</xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> Właściwość <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>musi również mieć ustawioną `true` dla tej właściwości, które mają wpływ. |   | <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>| Adres URL, który obraz wyświetlany dla wskaźnika węzła nie można rozwijać. |      > [!NOTE] > Nie musisz dostosować dla każdej właściwości obrazu.</xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> Jeśli właściwości obrazu nie jest jawnie ustawiona, zostanie użyta wbudowanego domyślnego obrazu.       TreeView — kontrolka umożliwia również wyświetlane pole wyboru obok węzła. Gdy <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>wartość właściwości jest równa wartości innych niż `TreeNodeTypes.None`, są wyświetlane pola wyboru obok typów określonego węzła.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>      > [!NOTE] > <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>Właściwości można ustawić bitowe połączenie <xref:System.Web.UI.WebControls.TreeNodeTypes>wartości elementu członkowskiego wyliczenia.</xref:System.Web.UI.WebControls.TreeNodeTypes> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>       Zawsze strona jest przesyłana do serwera, <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>kolekcji jest automatycznie wypełniane przy użyciu wybranych węzłów.</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Jeśli są wyświetlane pola wyboru, możesz użyć <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>zdarzenia umożliwia uruchamianie procedury niestandardowe przy każdej zmianie stanu pola wyboru między ogłoszenia na serwerze.</xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>      <a name=&quot;events&quot;></a>## Zdarzeń formantu TreeView udostępnia kilka zdarzeń, które można zaprogramować przed. Pozwala na uruchamianie procedury niestandardowe, przy każdym wystąpieniu zdarzenia. W poniższej tabeli wymieniono zdarzenia, które są obsługiwane w formancie TreeView.      | Zdarzenia | Opis elementu |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>| Występuje, gdy pole wyboru w formancie TreeView zmiany stanu między ogłoszenia na serwerze. |   | <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>| Występuje, gdy węzeł jest zaznaczona w formancie TreeView. |   | <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>| Występuje, gdy węzeł jest rozwinięty w formancie TreeView. |   | <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>| Występuje, gdy węzeł jest zwinięty w formancie TreeView. |   | <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>| Występuje, gdy węzeł jego właściwość <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> `true` jest rozwinięta w formancie TreeView. |   | <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>| Występuje, gdy element danych jest powiązany z węzła w formancie TreeView. |      <a name=&quot;scrolling&quot;> </a> ## Przewijanie TreeView — kontrolka nie ma wbudowanej przewijanie.</xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> </xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> </xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Aby dodać przewijania, należy umieścić w formancie TreeView <xref:System.Web.UI.WebControls.Panel>sterować i Dodaj pasków przewijania do <xref:System.Web.UI.WebControls.Panel>kontroli.</xref:System.Web.UI.WebControls.Panel> </xref:System.Web.UI.WebControls.Panel> Aby uzyskać więcej informacji, zobacz [informacje o formancie serwera sieci Web Panel](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;accessibility&quot;></a>## Dostępności znaczników renderowania domyślnie dla tego formantu nie mogą być zgodne ze standardami ułatwień dostępu. Aby uzyskać szczegółowe informacje dotyczące obsługi ułatwień dostępu dla tego formantu, zobacz [kontrolki ASP.NET i dostępności](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;declarative_syntax&quot;></a>## Składnia deklaratywne```   <asp:TreeView       AccessKey=&quot;string&quot;       AutoGenerateDataBindings=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CollapseImageToolTip=&quot;string&quot;       CollapseImageUrl=&quot;uri&quot;       CssClass=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       EnableClientScript=&quot;True|False&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ExpandDepth=&quot;string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|           14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30&quot;       ExpandImageToolTip=&quot;string&quot;       ExpandImageUrl=&quot;uri&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       ImageSet=&quot;Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|           BulletedList|BulletedList2|BulletedList3|BulletedList4|           Arrows|News|Contacts|Inbox|Events|Faq&quot;       LineImagesFolder=&quot;string&quot;       MaxDataBindDepth=&quot;integer&quot;       NodeIndent=&quot;integer&quot;       NodeWrap=&quot;True|False&quot;       NoExpandImageUrl=&quot;uri&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnSelectedNodeChanged=&quot;SelectedNodeChanged event handler&quot;       OnTreeNodeCheckChanged=&quot;TreeNodeCheckChanged event handler&quot;       OnTreeNodeCollapsed=&quot;TreeNodeCollapsed event handler&quot;       OnTreeNodeDataBound=&quot;TreeNodeDataBound event handler&quot;       OnTreeNodeExpanded=&quot;TreeNodeExpanded event handler&quot;       OnTreeNodePopulate=&quot;TreeNodePopulate event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PathSeparator=&quot;string&quot;       PopulateNodesFromClient=&quot;True|False&quot;       runat=&quot;server&quot;       ShowCheckBoxes=&quot;None|Root|Parent|Leaf|All&quot;       ShowExpandCollapse=&quot;True|False&quot;       ShowLines=&quot;True|False&quot;       SkinID=&quot;string&quot;       SkipLinkText=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Target=&quot;string&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <DataBindings>                   <asp:TreeNodeBinding                       DataMember=&quot;string&quot;                       Depth=&quot;integer&quot;                       FormatString=&quot;string&quot;                       ImageToolTip=&quot;string&quot;                       ImageToolTipField=&quot;string&quot;                       ImageUrl=&quot;uri&quot;                       ImageUrlField=&quot;string&quot;                       NavigateUrl=&quot;uri&quot;                       NavigateUrlField=&quot;string&quot;                       PopulateOnDemand=&quot;True|False&quot;                       SelectAction=&quot;Select|Expand|SelectExpand|None&quot;                       ShowCheckBox=&quot;string&quot;                       Target=&quot;string&quot;                       TargetField=&quot;string&quot;                       Text=&quot;string&quot;                       TextField=&quot;string&quot;                       ToolTip=&quot;string&quot;                       ToolTipField=&quot;string&quot;                       Value=&quot;string&quot;                       ValueField=&quot;string&quot;                   />           </DataBindings>           <HoverNodeStyle />           <LeafNodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />           <LevelStyles>                   <asp:TreeNodeStyle                       BackColor=&quot;color name|#dddddd&quot;                       BorderColor=&quot;color name|#dddddd&quot;                       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|                           Double|Groove|Ridge|Inset|Outset&quot;                       BorderWidth=&quot;size&quot;                       ChildNodesPadding=&quot;size&quot;                       CssClass=&quot;string&quot;                       Font-Bold=&quot;True|False&quot;                       Font-Italic=&quot;True|False&quot;                       Font-Names=&quot;string&quot;                       Font-Overline=&quot;True|False&quot;                       Font-Size=&quot;string|Smaller|Larger|XX-Small|                           X-Small|Small|Medium|Large|X-Large|XX-Large&quot;                       Font-Strikeout=&quot;True|False&quot;                       Font-Underline=&quot;True|False&quot;                       ForeColor=&quot;color name|#dddddd&quot;                       Height=&quot;size&quot;                       HorizontalPadding=&quot;size&quot;                       ImageUrl=&quot;uri&quot;                       NodeSpacing=&quot;size&quot;                       OnDisposed=&quot;Disposed event handler&quot;                       VerticalPadding=&quot;size&quot;                       Width=&quot;size&quot;                   />           </LevelStyles>           <Nodes>                   <asp:TreeNode                       Checked=&quot;True|False&quot;                       Expanded=&quot;string&quot;                       ImageToolTip=&quot;string&quot;                       ImageUrl=&quot;uri&quot;                       NavigateUrl=&quot;uri&quot;                       PopulateOnDemand=&quot;True|False&quot;                       SelectAction=&quot;Select|Expand|SelectExpand|None&quot;                       Selected=&quot;True|False&quot;                       ShowCheckBox=&quot;string&quot;                       Target=&quot;string&quot;                       Text=&quot;string&quot;                       ToolTip=&quot;string&quot;                       Value=&quot;string&quot;   >                   </asp:TreeNode>           </Nodes>           <NodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />           <ParentNodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />           <RootNodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />           <SelectedNodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />   </asp:TreeView>   ```"
  example:
  - "This section contains seven code examples:  \n  \n-   The first code example demonstrates how to set up the frames for the second code example.  \n  \n-   The second code example demonstrates how to use declarative syntax to display static data in the TreeView control.  \n  \n-   The third code example demonstrates how to bind the TreeView control to an XML data source.  \n  \n-   The fourth code example provides sample XML data for the third code example.  \n  \n-   The fifth code example demonstrates how to use the TreeView control for site navigation by binding it to a <xref:System.Web.UI.WebControls.SiteMapDataSource> control.  \n  \n-   The sixth code example provides sample site map data for the fifth code example.  \n  \n-   The seventh code example demonstrates how to populate the nodes in the TreeView control from the client.  \n  \n The following code example demonstrates how to set up the frames for the following code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_1.aspx)]  \n  \n The following code example demonstrates how to use declarative syntax to display static data in the TreeView control. This example is used within the frame set of the preceding example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_2.aspx)]  \n  \n The following code example demonstrates how to bind the TreeView control to an XML data source. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_3.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_3.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```  \n  \n The following code example demonstrates how to use the TreeView control for site navigation by binding it to a <xref:System.Web.UI.WebControls.SiteMapDataSource> control. For this example to work correctly, you must copy the sample site map data, provided after this code example, to a file named Web.sitemap.  \n  \n [!code-vb[TreeViewAutoGenerateBindings#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_4.aspx)]\n [!code-cs[TreeViewAutoGenerateBindings#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_4.aspx)]  \n  \n The following code example provides sample site map data for the preceding code example.  \n  \n```  \n<siteMap>  \n    <siteMapNode title=\"Home\" description=\"Home\" url=\"default.aspx\">  \n        <siteMapNode title=\"Products\" description=\"Products\" url=\"Products.aspx\">  \n            <siteMapNode title=\"Computers\" url=\"Computers.aspx\"/>  \n            <siteMapNode title=\"Accessories\" url=\"Accessories.aspx\"/>       \n        </siteMapNode>  \n    </siteMapNode>  \n</siteMap>  \n```  \n  \n The following code example demonstrates how to populate the nodes in the TreeView control from the client. When client-side node population is enabled, nodes are populated dynamically on the client, without the need to post back to the server.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_5.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_5.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("SelectedNodeChanged")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.SupportsEventValidation]

      public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.HierarchicalDataBoundControl
  implements:
  - System.Web.UI.ICallbackEventHandler
  - System.Web.UI.IPostBackDataHandler
  - System.Web.UI.IPostBackEventHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData(System.String)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.GetDataSource
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataPropertyChanged
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataSourceChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeView()
  nameWithType: TreeView.TreeView()
  fullName: System.Web.UI.WebControls.TreeView.TreeView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> klasy."
  remarks: "Użyj konstruktora TreeView do tworzenia i inicjuje nowe wystąpienie <xref:System.Web.UI.WebControls.TreeView>klasy.</xref:System.Web.UI.WebControls.TreeView> Aby dodać <xref:System.Web.UI.WebControls.TreeView>sterowania na stronę dynamicznie, Utwórz nową <xref:System.Web.UI.WebControls.TreeView>obiekt, ustaw jej właściwości, a następnie dodaj go do <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>kolekcji kontenera kontrolować, takich jak <xref:System.Web.UI.WebControls.PlaceHolder>kontroli.</xref:System.Web.UI.WebControls.PlaceHolder> </xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the TreeView constructor to add a <xref:System.Web.UI.WebControls.TreeView> control to a page dynamically. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the TreeView constructor to add a <xref:System.Web.UI.WebControls.TreeView> control to a page dynamically. For this example to work correctly, you must copy the sample XML data provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_71_1.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_71_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n  <Chapter Heading=\"Chapter 1\">  \n    <Section Heading=\"Section 1\">  \n    </Section>  \n    <Section Heading=\"Section 2\">  \n    </Section>  \n  </Chapter>  \n  <Chapter Heading=\"Chapter 2\">  \n    <Section Heading=\"Section 1\">  \n    </Section>  \n  </Chapter>  \n</Book>  \n```"
  syntax:
    content: public TreeView ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: TreeView.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Dodaje atrybuty HTML i style, które muszą być renderowana na określony <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> formantu."
  remarks: "Metoda AddAttributesToRender jest używana głównie przez deweloperów formantu."
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Reprezentujący strumienia wyjściowego do renderowania elementów HTML zawartości na kliencie."
  overload: System.Web.UI.WebControls.TreeView.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
  id: AutoGenerateDataBindings
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: AutoGenerateDataBindings
  nameWithType: TreeView.AutoGenerateDataBindings
  fullName: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą czy <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formant automatycznie generuje powiązania węzła drzewa."
  remarks: "Powiązania węzła drzewa zdefiniować relacji między elementem danych i węzeł, który jest wiązany. Podczas wiązania ze źródłem danych, w którym każdy element danych zawiera wiele właściwości (na przykład element XML o kilka atrybutów), <xref:System.Web.UI.WebControls.TreeView>kontroli musi wiedzieć, których właściwość elementu danych do powiązania, do którego <xref:System.Web.UI.WebControls.TreeNode>Właściwości.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeView> Jeśli ustawiono właściwość AutoGenerateDataBindings `true`, <xref:System.Web.UI.WebControls.TreeView>formant automatycznie generuje domyślne powiązań węzła drzewa, które ustawić <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiekt, który jest skojarzony z powiązaniem, które wartość zwracaną przez `ToString` metody elementu danych.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > Powiązania węzła drzewa automatycznie generowanych nie są dodawane do <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>kolekcji.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>       W przypadku elementu XML, wartość, która jest zwracana w wyniku `ToString` metoda jest nazwa elementu zawiera wewnętrzna struktura pliku XML, ale nie jest przydatne w przeciwnym razie wartość. Aby utworzyć drzewo bardziej użyteczna, musi definiować własne powiązania węzła drzewa przy wprowadzaniu <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>kolekcji.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>      > [!NOTE] > W przypadku definiowania <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>kolekcji, <xref:System.Web.UI.WebControls.TreeView>kontroli wykorzystuje te wartości zamiast powiązania węzła drzewa wygenerowanej automatycznie.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to disable automatic tree node binding generation by setting the AutoGenerateDataBindings property to `false`. The second code example provides sample site map data for the first code example.  \n  \n The following code example demonstrates how to disable automatic tree node binding generation by setting the AutoGenerateDataBindings property to `false`. A <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> collection is then defined to establish the relationship between the data items in a <xref:System.Web.UI.WebControls.SiteMapDataSource> control and the nodes of the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample site map data, provided after this code example, to a file named Web.sitemap.  \n  \n [!code-vb[TreeViewAutoGenerateBindings#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_169_1.aspx)]\n [!code-cs[TreeViewAutoGenerateBindings#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_169_1.aspx)]  \n  \n The following code example provides sample site map data for the preceding example.  \n  \n```  \n<siteMap>  \n    <siteMapNode title=\"Home\" description=\"Home\" url=\"default.aspx\">  \n        <siteMapNode title=\"Products\" description=\"Products\" url=\"Products.aspx\">  \n            <siteMapNode title=\"Computers\" url=\"Computers.aspx\"/>  \n            <siteMapNode title=\"Accessories\" url=\"Accessories.aspx\"/>       \n        </siteMapNode>  \n    </siteMapNode>  \n</siteMap>  \n```"
  syntax:
    content: public bool AutoGenerateDataBindings { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> kontroli automatycznego generowania powiązania węzła drzewa; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CheckedNodes
  id: CheckedNodes
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CheckedNodes
  nameWithType: TreeView.CheckedNodes
  fullName: System.Web.UI.WebControls.TreeView.CheckedNodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera kolekcję <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektów, które reprezentują węzłów w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> kontroli wyświetlające zaznaczone pole wyboru."
  remarks: "Gdy są wyświetlane pola wyboru w <xref:System.Web.UI.WebControls.TreeView>kontroli (przez ustawienie <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>Właściwości na wartość inną niż `TreeNodeType.None`), użyj właściwości CheckedNodes określić węzły, które są wyświetlane pola wyboru.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> </xref:System.Web.UI.WebControls.TreeView> Ta kolekcja jest najczęściej używany do Iterowanie wszystkich węzłów, które mają zaznaczone pole wyboru w drzewie.       <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>Zdarzenie jest zgłaszane, gdy pola wyboru <xref:System.Web.UI.WebControls.TreeView>kontroli zmiany stanu między ogłoszenia na serwerze.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak aktualizacja bazy danych lub wyświetlana zawartość przy każdym wystąpieniu tego zdarzenia.      > [!NOTE] > CheckedNodes kolekcji jest wypełniana przy użyciu pierwszej głębokość przechodzenia struktury drzewa: każdego węzła nadrzędnego jest przetwarzany dół węzły podrzędne przed jest wypełniana następnego węzła nadrzędnego."
  example:
  - "The following code example demonstrates how to use the CheckedNodes property to determine which nodes have a selected check box in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeViewShowCheckBoxes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1136_1.aspx)]\n [!code-cs[TreeViewShowCheckBoxes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1136_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> zawiera węzły w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> wyświetlający zaznaczone pole wyboru."
  overload: System.Web.UI.WebControls.TreeView.CheckedNodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CollapseAll
  id: CollapseAll
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CollapseAll()
  nameWithType: TreeView.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeView.CollapseAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zamyka każdy węzeł w drzewie."
  remarks: "Zwiń wszystko metody oferują wygodny sposób zamknięcia każdy węzeł w drzewie."
  example:
  - "The following code example demonstrates how to use the CollapseAll method to collapse all the nodes in the <xref:System.Web.UI.WebControls.TreeView> control at the same time.  \n  \n [!code-cs[TreeViewExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_54_1.aspx)]\n [!code-vb[TreeViewExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_54_1.aspx)]"
  syntax:
    content: public void CollapseAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.CollapseAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CollapseImageToolTip
  id: CollapseImageToolTip
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CollapseImageToolTip
  nameWithType: TreeView.CollapseImageToolTip
  fullName: System.Web.UI.WebControls.TreeView.CollapseImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia etykietkę narzędzia dla obrazu, który jest wyświetlany wskaźnik zwijanej węzła."
  remarks: "Właściwość CollapseImageToolTip umożliwia określenie ToolTip zwijanej obrazu. Określony tekst zawiera urządzenia ułatwianiem opis obrazu, który może służyć do udostępnić formantu.       Wartość tej właściwości jest przechowywany w stanie widoku.       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the CollapseImageToolTip property to specify a ToolTip for an image that is displayed for the collapsible node indicator.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_978_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_978_1.aspx)]"
  syntax:
    content: public string CollapseImageToolTip { get; set; }
    return:
      type: System.String
      description: "Etykietka narzędzia obrazu wyświetlanego dla wskaźnika zwijanej węzła."
  overload: System.Web.UI.WebControls.TreeView.CollapseImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CollapseImageUrl
  id: CollapseImageUrl
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CollapseImageUrl
  nameWithType: TreeView.CollapseImageUrl
  fullName: System.Web.UI.WebControls.TreeView.CollapseImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia adres URL niestandardowego obrazu wskaźnika zwijanej węzła."
  remarks: "Właściwość CollapseImageUrl umożliwia określenie niestandardowego obrazu wskaźnika zwijanej węzła. Ten obraz jest wyświetlany obok zwijanej węzła i zazwyczaj jest to znak minus (-).       Gdy <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.TreeView>kontrolka ma wyświetlać obrazu symbolu zastępczego obok węzła, aby wskazać, czy węzeł jest rozwijane, zwijanej lub z systemem innym niż rozbudowy, odpowiednio lub znak plus (+) lub minus sign(-).</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Można określić niestandardowych obrazów przez pierwsze ustawienie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>właściwości `TreeViewImageSet.Custom`, a następnie ustawić <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>i właściwości CollapseImageUrl do adresów URL dla niestandardowych obrazów.</xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Jeśli obrazy nie zostały określone, używane są domyślne obrazy. Aby ukryć wskaźniki węzeł rozszerzenia, należy ustawić <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>właściwości `false`.</xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>      > [!NOTE] > Aby upewnić się, że węzły są wyrównane poprawnie w programie <xref:System.Web.UI.WebControls.TreeView>kontrolować, korzystając z niestandardowymi obrazami, upewnij się, że wszystkie obrazy, które są określone przez <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i CollapseImageUrl właściwości mają takie same wymiary.</xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView>       W przypadku używania niestandardowego obrazu dla wskaźnika zwijanej węzła, należy również rozważyć ustawienie <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>Właściwości w celu określenia etykietka narzędzia obrazu.</xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the CollapseImageUrl property to specify a custom image for the collapsible node indicator. For the code example to display and the image to appear in the control, you must provide your own image and the <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> property must be set to `TreeNodeImageSet.Custom`.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1150_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1150_1.aspx)]"
  syntax:
    content: public string CollapseImageUrl { get; set; }
    return:
      type: System.String
      description: "Adres URL niestandardowego obrazu do wyświetlenia dla zwijanej węzłów. Wartość domyślna to ciąg pusty (&quot;&quot;), który zawiera domyślne minus obrazu znaku (-)."
  overload: System.Web.UI.WebControls.TreeView.CollapseImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: TreeView.CreateControlCollection()
  fullName: System.Web.UI.WebControls.TreeView.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tworzy kolekcję do przechowywania formantów podrzędnych."
  remarks: "<xref:System.Web.UI.WebControls.TreeView>Formant nie obsługuje osadzania formantów podrzędnych.</xref:System.Web.UI.WebControls.TreeView> Ta metoda została zastąpiona, aby uniemożliwić dodawanie formantów podrzędnych i zawsze zwraca <xref:System.Web.UI.EmptyControlCollection?displayProperty=fullName>obiektu.</xref:System.Web.UI.EmptyControlCollection?displayProperty=fullName>"
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "Zawsze zwraca <xref href=&quot;System.Web.UI.EmptyControlCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CreateNode
  id: CreateNode
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CreateNode()
  nameWithType: TreeView.CreateNode()
  fullName: System.Web.UI.WebControls.TreeView.CreateNode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zwraca nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> klasy. CreateNode to metoda pomocnika."
  remarks: "Metody CreateNode to metoda pomocnika, która zwraca nowe wystąpienie <xref:System.Web.UI.WebControls.TreeNode>klasy.</xref:System.Web.UI.WebControls.TreeNode>       Metoda CreateNode jest używana głównie przez deweloperów formantu. Deweloperzy kontroli, które mają być rozszerza <xref:System.Web.UI.WebControls.TreeView>klasy przez rozszerzenie <xref:System.Web.UI.WebControls.TreeNode>klasy powinny przesłaniać tę metodę, aby zwrócić obiekt, który pochodzi z <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeView> Typową przyczyną rozszerzenie <xref:System.Web.UI.WebControls.TreeNode>klasy jest zastąpienie <xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A>i <xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A>metody.</xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A> </xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A> </xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.TreeNode CreateNode ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "Nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.CreateNode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: DataBind()
  nameWithType: TreeView.DataBind()
  fullName: System.Web.UI.WebControls.TreeView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Wywołuje <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>metody klasy podstawowej.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>"
  remarks: "Kontrolki powiązane dane powinny zastępować <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>metody zamiast metody DataBind.</xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>"
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.DataBindings
  id: DataBindings
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: DataBindings
  nameWithType: TreeView.DataBindings
  fullName: System.Web.UI.WebControls.TreeView.DataBindings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera kolekcję <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektów, które definiują relację między elementem danych i węzeł, który jest wiązany."
  remarks: "Zawiera kolekcję powiązania danych <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektów, które definiują relację między elementem danych i węzeł, który jest wiązany.</xref:System.Web.UI.WebControls.TreeNodeBinding> Podczas wiązania ze źródłem danych, w którym każdy element danych zawiera wiele właściwości (na przykład element XML o kilka atrybutów), węzeł Wyświetla wartość, która jest zwracana przez `ToString` metody elementu danych domyślnie. W przypadku elementu XML węzła wyświetla nazwy elementu, która zawiera wewnętrzna struktura drzewa, ale nie jest przydatne w przeciwnym razie wartość. Węzeł właściwość elementu danych z konkretnych można powiązać, określając powiązania węzła drzewa.       Podczas definiowania relacji między elementem danych i węzłem, należy określić kryteria dla powiązania i wartości, które można powiązać właściwości <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> Kryteria wskazują, gdy element danych powinny być powiązane z węzłem. Głębokość węzła i/lub element członkowski danych można określić kryteria. Głębokość węzła określa poziom węzła, który zostaje powiązany. Na przykład jeśli określisz głębokości węzła 0, wszystkie węzły w strukturze drzewa na poziomie 0 są powiązane za pomocą tego powiązania węzła drzewa. Element członkowski danych określa typ elementu danych w źródle danych, ale może reprezentować różne informacje w zależności od źródła danych. Na przykład element członkowski danych elementu XML określa nazwę elementu.       Jeśli wiele <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektów zdefiniowanych powodujące konflikt ze sobą, <xref:System.Web.UI.WebControls.TreeView>kontroli stosuje powiązań węzła drzewa w następującej kolejności: 1.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNodeBinding>  <xref:System.Web.UI.WebControls.TreeNodeBinding>Obiektu, który definiuje zarówno głębokości, jak i element członkowski danych.</xref:System.Web.UI.WebControls.TreeNodeBinding>      2.  <xref:System.Web.UI.WebControls.TreeNodeBinding>Obiektu, który definiuje tylko głębokość.</xref:System.Web.UI.WebControls.TreeNodeBinding>      3.  <xref:System.Web.UI.WebControls.TreeNodeBinding>Obiektu, który definiuje element członkowski danych.</xref:System.Web.UI.WebControls.TreeNodeBinding>      4.  <xref:System.Web.UI.WebControls.TreeNodeBinding>Obiektu, który definiuje element członkowski danych ani głębokość.</xref:System.Web.UI.WebControls.TreeNodeBinding>       Jeśli określono wiele powiązań spełniające te same kryteria pierwszeństwa, pierwszy powiązania w kolekcji jest stosowany.       Po nawiązaniu kryteria powiązania można następnie powiązać właściwość <xref:System.Web.UI.WebControls.TreeNode>obiekt, który może być powiązana z wartością.</xref:System.Web.UI.WebControls.TreeNode> Możesz powiązać pole elementu danych lub atrybutu lub wyświetlić wartość statyczną. Aby uzyskać więcej informacji na temat właściwości <xref:System.Web.UI.WebControls.TreeNode>obiektu do wartości, zobacz <xref:System.Web.UI.WebControls.TreeNodeBinding>.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> powiązań       Mimo że można programowo wypełniać kolekcji powiązania danych, zwykle ustawiana jest deklaratywnie. Aby określić powiązania węzła drzewa, najpierw zagnieździć otwierające i zamykające `<DataBindings>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Następnie należy umieścić `<asp:TreeNodeBinding>` elementy między otwarcia i zamknięcia `<DataBindings>` znaczniki dla każdego węzła drzewa, możesz powiązanie chcesz określić.       Podczas wiązania danych są tworzone przez ustawienie <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>Właściwość <xref:System.Web.UI.WebControls.TreeView>formant `true`, powiązania, które są tworzone mieć <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>ustawioną właściwość `true`.</xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> Mieć powiązań danych, które są tworzone deklaratywnie <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>ustawioną właściwość `false`.</xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> Za pomocą składni deklaratywnej pozwala na kontrolowanie zachowania wiązania danych indywidualnych."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the DataBindings collection to define the relationship between a data item and the node that it is binding to. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the DataBindings collection to define the relationship between a data item and the node that it is binding to. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml. This example specifies only the <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> property of the binding. A slight performance gain could be added by also specifying the <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> property.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_387_1.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_387_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeBindingCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> reprezentujący relacja między elementem danych i węzeł, który jest wiązany."
  overload: System.Web.UI.WebControls.TreeView.DataBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.EnableClientScript
  id: EnableClientScript
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: EnableClientScript
  nameWithType: TreeView.EnableClientScript
  fullName: System.Web.UI.WebControls.TreeView.EnableClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą czy <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> kontroli renderuje skryptu po stronie klienta do obsługi rozwijanie i zwijanie zdarzenia."
  remarks: "Umożliwia określenie właściwości EnableClientScript czy <xref:System.Web.UI.WebControls.TreeView>kontroli renderuje skryptu po stronie klienta w przeglądarkach zgodne do obsługi rozwijanie i zwijanie zdarzeń.</xref:System.Web.UI.WebControls.TreeView> Jeśli ta właściwość jest równa `true`, przeglądarek zgodne wykonanie kodu do rozwijanie i zwijanie węzłów na kliencie. Dane węzła drzewa musi być znane z wyprzedzeniem dla skryptu po stronie klienta do pracy. Przy użyciu skryptu klienta zapobiega ogłoszenie (post) na serwer zawsze węzła jest rozwinięte lub zwinięte.       Gdy dane węzła drzewa nie jest znany wcześniej, węzłów można wypełniać od klienta, jeśli `PopulateNodesFromClient` również ustawioną właściwość `true`. W tym scenariuszu, należy również podać metodę obsługi zdarzeń <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>zdarzeń, aby wypełnić węzłów.</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Aby uzyskać więcej informacji dotyczących populacji węzła po stronie klienta zobacz <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>      > [!NOTE] > Jeśli ustawiono właściwość EnableClientScript `false`, <xref:System.Web.UI.WebControls.TreeView>kontroli dokonuje ogłoszenia serwer zawsze węzła jest rozwinięte lub zwinięte.</xref:System.Web.UI.WebControls.TreeView>       Wartość tej właściwości jest przechowywany w stanie widoku.       Nie można ustawić tej właściwości kompozycji lub motywów arkusza stylów. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.ThemeableAttribute>i [kompozycji ASP.NET i karnacji](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the EnableClientScript property to render client-side script that is used to expand and collapse nodes on compatible browsers. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the EnableClientScript property to render client-side script that is used to expand and collapse nodes on compatible browsers. Notice that a post to the server is required to expand and collapse a node when the EnableClientScript property is set to `false`. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewEnableClientScript#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1194_1.aspx)]\n [!code-vb[TreeViewEnableClientScript#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1194_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public bool EnableClientScript { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>do renderowania skryptu po stronie klienta w przeglądarkach zgodne; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.EnableClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ExpandAll
  id: ExpandAll
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ExpandAll()
  nameWithType: TreeView.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeView.ExpandAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zostanie otwarty każdy węzeł w drzewie."
  remarks: "Metoda Rozwiń wszystko zapewnia wygodny sposób Otwórz każdy węzeł w drzewie."
  example:
  - "The following code example demonstrates how to use the ExpandAll method to expand all the nodes in the <xref:System.Web.UI.WebControls.TreeView> control at the same time.  \n  \n [!code-cs[TreeViewExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_100_1.aspx)]\n [!code-vb[TreeViewExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_100_1.aspx)]"
  syntax:
    content: public void ExpandAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.ExpandAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ExpandDepth
  id: ExpandDepth
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ExpandDepth
  nameWithType: TreeView.ExpandDepth
  fullName: System.Web.UI.WebControls.TreeView.ExpandDepth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia liczbę poziomów, które zostaną rozwinięte podczas obliczania <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formant jest wyświetlany po raz pierwszy."
  remarks: "Użyj właściwości ExpandDepth do kontrolowania renderowanie <xref:System.Web.UI.WebControls.TreeView>kontrolować pojawi się po raz pierwszy.</xref:System.Web.UI.WebControls.TreeView> W kolejnych ogłaszania zwrotnego węzły zachować ich bieżący stan rozwinięte."
  syntax:
    content: public int ExpandDepth { get; set; }
    return:
      type: System.Int32
      description: "Głębokość do wyświetlenia, gdy <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> początkowo wyświetlana jest. Wartość domyślna to -1, która wyświetla wszystkie węzły."
  overload: System.Web.UI.WebControls.TreeView.ExpandDepth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ExpandImageToolTip
  id: ExpandImageToolTip
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ExpandImageToolTip
  nameWithType: TreeView.ExpandImageToolTip
  fullName: System.Web.UI.WebControls.TreeView.ExpandImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia etykietkę narzędzia dla obrazu, który jest wyświetlany wskaźnik rozwijania węzła."
  remarks: "Właściwość ExpandImageToolTip umożliwia określenie etykietka narzędzia obrazu. Określony tekst zawiera urządzenia ułatwianiem opis obrazu, który może służyć do udostępnić formantu.       Wartość tej właściwości jest przechowywany w stanie widoku.       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ExpandImageToolTip property to specify a ToolTip for an image that is displayed for the expandable node indicator.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_839_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_839_1.aspx)]"
  syntax:
    content: public string ExpandImageToolTip { get; set; }
    return:
      type: System.String
      description: "Etykietka narzędzia obrazu wyświetlanego dla wskaźnika rozwijanego węzła."
  overload: System.Web.UI.WebControls.TreeView.ExpandImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ExpandImageUrl
  id: ExpandImageUrl
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ExpandImageUrl
  nameWithType: TreeView.ExpandImageUrl
  fullName: System.Web.UI.WebControls.TreeView.ExpandImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia adres URL niestandardowego obrazu wskaźnika rozwijanego węzła."
  remarks: "Właściwość ExpandImageUrl umożliwia określenie niestandardowego obrazu wskaźnika rozwijanego węzła. Ten obraz jest wyświetlany obok rozwijanego węzła i zazwyczaj jest to znak plus (+).       Gdy <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.TreeView>kontrolka ma wyświetlać obrazu symbolu zastępczego obok węzła, aby wskazać, czy węzeł jest rozwijane, zwijanej lub z systemem innym niż rozbudowy, odpowiednio lub znak plus (+) lub znak minus (-).</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Można określić niestandardowych obrazów przez pierwsze ustawienie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>właściwości `TreeViewImageSet.Custom`, a następnie ustawić <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, ExpandImageUrl, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>właściwości do adresów URL dla niestandardowych obrazów.</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Jeśli obrazy nie zostały określone, używane są domyślne obrazy. Aby ukryć wskaźniki węzeł rozszerzenia, należy ustawić <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>właściwości `false`.</xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>      > [!NOTE] > Aby upewnić się, że węzły są wyrównane poprawnie w programie <xref:System.Web.UI.WebControls.TreeView>kontrolować, korzystając z niestandardowymi obrazami, upewnij się, że wszystkie obrazy, które są określone przez <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, ExpandImageUrl, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>właściwości mają takie same wymiary.</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView>       Do poprawnego wyświetlania obrazu niestandardowego, konieczne może być ustawiona <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>do `false`.</xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>       W przypadku używania niestandardowego obrazu dla wskaźnika rozwijanego węzła, należy również rozważyć ustawienie <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>Właściwości w celu określenia etykietka narzędzia obrazu.</xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the ExpandImageUrl property to specify a custom image for the expandable node indicator. For the code example to display and the image to appear in the control, you must provide your own image and the <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> property must be set to `TreeNodeImageSet.Custom`.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_567_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_567_1.aspx)]"
  syntax:
    content: public string ExpandImageUrl { get; set; }
    return:
      type: System.String
      description: "Adres URL niestandardowego obrazu do wyświetlania węzłów można rozwijać. Wartość domyślna to ciąg pusty (&quot;&quot;), który zawiera domyślne obrazu znak plus (+)."
  overload: System.Web.UI.WebControls.TreeView.ExpandImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.FindNode(System.String)
  id: FindNode(System.String)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: FindNode(String)
  nameWithType: TreeView.FindNode(String)
  fullName: System.Web.UI.WebControls.TreeView.FindNode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> kontroli w ścieżce określonej wartości."
  remarks: "Użyj metody FindNode, aby pobrać węzła z <xref:System.Web.UI.WebControls.TreeView>formantu w ścieżce określonej wartości.</xref:System.Web.UI.WebControls.TreeView> Ścieżka wartość zawiera listę rozdzielonych ogranicznikami wartości węzła, które tworzą ścieżkę od węzła głównego do bieżącego węzła. Każdy węzeł przechowuje ścieżki wartość w <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>Właściwość określa znak ogranicznika, który służy do rozdzielania wartości węzła.</xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>"
  example:
  - "The following code example demonstrates how to use the FindNode method to retrieve a node from the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[TreeViewFindNode#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_72_1.aspx)]\n [!code-vb[TreeViewFindNode#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_72_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);
    parameters:
    - id: valuePath
      type: System.String
      description: "Ścieżka wartość węzła."
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> w ścieżce określonej wartości."
  overload: System.Web.UI.WebControls.TreeView.FindNode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: TreeView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.TreeView.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zwraca wynik zdarzeń wywołania zwrotnego, przeznaczonego dla formantu."
  remarks: "<xref:System.Web.UI.WebControls.TreeView>Kontrolować implementuje <xref:System.Web.UI.ICallbackEventHandler>interfejsu i używa <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>do pobierania danych i metodę GetCallbackResult, aby zwrócić dane pobrane z formantem.</xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: protected virtual string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "Wyniki wywołania zwrotnego."
  overload: System.Web.UI.WebControls.TreeView.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.HoverNodeStyle
  id: HoverNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: HoverNodeStyle
  nameWithType: TreeView.HoverNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.HoverNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera odwołanie do <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> obiekt, który pozwala na ustawienie wygląd węzła, gdy wskaźnik myszy znajduje się nad nim."
  remarks: "Aby sterować wyglądem węzła, gdy wskaźnik myszy znajduje się nad nim, należy użyć właściwości HoverNodeStyle. Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle>obiekt, który zwraca.</xref:System.Web.UI.WebControls.TreeNodeStyle> Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TreeNodeStyle>obiektu (na przykład `HoverNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `HoverNodeStyle.ForeColor`). Ta funkcja jest obsługiwana tylko dla klientów obsługujących skryptu.      > [!NOTE] > Użycie właściwości HoverNodeStyle, należy uwzględnić `<head>` element z `runat=&quot;server&quot;` atrybutu.       Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy węzła. Właściwości stylu są stosowane w następującej kolejności: 1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  HoverNodeStyle.      > [!NOTE] > Ustawienia stylu dla właściwości HoverNodeStyle zastąpić wszystkie odpowiednie ustawienia styl węzła, które znajdują się w <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>       Właściwość HoverNodeStyle nie jest renderowana dla węzła o jego <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ustawioną właściwość `TreeNodeSelectAction.None`.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>       W odróżnieniu od <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>i <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>Właściwości, które są <xref:System.Web.UI.WebControls.TreeNodeStyle>obiekty, właściwość HoverNodeStyle jest <xref:System.Web.UI.WebControls.Style>obiektu.</xref:System.Web.UI.WebControls.Style> </xref:System.Web.UI.WebControls.TreeNodeStyle> </xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>"
  example:
  - "The following code example demonstrates how to use the HoverNodeStyle property to control the appearance of a node when the mouse pointer is positioned over it. For this example to work, you must include a `<head>` element with a `runat=\"server\"` attribute.  \n  \n [!code-vb[TreeViewHoverNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_293_1.aspx)]\n [!code-cs[TreeViewHoverNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_293_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style HoverNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "Odwołanie do <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> reprezentujący styl węzła, gdy wskaźnik myszy znajduje się nad nim."
  overload: System.Web.UI.WebControls.TreeView.HoverNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ImageSet
  id: ImageSet
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ImageSet
  nameWithType: TreeView.ImageSet
  fullName: System.Web.UI.WebControls.TreeView.ImageSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia grupy obrazów do użycia na potrzeby <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Umożliwia określenie grupy obrazów do użycia dla właściwości ImageSet <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Można wybrać zestaw wstępnie zdefiniowanych obrazów w formancie wygląd normalny lub zdefiniuj własny niestandardowy zestaw.      > [!NOTE] > ImageSet właściwość nie ma wpływu na ustawienia stylu dowolnego węzła. Ustaw właściwość odpowiedni styl, takich jak <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>Właściwości, jeśli chcesz dodać kolory niestandardowe i odstępy.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>       W poniższej tabeli przedstawiono prawidłowe wartości dla właściwości ImageSet.      | Obraz zestawu | Opis elementu |   |---------------|-----------------|   | `TreeViewImageSet.Arrows`| Zestaw wstępnie zdefiniowanych obrazu, który używa obrazy strzałkę. |   | `TreeViewImageSet.BulletedList`| Zestaw wstępnie zdefiniowanych obrazu, który używa obrazów w kształcie romb punktor. |   | `TreeViewImageSet.BulletedList2`| Zestaw wstępnie zdefiniowanych obrazu, który używa obrazów w kształcie kwadratowy punktor. |   | `TreeViewImageSet.BulletedList3`| Zestaw wstępnie zdefiniowanych podzielonym, romb w kształcie obrazy punktor. |   | `TreeViewImageSet.BulletedList4`| Zestaw wstępnie zdefiniowanych alternatywny podzielonym punktor obrazy o rozmiarach, które zależą od poziomu w kształcie romb. |   | `TreeViewImageSet.Contacts`| Zestaw wstępnie zdefiniowanych obrazu, który używa obrazów MSN Messenger. |   | `TreeViewImageSet.Custom`| Zestaw obrazu użytkownika. |   | `TreeViewImageSet.Events`| Zestaw wstępnie zdefiniowanych obrazu, który używa obrazy stylem dziennika zdarzeń. |   | `TreeViewImageSet.Faq`| Zestaw wstępnie zdefiniowanych obrazu, który używa stylem często zadawane pytania dotyczące obrazów. |   | `TreeViewImageSet.Inbox`| Zestaw wstępnie zdefiniowanych obrazu, który używa obrazy stylem poczty e-mail. |   | `TreeViewImageSet.News`| Zestaw wstępnie zdefiniowanych obrazu, który używa stylem grup dyskusyjnych obrazów. |   | `TreeViewImageSet.Simple`| Zestaw wstępnie zdefiniowanych obrazu, który używa przedstawiono prosty kształtu. |   | `TreeViewImageSet.Simple2`| Zestaw wstępnie zdefiniowanych obrazu, który używa prostego wypełnione kształty. |   | `TreeViewImageSet.Msdn`| Zestaw wstępnie zdefiniowanych obrazu, który korzysta z obrazów MSDN. |   | `TreeViewImageSet.WindowsHelp`| Zestaw wstępnie zdefiniowanych obrazu, który używa obrazy pomocy systemu Windows. |   | `TreeViewImageSet.XPFileExplorer`| Zestaw wstępnie zdefiniowanych obrazu, który używa obrazów Eksploratora Windows dostępnych w systemie Windows XP. |       Podczas definiowania niestandardowego zestawu obrazów, należy określić obraz dla każdej właściwości w poniższej tabeli. W przeciwnym razie jest używany obraz domyślny dla tej właściwości.      | Właściwość | Opis elementu |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>| Adres URL niestandardowego obrazu wskaźnika węzła zwijane. |   | <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>| Adres URL niestandardowego obrazu wskaźnika rozwijanego węzła. |   | <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>| Adres URL do folderu, który zawiera niestandardowych obrazów linii łączących węzły. |   | <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>| Adres URL niestandardowego obrazu wskaźnika węzła nie można rozwijać. |       Wartość tej właściwości jest przechowywana w widoku stanu.</xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>"
  example:
  - "The following code example demonstrates how to use the ImageSet property to display the Windows Explorer set of images in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewImageSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_587_1.aspx)]\n [!code-vb[TreeViewImageSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_587_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeViewImageSet
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.TreeViewImageSet&quot;> </xref> wartości. Wartość domyślna to <xref uid=&quot;langword_csharp_TreeViewImageSet.Custom&quot; name=&quot;TreeViewImageSet.Custom&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.ImageSet*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Zestaw określonego obrazu nie jest jednym z <xref href=&quot;System.Web.UI.WebControls.TreeViewImageSet&quot;> </xref> wartości."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LeafNodeStyle
  id: LeafNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LeafNodeStyle
  nameWithType: TreeView.LeafNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.LeafNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera odwołanie do <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> obiekt, który umożliwia określenie wyglądu węzłów liści."
  remarks: "Aby sterować wyglądem węzeł liścia, użyj właściwości LeafNodeStyle <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle>obiekt zwraca.</xref:System.Web.UI.WebControls.TreeNodeStyle> Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TreeNodeStyle>obiektu (na przykład `LeafNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `LeafNodeStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy węzła. Właściwości stylu są stosowane w następującej kolejności: 1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub LeafNodeStyle, w zależności od typu węzła.</xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       Jeśli chcesz wygenerować tabeli menu nawigacyjne stylu treści, gdzie węzły na pewnym etapie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzłów podrzędnych można rozważyć przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>zamiast ustawienie właściwości stylu poszczególnych właściwości.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>"
  example:
  - "The following code example demonstrates how to use the LeafNodeStyle property to control the appearance of the leaf nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeViewLeafNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_398_1.aspx)]\n [!code-cs[TreeViewLeafNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_398_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "Odwołanie do <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> reprezentujący styl węzłów liścia <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.LeafNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LevelStyles
  id: LevelStyles
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LevelStyles
  nameWithType: TreeView.LevelStyles
  fullName: System.Web.UI.WebControls.TreeView.LevelStyles
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera kolekcję <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> obiekty reprezentujące style węzła na poszczególnych poziomach drzewa."
  remarks: "Użyć kolekcji LevelStyles zamiast właściwości stylu (takich jak <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>Właściwości) do sterowania styl węzłów na poszczególne poziomy drzewa.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> Styl węzłów w drzewie pierwszy poziom odpowiada pierwszego stylu w kolekcji. Drugi styl w kolekcji odnosi się do stylu węzłów drugiego poziomu drzewa i tak dalej. Ta właściwość jest używana najczęściej do generowania spisu treści — styl menu nawigacji gdzie węzły na pewnym etapie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzłów podrzędnych.       Właściwości stylu są stosowane w następującej kolejności: 1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Jeśli kolekcja LevelStyles została zdefiniowana, zostanie on zastosowany w tej chwili zastępowanie innych właściwości stylu węzła.      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>"
  example:
  - "The following code example demonstrates how to use the LevelStyles property to create a navigation menu. The control is always fully expanded, with the expansion node indicators and images hidden. Also, the <xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A> property is used to control the spacing of the node levels.  \n  \n [!code-vb[TreeViewLevelStyles#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_985_1.aspx)]\n [!code-cs[TreeViewLevelStyles#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_985_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyleCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.StyleCollection&quot;> </xref> reprezentujący style węzła na poszczególnych poziomach drzewa."
  overload: System.Web.UI.WebControls.TreeView.LevelStyles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LineImagesFolder
  id: LineImagesFolder
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LineImagesFolder
  nameWithType: TreeView.LineImagesFolder
  fullName: System.Web.UI.WebControls.TreeView.LineImagesFolder
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia ścieżkę do folderu, który zawiera obrazy liniowe, które są używane do połączenia z węzłów podrzędnych węzłów nadrzędnych."
  remarks: "<xref:System.Web.UI.WebControls.TreeView>Formant może wyświetlać linii łączących węzły podrzędne do węzłów nadrzędnych podczas <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>ma ustawioną właściwość `true`.</xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> </xref:System.Web.UI.WebControls.TreeView> Jeśli wiersze są wyświetlane, użyj właściwości LineImagesFolder, aby określić dostępnej w sieci Web folderu, który zawiera zbiór wstępnie renderowanych obrazów do użycia dla wierszy. W poniższej tabeli opisano obrazów, które są używane przez <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView>      | Obraz | Opis elementu |   |-----------|-----------------|   | Dash.GIF| Obraz wiersza wyświetlany obok węzła głównego, gdy istnieje tylko jeden węzeł główny w strukturze drzewa, a węzeł główny jest obiektem typu liść. |   | Dashminus.GIF| Obraz znaku minus (-) obok węzła głównego wyświetlany, gdy istnieje tylko jeden węzeł główny w strukturze drzewa, aby wskazać, że rozwinięciu węzła głównego. |   | Dashplus.GIF| Obraz znaku plus (+) obok węzła głównego wyświetlany, gdy istnieje tylko jeden węzeł główny w strukturze drzewa, aby wskazać, że węzeł główny jest zwinięty. |   | I.GIF| Obraz wiersza wyświetlany nawiązać węzłów sąsiadujących ze sobą. |   | L.GIF| Wiersz obraz wyświetlany obok do ostatniego węzła w gałęzi po węzeł liścia. |   | Lminus.GIF| Wiersz obraz wyświetlany obok ostatni węzeł w gałęzi, aby wskazać, że węzeł jest rozwinięty. |   | Lplus.GIF| Wiersz obraz wyświetlany obok ostatni węzeł w gałęzi, aby wskazać, że węzeł jest zwinięty. |   | Minus.GIF| Znak minus (-) obraz wyświetlany obok pierwszego węzła głównego w strukturze drzewa, który zawiera wiele węzłów głównych w celu wskazania, że węzeł jest rozwinięty. Ten obraz zawiera dodatkowy wiersz i jest wyświetlana tylko wtedy, gdy główny węzeł zostanie zwinięty raz. Po załadowaniu strony jest wyświetlany obraz Rminus.gif. |   | NOEXPAND.GIF| Obraz rozdzielacza puste, wyświetlana obok węzeł liścia. Ten obraz umożliwia tekst do wiersza się pionowo. |   | Plus.GIF| Obraz znak plus (+) obok pierwszego węzła głównego w strukturze drzewa, który zawiera wiele węzłów głównych w celu wskazania, że węzeł wyświetlany jest zwinięty. Ten obraz zawiera dodatkowy wiersz i jest wyświetlana tylko wtedy, gdy główny węzeł zostanie rozwinięty raz. Po załadowaniu strony jest wyświetlany obraz Rplus.gif. |   | R.GIF| Obraz wiersza wyświetlany obok pierwszego węzła głównego w strukturze drzewa, który zawiera wiele węzłów głównych w celu wskazania, że węzeł jest węzłem liścia. |   | Rminus.GIF| Znak minus (-) obraz wyświetlany obok pierwszego węzła głównego w strukturze drzewa, który zawiera wiele węzłów głównych w celu wskazania, że węzeł jest rozwinięty. Ten obraz zawiera dodatkowy wiersz i jest wyświetlana tylko wtedy, gdy strona jest ładowana jako pierwsza. Po główny węzeł zostanie zwinięty raz, jest wyświetlany obraz Minus.gif. |   | Rplus.GIF| Obraz znak plus (+) obok pierwszego węzła głównego w strukturze drzewa, który zawiera wiele węzłów głównych w celu wskazania, że węzeł wyświetlany jest zwinięty. Ten obraz zawiera dodatkowy wiersz i jest wyświetlana tylko wtedy, gdy strona jest ładowana jako pierwsza. Po raz została rozszerzona węzła głównego, jest wyświetlany obraz Plus.gif. |   | T.GIF| Obraz wiersza wyświetlany obok węzła środku struktury drzewa (na przecięciu t) do wskazywania węzeł liścia. |   | Tminus.GIF| Obraz znaku minus (-) wyświetlana obok węzła środku struktury drzewa (na przecięciu t), aby wskazać, że węzeł jest rozwinięty. |   | Tplus.GIF| Obraz znaku plus (+) wyświetlana obok węzła środku struktury drzewa (na przecięciu t), aby wskazać, że węzeł jest zwinięty. |      > [!NOTE] >, Jeśli nie ustawiono właściwości LineImagesFolder, <xref:System.Web.UI.WebControls.TreeView>kontrolka będzie używać wbudowanych, domyślnych obrazów (20 x 20 pikseli).</xref:System.Web.UI.WebControls.TreeView>       Niektóre wizualnych projektantów, takich jak Microsoft Visual Studio, zapewniają narzędzia do generowania obrazy liniowe.       Czas wykonywania nie Przerzuć niestandardowych obrazów wyświetlane od prawej do lewej. Do obsługi zarówno od lewej do prawej i lewej do prawej strony sieci Web, musisz utworzyć zestawy obrazu dla obu kierunkach.       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the LineImagesFolder property to specify the folder that contains the line images to display in the <xref:System.Web.UI.WebControls.TreeView> control. To work with this example, use the Line Designer tool beforehand to create a set of line images. Place them in a folder named LineImages within the directory for the sample application.  \n  \n [!code-cs[TreeViewLineImagesFolderUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_52_1.aspx)]\n [!code-vb[TreeViewLineImagesFolderUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_52_1.aspx)]"
  syntax:
    content: public string LineImagesFolder { get; set; }
    return:
      type: System.String
      description: "Ścieżka do folderu, który zawiera obrazy liniowe używanego do łączenia węzłów. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie ustawiono właściwości LineImagesFolder."
  overload: System.Web.UI.WebControls.TreeView.LineImagesFolder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LoadPostData(String,NameValueCollection)
  nameWithType: TreeView.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.TreeView.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Procesy ogłaszanie dane <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Struktura strony ASP.NET śledzi wszystkie kontrolki serwera, które zwracają `true` w wywołaniu metody element LoadPostData, a następnie wywołuje <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>metody tych kontrolek.</xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>"
  syntax:
    content: protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "Identyfikator klucza dla formantu."
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "Kolekcja wszystkich przychodzących wartości nazwy."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> zmian stanu formantu w wyniku zdarzenia odświeżania strony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: TreeView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ładuje wcześniej zapisany widok stanu <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  syntax:
    content: protected override void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Obiekt, który zawiera wartości stanu zapisanego widoku formantu."
  overload: System.Web.UI.WebControls.TreeView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.MaxDataBindDepth
  id: MaxDataBindDepth
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: MaxDataBindDepth
  nameWithType: TreeView.MaxDataBindDepth
  fullName: System.Web.UI.WebControls.TreeView.MaxDataBindDepth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia maksymalną liczbę poziomów drzewa powiązać <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Podczas tworzenia wiązania <xref:System.Web.UI.WebControls.TreeView>kontrolować ze źródłem danych, użyj właściwości MaxDataBindDepth, aby ograniczyć liczbę poziomów drzewa powiązanie z formantem.</xref:System.Web.UI.WebControls.TreeView> Na przykład ustawienie tej właściwości na `2` wiąże węzeł główny i węzły znajdujących się bezpośrednio w węźle głównym do <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Wszystkie pozostałe węzły w źródle danych są ignorowane.      > [!IMPORTANT] > Złośliwy użytkownik może utworzyć żądania wywołania zwrotnego i pobieranie danych dla węzłów <xref:System.Web.UI.WebControls.TreeView>formant, który developer strony nie są wyświetlane.</xref:System.Web.UI.WebControls.TreeView> W związku z tym bezpieczeństwo danych musi być implementowana przez źródło danych. Nie należy używać właściwości MaxDataBindDepth do ukrywania danych.       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the MaxDataBindDepth property to bind only the first two node levels (depths 0 and 1) to the <xref:System.Web.UI.WebControls.TreeView> control. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the MaxDataBindDepth property to bind only the first two node levels (depths 0 and 1) to the <xref:System.Web.UI.WebControls.TreeView> control. All node levels in the data source are ignored. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewMaxDataBindDepth#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1168_1.aspx)]\n [!code-vb[TreeViewMaxDataBindDepth#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1168_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public int MaxDataBindDepth { get; set; }
    return:
      type: System.Int32
      description: "Maksymalna liczba poziomów drzewa powiązać <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu. Wartość domyślna to -1, która wiąże wszystkie poziomy drzewa w źródle danych formantu."
  overload: System.Web.UI.WebControls.TreeView.MaxDataBindDepth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wybrana wartość jest mniejsza niż <xref uid=&quot;langword_csharp_-1&quot; name=&quot;-1&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.NodeIndent
  id: NodeIndent
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: NodeIndent
  nameWithType: TreeView.NodeIndent
  fullName: System.Web.UI.WebControls.TreeView.NodeIndent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wielkość wcięcia (w pikselach) dla obiekt podrzędny węzłów <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Właściwość NodeIndent służy do kontrolowania wielkości odstępów między lewą krawędzią elementem podrzędnym a lewą krawędzią jego węzła nadrzędnego.      > [!NOTE] > NodeIndent właściwość ma wpływ na każdy węzeł podrzędny w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Nie jest możliwe kontrolowanie indywidualnie ilość wcięcie każdego węzła.       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the NodeIndent property to control the indentation of child nodes.  \n  \n [!code-cs[TreeViewNodeIndent#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1001_1.aspx)]\n [!code-vb[TreeViewNodeIndent#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1001_1.aspx)]"
  syntax:
    content: public int NodeIndent { get; set; }
    return:
      type: System.Int32
      description: "Ilość miejsca (w pikselach) między elementem podrzędnym lewej krawędzi a lewą krawędzią jego węzła nadrzędnego. Wartość domyślna to 20."
  overload: System.Web.UI.WebControls.TreeView.NodeIndent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.Nodes
  id: Nodes
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: Nodes
  nameWithType: TreeView.Nodes
  fullName: System.Web.UI.WebControls.TreeView.Nodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera kolekcję <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektów, które reprezentuje węzły główne w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Użyj właściwości węzłów, aby uzyskać <xref:System.Web.UI.WebControls.TreeNodeCollection>obiekt, który zawiera wszystkie węzły główne w drzewie.</xref:System.Web.UI.WebControls.TreeNodeCollection> Ta kolekcja to powszechnie używane, szybko Iterowanie wszystkich węzłów głównych lub uzyskać dostępu do określonego głównego węzła drzewa.      > [!NOTE] > Typowe drzewa ma tylko jeden węzeł główny; można jednak dodać wiele węzłów głównych do <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView>       Właściwość węzłów można również programowe zarządzanie węzły główne w drzewie. Można dodać, wstawianie, Usuń i pobrać <xref:System.Web.UI.WebControls.TreeNode>obiektów z kolekcji.</xref:System.Web.UI.WebControls.TreeNode> Wszystkie aktualizacje w kolekcji są automatycznie odzwierciedlane w <xref:System.Web.UI.WebControls.TreeView>kontroli po następnej obiegu do serwera.</xref:System.Web.UI.WebControls.TreeView>       Aby uzyskać dostęp do węzłów podrzędnych węzła głównego, należy użyć <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>właściwość węzła.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Użyj <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>Właściwości każdego kolejnych poziomu nadrzędnego węzła przechodzenia z poziomu węzła.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>"
  example:
  - "The following code example demonstrates how to use the Nodes property to traverse the tree.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1353_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1353_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> zawiera węzły główne w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.Nodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.NodeStyle
  id: NodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: NodeStyle
  nameWithType: TreeView.NodeStyle
  fullName: System.Web.UI.WebControls.TreeView.NodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera odwołanie do <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> obiekt, który umożliwia ustawienie domyślnego wyglądu w węzłach <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Użyj właściwości NodeStyle Aby sterować wyglądem domyślnego węzła w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle>obiekt zwraca.</xref:System.Web.UI.WebControls.TreeNodeStyle> Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TreeNodeStyle>obiektu (na przykład `NodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `NodeStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy węzła. Właściwości stylu są stosowane w następującej kolejności: 1.  NodeStyle.      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>      > [!NOTE] > Z odpowiednimi ustawieniami styl węzła w <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>Właściwości zastępują ustawienia stylu właściwości NodeStyle.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>       Jeśli chcesz wygenerować tabeli menu nawigacyjne styl treści, gdzie węzły na pewnym etapie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzłów podrzędnych można rozważyć przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>zamiast ustawienie właściwości stylu poszczególnych właściwości.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>"
  example:
  - "The following code example demonstrates how to use the NodeStyle property to control the appearance of nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeViewNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_190_1.aspx)]\n [!code-cs[TreeViewNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_190_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "Odwołanie do <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> reprezentujący domyślny styl węzła."
  overload: System.Web.UI.WebControls.TreeView.NodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.NodeWrap
  id: NodeWrap
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: NodeWrap
  nameWithType: TreeView.NodeWrap
  fullName: System.Web.UI.WebControls.TreeView.NodeWrap
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy tekst będzie zawijany do węzła, gdy węzeł zabraknie miejsca."
  remarks: "Właściwość NodeWrap umożliwia określenie, czy tekst, który jest wyświetlany w każdym węźle zawijany, gdy zabraknie mu miejsca.       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the NodeWrap property to wrap the text of the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewNodeWrap#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_767_1.aspx)]\n [!code-vb[TreeViewNodeWrap#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_767_1.aspx)]"
  syntax:
    content: public bool NodeWrap { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zawijać tekst; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.NodeWrap*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.NoExpandImageUrl
  id: NoExpandImageUrl
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: NoExpandImageUrl
  nameWithType: TreeView.NoExpandImageUrl
  fullName: System.Web.UI.WebControls.TreeView.NoExpandImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia adres URL niestandardowego obrazu wskaźnika węzła nie można rozwijać."
  remarks: "Właściwość NoExpandImageUrl umożliwia określenie niestandardowego obrazu wskaźnika węzła nie można rozwijać. Obraz wskaźnika-rozwijanego węzła (lub rozdzielacza) jest wyświetlany obok węzłów liści (zamiast wskaźniki rozwijanej i zwijanej węzła), aby były wyrównane węzłów liści z węzłami nadrzędny lub główny.       Gdy <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>właściwość jest ustawiona na `true`, <xref:System.Web.UI.WebControls.TreeView>kontrolka ma wyświetlać obrazu symbolu zastępczego obok węzła, aby wskazać, czy węzeł jest rozwijane, zwijanej lub z systemem innym niż rozbudowy, odpowiednio lub znak plus (+) lub znak minus (-).</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> Można określić niestandardowych obrazów przez pierwsze ustawienie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>właściwości `TreeViewImageSet.Custom`, a następnie ustawić NoExpandImageUrl, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>Właściwości z adresami URL, niestandardowych obrazów.</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Jeśli obrazy nie zostały określone, używane są domyślne obrazy. Aby ukryć wskaźniki węzeł rozszerzenia, należy ustawić <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>właściwości `false`.</xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>      > [!NOTE] > Aby upewnić się, że węzły są wyrównane poprawnie w programie <xref:System.Web.UI.WebControls.TreeView>kontrolować, korzystając z niestandardowymi obrazami, upewnij się, że wszystkie obrazy, które są określone przez NoExpandImageUrl, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>właściwości mają takie same wymiary.</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the NoExpandImageUrl property to specify a custom image for the non-expandable node indicator. For the code example to display and the image to appear in the control, you must provide your own image and the <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> property must be set to `TreeNodeImageSet.Custom`.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_258_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_258_1.aspx)]"
  syntax:
    content: public string NoExpandImageUrl { get; set; }
    return:
      type: System.String
      description: "Adres URL niestandardowego obrazu do wyświetlania węzłów nie można rozwijać. Wartość domyślna to ciąg pusty (&quot;&quot;), który wyświetla domyślny obraz puste."
  overload: System.Web.UI.WebControls.TreeView.NoExpandImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: TreeView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> zdarzeń."
  remarks: "Metoda OnInit jest wywoływana przez <xref:System.Web.UI.WebControls.TreeView>formantu, aby podnieść <xref:System.Web.UI.Control.Init>zdarzeń.</xref:System.Web.UI.Control.Init> </xref:System.Web.UI.WebControls.TreeView> Zazwyczaj są stosowane przez deweloperów kontroli, gdy rozszerzenie <xref:System.Web.UI.WebControls.TreeView>klasy.</xref:System.Web.UI.WebControls.TreeView>       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: wywoływanie zdarzeń](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metody OnInit umożliwia także klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>Zawierający dane zdarzenia.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.TreeView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: TreeView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> zdarzeń."
  remarks: "Metoda OnPreRender zostanie przesłonięta zarejestrować ogłaszania zwrotnego. Skrypt po stronie klienta jest włączone, powoduje także, niezbędne skrypt i ukryte pola.       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoda OnPreRender umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;Xref:System.EventArgs?displayProperty=fullName&gt; zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.TreeView.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)
  id: OnSelectedNodeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnSelectedNodeChanged(EventArgs)
  nameWithType: TreeView.OnSelectedNodeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.TreeView.SelectedNodeChanged&quot;> </xref> zdarzenie <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>Zdarzenie jest wywoływane po wybraniu węzła w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak aktualizowanie wyświetlana zawartość przy każdym wystąpieniu tego zdarzenia.       Opcjonalnie możesz ustawić <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>Właściwości węzła, aby określić, które zdarzenie jest wywoływane po wybraniu tego węzła.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>      > [!NOTE] > <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>Nie są odtwarzane dla węzła z jego <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ustawioną właściwość `TreeNodeSelectAction.None`.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoda OnSelectedNodeChanged umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  syntax:
    content: protected virtual void OnSelectedNodeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;Xref:System.EventArgs?displayProperty=fullName&gt; zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodeCheckChanged(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeCheckChanged(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged&quot;> </xref> zdarzenie <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>Zdarzenie jest zgłaszane, gdy pole wyboru <xref:System.Web.UI.WebControls.TreeView>kontroli zmian stanu między ogłoszenia na serwerze.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak aktualizacja bazy danych lub wyświetlana zawartość przy każdym wystąpieniu tego zdarzenia.       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoda OnTreeNodeCheckChanged umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  syntax:
    content: protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodeCollapsed(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeCollapsed(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodeCollapsed&quot;> </xref> zdarzenie <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>Zdarzenie jest zgłaszane, gdy węzeł jest zwinięty w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoda OnTreeNodeCollapsed umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  syntax:
    content: protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodeDataBound(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeDataBound(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodeDataBound&quot;> </xref> zdarzenie <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>Zdarzenie jest wywoływane, gdy element danych jest powiązana z węzła w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoda OnTreeNodeDataBound umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  syntax:
    content: protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodeExpanded(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeExpanded(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodeExpanded&quot;> </xref> zdarzenie <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>Zdarzenie jest zgłaszane, gdy węzeł jest rozwinięty w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.      > [!NOTE] > Jeśli <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ma ustawioną wartość właściwości dla węzła <xref:System.Web.UI.WebControls.TreeNodeSelectAction>lub <xref:System.Web.UI.WebControls.TreeNodeSelectAction>, <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>zdarzenie również jest wywoływane po kliknięciu w tym węźle <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoda OnTreeNodeExpanded umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  syntax:
    content: protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodePopulate(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodePopulate(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodePopulate&quot;> </xref> zdarzenie <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Czasami nie jest praktyczne statycznie wstępnie struktury drzewa ze względu na rozmiar danych lub niestandardowych zawartość, która jest zależna od danych wejściowych użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView>Sterowanie obsługuje populacji dynamiczne węzła.</xref:System.Web.UI.WebControls.TreeView> Gdy <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ma ustawioną wartość właściwości dla węzła `true`, pobiera wypełnione tego węzła, w czasie wykonywania, gdy węzeł jest rozwinięty.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>       Aby wypełnić węzła dynamicznie, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>Właściwości dla węzła do `true`.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Następnie określ metoda obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>zdarzenie, które wypełnia programowo węzła.</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Typowe metody obsługi zdarzeń pobiera dane ze źródła danych, dane są umieszczane w strukturze węzeł, a następnie dodanie struktury węzła do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>kolekcji węzła jest wypełnione.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Struktura węzła jest tworzony przez dodanie <xref:System.Web.UI.WebControls.TreeNode>obiekty do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>kolekcji węzła nadrzędnego.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Podczas <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ma ustawioną wartość właściwości dla węzła `true`, węzeł powinno zostać zapełnione dynamicznie.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Nie można zagnieżdżać deklaratywnie innego węzła. w przeciwnym razie wystąpi błąd na stronie.       Obsługiwane przeglądarki (Microsoft Internet Explorer 4.0 zgodnego przeglądarek i nowsze) mogą również korzystać populacji węzła po stronie klienta. Po włączeniu umożliwia to <xref:System.Web.UI.WebControls.TreeView>formantu do wypełnienia węzła na kliencie dynamicznie, gdy ten węzeł jest rozwinięty, co zapobiega konieczności post do serwera.</xref:System.Web.UI.WebControls.TreeView> Aby uzyskać więcej informacji dotyczących populacji węzła po stronie klienta zobacz <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Metoda OnTreeNodePopulate umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  syntax:
    content: protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ParentNodeStyle
  id: ParentNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ParentNodeStyle
  nameWithType: TreeView.ParentNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.ParentNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera odwołanie do <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> obiekt, który umożliwia określenie wyglądu węzłów nadrzędnych w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Użyj właściwości ParentNodeStyle Aby sterować wyglądem węzłów nadrzędnych w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle>obiekt zwraca.</xref:System.Web.UI.WebControls.TreeNodeStyle> Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TreeNodeStyle>obiektu (na przykład `ParentNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `ParentNodeStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy węzła. Właściwości stylu są stosowane w następującej kolejności: 1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, ParentNodeStyle, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       Jeśli chcesz wygenerować tabeli menu nawigacyjne styl treści, gdzie węzły na pewnym etapie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzłów podrzędnych można rozważyć przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>zamiast ustawienie właściwości stylu poszczególnych właściwości.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>"
  example:
  - "The following code example demonstrates how to use the ParentNodeStyle property to control the appearance of the parent nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewParentNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_454_1.aspx)]\n [!code-vb[TreeViewParentNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_454_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "Odwołanie do <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> reprezentujący styl węzłów nadrzędnych w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.ParentNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.PathSeparator
  id: PathSeparator
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: PathSeparator
  nameWithType: TreeView.PathSeparator
  fullName: System.Web.UI.WebControls.TreeView.PathSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia znak używany do ograniczania wartości węzła, które są określone przez <xref:System.Web.UI.WebControls.TreeNode.ValuePath*>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.ValuePath*>"
  remarks: "<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>Właściwość zawiera listę wartości węzła, które tworzą ścieżkę od węzła głównego do bieżącego węzła rozdzielonych ogranicznik.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Użyj właściwości PathSeparator, aby określić znak ogranicznika, który służy do rozdzielania wartości węzła. Ta wartość jest najczęściej używana podczas analizowania listy dla poszczególnych wartości.       W zależności od tekst, który jest wyświetlany w <xref:System.Web.UI.WebControls.TreeView>znak ogranicznika kontroli, może być konieczne zmiany, aby uniknąć konfliktów.</xref:System.Web.UI.WebControls.TreeView> Na przykład jeśli ustawisz znak ogranicznika przecinka wyświetlanego tekstu nie powinna zawierać żadnych przecinki; w przeciwnym razie <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>Właściwości nie można przeanalizować dokładnie.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the PathSeparator property to specify the delimiter character for the <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> property of a node. This value is then used to parse the <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> property for the individual values.  \n  \n [!code-cs[TreeViewPathSeparator2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_62_1.aspx)]\n [!code-vb[TreeViewPathSeparator2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_62_1.aspx)]"
  syntax:
    content: public char PathSeparator { get; set; }
    return:
      type: System.Char
      description: "Znak używany do ograniczania wartości węzła określone w <xref:System.Web.UI.WebControls.TreeNode.ValuePath*>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.ValuePath*> Wartość domyślna to znak ukośnika (/)."
  overload: System.Web.UI.WebControls.TreeView.PathSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.PerformDataBinding
  id: PerformDataBinding
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: PerformDataBinding()
  nameWithType: TreeView.PerformDataBinding()
  fullName: System.Web.UI.WebControls.TreeView.PerformDataBinding()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tworzy wszystkie węzły na podstawie źródła danych."
  remarks: "Metoda PerformDataBinding jest wywoływana przez metodę Pomocnika <xref:System.Web.UI.WebControls.TreeView>formantu można powiązać z określonego źródła danych do kontrolki.</xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: protected override void PerformDataBinding ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
  id: PopulateNodesFromClient
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: PopulateNodesFromClient
  nameWithType: TreeView.PopulateNodesFromClient
  fullName: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy węzeł danych jest wypełniana na żądanie od klienta."
  remarks: "Czasami nie jest praktyczne statycznie wstępnie struktury drzewa ze względu na rozmiar danych lub niestandardowych zawartość, która jest zależna od danych wejściowych użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView>Sterowanie obsługuje populacji dynamiczne węzła.</xref:System.Web.UI.WebControls.TreeView> Gdy <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ma ustawioną wartość właściwości dla węzła `true`, pobiera wypełnione tego węzła, w czasie wykonywania, gdy węzeł jest rozwinięty.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>       Oprócz wypełnianie węzłów na żądanie, prawdopodobnie zapełniać węzły bezpośrednio w przeglądarce klienta obsługiwanych. Jeśli ustawiono właściwość PopulateNodesFromClient `true`, usługa jest wywoływana z klienta do wypełnienia węzły drzewa, co eliminuje konieczność post do serwera. W przeciwnym razie <xref:System.Web.UI.WebControls.TreeView>kontroli dokonuje ogłoszenia serwera do wypełnienia węzłów.</xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>Również musi być ustawiona właściwość `true` w kolejności dla właściwości PopulateNodesFromClient należy ustawić `true`.</xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>       Aby wypełnić węzła na kliencie, najpierw ustaw właściwość PopulateNodesFromClient `true` , a następnie ustaw <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>Właściwości dla węzła do `true`.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Następnie określ metoda obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>zdarzenie, które wypełnia programowo węzła.</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> Typowe metody obsługi zdarzeń pobiera dane ze źródła danych, dane są umieszczane w strukturze węzeł, a następnie dodanie struktury węzła do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>kolekcji węzła jest wypełnione.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Utwórz strukturę węzła, dodając <xref:System.Web.UI.WebControls.TreeNode>obiekty do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>kolekcji węzła nadrzędnego.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Podczas <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ma ustawioną wartość właściwości dla węzła `true`, węzeł powinno zostać zapełnione dynamicznie.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Nie można zagnieżdżać deklaratywnie innego węzła. w przeciwnym razie wystąpi błąd na stronie.      > [!NOTE] > Funkcja wypełniania węzła po stronie klienta jest obsługiwana w przeglądarkach, które obsługują skrypty wywołania zwrotnego. Aby sprawdzić, czy przeglądarka obsługuje dostęp skrypty wywołania zwrotnego, użyj <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>właściwości <xref:System.Web.HttpBrowserCapabilities>klasy.</xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> Można uzyskać dostępu do wystąpienia <xref:System.Web.HttpBrowserCapabilities>klasy dla bieżącego żądania za pośrednictwem <xref:System.Web.HttpRequest.Browser%2A>właściwości <xref:System.Web.HttpRequest>klasy.</xref:System.Web.HttpRequest> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpBrowserCapabilities>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the PopulateNodesFromClient property to enable client-side population of the nodes in the <xref:System.Web.UI.WebControls.TreeView> control. Notice that when client-side node population is enabled, nodes are populated dynamically on the client, without the need to post back to the server.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_522_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_522_1.aspx)]"
  syntax:
    content: public bool PopulateNodesFromClient { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wypełnić dane węzła drzewa na żądanie od klienta; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: TreeView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza zdarzenie wywołania zwrotnego przy użyciu określonych argumentów."
  remarks: "Metoda RaiseCallbackEvent to metoda pomocnika <xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A>metody.</xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A>"
  syntax:
    content: protected virtual void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Ciąg reprezentujący argument opcjonalne zdarzenia do przekazania do programu obsługi zdarzeń."
  overload: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: TreeView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Umożliwia <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu, aby przetworzyć zdarzenie jest wywoływane, gdy formularz jest przesyłana do serwera. Metoda RaisePostBackEvent to metoda pomocnika &lt;xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A&gt; metody."
  remarks: "Strona przekazuje wartość `eventArgument` parametr metody RaisePostBackEvent formantu, który implementuje <xref:System.Web.UI.IPostBackEventHandler?displayProperty=fullName>interfejsu.</xref:System.Web.UI.IPostBackEventHandler?displayProperty=fullName> To <xref:System.Web.UI.WebControls.TreeView>kontroli również renderuje element HTML, który powoduje, że zdarzenia odświeżania strony.</xref:System.Web.UI.WebControls.TreeView> Jeśli formant powoduje skryptu po stronie klienta można opublikować na serwerze, jest przekazany argument skryptu `eventArgument` parametru. Jeśli zdarzenie ogłaszania zwrotnego strony jest spowodowany przez prosty przesłać na serwer, `eventArgument` parametr jest `null`.       Metoda RaisePostBackEvent udostępnia funkcję dla wielu zdarzeń, które są implementowane przez formanty serwera sieci Web i HTML."
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Ciąg reprezentujący argument opcjonalne zdarzenia do przekazania do programu obsługi zdarzeń."
  overload: System.Web.UI.WebControls.TreeView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent
  id: RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RaisePostDataChangedEvent()
  nameWithType: TreeView.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Sygnały <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu, aby powiadomić aplikację ASP.NET, który zmienił się stan formantu."
  remarks: "Zdarzenia dla zmian <xref:System.Web.UI.WebControls.TreeView>formantu są wywoływane przez metodę RaisePostDataChangedEvent.</xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: protected virtual void RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  id: RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: TreeView.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderBeginTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renderuje HTML tagu formantu w określonym składniku zapisywania początkowego."
  remarks: "Metoda RenderBeginTag jest używana głównie przez deweloperów formantu."
  syntax:
    content: public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Reprezentujący strumienia wyjściowego do renderowania elementów HTML zawartości na kliencie."
  overload: System.Web.UI.WebControls.TreeView.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: TreeView.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renderuje węzłów <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Użyj metody RenderContents do renderowania w węzłach <xref:System.Web.UI.WebControls.TreeView>formantu do klienta.</xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Reprezentujący strumienia wyjściowego używana podczas zapisu zawartości strony sieci Web."
  overload: System.Web.UI.WebControls.TreeView.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)
  id: RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RenderEndTag(HtmlTextWriter)
  nameWithType: TreeView.RenderEndTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderEndTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renderuje HTML tag kontroli w określonym składniku zapisywania zamykający."
  remarks: "Metoda RenderEndTag jest używana głównie przez deweloperów formantu."
  syntax:
    content: public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Reprezentujący strumienia wyjściowego do renderowania elementów HTML zawartości na kliencie."
  overload: System.Web.UI.WebControls.TreeView.RenderEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RootNodeStyle
  id: RootNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RootNodeStyle
  nameWithType: TreeView.RootNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.RootNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera odwołanie do <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> obiekt, który umożliwia określenie wyglądu węzła głównego w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Aby sterować wyglądem węzeł główny, użyj właściwości RootNodeStyle <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle>obiekt zwraca.</xref:System.Web.UI.WebControls.TreeNodeStyle> Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TreeNodeStyle>obiektu (na przykład `RootNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `RootNodeStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy węzła. Właściwości stylu są stosowane w następującej kolejności: 1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  RootNodeStyle, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>4.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       Jeśli chcesz wygenerować tabeli menu nawigacyjne styl treści, gdzie węzły na pewnym etapie powinny mieć taki sam wygląd, niezależnie od tego, czy mają węzłów podrzędnych można rozważyć przy użyciu <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>zamiast ustawienie właściwości stylu poszczególnych właściwości.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>"
  example:
  - "The following code example demonstrates how to use the RootNodeStyle property to control the appearance of the root node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeViewRootNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1116_1.aspx)]\n [!code-cs[TreeViewRootNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1116_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "Odwołanie do <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> reprezentujący styl węzła głównego w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.RootNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: TreeView.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zapisuje stan <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Bieżący stan widoku formantu serwera; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, jeśli stan jest niedostępny widok skojarzony z formantem."
  overload: System.Web.UI.WebControls.TreeView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SelectedNode
  id: SelectedNode
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SelectedNode
  nameWithType: TreeView.SelectedNode
  fullName: System.Web.UI.WebControls.TreeView.SelectedNode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiekt, który reprezentuje wybrany węzeł w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Tekst węzła w <xref:System.Web.UI.WebControls.TreeView>formant może być w jednym z dwóch trybów: trybu wyboru ani nawigacji.</xref:System.Web.UI.WebControls.TreeView> Domyślnie węzeł jest w trybie wyboru. Aby ustawić węzła trybu nawigacji, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>Właściwości dla węzła na wartość inną niż ciąg pusty (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> Aby przełączyć węzła do trybu wyboru, ustaw <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>Właściwości dla węzła do ciągu pustego (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>       Gdy węzeł jest w trybie wyboru, użytkownik może wybrać węzła, klikając na tekst w węźle. Użyj właściwości SelectedNode, aby ustalić, który węzeł wybrano w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > Węzła nie może być zaznaczone, gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka ma wyświetlać hiperłącza.</xref:System.Web.UI.WebControls.TreeView> Po wyświetleniu hiperłącza właściwość SelectedNode zawsze zwraca `null`.       Gdy użytkownik wybierze inny węzeł w <xref:System.Web.UI.WebControls.TreeView>sterowania, klikając go w nowym węźle <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>zdarzenie jest zgłaszane, domyślnie.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView> Zdarzenia można określić przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>Właściwości dla właściwości.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> W poniższej tabeli wymieniono dostępne opcje.      | Operacja wyboru | Opis elementu |   |----------------------|-----------------|   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Przełącza węzeł między rozwiniętym i zwiniętym.</xref:System.Web.UI.WebControls.TreeNodeSelectAction> Zgłasza <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>lub zdarzenia <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>, zależnie od potrzeb. |   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Zgłasza brak zdarzeń po wybraniu węzła. |   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Zgłasza zdarzenie <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>Po wybraniu węzła. |   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Zgłasza zarówno <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>i <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>zdarzeń po wybraniu węzła.</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Węzły tylko są rozwinięte, nigdy nie zwinięte. |      > [!NOTE] > <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>Nie są odtwarzane dla węzła z jego <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ustawioną właściwość `TreeNodeSelectAction.None`.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>"
  example:
  - "The following code example demonstrates how to use the SelectedNode property to determine the value of the selected node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewSelectedNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_601_1.aspx)]\n [!code-vb[TreeViewSelectedNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_601_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode SelectedNode { get; }
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> reprezentujący wybrany węzeł w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.SelectedNode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeChanged
  id: SelectedNodeChanged
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SelectedNodeChanged
  nameWithType: TreeView.SelectedNodeChanged
  fullName: System.Web.UI.WebControls.TreeView.SelectedNodeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Występuje, gdy węzeł wybrano w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Zdarzenie SelectedNodeChanged jest wywoływane po wybraniu węzła w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak aktualizowanie wyświetlana zawartość przy każdym wystąpieniu tego zdarzenia.       Opcjonalnie możesz ustawić <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>Właściwości dla węzła określić, które zdarzenie jest wywoływane po wybraniu tego węzła.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> W poniższej tabeli wymieniono dostępne opcje.      | Operacja wyboru | Opis elementu |   |----------------------|-----------------|   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Przełącza węzeł między rozwiniętym i zwiniętym.</xref:System.Web.UI.WebControls.TreeNodeSelectAction> Zgłasza <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>lub zdarzenia <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>, zależnie od potrzeb. |   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Zgłasza brak zdarzeń po wybraniu węzła. |   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Zgłasza zdarzenie SelectedNodeChanged po wybraniu węzła. |   | <xref:System.Web.UI.WebControls.TreeNodeSelectAction>| Zgłasza zarówno SelectedNodeChanged i <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>zdarzeń po wybraniu węzła.</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeNodeSelectAction> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Węzły tylko są rozwinięte, nigdy nie zwinięte. |      > [!NOTE] > <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>Nie są odtwarzane dla węzła z jego <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ustawioną właściwość `TreeNodeSelectAction.None`.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       Zdarzenie SelectedNodeChanged jest uruchamiane tylko na post, po kliknięciu węzła. Zdarzenie nie jest uruchamiany, jeśli <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>programowo zmienić właściwości.</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the SelectedNodeChanged event to update a <xref:System.Web.UI.WebControls.Label> control when a node is selected in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewSelectedNodeStyle#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_102_1.aspx)]\n [!code-vb[TreeViewSelectedNodeStyle#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_102_1.aspx)]"
  syntax:
    content: public event EventHandler SelectedNodeChanged;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeStyle
  id: SelectedNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SelectedNodeStyle
  nameWithType: TreeView.SelectedNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.SelectedNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> obiekt, który określa wygląd wybrany węzeł w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Użyj właściwości SelectedNodeStyle Aby sterować wyglądem wybrany węzeł w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Ta właściwość jest tylko do odczytu. jednak można ustawić właściwości <xref:System.Web.UI.WebControls.TreeNodeStyle>obiekt zwraca.</xref:System.Web.UI.WebControls.TreeNodeStyle> Właściwości można ustawić deklaratywnie w formularzu `Property-Subproperty`, gdzie `Subproperty` jest właściwością <xref:System.Web.UI.WebControls.TreeNodeStyle>obiektu (na przykład `SelectedNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> Właściwości można również ustawić programowo w formie `Property.Subproperty` (na przykład `SelectedNodeStyle.ForeColor`). Typowe ustawienia obejmują zazwyczaj niestandardowy kolor tła, kolor pierwszego planu, właściwości czcionki i odstępy węzła. Właściwości stylu są stosowane w następującej kolejności: 1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, lub <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, w zależności od typu węzła.</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> Jeśli <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>Kolekcja została zdefiniowana, jest stosowana w tej chwili zastępowanie innych właściwości stylu węzła.</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>      3.  SelectedNodeStyle.      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>"
  example:
  - "The following code example demonstrates how to use the SelectedNodeStyle property to control the appearance of the selected node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewSelectedNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_204_1.aspx)]\n [!code-vb[TreeViewSelectedNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_204_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref> reprezentujący styl wybrany węzeł w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, co oznacza, że nie ustawiono właściwości SelectedNodeStyle."
  overload: System.Web.UI.WebControls.TreeView.SelectedNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: TreeView.SelectedValue
  fullName: System.Web.UI.WebControls.TreeView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera wartość wybranego węzła."
  remarks: "Właściwości SelectedValue oferuje wygodny sposób określenia wartości wybranego węzła. Ta właściwość zwraca po prostu wartość <xref:System.Web.UI.WebControls.TreeNode.Value%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiekt, który odwołuje się <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> Jeśli żaden węzeł nie jest aktualnie wybrane w <xref:System.Web.UI.WebControls.TreeView>kontrolować ciąg pusty (&quot;&quot;) jest zwracana.</xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: public string SelectedValue { get; }
    return:
      type: System.String
      description: "Wartość wybranego węzła."
  overload: System.Web.UI.WebControls.TreeView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)
  id: SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SetNodeDataBound(TreeNode,Boolean)
  nameWithType: TreeView.SetNodeDataBound(TreeNode,Boolean)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataBound(TreeNode,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Umożliwia klasy pochodnej ustawić Określa, czy określony <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> formant jest powiązany z danymi."
  remarks: "Użyj metody SetNodeDataBound, aby wskazać, czy określony <xref:System.Web.UI.WebControls.TreeNode>jest powiązany z danymi.</xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);
    parameters:
    - id: node
      type: System.Web.UI.WebControls.TreeNode
      description: "The <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref> to set."
    - id: dataBound
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby ustawić węzeł jako powiązane z danymi; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.SetNodeDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)
  id: SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SetNodeDataItem(TreeNode,Object)
  nameWithType: TreeView.SetNodeDataItem(TreeNode,Object)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataItem(TreeNode,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Umożliwia klasy pochodnej ustawić element danych dla określonego <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> formantu."
  remarks: "Określ element danych dla określonego przy użyciu metody SetNodeDataItem <xref:System.Web.UI.WebControls.TreeNode>kontroli.</xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);
    parameters:
    - id: node
      type: System.Web.UI.WebControls.TreeNode
      description: "The <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref> to set."
    - id: dataItem
      type: System.Object
      description: "Element danych do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.SetNodeDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)
  id: SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SetNodeDataPath(TreeNode,String)
  nameWithType: TreeView.SetNodeDataPath(TreeNode,String)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataPath(TreeNode,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Umożliwia klasy pochodnej ustawić ścieżkę danych dla określonego <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> formantu."
  remarks: "Ustawianie ścieżki danych dla określonego przy użyciu metody SetNodeDataPath <xref:System.Web.UI.WebControls.TreeNode>kontroli.</xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);
    parameters:
    - id: node
      type: System.Web.UI.WebControls.TreeNode
      description: "The <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref> to set."
    - id: dataPath
      type: System.String
      description: "Ścieżka danych dla <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.SetNodeDataPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ShowCheckBoxes
  id: ShowCheckBoxes
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ShowCheckBoxes
  nameWithType: TreeView.ShowCheckBoxes
  fullName: System.Web.UI.WebControls.TreeView.ShowCheckBoxes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, jakie typy węzła będą wyświetlane pola wyboru w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Aby zapewnić obsługę wielowęzłowego zaznaczenia w <xref:System.Web.UI.WebControls.TreeView>sterowania, można wyświetlić pola wyboru obok obrazu dla węzła.</xref:System.Web.UI.WebControls.TreeView> Właściwość ShowCheckBoxes umożliwia określenie, jakie typy węzła będą wyświetlane pola wyboru. Na przykład, jeśli ta właściwość jest ustawiona na `TreeNodeType.Parent`, są wyświetlane pola wyboru dla każdego węzła nadrzędnego w drzewie. W poniższej tabeli przedstawiono prawidłowe wartości dla tej właściwości.      | Typ węzła | Opis elementu |   |---------------|-----------------|   | `TreeNodeType.All`| Są wyświetlane pola wyboru dla wszystkich węzłów. |   | `TreeNodeType.Leaf`| Są wyświetlane pola wyboru dla wszystkich węzłów liści. |   | `TreeNodeType.None`| Nie są wyświetlane pola wyboru. |   | `TreeNodeType.Parent`| Są wyświetlane pola wyboru, aby wszystkie węzły nadrzędne. |   | `TreeNodeType.Root`| Dla głównego wszystkie węzły są wyświetlane pola wyboru. |       Typ wyliczeniowy służący do właściwości ShowCheckBoxes jest wyliczanie flag, dzięki czemu można połączyć wartości za pośrednictwem Operacje bitowe. Na przykład, aby wyświetlić pola wyboru dla węzłów nadrzędnych i typu liść, użyj bitowy operator OR połączyć `TreeNodeType.Parent` i `TreeNodeType.Leaf` wartości.       Aby określić węzły, które mają ich zaznaczenie zaznaczone, iterację w węzłach <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>kolekcji.</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>      > [!NOTE] > ShowCheckBoxes ustawiania przez ustawienia mogą zastąpić <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>Właściwości dla każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>       Jeśli potrzebujesz zapewnić obsługę tylko pojedynczego wyboru, należy rozważyć użycie <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the ShowCheckBoxes property to show and hide the check boxes for the different node types.  \n  \n [!code-vb[TreeViewShowCheckBoxes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_915_1.aspx)]\n [!code-cs[TreeViewShowCheckBoxes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_915_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeNodeTypes
      description: "Bitowe połączenie <xref href=&quot;System.Web.UI.WebControls.TreeNodeTypes&quot;> </xref> wartości. Wartość domyślna to <xref uid=&quot;langword_csharp_TreeNodeType.None&quot; name=&quot;TreeNodeType.None&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.ShowCheckBoxes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Bitowe połączenie wartości jest poza zakresem <xref href=&quot;System.Web.UI.WebControls.TreeNodeTypes&quot;> </xref> wyliczenia."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ShowExpandCollapse
  id: ShowExpandCollapse
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ShowExpandCollapse
  nameWithType: TreeView.ShowExpandCollapse
  fullName: System.Web.UI.WebControls.TreeView.ShowExpandCollapse
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy są wyświetlane wskaźniki węzeł rozszerzenia."
  remarks: "Wskaźniki węzeł Rozszerzenia są używane do wyświetlenia, czy węzeł jest rozwinięty, zwinięte lub nie można rozwijać. Aby określić, czy wskaźniki węzeł Rozszerzenia są wyświetlane w, użyj właściwości ShowExpandCollapse <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView>       Jeśli ustawiono właściwość ShowExpandCollapse `true`, <xref:System.Web.UI.WebControls.TreeView>kontrolka ma wyświetlać obrazu symbolu zastępczego obok węzła, aby wskazać, czy węzeł jest rozwijane, zwijanej lub z systemem innym niż rozbudowy, odpowiednio lub znak plus (+) lub znak minus (-).</xref:System.Web.UI.WebControls.TreeView> Można określić niestandardowych obrazów przez pierwsze ustawienie <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>właściwości `TreeViewImageSet.Custom`, a następnie ustawić <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, i <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>Właściwości z adresami URL, niestandardowych obrazów.</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> Jeśli obrazy nie zostały określone, używane są domyślne obrazy.       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the ShowExpandCollapse property to show and hide the expansion node icons.  \n  \n [!code-cs[TreeViewShowExpandCollapse#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_168_1.aspx)]\n [!code-vb[TreeViewShowExpandCollapse#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_168_1.aspx)]"
  syntax:
    content: public bool ShowExpandCollapse { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wyświetlić rozszerzenie węzła wskaźników; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.ShowExpandCollapse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ShowLines
  id: ShowLines
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ShowLines
  nameWithType: TreeView.ShowLines
  fullName: System.Web.UI.WebControls.TreeView.ShowLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy są wyświetlane linie łączące węzły podrzędne do węzłów nadrzędnych."
  remarks: "Właściwość ShowLines umożliwia określenie, czy są wyświetlane linie, łączących węzły podrzędne do węzłów nadrzędnych. Jeśli ta właściwość jest skonfigurowana `true`, <xref:System.Web.UI.WebControls.TreeView>kontroli wyszukuje dostępnej w sieci Web folderu, który jest określony przez <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>Właściwość obrazy liniowe.</xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> </xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > Jeśli <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>nie ustawiono właściwości <xref:System.Web.UI.WebControls.TreeView>kontrolka będzie używać wbudowanych, domyślnych obrazów (20 x 20 pikseli).</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the ShowLines property to display lines connecting nodes in the <xref:System.Web.UI.WebControls.TreeView> control. Be sure to use the Line Designer tool to create a set of line images and place them in a folder named LineImages within the directory for the sample application.  \n  \n [!code-cs[TreeViewLineImagesFolderUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_251_1.aspx)]\n [!code-vb[TreeViewLineImagesFolderUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_251_1.aspx)]"
  syntax:
    content: public bool ShowLines { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wyświetlić linie łączące węzły; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.ShowLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SkipLinkText
  id: SkipLinkText
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SkipLinkText
  nameWithType: TreeView.SkipLinkText
  fullName: System.Web.UI.WebControls.TreeView.SkipLinkText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość, która jest używany do renderowania tekst zastępczy dla czytników ekranu pominąć zawartości formantu."
  remarks: "Właściwość SkipLinkText jest właściwością można ustawić na bardziej lub mniej udostępnić strony sieci Web. Strony sieci Web, które mają zawartość, która jest powtarzany zapewniają mechanizm dla użytkowników czytników ekranu, aby pominąć głos odczytanie zawartości.       <xref:System.Web.UI.WebControls.TreeView>Formant zawiera właściwość SkipLinkText sposób całego formantu można pominąć czytników ekranu.</xref:System.Web.UI.WebControls.TreeView> Jeśli ustawiono właściwość SkipLinkText, jest renderowany niewidocznego obrazu z tekst alternatywny, podając opcję, aby przejść do końca kontrolki użytkownika. Czytniki odczytywać tekst alternatywny, gdy obraz zajmuje tylko jeden piksel miejsca. Dla pikseli ścisła kontrola nad renderowania strony, ustaw właściwość SkipLinkText ciąg pusty (&quot;&quot;) i Podaj własny mechanizm pominąć drzewa.       Właściwość SkipLinkText ustawiono do ciągu pustego domyślnie, dzięki czemu nie pominąć formant czytników ekranu.       Wartość tej właściwości jest przechowywany w stanie widoku.       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  syntax:
    content: public string SkipLinkText { get; set; }
    return:
      type: System.String
      description: "Ciąg znaków który <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> renderuje jako tekst zastępczy z niewidocznego obrazu jako wskazówkę dla czytników ekranu. Wartość domyślna to &quot;Pomiń łącza nawigacji&quot;."
  overload: System.Web.UI.WebControls.TreeView.SkipLinkText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  id: System#Web#UI#ICallbackEventHandler#GetCallbackResult
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zwraca wynik zdarzeń wywołania zwrotnego, przeznaczonego dla formantu."
  remarks: "<xref:System.Web.UI.WebControls.TreeView>Kontrolować implementuje <xref:System.Web.UI.ICallbackEventHandler>interfejsu i używa <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>do pobierania danych i <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A>metody, aby zwrócić dane pobrane z formantem.</xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> </xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> </xref:System.Web.UI.ICallbackEventHandler> </xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: string ICallbackEventHandler.GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "Wyniki wywołania zwrotnego."
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  id: System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zgłasza zdarzenie wywołania zwrotnego przy użyciu określonych argumentów."
  remarks: "Deweloperzy kontroli powinny zastępować <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>metody.</xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>"
  syntax:
    content: void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Ciąg reprezentujący argument opcjonalne zdarzenia do przekazania do programu obsługi zdarzeń."
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Procesy ogłaszanie dane <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Deweloperzy kontroli powinny zastępować <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>metody.</xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>"
  syntax:
    content: bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "Identyfikator klucza dla formantu."
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "Kolekcja wszystkich przychodzących wartości nazwy."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> zmian stanu formantu w wyniku zdarzenia odświeżania strony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  id: System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Sygnały <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu, aby powiadomić aplikację ASP.NET, który zmienił się stan formantu."
  remarks: "Deweloperzy kontroli powinny zastępować <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>metody.</xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>"
  syntax:
    content: void IPostBackDataHandler.RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Umożliwia <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu, aby przetworzyć zdarzenie jest wywoływane, gdy formularz jest przesyłana do serwera."
  remarks: "Deweloperzy kontroli powinny zastępować <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>metody.</xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Ciąg reprezentujący argument opcjonalne zdarzenia do przekazania do programu obsługi zdarzeń."
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TagKey
  nameWithType: TreeView.TagKey
  fullName: System.Web.UI.WebControls.TreeView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> wartość <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Właściwość TagKey umożliwia strumienia wyjściowego do zapisu w odpowiedniej HTML narzut na <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView>"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "Zawsze zwraca <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> wartości."
  overload: System.Web.UI.WebControls.TreeView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.Target
  id: Target
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: Target
  nameWithType: TreeView.Target
  fullName: System.Web.UI.WebControls.TreeView.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia docelowego okna lub ramki, w którym można wyświetlić zawartości strony sieci Web, który jest skojarzony z węzłem."
  remarks: "Właściwość Target umożliwia określenie okna lub ramki, w której do wyświetlania zawartości sieci Web, która jest połączona z węzłem, po kliknięciu tego węzła.      > [!NOTE] > Właściwość Target renderuje jako `target` atrybutu. `target` Atrybutu `anchor` elementów nie jest dozwolona w definicji typu dokumentu XHTML 1.1. Nie ustawiaj właściwości docelowych, jeśli przetworzonych wyników dla <xref:System.Web.UI.WebControls.TreeView>XHTML 1.1 muszą być zgodne.</xref:System.Web.UI.WebControls.TreeView> Aby uzyskać więcej informacji, zobacz [standardów XHTML w Visual Studio i ASP.NET](~/add/includes/ajax-current-ext-md.md).   >> Podczas tworzenia stron sieci Web z ułatwieniami dostępu, należy unikać używania właściwość Target pod kątem inne okno. Aby uzyskać więcej informacji, zobacz [kontrolki ASP.NET i dostępności](~/add/includes/ajax-current-ext-md.md).       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the Target property to display the Web content that is linked to a node in a new window when that node is clicked.  \n  \n [!code-vb[TreeViewTarget#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1247_1.aspx)]\n [!code-cs[TreeViewTarget#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1247_1.aspx)]"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "Docelowego okna lub ramki, w której można wyświetlić zawartości połączonej strony sieci Web. Wartości musi rozpoczynać się od litery z zakresu od A do Z (bez uwzględniania wielkości liter), z wyjątkiem niektórych wartości specjalne, które zaczynają się od podkreślenia, jak pokazano w poniższej tabeli.       <table><thead><tr><th> Wartość docelowa       </th><th> Renderuje zawartość       </th></tr></thead><tbody><tr><td><xref uid=&quot;langword_csharp__blank&quot; name=&quot;_blank&quot; href=&quot;&quot;></xref></td><td> Nowe okno bez ramek.       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent&quot; name=&quot;_parent&quot; href=&quot;&quot;></xref></td><td> Element nadrzędny natychmiastowego ramek.       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> W okienku wyszukiwania.       </td></tr><tr><td><xref uid=&quot;langword_csharp__self&quot; name=&quot;_self&quot; href=&quot;&quot;></xref></td><td> Ramka z fokusem.       </td></tr><tr><td><xref uid=&quot;langword_csharp__top&quot; name=&quot;_top&quot; href=&quot;&quot;></xref></td><td> Pełne okno bez ramek.       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    Sprawdź w dokumentacji przeglądarki, aby ustalić, czy <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref> wartość jest obsługiwana.  Na przykład program Microsoft Internet Explorer w wersji 5.0 i nowsze wersje obsługują <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref> wartość docelowa.      </div>       Wartość domyślna to ciąg pusty (&quot;&quot;), który odświeża okna lub ramki z fokusem."
  overload: System.Web.UI.WebControls.TreeView.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: TreeView.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Śledzi zmiany stanu widoku <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> , aby mogą być przechowywane w <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> obiekt dla formantu. To <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> jest dostępna za pośrednictwem &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt; właściwości."
  remarks: "Metoda TrackViewState jest zastąpiona w celu zaznacz punkt początkowy, aby rozpocząć śledzenie i zapisywanie zmian do formantu jako część stan widoku formantu."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
  id: TreeNodeCheckChanged
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodeCheckChanged
  nameWithType: TreeView.TreeNodeCheckChanged
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Występuje, gdy pole wyboru w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> kontroli zmian stanu między ogłoszenia na serwerze."
  remarks: "TreeNodeCheckChanged zdarzenie jest zgłaszane, gdy pole wyboru <xref:System.Web.UI.WebControls.TreeView>kontroli zmian stanu między ogłoszenia na serwerze.</xref:System.Web.UI.WebControls.TreeView> Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje procedury niestandardowych, takich jak aktualizacja bazy danych lub wyświetlana zawartość przy każdym wystąpieniu tego zdarzenia.       Mimo że zdarzenie TreeNodeCheckChanged jest uruchamiane na ogłaszanie zwrotne, zmiana pola wyboru nie powoduje ogłaszanie zwrotne.       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the TreeNodeCheckChanged event to update a <xref:System.Web.UI.WebControls.Label> control when the check boxes of the <xref:System.Web.UI.WebControls.TreeView> control change state between posts to the server.  \n  \n [!code-vb[TreeViewCheckChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_134_1.aspx)]\n [!code-cs[TreeViewCheckChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_134_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
  id: TreeNodeCollapsed
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodeCollapsed
  nameWithType: TreeView.TreeNodeCollapsed
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Występuje, gdy węzeł jest zwinięty w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "TreeNodeCollapsed zdarzenie jest zgłaszane, gdy węzeł jest zwinięty w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the TreeNodeCollapsed event to update the content of a <xref:System.Web.UI.WebControls.Label> control when the user collapses a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewTreeNodeExpand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_89_1.aspx)]\n [!code-vb[TreeViewTreeNodeExpand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_89_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodeDataBound
  id: TreeNodeDataBound
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodeDataBound
  nameWithType: TreeView.TreeNodeDataBound
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Występuje, gdy element danych jest powiązany z węzła w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Zdarzenie TreeNodeDataBound jest wywoływane, gdy element danych jest powiązana z węzła w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the TreeNodeDataBound event to change the image for a node when some condition is met. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the TreeNodeDataBound event to change the image for a node when some condition is met. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml. Also be sure to provide your own images for this example to display.  \n  \n [!code-cs[TreeViewTreeNodeDataBound#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_83_1.aspx)]\n [!code-vb[TreeViewTreeNodeDataBound#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_83_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodeExpanded
  id: TreeNodeExpanded
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodeExpanded
  nameWithType: TreeView.TreeNodeExpanded
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeExpanded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Występuje, gdy węzeł jest rozwinięty w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "TreeNodeExpanded zdarzenie jest zgłaszane, gdy węzeł jest rozwinięty w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Dzięki temu można posługiwać się metody obsługi zdarzeń, która wykonuje niestandardowe procedury przy każdym wystąpieniu tego zdarzenia.      > [!NOTE] > Jeśli <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ma ustawioną wartość właściwości dla węzła `TreeNodeSelectAction.Expand` lub `TreeNodeSelectAction.SelectExpand`, zdarzenie TreeNodeExpanded również jest uruchamiany po kliknięciu tego węzła w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the TreeNodeExpanded event to update the content of a <xref:System.Web.UI.WebControls.Label> control when the user expands a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewTreeNodeExpand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_90_1.aspx)]\n [!code-vb[TreeViewTreeNodeExpand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_90_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodePopulate
  id: TreeNodePopulate
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodePopulate
  nameWithType: TreeView.TreeNodePopulate
  fullName: System.Web.UI.WebControls.TreeView.TreeNodePopulate
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Występuje, gdy węzeł z jego <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand*>ustawioną właściwość <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> jest rozwinięta w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> kontroli.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand*>"
  remarks: "Czasami nie jest praktyczne statycznie wstępnie struktury drzewa ze względu na rozmiar danych lub niestandardowych zawartość, która jest zależna od danych wejściowych użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView>Sterowanie obsługuje populacji dynamiczne węzła.</xref:System.Web.UI.WebControls.TreeView> Gdy <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ma ustawioną wartość właściwości dla węzła `true`, pobiera wypełnione tego węzła, w czasie wykonywania, gdy węzeł jest rozwinięty.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>       Aby wypełnić węzła dynamicznie, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>Właściwości dla węzła do `true`.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Następnie określ — metoda obsługi zdarzeń dla zdarzenia TreeNodePopulate wypełniająca węzeł programowo. Typowe metody obsługi zdarzeń pobiera dane ze źródła danych, dane są umieszczane w strukturze węzeł, a następnie dodanie struktury węzła do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>kolekcji węzła jest wypełnione.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Struktura węzła jest tworzony przez dodanie <xref:System.Web.UI.WebControls.TreeNode>obiekty do <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>kolekcji węzła nadrzędnego.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Podczas <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ma ustawioną wartość właściwości dla węzła `true`, węzeł powinno zostać zapełnione dynamicznie.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Nie można zagnieżdżać deklaratywnie innego węzła. w przeciwnym razie wystąpi błąd na stronie.       Obsługiwane przeglądarki (Microsoft Internet Explorer 4.0 zgodnego przeglądarek i nowsze) mogą również korzystać populacji węzła po stronie klienta. Po włączeniu umożliwia to <xref:System.Web.UI.WebControls.TreeView>formantu do wypełnienia węzła dynamicznie na kliencie, gdy ten węzeł jest rozwinięty, co zapobiega konieczności post do serwera.</xref:System.Web.UI.WebControls.TreeView> Aby uzyskać więcej informacji dotyczących populacji węzła po stronie klienta zobacz <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use the TreeNodePopulate event to populate the nodes in the <xref:System.Web.UI.WebControls.TreeView> control dynamically on the server. Notice that the <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> property is set to `false` to prevent expanding-node events from being handled on the client.  \n  \n [!code-cs[TreeViewTreeNodePopulate#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_5_1.aspx)]\n [!code-vb[TreeViewTreeNodePopulate#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_5_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.Visible
  id: Visible
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: Visible
  nameWithType: TreeView.Visible
  fullName: System.Web.UI.WebControls.TreeView.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy formant jest renderowane jako interfejsu użytkownika na stronie."
  remarks: "Jeśli ustawiono właściwość Visible `false`, nie renderowania formantu."
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli formant jest widoczny na stronie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeView.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.HierarchicalDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.HierarchicalDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.TreeView.#ctor
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeView()
  nameWithType: TreeView.TreeView()
  fullName: System.Web.UI.WebControls.TreeView.TreeView()
- uid: System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: TreeView.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: AutoGenerateDataBindings
  nameWithType: TreeView.AutoGenerateDataBindings
  fullName: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeView.CheckedNodes
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CheckedNodes
  nameWithType: TreeView.CheckedNodes
  fullName: System.Web.UI.WebControls.TreeView.CheckedNodes
- uid: System.Web.UI.WebControls.TreeNodeCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeView.CollapseAll
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseAll()
  nameWithType: TreeView.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeView.CollapseAll()
- uid: System.Web.UI.WebControls.TreeView.CollapseImageToolTip
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseImageToolTip
  nameWithType: TreeView.CollapseImageToolTip
  fullName: System.Web.UI.WebControls.TreeView.CollapseImageToolTip
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TreeView.CollapseImageUrl
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseImageUrl
  nameWithType: TreeView.CollapseImageUrl
  fullName: System.Web.UI.WebControls.TreeView.CollapseImageUrl
- uid: System.Web.UI.WebControls.TreeView.CreateControlCollection
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CreateControlCollection()
  nameWithType: TreeView.CreateControlCollection()
  fullName: System.Web.UI.WebControls.TreeView.CreateControlCollection()
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.TreeView.CreateNode
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CreateNode()
  nameWithType: TreeView.CreateNode()
  fullName: System.Web.UI.WebControls.TreeView.CreateNode()
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeView.DataBind
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: DataBind()
  nameWithType: TreeView.DataBind()
  fullName: System.Web.UI.WebControls.TreeView.DataBind()
- uid: System.Web.UI.WebControls.TreeView.DataBindings
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: DataBindings
  nameWithType: TreeView.DataBindings
  fullName: System.Web.UI.WebControls.TreeView.DataBindings
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeBindingCollection
  nameWithType: TreeNodeBindingCollection
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection
- uid: System.Web.UI.WebControls.TreeView.EnableClientScript
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: EnableClientScript
  nameWithType: TreeView.EnableClientScript
  fullName: System.Web.UI.WebControls.TreeView.EnableClientScript
- uid: System.Web.UI.WebControls.TreeView.ExpandAll
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandAll()
  nameWithType: TreeView.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeView.ExpandAll()
- uid: System.Web.UI.WebControls.TreeView.ExpandDepth
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandDepth
  nameWithType: TreeView.ExpandDepth
  fullName: System.Web.UI.WebControls.TreeView.ExpandDepth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeView.ExpandImageToolTip
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandImageToolTip
  nameWithType: TreeView.ExpandImageToolTip
  fullName: System.Web.UI.WebControls.TreeView.ExpandImageToolTip
- uid: System.Web.UI.WebControls.TreeView.ExpandImageUrl
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandImageUrl
  nameWithType: TreeView.ExpandImageUrl
  fullName: System.Web.UI.WebControls.TreeView.ExpandImageUrl
- uid: System.Web.UI.WebControls.TreeView.FindNode(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: FindNode(String)
  nameWithType: TreeView.FindNode(String)
  fullName: System.Web.UI.WebControls.TreeView.FindNode(String)
- uid: System.Web.UI.WebControls.TreeView.GetCallbackResult
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: GetCallbackResult()
  nameWithType: TreeView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.TreeView.GetCallbackResult()
- uid: System.Web.UI.WebControls.TreeView.HoverNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: HoverNodeStyle
  nameWithType: TreeView.HoverNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.HoverNodeStyle
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.TreeView.ImageSet
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ImageSet
  nameWithType: TreeView.ImageSet
  fullName: System.Web.UI.WebControls.TreeView.ImageSet
- uid: System.Web.UI.WebControls.TreeViewImageSet
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeViewImageSet
  nameWithType: TreeViewImageSet
  fullName: System.Web.UI.WebControls.TreeViewImageSet
- uid: System.Web.UI.WebControls.TreeView.LeafNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LeafNodeStyle
  nameWithType: TreeView.LeafNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.LeafNodeStyle
- uid: System.Web.UI.WebControls.TreeNodeStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeStyle
  nameWithType: TreeNodeStyle
  fullName: System.Web.UI.WebControls.TreeNodeStyle
- uid: System.Web.UI.WebControls.TreeView.LevelStyles
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LevelStyles
  nameWithType: TreeView.LevelStyles
  fullName: System.Web.UI.WebControls.TreeView.LevelStyles
- uid: System.Web.UI.WebControls.TreeNodeStyleCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeStyleCollection
  nameWithType: TreeNodeStyleCollection
  fullName: System.Web.UI.WebControls.TreeNodeStyleCollection
- uid: System.Web.UI.WebControls.TreeView.LineImagesFolder
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LineImagesFolder
  nameWithType: TreeView.LineImagesFolder
  fullName: System.Web.UI.WebControls.TreeView.LineImagesFolder
- uid: System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LoadPostData(String,NameValueCollection)
  nameWithType: TreeView.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.TreeView.LoadPostData(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: TreeView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.TreeView.MaxDataBindDepth
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: MaxDataBindDepth
  nameWithType: TreeView.MaxDataBindDepth
  fullName: System.Web.UI.WebControls.TreeView.MaxDataBindDepth
- uid: System.Web.UI.WebControls.TreeView.NodeIndent
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeIndent
  nameWithType: TreeView.NodeIndent
  fullName: System.Web.UI.WebControls.TreeView.NodeIndent
- uid: System.Web.UI.WebControls.TreeView.Nodes
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Nodes
  nameWithType: TreeView.Nodes
  fullName: System.Web.UI.WebControls.TreeView.Nodes
- uid: System.Web.UI.WebControls.TreeView.NodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeStyle
  nameWithType: TreeView.NodeStyle
  fullName: System.Web.UI.WebControls.TreeView.NodeStyle
- uid: System.Web.UI.WebControls.TreeView.NodeWrap
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeWrap
  nameWithType: TreeView.NodeWrap
  fullName: System.Web.UI.WebControls.TreeView.NodeWrap
- uid: System.Web.UI.WebControls.TreeView.NoExpandImageUrl
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NoExpandImageUrl
  nameWithType: TreeView.NoExpandImageUrl
  fullName: System.Web.UI.WebControls.TreeView.NoExpandImageUrl
- uid: System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: TreeView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: TreeView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnSelectedNodeChanged(EventArgs)
  nameWithType: TreeView.OnSelectedNodeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(EventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeCheckChanged(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeCheckChanged(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeNodeEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeEventArgs
  nameWithType: TreeNodeEventArgs
  fullName: System.Web.UI.WebControls.TreeNodeEventArgs
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeCollapsed(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeCollapsed(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeDataBound(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeDataBound(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeExpanded(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeExpanded(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodePopulate(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodePopulate(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeView.ParentNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ParentNodeStyle
  nameWithType: TreeView.ParentNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.ParentNodeStyle
- uid: System.Web.UI.WebControls.TreeView.PathSeparator
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PathSeparator
  nameWithType: TreeView.PathSeparator
  fullName: System.Web.UI.WebControls.TreeView.PathSeparator
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.WebControls.TreeView.PerformDataBinding
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PerformDataBinding()
  nameWithType: TreeView.PerformDataBinding()
  fullName: System.Web.UI.WebControls.TreeView.PerformDataBinding()
- uid: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PopulateNodesFromClient
  nameWithType: TreeView.PopulateNodesFromClient
  fullName: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
- uid: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: TreeView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: TreeView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaisePostDataChangedEvent()
  nameWithType: TreeView.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent()
- uid: System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: TreeView.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderBeginTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: TreeView.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderEndTag(HtmlTextWriter)
  nameWithType: TreeView.RenderEndTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderEndTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeView.RootNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RootNodeStyle
  nameWithType: TreeView.RootNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.RootNodeStyle
- uid: System.Web.UI.WebControls.TreeView.SaveViewState
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SaveViewState()
  nameWithType: TreeView.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeView.SaveViewState()
- uid: System.Web.UI.WebControls.TreeView.SelectedNode
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNode
  nameWithType: TreeView.SelectedNode
  fullName: System.Web.UI.WebControls.TreeView.SelectedNode
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeChanged
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNodeChanged
  nameWithType: TreeView.SelectedNodeChanged
  fullName: System.Web.UI.WebControls.TreeView.SelectedNodeChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNodeStyle
  nameWithType: TreeView.SelectedNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.SelectedNodeStyle
- uid: System.Web.UI.WebControls.TreeView.SelectedValue
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedValue
  nameWithType: TreeView.SelectedValue
  fullName: System.Web.UI.WebControls.TreeView.SelectedValue
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataBound(TreeNode,Boolean)
  nameWithType: TreeView.SetNodeDataBound(TreeNode,Boolean)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataBound(TreeNode,Boolean)
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataItem(TreeNode,Object)
  nameWithType: TreeView.SetNodeDataItem(TreeNode,Object)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataItem(TreeNode,Object)
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataPath(TreeNode,String)
  nameWithType: TreeView.SetNodeDataPath(TreeNode,String)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataPath(TreeNode,String)
- uid: System.Web.UI.WebControls.TreeView.ShowCheckBoxes
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowCheckBoxes
  nameWithType: TreeView.ShowCheckBoxes
  fullName: System.Web.UI.WebControls.TreeView.ShowCheckBoxes
- uid: System.Web.UI.WebControls.TreeNodeTypes
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeTypes
  nameWithType: TreeNodeTypes
  fullName: System.Web.UI.WebControls.TreeNodeTypes
- uid: System.Web.UI.WebControls.TreeView.ShowExpandCollapse
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowExpandCollapse
  nameWithType: TreeView.ShowExpandCollapse
  fullName: System.Web.UI.WebControls.TreeView.ShowExpandCollapse
- uid: System.Web.UI.WebControls.TreeView.ShowLines
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowLines
  nameWithType: TreeView.ShowLines
  fullName: System.Web.UI.WebControls.TreeView.ShowLines
- uid: System.Web.UI.WebControls.TreeView.SkipLinkText
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SkipLinkText
  nameWithType: TreeView.SkipLinkText
  fullName: System.Web.UI.WebControls.TreeView.SkipLinkText
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.TreeView.TagKey
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TagKey
  nameWithType: TreeView.TagKey
  fullName: System.Web.UI.WebControls.TreeView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.TreeView.Target
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Target
  nameWithType: TreeView.Target
  fullName: System.Web.UI.WebControls.TreeView.Target
- uid: System.Web.UI.WebControls.TreeView.TrackViewState
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TrackViewState()
  nameWithType: TreeView.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeView.TrackViewState()
- uid: System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodeCheckChanged
  nameWithType: TreeView.TreeNodeCheckChanged
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
- uid: System.Web.UI.WebControls.TreeNodeEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeEventHandler
  nameWithType: TreeNodeEventHandler
  fullName: System.Web.UI.WebControls.TreeNodeEventHandler
- uid: System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodeCollapsed
  nameWithType: TreeView.TreeNodeCollapsed
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
- uid: System.Web.UI.WebControls.TreeView.TreeNodeDataBound
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodeDataBound
  nameWithType: TreeView.TreeNodeDataBound
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeDataBound
- uid: System.Web.UI.WebControls.TreeView.TreeNodeExpanded
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodeExpanded
  nameWithType: TreeView.TreeNodeExpanded
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeExpanded
- uid: System.Web.UI.WebControls.TreeView.TreeNodePopulate
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodePopulate
  nameWithType: TreeView.TreeNodePopulate
  fullName: System.Web.UI.WebControls.TreeView.TreeNodePopulate
- uid: System.Web.UI.WebControls.TreeView.Visible
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Visible
  nameWithType: TreeView.Visible
  fullName: System.Web.UI.WebControls.TreeView.Visible
- uid: System.Web.UI.WebControls.TreeView.#ctor*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeView
  nameWithType: TreeView.TreeView
- uid: System.Web.UI.WebControls.TreeView.AddAttributesToRender*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: AddAttributesToRender
  nameWithType: TreeView.AddAttributesToRender
- uid: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: AutoGenerateDataBindings
  nameWithType: TreeView.AutoGenerateDataBindings
- uid: System.Web.UI.WebControls.TreeView.CheckedNodes*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CheckedNodes
  nameWithType: TreeView.CheckedNodes
- uid: System.Web.UI.WebControls.TreeView.CollapseAll*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseAll
  nameWithType: TreeView.CollapseAll
- uid: System.Web.UI.WebControls.TreeView.CollapseImageToolTip*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseImageToolTip
  nameWithType: TreeView.CollapseImageToolTip
- uid: System.Web.UI.WebControls.TreeView.CollapseImageUrl*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseImageUrl
  nameWithType: TreeView.CollapseImageUrl
- uid: System.Web.UI.WebControls.TreeView.CreateControlCollection*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CreateControlCollection
  nameWithType: TreeView.CreateControlCollection
- uid: System.Web.UI.WebControls.TreeView.CreateNode*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CreateNode
  nameWithType: TreeView.CreateNode
- uid: System.Web.UI.WebControls.TreeView.DataBind*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: DataBind
  nameWithType: TreeView.DataBind
- uid: System.Web.UI.WebControls.TreeView.DataBindings*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: DataBindings
  nameWithType: TreeView.DataBindings
- uid: System.Web.UI.WebControls.TreeView.EnableClientScript*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: EnableClientScript
  nameWithType: TreeView.EnableClientScript
- uid: System.Web.UI.WebControls.TreeView.ExpandAll*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandAll
  nameWithType: TreeView.ExpandAll
- uid: System.Web.UI.WebControls.TreeView.ExpandDepth*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandDepth
  nameWithType: TreeView.ExpandDepth
- uid: System.Web.UI.WebControls.TreeView.ExpandImageToolTip*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandImageToolTip
  nameWithType: TreeView.ExpandImageToolTip
- uid: System.Web.UI.WebControls.TreeView.ExpandImageUrl*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandImageUrl
  nameWithType: TreeView.ExpandImageUrl
- uid: System.Web.UI.WebControls.TreeView.FindNode*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: FindNode
  nameWithType: TreeView.FindNode
- uid: System.Web.UI.WebControls.TreeView.GetCallbackResult*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: GetCallbackResult
  nameWithType: TreeView.GetCallbackResult
- uid: System.Web.UI.WebControls.TreeView.HoverNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: HoverNodeStyle
  nameWithType: TreeView.HoverNodeStyle
- uid: System.Web.UI.WebControls.TreeView.ImageSet*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ImageSet
  nameWithType: TreeView.ImageSet
- uid: System.Web.UI.WebControls.TreeView.LeafNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LeafNodeStyle
  nameWithType: TreeView.LeafNodeStyle
- uid: System.Web.UI.WebControls.TreeView.LevelStyles*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LevelStyles
  nameWithType: TreeView.LevelStyles
- uid: System.Web.UI.WebControls.TreeView.LineImagesFolder*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LineImagesFolder
  nameWithType: TreeView.LineImagesFolder
- uid: System.Web.UI.WebControls.TreeView.LoadPostData*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LoadPostData
  nameWithType: TreeView.LoadPostData
- uid: System.Web.UI.WebControls.TreeView.LoadViewState*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LoadViewState
  nameWithType: TreeView.LoadViewState
- uid: System.Web.UI.WebControls.TreeView.MaxDataBindDepth*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: MaxDataBindDepth
  nameWithType: TreeView.MaxDataBindDepth
- uid: System.Web.UI.WebControls.TreeView.NodeIndent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeIndent
  nameWithType: TreeView.NodeIndent
- uid: System.Web.UI.WebControls.TreeView.Nodes*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Nodes
  nameWithType: TreeView.Nodes
- uid: System.Web.UI.WebControls.TreeView.NodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeStyle
  nameWithType: TreeView.NodeStyle
- uid: System.Web.UI.WebControls.TreeView.NodeWrap*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeWrap
  nameWithType: TreeView.NodeWrap
- uid: System.Web.UI.WebControls.TreeView.NoExpandImageUrl*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NoExpandImageUrl
  nameWithType: TreeView.NoExpandImageUrl
- uid: System.Web.UI.WebControls.TreeView.OnInit*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnInit
  nameWithType: TreeView.OnInit
- uid: System.Web.UI.WebControls.TreeView.OnPreRender*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnPreRender
  nameWithType: TreeView.OnPreRender
- uid: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnSelectedNodeChanged
  nameWithType: TreeView.OnSelectedNodeChanged
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeCheckChanged
  nameWithType: TreeView.OnTreeNodeCheckChanged
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeCollapsed
  nameWithType: TreeView.OnTreeNodeCollapsed
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeDataBound
  nameWithType: TreeView.OnTreeNodeDataBound
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeExpanded
  nameWithType: TreeView.OnTreeNodeExpanded
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodePopulate
  nameWithType: TreeView.OnTreeNodePopulate
- uid: System.Web.UI.WebControls.TreeView.ParentNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ParentNodeStyle
  nameWithType: TreeView.ParentNodeStyle
- uid: System.Web.UI.WebControls.TreeView.PathSeparator*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PathSeparator
  nameWithType: TreeView.PathSeparator
- uid: System.Web.UI.WebControls.TreeView.PerformDataBinding*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PerformDataBinding
  nameWithType: TreeView.PerformDataBinding
- uid: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PopulateNodesFromClient
  nameWithType: TreeView.PopulateNodesFromClient
- uid: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: TreeView.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.TreeView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: TreeView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaisePostDataChangedEvent
  nameWithType: TreeView.RaisePostDataChangedEvent
- uid: System.Web.UI.WebControls.TreeView.RenderBeginTag*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderBeginTag
  nameWithType: TreeView.RenderBeginTag
- uid: System.Web.UI.WebControls.TreeView.RenderContents*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderContents
  nameWithType: TreeView.RenderContents
- uid: System.Web.UI.WebControls.TreeView.RenderEndTag*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderEndTag
  nameWithType: TreeView.RenderEndTag
- uid: System.Web.UI.WebControls.TreeView.RootNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RootNodeStyle
  nameWithType: TreeView.RootNodeStyle
- uid: System.Web.UI.WebControls.TreeView.SaveViewState*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SaveViewState
  nameWithType: TreeView.SaveViewState
- uid: System.Web.UI.WebControls.TreeView.SelectedNode*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNode
  nameWithType: TreeView.SelectedNode
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNodeStyle
  nameWithType: TreeView.SelectedNodeStyle
- uid: System.Web.UI.WebControls.TreeView.SelectedValue*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedValue
  nameWithType: TreeView.SelectedValue
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataBound*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataBound
  nameWithType: TreeView.SetNodeDataBound
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataItem*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataItem
  nameWithType: TreeView.SetNodeDataItem
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataPath*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataPath
  nameWithType: TreeView.SetNodeDataPath
- uid: System.Web.UI.WebControls.TreeView.ShowCheckBoxes*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowCheckBoxes
  nameWithType: TreeView.ShowCheckBoxes
- uid: System.Web.UI.WebControls.TreeView.ShowExpandCollapse*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowExpandCollapse
  nameWithType: TreeView.ShowExpandCollapse
- uid: System.Web.UI.WebControls.TreeView.ShowLines*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowLines
  nameWithType: TreeView.ShowLines
- uid: System.Web.UI.WebControls.TreeView.SkipLinkText*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SkipLinkText
  nameWithType: TreeView.SkipLinkText
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.TreeView.TagKey*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TagKey
  nameWithType: TreeView.TagKey
- uid: System.Web.UI.WebControls.TreeView.Target*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Target
  nameWithType: TreeView.Target
- uid: System.Web.UI.WebControls.TreeView.TrackViewState*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TrackViewState
  nameWithType: TreeView.TrackViewState
- uid: System.Web.UI.WebControls.TreeView.Visible*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Visible
  nameWithType: TreeView.Visible
