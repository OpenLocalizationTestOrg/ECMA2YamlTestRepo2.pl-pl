### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeConverterAttribute
  id: TypeConverterAttribute
  children:
  - System.ComponentModel.TypeConverterAttribute.#ctor
  - System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  - System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  - System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  - System.ComponentModel.TypeConverterAttribute.Default
  - System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  - System.ComponentModel.TypeConverterAttribute.GetHashCode
  langs:
  - csharp
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute
  fullName: System.ComponentModel.TypeConverterAttribute
  type: Class
  summary: "Określa, jaki typ ma być używana jako konwertera dla obiekt ten atrybut jest powiązany."
  remarks: "Klasy, którą można użyć do konwersji musi dziedziczyć z <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> Użyj <xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A>Właściwości można uzyskać nazwy klasy, która zapewnia konwersji danych dla obiekt ten atrybut jest powiązany.</xref:System.ComponentModel.TypeConverterAttribute.ConverterTypeName%2A>       Aby uzyskać więcej informacji na temat atrybutów, zobacz [atrybutów](~/add/includes/ajax-current-ext-md.md). Aby uzyskać więcej informacji na temat konwertery typu, zobacz <xref:System.ComponentModel.TypeConverter>Klasa podstawowa i [porady: implementacji konwertera typów](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>       W celu ustalenia typu konwertera dla klasy niestandardowej, która zapewnia zachowanie konwersji typu dla XAML, atrybut TypeConverterAttribute dotyczą danego typu. Argument atrybutu odwołuje się do implementacji konwertera typu. Twoje konwerter typów należy można zaakceptować wartości z ciągu używanego dla atrybutów lub inicjowania tekstu w kodzie XAML i konwertować tego ciągu danego przeznaczenia typu. Aby uzyskać więcej informacji, zobacz[TypeConverters i języka XAML](~/add/includes/ajax-current-ext-md.md).       Zamiast zastosowanie do wszystkich wartości typu, zachowanie konwerter typu dla XAML może być ustalona na określoną właściwość. W takim przypadku należy zastosować TypeConverterAttribute do definicji property (zewnętrznej definicji, nie konkretnym `get` i `set` definicje).       Zachowanie konwerter typu dla XAML użycia niestandardowego dołączalny element członkowski można przypisać przez zastosowanie TypeConverterAttribute do `get` dostępu metody, obsługujący użycie języka XAML. Aby uzyskać więcej informacji, zobacz [dołączony Przegląd właściwości](~/add/includes/ajax-current-ext-md.md).       Złożonych przypadkach serializacji XAML, które wymagają dodatkowych stanu z obiektu środowiska wykonawczego, rozważ zdefiniowanie serializatora wartość oprócz konwerter typów, a atrybut zarówno obsługuje klasy w niestandardowych typów lub niestandardowych elementów członkowskich. Aby uzyskać więcej informacji zobacz <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer>"
  example:
  - "The following example declares `MyClass` to use the type converter called `MyClassConverter`. This example assumes that `MyClassConverter` has been implemented elsewhere. The class implementing the converter (`MyClassConverter`) must inherit from the <xref:System.ComponentModel.TypeConverter> class.  \n  \n [!code-vb[Classic TypeConverterAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._140_1.vb)]\n [!code-cpp[Classic TypeConverterAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._140_1.cpp)]\n [!code-cs[Classic TypeConverterAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._140_1.cs)]  \n  \n The next example creates an instance of `MyClass`. Then it gets the attributes for the class, and prints the name of the type converter used by `MyClass`.  \n  \n [!code-vb[Classic TypeConverterAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._140_2.vb)]\n [!code-cpp[Classic TypeConverterAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._140_2.cpp)]\n [!code-cs[Classic TypeConverterAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._140_2.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class TypeConverterAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute()
  nameWithType: TypeConverterAttribute.TypeConverterAttribute()
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> klasy dla konwertera typu domyślny, który jest ciągiem pustym (&quot;&quot;)."
  remarks: "Klasa, która zapewnia konwersji danych musi dziedziczyć z <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public TypeConverterAttribute ();
    parameters: []
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute(String)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(String)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> przy użyciu określonej nazwy typu jako konwertera danych dla tego atrybutu jest powiązany z obiektu."
  remarks: "Klasa, która zapewnia konwersji danych musi dziedziczyć z <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public TypeConverterAttribute (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Pełna nazwa klasy na potrzeby konwersji danych dla obiekt ten atrybut jest powiązany."
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: TypeConverterAttribute(Type)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(Type)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref> przy użyciu określonego typu jako konwertera danych dla tego atrybutu jest powiązany z obiektu."
  remarks: "Klasa, która zapewnia konwersji danych musi dziedziczyć z <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public TypeConverterAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>reprezentujący typ klasy konwertera do użycia na potrzeby konwersji danych dla obiekt ten atrybut jest powiązany.</xref:System.Type>"
  overload: System.ComponentModel.TypeConverterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  id: ConverterTypeName
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
  fullName: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera w pełni kwalifikowaną nazwę typu <xref:System.Type>do użycia jako konwertera dla obiekt ten atrybut jest powiązany.</xref:System.Type>"
  syntax:
    content: public string ConverterTypeName { get; }
    return:
      type: System.String
      description: "Pełną nazwę typu <xref:System.Type>do użycia jako konwertera dla obiekt ten atrybut jest powiązany z lub ciąg pusty (&quot;&quot;), jeśli żaden nie istnieje.</xref:System.Type> Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.ComponentModel.TypeConverterAttribute.ConverterTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.Default
  id: Default
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: Default
  nameWithType: TypeConverterAttribute.Default
  fullName: System.ComponentModel.TypeConverterAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Określa typ do użycia jako konwertera dla obiekt, który jest powiązany ten atrybut."
  syntax:
    content: public static readonly System.ComponentModel.TypeConverterAttribute Default;
    return:
      type: System.ComponentModel.TypeConverterAttribute
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: TypeConverterAttribute.Equals(Object)
  fullName: System.ComponentModel.TypeConverterAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca czy wartość dany obiekt jest taki sam, jak bieżący <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do testu równości wartości."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość dany obiekt jest równa bieżącej <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverterAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.TypeConverterAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: TypeConverterAttribute.GetHashCode()
  fullName: System.ComponentModel.TypeConverterAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca wartość skrótu dla tego wystąpienia."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu dla bieżącego <xref href=&quot;System.ComponentModel.TypeConverterAttribute&quot;> </xref>."
  overload: System.ComponentModel.TypeConverterAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.TypeConverterAttribute.#ctor
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute()
  nameWithType: TypeConverterAttribute.TypeConverterAttribute()
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute()
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.String)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute(String)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(String)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute(Type)
  nameWithType: TypeConverterAttribute.TypeConverterAttribute(Type)
  fullName: System.ComponentModel.TypeConverterAttribute.TypeConverterAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
  fullName: System.ComponentModel.TypeConverterAttribute.ConverterTypeName
- uid: System.ComponentModel.TypeConverterAttribute.Default
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Default
  nameWithType: TypeConverterAttribute.Default
  fullName: System.ComponentModel.TypeConverterAttribute.Default
- uid: System.ComponentModel.TypeConverterAttribute
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute
  fullName: System.ComponentModel.TypeConverterAttribute
- uid: System.ComponentModel.TypeConverterAttribute.Equals(System.Object)
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: TypeConverterAttribute.Equals(Object)
  fullName: System.ComponentModel.TypeConverterAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: TypeConverterAttribute.GetHashCode()
  fullName: System.ComponentModel.TypeConverterAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.TypeConverterAttribute.#ctor*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: TypeConverterAttribute
  nameWithType: TypeConverterAttribute.TypeConverterAttribute
- uid: System.ComponentModel.TypeConverterAttribute.ConverterTypeName*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: ConverterTypeName
  nameWithType: TypeConverterAttribute.ConverterTypeName
- uid: System.ComponentModel.TypeConverterAttribute.Equals*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: Equals
  nameWithType: TypeConverterAttribute.Equals
- uid: System.ComponentModel.TypeConverterAttribute.GetHashCode*
  parent: System.ComponentModel.TypeConverterAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: TypeConverterAttribute.GetHashCode
