### YamlMime:ManagedReference
items:
- uid: System.Data.DataRelation
  id: DataRelation
  children:
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  - System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  - System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  - System.Data.DataRelation.CheckStateForProperty
  - System.Data.DataRelation.ChildColumns
  - System.Data.DataRelation.ChildKeyConstraint
  - System.Data.DataRelation.ChildTable
  - System.Data.DataRelation.DataSet
  - System.Data.DataRelation.ExtendedProperties
  - System.Data.DataRelation.Nested
  - System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  - System.Data.DataRelation.ParentColumns
  - System.Data.DataRelation.ParentKeyConstraint
  - System.Data.DataRelation.ParentTable
  - System.Data.DataRelation.RaisePropertyChanging(System.String)
  - System.Data.DataRelation.RelationName
  - System.Data.DataRelation.ToString
  langs:
  - csharp
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
  type: Class
  summary: "Reprezentuje relacji nadrzędny/podrzędny między dwiema <xref href=&quot;System.Data.DataTable&quot;> </xref> obiektów."
  remarks: "DataRelation jest używany do tworzenia powiązań dwa <xref:System.Data.DataTable>obiektów ze sobą za pośrednictwem <xref:System.Data.DataColumn>obiektów.</xref:System.Data.DataColumn> </xref:System.Data.DataTable> Na przykład w relacji zamówienia/tabeli Klienci jest nadrzędny i tabeli zamówienia jest elementem podrzędnym relacji. Jest to podobne do podstawowego relacji klucza obcego/klucz. Aby uzyskać więcej informacji, zobacz [nawigowanie po DataRelations](~/add/includes/ajax-current-ext-md.md).       Relacje są tworzone między kolumnami w tabeli nadrzędnej i podrzędnej. Oznacza to, że <xref:System.Data.DataColumn.DataType%2A>wartość dla obu kolumn muszą być takie same.</xref:System.Data.DataColumn.DataType%2A>       Relacje można również kaskadowo różnych zmian z obiektu nadrzędnego <xref:System.Data.DataRow>do jego wierszy podrzędnych.</xref:System.Data.DataRow> Aby kontrolować sposób wartości są zmieniane w wiersze podrzędne, Dodaj <xref:System.Data.ForeignKeyConstraint>do <xref:System.Data.ConstraintCollection>z <xref:System.Data.DataTable>obiektu.</xref:System.Data.DataTable> </xref:System.Data.ConstraintCollection> </xref:System.Data.ForeignKeyConstraint> <xref:System.Data.ConstraintCollection>Określa, jakie działania w sytuacji, gdy wartości w tabeli nadrzędnej został usunięty lub zaktualizowany.</xref:System.Data.ConstraintCollection>       Po utworzeniu elementu DataRelation, najpierw sprawdza można ustanowić relacji. Po dodaniu do <xref:System.Data.DataRelationCollection>Relacja obsługiwany przez brak zezwolenia wszelkie zmiany, które spowoduje unieważnienie go.</xref:System.Data.DataRelationCollection> Między okres, kiedy tworzony i dodawany do elementu DataRelation <xref:System.Data.DataRelationCollection>, jest możliwe wprowadzenie dodatkowych zmian w do wierszy nadrzędnych i podrzędnych.</xref:System.Data.DataRelationCollection> Wyjątek jest generowany, jeśli spowoduje relację, która nie jest już prawidłowy.      > [!NOTE] > Może spowodować uszkodzenie danych, jeśli zdefiniowano dwukierunkową relację między dwiema tabelami. Relacja dwukierunkowego składa się z dwóch `DataRelation` obiektów, które same kolumny z przełączaniem rolami nadrzędny podrzędny. Nie wystąpił wyjątek podczas `DataRelation` obiekty są zapisywane; jednak może spowodować uszkodzenie danych.       DataRelation — obiekty są zawarte w <xref:System.Data.DataRelationCollection>, które jest dostępne za pośrednictwem <xref:System.Data.DataSet.Relations%2A>właściwości <xref:System.Data.DataSet>i <xref:System.Data.DataTable.ChildRelations%2A> <xref:System.Data.DataTable.ParentRelations%2A>właściwości <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.ParentRelations%2A> i</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A> </xref:System.Data.DataRelationCollection>"
  example:
  - "The following example creates a new DataRelation and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-cs[Classic WebData DataRelation Example#1](~/add/codesnippet/csharp/t-system.data.datarelation_1.cs)]\n [!code-vb[Classic WebData DataRelation Example#1](~/add/codesnippet/visualbasic/t-system.data.datarelation_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("RelationName")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.TypeConverter(typeof(System.Data.RelationshipConverter))]

      public class DataRelation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: '#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn,DataColumn)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DataRelation&quot;> </xref> przy użyciu określonego <xref href=&quot;System.Data.DataRelation&quot;> </xref> nazwa i nadrzędne i podrzędne <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-cs[Classic WebData DataRelation.DataRelation#1](~/add/codesnippet/csharp/c51592f7-179d-4737-b5e5-_1.cs)]\n [!code-vb[Classic WebData DataRelation.DataRelation#1](~/add/codesnippet/visualbasic/c51592f7-179d-4737-b5e5-_1.vb)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: relationName
      type: System.String
      description: "Nazwa <xref href=&quot;System.Data.DataRelation&quot;> </xref>. Jeśli <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty (&quot;&quot;), otrzyma nazwę domyślną, gdy utworzony obiekt zostanie dodany do <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "Element nadrzędny <xref href=&quot;System.Data.DataColumn&quot;> </xref> w relacji."
    - id: childColumn
      type: System.Data.DataColumn
      description: "Obiekt podrzędny <xref href=&quot;System.Data.DataColumn&quot;> </xref> w relacji."
  overload: System.Data.DataRelation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jedno lub oba <xref href=&quot;System.Data.DataColumn&quot;> </xref> zawiera obiekty <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Kolumny mają różne typy danych - lub - tabele nie należą do tej samej <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: '#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn[],DataColumn[])
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DataRelation&quot;> </xref> przy użyciu określonego <xref href=&quot;System.Data.DataRelation&quot;> </xref> nazwa i dopasowanych tablice obiektów nadrzędnych i podrzędnych <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataRelation.DataRelation2 Example#1](~/add/codesnippet/visualbasic/74c401a9-c184-4dbd-895b-_1.vb)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: relationName
      type: System.String
      description: "Nazwa relacji. Jeśli <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty (&quot;&quot;), otrzyma nazwę domyślną, gdy utworzony obiekt zostanie dodany do <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "Tablica nadrzędnej <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "Tablica podrzędnych <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów."
  overload: System.Data.DataRelation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jedno lub oba <xref href=&quot;System.Data.DataColumn&quot;> </xref> zawiera obiekty <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> Obiekty mają dane różnych typów - lub - jednego lub obu tablic nie składają się z różnych kolumn z tej samej tabeli.       - Lub - tabele nie należą do tej samej <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  id: '#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DataRelation&quot;> </xref> przy użyciu określonej nazwy nadrzędną i podrzędną <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów i wartość, która wskazuje, czy można utworzyć ograniczenia."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataRelation.DataRelation1 Example#1](~/add/codesnippet/visualbasic/6c615cfd-3655-4658-a32b-_1.vb)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);
    parameters:
    - id: relationName
      type: System.String
      description: "Nazwa relacji. Jeśli <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty (&quot;&quot;), otrzyma nazwę domyślną, gdy utworzony obiekt zostanie dodany do <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "Element nadrzędny <xref href=&quot;System.Data.DataColumn&quot;> </xref> w relacji."
    - id: childColumn
      type: System.Data.DataColumn
      description: "Obiekt podrzędny <xref href=&quot;System.Data.DataColumn&quot;> </xref> w relacji."
    - id: createConstraints
      type: System.Boolean
      description: "Wartość, która wskazuje, czy ograniczenia są tworzone. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli ograniczenia są tworzone. W przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jedno lub oba <xref href=&quot;System.Data.DataColumn&quot;> </xref> zawiera obiekty <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Kolumny mają różne typy danych - lub - tabele nie należą do tej samej <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  id: '#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DataRelation&quot;> </xref> przy użyciu określonej nazwy dopasowane tablice elementów nadrzędnych i podrzędnych <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów i wartość, która wskazuje, czy można utworzyć ograniczenia."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DataRelation.DataRelation3 Example#1](~/add/codesnippet/visualbasic/91b51f14-3ecf-436c-8f4c-_1.vb)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);
    parameters:
    - id: relationName
      type: System.String
      description: "Nazwa relacji. Jeśli <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty (&quot;&quot;), otrzyma nazwę domyślną, gdy utworzony obiekt zostanie dodany do <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "Tablica nadrzędnej <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "Tablica podrzędnych <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów."
    - id: createConstraints
      type: System.Boolean
      description: "Wartość, która wskazuje, czy można utworzyć ograniczenia. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli ograniczenia są tworzone. W przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelation.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jedno lub oba <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Kolumny mają różne typy danych - lub - tabele nie należą do tej samej <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ten konstruktor zapewnia obsługę w czasie projektowania w środowisku Visual Studio."
  remarks: "Wszelkie <xref:System.Data.DataRelation>obiektu utworzonego za pomocą tego konstruktora musi zostać dodany do kolekcji z <xref:System.Data.DataRelationCollection.AddRange%2A>metody wewnątrz <xref:System.Data.DataTable.BeginInit%2A>i <xref:System.Data.DataTable.EndInit%2A>bloku.</xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A> </xref:System.Data.DataRelationCollection.AddRange%2A> </xref:System.Data.DataRelation> Jeśli ten konstruktor nie jest wywoływany między <xref:System.Data.DataTable.BeginInit%2A>i <xref:System.Data.DataTable.EndInit%2A> <xref:System.NullReferenceException>nastąpi.</xref:System.NullReferenceException> </xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A> Ponadto tabele i kolumny z określonymi nazwami musi istnieć w momencie wywołania konstruktora."
  syntax:
    content: public DataRelation (string relationName, string parentTableName, string childTableName, string[] parentColumnNames, string[] childColumnNames, bool nested);
    parameters:
    - id: relationName
      type: System.String
      description: "Nazwa relacji. Jeśli <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty (&quot;&quot;), otrzyma nazwę domyślną, gdy utworzony obiekt zostanie dodany do <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
    - id: parentTableName
      type: System.String
      description: "Nazwa <xref href=&quot;System.Data.DataTable&quot;> </xref> czyli tabeli nadrzędnej w relacji."
    - id: childTableName
      type: System.String
      description: "Nazwa <xref href=&quot;System.Data.DataTable&quot;> </xref> który jest tabelą podrzędną relacji."
    - id: parentColumnNames
      type: System.String[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> nazwy w obiekcie nadrzędnym obiektów <xref href=&quot;System.Data.DataTable&quot;> </xref> relacji."
    - id: childColumnNames
      type: System.String[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> nazwy w podrzędnych obiektów <xref href=&quot;System.Data.DataTable&quot;> </xref> relacji."
    - id: nested
      type: System.Boolean
      description: "Wartość, która wskazuje, czy relacje są zagnieżdżone."
  overload: System.Data.DataRelation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,String,String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ten konstruktor zapewnia obsługę w czasie projektowania w środowisku Visual Studio."
  remarks: "Wszelkie <xref:System.Data.DataRelation>utworzone za pomocą tego konstruktora obiektów należy następnie dodać do kolekcji z <xref:System.Data.DataRelationCollection.AddRange%2A>.</xref:System.Data.DataRelationCollection.AddRange%2A> </xref:System.Data.DataRelation> Tabele i kolumny z określonymi nazwami musi istnieć w momencie wywołania metody, lub jeśli <xref:System.Data.DataTable.BeginInit%2A>została wywołana przed wywołaniem konstruktora, tabele i kolumny z określonymi nazwami musi istnieć w czasie który <xref:System.Data.DataTable.EndInit%2A>jest wywoływana.</xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A>"
  syntax:
    content: public DataRelation (string relationName, string parentTableName, string parentTableNamespace, string childTableName, string childTableNamespace, string[] parentColumnNames, string[] childColumnNames, bool nested);
    parameters:
    - id: relationName
      type: System.String
      description: "Nazwa <xref href=&quot;System.Data.DataRelation&quot;> </xref>. Jeśli <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty (&quot;&quot;), otrzyma nazwę domyślną, gdy utworzony obiekt zostanie dodany do <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
    - id: parentTableName
      type: System.String
      description: "Nazwa <xref href=&quot;System.Data.DataTable&quot;> </xref> czyli tabeli nadrzędnej w relacji."
    - id: parentTableNamespace
      type: System.String
      description: "Nazwa przestrzeni nazw tabeli nadrzędnej."
    - id: childTableName
      type: System.String
      description: "Nazwa <xref href=&quot;System.Data.DataTable&quot;> </xref> który jest tabelą podrzędną relacji."
    - id: childTableNamespace
      type: System.String
      description: "Nazwa przestrzeni nazw tabeli podrzędnej."
    - id: parentColumnNames
      type: System.String[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> nazwy w obiekcie nadrzędnym obiektów <xref href=&quot;System.Data.DataTable&quot;> </xref> relacji."
    - id: childColumnNames
      type: System.String[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> nazwy w podrzędnych obiektów <xref href=&quot;System.Data.DataTable&quot;> </xref> relacji."
    - id: nested
      type: System.Boolean
      description: "Wartość, która wskazuje, czy relacje są zagnieżdżone."
  overload: System.Data.DataRelation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.CheckStateForProperty
  id: CheckStateForProperty
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: CheckStateForProperty()
  nameWithType: DataRelation.CheckStateForProperty()
  fullName: System.Data.DataRelation.CheckStateForProperty()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ta metoda obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: protected void CheckStateForProperty ();
    parameters: []
  overload: System.Data.DataRelation.CheckStateForProperty*
  exceptions:
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Tabelą nadrzędną i podrzędną należą do różnych <xref href=&quot;System.Data.DataSet&quot;> </xref> obiektów.       - Lub - pary co najmniej jeden z obiektów nadrzędnych i podrzędnych <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiekty mają niezgodne typy danych.       - Lub - nadrzędne i podrzędne <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów są identyczne."
  platform:
  - net462
- uid: System.Data.DataRelation.ChildColumns
  id: ChildColumns
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ChildColumns
  nameWithType: DataRelation.ChildColumns
  fullName: System.Data.DataRelation.ChildColumns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera obiekt podrzędny <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów tej relacji."
  remarks: ''
  example:
  - "The following example gets the child <xref:System.Data.DataColumn> objects of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData DataRelation.ChildColumns Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_7_1.vb)]"
  syntax:
    content: public virtual System.Data.DataColumn[] ChildColumns { get; }
    return:
      type: System.Data.DataColumn[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów."
  overload: System.Data.DataRelation.ChildColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ChildKeyConstraint
  id: ChildKeyConstraint
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ChildKeyConstraint
  nameWithType: DataRelation.ChildKeyConstraint
  fullName: System.Data.DataRelation.ChildKeyConstraint
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> dla relacji."
  remarks: "Jeśli nie skojarzone <xref:System.Data.ForeignKeyConstraint>istnieje dla tej relacji, zostanie ono utworzone automatycznie i wskazywanego przez `ChildKeyConstraint`, gdy relacja zostanie dodany do kolekcji relacji.</xref:System.Data.ForeignKeyConstraint>"
  example:
  - "The following example sets the `UpdateRule`, `DeleteRule`, and `AcceptReject` rule for the `ForeignKeyConstraint` associated with the `DataRelation`.  \n  \n [!code-vb[Classic WebData DataRelation.ChildKeyConstraint Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_2_1.vb)]"
  syntax:
    content: public virtual System.Data.ForeignKeyConstraint ChildKeyConstraint { get; }
    return:
      type: System.Data.ForeignKeyConstraint
      description: "A <xref uid=&quot;langword_csharp_ForeignKeyConstraint&quot; name=&quot;ForeignKeyConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.DataRelation.ChildKeyConstraint*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ChildTable
  id: ChildTable
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ChildTable
  nameWithType: DataRelation.ChildTable
  fullName: System.Data.DataRelation.ChildTable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera tabelą podrzędną tej relacji."
  remarks: ''
  example:
  - "The following example gets the child <xref:System.Data.DataTable> of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData DataRelation.ChildTable Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_0_1.vb)]"
  syntax:
    content: public virtual System.Data.DataTable ChildTable { get; }
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> który jest tabelą podrzędną relacji."
  overload: System.Data.DataRelation.ChildTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.DataSet
  id: DataSet
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataSet
  nameWithType: DataRelation.DataSet
  fullName: System.Data.DataRelation.DataSet
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera <xref href=&quot;System.Data.DataSet&quot;> </xref> do której <xref href=&quot;System.Data.DataRelation&quot;> </xref> należy."
  remarks: "<xref:System.Data.DataRelationCollection>Skojarzone z <xref:System.Data.DataSet>jest dostępny za pośrednictwem <xref:System.Data.DataSet.Relations%2A>Właściwość <xref:System.Data.DataSet>obiektu.</xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A> </xref:System.Data.DataSet> </xref:System.Data.DataRelationCollection>"
  example:
  - "The following example gets the <xref:System.Data.DataSet> of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData DataRelation.DataSet Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_1_1.vb)]"
  syntax:
    content: public virtual System.Data.DataSet DataSet { get; }
    return:
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> do której <xref href=&quot;System.Data.DataRelation&quot;> </xref> należy."
  overload: System.Data.DataRelation.DataSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ExtendedProperties
  id: ExtendedProperties
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ExtendedProperties
  nameWithType: DataRelation.ExtendedProperties
  fullName: System.Data.DataRelation.ExtendedProperties
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera kolekcję, która przechowuje niestandardowe właściwości."
  remarks: "Umożliwia dodawanie niestandardowych informacji do właściwości rozszerzone <xref:System.Data.DataRelation>obiektu.</xref:System.Data.DataRelation> Dodaj informacje z metody Add. Pobierać informacje z metodą elementu.       Rozszerzone właściwości musi być typu <xref:System.String>.</xref:System.String> Właściwości, które nie są typu ciąg nie są zachowywane podczas <xref:System.Data.DataRelation>jest zapisywany w formacie XML.</xref:System.Data.DataRelation>"
  syntax:
    content: public System.Data.PropertyCollection ExtendedProperties { get; }
    return:
      type: System.Data.PropertyCollection
      description: "A <xref href=&quot;System.Data.PropertyCollection&quot;> </xref> zawiera niestandardowe właściwości."
  overload: System.Data.DataRelation.ExtendedProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.Nested
  id: Nested
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: Nested
  nameWithType: DataRelation.Nested
  fullName: System.Data.DataRelation.Nested
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy <xref href=&quot;System.Data.DataRelation&quot;> </xref> obiekty są zagnieżdżone."
  remarks: "Można użyć <xref:System.Data.DataRelation>obiektów, aby zdefiniować relacje hierarchiczne, takich jak określone w kodzie XML.</xref:System.Data.DataRelation> Aby uzyskać więcej informacji, zobacz [zagnieżdżania DataRelations](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Jeśli <xref:System.Data.DataTable.TableName%2A>tabeli podrzędnej w relacji odpowiada <xref:System.Data.DataColumn.ColumnName%2A>kolumny w tabeli nadrzędnej w relacji właściwości zagnieżdżonych musi mieć wartość false.</xref:System.Data.DataColumn.ColumnName%2A> </xref:System.Data.DataTable.TableName%2A> To nie wymagają programu .NET Framework w wersji 1.0."
  syntax:
    content: public virtual bool Nested { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli <xref href=&quot;System.Data.DataRelation&quot;> </xref> obiekty są zagnieżdżone w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelation.Nested*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: OnPropertyChanging(PropertyChangedEventArgs)
  nameWithType: DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
  fullName: System.Data.DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ten element członkowski obsługuje infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: protected void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);
    parameters:
    - id: pcevent
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "Odwołania do parametru."
  overload: System.Data.DataRelation.OnPropertyChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ParentColumns
  id: ParentColumns
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ParentColumns
  nameWithType: DataRelation.ParentColumns
  fullName: System.Data.DataRelation.ParentColumns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera tablicę <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów, które są kolumny nadrzędne <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: ''
  example:
  - "The following example gets the array of <xref:System.Data.DataColumn> objects that function as parent columns for the relation.  \n  \n [!code-vb[Classic WebData DataRelation.ParentColumns Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_5_1.vb)]"
  syntax:
    content: public virtual System.Data.DataColumn[] ParentColumns { get; }
    return:
      type: System.Data.DataColumn[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów, które są kolumny nadrzędne <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  overload: System.Data.DataRelation.ParentColumns*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ParentKeyConstraint
  id: ParentKeyConstraint
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ParentKeyConstraint
  nameWithType: DataRelation.ParentKeyConstraint
  fullName: System.Data.DataRelation.ParentKeyConstraint
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> pozwala to zagwarantować, że wartości w kolumnie nadrzędnej <xref href=&quot;System.Data.DataRelation&quot;> </xref> są unikatowe."
  remarks: ''
  example:
  - "The following example gets the ParentKeyConstraint of a <xref:System.Data.DataRelation> object.  \n  \n [!code-vb[Classic WebData DataRelation.ParentKeyConstraint Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_6_1.vb)]"
  syntax:
    content: public virtual System.Data.UniqueConstraint ParentKeyConstraint { get; }
    return:
      type: System.Data.UniqueConstraint
      description: "A <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> która sprawdza, czy wartości w kolumnie nadrzędne są unikatowe."
  overload: System.Data.DataRelation.ParentKeyConstraint*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.ParentTable
  id: ParentTable
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ParentTable
  nameWithType: DataRelation.ParentTable
  fullName: System.Data.DataRelation.ParentTable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera element nadrzędny <xref href=&quot;System.Data.DataTable&quot;> </xref> tego <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: ''
  example:
  - "The following example gets the parent <xref:System.Data.DataTable> of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData DataRelation.ParentTable Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_3_1.vb)]"
  syntax:
    content: public virtual System.Data.DataTable ParentTable { get; }
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> czyli tabeli nadrzędnej tej relacji."
  overload: System.Data.DataRelation.ParentTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.RaisePropertyChanging(System.String)
  id: RaisePropertyChanging(System.String)
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: RaisePropertyChanging(String)
  nameWithType: DataRelation.RaisePropertyChanging(String)
  fullName: System.Data.DataRelation.RaisePropertyChanging(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ten element członkowski obsługuje infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: protected void RaisePropertyChanging (string name);
    parameters:
    - id: name
      type: System.String
      description: "Odwołania do parametru."
  overload: System.Data.DataRelation.RaisePropertyChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelation.RelationName
  id: RelationName
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: RelationName
  nameWithType: DataRelation.RelationName
  fullName: System.Data.DataRelation.RelationName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia nazwę używaną do pobrania <xref href=&quot;System.Data.DataRelation&quot;> </xref> z <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>."
  remarks: "Użyj właściwości Element RelationName można pobrać <xref:System.Data.DataRelation>z <xref:System.Data.DataRelationCollection>.</xref:System.Data.DataRelationCollection> </xref:System.Data.DataRelation>"
  example:
  - "The following example uses the RelationName property to retrieve a <xref:System.Data.DataRelation> from a <xref:System.Data.DataRelationCollection>.  \n  \n [!code-vb[Classic WebData DataRelation.RelationName Example#1](~/add/codesnippet/visualbasic/p-system.data.datarelati_4_1.vb)]"
  syntax:
    content: public virtual string RelationName { get; set; }
    return:
      type: System.String
      description: "Nazwa <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  overload: System.Data.DataRelation.RelationName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>lub jest pustym ciągiem (&quot;&quot;) został przekazany <xref href=&quot;System.Data.DataColumn&quot;> </xref> czyli <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "<xref href=&quot;System.Data.DataRelation&quot;> </xref> Należy do kolekcji, która zawiera już <xref href=&quot;System.Data.DataRelation&quot;> </xref> o takiej samej nazwie."
  platform:
  - net462
- uid: System.Data.DataRelation.ToString
  id: ToString
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ToString()
  nameWithType: DataRelation.ToString()
  fullName: System.Data.DataRelation.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera <xref:System.Data.DataRelation.RelationName*>, jeśli taka istnieje.</xref:System.Data.DataRelation.RelationName*>"
  remarks: ''
  example:
  - "The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the name of the <xref:System.Data.DataRelation> object.  \n  \n [!code-vb[Classic WebData DataRelation.ToString Example#1](~/add/codesnippet/visualbasic/m-system.data.datarelati_1_1.vb)]\n [!code-cs[Classic WebData DataRelation.ToString Example#1](~/add/codesnippet/csharp/m-system.data.datarelati_1_1.cs)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Wartość <xref:System.Data.DataRelation.RelationName*>Właściwości.</xref:System.Data.DataRelation.RelationName*>"
  overload: System.Data.DataRelation.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.Data.DataException
  parent: System.Data
  isExternal: false
  name: DataException
  nameWithType: DataException
  fullName: System.Data.DataException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn,DataColumn)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn[],DataColumn[])
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,String,String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
- uid: System.Data.DataRelation.CheckStateForProperty
  parent: System.Data.DataRelation
  isExternal: false
  name: CheckStateForProperty()
  nameWithType: DataRelation.CheckStateForProperty()
  fullName: System.Data.DataRelation.CheckStateForProperty()
- uid: System.Data.DataRelation.ChildColumns
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildColumns
  nameWithType: DataRelation.ChildColumns
  fullName: System.Data.DataRelation.ChildColumns
- uid: System.Data.DataRelation.ChildKeyConstraint
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildKeyConstraint
  nameWithType: DataRelation.ChildKeyConstraint
  fullName: System.Data.DataRelation.ChildKeyConstraint
- uid: System.Data.ForeignKeyConstraint
  parent: System.Data
  isExternal: false
  name: ForeignKeyConstraint
  nameWithType: ForeignKeyConstraint
  fullName: System.Data.ForeignKeyConstraint
- uid: System.Data.DataRelation.ChildTable
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildTable
  nameWithType: DataRelation.ChildTable
  fullName: System.Data.DataRelation.ChildTable
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataRelation.DataSet
  parent: System.Data.DataRelation
  isExternal: false
  name: DataSet
  nameWithType: DataRelation.DataSet
  fullName: System.Data.DataRelation.DataSet
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.DataRelation.ExtendedProperties
  parent: System.Data.DataRelation
  isExternal: false
  name: ExtendedProperties
  nameWithType: DataRelation.ExtendedProperties
  fullName: System.Data.DataRelation.ExtendedProperties
- uid: System.Data.PropertyCollection
  parent: System.Data
  isExternal: false
  name: PropertyCollection
  nameWithType: PropertyCollection
  fullName: System.Data.PropertyCollection
- uid: System.Data.DataRelation.Nested
  parent: System.Data.DataRelation
  isExternal: false
  name: Nested
  nameWithType: DataRelation.Nested
  fullName: System.Data.DataRelation.Nested
- uid: System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Data.DataRelation
  isExternal: false
  name: OnPropertyChanging(PropertyChangedEventArgs)
  nameWithType: DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
  fullName: System.Data.DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Data.DataRelation.ParentColumns
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentColumns
  nameWithType: DataRelation.ParentColumns
  fullName: System.Data.DataRelation.ParentColumns
- uid: System.Data.DataRelation.ParentKeyConstraint
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentKeyConstraint
  nameWithType: DataRelation.ParentKeyConstraint
  fullName: System.Data.DataRelation.ParentKeyConstraint
- uid: System.Data.UniqueConstraint
  parent: System.Data
  isExternal: false
  name: UniqueConstraint
  nameWithType: UniqueConstraint
  fullName: System.Data.UniqueConstraint
- uid: System.Data.DataRelation.ParentTable
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentTable
  nameWithType: DataRelation.ParentTable
  fullName: System.Data.DataRelation.ParentTable
- uid: System.Data.DataRelation.RaisePropertyChanging(System.String)
  parent: System.Data.DataRelation
  isExternal: false
  name: RaisePropertyChanging(String)
  nameWithType: DataRelation.RaisePropertyChanging(String)
  fullName: System.Data.DataRelation.RaisePropertyChanging(String)
- uid: System.Data.DataRelation.RelationName
  parent: System.Data.DataRelation
  isExternal: false
  name: RelationName
  nameWithType: DataRelation.RelationName
  fullName: System.Data.DataRelation.RelationName
- uid: System.Data.DataRelation.ToString
  parent: System.Data.DataRelation
  isExternal: false
  name: ToString()
  nameWithType: DataRelation.ToString()
  fullName: System.Data.DataRelation.ToString()
- uid: System.Data.DataRelation.#ctor*
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation.DataRelation
- uid: System.Data.DataRelation.CheckStateForProperty*
  parent: System.Data.DataRelation
  isExternal: false
  name: CheckStateForProperty
  nameWithType: DataRelation.CheckStateForProperty
- uid: System.Data.DataRelation.ChildColumns*
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildColumns
  nameWithType: DataRelation.ChildColumns
- uid: System.Data.DataRelation.ChildKeyConstraint*
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildKeyConstraint
  nameWithType: DataRelation.ChildKeyConstraint
- uid: System.Data.DataRelation.ChildTable*
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildTable
  nameWithType: DataRelation.ChildTable
- uid: System.Data.DataRelation.DataSet*
  parent: System.Data.DataRelation
  isExternal: false
  name: DataSet
  nameWithType: DataRelation.DataSet
- uid: System.Data.DataRelation.ExtendedProperties*
  parent: System.Data.DataRelation
  isExternal: false
  name: ExtendedProperties
  nameWithType: DataRelation.ExtendedProperties
- uid: System.Data.DataRelation.Nested*
  parent: System.Data.DataRelation
  isExternal: false
  name: Nested
  nameWithType: DataRelation.Nested
- uid: System.Data.DataRelation.OnPropertyChanging*
  parent: System.Data.DataRelation
  isExternal: false
  name: OnPropertyChanging
  nameWithType: DataRelation.OnPropertyChanging
- uid: System.Data.DataRelation.ParentColumns*
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentColumns
  nameWithType: DataRelation.ParentColumns
- uid: System.Data.DataRelation.ParentKeyConstraint*
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentKeyConstraint
  nameWithType: DataRelation.ParentKeyConstraint
- uid: System.Data.DataRelation.ParentTable*
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentTable
  nameWithType: DataRelation.ParentTable
- uid: System.Data.DataRelation.RaisePropertyChanging*
  parent: System.Data.DataRelation
  isExternal: false
  name: RaisePropertyChanging
  nameWithType: DataRelation.RaisePropertyChanging
- uid: System.Data.DataRelation.RelationName*
  parent: System.Data.DataRelation
  isExternal: false
  name: RelationName
  nameWithType: DataRelation.RelationName
- uid: System.Data.DataRelation.ToString*
  parent: System.Data.DataRelation
  isExternal: false
  name: ToString
  nameWithType: DataRelation.ToString
