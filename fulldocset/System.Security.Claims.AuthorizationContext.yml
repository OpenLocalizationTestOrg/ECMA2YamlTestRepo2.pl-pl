### YamlMime:ManagedReference
items:
- uid: System.Security.Claims.AuthorizationContext
  id: AuthorizationContext
  children:
  - System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.Collections.ObjectModel.Collection{System.Security.Claims.Claim},System.Collections.ObjectModel.Collection{System.Security.Claims.Claim})
  - System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String)
  - System.Security.Claims.AuthorizationContext.Action
  - System.Security.Claims.AuthorizationContext.Principal
  - System.Security.Claims.AuthorizationContext.Resource
  langs:
  - csharp
  name: AuthorizationContext
  nameWithType: AuthorizationContext
  fullName: System.Security.Claims.AuthorizationContext
  type: Class
  summary: "Udostępnia informacje o kontekście zdarzenie autoryzacji. W tym podmiot zabezpieczeń, który reprezentuje obiekt wywołujący, zasób, który jest wymagany i akcji, która jest wykonywana."
  remarks: "Klasa elementu AuthorizationContext reprezentuje kontekst, który jest używany przez Menedżera autoryzacji oświadczeń, implementacja <xref:System.Security.Claims.ClaimsAuthorizationManager>klasy, aby określić, czy podmiot zabezpieczeń (temat) powinien mieć możliwość wykonania określoną akcję na danym zasobie.</xref:System.Security.Claims.ClaimsAuthorizationManager> Menedżer autoryzacji oświadczeń obliczane w kontekście autoryzacji <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>— Metoda i albo odmawia lub udziela dostępu na podstawie oświadczeń przedstawiony przez podmiot zabezpieczeń.</xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A>       <xref:System.Security.Claims.AuthorizationContext.Principal%2A>Właściwość zawiera podmiot zabezpieczeń, dla którego żąda autoryzacji, <xref:System.Security.Claims.AuthorizationContext.Resource%2A>właściwość zawiera zasób, na którym jest autoryzowanego podmiot zabezpieczeń, oraz <xref:System.Security.Claims.AuthorizationContext.Action%2A>właściwość zawiera akcje, które podmiot zabezpieczeń zamierza wykonać na zasobie.</xref:System.Security.Claims.AuthorizationContext.Action%2A> </xref:System.Security.Claims.AuthorizationContext.Resource%2A> </xref:System.Security.Claims.AuthorizationContext.Principal%2A> Zarówno zasobu i działania są reprezentowane jako zbiór oświadczeń; Jednak w większości przypadków, każda kolekcja zawiera jedno oświadczenie."
  example:
  - "The code example that is used in the AuthorizationContext topic is taken from the `Claims Based Authorization` sample. This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration. This custom manager consists of three basic components: a class derived from <xref:System.Security.Claims.ClaimsAuthorizationManager> that implements the manager, the `ResourceAction` class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file. This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources. Not all elements are shown for the sake of brevity. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code shows the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> method for the custom claims authorization manager. A function that evaluates the principal based on the resource and action specified in the AuthorizationContext is invoked. This function returns either `true` or `false`, which either grants or denies access to the principal.  \n  \n [!code-cs[WifClaimsBasedAuthorization#3](~/add/codesnippet/csharp/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#3)]  \n[!code-cs[WifClaimsBasedAuthorization#5](~/add/codesnippet/csharp/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#5)]  \n  \n The following XML shows an example of the authorization policy that was specified in configuration. In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource. In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource. In all others, the principal is automatically granted access regardless of the claims it possesses.  \n  \n```xml  \n<system.identityModel>  \n  <identityConfiguration>  \n    <claimsAuthorizationManager type=\"ClaimsAuthorizationLibrary.MyClaimsAuthorizationManager, ClaimsAuthorizationLibrary\">  \n      <policy resource=\"http://localhost:28491/Developers.aspx\" action=\"GET\">  \n        <or>  \n          <claim claimType=\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\" claimValue=\"developer\" />  \n          <claim claimType=\"http://schemas.xmlsoap.org/claims/Group\" claimValue=\"Administrator\" />  \n        </or>  \n      </policy>  \n      <policy resource=\"http://localhost:28491/Administrators.aspx\" action=\"GET\">  \n        <and>  \n          <claim claimType=\"http://schemas.xmlsoap.org/claims/Group\" claimValue=\"Administrator\" />  \n          <claim claimType=\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country\" claimValue=\"USA\" />  \n        </and>  \n      </policy>  \n      <policy resource=\"http://localhost:28491/Default.aspx\" action=\"GET\">  \n      </policy>  \n      <policy resource=\"http://localhost:28491/\" action=\"GET\">  \n      </policy>  \n      <policy resource=\"http://localhost:28491/Claims.aspx\" action=\"GET\">  \n      </policy>  \n    </claimsAuthorizationManager>  \n  \n    ...  \n  \n  </identityConfiguration>  \n</system.identityModel>  \n```"
  syntax:
    content: public class AuthorizationContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.Collections.ObjectModel.Collection{System.Security.Claims.Claim},System.Collections.ObjectModel.Collection{System.Security.Claims.Claim})
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Collections.ObjectModel.Collection{System.Security.Claims.Claim},System.Collections.ObjectModel.Collection{System.Security.Claims.Claim})'
  parent: System.Security.Claims.AuthorizationContext
  langs:
  - csharp
  name: AuthorizationContext(ClaimsPrincipal,Collection<Claim>,Collection<Claim>)
  nameWithType: AuthorizationContext.AuthorizationContext(ClaimsPrincipal,Collection<Claim>,Collection<Claim>)
  fullName: System.Security.Claims.AuthorizationContext.AuthorizationContext(ClaimsPrincipal,Collection<Claim>,Collection<Claim>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.AuthorizationContext&quot;> </xref> z określony podmiot zabezpieczeń, zasobu oświadczeń i oświadczeń akcji."
  syntax:
    content: public AuthorizationContext (System.Security.Claims.ClaimsPrincipal principal, System.Collections.ObjectModel.Collection<System.Security.Claims.Claim> resource, System.Collections.ObjectModel.Collection<System.Security.Claims.Claim> action);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "Podmiot zabezpieczeń, dla której ma zostać sprawdzony autoryzacji."
    - id: resource
      type: System.Collections.ObjectModel.Collection{System.Security.Claims.Claim}
      description: "Kolekcja oświadczeń reprezentuje zasobu, dla którego ma zostać autoryzowana podmiot zabezpieczeń. Kolekcja zawiera zwykle pojedynczy element."
    - id: action
      type: System.Collections.ObjectModel.Collection{System.Security.Claims.Claim}
      description: "Kolekcja oświadczeń, która reprezentuje akcję do wykonania w zasobie. Kolekcja zawiera zwykle pojedynczy element."
  overload: System.Security.Claims.AuthorizationContext.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>principal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>resource</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>action</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String)'
  parent: System.Security.Claims.AuthorizationContext
  langs:
  - csharp
  name: AuthorizationContext(ClaimsPrincipal,String,String)
  nameWithType: AuthorizationContext.AuthorizationContext(ClaimsPrincipal,String,String)
  fullName: System.Security.Claims.AuthorizationContext.AuthorizationContext(ClaimsPrincipal,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Claims.AuthorizationContext&quot;> </xref> z określony podmiot zabezpieczeń, nazwy zasobów i nazwy akcji."
  remarks: "<xref:System.Security.Claims.AuthorizationContext.Action%2A>Właściwość jest inicjowana zawierają nazwę oświadczenia (<xref:System.Security.Claims.ClaimTypes.Name?displayProperty=fullName>) z wartością określony przez `action` parametru.</xref:System.Security.Claims.ClaimTypes.Name?displayProperty=fullName> </xref:System.Security.Claims.AuthorizationContext.Action%2A> <xref:System.Security.Claims.AuthorizationContext.Resource%2A>Właściwość jest inicjowana zawiera oświadczenia nazwy, która ma wartość określoną przez `resource` parametru.</xref:System.Security.Claims.AuthorizationContext.Resource%2A>"
  syntax:
    content: public AuthorizationContext (System.Security.Claims.ClaimsPrincipal principal, string resource, string action);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "Podmiot zabezpieczeń, dla której ma zostać sprawdzony autoryzacji."
    - id: resource
      type: System.String
      description: "Zasób, dla którego ma zostać autoryzowana podmiot zabezpieczeń. Zasób jest określony jako wartość oświadczenia nazwy."
    - id: action
      type: System.String
      description: "Akcja do wykonania w zasobie. Akcja jest określona jako wartość oświadczenia nazwy."
  overload: System.Security.Claims.AuthorizationContext.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>principal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>resource</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>action</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.AuthorizationContext.Action
  id: Action
  parent: System.Security.Claims.AuthorizationContext
  langs:
  - csharp
  name: Action
  nameWithType: AuthorizationContext.Action
  fullName: System.Security.Claims.AuthorizationContext.Action
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "Pobiera akcję, dla którego ma zostać autoryzowana podmiot zabezpieczeń."
  remarks: "Kolekcja zawiera zwykle pojedynczy element."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Security.Claims.Claim> Action { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Security.Claims.Claim}
      description: "Kolekcja oświadczeń, która reprezentuje akcje, które są odpowiednie do żądania."
  overload: System.Security.Claims.AuthorizationContext.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.AuthorizationContext.Principal
  id: Principal
  parent: System.Security.Claims.AuthorizationContext
  langs:
  - csharp
  name: Principal
  nameWithType: AuthorizationContext.Principal
  fullName: System.Security.Claims.AuthorizationContext.Principal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "Pobiera podmiot zabezpieczeń (temat) dla autoryzacji, który jest wymagany."
  syntax:
    content: public System.Security.Claims.ClaimsPrincipal Principal { get; }
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: "Podmiot zabezpieczeń, dla którego żąda autoryzacji."
  overload: System.Security.Claims.AuthorizationContext.Principal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.AuthorizationContext.Resource
  id: Resource
  parent: System.Security.Claims.AuthorizationContext
  langs:
  - csharp
  name: Resource
  nameWithType: AuthorizationContext.Resource
  fullName: System.Security.Claims.AuthorizationContext.Resource
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.Security.Claims
  summary: "Pobiera zasób, na którym ma być dopuszczone podmiot zabezpieczeń."
  remarks: "Kolekcja zawiera zwykle pojedynczy element."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Security.Claims.Claim> Resource { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Security.Claims.Claim}
      description: "Kolekcja oświadczeń, która reprezentuje zasobu."
  overload: System.Security.Claims.AuthorizationContext.Resource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.Collections.ObjectModel.Collection{System.Security.Claims.Claim},System.Collections.ObjectModel.Collection{System.Security.Claims.Claim})
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: AuthorizationContext(ClaimsPrincipal,Collection<Claim>,Collection<Claim>)
  nameWithType: AuthorizationContext.AuthorizationContext(ClaimsPrincipal,Collection<Claim>,Collection<Claim>)
  fullName: System.Security.Claims.AuthorizationContext.AuthorizationContext(ClaimsPrincipal,Collection<Claim>,Collection<Claim>)
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Collections.ObjectModel.Collection{System.Security.Claims.Claim}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Claim>
  nameWithType: Collection<Claim>
  fullName: System.Collections.ObjectModel.Collection<System.Security.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Security.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String)
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: AuthorizationContext(ClaimsPrincipal,String,String)
  nameWithType: AuthorizationContext.AuthorizationContext(ClaimsPrincipal,String,String)
  fullName: System.Security.Claims.AuthorizationContext.AuthorizationContext(ClaimsPrincipal,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.AuthorizationContext.Action
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: Action
  nameWithType: AuthorizationContext.Action
  fullName: System.Security.Claims.AuthorizationContext.Action
- uid: System.Security.Claims.AuthorizationContext.Principal
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: Principal
  nameWithType: AuthorizationContext.Principal
  fullName: System.Security.Claims.AuthorizationContext.Principal
- uid: System.Security.Claims.AuthorizationContext.Resource
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: Resource
  nameWithType: AuthorizationContext.Resource
  fullName: System.Security.Claims.AuthorizationContext.Resource
- uid: System.Security.Claims.AuthorizationContext.#ctor*
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: AuthorizationContext
  nameWithType: AuthorizationContext.AuthorizationContext
- uid: System.Security.Claims.AuthorizationContext.Action*
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: Action
  nameWithType: AuthorizationContext.Action
- uid: System.Security.Claims.AuthorizationContext.Principal*
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: Principal
  nameWithType: AuthorizationContext.Principal
- uid: System.Security.Claims.AuthorizationContext.Resource*
  parent: System.Security.Claims.AuthorizationContext
  isExternal: false
  name: Resource
  nameWithType: AuthorizationContext.Resource
