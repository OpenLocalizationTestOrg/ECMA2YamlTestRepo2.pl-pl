### YamlMime:ManagedReference
items:
- uid: System.Drawing.RectangleF
  id: RectangleF
  children:
  - System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  - System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.RectangleF.Bottom
  - System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  - System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Contains(System.Single,System.Single)
  - System.Drawing.RectangleF.Empty
  - System.Drawing.RectangleF.Equals(System.Object)
  - System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.RectangleF.GetHashCode
  - System.Drawing.RectangleF.Height
  - System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  - System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  - System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.IsEmpty
  - System.Drawing.RectangleF.Left
  - System.Drawing.RectangleF.Location
  - System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  - System.Drawing.RectangleF.Offset(System.Single,System.Single)
  - System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)
  - System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Right
  - System.Drawing.RectangleF.Size
  - System.Drawing.RectangleF.Top
  - System.Drawing.RectangleF.ToString
  - System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Width
  - System.Drawing.RectangleF.X
  - System.Drawing.RectangleF.Y
  langs:
  - csharp
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
  type: Struct
  summary: "Przechowuje zestaw czterech liczb zmiennoprzecinkowych, które reprezentują lokalizacja i rozmiar prostokąta. Bardziej zaawansowane funkcje regionu, użyj <xref href=&quot;System.Drawing.Region&quot;> </xref> obiektu."
  remarks: "Prostokąt jest określany przez jego szerokości, wysokości i lewym górnym rogu."
  syntax:
    content: public struct RectangleF
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  id: '#ctor(System.Drawing.PointF,System.Drawing.SizeF)'
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: RectangleF(PointF,SizeF)
  nameWithType: RectangleF.RectangleF(PointF,SizeF)
  fullName: System.Drawing.RectangleF.RectangleF(PointF,SizeF)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> z określonej lokalizacji i rozmiaru."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.RectangleF.op_Implicit%2A>, RectangleF, and <xref:System.Drawing.RectangleF.op_Equality%2A> members. This example is designed for use with a Windows Form. Paste this code into a form and call the `ConvertRectangleToRectangleF` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/csharp/5d8998f0-9d41-440a-a9e3-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/cpp/5d8998f0-9d41-440a-a9e3-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/visualbasic/5d8998f0-9d41-440a-a9e3-_1.vb)]"
  syntax:
    content: public RectangleF (System.Drawing.PointF location, System.Drawing.SizeF size);
    parameters:
    - id: location
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> reprezentujący lewego górnego rogu prostokątny obszar."
    - id: size
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref> reprezentujący szerokość i wysokość prostokątny obszar."
  overload: System.Drawing.RectangleF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: RectangleF(Single,Single,Single,Single)
  nameWithType: RectangleF.RectangleF(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.RectangleF(Single,Single,Single,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> z określonej lokalizacji i rozmiaru."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the RectangleF, <xref:System.Drawing.Rectangle.Round%2A> and <xref:System.Drawing.Rectangle.Truncate%2A> members. This example is designed for use with a Windows Form.  Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/03a5ad52-9050-4211-8a75-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/03a5ad52-9050-4211-8a75-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/03a5ad52-9050-4211-8a75-_1.vb)]"
  syntax:
    content: public RectangleF (float x, float y, float width, float height);
    parameters:
    - id: x
      type: System.Single
      description: "Współrzędna x górnego lewego rogu prostokąta."
    - id: y
      type: System.Single
      description: "Współrzędna y górnego lewego rogu prostokąta."
    - id: width
      type: System.Single
      description: "Szerokość krawędzi prostokąta."
    - id: height
      type: System.Single
      description: "Wysokość prostokąta."
  overload: System.Drawing.RectangleF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Bottom
  id: Bottom
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Bottom
  nameWithType: RectangleF.Bottom
  fullName: System.Drawing.RectangleF.Bottom
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera współrzędną y, który jest sumą <> </> *> i <> </> *> tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  remarks: "Wartość dolnej reprezentuje współrzędną y pierwszego punktu do dolnej krawędzi prostokąta, który nie jest zawarty w prostokącie."
  syntax:
    content: public float Bottom { get; }
    return:
      type: System.Single
      description: "Współrzędna y, który jest sumą <> </> *> i <> </> *> tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  overload: System.Drawing.RectangleF.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  id: Contains(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Contains(PointF)
  nameWithType: RectangleF.Contains(PointF)
  fullName: System.Drawing.RectangleF.Contains(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Określa, czy określony punkt znajduje się w ramach tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  syntax:
    content: public bool Contains (System.Drawing.PointF pt);
    parameters:
    - id: pt
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;> </xref> Do testowania."
    return:
      type: System.Boolean
      description: "Ta metoda zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli punkt reprezentowany przez <code> pt </code> parametru jest zawarty w tym <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.RectangleF.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  id: Contains(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Contains(RectangleF)
  nameWithType: RectangleF.Contains(RectangleF)
  fullName: System.Drawing.RectangleF.Contains(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Określa, czy prostokątny obszar reprezentowany przez <code> rect </code> całkowicie zawarty w tym <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  syntax:
    content: public bool Contains (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> Do testowania."
    return:
      type: System.Boolean
      description: "Ta metoda zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli prostokątny obszar reprezentowany przez <code> rect </code> całkowicie zawarty w prostokątny obszar reprezentowany przez to <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.RectangleF.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Contains(System.Single,System.Single)
  id: Contains(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Contains(Single,Single)
  nameWithType: RectangleF.Contains(Single,Single)
  fullName: System.Drawing.RectangleF.Contains(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Określa, czy określony punkt znajduje się w ramach tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  syntax:
    content: public bool Contains (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "Współrzędna x punktu do testowania."
    - id: y
      type: System.Single
      description: "Współrzędna y punktu do testowania."
    return:
      type: System.Boolean
      description: "Ta metoda zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli punkt określony przez <code> x </code> i <code> y </code> jest zawarty w tym <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.RectangleF.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Empty
  id: Empty
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Empty
  nameWithType: RectangleF.Empty
  fullName: System.Drawing.RectangleF.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Reprezentuje wystąpienie <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> klasy z jego elementów członkowskich odinicjowany."
  remarks: "Elementy członkowskie nowej <xref:System.Drawing.RectangleF>Pozostało niezainicjowanej.</xref:System.Drawing.RectangleF>"
  syntax:
    content: public static readonly System.Drawing.RectangleF Empty;
    return:
      type: System.Drawing.RectangleF
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: RectangleF.Equals(Object)
  fullName: System.Drawing.RectangleF.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Testy czy <code> obj </code> jest <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> z tej samej lokalizacji i rozmiaru to <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>Do testowania</xref:System.Object>"
    return:
      type: System.Boolean
      description: "Ta metoda zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli <code> obj </code> jest <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> i jego <xref uid=&quot;langword_csharp_X&quot; name=&quot;X&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Y&quot; name=&quot;Y&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Width&quot; name=&quot;Width&quot; href=&quot;&quot;> </xref>, i <xref uid=&quot;langword_csharp_Height&quot; name=&quot;Height&quot; href=&quot;&quot;> </xref> właściwości są równe odpowiednich właściwościach <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.RectangleF.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  id: FromLTRB(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: FromLTRB(Single,Single,Single,Single)
  nameWithType: RectangleF.FromLTRB(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.FromLTRB(Single,Single,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tworzy <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury z lewym górnym rogu i prawym dolnym rogu w określonych lokalizacjach."
  remarks: "Ta metoda tworzy <xref:System.Drawing.RectangleF>z określonym narożnikami górnego lewego i prawego dolnego.</xref:System.Drawing.RectangleF>"
  syntax:
    content: public static System.Drawing.RectangleF FromLTRB (float left, float top, float right, float bottom);
    parameters:
    - id: left
      type: System.Single
      description: "Współrzędna x górnego lewego rogu prostokątny obszar."
    - id: top
      type: System.Single
      description: "Współrzędna y górnego lewego rogu prostokątny obszar."
    - id: right
      type: System.Single
      description: "Współrzędna x prawym dolnym rogu prostokątny obszar."
    - id: bottom
      type: System.Single
      description: "Współrzędna y prawego dolnego rogu prostokątny obszar."
    return:
      type: System.Drawing.RectangleF
      description: "Nowy <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> tworzącą tę metodę."
  overload: System.Drawing.RectangleF.FromLTRB*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.GetHashCode
  id: GetHashCode
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: RectangleF.GetHashCode()
  fullName: System.Drawing.RectangleF.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera wartość skrótu dla tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury. Aby uzyskać informacje o wykorzystaniu skrótu, zobacz <xref uid=&quot;langword_csharp_Object.GetHashCode&quot; name=&quot;Object.GetHashCode&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu dla tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>."
  overload: System.Drawing.RectangleF.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Height
  id: Height
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Height
  nameWithType: RectangleF.Height
  fullName: System.Drawing.RectangleF.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera lub Ustawia wysokość tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  syntax:
    content: public float Height { get; set; }
    return:
      type: System.Single
      description: "Wysokość tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury. Wartość domyślna to 0."
  overload: System.Drawing.RectangleF.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  id: Inflate(System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Inflate(SizeF)
  nameWithType: RectangleF.Inflate(SizeF)
  fullName: System.Drawing.RectangleF.Inflate(SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zwiększa to <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> o określonej szerokości."
  remarks: "Dzięki tej metodzie prostokąta, nie kopii. Prostokąt powiększenia w obu kierunkach wzdłuż osi. Na przykład, jeśli prostokąt 50 przez 50 zwiększony jest o 50 w osi x, wynikowe prostokąt będzie 150 jednostki długi (oryginalny 50, 50 w kierunku minus i 50 w kierunku plus) utrzymania center geometrycznych prostokąta."
  example:
  - "This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> e, an OnPaint event object. The code creates a <xref:System.Drawing.RectangleF> and draws it to the screen in black. Notice that it has to be converted to a <xref:System.Drawing.Rectangle> for drawing purposes. Then the code enlarges the <xref:System.Drawing.RectangleF>, again converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in red. Notice that the original (black) rectangle is expanded in both directions along the x-axis by 100 points.  \n  \n [!code-vb[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.rectang_5_1.vb)]\n [!code-cs[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/csharp/m-system.drawing.rectang_5_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#1](~/add/codesnippet/cpp/m-system.drawing.rectang_5_1.cpp)]"
  syntax:
    content: public void Inflate (System.Drawing.SizeF size);
    parameters:
    - id: size
      type: System.Drawing.SizeF
      description: "Kwota zwiększyć prostokąta."
  overload: System.Drawing.RectangleF.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  id: Inflate(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Inflate(Single,Single)
  nameWithType: RectangleF.Inflate(Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zwiększa to <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury o określonej szerokości."
  remarks: "Dzięki tej metodzie prostokąta, nie kopii. Prostokąt powiększenia w obu kierunkach wzdłuż osi. Na przykład, jeśli prostokąt 50 przez 50 zwiększony jest o 50 w osi x, wynikowe prostokąt będzie 150 jednostki długi (oryginalny 50, 50 w kierunku minus i 50 w kierunku plus) utrzymania center geometrycznych prostokąta.       Jeśli dowolny `x` lub `y` jest ujemna, <xref:System.Drawing.RectangleF>jest zmniejszony w odpowiednich kierunku.</xref:System.Drawing.RectangleF>"
  syntax:
    content: public void Inflate (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "Wielkość, to zwiększyć <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury w poziomie."
    - id: y
      type: System.Single
      description: "Wielkość, to zwiększyć <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury w pionie."
  overload: System.Drawing.RectangleF.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  id: Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Inflate(RectangleF,Single,Single)
  nameWithType: RectangleF.Inflate(RectangleF,Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(RectangleF,Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tworzy i zwraca rozszerzonej kopię określonego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury. Kopia powiększenia przy określonym i oryginalnego prostokąt pozostaje niezmieniona."
  remarks: "Ta metoda tworzy kopię `rect`, powiększa kopii, a następnie zwraca rozszerzonej kopiowania. Prostokąt powiększenia w obu kierunkach wzdłuż osi. Na przykład, jeśli prostokąt 50 przez 50 zwiększony jest o 50 w osi x, wynikowe prostokąt będzie 150 jednostki długi (oryginalny 50, 50 w kierunku minus i 50 w kierunku plus) utrzymania center geometrycznych prostokąta."
  syntax:
    content: public static System.Drawing.RectangleF Inflate (System.Drawing.RectangleF rect, float x, float y);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> Do skopiowania. Prostokąt nie jest modyfikowany."
    - id: x
      type: System.Single
      description: "Kwota Aby powiększyć kopię prostokąt w poziomie."
    - id: y
      type: System.Single
      description: "Wielkość, aby powiększyć kopię prostokąt w pionie."
    return:
      type: System.Drawing.RectangleF
      description: "Rozszerzonej <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>."
  overload: System.Drawing.RectangleF.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  id: Intersect(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Intersect(RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zastępuje to <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury z przecięcia się i określonego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  syntax:
    content: public void Intersect (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Prostokąt intersect."
  overload: System.Drawing.RectangleF.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Intersect(RectangleF,RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Zwraca <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> strukturę, która reprezentuje część wspólną dwóch prostokątów. Jeśli nie przecięcia i pusta <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> jest zwracany."
  remarks: ''
  example:
  - "This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code creates two <xref:System.Drawing.RectangleF> objects and draws them to the screen in black and red. Notice that they have to be converted to <xref:System.Drawing.Rectangle> objects for drawing purposes. Then the code creates a third <xref:System.Drawing.RectangleF> using the <xref:System.Drawing.RectangleF.Intersect%2A> method, converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in blue. Notice the third (blue) rectangle is the area of overlap of the other two rectangles:  \n  \n [!code-vb[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/visualbasic/47bd303e-f7ea-48d0-ae6d-_1.vb)]\n [!code-cs[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/csharp/47bd303e-f7ea-48d0-ae6d-_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#2](~/add/codesnippet/cpp/47bd303e-f7ea-48d0-ae6d-_1.cpp)]"
  syntax:
    content: public static System.Drawing.RectangleF Intersect (System.Drawing.RectangleF a, System.Drawing.RectangleF b);
    parameters:
    - id: a
      type: System.Drawing.RectangleF
      description: "Prostokąt intersect."
    - id: b
      type: System.Drawing.RectangleF
      description: "Prostokąt intersect."
    return:
      type: System.Drawing.RectangleF
      description: "W trzecim <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> rozmiar, który reprezentuje obszar nakładających się dwóch prostokątów określonej struktury."
  overload: System.Drawing.RectangleF.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  id: IntersectsWith(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: IntersectsWith(RectangleF)
  nameWithType: RectangleF.IntersectsWith(RectangleF)
  fullName: System.Drawing.RectangleF.IntersectsWith(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Określa, czy prostokąta przecina z <code> rect </code>."
  syntax:
    content: public bool IntersectsWith (System.Drawing.RectangleF rect);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Prostokąt do testowania."
    return:
      type: System.Boolean
      description: "Ta metoda zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> w przypadku dowolnego punktu przecięcia."
  overload: System.Drawing.RectangleF.IntersectsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.IsEmpty
  id: IsEmpty
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
  fullName: System.Drawing.RectangleF.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Testy czy <> </> *> lub <> </> *> właściwości tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> ma wartość zero."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "Ta właściwość zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli <> </> *> lub <> </> *> właściwości tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> ma wartość równą zero, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.RectangleF.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Left
  id: Left
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Left
  nameWithType: RectangleF.Left
  fullName: System.Drawing.RectangleF.Left
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera współrzędną x lewej krawędzi <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  syntax:
    content: public float Left { get; }
    return:
      type: System.Single
      description: "Współrzędną x lewej krawędzi <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  overload: System.Drawing.RectangleF.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Location
  id: Location
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Location
  nameWithType: RectangleF.Location
  fullName: System.Drawing.RectangleF.Location
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera lub ustawia współrzędne górnego lewego rogu to <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  syntax:
    content: public System.Drawing.PointF Location { get; set; }
    return:
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> reprezentujący lewego górnego rogu tej <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  overload: System.Drawing.RectangleF.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  id: Offset(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Offset(PointF)
  nameWithType: RectangleF.Offset(PointF)
  fullName: System.Drawing.RectangleF.Offset(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ustawia lokalizację prostokąta przez określony."
  syntax:
    content: public void Offset (System.Drawing.PointF pos);
    parameters:
    - id: pos
      type: System.Drawing.PointF
      description: "Wartość przesunięcia lokalizacji."
  overload: System.Drawing.RectangleF.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Offset(System.Single,System.Single)
  id: Offset(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Offset(Single,Single)
  nameWithType: RectangleF.Offset(Single,Single)
  fullName: System.Drawing.RectangleF.Offset(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ustawia lokalizację prostokąta przez określony."
  syntax:
    content: public void Offset (float x, float y);
    parameters:
    - id: x
      type: System.Single
      description: "Kwota na poziomie przesunięcie lokalizacji."
    - id: y
      type: System.Single
      description: "Wartość przesunięcia lokalizację w pionie."
  overload: System.Drawing.RectangleF.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: op_Equality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Equality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Equality(RectangleF,RectangleF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Sprawdza, czy dwa <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> konstrukcji jest taki sam, lokalizacja i rozmiar."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.RectangleF.op_Implicit%2A>, <xref:System.Drawing.RectangleF.%23ctor%2A>and Equality members. This example is designed for use with a Windows Form. Paste this code into a form and call the `ConvertRectangleToRectangleF` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/csharp/e6058e88-3cbe-4600-981e-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/cpp/e6058e88-3cbe-4600-981e-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#6](~/add/codesnippet/visualbasic/e6058e88-3cbe-4600-981e-_1.vb)]"
  syntax:
    content: public static bool op_Equality (System.Drawing.RectangleF left, System.Drawing.RectangleF right);
    parameters:
    - id: left
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> Struktury z lewej strony operatora równości."
    - id: right
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> Struktury z prawej strony operatora równości."
    return:
      type: System.Boolean
      description: "Ten operator zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli dwa określone <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> mają takie same struktury <> </> *>, <> </> *>, <> </> *>, i <> </> *> właściwości."
  overload: System.Drawing.RectangleF.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)
  id: op_Implicit(System.Drawing.Rectangle)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: op_Implicit(Rectangle)
  nameWithType: RectangleF.op_Implicit(Rectangle)
  fullName: System.Drawing.RectangleF.op_Implicit(Rectangle)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public static System.Drawing.RectangleF op_Implicit (System.Drawing.Rectangle r);
    parameters:
    - id: r
      type: System.Drawing.Rectangle
      description: "Do dodania."
    return:
      type: System.Drawing.RectangleF
      description: "Do dodania."
  overload: System.Drawing.RectangleF.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: op_Inequality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Inequality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Inequality(RectangleF,RectangleF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Sprawdza, czy dwa <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury różnią się w lokalizacji ani rozmiaru."
  syntax:
    content: public static bool op_Inequality (System.Drawing.RectangleF left, System.Drawing.RectangleF right);
    parameters:
    - id: left
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> Struktury z lewej strony operator nierówności."
    - id: right
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref> Struktury z prawej strony operator nierówności."
    return:
      type: System.Boolean
      description: "Ten operator zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> czy <> </> *>, <> </> *>, <> </> *>, lub <> </> *> właściwości dwóch <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struktury są nierówne; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.RectangleF.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Right
  id: Right
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Right
  nameWithType: RectangleF.Right
  fullName: System.Drawing.RectangleF.Right
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera współrzędną x, który jest sumą <> </> *> i <> </> *> tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  remarks: "Wartość prawej strony Określa współrzędną x pierwszego punktu w prawej krawędzi prostokąta, który nie jest zawarty w prostokącie."
  syntax:
    content: public float Right { get; }
    return:
      type: System.Single
      description: "Współrzędna x, który jest sumą <> </> *> i <> </> *> tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  overload: System.Drawing.RectangleF.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Size
  id: Size
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Size
  nameWithType: RectangleF.Size
  fullName: System.Drawing.RectangleF.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera lub ustawia rozmiar to <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>."
  syntax:
    content: public System.Drawing.SizeF Size { get; set; }
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref> reprezentujący szerokość i wysokość tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  overload: System.Drawing.RectangleF.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Top
  id: Top
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Top
  nameWithType: RectangleF.Top
  fullName: System.Drawing.RectangleF.Top
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera współrzędną y górnej krawędzi <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  syntax:
    content: public float Top { get; }
    return:
      type: System.Single
      description: "Współrzędna y górnej krawędzi <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  overload: System.Drawing.RectangleF.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.ToString
  id: ToString
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: ToString()
  nameWithType: RectangleF.ToString()
  fullName: System.Drawing.RectangleF.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Konwertuje <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> i <xref href=&quot;System.Drawing.Size&quot;> </xref> tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> ciąg zrozumiałą dla użytkownika."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Ciąg, który zawiera pozycję, szerokość i wysokość tego <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury. Na przykład &quot;{X =&20;, Y =&20; Width =&100;, wysokość =&50;}&quot;."
  overload: System.Drawing.RectangleF.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Union(RectangleF,RectangleF)
  nameWithType: RectangleF.Union(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Union(RectangleF,RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tworzy najmniejszy możliwe prostokąt trzeci może zawierać zarówno dwóch prostokątów, które tworzą Unii."
  remarks: "Gdy jeden z dwóch prostokątów jest pusta, co oznacza wszystkie wartości są zero, <xref:System.Drawing.Rectangle.Union%2A>Metoda zwraca prostokąt z początkowy punkt (0, 0) oraz szerokość i wysokość prostokąta niepustym.</xref:System.Drawing.Rectangle.Union%2A> Na przykład, jeśli masz dwie = prostokąty A (0, 0; 0, 0) i B = (1, 1; 2, 2), następnie Unii A i b (0, 0; 2, 2)."
  example:
  - "This example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs> e, an <xref:System.Windows.Forms.Control.OnPaint%2A> event object. The code creates two <xref:System.Drawing.RectangleF> s and draws them to the screen in black and red. Notice that they have to be converted to <xref:System.Drawing.Rectangle> s for drawing purposes. Then the code creates a third <xref:System.Drawing.RectangleF> using the Union method, converts it to a <xref:System.Drawing.Rectangle>, and draws it to the screen in blue. Notice the third (blue) rectangle is the smallest possible rectangle that can contain both of the other two rectangles:  \n  \n [!code-vb[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/visualbasic/2f1239b4-8abf-4ed8-9c26-_1.vb)]\n [!code-cs[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/csharp/2f1239b4-8abf-4ed8-9c26-_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleFExamples#3](~/add/codesnippet/cpp/2f1239b4-8abf-4ed8-9c26-_1.cpp)]"
  syntax:
    content: public static System.Drawing.RectangleF Union (System.Drawing.RectangleF a, System.Drawing.RectangleF b);
    parameters:
    - id: a
      type: System.Drawing.RectangleF
      description: "Prostokąt Unii."
    - id: b
      type: System.Drawing.RectangleF
      description: "Prostokąt Unii."
    return:
      type: System.Drawing.RectangleF
      description: "W trzecim <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> strukturę, która zawiera dwa prostokątów, które tworzą Unii."
  overload: System.Drawing.RectangleF.Union*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Width
  id: Width
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Width
  nameWithType: RectangleF.Width
  fullName: System.Drawing.RectangleF.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera lub ustawia szerokość to <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  syntax:
    content: public float Width { get; set; }
    return:
      type: System.Single
      description: "Szerokość to <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury. Wartość domyślna to 0."
  overload: System.Drawing.RectangleF.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.X
  id: X
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: X
  nameWithType: RectangleF.X
  fullName: System.Drawing.RectangleF.X
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera lub ustawia współrzędną x lewego górnego rogu tej <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  syntax:
    content: public float X { get; set; }
    return:
      type: System.Single
      description: "Współrzędna x górnego lewego rogu to <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury. Wartość domyślna to 0."
  overload: System.Drawing.RectangleF.X*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.RectangleF.Y
  id: Y
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  name: Y
  nameWithType: RectangleF.Y
  fullName: System.Drawing.RectangleF.Y
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Pobiera lub ustawia współrzędną y lewego górnego rogu tej <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury."
  syntax:
    content: public float Y { get; set; }
    return:
      type: System.Single
      description: "Współrzędna y lewego górnego rogu tej <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struktury. Wartość domyślna to 0."
  overload: System.Drawing.RectangleF.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: RectangleF(PointF,SizeF)
  nameWithType: RectangleF.RectangleF(PointF,SizeF)
  fullName: System.Drawing.RectangleF.RectangleF(PointF,SizeF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: RectangleF(Single,Single,Single,Single)
  nameWithType: RectangleF.RectangleF(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.RectangleF(Single,Single,Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.RectangleF.Bottom
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Bottom
  nameWithType: RectangleF.Bottom
  fullName: System.Drawing.RectangleF.Bottom
- uid: System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains(PointF)
  nameWithType: RectangleF.Contains(PointF)
  fullName: System.Drawing.RectangleF.Contains(PointF)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains(RectangleF)
  nameWithType: RectangleF.Contains(RectangleF)
  fullName: System.Drawing.RectangleF.Contains(RectangleF)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.RectangleF.Contains(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains(Single,Single)
  nameWithType: RectangleF.Contains(Single,Single)
  fullName: System.Drawing.RectangleF.Contains(Single,Single)
- uid: System.Drawing.RectangleF.Empty
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Empty
  nameWithType: RectangleF.Empty
  fullName: System.Drawing.RectangleF.Empty
- uid: System.Drawing.RectangleF.Equals(System.Object)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Equals(Object)
  nameWithType: RectangleF.Equals(Object)
  fullName: System.Drawing.RectangleF.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: FromLTRB(Single,Single,Single,Single)
  nameWithType: RectangleF.FromLTRB(Single,Single,Single,Single)
  fullName: System.Drawing.RectangleF.FromLTRB(Single,Single,Single,Single)
- uid: System.Drawing.RectangleF.GetHashCode
  parent: System.Drawing.RectangleF
  isExternal: false
  name: GetHashCode()
  nameWithType: RectangleF.GetHashCode()
  fullName: System.Drawing.RectangleF.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.RectangleF.Height
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Height
  nameWithType: RectangleF.Height
  fullName: System.Drawing.RectangleF.Height
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate(SizeF)
  nameWithType: RectangleF.Inflate(SizeF)
  fullName: System.Drawing.RectangleF.Inflate(SizeF)
- uid: System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate(Single,Single)
  nameWithType: RectangleF.Inflate(Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(Single,Single)
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate(RectangleF,Single,Single)
  nameWithType: RectangleF.Inflate(RectangleF,Single,Single)
  fullName: System.Drawing.RectangleF.Inflate(RectangleF,Single,Single)
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Intersect(RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF)
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Intersect(RectangleF,RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IntersectsWith(RectangleF)
  nameWithType: RectangleF.IntersectsWith(RectangleF)
  fullName: System.Drawing.RectangleF.IntersectsWith(RectangleF)
- uid: System.Drawing.RectangleF.IsEmpty
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
  fullName: System.Drawing.RectangleF.IsEmpty
- uid: System.Drawing.RectangleF.Left
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Left
  nameWithType: RectangleF.Left
  fullName: System.Drawing.RectangleF.Left
- uid: System.Drawing.RectangleF.Location
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Location
  nameWithType: RectangleF.Location
  fullName: System.Drawing.RectangleF.Location
- uid: System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Offset(PointF)
  nameWithType: RectangleF.Offset(PointF)
  fullName: System.Drawing.RectangleF.Offset(PointF)
- uid: System.Drawing.RectangleF.Offset(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Offset(Single,Single)
  nameWithType: RectangleF.Offset(Single,Single)
  fullName: System.Drawing.RectangleF.Offset(Single,Single)
- uid: System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Equality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Equality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Equality(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Implicit(Rectangle)
  nameWithType: RectangleF.op_Implicit(Rectangle)
  fullName: System.Drawing.RectangleF.op_Implicit(Rectangle)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Inequality(RectangleF,RectangleF)
  nameWithType: RectangleF.op_Inequality(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.op_Inequality(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.Right
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Right
  nameWithType: RectangleF.Right
  fullName: System.Drawing.RectangleF.Right
- uid: System.Drawing.RectangleF.Size
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Size
  nameWithType: RectangleF.Size
  fullName: System.Drawing.RectangleF.Size
- uid: System.Drawing.RectangleF.Top
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Top
  nameWithType: RectangleF.Top
  fullName: System.Drawing.RectangleF.Top
- uid: System.Drawing.RectangleF.ToString
  parent: System.Drawing.RectangleF
  isExternal: false
  name: ToString()
  nameWithType: RectangleF.ToString()
  fullName: System.Drawing.RectangleF.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Union(RectangleF,RectangleF)
  nameWithType: RectangleF.Union(RectangleF,RectangleF)
  fullName: System.Drawing.RectangleF.Union(RectangleF,RectangleF)
- uid: System.Drawing.RectangleF.Width
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Width
  nameWithType: RectangleF.Width
  fullName: System.Drawing.RectangleF.Width
- uid: System.Drawing.RectangleF.X
  parent: System.Drawing.RectangleF
  isExternal: false
  name: X
  nameWithType: RectangleF.X
  fullName: System.Drawing.RectangleF.X
- uid: System.Drawing.RectangleF.Y
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Y
  nameWithType: RectangleF.Y
  fullName: System.Drawing.RectangleF.Y
- uid: System.Drawing.RectangleF.#ctor*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF.RectangleF
- uid: System.Drawing.RectangleF.Bottom*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Bottom
  nameWithType: RectangleF.Bottom
- uid: System.Drawing.RectangleF.Contains*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Contains
  nameWithType: RectangleF.Contains
- uid: System.Drawing.RectangleF.Equals*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Equals
  nameWithType: RectangleF.Equals
- uid: System.Drawing.RectangleF.FromLTRB*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: FromLTRB
  nameWithType: RectangleF.FromLTRB
- uid: System.Drawing.RectangleF.GetHashCode*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: GetHashCode
  nameWithType: RectangleF.GetHashCode
- uid: System.Drawing.RectangleF.Height*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Height
  nameWithType: RectangleF.Height
- uid: System.Drawing.RectangleF.Inflate*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Inflate
  nameWithType: RectangleF.Inflate
- uid: System.Drawing.RectangleF.Intersect*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Intersect
  nameWithType: RectangleF.Intersect
- uid: System.Drawing.RectangleF.IntersectsWith*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IntersectsWith
  nameWithType: RectangleF.IntersectsWith
- uid: System.Drawing.RectangleF.IsEmpty*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
- uid: System.Drawing.RectangleF.Left*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Left
  nameWithType: RectangleF.Left
- uid: System.Drawing.RectangleF.Location*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Location
  nameWithType: RectangleF.Location
- uid: System.Drawing.RectangleF.Offset*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Offset
  nameWithType: RectangleF.Offset
- uid: System.Drawing.RectangleF.op_Equality*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Equality
  nameWithType: RectangleF.op_Equality
- uid: System.Drawing.RectangleF.op_Implicit*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Implicit
  nameWithType: RectangleF.op_Implicit
- uid: System.Drawing.RectangleF.op_Inequality*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: op_Inequality
  nameWithType: RectangleF.op_Inequality
- uid: System.Drawing.RectangleF.Right*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Right
  nameWithType: RectangleF.Right
- uid: System.Drawing.RectangleF.Size*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Size
  nameWithType: RectangleF.Size
- uid: System.Drawing.RectangleF.Top*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Top
  nameWithType: RectangleF.Top
- uid: System.Drawing.RectangleF.ToString*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: ToString
  nameWithType: RectangleF.ToString
- uid: System.Drawing.RectangleF.Union*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Union
  nameWithType: RectangleF.Union
- uid: System.Drawing.RectangleF.Width*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Width
  nameWithType: RectangleF.Width
- uid: System.Drawing.RectangleF.X*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: X
  nameWithType: RectangleF.X
- uid: System.Drawing.RectangleF.Y*
  parent: System.Drawing.RectangleF
  isExternal: false
  name: Y
  nameWithType: RectangleF.Y
