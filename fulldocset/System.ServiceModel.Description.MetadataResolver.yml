### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataResolver
  id: MetadataResolver
  children:
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  langs:
  - csharp
  name: MetadataResolver
  nameWithType: MetadataResolver
  fullName: System.ServiceModel.Description.MetadataResolver
  type: Class
  summary: "Pobiera i importuje metadane jako <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Klasy MetadataResolver umożliwia szybkie importowanie punktów końcowych usługi z metadanych. Ta klasa pliki do pobrania i konwertuje metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów.</xref:System.ServiceModel.Description.ServiceEndpoint> Aby pobrać metadane i przetworzyć tych informacji <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>zobacz <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>"
  example:
  - "The following code example shows the use of the MetadataResolver class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]  \n  \n The following code example shows the use of the MetadataResolver to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static class MetadataResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonej umów, przy użyciu określonego adresu i stan asynchroniczne i delegata.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>są używane do pobierania metadanych i domyślna <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>jest <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>bezpośrednio.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Pustej kolekcji jest zwracany, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakty, do których chcesz pobrać i rozpoznania metadanych."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Adres metadanych."
    - id: callback
      type: System.AsyncCallback
      description: "Delegat asynchroniczne wywołanie zwrotne wywoływane, gdy połączenie zostanie zakończone."
    - id: asyncState
      type: System.Object
      description: "Stan skojarzony z wywołania asynchronicznego."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Która odwołuje się operacja rozpoznawania asynchronicznego.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adres, kontrakt lub wywołania zwrotnego jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>jest pusta, co najmniej jeden element członkowski <code>contracts</code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, lub <code>contracts</code> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonego zamówienia przy użyciu określonego adresu i stan asynchronicznego a obiektem delegowanym.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>są używane do pobierania metadanych i domyślna <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>jest <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>bezpośrednio.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Pustej kolekcji jest zwracany, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.       Ta metoda wymaga, aby określić typ kontraktu. Można określić kontrakt deklarowanie interfejsu usługi w kodzie klienta lub przy użyciu [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] generowane przez Svcutil.exe klienta. W przypadku zmiany interfejsu (Dodawanie nowej operacji, na przykład) należy zaktualizować interfejs w kodzie klienta lub wygenerować nowy [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienta. W przeciwnym razie jest zwracany wyjątek. Na przykład masz usługa, która implementuje kontraktu usługi o nazwie ICalculator, który definiuje Add(), Sub() Mult() i Div(). Tworzenie aplikacji klienckich i generowanie [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienta. Metoda jest następnie dodać do ICalculator o nazwie Echo(). Jeśli następnie napisać aplikację, która wywołuje <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>bez generowania nowego [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienta otrzymasz następujący wyjątek.</xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "Kontrakt, do których chcesz pobrać i rozpoznania metadanych."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Adres metadanych."
    - id: callback
      type: System.AsyncCallback
      description: "Delegat asynchroniczne wywołanie zwrotne wywoływane, gdy połączenie zostanie zakończone."
    - id: asyncState
      type: System.Object
      description: "Stan skojarzony z wywołania asynchronicznego."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Która odwołuje się operacja rozpoznawania asynchronicznego.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adres, kontrakt lub wywołania zwrotnego jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonej umów, przy użyciu określonego adresu <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, stan asynchronicznego a obiektem delegowanym.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Domyślnie <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>jest <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>bezpośrednio.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Pustej kolekcji jest zwracany, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakty, do których chcesz pobrać i rozpoznania metadanych."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Adres metadanych."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> Używane do pobierania metadanych."
    - id: callback
      type: System.AsyncCallback
      description: "Delegat asynchroniczne wywołanie zwrotne wywoływane, gdy połączenie zostanie zakończone."
    - id: asyncState
      type: System.Object
      description: "Stan skojarzony z wywołania asynchronicznego."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Która odwołuje się operacja rozpoznawania asynchronicznego.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adres, kontrakt, klienta lub wywołania zwrotnego jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>jest pusta, co najmniej jeden element członkowski <code>contracts</code> ma wartość null, lub <code>contracts</code> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonej umów, przy użyciu określonego adresu <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref> wartości, stan asynchronicznego a obiektem delegowanym.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>są używane do pobierania metadanych.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>bezpośrednio.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Pustej kolekcji jest zwracany, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakty, do których chcesz pobrać i rozpoznania metadanych."
    - id: address
      type: System.Uri
      description: "Adres metadanych."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Tryb pobierania."
    - id: callback
      type: System.AsyncCallback
      description: "Delegat asynchroniczne wywołanie zwrotne wywoływane, gdy połączenie zostanie zakończone."
    - id: asyncState
      type: System.Object
      description: "Stan skojarzony z wywołania asynchronicznego."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Która odwołuje się operacja rozpoznawania asynchronicznego.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adres, kontrakt lub wywołania zwrotnego jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>jest pusta, co najmniej jeden element członkowski <code>contracts</code> ma wartość null, lub <code>contracts</code> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonego kontraktu, przy użyciu określonego adresu <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, stan asynchronicznego a obiektem delegowanym.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>są używane do pobierania metadanych.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>bezpośrednio.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Pustej kolekcji jest zwracany, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "Kontrakt, do których chcesz pobrać i rozpoznania metadanych."
    - id: address
      type: System.Uri
      description: "Adres metadanych."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Tryb pobierania."
    - id: callback
      type: System.AsyncCallback
      description: "Delegat asynchroniczne wywołanie zwrotne wywoływane, gdy połączenie zostanie zakończone."
    - id: asyncState
      type: System.Object
      description: "Stan skojarzony z wywołania asynchronicznego."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Która odwołuje się operacja rozpoznawania asynchronicznego.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adres, kontrakt lub wywołania zwrotnego jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonej umów, przy użyciu określonego adresu <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, stan asynchroniczne, a obiektem delegowanym.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>bezpośrednio.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Pustej kolekcji jest zwracany, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakty, do których chcesz pobrać i rozpoznania metadanych."
    - id: address
      type: System.Uri
      description: "Adres metadanych."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Tryb pobierania."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> Używane do pobierania metadanych."
    - id: callback
      type: System.AsyncCallback
      description: "Delegat asynchroniczne wywołanie zwrotne wywoływane, gdy połączenie zostanie zakończone."
    - id: asyncState
      type: System.Object
      description: "Stan skojarzony z wywołania asynchronicznego."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Która odwołuje się operacja rozpoznawania asynchronicznego.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adres, kontrakt lub wywołania zwrotnego jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>jest pusta, co najmniej jeden element członkowski <code>contracts</code> ma wartość null, lub <code>contracts</code> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  id: EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Kończy wywołanie asynchroniczne do rozpoznania metadanych do kolekcji punktów końcowych."
  remarks: "Kończy wywołanie asynchroniczne do jednego z <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>metody.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Obiekt, który został odebrany po wywołaniu <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*>metody.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*> </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Kolekcja <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla punktów końcowych zawarte w metadanych.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.EndResolve*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Rozpoznaje adres metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonej umów przy użyciu adresu określonych metadanych.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>są używane do pobierania metadanych i domyślna <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>jest <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>bezpośrednio.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Pustej kolekcji jest zwracany, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakty, do których chcesz pobrać i rozpoznania metadanych."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Adres metadanych."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Kolekcja <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonego kontraktu.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Kolekcja adres lub kontraktów jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>jest pusta, co najmniej jeden element członkowski <code>contracts</code> ma wartość null, lub <code>contracts</code> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  id: Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Pobiera i rozpoznaje adres metadanych w kolekcji <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonego kontraktu pod określonym adresem.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Metoda rozwiązanie umożliwia określenie, kontrakt i adres metadanych do użycia podczas pobierania i rozpoznawania metadanych.       Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>są używane do pobierania metadanych i domyślna <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>jest <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>bezpośrednio.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Pustej kolekcji jest zwracany, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.       Ta metoda wymaga, aby określić typ kontraktu. Można określić kontrakt deklarowanie interfejsu usługi w kodzie klienta lub przy użyciu [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] generowane przez Svcutil.exe klienta. W przypadku zmiany interfejsu (Dodawanie nowej operacji, na przykład) należy zaktualizować interfejs w kodzie klienta lub wygenerować nowy [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienta. W przeciwnym razie jest zwracany wyjątek. Na przykład masz usługa, która implementuje kontraktu usługi o nazwie ICalculator, który definiuje Add(), Sub() Mult() i Div(). Tworzenie aplikacji klienckich i generowanie [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienta. Metoda jest następnie dodać do ICalculator o nazwie Echo(). Jeśli następnie pisania aplikacji czy wywołania rozwiązać bez generowania nowego [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] klienta otrzymasz następujący wyjątek.       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contract
      type: System.Type
      description: "Kontrakty, do których chcesz pobrać i rozpoznania metadanych."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Adres metadanych."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Kolekcja <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonego kontraktu.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jest to adres lub kontrakt <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Rozpoznaje adres metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonej umów przy użyciu adresu określonych metadanych i <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Domyślnie <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>jest <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>bezpośrednio.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Pustej kolekcji jest zwracany, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakty, do których chcesz pobrać i rozpoznania metadanych."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Adres metadanych."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> Używane do pobierania metadanych."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Kolekcja <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonego kontraktu.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adres, umów kolekcji lub klient jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>jest pusta, co najmniej jeden element członkowski <code>contracts</code> ma wartość null, lub <code>contracts</code> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Rozpoznaje adres metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla kontraktów określony przy użyciu określonego trybu adres i transfer.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>są używane do pobierania metadanych.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>bezpośrednio.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Pustej kolekcji jest zwracany, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakty, do których chcesz pobrać i rozpoznania metadanych."
    - id: address
      type: System.Uri
      description: "Adres metadanych."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Tryb pobierania."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Kolekcja <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonego kontraktu.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Kolekcja adres lub kontraktów jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>jest pusta, co najmniej jeden element członkowski <code>contracts</code> ma wartość null, lub <code>contracts</code> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Rozpoznaje adres metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów kontraktu określony przy użyciu określonego trybu adres i transfer.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Metoda rozwiązanie umożliwia określenie kontraktu i adres oraz mechanizmu pobierania do użycia.       Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>są używane do pobierania metadanych.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>bezpośrednio.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Pustej kolekcji jest zwracany, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contract
      type: System.Type
      description: "Kontrakt, do których chcesz pobrać i rozpoznania metadanych."
    - id: address
      type: System.Uri
      description: "Adres metadanych."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Tryb pobierania."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Kolekcja <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonego kontraktu.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adres lub kontrakt jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Rozpoznaje adres metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonej umów przy użyciu określonego adresu, tryb transferu i klient transferu.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>bezpośrednio.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Pustej kolekcji jest zwracany, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Kontrakty, do których chcesz pobrać i rozpoznania metadanych."
    - id: address
      type: System.Uri
      description: "Adres metadanych."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Tryb pobierania."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> Używane do pobierania metadanych."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Kolekcja <xref:System.ServiceModel.Description.ServiceEndpoint>obiektów dla określonego kontraktu.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Adres, umów kolekcji lub klient jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>jest pusta, co najmniej jeden element członkowski <code>contracts</code> ma wartość null, lub <code>contracts</code> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ContractDescription>
  nameWithType: IEnumerable<ContractDescription>
  fullName: System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataExchangeClient
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClient
  nameWithType: MetadataExchangeClient
  fullName: System.ServiceModel.Description.MetadataExchangeClient
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Description.MetadataExchangeClientMode
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClientMode
  nameWithType: MetadataExchangeClientMode
  fullName: System.ServiceModel.Description.MetadataExchangeClientMode
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
- uid: System.ServiceModel.Description.ServiceEndpointCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpointCollection
  nameWithType: ServiceEndpointCollection
  fullName: System.ServiceModel.Description.ServiceEndpointCollection
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve
  nameWithType: MetadataResolver.BeginResolve
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve
  nameWithType: MetadataResolver.EndResolve
- uid: System.ServiceModel.Description.MetadataResolver.Resolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve
  nameWithType: MetadataResolver.Resolve
