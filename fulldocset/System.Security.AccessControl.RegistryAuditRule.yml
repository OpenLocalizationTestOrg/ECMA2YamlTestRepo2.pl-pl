### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.RegistryAuditRule
  id: RegistryAuditRule
  children:
  - System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.RegistryAuditRule.RegistryRights
  langs:
  - csharp
  name: RegistryAuditRule
  nameWithType: RegistryAuditRule
  fullName: System.Security.AccessControl.RegistryAuditRule
  type: Class
  summary: "Reprezentuje zestaw praw dostępu, które są poddawane inspekcji dla użytkownika lub grupy. Ta klasa nie może być dziedziczona."
  remarks: "Klasa RegistryAuditRule jest jeden zestaw klas, które umożliwiają zarządzanie Windows kontrolę dostępu dla kluczy rejestru programu .NET Framework. Omówienie tych klas i ich związek z podstawowej struktury kontroli dostępu do systemu Windows temacie <xref:System.Security.AccessControl.RegistrySecurity>.</xref:System.Security.AccessControl.RegistrySecurity>      > [!NOTE] > Kontrolę dostępu systemu Windows można stosować tylko do kluczy rejestru. Nie można zastosować do pary poszczególnych klucz/wartość przechowywanych w kluczu.       Aby uzyskać listę reguł inspekcji, w obecnie stosowane do klucza rejestru, należy użyć <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName>metody, aby uzyskać <xref:System.Security.AccessControl.RegistrySecurity>obiekt, a następnie użyć jego <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>metodę, aby uzyskać kolekcję obiektów RegistryAuditRule.</xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> </xref:System.Security.AccessControl.RegistrySecurity> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName>       Obiekty RegistryAuditRule nie mapowanie jeden do jednego z wpisów kontroli dostępu w podstawowej poufnej listy kontroli dostępu (DACL). Gdy Pobierz zestaw wszystkich inspekcji reguły dla klucza rejestru, zestaw zawiera minimalną liczbę reguł obecnie wymaganych do wyrażenia wszystkich wpisów kontroli dostępu.      > [!NOTE] > Zmienić podstawowej wpisów kontroli dostępu, jak dodać i usunąć reguły. Informacje w regułach są scalane, jeśli to możliwe, aby utrzymać najmniejszą liczbę wpisów kontroli dostępu. W związku z tym odczytu bieżącą listę reguł, może nie wygląda tak samo jak lista wszystkich reguł, które zostały dodane.       Obiekty RegistryAuditRule umożliwia określenie uprawnień dostępu, aby przeprowadzać inspekcję dla użytkownika lub grupy. Aby zastosować regułę do klucza rejestru, użyj <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName>metodę, aby pobrać <xref:System.Security.AccessControl.RegistrySecurity>obiektu.</xref:System.Security.AccessControl.RegistrySecurity> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName> Modyfikowanie <xref:System.Security.AccessControl.RegistrySecurity>obiektu za pomocą jej metod dodać regułę, a następnie użyć <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName>metody ponownie dołączyć obiektu zabezpieczeń.</xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.RegistrySecurity>      > [!IMPORTANT] > Zmiany <xref:System.Security.AccessControl.RegistrySecurity>obiektu nie wpływają na poziomy dostępu do klucza rejestru do czasu wywołania <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName>metody można przypisać obiektu zmieniony zabezpieczeń do klucza rejestru.</xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.RegistrySecurity>       Obiekty RegistryAuditRule są niezmienne. Zabezpieczeń dla klucza rejestru jest modyfikowane za pomocą metody <xref:System.Security.AccessControl.RegistrySecurity>klasy można dodać ani usunąć reguły; zgodnie z tym podstawowej wpisów kontroli dostępu są modyfikowane.</xref:System.Security.AccessControl.RegistrySecurity>"
  syntax:
    content: 'public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.RegistryAuditRule
  langs:
  - csharp
  name: RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.RegistryAuditRule&quot;> </xref> klasy Określanie użytkownika lub grupy do inspekcji, praw do inspekcji, czy przełączyć dziedziczenia pod uwagę i czy inspekcji sukces i niepowodzenie."
  remarks: "All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag. If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected. If the flag is present, the rule is propagated as shown in the following table. The table assumes there is a subkey S with child subkey CS and grandchild subkey GS. That is, the path for the grandchild subkey is S\\CS\\GS.  \n  \n|Propagation flags|S|CS|GS|  \n|-----------------------|-------|--------|--------|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X||  \n|<xref:System.Security.AccessControl.PropagationFlags>||X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>||X||  \n  \n The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.  \n  \n For example, if the <xref:System.Security.AccessControl.InheritanceFlags> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.  \n  \n> [!NOTE]\n>  Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag for `inheritanceFlags`, there is no point in doing so. For the purposes of access control, the name/value pairs in a subkey are not separate objects. The access rights to name/value pairs are controlled by the rights of the subkey. Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags> flag. Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules."
  syntax:
    content: public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "Użytkownik lub grupa, którego będzie stosowana ta reguła. Musi być typu <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> lub typu, takich jak <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> którego można przekonwertować na typ <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
    - id: registryRights
      type: System.Security.AccessControl.RegistryRights
      description: "Bitowe połączenie <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> wartości określających rodzaje dostęp do inspekcji."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> wartości określający, czy reguła inspekcji ma zastosowanie do podkluczy bieżącego klucza."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> wartości, które mają wpływ na sposób reguły odziedziczone inspekcji jest propagowana do podkluczy bieżącego klucza."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> wartości określająca, czy inspekcji sukces i niepowodzenie."
  overload: System.Security.AccessControl.RegistryAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>Określa nieprawidłową wartość.       - lub - <code>flags</code> określa nieprawidłową wartość.       - lub - <code>inheritanceFlags</code> określa nieprawidłową wartość.       - lub - <code>propagationFlags</code> określa nieprawidłową wartość."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>registryRights</code> wynosi zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>nie jest ani typu <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> ani typu, takich jak <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> którego można przekonwertować na typ <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.RegistryAuditRule
  langs:
  - csharp
  name: RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.RegistryAuditRule&quot;> </xref> klasy, określając nazwę użytkownika lub grupy do inspekcji, praw do inspekcji, czy przełączyć dziedziczenia pod uwagę i czy inspekcji sukces i niepowodzenie."
  remarks: "All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag. If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected. If the flag is present, the rule is propagated as shown in the following table. The table assumes there is a subkey S with child subkey CS and grandchild subkey GS. That is, the path for the grandchild subkey is S\\CS\\GS.  \n  \n|Propagation flags|S|CS|GS|  \n|-----------------------|-------|--------|--------|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X||  \n|<xref:System.Security.AccessControl.PropagationFlags>||X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>||X||  \n  \n The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.  \n  \n For example, if the <xref:System.Security.AccessControl.InheritanceFlags> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.  \n  \n> [!NOTE]\n>  Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag for `inheritanceFlags`, there is no point in doing so. For the purposes of access control, the name/value pairs in a subkey are not separate objects. The access rights to name/value pairs are controlled by the rights of the subkey. Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags> flag. Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.  \n  \n This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> constructor."
  syntax:
    content: public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "Nazwa użytkownika lub grupy, będzie stosowana ta reguła."
    - id: registryRights
      type: System.Security.AccessControl.RegistryRights
      description: "Bitowe połączenie <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> wartości określających rodzaje dostęp do inspekcji."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Kombinację <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> flagi, które określa, czy reguła inspekcji ma zastosowanie do podkluczy bieżącego klucza."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Kombinację <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> flagi, które mają wpływ na sposób reguły odziedziczone inspekcji jest propagowana do podkluczy bieżącego klucza."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> wartości określająca, czy inspekcji sukces i niepowodzenie."
  overload: System.Security.AccessControl.RegistryAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>Określa nieprawidłową wartość.       - lub - <code>flags</code> określa nieprawidłową wartość.       - lub - <code>inheritanceFlags</code> określa nieprawidłową wartość.       - lub - <code>propagationFlags</code> określa nieprawidłową wartość."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>registryRights</code>wynosi zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>identity</code> jest ciągiem o zerowej długości.       - lub - <code>identity</code> ma więcej niż 512 znaków."
  platform:
  - net462
- uid: System.Security.AccessControl.RegistryAuditRule.RegistryRights
  id: RegistryRights
  parent: System.Security.AccessControl.RegistryAuditRule
  langs:
  - csharp
  name: RegistryRights
  nameWithType: RegistryAuditRule.RegistryRights
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Pobiera prawa dostępu dotyczy reguła inspekcji."
  remarks: "<xref:System.Security.AccessControl.RegistryAuditRule>obiekty są niezmienne.</xref:System.Security.AccessControl.RegistryAuditRule> Można utworzyć nową regułę inspekcji reprezentujący inny użytkownik, inne prawa lub innej kombinacji <xref:System.Security.AccessControl.AuditFlags>flagi, ale nie można zmodyfikować istniejącą regułę inspekcji.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public System.Security.AccessControl.RegistryRights RegistryRights { get; }
    return:
      type: System.Security.AccessControl.RegistryRights
      description: "Bitowe połączenie <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> wartości, które wskazuje prawa dotyczy reguła inspekcji."
  overload: System.Security.AccessControl.RegistryAuditRule.RegistryRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AuditRule
  isExternal: false
  name: System.Security.AccessControl.AuditRule
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.RegistryRights
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.RegistryAuditRule.RegistryRights
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryAuditRule.RegistryRights
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryRights
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor*
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryAuditRule
  nameWithType: RegistryAuditRule.RegistryAuditRule
- uid: System.Security.AccessControl.RegistryAuditRule.RegistryRights*
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryAuditRule.RegistryRights
