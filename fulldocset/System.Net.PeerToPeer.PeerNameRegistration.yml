### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerNameRegistration
  id: PeerNameRegistration
  children:
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  - System.Net.PeerToPeer.PeerNameRegistration.Cloud
  - System.Net.PeerToPeer.PeerNameRegistration.Comment
  - System.Net.PeerToPeer.PeerNameRegistration.Data
  - System.Net.PeerToPeer.PeerNameRegistration.Dispose
  - System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  - System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  - System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  - System.Net.PeerToPeer.PeerNameRegistration.PeerName
  - System.Net.PeerToPeer.PeerNameRegistration.Port
  - System.Net.PeerToPeer.PeerNameRegistration.Start
  - System.Net.PeerToPeer.PeerNameRegistration.Stop
  - System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.Update
  - System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  langs:
  - csharp
  name: PeerNameRegistration
  nameWithType: PeerNameRegistration
  fullName: System.Net.PeerToPeer.PeerNameRegistration
  type: Class
  summary: "Rejestruje <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>w <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> lub zestaw chmur.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "Rejestracja tworzy (lub aktualizuje) wszystkie informacje, które jest skojarzone z <xref:System.Net.PeerToPeer.PeerName>w chmurze elementu równorzędnego lub chmury.</xref:System.Net.PeerToPeer.PeerName>       Istnieje możliwość ma wiele obiektów PeerNameRegistration dla tej samej nazwy elementu równorzędnego. W takim przypadku jeśli nazwa elementu równorzędnego jest zabezpieczony, każde wystąpienie reprezentuje PeerNameRegistration w innej chmurze. Jednak jeśli nazwa elementu równorzędnego nie jest zabezpieczony, możesz go zarejestrować, w tej samej chmury wielokrotnie, zapewniając, że każdy rejestracji jest z innego procesu."
  syntax:
    content: 'public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration()
  nameWithType: PeerNameRegistration.PeerNameRegistration()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicjuje nowe wystąpienie domyślnego <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> klasy."
  remarks: "Zwraca nowe wystąpienie domyślnego typu <xref:System.Net.PeerToPeer.PeerNameRegistration>.</xref:System.Net.PeerToPeer.PeerNameRegistration> Rejestracja nazwy elementu równorzędnego nie są wykonywane podczas konstruowania.       Po tworzenia wystąpienia obiektu w tym konstruktorze, wywołujący należy wypełnić w odpowiednich polach wystąpienia przed wywołaniem <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>lub <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public PeerNameRegistration ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  id: '#ctor(System.Net.PeerToPeer.PeerName,System.Int32)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(PeerName,Int32)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> z określoną nazwę i numer portu."
  remarks: "Wywoływanie ten konstruktor tworzy wystąpienie, które będą używane do rejestrowania wszystkich źródłowych adresów (IPv4 obie IPv6and) i portu podanego dla wszystkich chmur, w których obecnie jest udział elementu równorzędnego.  Jeśli obiekt jest tworzony pomyślnie, określony <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>i <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>są wypełniane.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>       Jeśli nazwa elementu równorzędnego jest zabezpieczone i został poprzednio zarejestrowany w <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>element równorzędny aktualnie uczestniczy w, <xref:System.Net.PeerToPeer.PeerToPeerException>jest generowany.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>       Ten konstruktor tworzy tylko <xref:System.Net.PeerToPeer.PeerNameRegistration>wystąpienia klasy nie są wykonywane rejestracji.</xref:System.Net.PeerToPeer.PeerNameRegistration> Po tworzenia wystąpienia obiektu rejestracji w tym konstruktorze i wypełnianie jej pól, aplikacja musi wywołać <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>do wykonania rejestracji.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);
    parameters:
    - id: name
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Obiektu do zarejestrowania."
    - id: port
      type: System.Int32
      description: "Wartość całkowita określająca numer portu do zarejestrowania."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> name </code> Parametr nie może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Określony numer portu jest mniejsza od zera.  Numery portów musi być większa lub równa zero i mniejsza niż 65 535 (0xFFFF)."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Określony został już zarejestrowany z tego hosta.      -Komputer zdalny nie jest właścicielem <xref:System.Net.PeerToPeer.PeerName.Authority*>wybranych <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> obiektu.</xref:System.Net.PeerToPeer.PeerName.Authority*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicjuje nowy serializacji <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> obiektu."
  syntax:
    content: protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Odwołanie do obiektu, który zawiera dane potrzebne do deserializacji tego wystąpienia."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Kontekst, który udostępnia środki do deserializowania danych. Określane jako źródło danych serializacji."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  id: '#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(PeerName,Int32,Cloud)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> klasy o nazwie określonego elementu równorzędnego, numer portu i <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  remarks: "Wywoływanie ten konstruktor tworzy wystąpienie, które będą używane do rejestrowania wszystkich źródłowych adresów (IPv6 i IPv4), podany port i określony <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>  Jeśli obiekt jest tworzony pomyślnie, właściwości są wypełniane przy użyciu określonego <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>i <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>       Jeśli parametr chmury jest `null`, nazwa nie jest zarejestrowana przy użyciu <xref:System.Net.PeerToPeer.Cloud.Available>skrótu, która inicjuje wartości domyślne dla <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>i <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available>       Po wystąpienia, <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>można wywołać metody, aby zarejestrować <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);
    parameters:
    - id: name
      type: System.Net.PeerToPeer.PeerName
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Obiektu do zarejestrowania."
    - id: port
      type: System.Int32
      description: "Wartość całkowita określająca numer portu do zarejestrowania."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;></xref>w którym można zarejestrować nazwy elementu równorzędnego."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> name </code> Parametr nie może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Określony numer portu jest mniejsza od zera.  Numery portów musi być większa lub równa zero i mniejsza niż 65 535 (0xFFFF)."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Określony został już zarejestrowany z tego hosta.      -Komputer zdalny nie jest właścicielem <xref:System.Net.PeerToPeer.PeerName.Authority*>wybranych <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> obiektu.</xref:System.Net.PeerToPeer.PeerName.Authority*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  id: Cloud
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Pobiera lub ustawia informacje w chmurze, do której ta <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>obiekt zostanie zarejestrowany.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  syntax:
    content: public System.Net.PeerToPeer.Cloud Cloud { get; set; }
    return:
      type: System.Net.PeerToPeer.Cloud
      description: "Obiekt typu <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> , który określa chmury równorzędnej, dla którego zdefiniowano tej rejestracji. Ta właściwość jest ustawiona na <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> domyślnie."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Cloud*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment
  id: Comment
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Comment
  nameWithType: PeerNameRegistration.Comment
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Comment
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Pobiera lub ustawia dodatkowe informacje <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> obiekt, który zostanie zarejestrowany <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  syntax:
    content: public string Comment { get; set; }
    return:
      type: System.String
      description: "Komentarz, który zawiera dodatkowe informacje o <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> do skojarzenia z <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>. Ta właściwość jest ustawiona na <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> domyślnie."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Comment*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Określona wartość ciągu jest większa niż 39 znaków Unicode."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data
  id: Data
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Data
  nameWithType: PeerNameRegistration.Data
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Data
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Pobiera lub ustawia dane binarne zdefiniowane przez aplikację dla <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> obiektu."
  remarks: "Maksymalna ilość danych, które mogą być dostarczane jest 4096 bajtów."
  syntax:
    content: public byte[] Data { get; set; }
    return:
      type: System.Byte[]
      description: "Tablica bajtów przechowujący dane binarne skojarzone z danym wpisem. Ta właściwość jest ustawiona na <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> domyślnie."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Data*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Określone dane, jest większa niż 4096 bajtów."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose
  id: Dispose
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Dispose()
  nameWithType: PeerNameRegistration.Dispose()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Zwalnia wszelkie zasoby używane przez <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> obiektu."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PeerNameRegistration.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Zwalnia zasoby niezarządzane i opcjonalnie zwalnia zasoby zarządzane używane przez <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> obiektu."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  id: EndPointCollection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Pobiera kolekcję punktów końcowych sieci, dla których nazwa skojarzonego elementu równorzędnego jest zarejestrowany."
  remarks: "W <xref:System.Net>przestrzeni nazw, <xref:System.Net.IPEndPoint>reprezentuje punkt końcowy sieci jako adres IP i numer portu.</xref:System.Net.IPEndPoint> </xref:System.Net>  Usługa PNRP należy podać wartość portu i adresem IP dla każdego punktu końcowego.  Maksymalna liczba punktów końcowych, które można podać wynosi&10;. Wybór automatyczny adres jest używany w przypadku tego parametru `null`.       Jeśli stosowana jest metoda rejestracji automatycznie wybiera adresy zarejestrować, nie istnieje metoda ustalenie theaddresses, dla którego zarejestrowano nazwa elementu równorzędnego.  Oznacza to właściwość EndPointCollection nie będzie aktualizowana w celu odzwierciedlenia adresów wybrane.       Po zarejestrowaniu nazwy elementu równorzędnego dla więcej niż jeden węzeł, każdy <xref:System.Net.PeerToPeer.PeerNameRegistration>zawiera tylko unikatowe wiersze i zdefiniowaną w każdym wystąpieniu rejestracji właściwość EndPointCollection będą inne.</xref:System.Net.PeerToPeer.PeerNameRegistration> Także, gdy <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>jest zarejestrowany na więcej niż jeden <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, różni się każdej rejestracji i zwykle jest różne dla każdego wystąpienia kolekcji punktów końcowych.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>"
  syntax:
    content: public System.Net.IPEndPointCollection EndPointCollection { get; }
    return:
      type: System.Net.IPEndPointCollection
      description: "<xref:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection*>Obiekt, który zawiera punktów końcowych sieci, dla których nazwa skojarzonego elementu równorzędnego jest zarejestrowany.</xref:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection*> Chyba że jawnie określona, wartością domyślną dla wszystkich właściwości jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> dla typów odwołań."
  overload: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Wypełnia obiekt informacje serializacji dane potrzebne do serializacji <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> wystąpienia."
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Przechowuje dane serializowane skojarzone z <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> obiektu."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Zawiera miejsce docelowe dla serializowanym strumieniu skojarzone z <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> obiektu."
  overload: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  id: IsRegistered
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: IsRegistered()
  nameWithType: PeerNameRegistration.IsRegistered()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Pobiera lub ustawia, czy określona nazwa elementu równorzędnego w <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>Właściwości jest zarejestrowany z określonym <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> na hoście.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  syntax:
    content: public bool IsRegistered ();
    parameters: []
    return:
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, nazwa elementu równorzędnego jest zarejestrowana w usłudze <> </> *> dla hosta elementu równorzędnego. Jeśli <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a następnie można uruchomić procesu rejestracji z <> </> *>."
  overload: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Nie można zarejestrować obiektu, który został już usunięty."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  id: PeerName
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Pobiera lub ustawia nazwę elementu równorzędnego do rejestracji w usłudze w chmurze elementu równorzędnego."
  remarks: "Nazwa elementu równorzędnego mogą być rejestrowane dla więcej niż jeden węzeł; Każdy <xref:System.Net.PeerToPeer.PeerNameRegistration>wystąpienia zawiera tylko unikatowe wiersze.</xref:System.Net.PeerToPeer.PeerNameRegistration> <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>Właściwości skojarzonej z każdego odpowiadającego <xref:System.Net.PeerToPeer.PeerName>różni się wystąpienia.</xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Jest także możliwość zarejestrowania nazwy elementu równorzędnego dla chmury więcej niż jeden węzeł jest podłączony do; Każdy z tych rejestracji zawiera tylko unikatowe wiersze. Nazwa elementu równorzędnego <xref:System.Net.IPEndPointCollection>będzie się różnił w każdym z tych wystąpień.</xref:System.Net.IPEndPointCollection>"
  syntax:
    content: public System.Net.PeerToPeer.PeerName PeerName { get; set; }
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "Obiekt typu <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> zawierający wartości skojarzone z tym <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> obiektu. Chyba że jawnie określona, wartością domyślną dla wszystkich właściwości jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> dla typów odwołań."
  overload: System.Net.PeerToPeer.PeerNameRegistration.PeerName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port
  id: Port
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Port
  nameWithType: PeerNameRegistration.Port
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Port
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Pobiera lub ustawia [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458) używane przez węzeł równorzędny jest zarejestrowany na numer portu <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> obiektu."
  remarks: "Domyślny port jest używany przez <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>metody tylko wtedy, gdy punkty końcowe nie zostały określone.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public int Port { get; set; }
    return:
      type: System.Int32
      description: "Wartość całkowitą wskazującą liczbę portów TCP <xref:System.Net.IPEndPoint>.</xref:System.Net.IPEndPoint> Chyba że jawnie określona, wartością domyślną dla tej właściwości jest wartość zero (0)."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Port*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość określony port jest mniejsza od zera.  Numery portów musi być większa lub równa zero i mniejsza niż 65 535 (0xFFFF)."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start
  id: Start
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Start()
  nameWithType: PeerNameRegistration.Start()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Start()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Rejestruje <> </> *> do <> </> *>. Jeśli nie <> </> *> określono wybór automatyczny adres jest używany z określonym przez wartość portu <> </> *> właściwości."
  remarks: "Metoda rejestruje podana nazwa elementu równorzędnego w <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>Właściwości ze wszystkich źródłowych adresów i <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>określonym w konstruktorze.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> Domyślny port jest używany przez tę metodę, tylko wtedy, gdy punkty końcowe nie zostały określone.       Jeśli <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>jest właściwość `null`, ta metoda rejestruje podana nazwa elementu równorzędnego w <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>za pomocą właściwości <xref:System.Net.PeerToPeer.Cloud.Available>pola, które inicjuje wartości domyślne dla <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>i <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>       Po <xref:System.Net.PeerToPeer.PeerNameRegistration>obiektu została uruchomiona, <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>Metoda jest używana do zatrzymają.</xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration>       Aby zaktualizować rejestrację, <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>Metoda musi być używana.</xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>"
  example:
  - "The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.  \n  \n [!code-cs[NCLPNRPRegisterPeerName#1](~/add/codesnippet/csharp/m-system.net.peertopeer._1_1.cs)]"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>Właściwość jest ustawiona na <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt ma Dispose() wywoływać w nim wcześniej."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-<xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> Określony został już zarejestrowany. <> </> *> Metoda musi być używane do aktualizowania rejestracji.      -Komputer zdalny nie jest właścicielem <> </> *> dla <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> określony.      -Albo <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> lub <> </> *> nie jest określona; co najmniej jeden musi zostać podany.      -Elementy komunikatu lub dane są nieprawidłowe. Lub, <> </> *> nie jest zestawem i nie danych obiektów blob lub <xref:System.Net.IPEndPoint>jest określona.</xref:System.Net.IPEndPoint>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop
  id: Stop
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Stop()
  nameWithType: PeerNameRegistration.Stop()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Stop()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Wyrejestrowuje podana nazwa elementu równorzędnego w <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>Właściwości z wszystkich chmur, w których został zarejestrowany.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "Po zatrzymaniu procesu rejestracji, stan obiektu rejestracji jest równa stan bezpośrednio po generowana przez konstruktora domyślnego. W tym stanie wszystkie jego właściwości są zakłada się, że niezawierające wartości. <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>Metoda może służyć do ponownego uruchamiania.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>       Użytkownik może mieć wiele obiektów rejestracji dla tej samej nazwy elementu równorzędnego.  W takim przypadku jeśli nazwa elementu równorzędnego jest zabezpieczony, każde wystąpienie będzie reprezentować rejestracji w innej chmurze usługi PNRP.  Jednak jeśli nazwa elementu równorzędnego nie jest zabezpieczony, możesz go zarejestrować, w tej samej chmury wiele razy.       Jeśli to wystąpienie jest już zatrzymana, wywołanie tej metody nie ma znaczenia."
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Stop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> Właściwości nie została jeszcze zarejestrowana. W takim przypadku <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> obiekt jest tworzony przy użyciu pustego konstruktora. <> </> *> Powinno zostać zapełnione właściwości w tym wystąpieniu przed wywołaniem <xref:System.Net.PeerToPeer.PeerNameRegistration.Start*>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt ma Dispose() wywoływać w nim wcześniej."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Implementuje <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> interfejsu i zwraca dane potrzebne do serializacji <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> wystąpienia."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Przechowuje dane serializowane skojarzone z <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> wystąpienia."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Zawiera miejsce docelowe dla serializowanym strumieniu skojarzone z <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> wystąpienia."
  overload: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update
  id: Update
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Update()
  nameWithType: PeerNameRegistration.Update()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Update()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Aktualizacje <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> dla węzła zarejestrowany z określonym <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>. Aktualizacja jest wykonywana przy użyciu podanych informacji o we właściwościach."
  remarks: "Wszystkie informacje o zarejestrowanych w chmur dla tego <xref:System.Net.PeerToPeer.PeerName>przed wywołaniem całkowicie zostaną odrzucone.</xref:System.Net.PeerToPeer.PeerName>  Nowe dane nie jest połączona z istniejącej rejestracji.  Aby zaktualizować <xref:System.Net.PeerToPeer.PeerNameRegistration>, najpierw zaktualizować właściwości dla tego wystąpienia, a następnie wywołać tę metodę.</xref:System.Net.PeerToPeer.PeerNameRegistration>       Po <xref:System.Net.PeerToPeer.PeerNameRecord>jest zarejestrowany, <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>nie można zaktualizować właściwości.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRecord>  Wszystkie pola w rekordzie może zostać zaktualizowany."
  syntax:
    content: public void Update ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>Właściwość jest ustawiona na <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "-<> </> *> Właściwości nie została jeszcze zarejestrowana. Nie można wywołać metody aktualizacji, dopóki nazwa elementu równorzędnego <> </> *> właściwości jest zarejestrowany w co najmniej jedną chmurę.      -Podana nazwa elementu równorzędnego w <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>Właściwości zmienił się od odpowiadającego <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> został zarejestrowany.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Nie można zarejestrować obiektu, który został usunięty."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> właściwość jest ustawiona na <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  id: UseAutoEndPointSelection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Pobiera lub ustawia wartość określającą, czy używać punktu końcowego automatycznego wyboru podczas przesyłania siatki elementów równorzędnych lub <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud*>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud*>"
  remarks: "Podczas automatycznego wyboru punktu końcowego jest używana (Ta właściwość jest ustawiona na `true`) bez informacji o punkcie końcowym określoną przed rozpoczęciem <xref:System.Net.PeerToPeer.PeerNameRegistration>, wybierze poszczególne punkty końcowe systemu, aby je opublikował o nazwie skojarzonego elementu równorzędnego do wszystkich dostępnych chmur.</xref:System.Net.PeerToPeer.PeerNameRegistration>  Jeśli port nie jest określony, wybór automatycznie wybierze zero jako <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>       Jeśli wartość `false`, nie jest wykonywane automatycznie wybór zgodnie z powyższym opisem.  Dzięki temu proces rejestracji opublikować nazwa elementu równorzędnego, wraz z obiektu blob danych (określone przez <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A>Właściwości).</xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> Punkty końcowe nie są skojarzone z nazwą.       Jeśli stosowana jest metoda rejestracji automatycznie wybiera adresy zarejestrować, nie istnieje metoda ustalenie, co dotyczy, dla którego <xref:System.Net.PeerToPeer.PeerName>obiekt został zarejestrowany.</xref:System.Net.PeerToPeer.PeerName>  Oznacza to, że <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>właściwość nie zostanie zaktualizowany w celu odzwierciedlenia adresów wybrane.</xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>       Aktualizowanie tej właściwości po rozpoczęciu Rejestracja Nazwa elementu równorzędnego nie ma znaczenia."
  syntax:
    content: public bool UseAutoEndPointSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli punktu końcowego automatycznego wyboru ma być używane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli innej metody, które będą używane do określenia punktu końcowego. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration()
  nameWithType: PeerNameRegistration.PeerNameRegistration()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration()
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(PeerName,Int32)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(PeerName,Int32,Cloud)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
- uid: System.Net.PeerToPeer.Cloud
  parent: System.Net.PeerToPeer
  isExternal: false
  name: Cloud
  nameWithType: Cloud
  fullName: System.Net.PeerToPeer.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Comment
  nameWithType: PeerNameRegistration.Comment
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Comment
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Data
  nameWithType: PeerNameRegistration.Data
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Data
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose()
  nameWithType: PeerNameRegistration.Dispose()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose()
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PeerNameRegistration.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
- uid: System.Net.IPEndPointCollection
  parent: System.Net
  isExternal: false
  name: IPEndPointCollection
  nameWithType: IPEndPointCollection
  fullName: System.Net.IPEndPointCollection
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: IsRegistered()
  nameWithType: PeerNameRegistration.IsRegistered()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered()
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerName
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Port
  nameWithType: PeerNameRegistration.Port
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Port
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Start()
  nameWithType: PeerNameRegistration.Start()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Start()
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Stop()
  nameWithType: PeerNameRegistration.Stop()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Stop()
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Update()
  nameWithType: PeerNameRegistration.Update()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Update()
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration
  nameWithType: PeerNameRegistration.PeerNameRegistration
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Comment
  nameWithType: PeerNameRegistration.Comment
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Data
  nameWithType: PeerNameRegistration.Data
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose
  nameWithType: PeerNameRegistration.Dispose
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: GetObjectData
  nameWithType: PeerNameRegistration.GetObjectData
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: IsRegistered
  nameWithType: PeerNameRegistration.IsRegistered
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Port
  nameWithType: PeerNameRegistration.Port
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Start
  nameWithType: PeerNameRegistration.Start
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Stop
  nameWithType: PeerNameRegistration.Stop
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Update
  nameWithType: PeerNameRegistration.Update
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
