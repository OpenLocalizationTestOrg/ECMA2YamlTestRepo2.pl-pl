### YamlMime:ManagedReference
items:
- uid: System.Globalization.KoreanCalendar
  id: KoreanCalendar
  children:
  - System.Globalization.KoreanCalendar.#ctor
  - System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.KoreanCalendar.AlgorithmType
  - System.Globalization.KoreanCalendar.Eras
  - System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.GetEra(System.DateTime)
  - System.Globalization.KoreanCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.GetMonth(System.DateTime)
  - System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.KoreanCalendar.GetYear(System.DateTime)
  - System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.KoreanEra
  - System.Globalization.KoreanCalendar.MaxSupportedDateTime
  - System.Globalization.KoreanCalendar.MinSupportedDateTime
  - System.Globalization.KoreanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.KoreanCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: KoreanCalendar
  nameWithType: KoreanCalendar
  fullName: System.Globalization.KoreanCalendar
  type: Class
  summary: "Reprezentuje koreański kalendarza."
  remarks: "Koreański kalendarza jest dokładnie takie same jak kalendarza gregoriańskiego z tą różnicą, że roku i ery różnią się.      > [!NOTE] > Uzyskać informacji o korzystaniu z klasy KoreanCalendar oraz innych klas kalendarza w programie .NET Framework, zobacz [Praca z kalendarzami](~/add/includes/ajax-current-ext-md.md).       Klasa KoreanCalendar rozpoznaje tylko bieżącej ery.       Przestępnego koreański kalendarza odpowiadają tej samej przestępnego w kalendarza gregoriańskiego. Roku przestępnego w kalendarza gregoriańskiego jest zdefiniowany jako rok kalendarza gregoriańskiego, który jest podzielna przez cztery, chyba że ją podzielić przez 100. Jednak gregoriański lat, które są podzielna przez 400 są przestępnego. Typowe rok ma 365 dni i roku przestępnego ma 366 dni.       Koreański kalendarza ma 12 miesięcy 28 do 31 dni: | Wartość GetMonth | Miesiąc | Dni w typowych lat | Liczba dni w przestępnego |   |--------------------|-----------|--------------------------|------------------------|   | 1 | 1월 (styczeń) | 31 | 31 |   | 2 | 2월 (luty) | 28 | 29 |   | 3 | 3월 (marzec) | 31 | 31 |   | 4 | 4월 (kwiecień) | 30 | 30 |   | 5 | 5월 (maj) | 31 | 31 |   | 6 | 6월 (czerwiec) | 30 | 30 |   | 7 | 7월 (lipca) | 31 | 31 |   | 8 | 8월 (sierpień) | 31 | 31 |   | 9 | 9월 (wrzesień) | 30 | 30 |   | 10 | 10월 (października) | 31 | 31 |   | 11 | 11월 (listopad) | 30 | 30 |   | 12 | 12월 (grudzień) | 31 | 31 |       Luty ma 29 dni podczas przestępnego i 28 dni latach wspólnej.       Data 1 stycznia, 2001 r. N.E. w kalendarza gregoriańskiego odpowiada pierwszy dzień stycznia w roku 4334 bieżącego ery w kalendarzu koreańskim.       Każdy <xref:System.Globalization.CultureInfo>obiektu obsługuje zestaw kalendarzy.</xref:System.Globalization.CultureInfo> <xref:System.Globalization.CultureInfo.Calendar%2A>Właściwość zwraca kalendarz domyślny dla kultury i <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>właściwość zwraca tablicę zawierającą wszystkie kalendarze obsługiwane przez kulturę.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Aby zmienić używany kalendarz <xref:System.Globalization.CultureInfo>aplikacji należy ustawić <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>Właściwość <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>do nowego <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class KoreanCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: KoreanCalendar()
  nameWithType: KoreanCalendar.KoreanCalendar()
  fullName: System.Globalization.KoreanCalendar.KoreanCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> klasy."
  syntax:
    content: public KoreanCalendar ();
    parameters: []
  overload: System.Globalization.KoreanCalendar.#ctor*
  exceptions:
  - type: System.TypeInitializationException
    commentId: T:System.TypeInitializationException
    description: "Nie można zainicjować <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> obiektu ze względu na Brak informacji o kulturze."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: KoreanCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.KoreanCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca <xref:System.DateTime>czyli określoną liczbę miesięcy od określonego <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Część dnia powstałe w ten sposób <xref:System.DateTime>jest wpływ na wynikowy dzień nie jest prawidłowym dniem w wynikowej miesiąc roku wynikowy.</xref:System.DateTime> Ostatni dzień prawidłowy wynikowy miesiąc roku wynikowy jest zmieniana. Część roku wynikowy <xref:System.DateTime>działa na miesiąc wynikowy znajduje się poza rok określony <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Ta implementacja obsługuje tylko bieżącej ery. W związku z tym <xref:System.ArgumentException>jest zgłaszany, gdy wynikowy rok jest poza era określony <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Część czasu dnia wynikowy <xref:System.DateTime>pozostaje taki sam jak określony <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Na przykład w przypadku określonego miesiąca października, która ma 31 dni, określony dzień jest 31 dnia miesiąca i wartość `months` parametr to 6, wynikowy roku jest jeden więcej niż określony rok, miesiąc wynikowy jest kwietnia, a wynikowy dzień 30 dnia, w którym jest ostatnim dniem kwietnia.       Jeśli wartość `months` parametru jest ujemna, wynikowy <xref:System.DateTime>jest starsza niż określona <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Właściwość zwrócona <xref:System.DateTime>wartość zawsze równa <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Można zachować <xref:System.DateTime.Kind%2A>Właściwość `time` parametru przez wywołanie metody <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metody, jak przedstawiono na poniższym przykładzie.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.k_3_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.k_3_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_3_2.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_3_2.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_3_2.vb)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Do której ma zostać dodany miesięcy.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Liczba miesięcy do dodania."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Wynikającą z Dodawanie określoną liczbę miesięcy do określonego <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>jest mniejsza niż-120000.       - lub - <code>months</code> jest większa niż 120000."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: KoreanCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.KoreanCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca <xref:System.DateTime>czyli określoną liczbę lat od określonego <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Część dnia powstałe w ten sposób <xref:System.DateTime>jest wpływ na wynikowy dzień nie jest prawidłowym dniem w wynikowej miesiąc roku wynikowy.</xref:System.DateTime> Ostatni dzień prawidłowy wynikowy miesiąc roku wynikowy jest zmieniana. Wynikowa <xref:System.DateTime>pozostaje taki sam jak określony <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> część miesiąca Ta implementacja obsługuje tylko bieżącej ery. W związku z tym <xref:System.ArgumentException>jest zgłaszany, gdy wynikowy rok jest poza era określony <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Część czasu dnia wynikowy <xref:System.DateTime>pozostaje taki sam jak określony <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Na przykład luty ma 28 dni, z wyjątkiem podczas przestępnego, gdy posiada 29 dni. Jeśli określona data jest dnia 29 lutego w roku przestępnym i wartość `years` 1, wynikowy Data jest dnia 28 lutego w następnym roku.       Jeśli `years` jest ujemna, wynikowy <xref:System.DateTime>jest starsza niż określona <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Właściwość zwrócona <xref:System.DateTime>wartość zawsze równa <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Można zachować <xref:System.DateTime.Kind%2A>Właściwość `time` parametru przez wywołanie metody <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metody, jak przedstawiono na poniższym przykładzie.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.k_2_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.k_2_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_2_2.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_2_2.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_2_2.vb)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Do której ma zostać dodany lat.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Liczba lat do dodania."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Wynikającą z Dodawanie określoną liczbę lat do określonego <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.AddYears*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>years</code>lub <code>time</code> jest poza zakresem."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: KoreanCalendar.AlgorithmType
  fullName: System.Globalization.KoreanCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera wartość wskazującą, czy bieżącego kalendarza jest oparta na słonecznego, księżycowy na podstawie lub obie te grupy."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.k_1_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.k_1_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Zawsze zwraca <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.KoreanCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.Eras
  id: Eras
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: KoreanCalendar.Eras
  fullName: System.Globalization.KoreanCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera listę Arial w <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref>."
  remarks: "<xref:System.Globalization.KoreanCalendar>Klasy rozpoznaje tylko bieżącej ery.</xref:System.Globalization.KoreanCalendar> Ta właściwość zawsze zwraca tablicę z tylko jednego elementu."
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Tablica liczb całkowitych, które reprezentuje Arial w <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref>."
  overload: System.Globalization.KoreanCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: KoreanCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca dzień miesiąca w określonym <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_9_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_9_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_9_1.vb)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Do odczytu.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Liczba całkowita z zakresu od 1 do 31 reprezentująca dzień miesiąca w określonym <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: KoreanCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca dzień tygodnia w określonym <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Poniżej przedstawiono wartości <xref:System.DayOfWeek>: | Wartość DayOfWeek | Co oznacza |   |---------------------|---------------------|   | Niedziela | 일요일 |   | Poniedziałek | 월요일 |   | Wtorek | 화요일 |   | Środa | 수요일 |   | Czwartek | 목요일 |   | Piątek | 금요일 |   | Sobota | 토요일 |</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_10_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_10_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_10_1.vb)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Do odczytu.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "<xref:System.DayOfWeek>Wartość, która reprezentuje dzień tygodnia w określonym <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DayOfWeek>"
  overload: System.Globalization.KoreanCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: KoreanCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca dzień roku w określonym <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Dzień roku, jest zdefiniowany jako liczbę dni od pierwszego dnia roku. Na przykład GetDayOfYear dla pierwszego dnia miesiąca zwraca wartość 1, a GetDayOfYear w ostatnim dniu ostatniego miesiąca zwraca sumę dni w roku. Łączna wartość jest taka sama wartość jak zwracany przez <xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A>.</xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_5_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_5_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_5_1.vb)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Do odczytu.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Liczba całkowita z zakresu od 1 do 366 reprezentującą dzień roku w określonym <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: KoreanCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca liczbę dni w określonym miesiącu określonego roku w określonym ery."
  remarks: "Na przykład, ta metoda zwraca 28 lub 29 lutego (`month` = 2) w zależności od tego, czy `year` jest rokiem przestępnym."
  example:
  - "The following code example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-cs[System.Globalization.KoreanCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/393cfbdd-c5b5-4e14-9cac-_1.cs)]\n [!code-cpp[System.Globalization.KoreanCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/393cfbdd-c5b5-4e14-9cac-_1.cpp)]\n [!code-vb[System.Globalization.KoreanCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/393cfbdd-c5b5-4e14-9cac-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje rok."
    - id: month
      type: System.Int32
      description: "Liczba całkowita z zakresu od 1 do 12 reprezentująca miesiąc."
    - id: era
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje ery."
    return:
      type: System.Int32
      description: "Liczba dni w określonym miesiącu określonego roku w określonym ery."
  overload: System.Globalization.KoreanCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>month</code> jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>era</code> jest spoza zakresu obsługiwanego przez kalendarza."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: KoreanCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca liczbę dni w roku określony w określonym ery."
  remarks: "Na przykład, ta metoda zwraca 365 lub 366, w zależności od tego, czy `year` jest rokiem przestępnym."
  example:
  - "The following example calls GetDaysInYear for five years in each era.  \n  \n [!code-vb[System.Globalization.KoreanCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.k_7_1.vb)]\n [!code-cs[System.Globalization.KoreanCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.k_7_1.cs)]\n [!code-cpp[System.Globalization.KoreanCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.k_7_1.cpp)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje rok."
    - id: era
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje ery."
    return:
      type: System.Int32
      description: "Liczba dni w roku określony w określonym ery."
  overload: System.Globalization.KoreanCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>era</code> jest spoza zakresu obsługiwanego przez kalendarza."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: KoreanCalendar.GetEra(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca era w określonym <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "<xref:System.Globalization.KoreanCalendar>Klasy rozpoznaje tylko bieżącej ery.</xref:System.Globalization.KoreanCalendar>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_1_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_1_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_1_1.vb)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Do odczytu.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje ery w określonym <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: KoreanCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Oblicza przestępnego miesiąca dla określonego roku i ery."
  remarks: "W kalendarza, który obsługuje pojęcie miesiąca przestępnym miesiąca przestępnego mogą występować po danym miesiącu lub po wszelkich miesiąc w roku. Na przykład <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName>Metoda zwraca liczbę z zakresu od 1 do 13 wskazującą miesiąca skojarzone z określoną datą.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> Jeśli między ósmego i dziewiąty miesięcy roku, znajduje się w miesiącu przestępnego <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>Metoda zwraca 8 ósmego miesiąca, 9 dla przestępnego ósmego miesiąca i 10 na miesiąc, dziewiąty.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Rok."
    - id: era
      type: System.Int32
      description: "Ery."
    return:
      type: System.Int32
      description: "Zwracana wartość jest zawsze 0 ponieważ <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> klasa nie obsługuje pojęcia miesiąca przestępnym."
  overload: System.Globalization.KoreanCalendar.GetLeapMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: KoreanCalendar.GetMonth(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca miesiąc w określonym <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_0_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_0_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_0_1.vb)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Do odczytu.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Liczba całkowita z zakresu od 1 do 12 reprezentująca miesiąc w określonym <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: KoreanCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca liczbę miesięcy w określony rok w określonym ery."
  remarks: ''
  example:
  - "The following example calls GetMonthsInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.KoreanCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/m-system.globalization.k_8_1.cs)]\n [!code-cpp[System.Globalization.KoreanCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/m-system.globalization.k_8_1.cpp)]\n [!code-vb[System.Globalization.KoreanCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.k_8_1.vb)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje rok."
    - id: era
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje ery."
    return:
      type: System.Int32
      description: "Liczba miesięcy w określonym roku w określonym ery."
  overload: System.Globalization.KoreanCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>era</code> jest spoza zakresu obsługiwanego przez kalendarza."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: KoreanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.KoreanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca tydzień roku, zawierającą datę w określonym <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Ta metoda może służyć do określenia numer tygodnia w roku przez ustawienie `time` parametru ostatni dzień roku.       <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>zawiera wartości specyficzne dla kultury, które mogą być używane dla `rule` i `firstDayOfWeek` parametrów.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>       <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>Właściwość <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>zawiera domyślną <xref:System.DayOfWeek>wartość reprezentujący pierwszy dzień tygodnia dla określoną kulturę, przy użyciu kalendarza określony we <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>właściwości <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.DayOfWeek> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>       <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>Właściwość <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>zawiera domyślną <xref:System.Globalization.CalendarWeekRule>wartość definiujący w tygodniu kalendarzowym dla określoną kulturę, przy użyciu kalendarza określony we <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>właściwości <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CalendarWeekRule> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>       Na przykład w <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetWeekOfYear%2A>dla zwraca 1 stycznia 1.</xref:System.Globalization.Calendar.GetWeekOfYear%2A> </xref:System.Globalization.GregorianCalendar>"
  example:
  - "The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used. If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.  \n  \n [!code-cs[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/csharp/96e14512-2c21-42ee-8498-_1.cs)]\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/visualbasic/96e14512-2c21-42ee-8498-_1.vb)]\n [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/cpp/96e14512-2c21-42ee-8498-_1.cpp)]"
  syntax:
    content: public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Do odczytu.</xref:System.DateTime>"
    - id: rule
      type: System.Globalization.CalendarWeekRule
      description: "Jeden z <xref:System.Globalization.CalendarWeekRule>wartości, które definiuje tygodniu kalendarzowym.</xref:System.Globalization.CalendarWeekRule>"
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: "Jeden z <xref:System.DayOfWeek>wartości, które reprezentuje pierwszy dzień tygodnia.</xref:System.DayOfWeek>"
    return:
      type: System.Int32
      description: "1 na podstawie liczbę całkowitą reprezentującą tydzień roku, zawierającą datę w <code> time </code> parametru."
  overload: System.Globalization.KoreanCalendar.GetWeekOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>lub <code>firstDayOfWeek</code> jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>rule</code> nie jest prawidłową <xref:System.Globalization.CalendarWeekRule> wartość."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: KoreanCalendar.GetYear(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca rok w określonym <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_6_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_6_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_6_1.vb)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Do odczytu.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje roku w określonym <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: KoreanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Określa, czy określoną datę w określonym ery jest dzień przestępnym."
  remarks: "Przestępnego koreański kalendarza odpowiadają tej samej przestępnego w kalendarza gregoriańskiego. Roku przestępnego w kalendarza gregoriańskiego jest zdefiniowany jako rok kalendarza gregoriańskiego, który jest podzielna przez cztery, chyba że ją podzielić przez 100. Jednak gregoriański lat, które są podzielna przez 400 są przestępnego. Typowe rok ma 365 dni i roku przestępnego ma 366 dni.       Dzień przestępnego jest dzień, w którym występuje tylko w roku przestępnym. Na przykład dnia 29 lutego jest tylko dnia przestępnym."
  example:
  - "The following example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.KoreanCalendar.IsLeapDay#1](~/add/codesnippet/csharp/d8cc07a6-1692-41ee-9974-_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/d8cc07a6-1692-41ee-9974-_1.vb)]\n [!code-cpp[System.Globalization.KoreanCalendar.IsLeapDay#1](~/add/codesnippet/cpp/d8cc07a6-1692-41ee-9974-_1.cpp)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje rok."
    - id: month
      type: System.Int32
      description: "Liczba całkowita z zakresu od 1 do 12 reprezentująca miesiąc."
    - id: day
      type: System.Int32
      description: "Liczba całkowita z zakresu od 1 do 31 reprezentująca dzień."
    - id: era
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje ery."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w przypadku określonego dnia na dzień przestępnego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.KoreanCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>month</code> jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>day</code> jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>era</code> jest spoza zakresu obsługiwanego przez kalendarza."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: KoreanCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Określa, czy określony miesiąc w roku określony w określonym ery jest miesiąc przestępnym."
  remarks: "Przestępnego koreański kalendarza odpowiadają tej samej przestępnego w kalendarza gregoriańskiego. Roku przestępnego w kalendarza gregoriańskiego jest zdefiniowany jako rok kalendarza gregoriańskiego, który jest podzielna przez cztery, chyba że ją podzielić przez 100. Jednak gregoriański lat, które są podzielna przez 400 są przestępnego. Typowe rok ma 365 dni i roku przestępnego ma 366 dni.       Miesiąc przestępnego jest całego miesiąca, która występuje tylko w roku przestępnym. Koreański kalendarz nie ma żadnych miesięcy przestępnym."
  example:
  - "The following example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-cs[System.Globalization.KoreanCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/fbe2462c-8d1d-4e5a-bf95-_1.cs)]\n [!code-cpp[System.Globalization.KoreanCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/fbe2462c-8d1d-4e5a-bf95-_1.cpp)]\n [!code-vb[System.Globalization.KoreanCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/fbe2462c-8d1d-4e5a-bf95-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje rok."
    - id: month
      type: System.Int32
      description: "Liczba całkowita z zakresu od 1 do 12 reprezentująca miesiąc."
    - id: era
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje ery."
    return:
      type: System.Boolean
      description: "Ta metoda zawsze zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, chyba że zostaną zastąpione przez klasę pochodną."
  overload: System.Globalization.KoreanCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>month</code> jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>era</code> jest spoza zakresu obsługiwanego przez kalendarza."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: KoreanCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Określa, czy określony rok w określonym ery jest rokiem przestępnym."
  remarks: "Przestępnego koreański kalendarza odpowiadają tej samej przestępnego w kalendarza gregoriańskiego. Roku przestępnego w kalendarza gregoriańskiego jest zdefiniowany jako rok kalendarza gregoriańskiego, który jest podzielna przez cztery, chyba że ją podzielić przez 100. Jednak gregoriański lat, które są podzielna przez 400 są przestępnego. Typowe rok ma 365 dni i roku przestępnego ma 366 dni."
  example:
  - "The following example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.k_4_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.k_4_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.k_4_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje rok."
    - id: era
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje ery."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określony rok jest rokiem przestępnym; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.KoreanCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>era</code> jest spoza zakresu obsługiwanego przez kalendarza."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.KoreanEra
  id: KoreanEra
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: KoreanEra
  nameWithType: KoreanCalendar.KoreanEra
  fullName: System.Globalization.KoreanCalendar.KoreanEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Reprezentuje bieżący ery. To pole jest stałą."
  remarks: "<xref:System.Globalization.KoreanCalendar>Klasy rozpoznaje tylko bieżącej ery.</xref:System.Globalization.KoreanCalendar> To pole zawsze zwraca wartość 1."
  syntax:
    content: public const int KoreanEra = 1;
    return:
      type: System.Int32
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: KoreanCalendar.MaxSupportedDateTime
  fullName: System.Globalization.KoreanCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera najnowsze datę i godzinę obsługiwane przez <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> klasy."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.KoreanCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.k_0_1.cs)]\n [!code-cpp[System.Globalization.KoreanCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.k_0_1.cpp)]\n [!code-vb[System.Globalization.KoreanCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.k_0_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Najnowsze datę i godzinę obsługiwane przez <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> klasy, która jest odpowiednikiem w ostatnim czasie 31 grudnia 9999 r. w kalendarza gregoriańskiego."
  overload: System.Globalization.KoreanCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: KoreanCalendar.MinSupportedDateTime
  fullName: System.Globalization.KoreanCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera Najwcześniejsza data i godzina obsługiwane przez <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> klasy."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.KoreanCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.k_2_1.cs)]\n [!code-cpp[System.Globalization.KoreanCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.k_2_1.cpp)]\n [!code-vb[System.Globalization.KoreanCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.k_2_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Najwcześniejsza data i godzina obsługiwane przez <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> klasy, która jest odpowiednikiem pierwszy momencie 1 stycznia 0001 r. w kalendarza gregoriańskiego."
  overload: System.Globalization.KoreanCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: KoreanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Zwraca <xref:System.DateTime>która jest równa określonej daty i godziny w określonym ery.</xref:System.DateTime>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje rok."
    - id: month
      type: System.Int32
      description: "Liczba całkowita z zakresu od 1 do 12 reprezentująca miesiąc."
    - id: day
      type: System.Int32
      description: "Liczba całkowita z zakresu od 1 do 31 reprezentująca dzień."
    - id: hour
      type: System.Int32
      description: "Liczba całkowita z przedziału od 0 do 23 reprezentująca godzinę."
    - id: minute
      type: System.Int32
      description: "Liczba całkowita z przedziału od 0 do 59 reprezentująca minutę."
    - id: second
      type: System.Int32
      description: "Liczba całkowita z przedziału od 0 do 59 reprezentującą sekundę."
    - id: millisecond
      type: System.Int32
      description: "Liczba całkowita z przedziału od 0 do 999 reprezentujący milisekundy."
    - id: era
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje ery."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Która jest równa określonej daty i godziny w bieżącym ery.</xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>month</code> jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>day</code> jest spoza zakresu obsługiwanego przez kalendarza.       - lub - <code>hour</code> jest mniejsza niż zero lub większą niż 23.       - lub - <code>minute</code> jest mniejsza niż zero lub większa niż 59.       - lub - <code>second</code> jest mniejsza niż zero lub większa niż 59.       - lub - <code>millisecond</code> jest mniejsza niż zero lub większa niż 999.       - lub - <code>era</code> jest spoza zakresu obsługiwanego przez kalendarza."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: KoreanCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.KoreanCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Konwertuje określony rok czterocyfrowy rok przy użyciu <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax*>Właściwości w celu określenia odpowiedniego wieku.</xref:System.Globalization.KoreanCalendar.TwoDigitYearMax*>"
  remarks: "<xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A>definiuje ostatni rok w zakresie 100 roku, który może być reprezentowany przez ToFourDigitYear.</xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> Wiek jest określana przez wyszukiwanie wyłącznie wystąpienie dwucyfrowe zakresu 100 roku. Na przykład jeśli <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A>ustawiono 2029 zakresu 100 roku jest z 1930 2029.</xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> W związku z tym wartość dwucyfrowe 30 jest interpretowany jako 1930, gdy wartość dwucyfrowe 29 jest interpretowana jako 2029.       ToFourDigitYear obsługuje rokiem dwucyfrowym lub czterocyfrowy rok. Przekazanie wartości dwucyfrowe (mniej niż 100) powoduje, że metoda można przekonwertować wartości na wartość czterocyfrowe zgodnie z <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A>wartość reprezentującą odpowiednie wieku.</xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> Jeśli aplikacja zawiera wartość czterocyfrowy rok, która znajduje się w zakresie obsługiwanych kalendarza do ToFourDigitYear, metoda zwraca rzeczywista wartość wejściowa. Jeśli aplikacja udostępnia czterocyfrowe wartość, która jest poza zakresem obsługiwanym kalendarzem lub dostarcza mu wartość ujemną, metoda zgłasza wyjątek."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Dwucyfrowym lub czterocyfrowym liczbę całkowitą reprezentującą rok do konwersji."
    return:
      type: System.Int32
      description: "Liczba całkowita, która zawiera czterocyfrowe reprezentację <code> year </code>."
  overload: System.Globalization.KoreanCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>jest spoza zakresu obsługiwanego przez kalendarza."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: KoreanCalendar.TwoDigitYearMax
  fullName: System.Globalization.KoreanCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Pobiera lub ustawia ostatni rok zakresu 100 roku, który może być reprezentowany przez rok 2-cyfrowy."
  remarks: "Ta właściwość umożliwia roku 2-cyfrowy do prawidłowo przetłumaczenia na rok 4-cyfrowego. Na przykład w kalendarza gregoriańskiego, jeśli ta właściwość jest ustawiona na 2029 zakresu 100 roku jest z 1930 2029. W związku z tym wartość 2-cyfrowy 30 jest interpretowany jako 1930, gdy wartość 2-cyfrowy 29 jest interpretowana jako 2029.       Początkowa wartość tej właściwości jest pochodną ustawienia w części Opcje regionalne i językowe w Panelu sterowania. Jednak te informacje można zmienić podczas trwania <xref:System.AppDomain>.</xref:System.AppDomain> <xref:System.Globalization.KoreanCalendar>Klasa nie wykrywa zmian w ustawieniach systemu automatycznie.</xref:System.Globalization.KoreanCalendar>       Aplikacji powinni ustawić wartość do 99, aby wskazać, że 2 lat mają być pobierane jako literału. Na przykład, jeśli ta właściwość jest ustawiona do 99, 100 roku zakres jest z zakresu od 0 (nie prawidłową wartością dla większości kalendarzy) do 99. W związku z tym wartość 2-cyfrowy 30 jest interpretowana jako 30."
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "Ostatni rok zakresu 100 roku, który może być reprezentowany przez rok 2-cyfrowy."
  overload: System.Globalization.KoreanCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość określona w operacji set jest mniejsza niż 99.       jest większa niż wartość określona w operacji set - lub - <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "W ramach operacji set bieżące wystąpienie jest tylko do odczytu."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.TypeInitializationException
  isExternal: true
  name: System.TypeInitializationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.KoreanCalendar.#ctor
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: KoreanCalendar()
  nameWithType: KoreanCalendar.KoreanCalendar()
  fullName: System.Globalization.KoreanCalendar.KoreanCalendar()
- uid: System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: KoreanCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.KoreanCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: KoreanCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.KoreanCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.KoreanCalendar.AlgorithmType
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: KoreanCalendar.AlgorithmType
  fullName: System.Globalization.KoreanCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.KoreanCalendar.Eras
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: Eras
  nameWithType: KoreanCalendar.Eras
  fullName: System.Globalization.KoreanCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: KoreanCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: KoreanCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: KoreanCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: KoreanCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: KoreanCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.KoreanCalendar.GetEra(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: KoreanCalendar.GetEra(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetEra(DateTime)
- uid: System.Globalization.KoreanCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: KoreanCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.KoreanCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: KoreanCalendar.GetMonth(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetMonth(DateTime)
- uid: System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: KoreanCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.KoreanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: KoreanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.KoreanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
- uid: System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: true
  name: CalendarWeekRule
  nameWithType: CalendarWeekRule
  fullName: System.Globalization.CalendarWeekRule
- uid: System.Globalization.KoreanCalendar.GetYear(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: KoreanCalendar.GetYear(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetYear(DateTime)
- uid: System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: KoreanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: KoreanCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: KoreanCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.KoreanCalendar.KoreanEra
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: KoreanEra
  nameWithType: KoreanCalendar.KoreanEra
  fullName: System.Globalization.KoreanCalendar.KoreanEra
- uid: System.Globalization.KoreanCalendar.MaxSupportedDateTime
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: KoreanCalendar.MaxSupportedDateTime
  fullName: System.Globalization.KoreanCalendar.MaxSupportedDateTime
- uid: System.Globalization.KoreanCalendar.MinSupportedDateTime
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: KoreanCalendar.MinSupportedDateTime
  fullName: System.Globalization.KoreanCalendar.MinSupportedDateTime
- uid: System.Globalization.KoreanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: KoreanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: KoreanCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.KoreanCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.KoreanCalendar.TwoDigitYearMax
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: KoreanCalendar.TwoDigitYearMax
  fullName: System.Globalization.KoreanCalendar.TwoDigitYearMax
- uid: System.Globalization.KoreanCalendar.#ctor*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: KoreanCalendar
  nameWithType: KoreanCalendar.KoreanCalendar
- uid: System.Globalization.KoreanCalendar.AddMonths*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: AddMonths
  nameWithType: KoreanCalendar.AddMonths
- uid: System.Globalization.KoreanCalendar.AddYears*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: AddYears
  nameWithType: KoreanCalendar.AddYears
- uid: System.Globalization.KoreanCalendar.AlgorithmType*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: KoreanCalendar.AlgorithmType
- uid: System.Globalization.KoreanCalendar.Eras*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: Eras
  nameWithType: KoreanCalendar.Eras
- uid: System.Globalization.KoreanCalendar.GetDayOfMonth*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: KoreanCalendar.GetDayOfMonth
- uid: System.Globalization.KoreanCalendar.GetDayOfWeek*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: KoreanCalendar.GetDayOfWeek
- uid: System.Globalization.KoreanCalendar.GetDayOfYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: KoreanCalendar.GetDayOfYear
- uid: System.Globalization.KoreanCalendar.GetDaysInMonth*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: KoreanCalendar.GetDaysInMonth
- uid: System.Globalization.KoreanCalendar.GetDaysInYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: KoreanCalendar.GetDaysInYear
- uid: System.Globalization.KoreanCalendar.GetEra*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetEra
  nameWithType: KoreanCalendar.GetEra
- uid: System.Globalization.KoreanCalendar.GetLeapMonth*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: KoreanCalendar.GetLeapMonth
- uid: System.Globalization.KoreanCalendar.GetMonth*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetMonth
  nameWithType: KoreanCalendar.GetMonth
- uid: System.Globalization.KoreanCalendar.GetMonthsInYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: KoreanCalendar.GetMonthsInYear
- uid: System.Globalization.KoreanCalendar.GetWeekOfYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetWeekOfYear
  nameWithType: KoreanCalendar.GetWeekOfYear
- uid: System.Globalization.KoreanCalendar.GetYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetYear
  nameWithType: KoreanCalendar.GetYear
- uid: System.Globalization.KoreanCalendar.IsLeapDay*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: KoreanCalendar.IsLeapDay
- uid: System.Globalization.KoreanCalendar.IsLeapMonth*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: KoreanCalendar.IsLeapMonth
- uid: System.Globalization.KoreanCalendar.IsLeapYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: KoreanCalendar.IsLeapYear
- uid: System.Globalization.KoreanCalendar.MaxSupportedDateTime*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: KoreanCalendar.MaxSupportedDateTime
- uid: System.Globalization.KoreanCalendar.MinSupportedDateTime*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: KoreanCalendar.MinSupportedDateTime
- uid: System.Globalization.KoreanCalendar.ToDateTime*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: KoreanCalendar.ToDateTime
- uid: System.Globalization.KoreanCalendar.ToFourDigitYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: KoreanCalendar.ToFourDigitYear
- uid: System.Globalization.KoreanCalendar.TwoDigitYearMax*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: KoreanCalendar.TwoDigitYearMax
