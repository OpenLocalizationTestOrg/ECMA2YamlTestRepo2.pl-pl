### YamlMime:ManagedReference
items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile
  id: MemoryMappedFile
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  - System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  - System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  - System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  langs:
  - csharp
  name: MemoryMappedFile
  nameWithType: MemoryMappedFile
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile
  type: Class
  summary: "Reprezentuje plik mapowanych na pamięć."
  remarks: "Plik mapowanych na pamięć mapuje zawartość pliku do przestrzeni adresów logicznych aplikacji. Pliki mapowane w pamięci umożliwiają deweloperom pracy z bardzo dużych plików, ponieważ pamięci, które mogą być zarządzane jednocześnie, a także zezwalać pełną, losowy dostępu do pliku bez konieczności wyszukiwania. Pliki mapowane w pamięci również mogą być współużytkowane przez wiele procesów.       <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A>Metod tworzenia pliku mapowanych na pamięć z określonej ścieżki lub <xref:System.IO.FileStream>istniejącego pliku na dysku.</xref:System.IO.FileStream> </xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> Zmiany zostaną automatycznie rozpropagowane na dysku, gdy plik jest Niemapowane.       <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A>Metody tworzenia mapowanych na pamięć pliku, który nie jest zamapowany do istniejącego pliku na dysku; i nadają się do tworzenia pamięci współużytkowanej do komunikacji międzyprocesowej (IPC).</xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A>       Plik mapowanych na pamięć jest skojarzony z nazwą.       Można tworzyć widoki plików mapowanych na pamięć w tym widoków części pliku. Tę samą część pliku można zamapować na więcej niż jeden adres, aby utworzyć równoczesnych pamięci. Dla dwóch widoków pozostaje jednoczesnych muszą być utworzone na podstawie tego samego pliku mapowanych na pamięć. Tworzenie dwóch mapowania pliku tego samego pliku za pomocą dwóch widoków nie zapewnia współbieżność."
  example:
  - "The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.  \n  \n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/visualbasic/t-system.io.memorymapped_0_1.vb)]\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/csharp/t-system.io.memorymapped_0_1.cs)]"
  syntax:
    content: 'public class MemoryMappedFile : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  id: CreateFromFile(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String)
  nameWithType: MemoryMappedFile.CreateFromFile(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy plik mapowanych na pamięć z pliku na dysku."
  remarks: ''
  example:
  - "The following example uses the CreateFromFile method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.  \n  \n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/visualbasic/m-system.io.memorymapped_0_1.vb)]\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/add/codesnippet/csharp/m-system.io.memorymapped_0_1.cs)]"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka do pliku mapowania."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>to ciąg pusty, zawiera tylko biały znak lub ma jeden lub więcej nieprawidłowych znaków, zgodnie z definicją w &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; metody.       - lub - <code>path</code> odwołuje się do nieprawidłowe urządzenie."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>przekracza maksymalną długość zdefiniowaną przez system operacyjny. W systemie Windows ścieżki musi zawierać mniej niż 248 znaków i nazwy pliku musi zawierać mniej niż 260 znaków."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień do pliku."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)
  id: CreateFromFile(System.String,System.IO.FileMode)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy plik mapowanych na pamięć, który został określony tryb dostępu z pliku na dysku."
  remarks: "`mode` Parametr odnoszą się do pliku źródłowego na dysku. Można użyć tylko <xref:System.IO.FileMode>wartość wyliczenia do tworzenia plików mapowanych na pamięć ze źródłowego pliku na dysku.</xref:System.IO.FileMode>"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka do pliku mapowania."
    - id: mode
      type: System.IO.FileMode
      description: "Tryb dostępu; must be <xref href=&quot;System.IO.FileMode&quot;></xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plik mapowanych na pamięć, który został określony tryb dostępu."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>to ciąg pusty, zawiera tylko biały znak lub ma jeden lub więcej nieprawidłowych znaków, zgodnie z definicją w &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; metody.       - lub - <code>path</code> odwołuje się do nieprawidłowe urządzenie.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mode</code>is <xref href=&quot;System.IO.FileMode&quot;></xref>, <xref href=&quot;System.IO.FileMode&quot;></xref>, or <xref href=&quot;System.IO.FileMode&quot;></xref>.       - lub - <code>mode</code> jest <xref href=&quot;System.IO.FileMode&quot;> </xref> i plik na dysku nie istnieje.       - lub - wystąpił błąd We/Wy."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>przekracza maksymalną długość zdefiniowaną przez system operacyjny. W systemie Windows ścieżki musi zawierać mniej niż 248 znaków i nazwy pliku musi zawierać mniej niż 260 znaków."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień do pliku."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)
  id: CreateFromFile(System.String,System.IO.FileMode,System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode,String)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy plik mapowanych na pamięć, który został określony tryb dostępu i nazwa pliku na dysku."
  remarks: "`mode` Parametr odnoszą się do pliku źródłowego na dysku. Można użyć tylko <xref:System.IO.FileMode>wartość wyliczenia do tworzenia plików mapowanych na pamięć ze źródłowego pliku na dysku.</xref:System.IO.FileMode>"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka do pliku mapowania."
    - id: mode
      type: System.IO.FileMode
      description: "Tryb dostępu; must be <xref href=&quot;System.IO.FileMode&quot;></xref>."
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć został określony tryb nazwy i dostępu."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>to ciąg pusty, zawiera tylko biały znak lub ma jeden lub więcej nieprawidłowych znaków, zgodnie z definicją w &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; metody.       - lub - <code>path</code> odwołuje się do nieprawidłowe urządzenie.       - lub - <code>mapName</code> jest pustym ciągiem.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>mapName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mode</code>is <xref href=&quot;System.IO.FileMode&quot;></xref>, <xref href=&quot;System.IO.FileMode&quot;></xref>, or <xref href=&quot;System.IO.FileMode&quot;></xref>.       - lub - <code>mode</code> jest <xref href=&quot;System.IO.FileMode&quot;> </xref> i plik na dysku nie istnieje.       - lub - wystąpił błąd We/Wy."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>przekracza maksymalną długość zdefiniowaną przez system operacyjny. W systemie Windows ścieżki musi zawierać mniej niż 248 znaków i nazwy pliku musi zawierać mniej niż 260 znaków."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień do pliku."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  id: CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode,String,Int64)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy plik mapowanych na pamięć, który został określony tryb dostępu, nazwy i pojemności z pliku na dysku."
  remarks: "`mode` Parametr odnoszą się do pliku źródłowego na dysku.       Jeśli `capacity` jest większy niż zwiększeniu rozmiaru pliku na dysku, plik na dysku do dopasowania określonej pojemności, nawet jeśli żadne dane nie są zapisywane do pliku mapowanych na pamięć. Aby temu zapobiec, należy określić 0 (zero) pojemności domyślnej, która wewnętrznie ustawi `capacity` rozmiar pliku na dysku."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka do pliku mapowania."
    - id: mode
      type: System.IO.FileMode
      description: "Tryb dostępu; Możesz użyć dowolnej z <xref href=&quot;System.IO.FileMode&quot;> </xref> wyliczenia wartości z wyjątkiem <xref href=&quot;System.IO.FileMode&quot;> </xref>."
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    - id: capacity
      type: System.Int64
      description: "Maksymalny rozmiar w bajtach do przydzielenia do plików mapowanych na pamięć. Określona liczba 0, aby ustawić zdolności do rozmiaru pliku na dysku."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>to ciąg pusty, zawiera tylko biały znak lub ma jeden lub więcej nieprawidłowych znaków, zgodnie z definicją w &lt;xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName&gt; metody.       - lub - <code>path</code> odwołuje się do nieprawidłowe urządzenie.       - lub - <code>mapName</code> jest pustym ciągiem.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>mapName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest większe niż rozmiar przestrzeni adresów logicznych.       - lub - <code>capacity</code> jest mniejsza od zera.       - lub - <code>capacity</code> jest mniejszy niż rozmiar pliku (ale nie zero).       - lub - <code>capacity</code> wynosi zero, a rozmiar pliku na dysku również wynosi zero."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>przekracza maksymalną długość zdefiniowaną przez system operacyjny. W systemie Windows ścieżki musi zawierać mniej niż 248 znaków i nazwy pliku musi zawierać mniej niż 260 znaków."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień do pliku."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy plik mapowanych na pamięć, który został określony tryb dostępu, nazwa, pojemność i typ dostępu z pliku na dysku."
  remarks: "`mode` Parametr odnoszą się do pliku źródłowego na dysku.       Jeśli `capacity` jest większy niż zwiększeniu rozmiaru pliku na dysku, plik na dysku do dopasowania określonej pojemności, nawet jeśli żadne dane nie są zapisywane do pliku mapowanych na pamięć. Aby temu zapobiec, należy określić 0 (zero) pojemności domyślnej, która wewnętrznie ustawi `capacity` rozmiar pliku na dysku."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka do pliku mapowania."
    - id: mode
      type: System.IO.FileMode
      description: "Tryb dostępu; Możesz użyć dowolnej z <xref href=&quot;System.IO.FileMode&quot;> </xref> wyliczenia wartości z wyjątkiem <xref href=&quot;System.IO.FileMode&quot;> </xref>."
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    - id: capacity
      type: System.Int64
      description: "Maksymalny rozmiar w bajtach do przydzielenia do plików mapowanych na pamięć. Określona liczba 0, aby ustawić zdolności do rozmiaru pliku na dysku."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Jedna z wartości wyliczenia, które określają typ dostępu mogą plików mapowanych na pamięć."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem.       - lub - <code>access</code> nie jest dopuszczalna wartość.       - lub - <code>path</code> Określa pusty plik.       - lub - <code>access</code> jest określony jako <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> i pojemność jest większy niż rozmiar pliku wskazywany przez <code>path</code>.       -or-       <code>mode</code> is <xref href=&quot;System.IO.FileMode&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>mapName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest większe niż rozmiar przestrzeni adresów logicznych.       - lub - <code>capacity</code> jest mniejsza od zera.       - lub - <code>capacity</code> jest mniejszy niż rozmiar pliku (ale nie zero).       - lub - <code>capacity</code> wynosi zero, a rozmiar pliku na dysku również wynosi zero.       - lub - <code>access</code> nie jest zdefiniowane <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości.       - lub - rozmiar pliku wskazywany przez <code>path</code> jest większa niż <code>capacity</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "- lub - wystąpił błąd We/Wy."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>przekracza maksymalną długość zdefiniowaną przez system operacyjny. W systemie Windows ścieżki musi zawierać mniej niż 248 znaków i nazwy pliku musi zawierać mniej niż 260 znaków."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień do pliku."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  id: CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy plik mapowanych na pamięć z istniejącym plikiem z określony tryb dostępu, name, inheritability i pojemności."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen);
    parameters:
    - id: fileStream
      type: System.IO.FileStream
      description: "Strumień pliku istniejący plik."
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    - id: capacity
      type: System.Int64
      description: "Maksymalny rozmiar w bajtach do przydzielenia do plików mapowanych na pamięć. Określona liczba 0, aby ustawić zdolności do rozmiaru `filestream`."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Jedna z wartości wyliczenia, które określają typ dostępu mogą plików mapowanych na pamięć.       Nie można ustawić tego parametru <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Jedna z wartości wyliczenia, które określa, czy dojścia do plików mapowanych na pamięć mogą być dziedziczone przez procesu podrzędnego. Wartość domyślna to <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    - id: leaveOpen
      type: System.Boolean
      description: "Wartość, która wskazuje, czy można zamknąć pliku źródłowego strumienia, kiedy <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref> został usunięty."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty.       - lub - <code>capacity</code> długość pliku się od zera.       - lub - <code>access</code> ustawiono <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> lub <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartość wyliczenia, co jest niedozwolone.       - lub - <code>access</code> ustawiono <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> i <code>capacity</code> jest większa niż długość <xref uid=&quot;langword_csharp_filestream&quot; name=&quot;filestream&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza od zera.       - lub - <code>capacity</code> jest mniejszy niż rozmiar pliku.       - lub - <code>access</code> nie jest prawidłową <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia.       - lub - <code>inheritability</code> nie jest prawidłową <xref:System.IO.HandleInheritability> wartości wyliczenia."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  id: CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy plik mapowanych na pamięć, która ma określoną nazwę, pojemności, typ dostępu, uprawnień zabezpieczeń, inheritability oraz usuwania wymaganie z pliku na dysku."
  remarks: "Jeśli `capacity` jest większy niż zwiększeniu rozmiaru pliku na dysku, plik na dysku do dopasowania określonej pojemności, nawet jeśli żadne dane nie są zapisywane do pliku mapowanych na pamięć. Aby temu zapobiec, należy określić 0 (zero) pojemności domyślnej, która wewnętrznie ustawi `capacity` rozmiar pliku na dysku."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen);
    parameters:
    - id: fileStream
      type: System.IO.FileStream
      description: "`fileStream` Do pliku mapowania."
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    - id: capacity
      type: System.Int64
      description: "Maksymalny rozmiar w bajtach do przydzielenia do plików mapowanych na pamięć. Określona liczba 0, aby ustawić zdolności do rozmiaru pliku na dysku."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Jedna z wartości wyliczenia, które określają typ dostępu mogą plików mapowanych na pamięć.       Nie można ustawić tego parametru <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "Uprawnienia, które można otrzymać dostęp do plików i operacji na plikach mapowanych na pamięć.       Ten parametr może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Jedna z wartości wyliczenia, które określa, czy dojścia do plików mapowanych na pamięć mogą być dziedziczone przez procesu podrzędnego. Wartość domyślna to <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby nie usuwaj `fileStream` po <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref> jest zamknięty; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to dispose `fileStream`."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem.       - lub - <code>capacity</code> długość pliku się od zera.       - lub - <code>access</code> ustawiono <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> lub <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartość wyliczenia, co jest niedozwolone."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileStream</code>or <code>mapname</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza od zera.       - lub - <code>capacity</code> jest mniejszy niż rozmiar pliku.       - lub - <code>access</code> nie jest prawidłową <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia.       - lub - <code>inheritability</code> nie jest prawidłową <xref:System.IO.HandleInheritability> wartości wyliczenia."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<code>fileStream</code>został zamknięty."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>access</code>is set to <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;></xref> when <code>fileStream</code>&quot;s access is set to <xref href=&quot;System.IO.FileAccess&quot;></xref> or <xref href=&quot;System.IO.FileAccess&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>mapName</code>już istnieje."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  id: CreateNew(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy plik mapowanych na pamięć, który ma określoną pojemność pamięci systemu."
  remarks: "Ta metoda służy do tworzenia plików mapowanych na pamięć, który nie jest trwały (to znaczy nie są skojarzone z plikiem na dysku), którego można użyć do udostępnienia danych między procesami."
  example:
  - "The following example is composed of three separate processes (console applications) that write `Boolean` values to a memory-mapped file. The following sequence of actions occur:  \n  \n1.  Process A creates the memory-mapped file and writes a value to it.  \n  \n2.  Process B opens the memory-mapped file and writes a value to it.  \n  \n3.  Process C opens the memory-mapped file and writes a value to it.  \n  \n4.  Process A reads and displays the values from the memory-mapped file.  \n  \n5.  After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.  \n  \n To run this example, do the following:  \n  \n1.  Compile the applications and open three Command windows.  \n  \n2.  In the first Command window, run Process A.  \n  \n3.  In the second Command window, run Process B.  \n  \n4.  Return to Process A and press ENTER.  \n  \n5.  In the third Command window, run Process C.  \n  \n6.  Return to Process A and press ENTER.  \n  \n The output of Process A is as follows:  \n  \n```  \nStart Process B and press ENTER to continue.  \nStart Process C and press ENTER to continue.  \nProcess A says: True  \nProcess B says: False  \nProcess C says: True  \n```  \n  \n **Process A**  \n  \n [!code-vb[System.IO.MemoryMappedFiles_IPC_X#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_1.vb)]\n [!code-cs[System.IO.MemoryMappedFiles_IPC_X#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_1.cs)]  \n  \n **Process B**  \n  \n [!code-vb[System.IO.MemoryMappedFiles_IPC_A#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_2.vb)]\n [!code-cs[System.IO.MemoryMappedFiles_IPC_A#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_2.cs)]  \n  \n **Process C**  \n  \n [!code-cs[System.IO.MemoryMappedFiles_IPC_B#1](~/add/codesnippet/csharp/2726e3da-0984-4dfa-b22c-_3.cs)]\n [!code-vb[System.IO.MemoryMappedFiles_IPC_B#1](~/add/codesnippet/visualbasic/2726e3da-0984-4dfa-b22c-_3.vb)]"
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity);
    parameters:
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    - id: capacity
      type: System.Int64
      description: "Maksymalny rozmiar w bajtach do przydzielenia do plików mapowanych na pamięć."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określoną nazwę i pojemności."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza lub równa zero."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy plik mapowanych na pamięć, który ma określoną pojemność i typu dostępu w pamięci systemu."
  remarks: "Ta metoda służy do tworzenia plików mapowanych na pamięć, który nie jest trwały (to znaczy nie są skojarzone z plikiem na dysku), którego można użyć do udostępnienia danych między procesami."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    - id: capacity
      type: System.Int64
      description: "Maksymalny rozmiar w bajtach do przydzielenia do plików mapowanych na pamięć."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Jedna z wartości wyliczenia, które określają typ dostępu mogą plików mapowanych na pamięć. Wartość domyślna to <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem.       - lub - <code>access</code> jest ustawiona na tylko do zapisu z <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza lub równa zero.       - lub - <code>access</code> nie jest prawidłową <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy plik mapowanych na pamięć, która ma określoną nazwę, wydajność, typ dostępu, opcje alokacji pamięci oraz inheritability."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    - id: capacity
      type: System.Int64
      description: "Maksymalny rozmiar w bajtach do przydzielenia do plików mapowanych na pamięć."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Jedna z wartości wyliczenia, które określają typ dostępu mogą plików mapowanych na pamięć. Wartość domyślna to <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "Bitowe połączenie wartości wyliczenia określający opcje alokacji pamięci dla plików mapowanych na pamięć."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Wartość, która określa, czy dojścia do plików mapowanych na pamięć mogą być dziedziczone przez procesu podrzędnego. Wartość domyślna to <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem.       - lub - <code>access</code> jest ustawiona na tylko do zapisu z <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza lub równa zero.       - lub - <code>access</code> nie jest prawidłową <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia.       - lub - <code>inheritability</code> nie jest prawidłową <xref:System.IO.HandleInheritability> wartość."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  id: CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy plik mapowanych na pamięć, która ma określoną pojemność, typ dostępu, Alokacja pamięci, uprawnienia zabezpieczeń oraz inheritability w pamięci systemu."
  remarks: "Ta metoda służy do tworzenia plików mapowanych na pamięć, który nie jest trwały (to znaczy nie są skojarzone z plikiem na dysku), którego można użyć do udostępnienia danych między procesami."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    - id: capacity
      type: System.Int64
      description: "Maksymalny rozmiar w bajtach do przydzielenia do plików mapowanych na pamięć."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Jedna z wartości wyliczenia, które określają typ dostępu mogą plików mapowanych na pamięć. Wartość domyślna to <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "Bitowe połączenie wartości wyliczenia określający opcje alokacji pamięci dla plików mapowanych na pamięć."
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "Uprawnienia, które można otrzymać dostęp do plików i operacji na plikach mapowanych na pamięć.       Ten parametr może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Jedna z wartości wyliczenia, które określa, czy dojścia do plików mapowanych na pamięć mogą być dziedziczone przez procesu podrzędnego. Wartość domyślna to <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem.       - lub - <code>access</code> jest ustawiona na tylko do zapisu z <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest mniejsza lub równa zero.       - lub - <code>access</code> nie jest prawidłową <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia.       - lub - <code>inheritability</code> nie jest prawidłową <xref:System.IO.HandleInheritability> wartości wyliczenia."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  id: CreateOrOpen(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy lub otwiera mapowanych na pamięć pliku, który ma określoną pojemność pamięci systemu."
  remarks: "Ta metoda służy do tworzenia lub otwierania plików mapowanych na pamięć, który nie jest trwały (to znaczy nie są skojarzone z plikiem na dysku), którego można użyć do udostępnienia danych między procesami."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity);
    parameters:
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    - id: capacity
      type: System.Int64
      description: "Maksymalny rozmiar w bajtach do przydzielenia do plików mapowanych na pamięć."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plik mapowanych na pamięć, która ma określoną nazwę i rozmiar."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest większe niż rozmiar przestrzeni adresów logicznych.       - lub - <code>capacity</code> jest mniejsza niż lub równa zero."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy lub otwiera mapowanych na pamięć pliku o określonej pojemności i typu dostępu w pamięci systemu."
  remarks: "Ta metoda służy do tworzenia lub otwierania plików mapowanych na pamięć, który nie jest trwały (to znaczy nie są skojarzone z plikiem na dysku), którego można użyć do udostępnienia danych między procesami."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    - id: capacity
      type: System.Int64
      description: "Maksymalny rozmiar w bajtach do przydzielenia do plików mapowanych na pamięć."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Jedna z wartości wyliczenia, które określają typ dostępu mogą plików mapowanych na pamięć. Wartość domyślna to <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem.       - lub - <code>access</code> jest ustawiona na tylko do zapisu z <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest większe niż rozmiar przestrzeni adresów logicznych.       - lub - <code>capacity</code> jest mniejsza niż lub równa zero.       - lub - <code>access</code> nie jest prawidłową <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "System operacyjny określony dostępu do pliku. na przykład ustawiono dostępu <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> lub <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>, ale plik lub katalog jest przeznaczony tylko do odczytu."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy nowy plik zamapowanej pamięci pusta lub otwiera istniejący plik zamapowanej pamięci, jeśli istnieje wpis o tej samej nazwie. Jeśli otwierania istniejącego pliku, argumenty pojemności i opcje pamięci zostaną zignorowane."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    - id: capacity
      type: System.Int64
      description: "Maksymalny rozmiar w bajtach do przydzielenia do plików mapowanych na pamięć."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Jedna z wartości wyliczenia, które określają typ dostępu mogą plików mapowanych na pamięć. Wartość domyślna to <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "Bitowe połączenie wartości, które wskazują opcje alokacji pamięci do zastosowania do pliku."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Wartość, która określa, czy dojścia do plików mapowanych na pamięć mogą być dziedziczone przez procesu podrzędnego. Wartość domyślna to <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem.       - lub - <code>access</code> jest ustawiona na tylko do zapisu z <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest większe niż rozmiar przestrzeni adresów logicznych.       - lub - <code>capacity</code> jest mniejsza niż lub równa zero.       - lub - <code>access</code> nie jest prawidłową <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia.       - lub - <code>inheritability</code> nie jest prawidłową <xref:System.IO.HandleInheritability> wartości wyliczenia."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "System operacyjny określony dostępu do pliku. na przykład ustawiono dostępu <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> lub <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>, ale plik lub katalog jest przeznaczony tylko do odczytu."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  id: CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy lub otwiera plik mapowanych na pamięć, która ma określoną pojemność, typ dostępu, Alokacja pamięci, uprawnienia zabezpieczeń oraz inheritability w pamięci systemu."
  remarks: "Ta metoda służy do tworzenia lub otwierania plików mapowanych na pamięć, który nie jest trwały (to znaczy nie są skojarzone z plikiem na dysku), którego można użyć do udostępnienia danych między procesami."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Nazwa do przypisania do plików mapowanych na pamięć."
    - id: capacity
      type: System.Int64
      description: "Maksymalny rozmiar w bajtach do przydzielenia do plików mapowanych na pamięć."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Jedna z wartości wyliczenia, które określają typ dostępu mogą plików mapowanych na pamięć. Wartość domyślna to <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    - id: options
      type: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
      description: "Bitowe połączenie wartości wyliczenia określający opcje alokacji pamięci dla plików mapowanych na pamięć."
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "Uprawnienia, które można otrzymać dostęp do plików i operacji na plikach mapowanych na pamięć.       Ten parametr może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Jedna z wartości wyliczenia, które określa, czy dojścia do plików mapowanych na pamięć mogą być dziedziczone przez procesu podrzędnego. Wartość domyślna to <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem.       - lub - <code>access</code> jest ustawiona na tylko do zapisu z <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>capacity</code>jest większe niż rozmiar przestrzeni adresów logicznych.       - lub - <code>capacity</code> jest mniejsza niż lub równa zero.       - lub - <code>access</code> nie jest prawidłową <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia.       - lub - <code>inheritability</code> nie jest prawidłową <xref:System.IO.HandleInheritability> wartości wyliczenia."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Odmowa określonego systemu operacyjnego <code> access </code> do pliku, na przykład <code> access </code> ma ustawioną wartość <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> lub <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>, ale plik lub katalog jest przeznaczony tylko do odczytu."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  id: CreateViewAccessor
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewAccessor()
  nameWithType: MemoryMappedFile.CreateViewAccessor()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot;> </xref> mapujący do widoku plików mapowanych na pamięć."
  remarks: "Można użyć widoku zwracany przez tę metodę losowe dostępu do pliku mapowanych na pamięć."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor ();
    parameters: []
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
      description: "Losowo dostępny bloku pamięci."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Nie ma autoryzacji dostępu do plików mapowanych na pamięć."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  id: CreateViewAccessor(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewAccessor(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot;> </xref> mapujący do widoku plików mapowanych na pamięć i ma określone przesunięcie i rozmiaru."
  remarks: "Można użyć widoku zwracany przez tę metodę losowe dostępu do pliku mapowanych na pamięć.       Aby utworzyć pełny widok plików mapowanych na pamięć, należy określić 0 (zero) `size` parametru. Jeśli to zrobisz, rozmiar widoku może być mniejszy lub większy niż rozmiar pliku źródłowego na dysku. To dlatego widoków znajdują się w jednostkach stron systemu, i rozmiar widoku jest zaokrąglana do następnego rozmiaru strony systemowej."
  example:
  - "The following example creates a view of a memory-mapped file and edits it. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.  \n  \n [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/add/codesnippet/visualbasic/eabd93aa-7563-4639-a698-_1.vb)]\n [!code-cs[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/add/codesnippet/csharp/eabd93aa-7563-4639-a698-_1.cs)]"
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size);
    parameters:
    - id: offset
      type: System.Int64
      description: "Bajt, w którym należy uruchomić widoku."
    - id: size
      type: System.Int64
      description: "Rozmiar widoku. Określ 0 (zero), aby utworzyć widok, który rozpoczyna się od `offset` i kończy się około na końcu plików mapowanych na pamięć."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
      description: "Losowo dostępny bloku pamięci."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>lub <code>size</code> jest wartością ujemną.       - lub - <code>size</code> jest większy niż przestrzeń adresów logicznych."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Nie ma autoryzacji dostępu do plików mapowanych na pamięć."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot;> </xref> mapujący do widoku plików mapowanych na pamięć i ma określony przesunięcie, rozmiar i ograniczenia dostępu."
  remarks: "Można użyć widoku zwracany przez tę metodę losowe dostępu do pliku mapowanych na pamięć.       Aby utworzyć pełny widok plików mapowanych na pamięć, należy określić 0 (zero) `size` parametru. Jeśli to zrobisz, rozmiar widoku może być mniejszy lub większy niż rozmiar pliku źródłowego na dysku. To dlatego widoków znajdują się w jednostkach stron systemu, i rozmiar widoku jest zaokrąglana do następnego rozmiaru strony systemowej."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: offset
      type: System.Int64
      description: "Bajt, w którym należy uruchomić widoku."
    - id: size
      type: System.Int64
      description: "Rozmiar widoku. Określ 0 (zero), aby utworzyć widok, który rozpoczyna się od `offset` i kończy się około na końcu plików mapowanych na pamięć."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Jedna z wartości wyliczenia, które określają typ dostępu mogą plików mapowanych na pamięć. Wartość domyślna to <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
      description: "Losowo dostępny bloku pamięci."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>lub <code>size</code> jest wartością ujemną.       - lub - <code>size</code> jest większy niż przestrzeń adresów logicznych."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>access</code>jest nieprawidłowa dla plików mapowanych na pamięć."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  id: CreateViewStream
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewStream()
  nameWithType: MemoryMappedFile.CreateViewStream()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy strumień, który jest mapowany na widok plików mapowanych na pamięć."
  remarks: "Można użyć Strumień zwrócony przez tę metodę dostęp sekwencyjny do pliku mapowane w pamięci, takich jak komunikacji między procesami."
  example:
  - "The following example creates a stream and writes a value to it. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> method.  \n  \n [!code-vb[System.IO.MemoryMappedFiles_IPC_X#2](~/add/codesnippet/visualbasic/m-system.io.memorymapped_1_1.vb)]\n [!code-cs[System.IO.MemoryMappedFiles_IPC_X#2](~/add/codesnippet/csharp/m-system.io.memorymapped_1_1.cs)]"
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream ();
    parameters: []
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream
      description: "Strumienia pamięci."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Nie ma autoryzacji dostępu do plików mapowanych na pamięć."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  id: CreateViewStream(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewStream(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy strumień, która jest mapowana do widoku plików mapowanych na pamięć i ma określone przesunięcie i rozmiar."
  remarks: "Można użyć Strumień zwrócony przez tę metodę dostęp sekwencyjny do pliku mapowane w pamięci, takich jak komunikacji między procesami.       Aby utworzyć pełny widok plików mapowanych na pamięć, należy określić 0 (zero) `size` parametru. Jeśli to zrobisz, rozmiar widoku może być mniejszy lub większy niż rozmiar pliku źródłowego na dysku. To dlatego widoków znajdują się w jednostkach stron systemu, i rozmiar widoku jest zaokrąglana do następnego rozmiaru strony systemowej."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size);
    parameters:
    - id: offset
      type: System.Int64
      description: "Bajt, w którym należy uruchomić widoku."
    - id: size
      type: System.Int64
      description: "Rozmiar widoku. Określ 0 (zero), aby utworzyć widok, który rozpoczyna się od `offset` i kończy się około na końcu plików mapowanych na pamięć."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream
      description: "Strumień pamięci, która ma określone przesunięcie i rozmiar."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>lub <code>size</code> jest wartością ujemną.       - lub - <code>size</code> jest większy niż przestrzeń adresów logicznych."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Nie ma autoryzacji dostępu do plików mapowanych na pamięć."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>size</code>jest większa niż łączna ilość pamięci wirtualnej."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  id: CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Tworzy strumień, która jest mapowana do widoku plików mapowanych na pamięć i ma określone przesunięcie, rozmiar i typ dostępu."
  remarks: "Można użyć Strumień zwrócony przez tę metodę dostęp sekwencyjny do pliku mapowane w pamięci, takich jak komunikacji między procesami.       Aby utworzyć pełny widok plików mapowanych na pamięć, należy określić 0 (zero) `size` parametru. Jeśli to zrobisz, rozmiar widoku może być mniejszy lub większy niż rozmiar pliku źródłowego na dysku. To dlatego widoków znajdują się w jednostkach stron systemu, i rozmiar widoku jest zaokrąglana do następnego rozmiaru strony systemowej."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);
    parameters:
    - id: offset
      type: System.Int64
      description: "Bajt, w którym należy uruchomić widoku."
    - id: size
      type: System.Int64
      description: "Rozmiar widoku. Określ 0 (zero), aby utworzyć widok, który rozpoczyna się od `offset` i kończy się około na końcu plików mapowanych na pamięć."
    - id: access
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
      description: "Jedna z wartości wyliczenia, które określają typ dostępu mogą plików mapowanych na pamięć. Wartość domyślna to <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref>."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedViewStream
      description: "Strumień pamięci, która ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>lub <code>size</code> jest wartością ujemną.       - lub - <code>size</code> jest większy niż przestrzeń adresów logicznych.       - lub - <code>access </code>nie jest prawidłową <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> wartości wyliczenia."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>access</code>jest nieprawidłowa dla plików mapowanych na pamięć."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>size</code>jest większa niż łączna ilość pamięci wirtualnej.       - lub - <code>access</code> jest nieprawidłowa dla plików mapowanych na pamięć."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  id: Dispose
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: Dispose()
  nameWithType: MemoryMappedFile.Dispose()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Zwalnia wszelkie zasoby używane przez <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MemoryMappedFile.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Zwalnia zasoby niezarządzane używane przez <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFile&quot;> </xref> i opcjonalnie zwalnia zasoby zarządzane."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl
  id: GetAccessControl
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: MemoryMappedFile.GetAccessControl()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Pobiera kontroli dostępu do zasobów plików mapowanych na pamięć."
  syntax:
    content: public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "Uprawnienia, które można otrzymać dostęp do plików i operacji na plikach mapowanych na pamięć."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podstawowy można ustawić informacji zabezpieczeń nie powiodło się."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Podstawowy można ustawić informacji zabezpieczeń nie powiodło się."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Plików mapowanych na pamięć jest zamknięty."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Bieżąca platforma to Windows 98 lub starszym."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Podstawowy można ustawić informacji zabezpieczeń nie powiodło się.       - lub - plików mapowanych na pamięć został otwarty jako <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot;> </xref> tylko."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  id: OpenExisting(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: OpenExisting(String)
  nameWithType: MemoryMappedFile.OpenExisting(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Otwiera istniejący plik mapowanych na pamięć, która ma określoną nazwę w pamięci systemu."
  remarks: "Plików mapowanych na pamięć może być albo utrwalonego mapowanych na pamięć pliku (skojarzonych z plikiem na dysku) lub z systemem innym niż utrwalone."
  example:
  - "**Opening a Persisted Memory-Mapped File**  \n  \n The following example opens a memory-mapped file named `ImgA` that has already been created from a file on disk (as shown in the example for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> method).  \n  \n [!code-cs[memorymappedfiles.memorymappedfile.openexisting#1](~/add/codesnippet/csharp/m-system.io.memorymapped_2_1.cs)]\n [!code-vb[memorymappedfiles.memorymappedfile.openexisting#1](~/add/codesnippet/visualbasic/m-system.io.memorymapped_2_1.vb)]  \n  \n **Opening a Non-Persisted Memory-Mapped File**  \n  \n The following example opens a memory-mapped file used for inter-process communication. This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> method."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName);
    parameters:
    - id: mapName
      type: System.String
      description: "Nazwa pliku mapowanych na pamięć, aby otworzyć."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć o określonej nazwie."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Plik określony dla <code> mapName </code> nie istnieje."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  id: OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: OpenExisting(String,MemoryMappedFileRights)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Otwiera istniejący plik mapowanych na pamięć uprawnieniami określonej nazwy i dostępu w pamięci systemu."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights);
    parameters:
    - id: mapName
      type: System.String
      description: "Nazwa pliku mapowanych na pamięć, aby otworzyć."
    - id: desiredAccessRights
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
      description: "Jedna z wartości wyliczenia, które określa prawa dostępu do zastosowania do plików mapowanych na pamięć."
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>desiredAccessRights</code>nie jest prawidłową <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot;> </xref> wartości wyliczenia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Plik określony dla <code> mapName </code> nie istnieje."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  id: OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Otwiera istniejący plik mapowanych na pamięć, która ma określoną nazwę, prawa dostępu i inheritability w pamięci systemu."
  syntax:
    content: public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability);
    parameters:
    - id: mapName
      type: System.String
      description: "Nazwa pliku mapowanych na pamięć, aby otworzyć."
    - id: desiredAccessRights
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
      description: "Jedna z wartości wyliczenia, które określa prawa dostępu do zastosowania do plików mapowanych na pamięć."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Jedna z wartości wyliczenia, które określa, czy dojścia do plików mapowanych na pamięć mogą być dziedziczone przez procesu podrzędnego. Wartość domyślna to <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability>"
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFile
      description: "Plików mapowanych na pamięć ma określonej właściwości."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mapName</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>mapName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>desiredAccessRights</code>nie jest prawidłową <xref href=&quot;System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot;> </xref> wartości wyliczenia.       - lub - <code>inheritability</code> nie jest prawidłową <xref:System.IO.HandleInheritability> wartości wyliczenia."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Żądany dostęp jest nieprawidłowa dla plików mapowanych na pamięć."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Plik określony dla <code> mapName </code> nie istnieje."
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  id: SafeMemoryMappedFileHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: SafeMemoryMappedFileHandle
  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Pobiera dojście do pliku pliku mapowanych na pamięć."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
      description: "Dojścia do plików mapowanych na pamięć."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  id: SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  langs:
  - csharp
  name: SetAccessControl(MemoryMappedFileSecurity)
  nameWithType: MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.MemoryMappedFiles
  summary: "Ustawia kontroli dostępu do zasobu plików mapowanych na pamięć."
  syntax:
    content: public void SetAccessControl (System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity);
    parameters:
    - id: memoryMappedFileSecurity
      type: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
      description: "Uprawnienia, które można otrzymać dostęp do plików i operacji na plikach mapowanych na pamięć."
  overload: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>memoryMappedFileSecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podstawowy można ustawić informacji zabezpieczeń nie powiodło się."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Podstawowy można ustawić informacji zabezpieczeń nie powiodło się."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Podstawowy można ustawić informacji zabezpieczeń nie powiodło się."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String)
  nameWithType: MemoryMappedFile.CreateFromFile(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFile
  nameWithType: MemoryMappedFile
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode,String)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode,String,Int64)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileAccess
  nameWithType: MemoryMappedFileAccess
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  nameWithType: MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,MemoryMappedFileSecurity,HandleInheritability,Boolean)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileSecurity
  nameWithType: MemoryMappedFileSecurity
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileOptions
  nameWithType: MemoryMappedFileOptions
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileOptions
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  nameWithType: MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,MemoryMappedFileSecurity,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor()
  nameWithType: MemoryMappedFile.CreateViewAccessor()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor()
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedViewAccessor
  nameWithType: MemoryMappedViewAccessor
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream()
  nameWithType: MemoryMappedFile.CreateViewStream()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream()
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedViewStream
  nameWithType: MemoryMappedViewStream
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream(Int64,Int64)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  nameWithType: MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: Dispose()
  nameWithType: MemoryMappedFile.Dispose()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose()
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MemoryMappedFile.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(Boolean)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: GetAccessControl()
  nameWithType: MemoryMappedFile.GetAccessControl()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl()
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting(String)
  nameWithType: MemoryMappedFile.OpenExisting(String)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting(String,MemoryMappedFileRights)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileRights
  nameWithType: MemoryMappedFileRights
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  nameWithType: MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(String,MemoryMappedFileRights,HandleInheritability)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SafeMemoryMappedFileHandle
  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeMemoryMappedFileHandle
  nameWithType: SafeMemoryMappedFileHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SetAccessControl(MemoryMappedFileSecurity)
  nameWithType: MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(MemoryMappedFileSecurity)
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateFromFile
  nameWithType: MemoryMappedFile.CreateFromFile
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateNew
  nameWithType: MemoryMappedFile.CreateNew
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateOrOpen
  nameWithType: MemoryMappedFile.CreateOrOpen
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewAccessor
  nameWithType: MemoryMappedFile.CreateViewAccessor
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: CreateViewStream
  nameWithType: MemoryMappedFile.CreateViewStream
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: Dispose
  nameWithType: MemoryMappedFile.Dispose
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: GetAccessControl
  nameWithType: MemoryMappedFile.GetAccessControl
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: OpenExisting
  nameWithType: MemoryMappedFile.OpenExisting
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SafeMemoryMappedFileHandle
  nameWithType: MemoryMappedFile.SafeMemoryMappedFileHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl*
  parent: System.IO.MemoryMappedFiles.MemoryMappedFile
  isExternal: false
  name: SetAccessControl
  nameWithType: MemoryMappedFile.SetAccessControl
