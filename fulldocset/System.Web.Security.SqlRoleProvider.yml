### YamlMime:ManagedReference
items:
- uid: System.Web.Security.SqlRoleProvider
  id: SqlRoleProvider
  children:
  - System.Web.Security.SqlRoleProvider.#ctor
  - System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.SqlRoleProvider.ApplicationName
  - System.Web.Security.SqlRoleProvider.CreateRole(System.String)
  - System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.Security.SqlRoleProvider.GetAllRoles
  - System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)
  - System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)
  - System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.SqlRoleProvider.RoleExists(System.String)
  langs:
  - csharp
  name: SqlRoleProvider
  nameWithType: SqlRoleProvider
  fullName: System.Web.Security.SqlRoleProvider
  type: Class
  summary: "Zarządza przechowywanie informacji członkostwo roli dla aplikacji ASP.NET w bazie danych programu SQL Server."
  remarks: "This class is used by the <xref:System.Web.Security.Roles> and <xref:System.Web.Security.RolePrincipal> classes to provide role-management services for an ASP.NET application using a SQL Server database. You can use role management to specify different levels of authorization for your application.  \n  \n To use the SqlRoleProvider class, you must first create the SQL Server database used by the SqlRoleProvider. To create the database used by the SqlRoleProvider class, run the `aspnet_regsql.exe` executable found in the C:\\WINDOWS\\Microsoft.NET\\Framework\\ `versionNumber` folder and specify the `-Ar` option (for example, `aspnet_regsql.exe -Ar`). The database created is called Aspnetdb. Alternatively, run aspnet_regsql.exe to pull up the GUI configuration mode and choose to configure all ASP.NET features.  \n  \n If the role provider is configured with a connection string that uses integrated security, the process account of the ASP.NET application must have rights to connect to the SQL Server database.  \n  \n The Machine.config file is configured with a SqlRoleProvider instance named AspNetSqlProvider that connects to the SQL Server on the local machine. You can use this instance of the provider, or specify your own in the Web.config file for your ASP.NET application. To use the AspNetSqlProvider instance, specify AspNetSqlProvider as the `defaultProvider` in your  configuration.  \n  \n You can configure the SqlRoleProvider to use the same database and user information as the <xref:System.Web.Security.SqlMembershipProvider> in order to use a single database for authentication and authorization information. To use the same database for membership and role information, run the aspnet_regsql.exe executable and install the membership feature. Then, specify the same connection string in your configuration for both your SqlRoleProvider and <xref:System.Web.Security.SqlMembershipProvider> instances. Also ensure that both provider instances are configured with the same <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>."
  example:
  - "The following example shows the Web.config file for an ASP.NET application configured to use a SqlRoleProvider object and the <xref:System.Web.Security.SqlMembershipProvider>. The  element is configured to only allow access to authenticated users in the Administrators role.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"logincs.aspx\"  \n      name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n    <authorization>  \n      <deny users=\"?\" />  \n         <allow roles=\"Administrators\" />  \n         <deny users=\"*\" />  \n    </authorization>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"false\"  \n          requiresQuestionAndAnswer=\"false\"   \n          passwordFormat=\"Hashed\"   \n          applicationName=\"SampleApplication\" />  \n      </providers>  \n    </membership>  \n    <roleManager defaultProvider=\"SqlProvider\"   \n      enabled=\"true\"  \n      cacheRolesInCookie=\"true\"  \n      cookieName=\".ASPROLES\"  \n      cookieTimeout=\"30\"  \n      cookiePath=\"/\"  \n      cookieRequireSSL=\"true\"  \n      cookieSlidingExpiration=\"true\"  \n      cookieProtection=\"All\" >  \n      <providers>  \n        <add  \n          name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlRoleProvider\"  \n          connectionStringName=\"SqlServices\"   \n          applicationName=\"SampleApplication\" />  \n      </providers>  \n    </roleManager>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class SqlRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: SqlRoleProvider()
  nameWithType: SqlRoleProvider.SqlRoleProvider()
  fullName: System.Web.Security.SqlRoleProvider.SqlRoleProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tworzy wystąpienie <xref href=&quot;System.Web.Security.SqlRoleProvider&quot;> </xref> klasy."
  remarks: "Konstruktor elementu SqlRoleProvider jest wywoływana przez platformę ASP.NET w celu utworzenia wystąpienia <xref:System.Web.Security.SqlRoleProvider>klasy określony w konfiguracji aplikacji.</xref:System.Web.Security.SqlRoleProvider> Ten konstruktor nie jest przeznaczony do użycia w kodzie."
  syntax:
    content: public SqlRoleProvider ();
    parameters: []
  overload: System.Web.Security.SqlRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: SqlRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.SqlRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Dodaje określone nazwy użytkownika do każdej z określonych ról."
  remarks: "Metoda AddUsersToRoles jest wywoływana przez <xref:System.Web.Security.Roles>klasę, aby skojarzyć użytkowników z jednego lub więcej z co najmniej jedną rolę w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).</xref:System.Web.Security.Roles> Ta metoda jest wywoływana przez <xref:System.Web.Security.Roles.AddUserToRole%2A>, <xref:System.Web.Security.Roles.AddUserToRoles%2A>, <xref:System.Web.Security.Roles.AddUsersToRole%2A>, a także <xref:System.Web.Security.Roles.AddUsersToRoles%2A>metody <xref:System.Web.Security.Roles>klasy.</xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.AddUsersToRoles%2A> </xref:System.Web.Security.Roles.AddUsersToRole%2A> </xref:System.Web.Security.Roles.AddUserToRoles%2A> </xref:System.Web.Security.Roles.AddUserToRole%2A>       Aktualizacje bazy danych, które są wykonywane podczas wywołania metody AddUsersToRoles są wykonywane w ramach transakcji. Jeśli wystąpi błąd, takie jak nazwa użytkownika, który jest już w określonej roli, transakcja zostanie wycofana i są wykonywane żadne aktualizacje.       Jeśli <xref:System.Web.Security.SqlRoleProvider>jest używany z <xref:System.Web.Security.SqlMembershipProvider>i jedną określone nazwy użytkownika nie istnieje w bazie danych, nazwą użytkownika zostaną automatycznie dodane do bazy danych.</xref:System.Web.Security.SqlMembershipProvider> </xref:System.Web.Security.SqlRoleProvider>       Nazwy użytkowników i nazwy roli nie może zawierać przecinków."
  example:
  - "The following code example adds one or more users to a role or removes a user from a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/1f379f8c-79a9-40dc-ab92-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/1f379f8c-79a9-40dc-ab92-_1.aspx)]"
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Tablica ciągów nazw użytkowników, które mają zostać dodane do określonych ról."
    - id: roleNames
      type: System.String[]
      description: "Tablica ciągów nazw ról do określone nazwy użytkownika do dodania."
  overload: System.Web.Security.SqlRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One of the roles in <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       One of the users in <code>usernames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Jedną z ról w <code> roleNames </code> to ciąg pusty lub zawiera przecinek.       - lub - jeden z użytkowników w <code> usernames </code> to ciąg pusty lub zawiera przecinek.       - lub - jedną z ról w <code> roleNames </code> jest dłuższa niż 256 znaków.       - lub - jeden z użytkowników w <code> usernames </code> jest dłuższa niż 256 znaków.       - lub - <code> roleNames </code> zawiera zduplikowany element.       - lub - <code> usernames </code> zawiera zduplikowany element."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Nie znaleziono co najmniej jeden z nazwy określonej roli.       - lub - nie znaleziono co najmniej jeden określone nazwy użytkownika.       - lub - co najmniej jeden określone nazwy użytkownika jest już skojarzony z jedną lub więcej nazw określoną rolę.       - lub - wystąpił nieznany błąd podczas komunikowania się z bazą danych."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlRoleProvider.ApplicationName
  fullName: System.Web.Security.SqlRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera lub ustawia nazwę aplikacji, dla którego mają być przechowywane i pobierane informacje."
  remarks: "Właściwość ApplicationName jest używany przez <xref:System.Web.Security.SqlRoleProvider>powiązania użytkowników i ról z różnych aplikacji.</xref:System.Web.Security.SqlRoleProvider> Dzięki temu wiele aplikacji może używać tej samej bazy danych do przechowywania informacji dotyczących ról użytkowników i bez powodowania konfliktów między zduplikowanych nazw użytkownika lub nazwy roli. Wiele aplikacji programu ASP.NET można użyć tej samej bazy danych, podając tę samą wartość właściwości ApplicationName. Właściwość ApplicationName można ustawić programowo, lub można ją ustawić deklaratywnie w pliku konfiguracji dla aplikacji sieci Web przy użyciu `applicationName` atrybutu.       Jeśli nie określono wartości dla `applicationName` atrybutu w pliku konfiguracji dla aplikacji sieci Web, a następnie <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>wartości właściwości dla bieżącej <xref:System.Web.HttpContext.Request%2A?displayProperty=fullName>obiekt jest używany.</xref:System.Web.HttpContext.Request%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>      > [!CAUTION] > Ponieważ domyślnego pojedynczego wystąpienia dostawcy roli jest używana dla wszystkich żądań obsłużonych przez <xref:System.Web.HttpApplication>obiektu, może mieć wiele żądań wykonywanych równocześnie i ustawiania wartości właściwości ApplicationName.</xref:System.Web.HttpApplication> Właściwość ApplicationName nie jest wielowątkowość dla wielu operacji zapisu, a zmiana wartości właściwości ApplicationName może spowodować nieoczekiwane zachowanie dla wielu użytkowników aplikacji. Zaleca się unikać pisania kodu, który umożliwia użytkownikom można ustawić właściwości ApplicationName, chyba że użytkownik musi. Przykładem aplikacji, których ustawienia właściwości ApplicationName mogą być wymagane jest administracyjne aplikacji, która zarządza danymi roli dla wielu zastosowań. Takiej aplikacji powinna być aplikacją pojedynczego użytkownika, a nie aplikacji sieci Web."
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlRoleProvider> instance and sets the ApplicationName property to `MyApplication`.  \n  \n```  \n<roleManager defaultProvider=\"SqlProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/\"  \n  cookieRequireSSL=\"false\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"All\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlRoleProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Nazwa aplikacji, dla którego mają być przechowywane i pobierane informacje. Wartość domyślna to &lt;xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName&gt; wartości właściwości dla bieżącej &lt;xref:System.Web.HttpContext.Request%2A?displayProperty=fullName&gt;."
  overload: System.Web.Security.SqlRoleProvider.ApplicationName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Próbowano ustawić właściwość ApplicationName przez obiekt wywołujący, który nie ma <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> ASP.NET hosting uprawnień."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Próbowano ustawić właściwość ApplicationName ciąg, który jest dłuższa niż 256 znaków."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: SqlRoleProvider.CreateRole(String)
  fullName: System.Web.Security.SqlRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Dodaje nową rolę do roli bazy danych."
  remarks: "Metoda CreateRole jest wywoływana przez <xref:System.Web.Security.Roles>klasę, aby utworzyć rolę w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).</xref:System.Web.Security.Roles>       Maksymalna długość nazwy roli to 256 znaków. Nazwy roli nie jest rozróżniana. Przecinkami nie są dozwolone w nazwach ról."
  example:
  - "The following code example creates a new role in the database. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.sq_6_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.sq_6_1.aspx)]"
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Nazwa roli do utworzenia."
  overload: System.Web.Security.SqlRoleProvider.CreateRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>to ciąg pusty lub zawiera przecinek.       - lub - <code>roleName</code> jest dłuższa niż 256 znaków."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>roleName</code>już istnieje w bazie danych.       - lub - wystąpił nieznany błąd podczas komunikowania się z bazą danych."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: SqlRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.SqlRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Usuwa rolę z roli bazy danych."
  remarks: "Metoda DeleteRole jest wywoływana przez <xref:System.Web.Security.Roles>klasę, aby usunąć rolę z bazy danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).</xref:System.Web.Security.Roles> Po usunięciu roli listę użytkowników skojarzonych z tej roli są także usuwane z bazy danych. Nie wpływa na informacje o użytkowniku w bazie danych.       Jeśli `throwOnPopulatedRole` jest `true`, następnie zostanie wygenerowany wyjątek i roli nie zostaną usunięte, jeśli rola zidentyfikowana na podstawie `roleName` parametr ma co najmniej jednego członka. Jeśli `throwOnPopulatedRole` jest `false`, roli zostanie usunięty, czy nie jest on pusty."
  example:
  - "The following example deletes a role from the database. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/csharp/m-system.web.security.sq_0_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/visualbasic/m-system.web.security.sq_0_1.aspx)]"
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "Nazwa roli do usunięcia."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, zgłasza wyjątek, jeśli `roleName` ma co najmniej jednego członka."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli rola została pomyślnie usunięta; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlRoleProvider.DeleteRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>to ciąg pusty lub zawiera przecinek.       - lub - <code>roleName</code> jest dłuższa niż 256 znaków."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>roleName</code>zawiera co najmniej jednego członka i <code>throwOnPopulatedRole</code> jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.       - lub - wystąpił nieznany błąd podczas komunikowania się z bazą danych."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: SqlRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.SqlRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera tablicę nazw użytkowników w roli, której nazwa użytkownika zawiera nazwę określonego użytkownika do dopasowania."
  remarks: "Metoda FindUsersInRole jest wywoływana przez <xref:System.Web.Security.Roles>klasy i zwraca listę użytkowników w roli, których nazwa użytkownika zawiera dopasowanie podane `usernameToMatch` dla skonfigurowanego `applicationName`.</xref:System.Web.Security.Roles> <xref:System.Web.Security.SqlRoleProvider>Wyszukiwania dla nazwy użytkownika, który odpowiada `usernameToMatch` za pomocą PODOBNEGO — słowo kluczowe i obsługuje program SQL Server wieloznaczne wartości parametru.</xref:System.Web.Security.SqlRoleProvider> Na przykład jeśli `usernameToMatch` parametr ma wartość &quot;uzytkownik1&quot;, a następnie informacje o członkostwie dla użytkownika o nazwie &quot;uzytkownik1&quot; jest zwracany, jeśli istnieje. Jeśli `usernameToMatch` parametr ma wartość &quot;uzytkownik %&quot;, a następnie zwracane są informacje dotyczące członkostwa użytkowników przy użyciu nazwy użytkownika &quot;uzytkownik1&quot;, &quot;uzytkownik2&quot;, &quot;uzytkownik_administrator&quot; itd."
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.FindUsersInRole%2A> method to display role membership based on user input. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.Roles#11](~/add/codesnippet/csharp/995e27e2-08d0-46c4-866e-_1.aspx)]\n [!code-vb[System.Web.Security.Roles#11](~/add/codesnippet/visualbasic/995e27e2-08d0-46c4-866e-_1.aspx)]"
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "Rola do przeszukania."
    - id: usernameToMatch
      type: System.String
      description: "Nazwa użytkownika do wyszukania."
    return:
      type: System.String[]
      description: "Tablica ciągów zawierająca nazwy wszystkich użytkowników, jeśli nazwa użytkownika odpowiada <code> usernameToMatch </code> i użytkownik jest członkiem określonej roli."
  overload: System.Web.Security.SqlRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic).       -or-       <code>usernameToMatch</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>to ciąg pusty lub zawiera przecinek.       - lub - <code>usernameToMatch</code> jest pustym ciągiem.       - lub - <code>roleName</code> jest dłuższa niż 256 znaków.       - lub - <code>usernameToMatch</code> jest dłuższa niż 256 znaków."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>roleName</code>Nie znaleziono w bazie danych.       - lub - wystąpił nieznany błąd podczas komunikowania się z bazą danych."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: SqlRoleProvider.GetAllRoles()
  fullName: System.Web.Security.SqlRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera listę wszystkich ról dla aplikacji."
  remarks: "Metoda GetAllRoles jest wywoływana przez <xref:System.Web.Security.Roles>klasy można pobrać listy wszystkich ról w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetAllRoles%2A> method to get the list of roles for an application and bind the results to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.sq_8_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.sq_8_1.aspx)]"
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "Tablica ciągów zawierająca nazwy wszystkich ról, które są przechowywane w bazie danych dla wybranej aplikacji."
  overload: System.Web.Security.SqlRoleProvider.GetAllRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Wystąpił nieznany błąd podczas komunikowania się z bazą danych."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: SqlRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.SqlRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera listę ról, które użytkownik."
  remarks: "Metoda GetRolesForUser jest wywoływana przez <xref:System.Web.Security.Roles>klasę, aby pobrać listę ról określonego użytkownika z bazy danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetRolesForUser%2A> method to retrieve a list of roles for a specified user and binds them to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/csharp/m-system.web.security.sq_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.sq_5_1.aspx)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Użytkownik, aby powrócić do listy ról."
    return:
      type: System.String[]
      description: "Tablica ciągów zawierająca nazwy wszystkich ról określonego użytkownika."
  overload: System.Web.Security.SqlRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>zawiera przecinek.       - lub - <code>username</code> jest dłuższa niż 256 znaków."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Wystąpił nieznany błąd podczas komunikowania się z bazą danych."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: SqlRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.SqlRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera listę użytkowników w określonej roli."
  remarks: "Metoda GetUsersInRole jest wywoływana przez <xref:System.Web.Security.Roles>klasy można pobrać listy użytkowników skojarzonych z określoną rolę w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetUsersInRole%2A> method to get a list of the users in a particular role and bind the results to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/m-system.web.security.sq_4_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/m-system.web.security.sq_4_1.aspx)]"
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Nazwa roli, aby uzyskać listę użytkowników."
    return:
      type: System.String[]
      description: "Tablica ciągów zawierająca nazwy wszystkich użytkowników, którzy są członkami określonej roli."
  overload: System.Web.Security.SqlRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>to ciąg pusty lub zawiera przecinek.       - lub - <code>roleName</code> jest dłuższa niż 256 znaków."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>rolename</code>Nie znaleziono w bazie danych.       - lub - wystąpił nieznany błąd podczas komunikowania się z bazą danych."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicjuje dostawcę roli programu SQL Server z wartościami właściwości określony w pliku konfiguracji aplikacji ASP.NET. Ta metoda nie jest przeznaczona do użycia bezpośrednio w kodzie."
  remarks: "Ta metoda inicjuje <xref:System.Web.Security.SqlRoleProvider>z właściwością wartości określone w pliku konfiguracyjnym aplikacji platformy ASP.NET (Web.config), a nie jest przeznaczona do użycia bezpośrednio w kodzie.</xref:System.Web.Security.SqlRoleProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa <xref href=&quot;System.Web.Security.SqlRoleProvider&quot;> </xref> wystąpienie do zainicjowania."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> zawiera nazwy i wartości opcji konfiguracji dla dostawcy ról."
  overload: System.Web.Security.SqlRoleProvider.Initialize*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Aplikacja ASP.NET nie jest uruchomiona na <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> zaufania lub nowszej."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> Atrybut jest pusty lub nie istnieje w pliku konfiguracyjnym aplikacji dla tego <xref href=&quot;System.Web.Security.SqlRoleProvider&quot;> </xref> wystąpienia.       - lub - <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> atrybutu przekracza 256 znaków.       - lub - pliku konfiguracji aplikacji dla tego <xref href=&quot;System.Web.Security.SqlRoleProvider&quot;> </xref> wystąpienie zawiera nierozpoznany atrybut."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: SqlRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.SqlRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy określony użytkownik ma określoną rolę."
  remarks: "Metoda IsUserInRole jest wywoływana przez <xref:System.Web.Security.Roles>klasy i <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metody <xref:System.Web.UI.Page.User%2A?displayProperty=fullName>Właściwości w celu określenia, czy użytkownik jest skojarzony z rolą w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).</xref:System.Web.UI.Page.User%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example programmatically checks to see whether the logged-on user is in the Administrators role before allowing the user to view user roles. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/csharp/m-system.web.security.sq_9_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.sq_9_1.aspx)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika do wyszukania."
    - id: roleName
      type: System.String
      description: "Rola do przeszukania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określona nazwa użytkownika znajduje się w określonej roli; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>username</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>to ciąg pusty lub zawiera przecinek.       - lub - <code>username</code> jest zawiera przecinek.       - lub - <code>roleName</code> jest dłuższa niż 256 znaków.       - lub - <code>username</code> jest dłuższa niż 256 znaków."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Wystąpił nieznany błąd podczas komunikowania się z bazą danych."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: SqlRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Usuwa określone nazwy użytkownika z określonych ról."
  remarks: "Metoda RemoveUsersFromRoles jest wywoływana przez <xref:System.Web.Security.Roles>klasę, aby usunąć jednego lub więcej użytkowników z jednego lub większej liczby ról w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).</xref:System.Web.Security.Roles> Ta metoda jest wywoływana przez <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, a także <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A>metody <xref:System.Web.Security.Roles>klasy.</xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> </xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> </xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> </xref:System.Web.Security.Roles.RemoveUserFromRole%2A>       Aktualizacje bazy danych, które są wykonywane podczas wywołania RemoveUsersFromRoles są wykonywane w ramach transakcji. Jeśli wystąpi błąd, takie jak nazwa użytkownika, który nie istnieje lub nazwa użytkownika, który jest już w określonej roli, transakcja zostanie wycofana i są wykonywane żadne aktualizacje.       Nazwy użytkowników i nazwy roli nie może zawierać przecinków."
  example:
  - "The following code example adds one or more users to a role or removes a user from a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/b95e86c3-c05c-486e-96fd-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/b95e86c3-c05c-486e-96fd-_1.aspx)]"
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Tablica ciągów nazw użytkowników do usunięcia z określonych ról."
    - id: roleNames
      type: System.String[]
      description: "Tablica ciągów nazw ról, aby usunąć określone nazwy użytkownika."
  overload: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One of the roles in <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       One of the users in <code>usernames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Jedną z ról w <code> roleNames </code> to ciąg pusty lub zawiera przecinek.       - lub - jeden z użytkowników w <code> usernames </code> to ciąg pusty lub zawiera przecinek.       - lub - jedną z ról w <code> roleNames </code> jest dłuższa niż 256 znaków.       - lub - jeden z użytkowników w <code> usernames </code> jest dłuższa niż 256 znaków.       - lub - <code> roleNames </code> zawiera zduplikowany element.       - lub - <code> usernames </code> zawiera zduplikowany element."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Nie znaleziono co najmniej jeden określone nazwy użytkownika.       - lub - nie znaleziono co najmniej jeden z nazwy określonej roli.       - lub - co najmniej jeden określone nazwy użytkownika nie jest skojarzony z jedną lub więcej nazw określoną rolę.       - lub - wystąpił nieznany błąd podczas komunikowania się z bazą danych."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: SqlRoleProvider.RoleExists(String)
  fullName: System.Web.Security.SqlRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy nazwa określona rola już istnieje w bazie danych roli."
  remarks: "Metoda RoleExists jest wywoływana przez <xref:System.Web.Security.Roles>klasę, aby określić, czy nazwa roli istnieje w bazie danych serwera SQL określony w pliku konfiguracji aplikacji ASP.NET (Web.config).</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.RoleExists%2A> method to determine whether a role name already exists before creating the role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.sq_1_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.sq_1_1.aspx)]"
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Nazwa roli do wyszukiwania w bazie danych."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nazwa roli już istnieje w bazie danych. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlRoleProvider.RoleExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>to ciąg pusty lub zawiera przecinek.       - lub - <code>roleName</code> jest dłuższa niż 256 znaków."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Wystąpił nieznany błąd podczas komunikowania się z bazą danych."
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Security.SqlRoleProvider.#ctor
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: SqlRoleProvider()
  nameWithType: SqlRoleProvider.SqlRoleProvider()
  fullName: System.Web.Security.SqlRoleProvider.SqlRoleProvider()
- uid: System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: SqlRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.SqlRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.SqlRoleProvider.ApplicationName
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlRoleProvider.ApplicationName
  fullName: System.Web.Security.SqlRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlRoleProvider.CreateRole(System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: SqlRoleProvider.CreateRole(String)
  fullName: System.Web.Security.SqlRoleProvider.CreateRole(String)
- uid: System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: SqlRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.SqlRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: SqlRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.SqlRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.Security.SqlRoleProvider.GetAllRoles
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: SqlRoleProvider.GetAllRoles()
  fullName: System.Web.Security.SqlRoleProvider.GetAllRoles()
- uid: System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: SqlRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.SqlRoleProvider.GetRolesForUser(String)
- uid: System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: SqlRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.SqlRoleProvider.GetUsersInRole(String)
- uid: System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: SqlRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.SqlRoleProvider.IsUserInRole(String,String)
- uid: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: SqlRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.Security.SqlRoleProvider.RoleExists(System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: SqlRoleProvider.RoleExists(String)
  fullName: System.Web.Security.SqlRoleProvider.RoleExists(String)
- uid: System.Web.Security.SqlRoleProvider.#ctor*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: SqlRoleProvider
  nameWithType: SqlRoleProvider.SqlRoleProvider
- uid: System.Web.Security.SqlRoleProvider.AddUsersToRoles*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: SqlRoleProvider.AddUsersToRoles
- uid: System.Web.Security.SqlRoleProvider.ApplicationName*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlRoleProvider.ApplicationName
- uid: System.Web.Security.SqlRoleProvider.CreateRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: SqlRoleProvider.CreateRole
- uid: System.Web.Security.SqlRoleProvider.DeleteRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: SqlRoleProvider.DeleteRole
- uid: System.Web.Security.SqlRoleProvider.FindUsersInRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: SqlRoleProvider.FindUsersInRole
- uid: System.Web.Security.SqlRoleProvider.GetAllRoles*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: SqlRoleProvider.GetAllRoles
- uid: System.Web.Security.SqlRoleProvider.GetRolesForUser*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: SqlRoleProvider.GetRolesForUser
- uid: System.Web.Security.SqlRoleProvider.GetUsersInRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: SqlRoleProvider.GetUsersInRole
- uid: System.Web.Security.SqlRoleProvider.Initialize*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: SqlRoleProvider.Initialize
- uid: System.Web.Security.SqlRoleProvider.IsUserInRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: SqlRoleProvider.IsUserInRole
- uid: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: SqlRoleProvider.RemoveUsersFromRoles
- uid: System.Web.Security.SqlRoleProvider.RoleExists*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: SqlRoleProvider.RoleExists
