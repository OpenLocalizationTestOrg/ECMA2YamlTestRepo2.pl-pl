### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlInt64
  id: SqlInt64
  children:
  - System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)
  - System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.Equals(System.Object)
  - System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.GetHashCode
  - System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.IsNull
  - System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.MaxValue
  - System.Data.SqlTypes.SqlInt64.MinValue
  - System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.Null
  - System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Int64)
  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)
  - System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)
  - System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.Parse(System.String)
  - System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlInt64.ToSqlBoolean
  - System.Data.SqlTypes.SqlInt64.ToSqlByte
  - System.Data.SqlTypes.SqlInt64.ToSqlDecimal
  - System.Data.SqlTypes.SqlInt64.ToSqlDouble
  - System.Data.SqlTypes.SqlInt64.ToSqlInt16
  - System.Data.SqlTypes.SqlInt64.ToSqlInt32
  - System.Data.SqlTypes.SqlInt64.ToSqlMoney
  - System.Data.SqlTypes.SqlInt64.ToSqlSingle
  - System.Data.SqlTypes.SqlInt64.ToSqlString
  - System.Data.SqlTypes.SqlInt64.ToString
  - System.Data.SqlTypes.SqlInt64.Value
  - System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlInt64.Zero
  langs:
  - csharp
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
  type: Struct
  summary: "Reprezentuje 64-bitowej podpisanej liczby całkowitej mają być przechowywane w lub pobrać z bazy danych."
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlInt64 : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: SqlInt64(Int64)
  nameWithType: SqlInt64.SqlInt64(Int64)
  fullName: System.Data.SqlTypes.SqlInt64.SqlInt64(Int64)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury przy użyciu dostarczonego długich liczb całkowitych."
  syntax:
    content: public SqlInt64 (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Długich liczb całkowitych."
  overload: System.Data.SqlTypes.SqlInt64.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: Add(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Add(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Add(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza sumę dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametrów."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 Add (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <xref:System.Data.SqlTypes.SqlInt64.Value*>jest równa sumie dwa <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametrów.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: BitwiseAnd(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.BitwiseAnd(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.BitwiseAnd(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza iloczynu bitowego AND z jego <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> argumentów operacji."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 BitwiseAnd (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, zawierającego wyniki operacji i."
  overload: System.Data.SqlTypes.SqlInt64.BitwiseAnd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: BitwiseOr(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.BitwiseOr(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.BitwiseOr(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza wartości bitowe lub jego dwa <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> argumentów operacji."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 BitwiseOr (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, zawierającego wyniki operacji OR."
  overload: System.Data.SqlTypes.SqlInt64.BitwiseOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)
  id: CompareTo(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: CompareTo(SqlInt64)
  nameWithType: SqlInt64.CompareTo(SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.CompareTo(SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> podane wystąpienie <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> i zwraca dane dotyczące ich względne wartości."
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlInt64 value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlInt64
      description: "<xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> Do porównania."
    return:
      type: System.Int32
      description: "Liczba podpisem, która określa względne wartości wystąpienia i obiektu.       <table><thead><tr><th> Wartość zwracana       </th><th> Warunek       </th></tr></thead><tbody><tr><td> Mniejsza od zera.       </td><td> To wystąpienie jest mniejsza niż obiekt.       </td></tr><tr><td> Zero       </td><td> To wystąpienie jest taki sam, jak obiekt.       </td></tr><tr><td> Większa niż zero       </td><td> To wystąpienie jest większe niż obiektu - lub - odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic).       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlInt64.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlInt64.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlInt64.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> podane wystąpienie <xref:System.Object>i zwraca dane dotyczące ich względne wartości.</xref:System.Object>"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Ma zostać porównane.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Liczba podpisem, która określa względne wartości wystąpienia i obiektu.       <table><thead><tr><th> Wartość zwracana       </th><th> Warunek       </th></tr></thead><tbody><tr><td> Mniejsza od zera.       </td><td> To wystąpienie jest mniejsza niż obiekt.       </td></tr><tr><td> Zero       </td><td> To wystąpienie jest taki sam, jak obiekt.       </td></tr><tr><td> Większa niż zero       </td><td> To wystąpienie jest większe niż obiektu - lub - odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing &quot; name=&quot;Nothing &quot; href=&quot;&quot;></xref>w języku Visual Basic).       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlInt64.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: Divide(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Divide(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Divide(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Dzieli pierwszy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametru przez drugą."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 Divide (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <xref:System.Data.SqlTypes.SqlInt64.Value*>właściwość zawiera wyniki operacji dzielenia.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlInt64.Equals(Object)
  fullName: System.Data.SqlTypes.SqlInt64.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Porównuje parametru podanego obiektu <xref:System.Data.SqlTypes.SqlInt64.Value*>Właściwość <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> obiektu.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli obiekt jest wystąpieniem <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> i są równe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlInt64.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: Equals(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Equals(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Equals(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje logiczną porównanie dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametry, aby sprawdzić, czy są równe."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dwie wartości są równe. W przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Jeśli albo wystąpienie ma wartość null, a następnie <xref uid=&quot;langword_csharp_SqlInt64&quot; name=&quot;SqlInt64&quot; href=&quot;&quot;> </xref> będzie mieć wartość null."
  overload: System.Data.SqlTypes.SqlInt64.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlInt64.GetHashCode()
  fullName: System.Data.SqlTypes.SqlInt64.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Zwraca wartość skrótu dla tego wystąpienia."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32-bitowej podpisanej liczby całkowitej wartość skrótu."
  overload: System.Data.SqlTypes.SqlInt64.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlInt64.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlInt64.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Zwraca język definicji schematu XML (XSD) z określonym <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "An <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> wskazujące XSD określonego <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlInt64.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: GreaterThan(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.GreaterThan(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.GreaterThan(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje logiczną porównanie dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametry, aby ustalić, czy pierwszy jest większa od drugiej."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Jeśli pierwsze wystąpienie jest większa niż drugie wystąpienie. W przeciwnym razie <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: GreaterThanOrEqual(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.GreaterThanOrEqual(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje logiczną porównanie dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametry w celu ustalenia, czy pierwsze jest większe lub równe drugiemu."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Jeśli pierwsze wystąpienie jest większa niż lub równa drugie wystąpienie. W przeciwnym razie <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlInt64.IsNull
  fullName: System.Data.SqlTypes.SqlInt64.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera wartość logiczną wskazującą, czy to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury ma wartość null."
  remarks: "Aby uzyskać więcej informacji, zobacz [Obsługa wartości zerowych](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość null. W przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlInt64.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: LessThan(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.LessThan(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.LessThan(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Dokonuje logicznego porównanie dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametrów, aby określić, czy pierwsze jest mniejsze od drugiego."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Jeśli pierwsze wystąpienie jest mniejsza niż drugie wystąpienie. W przeciwnym razie <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: LessThanOrEqual(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.LessThanOrEqual(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.LessThanOrEqual(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Dokonuje logicznego porównanie dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametrów, aby określić, czy pierwsze jest mniejsze niż drugi."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Jeśli pierwsze wystąpienie jest mniejsza niż lub równa drugie wystąpienie. W przeciwnym razie <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: MaxValue
  nameWithType: SqlInt64.MaxValue
  fullName: System.Data.SqlTypes.SqlInt64.MaxValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Stała reprezentująca największa możliwa wartość dla <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
  remarks: "Wartość tej stałej jest równa 2 <sup>63</sup> -1."
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlInt64 MaxValue;
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: MinValue
  nameWithType: SqlInt64.MinValue
  fullName: System.Data.SqlTypes.SqlInt64.MinValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Stała reprezentująca najmniejsza możliwa wartość dla <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
  remarks: "Wartość tej stałej jest -2 <sup>63</sup>."
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlInt64 MinValue;
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: Mod(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Mod(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Mod(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza resztę po podzieleniu pierwszy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametru przez drugą."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 Mod (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <xref:System.Data.SqlTypes.SqlInt64.Value*>właściwość zawiera resztę.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.Mod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: Modulus(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Modulus(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Modulus(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Dzieli dwie <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> wartości i zwraca resztę."
  remarks: "Jeśli wystąpienie albo `x` lub `y` jest wartość null, wartość będzie równa null."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 Modulus (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;></xref> value."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;></xref> value."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Reszta pozostanie dzielenia na <code> x </code> i <code> y </code>."
  overload: System.Data.SqlTypes.SqlInt64.Modulus*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: Multiply(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Multiply(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Multiply(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza iloczyn dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametrów."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 Multiply (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <xref:System.Data.SqlTypes.SqlInt64.Value*>jest równa iloczyn dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametrów.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: NotEquals(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.NotEquals(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.NotEquals(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Dokonuje logicznego porównanie dwóch parametrów SqlInt64 w celu ustalenia, czy nie są takie same."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia nie są równe lub <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia są równe. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlInt64.Null
  fullName: System.Data.SqlTypes.SqlInt64.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Reprezentuje <xref href=&quot;System.DBNull&quot;> </xref> który można przypisać do tego wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
  remarks: "Funkcje o wartości null jako stała dla <xref:System.Data.SqlTypes.SqlInt64>struktury.</xref:System.Data.SqlTypes.SqlInt64> Aby uzyskać więcej informacji, zobacz [Obsługa wartości zerowych](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlInt64 Null;
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)
  id: OnesComplement(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: OnesComplement(SqlInt64)
  nameWithType: SqlInt64.OnesComplement(SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.OnesComplement(SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje bitowej, jeden dla uzupełnienia operacji na jego <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> argument."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 OnesComplement (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <xref:System.Data.SqlTypes.SqlInt64.Value*>jest równa te uzupełniają z <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametru.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.OnesComplement*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Addition(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Addition(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Addition(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza sumę dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametrów."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Addition (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <xref:System.Data.SqlTypes.SqlInt64.Value*>jest równa sumie dwa <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametrów.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_BitwiseAnd(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_BitwiseAnd(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza iloczynu bitowego AND z jego <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> argumentów operacji."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_BitwiseAnd (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, zawierającego wyniki operacji i."
  overload: System.Data.SqlTypes.SqlInt64.op_BitwiseAnd*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_BitwiseOr(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_BitwiseOr(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_BitwiseOr(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza wartości bitowe lub jego dwa <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> argumentów operacji."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_BitwiseOr (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, zawierającego wyniki operacji OR."
  overload: System.Data.SqlTypes.SqlInt64.op_BitwiseOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Division(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Division(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Division(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Dzieli pierwszy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametru przez drugą."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Division (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <xref:System.Data.SqlTypes.SqlInt64.Value*>właściwość zawiera wyniki operacji dzielenia.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Equality(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Equality(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Equality(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje logiczną porównanie dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametry, aby sprawdzić, czy są równe."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia są równe lub <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia nie są równe. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_ExclusiveOr(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_ExclusiveOr(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje operację bitowej OR wyłączne na podanych parametrów."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_ExclusiveOr (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, zawierającego wyniki operacji XOR."
  overload: System.Data.SqlTypes.SqlInt64.op_ExclusiveOr*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt64)
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlInt64.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Explicit (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt64)
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlInt64.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Explicit (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt64)
  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Explicit(SqlDouble)
  nameWithType: SqlInt64.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlDouble)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Explicit (System.Data.SqlTypes.SqlDouble x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Int64)
  id: op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Int64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Explicit(SqlInt64)
  nameWithType: SqlInt64.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static long op_Explicit (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
    return:
      type: System.Int64
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt64)
  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Explicit(SqlMoney)
  nameWithType: SqlInt64.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Explicit (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt64)
  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Explicit(SqlSingle)
  nameWithType: SqlInt64.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Explicit (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt64)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlInt64.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Explicit (System.Data.SqlTypes.SqlString x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlInt64.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_GreaterThan(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_GreaterThan(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_GreaterThan(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje logiczną porównanie dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametry, aby ustalić, czy pierwszy jest większa od drugiej."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Jeśli pierwsze wystąpienie jest większa niż drugie wystąpienie. W przeciwnym razie <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_GreaterThanOrEqual(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje logiczną porównanie dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametry w celu ustalenia, czy pierwsze jest większe lub równe drugiemu."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Jeśli pierwsze wystąpienie jest większa niż lub równa drugie wystąpienie. W przeciwnym razie <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)
  id: op_Implicit(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Implicit(SqlByte)
  nameWithType: SqlInt64.op_Implicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Implicit (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlInt64.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)
  id: op_Implicit(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Implicit(SqlInt16)
  nameWithType: SqlInt64.op_Implicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Implicit (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlInt64.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)
  id: op_Implicit(System.Data.SqlTypes.SqlInt32)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Implicit(SqlInt32)
  nameWithType: SqlInt64.op_Implicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(SqlInt32)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Implicit (System.Data.SqlTypes.SqlInt32 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlInt64.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)
  id: op_Implicit(System.Int64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Implicit(Int64)
  nameWithType: SqlInt64.op_Implicit(Int64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(Int64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Implicit (long x);
    parameters:
    - id: x
      type: System.Int64
      description: "Do dodania."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlInt64.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Inequality(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Inequality(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Inequality(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Dokonuje logicznego porównanie dwóch parametrów SqlInt64 w celu ustalenia, czy nie są takie same."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia nie są równe lub <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> dwa wystąpienia są równe. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_LessThan(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_LessThan(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_LessThan(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Dokonuje logicznego porównanie dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametrów, aby określić, czy pierwsze jest mniejsze od drugiego."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Jeśli pierwsze wystąpienie jest mniejsza niż drugie wystąpienie. W przeciwnym razie <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_LessThanOrEqual(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Dokonuje logicznego porównanie dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametrów, aby określić, czy pierwsze jest mniejsze niż drugi."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> czyli <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Jeśli pierwsze wystąpienie jest mniejsza niż lub równa drugie wystąpienie. W przeciwnym razie <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Jeśli wystąpienie albo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> ma wartość null, <xref:System.Data.SqlTypes.SqlBoolean.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> będzie <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Modulus(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Modulus(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Modulus(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza resztę po podzieleniu pierwszy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametru przez drugą."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Modulus (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <xref:System.Data.SqlTypes.SqlInt64.Value*>właściwość zawiera resztę.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.op_Modulus*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Multiply(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Multiply(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Multiply(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Oblicza iloczyn dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametrów."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Multiply (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <xref:System.Data.SqlTypes.SqlInt64.Value*>jest równa iloczyn dwóch <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametrów.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)
  id: op_OnesComplement(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_OnesComplement(SqlInt64)
  nameWithType: SqlInt64.op_OnesComplement(SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_OnesComplement(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje bitowej, jeden dla uzupełnienia operacji na jego <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> argument."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_OnesComplement (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <xref:System.Data.SqlTypes.SqlInt64.Value*>jest równa te uzupełniają z <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametru.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.op_OnesComplement*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_Subtraction(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Subtraction(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Subtraction(SqlInt64,SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Odejmuje drugi <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametr od pierwszego."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_Subtraction (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <xref:System.Data.SqlTypes.SqlInt64.Value*>Właściwości jest równa wyniki operacji odejmowania.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)
  id: op_UnaryNegation(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: op_UnaryNegation(SqlInt64)
  nameWithType: SqlInt64.op_UnaryNegation(SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_UnaryNegation(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Jednoargumentowy minus operator Negacja <xref:System.Data.SqlTypes.SqlInt64.Value*>z <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> operand.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 op_UnaryNegation (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <> </> *> jest równa zanegowaną <> </> *> z <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametru."
  overload: System.Data.SqlTypes.SqlInt64.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: Parse(String)
  nameWithType: SqlInt64.Parse(String)
  fullName: System.Data.SqlTypes.SqlInt64.Parse(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje <xref:System.String>reprezentujący liczbę na jego 64-bitowej liczby całkowitej ze znakiem równoważne.</xref:System.String>"
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 Parse (string s);
    parameters:
    - id: s
      type: System.String
      description: "<xref:System.String>Do przeanalizowania.</xref:System.String>"
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "64-bitowych całkowita odpowiednikiem wartość, która jest zawarta w określonym <xref:System.String>.</xref:System.String>"
  overload: System.Data.SqlTypes.SqlInt64.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: Subtract(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Subtract(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Subtract(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Odejmuje drugi <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> parametr od pierwszego."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 Subtract (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, którego <xref:System.Data.SqlTypes.SqlInt64.Value*>Właściwości jest równa wyniki operacji odejmowania.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ten element członkowski obsługuje infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "An <xref uid=&quot;langword_csharp_XmlSchema&quot; name=&quot;XmlSchema&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ten element członkowski obsługuje infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader" name="XmlReader" href=""></xref>
  overload: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ten element członkowski obsługuje infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""></xref>
  overload: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: ToSqlBoolean()
  nameWithType: SqlInt64.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlBoolean()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Data.SqlTypes.SqlInt64.Value*>jest niezerowa; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> jeśli zero; w przeciwnym razie wartość Null.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  overload: System.Data.SqlTypes.SqlInt64.ToSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: ToSqlByte()
  nameWithType: SqlInt64.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> struktury, którego <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> jest równe <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> tego <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
  overload: System.Data.SqlTypes.SqlInt64.ToSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: ToSqlDecimal()
  nameWithType: SqlInt64.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlDecimal()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> wartość tego <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlInt64.ToSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: ToSqlDouble()
  nameWithType: SqlInt64.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref> wartość tego <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlInt64.ToSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: ToSqlInt16()
  nameWithType: SqlInt64.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlInt16()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref> wartość tego <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlInt64.ToSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: ToSqlInt32()
  nameWithType: SqlInt64.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> wartość tego <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlInt64.ToSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: ToSqlMoney()
  nameWithType: SqlInt64.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlMoney()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> wartość tego <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlInt64.ToSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: ToSqlSingle()
  nameWithType: SqlInt64.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlSingle()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "Nowy <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> wartość tego <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlInt64.ToSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: ToSqlString()
  nameWithType: SqlInt64.ToSqlString()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury do <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlString ToSqlString ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> reprezentujący wartość to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlInt64.ToSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlInt64.ToString()
  fullName: System.Data.SqlTypes.SqlInt64.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konwertuje to wystąpienie <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> do <xref:System.String>.</xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>reprezentujący wartość to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>.</xref:System.String>"
  overload: System.Data.SqlTypes.SqlInt64.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Value
  id: Value
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: Value
  nameWithType: SqlInt64.Value
  fullName: System.Data.SqlTypes.SqlInt64.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera wartość tego <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury. Ta właściwość jest tylko do odczytu."
  syntax:
    content: public long Value { get; }
    return:
      type: System.Int64
      description: "Długich liczb całkowitych, reprezentujący wartość to <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
  overload: System.Data.SqlTypes.SqlInt64.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  id: Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: Xor(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Xor(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Xor(SqlInt64,SqlInt64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Wykonuje operację bitowej OR wyłączne na podanych parametrów."
  syntax:
    content: public static System.Data.SqlTypes.SqlInt64 Xor (System.Data.SqlTypes.SqlInt64 x, System.Data.SqlTypes.SqlInt64 y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    - id: y
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury."
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury, zawierającego wyniki operacji XOR."
  overload: System.Data.SqlTypes.SqlInt64.Xor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlInt64.Zero
  id: Zero
  parent: System.Data.SqlTypes.SqlInt64
  langs:
  - csharp
  name: Zero
  nameWithType: SqlInt64.Zero
  fullName: System.Data.SqlTypes.SqlInt64.Zero
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Reprezentuje wartość zerową przypisana do <xref:System.Data.SqlTypes.SqlInt64.Value*>właściwości wystąpienia <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> struktury.</xref:System.Data.SqlTypes.SqlInt64.Value*>"
  remarks: "Zero pole jest stałą dla <xref:System.Data.SqlTypes.SqlInt64>struktury.</xref:System.Data.SqlTypes.SqlInt64>"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlInt64 Zero;
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: SqlInt64(Int64)
  nameWithType: SqlInt64.SqlInt64(Int64)
  fullName: System.Data.SqlTypes.SqlInt64.SqlInt64(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Add(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Add(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Add(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: BitwiseAnd(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.BitwiseAnd(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.BitwiseAnd(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: BitwiseOr(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.BitwiseOr(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.BitwiseOr(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: CompareTo(SqlInt64)
  nameWithType: SqlInt64.CompareTo(SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.CompareTo(SqlInt64)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlInt64.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlInt64.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Divide(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Divide(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Divide(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlInt64.Equals(Object)
  fullName: System.Data.SqlTypes.SqlInt64.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Equals(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Equals(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Equals(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlInt64.GetHashCode
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlInt64.GetHashCode()
  fullName: System.Data.SqlTypes.SqlInt64.GetHashCode()
- uid: System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlInt64.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlInt64.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: GreaterThan(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.GreaterThan(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.GreaterThan(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: GreaterThanOrEqual(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.GreaterThanOrEqual(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.IsNull
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: IsNull
  nameWithType: SqlInt64.IsNull
  fullName: System.Data.SqlTypes.SqlInt64.IsNull
- uid: System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: LessThan(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.LessThan(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.LessThan(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: LessThanOrEqual(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.LessThanOrEqual(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.LessThanOrEqual(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.MaxValue
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: MaxValue
  nameWithType: SqlInt64.MaxValue
  fullName: System.Data.SqlTypes.SqlInt64.MaxValue
- uid: System.Data.SqlTypes.SqlInt64.MinValue
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: MinValue
  nameWithType: SqlInt64.MinValue
  fullName: System.Data.SqlTypes.SqlInt64.MinValue
- uid: System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Mod(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Mod(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Mod(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Modulus(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Modulus(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Modulus(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Multiply(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Multiply(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Multiply(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: NotEquals(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.NotEquals(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.NotEquals(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.Null
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: "Null"
  nameWithType: SqlInt64.Null
  fullName: System.Data.SqlTypes.SqlInt64.Null
- uid: System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: OnesComplement(SqlInt64)
  nameWithType: SqlInt64.OnesComplement(SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.OnesComplement(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Addition(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Addition(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Addition(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_BitwiseAnd(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_BitwiseAnd(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_BitwiseOr(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_BitwiseOr(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_BitwiseOr(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Division(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Division(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Division(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Equality(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Equality(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Equality(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_ExclusiveOr(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_ExclusiveOr(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlInt64.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlBoolean)
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlInt64.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Explicit(SqlDouble)
  nameWithType: SqlInt64.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlDouble)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64 to System.Int64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Explicit(SqlInt64)
  nameWithType: SqlInt64.op_Explicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Explicit(SqlMoney)
  nameWithType: SqlInt64.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Explicit(SqlSingle)
  nameWithType: SqlInt64.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlInt64.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlInt64.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_GreaterThan(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_GreaterThan(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_GreaterThan(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_GreaterThanOrEqual(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_GreaterThanOrEqual(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Implicit(SqlByte)
  nameWithType: SqlInt64.op_Implicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(SqlByte)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Implicit(SqlInt16)
  nameWithType: SqlInt64.op_Implicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Implicit(SqlInt32)
  nameWithType: SqlInt64.op_Implicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(SqlInt32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Implicit(Int64)
  nameWithType: SqlInt64.op_Implicit(Int64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Implicit(Int64)
- uid: System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Inequality(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Inequality(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Inequality(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_LessThan(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_LessThan(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_LessThan(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_LessThanOrEqual(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_LessThanOrEqual(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Modulus(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Modulus(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Modulus(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Multiply(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Multiply(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Multiply(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_OnesComplement(SqlInt64)
  nameWithType: SqlInt64.op_OnesComplement(SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_OnesComplement(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Subtraction(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.op_Subtraction(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_Subtraction(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_UnaryNegation(SqlInt64)
  nameWithType: SqlInt64.op_UnaryNegation(SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.op_UnaryNegation(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.Parse(System.String)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Parse(String)
  nameWithType: SqlInt64.Parse(String)
  fullName: System.Data.SqlTypes.SqlInt64.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Subtract(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Subtract(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Subtract(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlInt64.ToSqlBoolean
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlBoolean()
  nameWithType: SqlInt64.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlBoolean()
- uid: System.Data.SqlTypes.SqlInt64.ToSqlByte
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlByte()
  nameWithType: SqlInt64.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlByte()
- uid: System.Data.SqlTypes.SqlInt64.ToSqlDecimal
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlDecimal()
  nameWithType: SqlInt64.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlDecimal()
- uid: System.Data.SqlTypes.SqlInt64.ToSqlDouble
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlDouble()
  nameWithType: SqlInt64.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlDouble()
- uid: System.Data.SqlTypes.SqlInt64.ToSqlInt16
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlInt16()
  nameWithType: SqlInt64.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlInt16()
- uid: System.Data.SqlTypes.SqlInt64.ToSqlInt32
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlInt32()
  nameWithType: SqlInt64.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlInt32()
- uid: System.Data.SqlTypes.SqlInt64.ToSqlMoney
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlMoney()
  nameWithType: SqlInt64.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlMoney()
- uid: System.Data.SqlTypes.SqlInt64.ToSqlSingle
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlSingle()
  nameWithType: SqlInt64.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlSingle()
- uid: System.Data.SqlTypes.SqlInt64.ToSqlString
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlString()
  nameWithType: SqlInt64.ToSqlString()
  fullName: System.Data.SqlTypes.SqlInt64.ToSqlString()
- uid: System.Data.SqlTypes.SqlInt64.ToString
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToString()
  nameWithType: SqlInt64.ToString()
  fullName: System.Data.SqlTypes.SqlInt64.ToString()
- uid: System.Data.SqlTypes.SqlInt64.Value
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Value
  nameWithType: SqlInt64.Value
  fullName: System.Data.SqlTypes.SqlInt64.Value
- uid: System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Xor(SqlInt64,SqlInt64)
  nameWithType: SqlInt64.Xor(SqlInt64,SqlInt64)
  fullName: System.Data.SqlTypes.SqlInt64.Xor(SqlInt64,SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64.Zero
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Zero
  nameWithType: SqlInt64.Zero
  fullName: System.Data.SqlTypes.SqlInt64.Zero
- uid: System.Data.SqlTypes.SqlInt64.#ctor*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64.SqlInt64
- uid: System.Data.SqlTypes.SqlInt64.Add*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Add
  nameWithType: SqlInt64.Add
- uid: System.Data.SqlTypes.SqlInt64.BitwiseAnd*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: BitwiseAnd
  nameWithType: SqlInt64.BitwiseAnd
- uid: System.Data.SqlTypes.SqlInt64.BitwiseOr*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: BitwiseOr
  nameWithType: SqlInt64.BitwiseOr
- uid: System.Data.SqlTypes.SqlInt64.CompareTo*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: CompareTo
  nameWithType: SqlInt64.CompareTo
- uid: System.Data.SqlTypes.SqlInt64.Divide*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Divide
  nameWithType: SqlInt64.Divide
- uid: System.Data.SqlTypes.SqlInt64.Equals*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Equals
  nameWithType: SqlInt64.Equals
- uid: System.Data.SqlTypes.SqlInt64.GetHashCode*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: GetHashCode
  nameWithType: SqlInt64.GetHashCode
- uid: System.Data.SqlTypes.SqlInt64.GetXsdType*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: GetXsdType
  nameWithType: SqlInt64.GetXsdType
- uid: System.Data.SqlTypes.SqlInt64.GreaterThan*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: GreaterThan
  nameWithType: SqlInt64.GreaterThan
- uid: System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: SqlInt64.GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlInt64.IsNull*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: IsNull
  nameWithType: SqlInt64.IsNull
- uid: System.Data.SqlTypes.SqlInt64.LessThan*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: LessThan
  nameWithType: SqlInt64.LessThan
- uid: System.Data.SqlTypes.SqlInt64.LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: LessThanOrEqual
  nameWithType: SqlInt64.LessThanOrEqual
- uid: System.Data.SqlTypes.SqlInt64.Mod*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Mod
  nameWithType: SqlInt64.Mod
- uid: System.Data.SqlTypes.SqlInt64.Modulus*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Modulus
  nameWithType: SqlInt64.Modulus
- uid: System.Data.SqlTypes.SqlInt64.Multiply*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Multiply
  nameWithType: SqlInt64.Multiply
- uid: System.Data.SqlTypes.SqlInt64.NotEquals*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: NotEquals
  nameWithType: SqlInt64.NotEquals
- uid: System.Data.SqlTypes.SqlInt64.OnesComplement*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: OnesComplement
  nameWithType: SqlInt64.OnesComplement
- uid: System.Data.SqlTypes.SqlInt64.op_Addition*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Addition
  nameWithType: SqlInt64.op_Addition
- uid: System.Data.SqlTypes.SqlInt64.op_BitwiseAnd*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_BitwiseAnd
  nameWithType: SqlInt64.op_BitwiseAnd
- uid: System.Data.SqlTypes.SqlInt64.op_BitwiseOr*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_BitwiseOr
  nameWithType: SqlInt64.op_BitwiseOr
- uid: System.Data.SqlTypes.SqlInt64.op_Division*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Division
  nameWithType: SqlInt64.op_Division
- uid: System.Data.SqlTypes.SqlInt64.op_Equality*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Equality
  nameWithType: SqlInt64.op_Equality
- uid: System.Data.SqlTypes.SqlInt64.op_ExclusiveOr*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_ExclusiveOr
  nameWithType: SqlInt64.op_ExclusiveOr
- uid: System.Data.SqlTypes.SqlInt64.op_Explicit*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Explicit
  nameWithType: SqlInt64.op_Explicit
- uid: System.Data.SqlTypes.SqlInt64.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlInt64.op_GreaterThan
- uid: System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlInt64.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlInt64.op_Implicit*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Implicit
  nameWithType: SqlInt64.op_Implicit
- uid: System.Data.SqlTypes.SqlInt64.op_Inequality*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Inequality
  nameWithType: SqlInt64.op_Inequality
- uid: System.Data.SqlTypes.SqlInt64.op_LessThan*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_LessThan
  nameWithType: SqlInt64.op_LessThan
- uid: System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlInt64.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlInt64.op_Modulus*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Modulus
  nameWithType: SqlInt64.op_Modulus
- uid: System.Data.SqlTypes.SqlInt64.op_Multiply*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Multiply
  nameWithType: SqlInt64.op_Multiply
- uid: System.Data.SqlTypes.SqlInt64.op_OnesComplement*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_OnesComplement
  nameWithType: SqlInt64.op_OnesComplement
- uid: System.Data.SqlTypes.SqlInt64.op_Subtraction*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_Subtraction
  nameWithType: SqlInt64.op_Subtraction
- uid: System.Data.SqlTypes.SqlInt64.op_UnaryNegation*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: op_UnaryNegation
  nameWithType: SqlInt64.op_UnaryNegation
- uid: System.Data.SqlTypes.SqlInt64.Parse*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Parse
  nameWithType: SqlInt64.Parse
- uid: System.Data.SqlTypes.SqlInt64.Subtract*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Subtract
  nameWithType: SqlInt64.Subtract
- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlInt64.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlInt64.ToSqlBoolean*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlBoolean
  nameWithType: SqlInt64.ToSqlBoolean
- uid: System.Data.SqlTypes.SqlInt64.ToSqlByte*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlByte
  nameWithType: SqlInt64.ToSqlByte
- uid: System.Data.SqlTypes.SqlInt64.ToSqlDecimal*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlDecimal
  nameWithType: SqlInt64.ToSqlDecimal
- uid: System.Data.SqlTypes.SqlInt64.ToSqlDouble*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlDouble
  nameWithType: SqlInt64.ToSqlDouble
- uid: System.Data.SqlTypes.SqlInt64.ToSqlInt16*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlInt16
  nameWithType: SqlInt64.ToSqlInt16
- uid: System.Data.SqlTypes.SqlInt64.ToSqlInt32*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlInt32
  nameWithType: SqlInt64.ToSqlInt32
- uid: System.Data.SqlTypes.SqlInt64.ToSqlMoney*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlMoney
  nameWithType: SqlInt64.ToSqlMoney
- uid: System.Data.SqlTypes.SqlInt64.ToSqlSingle*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlSingle
  nameWithType: SqlInt64.ToSqlSingle
- uid: System.Data.SqlTypes.SqlInt64.ToSqlString*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToSqlString
  nameWithType: SqlInt64.ToSqlString
- uid: System.Data.SqlTypes.SqlInt64.ToString*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: ToString
  nameWithType: SqlInt64.ToString
- uid: System.Data.SqlTypes.SqlInt64.Value*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Value
  nameWithType: SqlInt64.Value
- uid: System.Data.SqlTypes.SqlInt64.Xor*
  parent: System.Data.SqlTypes.SqlInt64
  isExternal: false
  name: Xor
  nameWithType: SqlInt64.Xor
