### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient
  id: UdpSingleSourceMulticastClient
  children:
  - System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  - System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient
  type: Class
  summary: "Odbiornik klienta na ruch multiemisji z jednego źródła, znanej także jako źródło określonego multiemisji (SSM)."
  remarks: "Adres multiemisji grupy i adres nadawcy źródła musi być znane.       Oprócz odbiera dane z określonego nadawcy, klient UdpSingleSourceMulticastClient można również wysyłać dane emisji pojedynczej do nadawcy.       Aby otrzymywać multiemisji z wielu źródeł, lub gdy źródła nie są znane z wyprzedzeniem, należy użyć klasy UdpSingleSourceMulticastClient."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public class UdpSingleSourceMulticastClient : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Tworzy nowy <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> UDP klienta, który można subskrybować adres grupy i odbierają datagramy z jednego źródła."
  remarks: "Konstruktor UdpSingleSourceMulticastClient kojarzy gniazda multiemisji UDP z grupy adres i port, ale nie powiązanie lub w przeciwnym razie użyj gniazda.       `groupAddress` Parametr może być multiemisji IPv6 albo IPv4 adresu. Jednak rodziny adres `sourceAddress` i `groupAddress` parametrów musi takie same.       `localPort` Parametrów nie mogą określać portu mniejszej niż 1024."
  syntax:
    content: public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "Adres nadawcy źródła dla tego odbiornika do subskrybowania."
    - id: groupAddress
      type: System.Net.IPAddress
      description: "Adres grupy multiemisji dla tego odbiornika do subskrybowania."
    - id: localPort
      type: System.Int32
      description: "Port lokalny dla tego odbiornika powiązać."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceAddress</code>i <code>groupAddress</code> musi być ta sama Rodzina adresów."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceAddress</code>to odwołanie o wartości null (Nothing w języku Visual Basic).       - lub - <code>groupAddress</code> jest odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>localPort</code>jest mniejsza od 0 - lub - <code>localPort</code> jest większy niż 65 535."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>localPort</code>jest mniejsze niż 1024"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  id: BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Wiąże gniazda i rozpocznie się operacji tworzenia sprzężenia do grupy multiemisji, aby umożliwić datagramy z pojedynczego adresu źródłowego."
  remarks: "Metoda BeginJoinGroup wiąże gniazda multiemisji UDP portów lokalnych i tworzy sprzężenie grupy multiemisji, aby umożliwić datagramy z pojedynczego adresu źródłowego. Adres multiemisji grupy pojedynczego adresu źródłowego i portu lokalnego, aby powiązać są określone w <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>konstruktora.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>       Metoda określona w `callback` parametru jest wywoływana po wykonaniu operacji na dołączenie do grupy multiemisji.       Jeśli jest to wymagane przez środowisko uruchomieniowe, metoda BeginJoinGroup również przeprowadza sprawdzanie zasad, aby sprawdzić, czy klient może dostępu do grupy multiemisji. Jeśli klient nie ma mieć dostęp, <xref:System.Net.Sockets.SocketException>jest zgłaszany z <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>"
  syntax:
    content: public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Metoda wywołania zwrotnego do wywołania po zakończeniu operacji."
    - id: state
      type: System.Object
      description: "Informacje o stanie opcjonalne do przekazania do `callback` metody dla tej operacji."
    return:
      type: System.IAsyncResult
      description: "Zwraca <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       <xref:System.IAsyncResult>Który odwołuje się do tej operacji.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji została dołączona lub operacji tworzenia sprzężenia jest obecnie w toku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Rozpoczyna operację odbierania pakietu z połączonych grup multiemisji i wywołuje określony wywołania zwrotnego, gdy pakiet dotarła od nadawcy określony w grupie."
  remarks: "Metoda BeginReceiveFromSource rozpoczyna operacji odbierania pakietów UDP z dołączonym do grupy multiemisji od jednego nadawcy. Port lokalny, grupy multiemisji i adres nadawcy źródła są określone w <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>konstruktora.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> Klienta multiemisji należy również wykonać na przyłączenie do grupy multiemisji.       Metoda określona w `callback` parametru jest wywoływane, gdy otrzymano pakiet.       Istnieje możliwość za błąd gniazda, jeśli operacja receive synchronicznie, kończy się niepowodzeniem, mimo że jest to rzadko z protokołu UDP. Jeśli wystąpi błąd gniazda, <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bufor do przechowywania odebranych danych."
    - id: offset
      type: System.Int32
      description: "Przesunięcie, w bajtach, od początku `buffer` przechowywania danych."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba bajtów do pobierania i przechowywania w `buffer`."
    - id: callback
      type: System.AsyncCallback
      description: "Metoda wywołania zwrotnego do wywołania po zakończeniu operacji."
    - id: state
      type: System.Object
      description: "Informacje o stanie opcjonalne do przekazania do `callback` metody dla tej operacji."
    return:
      type: System.IAsyncResult
      description: "Zwraca <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       <xref:System.IAsyncResult>Który odwołuje się do tej operacji.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>to odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>jest mniejsza od 0 - lub - <code>offset</code> jest większa niż długość <code>buffer</code>.       - lub - <code>count</code> jest mniejszy niż 0 - lub - <code>offset</code> plus wartość licznika jest większa niż długość <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do odbierania gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Rozpoczyna operację wysyłania pakietów emisji pojedynczej do wcześniej określone źródło."
  remarks: "Metoda BeginSendToSource rozpoczyna operację wysyłania pakietów UDP do wcześniej określone źródło.       Niektóre protokoły dzięki tym informacjom można przekazać sterowanie przepływem jakości usługi statystyk lub odzyskiwania wiadomości.       Metoda określona w `callback` parametru jest wywoływane, gdy pakiet został wysłany.       Klienta należy wykonać na przyłączenie do grupy multiemisji.       Jeśli port docelowy określony w `remotePort` parametr jest mniejsza niż 1024, <xref:System.Net.Sockets.SocketException>jest zgłaszany z <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       Jest to możliwe błąd gniazda Jeśli operacja wysyłania nie synchronicznie, ale jest to rzadko z protokołu UDP. Jeśli wystąpi błąd gniazda, <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bufor, który zawiera dane do wysłania."
    - id: offset
      type: System.Int32
      description: "Przesunięcie, w bajtach, od początku `buffer` odczytać dane do wysłania."
    - id: count
      type: System.Int32
      description: "Liczba bajtów do wysłania z `buffer`."
    - id: remotePort
      type: System.Int32
      description: "Port zdalny, do którego ma być wysłany pakiet. Adres zdalnego określono za pomocą &lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt; konstruktora."
    - id: callback
      type: System.AsyncCallback
      description: "Metoda wywołania zwrotnego do wywołania po zakończeniu operacji."
    - id: state
      type: System.Object
      description: "Informacje o stanie opcjonalne do przekazania do `callback` metody dla tej operacji."
    return:
      type: System.IAsyncResult
      description: "Zwraca <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       <xref:System.IAsyncResult>Który odwołuje się do tej operacji.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>to odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>jest mniejsza od 0 - lub - <code>offset</code> jest większa niż długość <code>buffer</code>.       - lub - <code>count</code> jest mniejszy niż 0 - lub - <code>offset</code> plus wartość licznika jest większa niż długość <code>buffer</code>.       - lub - <code>remotePort</code> jest mniejsza niż 0 lub większy niż 65 535."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Pozostawia grupy multiemisji i zwalnia wszystkie zasoby używane przez bieżące wystąpienie klasy <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> klasy i <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket> podstawowa"
  remarks: "Wywołaj metodę Dispose po zakończeniu przy użyciu <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> Metoda Dispose pozostawia <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>w stanie uniemożliwiającym jego używanie.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> Po wywołaniu metody Dispose, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>, moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>klasy.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient>       Zawsze wywołania metody Dispose przed zwolnieniem ostatniego odwołania do <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>obiektu <xref:System.Object.Finalize%2A>metody.</xref:System.Object.Finalize%2A> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  id: EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Wykonuje operację asynchroniczną sprzężenia grupy do grupy multiemisji."
  remarks: "Metoda EndJoinGroup kończy asynchroniczne bind gniazda i Dołącz do operacji do grupy multiemisji.       Jeśli jest to wymagane przez środowisko uruchomieniowe, metoda EndJoinGroup również przeprowadza sprawdzanie zasad, aby sprawdzić, czy klient może dostępu do grupy multiemisji. Jeśli klient nie ma mieć dostęp, <xref:System.Net.Sockets.SocketException>jest zgłaszany z <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       W przypadku awarii gniazda podczas wykonywania operacji łączenia grupy, <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndJoinGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Wynik operacji asynchronicznej sprzężenia."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>to odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  id: EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Kończy operację asynchroniczną odbierania pakietu z połączonych grup multiemisji i zapewnia uzyskanych informacji."
  remarks: "Metoda EndReceiveFromSource kończy operację asynchroniczną do odbierania pakietów z jednego źródła do grupy multiemisji.       W przypadku awarii gniazda podczas wykonywania operacji odbierania <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Wynik asynchronicznej operacji odbioru."
    - id: sourcePort
      type: System.Int32
      description: "Punkt końcowy źródła, gdy pakiet został odebrany z."
    return:
      type: System.Int32
      description: "Zwraca <xref:System.Int32>.</xref:System.Int32>       Długość w bajtach wiadomości przechowywanych w <code> buffer </code> parametr przekazany do <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>metody.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>to odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  id: EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Kończy operację wysyłania pakietów emisji pojedynczej do jednego źródła."
  remarks: "Metoda EndSendToSource kończy operację asynchroniczną wysyłać pakietów do jednego źródła wcześniej określona.       W przypadku awarii gniazda podczas wykonywania operacji odbierania <xref:System.Net.Sockets.SocketException>jest generowany.</xref:System.Net.Sockets.SocketException> Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError>wyliczenie.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndSendToSource (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Wynik operacji asynchronicznej wysyłania."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>to odwołanie o wartości null (Nothing w języku Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> Został usunięty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Wystąpił błąd podczas próby uzyskania dostępu do gniazda. Zobacz sekcję uwag, aby uzyskać więcej informacji."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Pobiera lub ustawia rozmiar w bajtach buforu odbioru z <xref:System.Net.Sockets.Socket>używane dla operacji odbierania multiemisji na tym <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> wystąpienia.</xref:System.Net.Sockets.Socket>"
  remarks: "`ReceiveBufferSize` Właściwości pobiera lub ustawia rozmiar w bajtach buforu odbioru podstawowych <xref:System.Net.Sockets.Socket>używane dla operacji odbierania multiemisji na tym <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>wystąpienia.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.Socket> W szczególności `ReceiveBufferSize` właściwość określa rozmiar bufora używanego przez stos, kiedy pakiet dociera, ale aplikacja nie została jeszcze wywołana <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>metody.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> Jeśli bufor zapełniane lub pakietów zachować wychodzącego przed wywołaniami aplikacji <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>i <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A>metod, stare pakiety zostaną uzyskać porzucony.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> Aplikacja nigdy nie będzie mogła odbierać pakiety starego, a zamiast tego otrzymają nowsze pakiety, gdy wywołuje <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>metody.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>       Domyślny rozmiar buforu odbioru w systemie Windows jest 8192."
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Zwraca <xref:System.Int32>.</xref:System.Int32>       Rozmiar w bajtach buforu odbioru."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Określony rozmiar buforu jest mniejszy niż 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> Został usunięty."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Pobiera lub ustawia rozmiar w bajtach buforu wysyłania z <xref:System.Net.Sockets.Socket>używane dla operacji wysyłania multiemisji na tym <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> wystąpienia.</xref:System.Net.Sockets.Socket>"
  remarks: "Właściwość SendBufferSize pobiera lub ustawia rozmiar w bajtach buforu wysyłania podstawowych <xref:System.Net.Sockets.Socket>używane dla operacji wysyłania multiemisji na tym <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>wystąpienia.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.Socket>       W systemie Mac OS X, właściwość SendBufferSize steruje można liczbę bajtów w buforze stos sieciowy oczekiwania do wysyłane przed dodatkowe połączenia z <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>metody kończyć się niepowodzeniem.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> Aplikacje w systemie Mac OS X, może zaistnieć potrzeba dane z tą właściwością ich wysyłania dużej liczby pakietów UDP w krótkim przedziale czasu.       W systemie Windows, wywołań <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>Metoda będzie trwać dłużej wywołania zwrotnego, w zależności od wartości właściwości SendBufferSize w przypadku bufor wysyłania jest pełny.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> Właściwość SendBufferSize tylko określa, czy pozostaje buforu użytkownika jest zablokowana w pamięci fizycznej, do momentu ukończenia wysyłania.       Domyślny rozmiar buforu wysyłania w systemie Windows jest 8192."
  syntax:
    content: public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Zwraca <xref:System.Int32>.</xref:System.Int32>       Rozmiar w bajtach buforu wysyłania."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Określony rozmiar buforu jest mniejszy niż 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Grupa multiemisji nie został przyłączony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> Został usunięty."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose
  nameWithType: UdpSingleSourceMulticastClient.Dispose
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
