### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  id: CriticalHandleZeroOrMinusOneIsInvalid
  children:
  - Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor
  - Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  langs:
  - csharp
  name: CriticalHandleZeroOrMinusOneIsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  type: Class
  summary: "Udostępnia klasę podstawową dla implementacji krytyczne dojście Win32, w których wartość 0 lub wartość -1 oznacza nieprawidłowego dojścia."
  remarks: "Ta klasa pochodzi od <xref:System.Runtime.InteropServices.CriticalHandle?displayProperty=fullName>klasy.</xref:System.Runtime.InteropServices.CriticalHandle?displayProperty=fullName> Opisuje format nieprawidłowego dojścia. Na przykład niektóre uchwytów użyj -1 jako wartość nieprawidłowego dojścia, podczas gdy inne 0. Dalsze pochodnymi tej klasy (na przykład plików lub rejestru dojść) można specialize to dodatkowe.       Gdy potrzebne do opakowywania niezarządzanego zasobu, który nie ma istniejących zarządzany otok, należy użyć klasy CriticalHandleZeroOrMinusOneIsInvalid.       Ten typ implementuje <xref:System.IDisposable>interfejsu.</xref:System.IDisposable> Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niego. Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A>metody w `try` / `catch` bloku.</xref:System.IDisposable.Dispose%2A> Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak `using` (w języku C#) lub `Using` (w języku Visual Basic). Aby uzyskać więcej informacji, zobacz sekcję &quot;Przy użyciu obiektu który implementuje interfejs IDisposable&quot; w <xref:System.IDisposable>tematu interfejsu.</xref:System.IDisposable>      > [!NOTE] > Zobacz <xref:System.Runtime.InteropServices.CriticalHandle>klasy ważne informacje o bezpieczeństwie krytyczne dojście zabezpieczeń i wątku.</xref:System.Runtime.InteropServices.CriticalHandle>"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class CriticalHandleZeroOrMinusOneIsInvalid : System.Runtime.InteropServices.CriticalHandle
  inheritance:
  - System.Runtime.InteropServices.CriticalHandle
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  langs:
  - csharp
  name: CriticalHandleZeroOrMinusOneIsInvalid()
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid()
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid&quot;> </xref> klasy."
  syntax:
    content: protected CriticalHandleZeroOrMinusOneIsInvalid ();
    parameters: []
  overload: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  id: IsInvalid
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  langs:
  - csharp
  name: IsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Pobiera wartość wskazującą, czy dojście jest nieprawidłowe."
  remarks: "Środowisko uruchomieniowe języka wspólnego używa tej właściwości w celu określenia, czy finalizacji krytyczne jest wymagana."
  syntax:
    content: public override bool IsInvalid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dojście nie jest nieprawidłowy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.CriticalHandle
  isExternal: false
  name: System.Runtime.InteropServices.CriticalHandle
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: CriticalHandleZeroOrMinusOneIsInvalid()
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid()
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid()
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.#ctor*
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: CriticalHandleZeroOrMinusOneIsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.CriticalHandleZeroOrMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid*
  parent: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: CriticalHandleZeroOrMinusOneIsInvalid.IsInvalid
