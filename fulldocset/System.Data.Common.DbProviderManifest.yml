### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbProviderManifest
  id: DbProviderManifest
  children:
  - System.Data.Common.DbProviderManifest.#ctor
  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  - System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  - System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)
  - System.Data.Common.DbProviderManifest.GetDbInformation(System.String)
  - System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  - System.Data.Common.DbProviderManifest.GetInformation(System.String)
  - System.Data.Common.DbProviderManifest.GetStoreFunctions
  - System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.DbProviderManifest.GetStoreTypes
  - System.Data.Common.DbProviderManifest.NamespaceName
  - System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  - System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  - System.Data.Common.DbProviderManifest.StoreSchemaMapping
  - System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  - System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)
  langs:
  - csharp
  name: DbProviderManifest
  nameWithType: DbProviderManifest
  fullName: System.Data.Common.DbProviderManifest
  type: Class
  summary: "Interfejs metadanych dla wszystkich typów typy CLR"
  remarks: "Brak zawartości w tym miejscu będą aktualizowane; Proszę nie tutaj dodawać materiału."
  syntax:
    content: public abstract class DbProviderManifest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: DbProviderManifest()
  nameWithType: DbProviderManifest.DbProviderManifest()
  fullName: System.Data.Common.DbProviderManifest.DbProviderManifest()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.Common.DbProviderManifest&quot;> </xref> klasy."
  syntax:
    content: protected DbProviderManifest ();
    parameters: []
  overload: System.Data.Common.DbProviderManifest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  id: ConceptualSchemaDefinition
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: ConceptualSchemaDefinition
  nameWithType: DbProviderManifest.ConceptualSchemaDefinition
  fullName: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Wartość do przekazania do GetInformation uzyskać ConceptualSchemaDefinitionVersion."
  syntax:
    content: public static readonly string ConceptualSchemaDefinition;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  id: ConceptualSchemaDefinitionVersion3
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: ConceptualSchemaDefinitionVersion3
  nameWithType: DbProviderManifest.ConceptualSchemaDefinitionVersion3
  fullName: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Wartość do przekazania do GetInformation uzyskać ConceptualSchemaDefinitionVersion3."
  syntax:
    content: public static readonly string ConceptualSchemaDefinitionVersion3;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)
  id: EscapeLikeArgument(System.String)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: EscapeLikeArgument(String)
  nameWithType: DbProviderManifest.EscapeLikeArgument(String)
  fullName: System.Data.Common.DbProviderManifest.EscapeLikeArgument(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Dostawcy modułów zapisujących powinny przesłaniać tę metodę do zwrócenia argumentu z symboli wieloznacznych i znak ucieczki zmienione znaczenie. Ta metoda jest używana tylko w przypadku, jeśli SupportsEscapingLikeArgument zwraca wartość true."
  syntax:
    content: public virtual string EscapeLikeArgument (string argument);
    parameters:
    - id: argument
      type: System.String
      description: "Argument być zmienione znaczenie."
    return:
      type: System.String
      description: "Argument o symbole wieloznaczne i znak ucieczki wyjściowym."
  overload: System.Data.Common.DbProviderManifest.EscapeLikeArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetDbInformation(System.String)
  id: GetDbInformation(System.String)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetDbInformation(String)
  nameWithType: DbProviderManifest.GetDbInformation(String)
  fullName: System.Data.Common.DbProviderManifest.GetDbInformation(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "W przypadku przesłonięcia w klasie pochodnej, ta metoda zwraca informacje specyficzne dla dostawcy."
  syntax:
    content: protected abstract System.Xml.XmlReader GetDbInformation (string informationType);
    parameters:
    - id: informationType
      type: System.String
      description: "Typ danych do zwrócenia."
    return:
      type: System.Xml.XmlReader
      description: "Obiekt XmlReader, który reprezentuje mapowanie danych źródłowych przechowywania katalogu."
  overload: System.Data.Common.DbProviderManifest.GetDbInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  id: GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetEdmType(TypeUsage)
  nameWithType: DbProviderManifest.GetEdmType(TypeUsage)
  fullName: System.Data.Common.DbProviderManifest.GetEdmType(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "W przypadku przesłonięcia w klasie pochodnej, ta metoda mapuje magazynu określony typ i zestaw aspektów dla tego typu dla typu EDM."
  syntax:
    content: public abstract System.Data.Metadata.Edm.TypeUsage GetEdmType (System.Data.Metadata.Edm.TypeUsage storeType);
    parameters:
    - id: storeType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Wystąpienie właściwości TypeUsage opisujące typ magazynu i zestaw aspektów dla tego typu można mapować do typu EDM."
    return:
      type: System.Data.Metadata.Edm.TypeUsage
      description: "<xref href=&quot;System.Data.Metadata.Edm.TypeUsage&quot;> </xref> Wystąpienia, który opisuje typu EDM i zestawem aspektów dla tego typu."
  overload: System.Data.Common.DbProviderManifest.GetEdmType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  id: GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetFacetDescriptions(EdmType)
  nameWithType: DbProviderManifest.GetFacetDescriptions(EdmType)
  fullName: System.Data.Common.DbProviderManifest.GetFacetDescriptions(EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Zwraca obiekty FacetDescription dla określonego typu."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription> GetFacetDescriptions (System.Data.Metadata.Edm.EdmType edmType);
    parameters:
    - id: edmType
      type: System.Data.Metadata.Edm.EdmType
      description: "Typ EDM do zwrócenia opis zestawu reguł."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}
      description: "Obiekty FacetDescription dla określonego typu EDM."
  overload: System.Data.Common.DbProviderManifest.GetFacetDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetInformation(System.String)
  id: GetInformation(System.String)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetInformation(String)
  nameWithType: DbProviderManifest.GetInformation(String)
  fullName: System.Data.Common.DbProviderManifest.GetInformation(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Pobiera informacje właściwe dla dostawcy."
  syntax:
    content: public System.Xml.XmlReader GetInformation (string informationType);
    parameters:
    - id: informationType
      type: System.String
      description: "Typ danych do zwrócenia."
    return:
      type: System.Xml.XmlReader
      description: "Informacje specyficzne dla dostawcy."
  overload: System.Data.Common.DbProviderManifest.GetInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetStoreFunctions
  id: GetStoreFunctions
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetStoreFunctions()
  nameWithType: DbProviderManifest.GetStoreFunctions()
  fullName: System.Data.Common.DbProviderManifest.GetStoreFunctions()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "W przypadku przesłonięcia w klasie pochodnej zwraca kolekcję EDM funkcje obsługiwane przez manifestu dostawcy."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetStoreFunctions ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: "Kolekcja funkcji EDM."
  overload: System.Data.Common.DbProviderManifest.GetStoreFunctions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  id: GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetStoreType(TypeUsage)
  nameWithType: DbProviderManifest.GetStoreType(TypeUsage)
  fullName: System.Data.Common.DbProviderManifest.GetStoreType(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "W przypadku przesłonięcia w klasie pochodnej, ta metoda mapuje określonego typu EDM i zestawem aspektów dla tego typu na typ magazynu."
  syntax:
    content: public abstract System.Data.Metadata.Edm.TypeUsage GetStoreType (System.Data.Metadata.Edm.TypeUsage edmType);
    parameters:
    - id: edmType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Wystąpienie właściwości TypeUsage dotyczące typu EDM i zestawem aspektów dla tego typu można mapować na typ magazynu."
    return:
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Wystąpienie TypeUsage, który opisuje typ magazynu i zestaw aspektów dla tego typu."
  overload: System.Data.Common.DbProviderManifest.GetStoreType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.GetStoreTypes
  id: GetStoreTypes
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: GetStoreTypes()
  nameWithType: DbProviderManifest.GetStoreTypes()
  fullName: System.Data.Common.DbProviderManifest.GetStoreTypes()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "W przypadku przesłonięcia w klasie pochodnej zwraca zestaw typów pierwotnych obsługiwane przez źródło danych."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType> GetStoreTypes ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
      description: "Zestaw typów obsługiwanych w źródle danych."
  overload: System.Data.Common.DbProviderManifest.GetStoreTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.NamespaceName
  id: NamespaceName
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: NamespaceName
  nameWithType: DbProviderManifest.NamespaceName
  fullName: System.Data.Common.DbProviderManifest.NamespaceName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Pobiera obszar nazw używanych przez tego manifestu dostawcy."
  syntax:
    content: public abstract string NamespaceName { get; }
    return:
      type: System.String
      description: "Przestrzeń nazw używanych przez tego manifestu dostawcy."
  overload: System.Data.Common.DbProviderManifest.NamespaceName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  id: StoreSchemaDefinition
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: StoreSchemaDefinition
  nameWithType: DbProviderManifest.StoreSchemaDefinition
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Wartość do przekazania do GetInformation uzyskać StoreSchemaDefinitionVersion."
  syntax:
    content: public static readonly string StoreSchemaDefinition;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  id: StoreSchemaDefinitionVersion3
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: StoreSchemaDefinitionVersion3
  nameWithType: DbProviderManifest.StoreSchemaDefinitionVersion3
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Wartość do przekazania do GetInformation uzyskać StoreSchemaDefinitionVersion3."
  syntax:
    content: public static readonly string StoreSchemaDefinitionVersion3;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.StoreSchemaMapping
  id: StoreSchemaMapping
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: StoreSchemaMapping
  nameWithType: DbProviderManifest.StoreSchemaMapping
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaMapping
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Wartość do przekazania do GetInformation uzyskać StoreSchemaMappingVersion."
  syntax:
    content: public static readonly string StoreSchemaMapping;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  id: StoreSchemaMappingVersion3
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: StoreSchemaMappingVersion3
  nameWithType: DbProviderManifest.StoreSchemaMappingVersion3
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Wartość do przekazania do GetInformation uzyskać StoreSchemaMappingVersion3."
  syntax:
    content: public static readonly string StoreSchemaMappingVersion3;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)
  id: SupportsEscapingLikeArgument(System.Char@)
  parent: System.Data.Common.DbProviderManifest
  langs:
  - csharp
  name: SupportsEscapingLikeArgument(Char)
  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument(Char)
  fullName: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(Char)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common
  summary: "Wskazuje, czy dostawca obsługuje ucieczki ciągów, które mają być używane jako wzorce w wyrażeniu Like."
  syntax:
    content: public virtual bool SupportsEscapingLikeArgument (out char escapeCharacter);
    parameters:
    - id: escapeCharacter
      type: System.Char
      description: "Jeśli dostawca obsługuje anulowanie znak, który będzie służyć jako znak ucieczki."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli ten dostawca obsługuje ucieczki ciągów, które mają być używane jako wzorce w wyrażeniu podobnego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Common.DbProviderManifest.#ctor
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: DbProviderManifest()
  nameWithType: DbProviderManifest.DbProviderManifest()
  fullName: System.Data.Common.DbProviderManifest.DbProviderManifest()
- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: ConceptualSchemaDefinition
  nameWithType: DbProviderManifest.ConceptualSchemaDefinition
  fullName: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: ConceptualSchemaDefinitionVersion3
  nameWithType: DbProviderManifest.ConceptualSchemaDefinitionVersion3
  fullName: System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3
- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: EscapeLikeArgument(String)
  nameWithType: DbProviderManifest.EscapeLikeArgument(String)
  fullName: System.Data.Common.DbProviderManifest.EscapeLikeArgument(String)
- uid: System.Data.Common.DbProviderManifest.GetDbInformation(System.String)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetDbInformation(String)
  nameWithType: DbProviderManifest.GetDbInformation(String)
  fullName: System.Data.Common.DbProviderManifest.GetDbInformation(String)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetEdmType(TypeUsage)
  nameWithType: DbProviderManifest.GetEdmType(TypeUsage)
  fullName: System.Data.Common.DbProviderManifest.GetEdmType(TypeUsage)
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetFacetDescriptions(EdmType)
  nameWithType: DbProviderManifest.GetFacetDescriptions(EdmType)
  fullName: System.Data.Common.DbProviderManifest.GetFacetDescriptions(EdmType)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.FacetDescription}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<FacetDescription>
  nameWithType: ReadOnlyCollection<FacetDescription>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.FacetDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.FacetDescription
    name: FacetDescription
    nameWithType: FacetDescription
    fullName: FacetDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Metadata.Edm.EdmType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: System.Data.Metadata.Edm.EdmType
- uid: System.Data.Common.DbProviderManifest.GetInformation(System.String)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetInformation(String)
  nameWithType: DbProviderManifest.GetInformation(String)
  fullName: System.Data.Common.DbProviderManifest.GetInformation(String)
- uid: System.Data.Common.DbProviderManifest.GetStoreFunctions
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreFunctions()
  nameWithType: DbProviderManifest.GetStoreFunctions()
  fullName: System.Data.Common.DbProviderManifest.GetStoreFunctions()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<EdmFunction>
  nameWithType: ReadOnlyCollection<EdmFunction>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.EdmFunction
    name: EdmFunction
    nameWithType: EdmFunction
    fullName: EdmFunction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreType(TypeUsage)
  nameWithType: DbProviderManifest.GetStoreType(TypeUsage)
  fullName: System.Data.Common.DbProviderManifest.GetStoreType(TypeUsage)
- uid: System.Data.Common.DbProviderManifest.GetStoreTypes
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreTypes()
  nameWithType: DbProviderManifest.GetStoreTypes()
  fullName: System.Data.Common.DbProviderManifest.GetStoreTypes()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.PrimitiveType}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PrimitiveType>
  nameWithType: ReadOnlyCollection<PrimitiveType>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Metadata.Edm.PrimitiveType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Metadata.Edm.PrimitiveType
    name: PrimitiveType
    nameWithType: PrimitiveType
    fullName: PrimitiveType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbProviderManifest.NamespaceName
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: NamespaceName
  nameWithType: DbProviderManifest.NamespaceName
  fullName: System.Data.Common.DbProviderManifest.NamespaceName
- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinition
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: StoreSchemaDefinition
  nameWithType: DbProviderManifest.StoreSchemaDefinition
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaDefinition
- uid: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: StoreSchemaDefinitionVersion3
  nameWithType: DbProviderManifest.StoreSchemaDefinitionVersion3
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3
- uid: System.Data.Common.DbProviderManifest.StoreSchemaMapping
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: StoreSchemaMapping
  nameWithType: DbProviderManifest.StoreSchemaMapping
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaMapping
- uid: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: StoreSchemaMappingVersion3
  nameWithType: DbProviderManifest.StoreSchemaMappingVersion3
  fullName: System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3
- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: SupportsEscapingLikeArgument(Char)
  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument(Char)
  fullName: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(Char)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.Common.DbProviderManifest.#ctor*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: DbProviderManifest
  nameWithType: DbProviderManifest.DbProviderManifest
- uid: System.Data.Common.DbProviderManifest.EscapeLikeArgument*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: EscapeLikeArgument
  nameWithType: DbProviderManifest.EscapeLikeArgument
- uid: System.Data.Common.DbProviderManifest.GetDbInformation*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetDbInformation
  nameWithType: DbProviderManifest.GetDbInformation
- uid: System.Data.Common.DbProviderManifest.GetEdmType*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetEdmType
  nameWithType: DbProviderManifest.GetEdmType
- uid: System.Data.Common.DbProviderManifest.GetFacetDescriptions*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetFacetDescriptions
  nameWithType: DbProviderManifest.GetFacetDescriptions
- uid: System.Data.Common.DbProviderManifest.GetInformation*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetInformation
  nameWithType: DbProviderManifest.GetInformation
- uid: System.Data.Common.DbProviderManifest.GetStoreFunctions*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreFunctions
  nameWithType: DbProviderManifest.GetStoreFunctions
- uid: System.Data.Common.DbProviderManifest.GetStoreType*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreType
  nameWithType: DbProviderManifest.GetStoreType
- uid: System.Data.Common.DbProviderManifest.GetStoreTypes*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: GetStoreTypes
  nameWithType: DbProviderManifest.GetStoreTypes
- uid: System.Data.Common.DbProviderManifest.NamespaceName*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: NamespaceName
  nameWithType: DbProviderManifest.NamespaceName
- uid: System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument*
  parent: System.Data.Common.DbProviderManifest
  isExternal: false
  name: SupportsEscapingLikeArgument
  nameWithType: DbProviderManifest.SupportsEscapingLikeArgument
