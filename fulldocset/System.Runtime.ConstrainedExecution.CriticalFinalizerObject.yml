### YamlMime:ManagedReference
items:
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  id: CriticalFinalizerObject
  children:
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  langs:
  - csharp
  name: CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  type: Class
  summary: "Zapewnia, że cały kod finalizacji w klasach pochodnych jest oznaczone jako krytyczne."
  remarks: "Klasy wywodzące się z klasy CriticalFinalizerObject niejawnie są traktowane jako region ograniczonego wykonania (CER).  Wymaga to kodu w finalizator można wywołać tylko kodu przy użyciu silnego kontraktu niezawodności. Aby uzyskać więcej informacji o CERs, zobacz <xref:System.Runtime.ConstrainedExecution>przestrzeni nazw.</xref:System.Runtime.ConstrainedExecution>       W klasach pochodzących od klasy CriticalFinalizerObject wspólnego języka środowiska uruchomieniowego (języka wspólnego CLR) gwarantuje, całego kodu krytycznego finalizacji będą mieć możliwość wykonania, pod warunkiem że finalizator regułom dla CER, nawet w sytuacjach, gdy środowisko CLR wymuszanie zwalnia domeny aplikacji lub przerywa wątku. Jeśli finalizator narusza zasady dla CER, jego może nie pomyślnie wykonać. Ponadto CLR ustanawia kolejności słaby między finalizatory normalne i krytycznych: dla obiektów odzyskana przez odzyskiwanie pamięci w tym samym czasie, wszystkie niekrytyczne finalizatory są wywoływane przed każdą finalizatory krytyczne. Na przykład klasę, taką jak <xref:System.IO.FileStream>, która przechowuje dane w <xref:System.Runtime.InteropServices.SafeHandle>klasy, która jest pochodną CriticalFinalizerObject, można uruchomić standardowego finalizator opróżnić istniejące dane buforowane.</xref:System.Runtime.InteropServices.SafeHandle> </xref:System.IO.FileStream>       W większości przypadków nie należy do klasy, które pochodzi z klasy CriticalFinalizerObject zapisu. Biblioteka klas programu .NET Framework zapewnia dwie klasy <xref:System.Runtime.InteropServices.SafeHandle>i <xref:System.Runtime.InteropServices.CriticalHandle>, które zapewniają funkcje finalizacji krytyczne dojście zasobów.</xref:System.Runtime.InteropServices.CriticalHandle> </xref:System.Runtime.InteropServices.SafeHandle> Ponadto programu .NET Framework zapewnia zbiór przedpisanych klasy pochodzące od <xref:System.Runtime.InteropServices.SafeHandle>klasy, a ten zestaw znajduje się w <xref:Microsoft.Win32.SafeHandles>przestrzeni nazw.</xref:Microsoft.Win32.SafeHandles> </xref:System.Runtime.InteropServices.SafeHandle> Te klasy mają zapewnić często używane funkcje obsługi dojść do plików i systemu operacyjnego."
  example:
  - "The following code example shows the use of the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class to provide critical finalization for the standard input and output streams. The <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>, derived from the <xref:System.Runtime.InteropServices.SafeHandle> class, is passed to the file stream in the <xref:System.IO.FileStream> constructor.  \n  \n [!code-cs[SafeHandle.SafeFileHandle#1](~/add/codesnippet/csharp/t-system.runtime.constra_0_1.cs)]\n [!code-vb[SafeHandle.SafeFileHandle#1](~/add/codesnippet/visualbasic/t-system.runtime.constra_0_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class CriticalFinalizerObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  id: '#ctor'
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  langs:
  - csharp
  name: CriticalFinalizerObject()
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.CriticalFinalizerObject()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Runtime.ConstrainedExecution.CriticalFinalizerObject&quot;> </xref> klasy."
  syntax:
    content: protected CriticalFinalizerObject ();
    parameters: []
  overload: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  id: Finalize
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  langs:
  - csharp
  name: Finalize()
  nameWithType: CriticalFinalizerObject.Finalize()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "Zwalnia wszelkie zasoby używane przez <xref href=&quot;System.Runtime.ConstrainedExecution.CriticalFinalizerObject&quot;> </xref> klasy."
  remarks: "Finalizatora dla wszystkich typów pochodny <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>jest możliwość wykonywania i nie zostanie przerwane, przy założeniu finalizator poprawnie regułom dla region ograniczonego wykonania (CER).</xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>"
  syntax:
    content: ~CriticalFinalizerObject ();
    parameters: []
  overload: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: CriticalFinalizerObject()
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.CriticalFinalizerObject()
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: Finalize()
  nameWithType: CriticalFinalizerObject.Finalize()
  fullName: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize()
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor*
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: CriticalFinalizerObject
  nameWithType: CriticalFinalizerObject.CriticalFinalizerObject
- uid: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize*
  parent: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  isExternal: false
  name: Finalize
  nameWithType: CriticalFinalizerObject.Finalize
