### YamlMime:ManagedReference
items:
- uid: System.Windows.ComponentResourceKey
  id: ComponentResourceKey
  children:
  - System.Windows.ComponentResourceKey.#ctor
  - System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)
  - System.Windows.ComponentResourceKey.Assembly
  - System.Windows.ComponentResourceKey.Equals(System.Object)
  - System.Windows.ComponentResourceKey.GetHashCode
  - System.Windows.ComponentResourceKey.ResourceId
  - System.Windows.ComponentResourceKey.ToString
  - System.Windows.ComponentResourceKey.TypeInTargetAssembly
  langs:
  - csharp
  name: ComponentResourceKey
  nameWithType: ComponentResourceKey
  fullName: System.Windows.ComponentResourceKey
  type: Class
  summary: "Definiuje lub odwołuje się do kluczy zasobów na podstawie nazw klasy w zestawy zewnętrzne, a także dodatkowe identyfikator."
  remarks: "Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] informacji, zobacz [ComponentResourceKey — rozszerzenie znaczników](~/add/includes/ajax-current-ext-md.md).       Ta klasa implementuje typu obiektu, które są przydatne do tworzenia kluczy, które są oparte na typach w zestawy, a także identyfikatora. Ponieważ zdefiniować lub odwołanie do typu, nie trzeba żądania określonego <xref:System.Windows.ResourceDictionary>, i może istnieć więcej niż jeden zestaw zasobów, w zestawie, każdy zróżnicowanych według typu ich ComponentResourceKey.</xref:System.Windows.ResourceDictionary>       Istnieją dwa sposoby definiowania ComponentResourceKey.       Jeśli chcesz, aby klucz łatwo dostępne, można zdefiniować właściwości statycznej swój kod klasy kontrolki, która zwraca ComponentResourceKey, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>który istnieje w zestawie zasobu zewnętrznego i <xref:System.Windows.ComponentResourceKey.ResourceId%2A>.</xref:System.Windows.ComponentResourceKey.ResourceId%2A> </xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> w zakresie Klucz może służyć do definiowania alternatywnych domyślne style formantów w zestawie przez zamianę oryginalnego zestawu zasobów zewnętrznych dla niestandardowego. Można również zdefiniować części nazwanego zasobu w większych stylu formantu lub szablon do udostępnienia punktu wejścia dostosowania. Jest to szczególnie przydatne, jeśli słownik zasobów motywu są definiowane dla formantu.       Można również użyć [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey — rozszerzenie znaczników](../Topic/ComponentResourceKey%20Markup%20Extension.md) w Pełna składnia bezpośrednio w celu utworzenia wystąpienia utracić klucza. Jest to przydatne, jeśli chcesz zadeklarować prywatnej zasoby od innych zestawów, które są mniej wykrywalny, aby dostosować.      <a name=&quot;xamlTextUsage_ComponentResourceKey&quot;></a>## XAML tekst użycia Zobacz uwagi"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))]

      public class ComponentResourceKey : System.Windows.ResourceKey
  inheritance:
  - System.Windows.Markup.MarkupExtension
  - System.Windows.ResourceKey
  implements: []
  inheritedMembers:
  - System.Windows.ResourceKey.ProvideValue(System.IServiceProvider)
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.#ctor
  id: '#ctor'
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ComponentResourceKey()
  nameWithType: ComponentResourceKey.ComponentResourceKey()
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref> klasy."
  remarks: "Domyślny konstruktor nie jest zwykle używana, ponieważ <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>wartość i <xref:System.Windows.ComponentResourceKey.ResourceId%2A>wartości są wymagane do prawidłowego inicjowania.</xref:System.Windows.ComponentResourceKey.ResourceId%2A> </xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> Domyślny konstruktor istnieje głównie w celu obsługi [ComponentResourceKey — rozszerzenie znaczników](~/add/includes/ajax-current-ext-md.md) użycie języka XAML w formie nazwanego parametru."
  syntax:
    content: public ComponentResourceKey ();
    parameters: []
  overload: System.Windows.ComponentResourceKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)
  id: '#ctor(System.Type,System.Object)'
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ComponentResourceKey(Type,Object)
  nameWithType: ComponentResourceKey.ComponentResourceKey(Type,Object)
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey(Type,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref> , określania <xref:System.Type>definiuje klucz, a obiekt ma być używany jako identyfikator dodatkowych zasobów.</xref:System.Type>"
  remarks: "Ten konstruktor istnieją dwa scenariusze z pierwszego scenariusza są najważniejsze: - obsługuje tworzenie, <xref:System.Windows.ComponentResourceKey>który jest następnie udostępniany jako publiczne pola statycznego w klasie formantu niestandardowego</xref:System.Windows.ComponentResourceKey> Ułatwia kontrolowanie dostępu do swoich własnych zasobów zdefiniowanych w szablonie za pośrednictwem `{x:Static}` użycia dla wartości właściwości szablonu.      — Obsługuje [ComponentResourceKey — rozszerzenie znaczników](~/add/includes/ajax-current-ext-md.md) użycie języka XAML w formie parametrów pozycyjnych, czyli technikę jeden dostępny dla stron trzecich, które odwołują się do zasobu składnika."
  example:
  - "The following example creates a <xref:System.Windows.ComponentResourceKey> that is then exposed as a static key of a control class to provide a style customization entry point.  \n  \n [!code-cs[CorePseudocode#CRKCode](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#crkcode)]\n [!code-vb[CorePseudocode#CRKCode](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#crkcode)]"
  syntax:
    content: public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);
    parameters:
    - id: typeInTargetAssembly
      type: System.Type
      description: "Typ, który definiuje klucz zasobu."
    - id: resourceId
      type: System.Object
      description: "Unikatowy identyfikator rozróżnianie to <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref> spośród innych reguł skojarzonych z `typeInTargetAssembly` typu."
  overload: System.Windows.ComponentResourceKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.Assembly
  id: Assembly
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: Assembly
  nameWithType: ComponentResourceKey.Assembly
  fullName: System.Windows.ComponentResourceKey.Assembly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera obiekt zestawu, który wskazuje, które zestawu słownika do wyszukania wartość skojarzoną z tym kluczem."
  syntax:
    content: public override System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "Zestaw pobrane jako klasa odbicia."
  overload: System.Windows.ComponentResourceKey.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ComponentResourceKey.Equals(Object)
  fullName: System.Windows.ComponentResourceKey.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Określa, czy podany obiekt jest taki sam, jak bieżący <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>."
  remarks: "Dwa klucze są takie same, jeśli mają takie same wartości dla wszystkich ich natychmiastowe można ustawić właściwości (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).</xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> </xref:System.Windows.ComponentResourceKey.ResourceId%2A>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Obiekt do porównania z bieżącym <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli obiekty są równe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ComponentResourceKey.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.GetHashCode
  id: GetHashCode
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ComponentResourceKey.GetHashCode()
  fullName: System.Windows.ComponentResourceKey.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Zwraca wartość skrótu dla tego <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość całkowita 32-bitowa."
  overload: System.Windows.ComponentResourceKey.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.ResourceId
  id: ResourceId
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ResourceId
  nameWithType: ComponentResourceKey.ResourceId
  fullName: System.Windows.ComponentResourceKey.ResourceId
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera lub ustawia Unikatowy identyfikator do odróżnienia tego klucza z innym skojarzone z tym typem."
  remarks: "Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] informacji, zobacz [ComponentResourceKey — rozszerzenie znaczników](~/add/includes/ajax-current-ext-md.md).       Zazwyczaj odpowiada ciąg używany dla wartości ResourceId [xamlname — gramatyka](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlTextUsage_2&quot;></a>## XAML tekst użycia Zobacz uwagi"
  example:
  - "The following example shows how to use the ResourceId to differentiate this key from others associated with this type.  \n  \n [!code-xml[ColorPicker_snip#SliderStyle](~/add/codesnippet/xaml/ColorPickerLib/Themes/generic.xaml#sliderstyle)]"
  syntax:
    content: public object ResourceId { get; set; }
    return:
      type: System.Object
      description: "Unikatowy identyfikator. Zazwyczaj jest to ciąg."
  overload: System.Windows.ComponentResourceKey.ResourceId*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.ToString
  id: ToString
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ToString()
  nameWithType: ComponentResourceKey.ToString()
  fullName: System.Windows.ComponentResourceKey.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera reprezentację ciągu <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Reprezentacja ciągu."
  overload: System.Windows.ComponentResourceKey.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly
  id: TypeInTargetAssembly
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: TypeInTargetAssembly
  nameWithType: ComponentResourceKey.TypeInTargetAssembly
  fullName: System.Windows.ComponentResourceKey.TypeInTargetAssembly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera lub ustawia <xref:System.Type>definiuje klucz zasobu.</xref:System.Type>"
  remarks: "Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] informacji, zobacz [ComponentResourceKey — rozszerzenie znaczników](~/add/includes/ajax-current-ext-md.md).       <xref:System.Windows.ComponentResourceKey>Element jest używany w niestandardowych składników do definiowania kluczy dla zasobów, które są dostępne z zewnętrznych zestawów, w oparciu o przeznaczonych dla zestawu zawierającego typ.</xref:System.Windows.ComponentResourceKey> Niestandardowe składniki często Definiowanie nowych typów, które muszą być w zestawie, w którym znajduje się zasób. Zazwyczaj te typy nie mają żadnych innych implementacji, w celu spełnienia wymagań wyszukiwania <xref:System.Windows.ComponentResourceKey>.</xref:System.Windows.ComponentResourceKey> istnieć tylko typy      <a name=&quot;xamlTextUsage_3&quot;></a>## XAML tekst użycia Zobacz uwagi"
  example:
  - "The following example shows how to define a <xref:System.Windows.ComponentResourceKey> including TypeInTargetAssembly and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> using the [ComponentResourceKey Markup Extension](../Topic/ComponentResourceKey%20Markup%20Extension.md). This resource can then be placed in an external assembly and accessed by a key usage that requests the resource using an analogous <xref:System.Windows.ComponentResourceKey> in the request.  \n  \n [!code-xml[ColorPicker_snip#SliderStyle](~/add/codesnippet/xaml/ColorPickerLib/Themes/generic.xaml#sliderstyle)]"
  syntax:
    content: public Type TypeInTargetAssembly { get; set; }
    return:
      type: System.Type
      description: "Typ, który definiuje klucz zasobu."
  overload: System.Windows.ComponentResourceKey.TypeInTargetAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.ResourceKey
  isExternal: false
  name: System.Windows.ResourceKey
- uid: System.Windows.ComponentResourceKey.#ctor
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ComponentResourceKey()
  nameWithType: ComponentResourceKey.ComponentResourceKey()
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey()
- uid: System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ComponentResourceKey(Type,Object)
  nameWithType: ComponentResourceKey.ComponentResourceKey(Type,Object)
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey(Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.ComponentResourceKey.Assembly
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Assembly
  nameWithType: ComponentResourceKey.Assembly
  fullName: System.Windows.ComponentResourceKey.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Windows.ComponentResourceKey.Equals(System.Object)
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Equals(Object)
  nameWithType: ComponentResourceKey.Equals(Object)
  fullName: System.Windows.ComponentResourceKey.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.ComponentResourceKey.GetHashCode
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: GetHashCode()
  nameWithType: ComponentResourceKey.GetHashCode()
  fullName: System.Windows.ComponentResourceKey.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ComponentResourceKey.ResourceId
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ResourceId
  nameWithType: ComponentResourceKey.ResourceId
  fullName: System.Windows.ComponentResourceKey.ResourceId
- uid: System.Windows.ComponentResourceKey.ToString
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ToString()
  nameWithType: ComponentResourceKey.ToString()
  fullName: System.Windows.ComponentResourceKey.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: TypeInTargetAssembly
  nameWithType: ComponentResourceKey.TypeInTargetAssembly
  fullName: System.Windows.ComponentResourceKey.TypeInTargetAssembly
- uid: System.Windows.ComponentResourceKey.#ctor*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ComponentResourceKey
  nameWithType: ComponentResourceKey.ComponentResourceKey
- uid: System.Windows.ComponentResourceKey.Assembly*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Assembly
  nameWithType: ComponentResourceKey.Assembly
- uid: System.Windows.ComponentResourceKey.Equals*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Equals
  nameWithType: ComponentResourceKey.Equals
- uid: System.Windows.ComponentResourceKey.GetHashCode*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: GetHashCode
  nameWithType: ComponentResourceKey.GetHashCode
- uid: System.Windows.ComponentResourceKey.ResourceId*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ResourceId
  nameWithType: ComponentResourceKey.ResourceId
- uid: System.Windows.ComponentResourceKey.ToString*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ToString
  nameWithType: ComponentResourceKey.ToString
- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: TypeInTargetAssembly
  nameWithType: ComponentResourceKey.TypeInTargetAssembly
