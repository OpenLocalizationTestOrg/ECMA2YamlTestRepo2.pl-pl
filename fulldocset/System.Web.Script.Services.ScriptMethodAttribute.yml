### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Services.ScriptMethodAttribute
  id: ScriptMethodAttribute
  children:
  - System.Web.Script.Services.ScriptMethodAttribute.#ctor
  - System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  - System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  - System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  langs:
  - csharp
  name: ScriptMethodAttribute
  nameWithType: ScriptMethodAttribute
  fullName: System.Web.Script.Services.ScriptMethodAttribute
  type: Class
  summary: "Określa zlecenie HTTP, który jest używany do wywołania metody i format odpowiedzi. Ta klasa nie może być dziedziczona."
  remarks: "Ten atrybut służy do określania informacji dla metod, które może być wywoływana ze skryptu klienta. Ten atrybut umożliwia określenie, które zlecenie HTTP (GET lub POST) może służyć do wywołania metody. Umożliwia on również określić, czy odpowiedź jest formatowany przy użyciu języka JavaScript Object Notation (JSON) lub XML.       Atrybut ScriptMethodAttribute jest opcjonalne. (Jednak metody, które może być wywoływana ze skryptu klienta muszą mieć <xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName>Atrybut zastosowany.).</xref:System.Web.Services.WebMethodAttribute?displayProperty=fullName> Jeśli metoda nie jest oznaczony atrybutem ScriptMethodAttribute, metoda zostanie wywołana za pomocą polecenia HTTP POST i odpowiedź zostanie zserializowanym w formacie JSON. Nie można zastąpić to ustawienie ze skryptu.       ScriptMethodAttribute przyjmuje tylko nazwanych parametrów. Poniżej przedstawiono właściwości klasy ScriptMethodAttribute, który może służyć jako nazwane parametry:- <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>Określa, czy metoda zostanie wywołany za pomocą polecenia HTTP GET.</xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> Wartość domyślna to `false`.          > [!IMPORTANT] > Ustawienie <xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A>właściwości `true` może stanowić zagrożenie bezpieczeństwa dla aplikacji, jeśli pracujesz z danych poufnych lub transakcji.</xref:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet%2A> W żądaniach GET wiadomości są kodowane przez przeglądarkę do adresu URL i dlatego jest łatwiejsze celu manipulowania. Zarówno GET i POST żądań należy wykonać wytyczne dotyczące zabezpieczeń w celu ochrony poufnych danych.      - <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>Określa, czy odpowiedź będzie wykonywana serializacja JSON lub XML.</xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> Wartość domyślna to `Json`. <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>Właściwość jest przydatna do określania XML jako typ zwracany, gdy metoda zwraca <xref:System.Xml.XmlDocument>lub <xref:System.Xml.XmlElement>obiektu.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlDocument> </xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>      - <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>Określa, czy wszystkie zwracane typy, włącznie z typami ciąg są zserializowanym w formacie XML.</xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A> Wartość <xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>właściwość jest ignorowana, jeśli odpowiedź jest zserializowanym w formacie JSON.</xref:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString%2A>       Aby uzyskać więcej informacji o sposobie używania atrybutów, zobacz [atrybutów](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to apply ScriptMethodAttribute to the `GetXmlDocument` and `EchoStringAndDate` methods to specify which HTTP verb to use and to specify the response format.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class ScriptMethodAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: ScriptMethodAttribute()
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute()
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ScriptMethodAttribute()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Script.Services.ScriptMethodAttribute&quot;> </xref> klasy."
  syntax:
    content: public ScriptMethodAttribute ();
    parameters: []
  overload: System.Web.Script.Services.ScriptMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  id: ResponseFormat
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Pobiera lub ustawia format odpowiedzi metody."
  remarks: "Użyj właściwości Format odpowiedzi, jeśli chcesz określić XML jako formatu dla zwracanego typu. Jest to przydatne, gdy metoda zwróci wartość <xref:System.Xml.XmlDocument>lub <xref:System.Xml.XmlElement>obiektu.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlDocument>       Jeśli ustawiono właściwość Format odpowiedzi `Xml`, pola publiczne i zwracany typ właściwości, które mają <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>Atrybut zastosowany nie będą ignorowane.</xref:System.Web.Script.Serialization.ScriptIgnoreAttribute> Jest to spowodowane będą wykonywane szeregowo przy użyciu <xref:System.Xml.Serialization.XmlSerializer>obiekt zamiast <xref:System.Web.Script.Serialization.JavaScriptSerializer>obiektu.</xref:System.Web.Script.Serialization.JavaScriptSerializer> </xref:System.Xml.Serialization.XmlSerializer> Należy najpierw zastosować <xref:System.Xml.Serialization.XmlIgnoreAttribute>atrybutu, aby <xref:System.Xml.Serialization.XmlSerializer>Ignoruj lub pominąć te pola publiczne i właściwości typu zwracanego.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlIgnoreAttribute>"
  example:
  - "The following example shows how to apply the <xref:System.Web.Script.Services.ScriptMethodAttribute> attribute to a Web method with the ResponseFormat property set to `Xml`. The return value of the method will be serialized as XML and sent to the succeeded callback function as an object of type <xref:System.Xml.XmlDocument>. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.Script.Services.ResponseFormat ResponseFormat { get; set; }
    return:
      type: System.Web.Script.Services.ResponseFormat
      description: "Jeden z <xref href=&quot;System.Web.Script.Services.ResponseFormat&quot;> </xref> wartości. Wartość domyślna to <xref uid=&quot;langword_csharp_Json&quot; name=&quot;Json&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  id: UseHttpGet
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
  fullName: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Pobiera lub ustawia wartość wskazującą, czy można wywołać metody przy użyciu HTTP GET."
  remarks: "Nie można zastąpić ta właściwość ze ECMAScript (JavaScript) na komputerze klienckim. Jeśli ta właściwość jest ustawiona na `true`, wywołanie metody ze skryptu będzie zawsze używać HTTP GET.       Jeśli ta właściwość jest równa `true`, kod serwera proxy klienta używa HTTP GET do wywoływania usługi sieci Web. Każdego parametru wejściowego dla metody zostanie wyświetlone jako parametr zapytania w adresie URL, który służy do wywoływania metody sieci Web. Wartość parametru uzyskuje się za pomocą serializacji JavaScript Object Notation (JSON) i adres URL kodowanie wartość parametru.       Użycie HTTP GET dla wywołania metody usługi sieci Web wykonuje samej wytyczne dotyczące interakcji sieci Web. GET protokołu HTTP należy używać tylko w przypadku operacji gdzie jest widoczne żadne dane poufne i podczas działania serwera nie ma efekty uboczne.      > [!IMPORTANT] > Ustawienie właściwości UseHttpGet `true` może stanowić zagrożenie bezpieczeństwa dla aplikacji, jeśli pracujesz z danych poufnych lub transakcji. W żądaniach GET wiadomości są kodowane przez przeglądarkę do adresu URL i dlatego jest łatwiejsze celu manipulowania."
  example:
  - "The following example shows how to apply <xref:System.Web.Script.Services.ScriptMethodAttribute> to a Web method with the UseHttpGet property set to `true`. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool UseHttpGet { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli metoda jest wywoływana za pomocą polecenia HTTP GET; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli metoda jest wywoływana za pomocą polecenia HTTP POST. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  id: XmlSerializeString
  parent: System.Web.Script.Services.ScriptMethodAttribute
  langs:
  - csharp
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
  fullName: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Services
  summary: "Pobiera lub ustawia wartość wskazującą, czy zwracać wszystkie typy są zserializowanym w formacie XML, który zawiera ciąg."
  remarks: "Jeśli ta właściwość jest równa `false`, zwraca wszystkie typy są zserializowanym w formacie XML, z wyjątkiem ciąg, który jest interpretowany jako kod znaczników XML. Jeśli wartość jest `false`, i Jeśli zwracany typ jest ciągiem, a jeśli ciąg nie zawiera znaczników XML, który odpowiada poprawnie sformułowany dokument XML, zostanie wywołany działanie funkcji wywołania zwrotnego zakończyło się pomyślnie, ale powstałe w ten sposób będą serializacji ciągu `null`.       Wartość XmlSerializeString jest ignorowany podczas <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>ma ustawioną właściwość `Json`.</xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A>"
  example:
  - "The following example shows how to apply <xref:System.Web.Script.Services.ScriptMethodAttribute> to a Web method with the XmlSerializeString property set to `true`. This code example is part of a larger example provided for the <xref:System.Web.Script.Services.ScriptMethodAttribute> class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool XmlSerializeString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wszystkie typy zwracane są zserializowanym w formacie XML; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ScriptMethodAttribute()
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute()
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ScriptMethodAttribute()
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
  fullName: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat
- uid: System.Web.Script.Services.ResponseFormat
  parent: System.Web.Script.Services
  isExternal: false
  name: ResponseFormat
  nameWithType: ResponseFormat
  fullName: System.Web.Script.Services.ResponseFormat
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
  fullName: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
  fullName: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString
- uid: System.Web.Script.Services.ScriptMethodAttribute.#ctor*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ScriptMethodAttribute
  nameWithType: ScriptMethodAttribute.ScriptMethodAttribute
- uid: System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: ResponseFormat
  nameWithType: ScriptMethodAttribute.ResponseFormat
- uid: System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: UseHttpGet
  nameWithType: ScriptMethodAttribute.UseHttpGet
- uid: System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString*
  parent: System.Web.Script.Services.ScriptMethodAttribute
  isExternal: false
  name: XmlSerializeString
  nameWithType: ScriptMethodAttribute.XmlSerializeString
