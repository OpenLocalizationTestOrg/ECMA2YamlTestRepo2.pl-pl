### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  id: WSTrustMessage
  children:
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType
  - System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey
  langs:
  - csharp
  name: WSTrustMessage
  nameWithType: WSTrustMessage
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  type: Class
  summary: "Klasa podstawowa dla RST i odpowiedź RSTR."
  remarks: "Aby uzyskać więcej informacji na temat wiadomości i elementy, które ta klasa reprezentuje Zobacz wersja specyfikacji WS-Trust, która ma zastosowanie do danego scenariusza."
  syntax:
    content: 'public abstract class WSTrustMessage : System.IdentityModel.OpenObject'
  inheritance:
  - System.Object
  - System.IdentityModel.OpenObject
  implements: []
  inheritedMembers:
  - System.IdentityModel.OpenObject.Properties
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: WSTrustMessage()
  nameWithType: WSTrustMessage.WSTrustMessage()
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.WSTrustMessage()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Protocols.WSTrust.WSTrustMessage&quot;> </xref> klasy."
  remarks: "Domyślny konstruktor rozszerzalności."
  syntax:
    content: protected WSTrustMessage ();
    parameters: []
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating
  id: AllowPostdating
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: AllowPostdating
  nameWithType: WSTrustMessage.AllowPostdating
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:AllowPostdating."
  remarks: "To opcjonalny element wskazuje, że który zwrócił tokeny powinna zezwalać na żądania postdatowanych tokenów.       Ta właściwość jest zwykle używana z powiązaniem odnowienia tokenu."
  syntax:
    content: public bool AllowPostdating { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zwrócony tokeny powinna zezwalać na żądania tokenów postdatowanych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo
  id: AppliesTo
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: AppliesTo
  nameWithType: WSTrustMessage.AppliesTo
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wsp:AppliesTo."
  remarks: "Ten opcjonalny element Określa adres punktu końcowego, dla którego ten token zabezpieczający jest pożądany; na przykład usługi, którego dotyczy ten token.       Wst:TokenType lub wst:AppliesTo powinien być zdefiniowany w komunikacie żądania tokenu. Jeśli określono oba pola wst:AppliesTo pierwszeństwo."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.EndpointReference AppliesTo { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.EndpointReference
      description: "<xref:System.ServiceModel.EndpointAddress>Reprezentujący adres punktu końcowego, dla którego token zabezpieczający jest pożądany.</xref:System.ServiceModel.EndpointAddress>"
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType
  id: AuthenticationType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: WSTrustMessage.AuthenticationType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:AuthenticationType."
  remarks: "Ten opcjonalny element wskazuje typ uwierzytelniania pożądane, określony jako identyfikatora URI."
  syntax:
    content: public string AuthenticationType { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera identyfikator URI, który wskazuje typ uwierzytelniania potrzebne."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange
  id: BinaryExchange
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: BinaryExchange
  nameWithType: WSTrustMessage.BinaryExchange
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:BinaryExchange."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.BinaryExchange BinaryExchange { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.BinaryExchange
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.BinaryExchange&quot;> </xref> zawierający dane binarne wymieniane. Obejmuje zawartość atrybutów ValueType i EncodingType, jak również rzeczywiste dane."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm
  id: CanonicalizationAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: CanonicalizationAlgorithm
  nameWithType: WSTrustMessage.CanonicalizationAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:CanonicalizationAlgorithm."
  syntax:
    content: public string CanonicalizationAlgorithm { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera identyfikator URI, który wskazuje algorytm kanonizacji."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context
  id: Context
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: Context
  nameWithType: WSTrustMessage.Context
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia wartość atrybutu kontekstu RST lub odpowiedź RSTR."
  remarks: "Opcjonalny atrybut kontekstu w elemencie RST Określa identyfikator (context) dla żądania. Wszystkie kolejne elementy odpowiedź RSTR odnoszące się do tego żądania muszą posiadać ten atrybut."
  syntax:
    content: public string Context { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera identyfikator URI, który identyfikuje kontekst komunikatu żądania lub odpowiedzi."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm
  id: EncryptionAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: EncryptionAlgorithm
  nameWithType: WSTrustMessage.EncryptionAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:EncryptionAlgorithm."
  remarks: "To opcjonalny element URI wskazuje algorytm szyfrowania żądaną używany w tokenie zwrócony."
  syntax:
    content: public string EncryptionAlgorithm { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera identyfikator URI, który wskazuje algorytm szyfrowania."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith
  id: EncryptWith
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: EncryptWith
  nameWithType: WSTrustMessage.EncryptWith
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:EncryptWith."
  remarks: "Ten opcjonalny element URI wskazuje algorytmu szyfrowania odpowiednie do użycia z tokenu zabezpieczeń."
  syntax:
    content: public string EncryptWith { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera identyfikator URI, który wskazuje algoritm żądaną szyfrowania do użycia z tokenu zabezpieczeń."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Próba ustawioną właściwość <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub pusty ciąg."
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy
  id: Entropy
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: Entropy
  nameWithType: WSTrustMessage.Entropy
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:Entropy."
  remarks: "Ten opcjonalny element umożliwia obiekt żądający określić entropii, który ma być używany do tworzenia klucza. Jest ona powszechnie stosowana w komunikacie żądania wydawania tokenów. Wartość tego elementu powinno być EncryptedKey lub BinarySecret, w zależności od tego, czy klucz jest zaszyfrowany."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.Entropy Entropy { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.Entropy
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Entropy&quot;> </xref> reprezentujący zawartość elementu entropii."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits
  id: KeySizeInBits
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: KeySizeInBits
  nameWithType: WSTrustMessage.KeySizeInBits
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:KeySize wewnątrz komunikat RequestSecurityToken (RST)."
  syntax:
    content: public Nullable<int> KeySizeInBits { get; set; }
    return:
      type: System.Nullable{System.Int32}
      description: "Rozmiar klucza w bitach."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Występuje, próba ustawiona wartość mniejsza lub równa zero."
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType
  id: KeyType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: KeyType
  nameWithType: WSTrustMessage.KeyType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:KeyType wewnątrz komunikat RequestSecurityToken (RST)."
  remarks: "Ten opcjonalny element URI wskazuje typ klucza żądana w tokenie zabezpieczającym."
  syntax:
    content: public string KeyType { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera identyfikator URI, który określa typ klucza potrzebne."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm
  id: KeyWrapAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: KeyWrapAlgorithm
  nameWithType: WSTrustMessage.KeyWrapAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:KeyWrapAlgorithm."
  remarks: "Ten opcjonalny identyfikator URI wskazuje wybranego algorytmu do użycia klucza zawijania podczas STS szyfruje wystawionego tokenu dla jednostki uzależnionej przy użyciu klucza asymetrycznego."
  syntax:
    content: public string KeyWrapAlgorithm { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera identyfikator URI, który identyfikuje klucz zawijać algorytmu."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime
  id: Lifetime
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: Lifetime
  nameWithType: WSTrustMessage.Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:Lifetime wewnątrz komunikat RequestSecurityToken (RST)."
  remarks: "Ten opcjonalny element określa zakres żądany czas, w którym tokenu zabezpieczającego zwróconego jest prawidłowy."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.Lifetime Lifetime { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Lifetime&quot;> </xref> reprezentujący żądany czas, w którym będzie nieprawidłowy token zwrócony."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo
  id: ReplyTo
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: ReplyTo
  nameWithType: WSTrustMessage.ReplyTo
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia adres służący do odpowiadania na uzależniona."
  remarks: "Jest to rozszerzenie lokalnego, który jest używany wyłącznie w pasywnym scenariuszy przy użyciu protokołu WS-Federation."
  syntax:
    content: public string ReplyTo { get; set; }
    return:
      type: System.String
      description: "Ciąg zawierający adres."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType
  id: RequestType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: RequestType
  nameWithType: WSTrustMessage.RequestType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia wst:RequestType element."
  remarks: "Wymaganego elementu wskazuje typ żądania."
  syntax:
    content: public string RequestType { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera identyfikator URI, który wskazuje typ żądania; na przykład jeden stałe zdefiniowane w <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestTypes&quot;> </xref> klasy."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: WSTrustMessage.SignatureAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:SignatureAlgorithm."
  remarks: "To opcjonalny element URI wskazuje algorytm podpisu żądaną używany w tokenie zwrócony."
  syntax:
    content: public string SignatureAlgorithm { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera identyfikator URI, który wskazuje algorytmu podpisu."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith
  id: SignWith
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: SignWith
  nameWithType: WSTrustMessage.SignWith
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:SignWith."
  remarks: "Ten opcjonalny element URI wskazuje algorytmu podpisu odpowiednie do użycia z tokenu zabezpieczeń. To rozszerzenie elemencie RequestSecurityToken."
  syntax:
    content: public string SignWith { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera identyfikator URI, który identyfikuje algorytm żądanego podpisu."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Podjęto próbę ustawienia wartości <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub pusty ciąg."
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType
  id: TokenType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: TokenType
  nameWithType: WSTrustMessage.TokenType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:TokenType."
  remarks: "Ten opcjonalny element wskazuje żądany typ tokenu."
  syntax:
    content: public string TokenType { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera identyfikator URI, który wskazuje typ tokenu."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey
  id: UseKey
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  langs:
  - csharp
  name: UseKey
  nameWithType: WSTrustMessage.UseKey
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Pobiera lub ustawia zawartość elementu wst:UseKey."
  remarks: "Jeśli obiekt żądający zamierza użyć istniejącego klucza, zamiast tworzyć nowy, tej właściwości można użyć odwołania do tokenów zabezpieczeń zawierające klucz żądanej. Jest ona powszechnie stosowana w przypadku klucza issurance asymetric."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.UseKey UseKey { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.UseKey
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.UseKey&quot;> </xref> zawierający klucz."
  overload: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.OpenObject
  isExternal: false
  name: System.IdentityModel.OpenObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: WSTrustMessage()
  nameWithType: WSTrustMessage.WSTrustMessage()
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.WSTrustMessage()
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: AllowPostdating
  nameWithType: WSTrustMessage.AllowPostdating
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: AppliesTo
  nameWithType: WSTrustMessage.AppliesTo
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo
- uid: System.IdentityModel.Protocols.WSTrust.EndpointReference
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: EndpointReference
  nameWithType: EndpointReference
  fullName: System.IdentityModel.Protocols.WSTrust.EndpointReference
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: AuthenticationType
  nameWithType: WSTrustMessage.AuthenticationType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: BinaryExchange
  nameWithType: WSTrustMessage.BinaryExchange
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange
- uid: System.IdentityModel.Protocols.WSTrust.BinaryExchange
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: BinaryExchange
  nameWithType: BinaryExchange
  fullName: System.IdentityModel.Protocols.WSTrust.BinaryExchange
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: CanonicalizationAlgorithm
  nameWithType: WSTrustMessage.CanonicalizationAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: Context
  nameWithType: WSTrustMessage.Context
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: WSTrustMessage.EncryptionAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: EncryptWith
  nameWithType: WSTrustMessage.EncryptWith
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: Entropy
  nameWithType: WSTrustMessage.Entropy
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy
- uid: System.IdentityModel.Protocols.WSTrust.Entropy
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Entropy
  nameWithType: Entropy
  fullName: System.IdentityModel.Protocols.WSTrust.Entropy
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: KeySizeInBits
  nameWithType: WSTrustMessage.KeySizeInBits
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: KeyType
  nameWithType: WSTrustMessage.KeyType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: KeyWrapAlgorithm
  nameWithType: WSTrustMessage.KeyWrapAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: Lifetime
  nameWithType: WSTrustMessage.Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime
- uid: System.IdentityModel.Protocols.WSTrust.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Lifetime
  nameWithType: Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: ReplyTo
  nameWithType: WSTrustMessage.ReplyTo
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: RequestType
  nameWithType: WSTrustMessage.RequestType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: WSTrustMessage.SignatureAlgorithm
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: SignWith
  nameWithType: WSTrustMessage.SignWith
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: TokenType
  nameWithType: WSTrustMessage.TokenType
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: UseKey
  nameWithType: WSTrustMessage.UseKey
  fullName: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey
- uid: System.IdentityModel.Protocols.WSTrust.UseKey
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: UseKey
  nameWithType: UseKey
  fullName: System.IdentityModel.Protocols.WSTrust.UseKey
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.#ctor*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: WSTrustMessage
  nameWithType: WSTrustMessage.WSTrustMessage
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AllowPostdating*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: AllowPostdating
  nameWithType: WSTrustMessage.AllowPostdating
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: AppliesTo
  nameWithType: WSTrustMessage.AppliesTo
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AuthenticationType*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: AuthenticationType
  nameWithType: WSTrustMessage.AuthenticationType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.BinaryExchange*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: BinaryExchange
  nameWithType: WSTrustMessage.BinaryExchange
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.CanonicalizationAlgorithm*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: CanonicalizationAlgorithm
  nameWithType: WSTrustMessage.CanonicalizationAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Context*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: Context
  nameWithType: WSTrustMessage.Context
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptionAlgorithm*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: WSTrustMessage.EncryptionAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.EncryptWith*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: EncryptWith
  nameWithType: WSTrustMessage.EncryptWith
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Entropy*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: Entropy
  nameWithType: WSTrustMessage.Entropy
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: KeySizeInBits
  nameWithType: WSTrustMessage.KeySizeInBits
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: KeyType
  nameWithType: WSTrustMessage.KeyType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyWrapAlgorithm*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: KeyWrapAlgorithm
  nameWithType: WSTrustMessage.KeyWrapAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.Lifetime*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: Lifetime
  nameWithType: WSTrustMessage.Lifetime
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: ReplyTo
  nameWithType: WSTrustMessage.ReplyTo
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: RequestType
  nameWithType: WSTrustMessage.RequestType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignatureAlgorithm*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: WSTrustMessage.SignatureAlgorithm
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.SignWith*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: SignWith
  nameWithType: WSTrustMessage.SignWith
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: TokenType
  nameWithType: WSTrustMessage.TokenType
- uid: System.IdentityModel.Protocols.WSTrust.WSTrustMessage.UseKey*
  parent: System.IdentityModel.Protocols.WSTrust.WSTrustMessage
  isExternal: false
  name: UseKey
  nameWithType: WSTrustMessage.UseKey
