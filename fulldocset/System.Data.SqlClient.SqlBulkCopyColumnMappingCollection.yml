### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  id: SqlBulkCopyColumnMappingCollection
  children:
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  - System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: SqlBulkCopyColumnMappingCollection
  nameWithType: SqlBulkCopyColumnMappingCollection
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  type: Class
  summary: "Kolekcja <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> obiektów, które dziedziczy <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>."
  remarks: "Mapowania kolumn zdefiniować mapowanie między źródłem danych i tabeli docelowej.       Jeśli nie zdefiniowano mapowania — to znaczy <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>Kolekcja jest pusta — kolumny są mapowane niejawnie oparte na pozycji porządkowej.</xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> Aby to zrobić schematami źródłowymi i docelowymi muszą być zgodne. Jeśli nie, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException>       Jeśli <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A>kolekcji nie jest pusty, nie wszystkie kolumny w źródle danych musi być określony.</xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> Te nie są mapowane w kolekcji są ignorowane.       Nazwa lub numer mogą odwoływać się do kolumny źródłowe i docelowe. Można mieszać by-name i odwołań do kolumn przez numer w tej samej kolekcji mapowania."
  example:
  - "The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> are added to the SqlBulkCopyColumnMappingCollection for the <xref:System.Data.SqlClient.SqlBulkCopy> object to create a column map for the bulk copy.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingCollection#1](~/add/codesnippet/csharp/t-system.data.sqlclient._16_1.cs)]\n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingCollection#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._16_1.vb)]"
  syntax:
    content: 'public sealed class SqlBulkCopyColumnMappingCollection : System.Collections.CollectionBase'
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnValidate(System.Object)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  id: Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Add(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(SqlBulkCopyColumnMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Dodaje określony mapowanie <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&quot;> </xref>."
  remarks: ''
  example:
  - "The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objects are used to create a column map for the bulk copy.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ColumnMapping#1](~/add/codesnippet/visualbasic/c6b72204-08c1-4b6a-883f-_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ColumnMapping#1](~/add/codesnippet/csharp/c6b72204-08c1-4b6a-883f-_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (System.Data.SqlClient.SqlBulkCopyColumnMapping bulkCopyColumnMapping);
    parameters:
    - id: bulkCopyColumnMapping
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "<xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> Obiekt, który opisuje mapowanie do dodania do kolekcji."
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "A <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)
  id: Add(System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Add(Int32,Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(Int32,Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Tworzy nowy <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> i dodaje go do kolekcji, aby określić kolumny źródłowym i docelowym przy użyciu liczb porządkowych."
  remarks: 'Mapowania w kolekcji musi być uniform: wszystkie pary całkowitą/całkowitą, wszystkie pary ciąg i ciąg, wszystkie pary/ciąg będący liczbą całkowitą lub wszystkie pary ciągu/liczby całkowitej. Jeśli próbujesz dodać mapowania, który różni się od innych już w kolekcji, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException>'
  example:
  - "The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objects are used to create a column map for the bulk copy using the ordinal position of the source and destination columns.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingCollectionOrdinal#1](~/add/codesnippet/visualbasic/57914c2f-2bf9-43fe-9e88-_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingCollectionOrdinal#1](~/add/codesnippet/csharp/57914c2f-2bf9-43fe-9e88-_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (int sourceColumnIndex, int destinationColumnIndex);
    parameters:
    - id: sourceColumnIndex
      type: System.Int32
      description: "{Numer porządkowy pozycja kolumny źródłowej w źródle danych."
    - id: destinationColumnIndex
      type: System.Int32
      description: "{Numer porządkowy pozycja kolumny docelowej tabeli docelowej."
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "Mapowanie kolumny."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)
  id: Add(System.Int32,System.String)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Add(Int32,String)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(Int32,String)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(Int32,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Tworzy nowy <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> i dodaje go do kolekcji przy użyciu numeru porządkowego dla kolumny źródłowej i ciągu dla kolumny docelowej."
  remarks: 'Mapowania w kolekcji musi być uniform: wszystkie pary całkowitą/całkowitą, wszystkie pary ciąg i ciąg, wszystkie pary/ciąg będący liczbą całkowitą lub wszystkie pary ciągu/liczby całkowitej. Jeśli próbujesz dodać mapowania, który różni się od innych już w kolekcji, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException>'
  example:
  - "The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objects are used to create a column map for the bulk copy.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingIndexColName#1](~/add/codesnippet/visualbasic/624e3b12-cb57-41a7-81b7-_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingIndexColName#1](~/add/codesnippet/csharp/624e3b12-cb57-41a7-81b7-_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (int sourceColumnIndex, string destinationColumn);
    parameters:
    - id: sourceColumnIndex
      type: System.Int32
      description: "{Numer porządkowy pozycja kolumny źródłowej w źródle danych."
    - id: destinationColumn
      type: System.String
      description: "Nazwa kolumny docelowej tabeli docelowej."
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "Mapowanie kolumny."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)
  id: Add(System.String,System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Add(String,Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(String,Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(String,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Tworzy nowy <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> i dodaje go do kolekcji przy użyciu nazwy kolumny do opisu kolumny źródłowej i numer, aby określić kolumny docelowej."
  remarks: 'Mapowania w kolekcji musi być uniform: wszystkie pary całkowitą/całkowitą, wszystkie pary ciąg i ciąg, wszystkie pary/ciąg będący liczbą całkowitą lub wszystkie pary ciągu/liczby całkowitej. Jeśli próbujesz dodać mapowania, który różni się od innych już w kolekcji, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException>'
  example:
  - "The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match. <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objects are used to create a column map for the bulk copy.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingColNameIndex#1](~/add/codesnippet/csharp/cd5c991c-ee05-4daf-bff5-_1.cs)]\n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingColNameIndex#1](~/add/codesnippet/visualbasic/cd5c991c-ee05-4daf-bff5-_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (string sourceColumn, int destinationColumnIndex);
    parameters:
    - id: sourceColumn
      type: System.String
      description: "Nazwa kolumny źródłowej w źródle danych."
    - id: destinationColumnIndex
      type: System.Int32
      description: "{Numer porządkowy pozycja kolumny docelowej tabeli docelowej."
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "Mapowanie kolumny."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(String,String)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Tworzy nowy <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> i dodaje go do kolekcji, za pomocą nazwy kolumn, aby określić kolumny źródłowym i docelowym."
  remarks: 'Mapowania w kolekcji musi być uniform: wszystkie pary całkowitą/całkowitą, wszystkie pary ciąg i ciąg, wszystkie pary/ciąg będący liczbą całkowitą lub wszystkie pary ciągu/liczby całkowitej. Jeśli próbujesz dodać mapowania, który różni się od innych już w kolekcji, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException>'
  example:
  - "The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database. Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match. The code creates a <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> object by specifying the column names.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingCollection#1](~/add/codesnippet/csharp/3c1a773a-29ff-4775-932b-_1.cs)]\n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingCollection#1](~/add/codesnippet/visualbasic/3c1a773a-29ff-4775-932b-_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (string sourceColumn, string destinationColumn);
    parameters:
    - id: sourceColumn
      type: System.String
      description: "Nazwa kolumny źródłowej w źródle danych."
    - id: destinationColumn
      type: System.String
      description: "Nazwa kolumny docelowej tabeli docelowej."
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "Mapowanie kolumny."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear
  id: Clear
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: SqlBulkCopyColumnMappingCollection.Clear()
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Czyści zawartość kolekcji."
  remarks: "Clear — metoda jest najczęściej używane w przypadku użycia pojedynczego <xref:System.Data.SqlClient.SqlBulkCopy>wystąpienia przetworzyć więcej niż jedną operację kopiowania zbiorczego.</xref:System.Data.SqlClient.SqlBulkCopy> W przypadku utworzenia mapowania kolumn dla jednego kopiowania masowego, należy wyczyścić <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection>po <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>— Metoda i przed przetworzeniem dalej kopiowania zbiorczego.</xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> </xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection>       Wykonanie kilku kopii zbiorczego korzystającej z tego samego <xref:System.Data.SqlClient.SqlBulkCopy>zwykle jest bardziej efektywne z punktu widzenia wydajności niż przy użyciu oddzielnego wystąpienia <xref:System.Data.SqlClient.SqlBulkCopy>dla każdej operacji.</xref:System.Data.SqlClient.SqlBulkCopy> </xref:System.Data.SqlClient.SqlBulkCopy>"
  example:
  - "The following example performs two bulk copy operations. The first operation copies sales order header information, and the second copies sales order details. Although not strictly necessary in this example (because the ordinal positions of the source and destination columns do match), the example defines column mappings for each bulk copy operation. The Clear method must be used after the first bulk copy is performed and before the next bulk copy's column mappings are defined.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingOrdersDetails#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._19_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingOrdersDetails#1](~/add/codesnippet/csharp/m-system.data.sqlclient._19_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  id: Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Contains(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Contains(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(SqlBulkCopyColumnMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera wartość wskazującą, czy określonej <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> obiekt nie istnieje w kolekcji."
  syntax:
    content: public bool Contains (System.Data.SqlClient.SqlBulkCopyColumnMapping value);
    parameters:
    - id: value
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "Prawidłowy <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> obiektu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określona mapowanie istnieje w kolekcji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)
  id: CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: CopyTo(SqlBulkCopyColumnMapping[],Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.CopyTo(SqlBulkCopyColumnMapping[],Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(SqlBulkCopyColumnMapping[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kopiuje elementy <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&quot;> </xref> do tablicy <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> elementów, zaczynając od określonego indeksu."
  syntax:
    content: public void CopyTo (System.Data.SqlClient.SqlBulkCopyColumnMapping[] array, int index);
    parameters:
    - id: array
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping[]
      description: "Jednowymiarowa <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> array, który jest miejscem docelowym elementów kopiowanych z <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&quot;> </xref>. Tablica musi mieć indeksowania liczony od zera."
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w `array` od rozpoczyna się kopiowanie które."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  id: IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: IndexOf(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.IndexOf(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(SqlBulkCopyColumnMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera indeks określonego <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> obiektu."
  syntax:
    content: public int IndexOf (System.Data.SqlClient.SqlBulkCopyColumnMapping value);
    parameters:
    - id: value
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "<xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> Obiektu do wyszukania."
    return:
      type: System.Int32
      description: "Liczony od zera indeks mapowania kolumn lub -1, jeśli w kolekcji nie odnaleziono mapowania kolumn."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)
  id: Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Insert(Int32,SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Insert(Int32,SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(Int32,SqlBulkCopyColumnMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wstaw nowy <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> w określonym indeksie."
  syntax:
    content: public void Insert (int index, System.Data.SqlClient.SqlBulkCopyColumnMapping value);
    parameters:
    - id: index
      type: System.Int32
      description: "Wartość całkowitą typu lokalizacji w ramach <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&quot;> </xref> w której mają zostać wstawione nowe <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref>."
    - id: value
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "<xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref>obiekt ma zostać wstawiony w kolekcji."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.Item(Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> obiektu pod określonym indeksem."
  syntax:
    content: public System.Data.SqlClient.SqlBulkCopyColumnMapping this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> można znaleźć."
    return:
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "A <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref> object."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  id: Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: Remove(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Remove(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(SqlBulkCopyColumnMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Usuwa określoną <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> element z <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&quot;> </xref>."
  remarks: "Metoda usuwania jest najczęściej używane w przypadku użycia pojedynczego <xref:System.Data.SqlClient.SqlBulkCopy>wystąpienia przetworzyć więcej niż jedną operację kopiowania zbiorczego.</xref:System.Data.SqlClient.SqlBulkCopy> W przypadku utworzenia mapowania kolumn dla jednego kopiowania masowego, należy usunąć mapowania, które nie mają już zastosowania po <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>Metoda jest wywoływane i przed zdefiniowaniem mapowania dla następnego kopiowania zbiorczego.</xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> Całą kolekcję można wyczyścić za pomocą <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A>metody lub oddzielnie za pomocą metody usuwania mapowania Usuń lub <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A>metody.</xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A> </xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A>       Wykonanie kilku kopii zbiorczego korzystającej z tego samego <xref:System.Data.SqlClient.SqlBulkCopy>zwykle jest bardziej efektywne z punktu widzenia wydajności niż przy użyciu oddzielnego wystąpienia <xref:System.Data.SqlClient.SqlBulkCopy>dla każdej operacji.</xref:System.Data.SqlClient.SqlBulkCopy> </xref:System.Data.SqlClient.SqlBulkCopy>"
  example:
  - "The following example performs two bulk copy operations. The first operation copies sales order header information, and the second copies sales order details. Although not strictly necessary in this example (because the ordinal positions of the source and destination columns do match), the example defines column mappings for each bulk copy operation. Both bulk copies include a mapping for the **SalesOrderID**, so rather than clearing the entire collection between bulk copy operations, the example removes all mappings except for the **SalesOrderID** mapping and then adds the appropriate mappings for the second bulk copy operation.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingRemove#1](~/add/codesnippet/visualbasic/8b01386c-32fb-4d89-92c6-_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingRemove#1](~/add/codesnippet/csharp/8b01386c-32fb-4d89-92c6-_1.cs)]"
  syntax:
    content: public void Remove (System.Data.SqlClient.SqlBulkCopyColumnMapping value);
    parameters:
    - id: value
      type: System.Data.SqlClient.SqlBulkCopyColumnMapping
      description: "<xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;></xref>obiekt ma zostać usunięty z kolekcji."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.RemoveAt(Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Usuwa mapowanie pod określonym indeksem z kolekcji."
  remarks: "Metoda Element RemoveAt jest najczęściej używane w przypadku użycia pojedynczego <xref:System.Data.SqlClient.SqlBulkCopy>wystąpienia przetworzyć więcej niż jedną operację kopiowania zbiorczego.</xref:System.Data.SqlClient.SqlBulkCopy> W przypadku utworzenia mapowania kolumn dla jednego kopiowania masowego, należy usunąć mapowania, które nie mają już zastosowania po <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>Metoda jest wywoływane i przed zdefiniowaniem mapowania dla następnego kopiowania zbiorczego.</xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> Całą kolekcję można wyczyścić za pomocą <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A>metody lub Usuń mapowanie oddzielnie, używając <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A>metody lub Element RemoveAt.</xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A> </xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A>       Wykonanie kilku kopii zbiorczego korzystającej z tego samego <xref:System.Data.SqlClient.SqlBulkCopy>zwykle jest bardziej efektywne z punktu widzenia wydajności niż przy użyciu oddzielnego wystąpienia <xref:System.Data.SqlClient.SqlBulkCopy>dla każdej operacji.</xref:System.Data.SqlClient.SqlBulkCopy> </xref:System.Data.SqlClient.SqlBulkCopy>"
  example:
  - "The following example performs two bulk copy operations. The first operation copies sales order header information, and the second copies sales order details. Although not strictly necessary in this example (because the ordinal positions of the source and destination columns do match), the example defines column mappings for each bulk copy operation. Both bulk copies include a mapping for the **SalesOrderID**, so rather than clearing the entire collection between bulk copy operations, the example removes all mappings except for the **SalesOrderID** mapping and then adds the appropriate mappings for the second bulk copy operation.  \n  \n> [!IMPORTANT]\n>  This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/add/includes/ajax-current-ext-md.md). This code is provided to demonstrate the syntax for using **SqlBulkCopy** only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.  \n  \n [!code-vb[DataWorks SqlBulkCopy.ColumnMappingRemoveAt#1](~/add/codesnippet/visualbasic/69041426-a8e9-44a0-bd07-_1.vb)]\n [!code-cs[DataWorks SqlBulkCopy.ColumnMappingRemoveAt#1](~/add/codesnippet/csharp/69041426-a8e9-44a0-bd07-_1.cs)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks <xref href=&quot;System.Data.SqlClient.SqlBulkCopyColumnMapping&quot;> </xref> obiekt ma zostać usunięty z kolekcji."
  overload: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.CollectionBase
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Add(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(SqlBulkCopyColumnMapping)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMapping
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlBulkCopyColumnMapping
  nameWithType: SqlBulkCopyColumnMapping
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMapping
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Add(Int32,Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(Int32,Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Add(Int32,String)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(Int32,String)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(Int32,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Add(String,Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(String,Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(String,Int32)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: SqlBulkCopyColumnMappingCollection.Add(String,String)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(String,String)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Clear()
  nameWithType: SqlBulkCopyColumnMappingCollection.Clear()
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear()
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Contains(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Contains(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(SqlBulkCopyColumnMapping)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: CopyTo(SqlBulkCopyColumnMapping[],Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.CopyTo(SqlBulkCopyColumnMapping[],Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(SqlBulkCopyColumnMapping[],Int32)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMapping[]
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlBulkCopyColumnMapping
  nameWithType: SqlBulkCopyColumnMapping
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMapping[]
  spec.csharp:
  - uid: System.Data.SqlClient.SqlBulkCopyColumnMapping
    name: SqlBulkCopyColumnMapping
    nameWithType: SqlBulkCopyColumnMapping
    fullName: SqlBulkCopyColumnMapping[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: IndexOf(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.IndexOf(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(SqlBulkCopyColumnMapping)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Insert(Int32,SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Insert(Int32,SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(Int32,SqlBulkCopyColumnMapping)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.Item(Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(Int32)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Remove(SqlBulkCopyColumnMapping)
  nameWithType: SqlBulkCopyColumnMappingCollection.Remove(SqlBulkCopyColumnMapping)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(SqlBulkCopyColumnMapping)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: SqlBulkCopyColumnMappingCollection.RemoveAt(Int32)
  fullName: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(Int32)
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Add
  nameWithType: SqlBulkCopyColumnMappingCollection.Add
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Clear
  nameWithType: SqlBulkCopyColumnMappingCollection.Clear
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Contains
  nameWithType: SqlBulkCopyColumnMappingCollection.Contains
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: CopyTo
  nameWithType: SqlBulkCopyColumnMappingCollection.CopyTo
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: IndexOf
  nameWithType: SqlBulkCopyColumnMappingCollection.IndexOf
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Insert
  nameWithType: SqlBulkCopyColumnMappingCollection.Insert
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Item
  nameWithType: SqlBulkCopyColumnMappingCollection.Item
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: Remove
  nameWithType: SqlBulkCopyColumnMappingCollection.Remove
- uid: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt*
  parent: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: SqlBulkCopyColumnMappingCollection.RemoveAt
