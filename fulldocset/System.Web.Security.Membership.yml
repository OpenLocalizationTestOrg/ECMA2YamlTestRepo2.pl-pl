### YamlMime:ManagedReference
items:
- uid: System.Web.Security.Membership
  id: Membership
  children:
  - System.Web.Security.Membership.ApplicationName
  - System.Web.Security.Membership.CreateUser(System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.DeleteUser(System.String)
  - System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.Membership.EnablePasswordReset
  - System.Web.Security.Membership.EnablePasswordRetrieval
  - System.Web.Security.Membership.FindUsersByEmail(System.String)
  - System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.FindUsersByName(System.String)
  - System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  - System.Web.Security.Membership.GetAllUsers
  - System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GetNumberOfUsersOnline
  - System.Web.Security.Membership.GetUser
  - System.Web.Security.Membership.GetUser(System.Boolean)
  - System.Web.Security.Membership.GetUser(System.Object)
  - System.Web.Security.Membership.GetUser(System.String)
  - System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  - System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  - System.Web.Security.Membership.GetUserNameByEmail(System.String)
  - System.Web.Security.Membership.HashAlgorithmType
  - System.Web.Security.Membership.MaxInvalidPasswordAttempts
  - System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.Membership.MinRequiredPasswordLength
  - System.Web.Security.Membership.PasswordAttemptWindow
  - System.Web.Security.Membership.PasswordStrengthRegularExpression
  - System.Web.Security.Membership.Provider
  - System.Web.Security.Membership.Providers
  - System.Web.Security.Membership.RequiresQuestionAndAnswer
  - System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.Membership.UserIsOnlineTimeWindow
  - System.Web.Security.Membership.ValidateUser(System.String,System.String)
  - System.Web.Security.Membership.ValidatingPassword
  langs:
  - csharp
  name: Membership
  nameWithType: Membership
  fullName: System.Web.Security.Membership
  type: Class
  summary: "Weryfikuje poświadczenia użytkownika i zarządza ustawieniami użytkownika. Ta klasa nie może być dziedziczona."
  remarks: "Klasa członkostwa jest używana w aplikacjach ASP.NET do zweryfikowania poświadczeń użytkowników i Zarządzaj ustawieniami użytkownika, takie jak hasła i adresy e-mail. Klasy członkostwa można samodzielnie lub w połączeniu z <xref:System.Web.Security.FormsAuthentication>do utworzenia całego systemu w celu uwierzytelniania użytkowników witryny lub aplikacji sieci Web.</xref:System.Web.Security.FormsAuthentication> <xref:System.Web.UI.WebControls.Login>Kontroli hermetyzuje klasy członkostwa, aby zapewnić wygodny mechanizm Walidacja użytkowników.</xref:System.Web.UI.WebControls.Login>      > [!NOTE] > Jeśli nie masz doświadczenia z funkcjami członkostwa programu ASP.NET, zobacz [wprowadzenie do członkostwa](~/add/includes/ajax-current-ext-md.md) przed kontynuowaniem. Aby uzyskać listę innych tematów dotyczących członkostwa, zobacz [Zarządzanie użytkownikami przy użyciu członkostwa](~/add/includes/ajax-current-ext-md.md).       Klasa członkostwa udostępnia urządzenia do:-tworzenie nowych użytkowników.      -Informacje są przechowywane członkostwa (nazwy użytkowników, hasła, adresy e-mail i obsługi danych) w programie Microsoft SQL Server lub w magazynie danych alternatywnych.      — Uwierzytelnianie użytkowników, którzy witrynę. Użytkownicy mogą być uwierzytelniani programowo, albo użyć <xref:System.Web.UI.WebControls.Login>formantu można utworzyć systemu pełną uwierzytelniania, która wymaga niewielkiego lub żadnego kodu.</xref:System.Web.UI.WebControls.Login>      -Zarządzanie hasła, które obejmuje tworzenie, zmienianie, pobieranie i resetowania ich i tak dalej. Opcjonalnie można skonfigurować członkostwa ASP.NET wymaga pytanie dotyczące hasła i odpowiedzi do uwierzytelniania żądań resetowania lub pobieranie hasła dla użytkowników, którzy pamiętasz swojego hasła.       Mimo że członkostwa ASP.NET jest funkcją autonomiczny ASP.NET dla uwierzytelniania, mogą można zintegrować z zarządzania rolami ASP.NET do świadczenia usług autoryzacji dla witryny. Można również zintegrować członkostwa użytkownika ASP.NET <xref:System.Web.Profile>zapewnienie dostosowanie specyficzne dla aplikacji, które można dostosować do poszczególnych użytkowników.</xref:System.Web.Profile> Aby uzyskać więcej informacji, zobacz [opis roli zarządzania](~/add/includes/ajax-current-ext-md.md) i [Przegląd właściwości profilu platformy ASP.NET](~/add/includes/ajax-current-ext-md.md).       Klasa członkowska zależy od dostawców członkostwa do komunikowania się ze źródłem danych. Zawiera programu .NET Framework <xref:System.Web.Security.SqlMembershipProvider>, która przechowuje informacje o użytkowniku w bazie danych programu Microsoft SQL Server i <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, co pozwala przechowywać informacje użytkownika na serwerze usługi Active Directory lub tryb aplikacji usługi Active Directory (ADAM).</xref:System.Web.Security.ActiveDirectoryMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider> Można też wdrożyć dostawcę członkostwa niestandardowych do komunikowania się ze źródłem danych alternatywnych, które mogą być używane przez klasę członkostwa. Dostawców niestandardowych członkostwa dziedziczą z <xref:System.Web.Security.MembershipProvider>klasy abstrakcyjnej.</xref:System.Web.Security.MembershipProvider> Aby uzyskać więcej informacji, zobacz [implementowanie dostawcy członkostwa](~/add/includes/ajax-current-ext-md.md).       Domyślnie członkostwo ASP.NET jest włączona dla wszystkich aplikacji ASP.NET. Domyślnym dostawcą członkostwa jest <xref:System.Web.Security.SqlMembershipProvider>i jest określony w konfiguracji komputera o nazwie `AspNetSqlProvider`.</xref:System.Web.Security.SqlMembershipProvider> Domyślne wystąpienie elementu <xref:System.Web.Security.SqlMembershipProvider>jest skonfigurowany do nawiązania połączenia lokalnego wystąpienia programu Microsoft SQL Server.</xref:System.Web.Security.SqlMembershipProvider>       Można zmodyfikować ustawienia domyślne, aby określić <xref:System.Web.Security.SqlMembershipProvider>innych niż `AspNetSqlProvider` wystąpienia jako domyślnego dostawcę, lub określ wystąpienie dostawcy niestandardowego jako domyślnego dostawcę dla aplikacji ASP.NET przy użyciu pliku Web.config.</xref:System.Web.Security.SqlMembershipProvider> Konfiguracja członkostwa programu ASP.NET można określić dla aplikacji sieci Web przy użyciu sekcji konfiguracji w pliku Web.config. Można użyć `providers` podsekcji sekcji, aby określić inną niż dostawcy domyślnego dostawcę członkostwa. Na przykład poniższa sekcja usuwa domyślnych dostawców członkostwa z bieżącej konfiguracji aplikacji i dodaje nowego dostawcę o nazwie `SqlProvider` które nawiązuje połączenie z wystąpieniem programu SQL Server o nazwie `AspSqlServer`.      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Security.SqlMembershipProvider&quot;             connectionStringName=&quot;SqlServices&quot;             enablePasswordRetrieval=&quot;false&quot;             enablePasswordReset=&quot;true&quot;             requiresQuestionAndAnswer=&quot;true&quot;             passwordFormat=&quot;Hashed&quot;             applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  The ASP.NET login controls (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, and <xref:System.Web.UI.WebControls.PasswordRecovery>) encapsulate virtually all of the logic required to prompt users for credentials and validate the credentials in the membership system and can be used in place of programmatic checking using the Membership class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.me_1.aspx)]"
  syntax:
    content: public static class Membership
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera lub ustawia nazwę aplikacji."
  remarks: "Właściwość ApplicationName służy do identyfikowania użytkowników specyficzne dla aplikacji. Oznacza to, że ta sama nazwa użytkownika może istnieć w bazie danych dla wielu aplikacji ASP.NET, które określają różne ApplicationName. Dzięki temu wiele aplikacji może używać tej samej bazy danych do przechowywania informacji o użytkowniku bez powodowania konfliktów nazw zduplikowanego użytkownika. Alternatywnie wiele aplikacji programu ASP.NET można użyć tej samej bazy danych użytkowników przez określenie tej samej ApplicationName. Właściwość ApplicationName można ustawić programowo i deklaratywnie w konfiguracji dla aplikacji sieci Web.      > [!CAUTION] > Ponieważ domyślnego pojedynczego wystąpienia dostawcy członkostwa jest używana dla wszystkich żądań obsłużonych przez <xref:System.Web.HttpApplication>obiektu, może mieć wiele żądań wykonywanych równocześnie i ustawiania wartości właściwości ApplicationName.</xref:System.Web.HttpApplication> Właściwość ApplicationName nie jest wielowątkowość dla wielu operacji zapisu, a zmiana wartości właściwości ApplicationName może spowodować nieoczekiwane zachowanie dla wielu użytkowników aplikacji. Zaleca się unikać pisania kodu, który umożliwia użytkownikom można ustawić właściwości ApplicationName, chyba że użytkownik musi. Przykładem aplikacji, których ustawienia właściwości ApplicationName mogą być wymagane jest administracyjne aplikacji, która zarządza danych o członkostwie dla wielu aplikacji. Takiej aplikacji powinna być aplikacją pojedynczego użytkownika, a nie aplikacji sieci Web."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use a <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Nazwa aplikacji."
  overload: System.Web.Security.Membership.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  id: CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Dodaje nowego użytkownika do magazynu danych."
  remarks: "Tworzenie użytkownika dodaje nowego użytkownika do magazynu danych i zwraca <xref:System.Web.Security.MembershipUser>obiektu dla nowo utworzonego użytkownika.</xref:System.Web.Security.MembershipUser> Jeśli tworzenie użytkownika nie powiedzie się, <xref:System.Web.Security.MembershipCreateUserException>jest generowany.</xref:System.Web.Security.MembershipCreateUserException> Możesz pobrać <xref:System.Web.Security.MembershipCreateStatus>wartość z <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>Właściwość <xref:System.Web.Security.MembershipCreateUserException>wskazujące, dlaczego Tworzenie użytkownika nie powiodło się.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       Po utworzeniu użytkownika członkostwa i zawierają odwołanie do <xref:System.Web.Security.MembershipUser>obiekt dla tego użytkownika, można zmodyfikować ustawienia dla tego użytkownika z <xref:System.Web.Security.MembershipUser>metody publiczne, takie jak <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>dla aplikacji, gdzie <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>jest `true`, lub przez ustawienie wartości właściwości <xref:System.Web.Security.MembershipUser>obiektu i przekazywanie ich do <xref:System.Web.Security.Membership.UpdateUser%2A>— Metoda.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Jeśli użytkownik już istnieje w źródle danych dla aplikacji, możesz uzyskać <xref:System.Web.Security.MembershipUser>obiektu dla istniejącego użytkownika z <xref:System.Web.Security.Membership.GetUser%2A>metody.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       <xref:System.Web.Security.SqlMembershipProvider>Udostępnia opcję, aby wymagać unikatowy adres e-mail dla każdego użytkownika.</xref:System.Web.Security.SqlMembershipProvider> Jeśli <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>właściwość jest `true`, należy użyć jednego z przeciążeń Tworzenie użytkownika, które umożliwia określenie adresu e-mail użytkownika tworzona.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> W przeciwnym razie <xref:System.Web.Security.MembershipCreateUserException>będą zgłaszane.</xref:System.Web.Security.MembershipCreateUserException>       Spacje początkowe i końcowe są usuwane ze wszystkich wartości parametru."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.Membership#2](~/add/codesnippet/csharp/m-system.web.security.me_0_1.aspx)]\n [!code-vb[System.Web.Security.Membership#2](~/add/codesnippet/visualbasic/m-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika dla nowego użytkownika."
    - id: password
      type: System.String
      description: "Hasło dla nowego użytkownika."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>obiektu dla nowo utworzonego użytkownika.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "Użytkownik nie został utworzony. Sprawdź <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>Właściwość <xref:System.Web.Security.MembershipCreateStatus>wartość.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  id: CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Dodaje nowego użytkownika z na określony adres e-mail do magazynu danych."
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A>dodaje nowego użytkownika do magazynu danych i zwraca <xref:System.Web.Security.MembershipUser>obiektu dla nowo utworzonego użytkownika.</xref:System.Web.Security.MembershipUser></xref:System.Web.Security.Membership.CreateUser%2A> Jeśli tworzenie użytkownika nie powiedzie się, <xref:System.Web.Security.MembershipCreateUserException>jest generowany.</xref:System.Web.Security.MembershipCreateUserException> Możesz pobrać <xref:System.Web.Security.MembershipCreateStatus>wartość z <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>Właściwość <xref:System.Web.Security.MembershipCreateUserException>wskazujące, dlaczego Tworzenie użytkownika nie powiodło się.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       Po utworzeniu użytkownika członkostwa i zawierają odwołanie do <xref:System.Web.Security.MembershipUser>obiekt dla tego użytkownika, można zmodyfikować ustawienia dla tego użytkownika z <xref:System.Web.Security.MembershipUser>metody publiczne, takie jak <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>dla aplikacji, gdzie <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>jest `true`, lub przez ustawienie wartości właściwości <xref:System.Web.Security.MembershipUser>obiektu i przekazywanie ich do <xref:System.Web.Security.Membership.UpdateUser%2A>— Metoda.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Jeśli użytkownik już istnieje w źródle danych dla aplikacji, możesz uzyskać <xref:System.Web.Security.MembershipUser>obiektu dla istniejącego użytkownika z <xref:System.Web.Security.Membership.GetUser%2A>metody.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Spacje początkowe i końcowe są usuwane ze wszystkich wartości parametru."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#1](~/add/codesnippet/visualbasic/8cf35595-ec0c-4c08-b671-_1.aspx)]\n [!code-cs[System.Web.Security.Membership#1](~/add/codesnippet/csharp/8cf35595-ec0c-4c08-b671-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika dla nowego użytkownika."
    - id: password
      type: System.String
      description: "Hasło dla nowego użytkownika."
    - id: email
      type: System.String
      description: "Adres e-mail dla nowego użytkownika."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>obiektu dla nowo utworzonego użytkownika.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "Użytkownik nie został utworzony. Sprawdź <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>Właściwość <xref:System.Web.Security.MembershipCreateStatus>wartość.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Dodaje nowego użytkownika z określonymi wartościami właściwości do magazynu danych i zwraca parametr stanu wskazujący, że użytkownik został pomyślnie utworzony lub powód utworzenie użytkownika zakończone niepowodzeniem."
  remarks: "Tworzenie użytkownika dodaje nowego użytkownika do magazynu danych i zwraca <xref:System.Web.Security.MembershipUser>obiektu dla nowo utworzonego użytkownika.</xref:System.Web.Security.MembershipUser> Tworzenie użytkownika nie powiedzie się, można przywrócić <xref:System.Web.Security.MembershipCreateStatus>wartość z `status` parametr wyjściowy, który wskazuje, dlaczego Tworzenie użytkownika nie powiodło się.</xref:System.Web.Security.MembershipCreateStatus>       Tworzenie użytkownika metoda zwróci `null` Jeśli `password` jest ciągiem pustym lub `null`, `username` jest pustym ciągiem lub `null` lub przecinka (,), zawiera `passwordQuestion` nie jest `null` i jest ciągiem pustym lub `passwordAnswer` nie jest `null` i zawiera pusty ciąg.       Po utworzeniu użytkownika członkostwa i zawierają odwołanie do <xref:System.Web.Security.MembershipUser>obiekt dla tego użytkownika, można zmodyfikować ustawienia dla tego użytkownika z <xref:System.Web.Security.MembershipUser>metody publiczne i przez ustawienie wartości właściwości <xref:System.Web.Security.MembershipUser>obiektu, a następnie przekazywanie <xref:System.Web.Security.MembershipUser>do obiektu <xref:System.Web.Security.Membership.UpdateUser%2A>metody.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Jeśli użytkownik już istnieje w źródle danych dla aplikacji, możesz uzyskać <xref:System.Web.Security.MembershipUser>obiektu dla istniejącego użytkownika z <xref:System.Web.Security.Membership.GetUser%2A>metody.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Spacje początkowe i końcowe są usuwane ze wszystkich wartości parametru ciągu."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/baa4c01c-297e-4ec6-a9d9-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/baa4c01c-297e-4ec6-a9d9-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika dla nowego użytkownika."
    - id: password
      type: System.String
      description: "Hasło dla nowego użytkownika."
    - id: email
      type: System.String
      description: "Adres e-mail dla nowego użytkownika."
    - id: passwordQuestion
      type: System.String
      description: "Wartość pytanie dotyczące hasła dla użytkownika członkostwa."
    - id: passwordAnswer
      type: System.String
      description: "Wartość odpowiedzi do hasła dla użytkownika członkostwa."
    - id: isApproved
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy nowy użytkownik jest zatwierdzony do logowania."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "A <xref:System.Web.Security.MembershipCreateStatus>wskazującą, czy użytkownik został pomyślnie utworzony lub powód tworzenie nie powiodło się.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>obiektu dla nowo utworzonego użytkownika.</xref:System.Web.Security.MembershipUser> Jeśli nie utworzono użytkownika, ta metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Dodaje nowego użytkownika z określonymi wartościami właściwości i unikatowym identyfikatorem do magazynu danych i zwraca parametr stanu wskazujący, że użytkownik został pomyślnie utworzony lub powód utworzenie użytkownika zakończone niepowodzeniem."
  remarks: "Tworzenie użytkownika dodaje nowego użytkownika do magazynu danych i zwraca <xref:System.Web.Security.MembershipUser>obiektu dla nowo utworzonego użytkownika.</xref:System.Web.Security.MembershipUser> Tworzenie użytkownika nie powiedzie się, można przywrócić <xref:System.Web.Security.MembershipCreateStatus>wartość z `status` parametr wyjściowy, który wskazuje, dlaczego Tworzenie użytkownika nie powiodło się.</xref:System.Web.Security.MembershipCreateStatus> Unikatowy identyfikator dla użytkownika, takie jak wartości klucza podstawowego dla bazy danych, można określić za pomocą `providerUserKey` parametru.       Tworzenie użytkownika metoda zwróci `null` Jeśli `password` jest ciągiem pustym lub `null`, `username` jest ciągiem pustym lub `null` lub zawiera przecinka (,), `passwordQuestion` nie jest `null` i zawiera pusty ciąg, lub `passwordAnswer` nie jest `null` i zawiera pusty ciąg.       Po utworzeniu użytkownika członkostwa i zawierają odwołanie do <xref:System.Web.Security.MembershipUser>obiekt dla tego użytkownika, można zmodyfikować ustawienia dla tego użytkownika z <xref:System.Web.Security.MembershipUser>metody publiczne i przez ustawienie wartości właściwości <xref:System.Web.Security.MembershipUser>obiektu, a następnie przekazywanie <xref:System.Web.Security.MembershipUser>do obiektu <xref:System.Web.Security.Membership.UpdateUser%2A>metody.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Jeśli użytkownik już istnieje w źródle danych dla aplikacji, możesz uzyskać <xref:System.Web.Security.MembershipUser>obiektu dla istniejącego użytkownika z <xref:System.Web.Security.Membership.GetUser%2A>metody.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Spacje początkowe i końcowe są usuwane ze wszystkich wartości parametru ciągu."
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika dla nowego użytkownika."
    - id: password
      type: System.String
      description: "Hasło dla nowego użytkownika."
    - id: email
      type: System.String
      description: "Adres e-mail dla nowego użytkownika."
    - id: passwordQuestion
      type: System.String
      description: "Wartość pytanie dotyczące hasła dla użytkownika członkostwa."
    - id: passwordAnswer
      type: System.String
      description: "Wartość odpowiedzi do hasła dla użytkownika członkostwa."
    - id: isApproved
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy nowy użytkownik jest zatwierdzony do logowania."
    - id: providerUserKey
      type: System.Object
      description: "Identyfikator użytkownika dla użytkownika, które mają być przechowywane w magazynie danych członkostwa."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "A <xref:System.Web.Security.MembershipCreateStatus>wskazujący, że użytkownik został pomyślnie utworzony lub powód niepowodzenia utworzenia.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>obiektu dla nowo utworzonego użytkownika.</xref:System.Web.Security.MembershipUser> Jeśli nie utworzono użytkownika, ta metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  id: DeleteUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Usunięcie użytkownika i wszystkie dane użytkownika powiązanych z bazy danych."
  remarks: "Dane użytkownika przechowywane w bazie danych <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, lub <xref:System.Web.UI.WebControls.WebParts.WebPart>personalizacji są także usuwane, gdy używasz <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, i <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>obiekty do przechowywania danych.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-vb[System.Web.Security.Membership#8](~/add/codesnippet/visualbasic/m-system.web.security.me_11_1.aspx)]\n [!code-cs[System.Web.Security.Membership#8](~/add/codesnippet/csharp/m-system.web.security.me_11_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika do usunięcia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli użytkownik został usunięty; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>to ciąg pusty lub zawiera przecinka (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>jest<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Usuwa użytkownika z bazy danych."
  remarks: "Użytkownicy zostali usunięci z bazy danych są usuwane tylko ze skonfigurowanego `applicationName`.       Jeśli `deleteAllRelatedData` jest `true`, dane użytkownika przechowywane w bazie danych <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, lub <xref:System.Web.UI.WebControls.WebParts.WebPart>personalizacji są także usuwane, gdy używasz <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, i <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>obiekty do przechowywania danych.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/m-system.web.security.me_12_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/m-system.web.security.me_12_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika do usunięcia."
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby usunąć dane powiązane z użytkownikiem z bazy danych. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> pozostawić powiązane z użytkownikiem w bazie danych."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli użytkownik został usunięty; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>to ciąg pusty lub zawiera przecinka (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy bieżącego dostawcy członkostwa jest skonfigurowane i umożliwiają użytkownikom na resetowanie haseł."
  remarks: "Hasło jest to możliwość członkostwa ASP.NET zamienić bieżące hasło hasło dla nazwy użytkownika z nowej, losowo wygenerowany, gdy użytkownik zapomniał swoje hasło lub bieżące hasło nie jest już prawidłowy. Jest to szczególnie przydatne, gdy ustawiono format hasła <xref:System.Web.Security.MembershipPasswordFormat>, jak użytkownicy, nie można pobrać wartości skrótu hasła.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordReset is `true`, then resets a user's password and returns the new, automatically generated password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/p-system.web.security.me_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/p-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostawca członkostwa obsługuje resetowanie hasła; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy bieżący dostawcy członkostwa jest skonfigurowany do Zezwalaj użytkownikom na odzyskiwanie haseł."
  remarks: "Jeśli parametr EnablePasswordRetrieval ma `false`, źródłowy Dostawca członkostwa może zgłaszać <xref:System.Web.HttpException>.</xref:System.Web.HttpException>       Dostawców, które są dołączone do programu .NET Framework obsługuje wiele formatów hasło, aby zwiększyć bezpieczeństwo hasła. Jeśli ustawiono format hasła <xref:System.Web.Security.MembershipPasswordFormat>, a następnie użytkownicy nie będą mogli pobrać istniejącego hasła z bazy danych.</xref:System.Web.Security.MembershipPasswordFormat> <xref:System.Web.Security.MembershipPasswordFormat>Format hasła zapewnia jednokierunkowe kodowanie wartości hasła.</xref:System.Web.Security.MembershipPasswordFormat> Hasła są &quot;mieszany&quot; i porównaniu z wartościami przechowywanymi w bazie danych do uwierzytelniania. Wartości &quot;Skrótem&quot; nie może być zakodowane nie można pobrać oryginalnej wartości hasła. Aby uzyskać więcej informacji zobacz <xref:System.Web.Security.MembershipPasswordFormat>.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordRetrieval is `true`, then retrieves the password for a specified user name and sends it to the e-mail address for the specified user.  \n  \n> [!IMPORTANT]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n>   \n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/p-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/p-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostawca członkostwa obsługuje odzyskiwanie haseł; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  id: FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera kolekcję użytkowników członkostwa, której adres e-mail zawiera podany adres e-mail do dopasowania."
  remarks: "FindUsersByEmail zwraca listę użytkowników członkostwa, jeśli adres e-mail odpowiada podane `emailToMatch` dla skonfigurowanego `applicationName`.       <xref:System.Web.Security.SqlMembershipProvider>Wykonuje wyszukiwanie przy użyciu klauzuli LIKE przed `emailToMatch` parametru.</xref:System.Web.Security.SqlMembershipProvider> Żadnych symboli wieloznacznych, które są obsługiwane przez program SQL Server w jak klauzule mogą być używane w `emailToMatch` wartość parametru."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#9](~/add/codesnippet/visualbasic/m-system.web.security.me_10_1.aspx)]\n [!code-cs[System.Web.Security.Membership#9](~/add/codesnippet/csharp/m-system.web.security.me_10_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "Adres e-mail do wyszukania."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>zawiera wszystkich użytkowników odpowiadających <code> emailToMatch </code> parametru.</xref:System.Web.Security.MembershipUserCollection>       Spacje początkowe i końcowe są usuwane z <code> emailToMatch </code> wartość parametru."
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera kolekcję użytkowników członkostwa na stronie danych, gdzie adres e-mail zawiera podany adres e-mail do dopasowania."
  remarks: "FindUsersByEmail zwraca listę użytkowników członkostwa, jeśli adres e-mail odpowiada podane `emailToMatch` dla skonfigurowanego `applicationName`.       <xref:System.Web.Security.SqlMembershipProvider>Wykonuje wyszukiwanie przy użyciu klauzuli LIKE przed `emailToMatch` parametru.</xref:System.Web.Security.SqlMembershipProvider> Żadnych symboli wieloznacznych, które są obsługiwane przez program SQL Server w jak klauzule mogą być używane w `emailToMatch` wartość parametru.       Wyniki zwrócone przez FindUsersByEmail są ograniczone przez `pageIndex` i `pageSize` parametrów. `pageSize` Parametr określa maksymalną liczbę <xref:System.Web.Security.MembershipUser>obiektów do zwrócenia <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> `pageIndex` Strony wyników do zwrócenia, gdzie 0 identyfikuje pierwszej strony, która identyfikuje parametru. `totalRecords` Parametr jest `out` parametr, który ma wartość całkowitą liczbę użytkowników Członkowskich zgodnych `emailToMatch` wartość. Na przykład odnaleziono 13 użytkowników, gdzie `emailToMatch` dopasowaniu części lub całej adres i `pageIndex` wartość to 1 z `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection>zwrócił zawierałoby od szóstego do dziesiątego użytkowników zwrócił.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`może być ustawiona na 13.       Spacje początkowe i końcowe są usuwane z `emailToMatch` wartość parametru."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/1954016c-87a4-4acf-9d54-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/1954016c-87a4-4acf-9d54-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "Adres e-mail do wyszukania."
    - id: pageIndex
      type: System.Int32
      description: "Indeks strony wyników do zwrócenia. `pageIndex`jest liczony od zera."
    - id: pageSize
      type: System.Int32
      description: "Rozmiar strony wyników do zwrócenia."
    - id: totalRecords
      type: System.Int32
      description: "Całkowita liczba zgodnych użytkowników."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>zawiera strona <code> pageSize </code> <xref:System.Web.Security.MembershipUser>obiektów, zaczynając od strony określonej za <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>jest mniejsza od zera.       - lub - <code>pageSize</code> jest mniejszy niż 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  id: FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera kolekcję użytkowników członkostwa, której nazwa użytkownika zawiera nazwę określonego użytkownika do dopasowania."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Zwraca listę użytkowników członkostwa, jeśli nazwa użytkownika odpowiada podane `usernameToMatch` dla skonfigurowanego `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       <xref:System.Web.Security.SqlMembershipProvider>Wykonuje wyszukiwanie przy użyciu klauzuli LIKE przed `usernameToMatch` parametru.</xref:System.Web.Security.SqlMembershipProvider> Żadnych symboli wieloznacznych, które są obsługiwane przez program SQL Server w jak klauzule mogą być używane w `usernameToMatch` wartość parametru.       Spacje początkowe i końcowe są usuwane ze wszystkich wartości parametru."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#10](~/add/codesnippet/visualbasic/m-system.web.security.me_6_1.aspx)]\n [!code-cs[System.Web.Security.Membership#10](~/add/codesnippet/csharp/m-system.web.security.me_6_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "Nazwa użytkownika do wyszukania."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>zawiera wszystkich użytkowników odpowiadających <code> usernameToMatch </code> parametru.</xref:System.Web.Security.MembershipUserCollection>       Spacje początkowe i końcowe są usuwane z <code> usernameToMatch </code> wartość parametru."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera kolekcję użytkowników członkostwa na stronie danych, których nazwa użytkownika zawiera nazwę określonego użytkownika do dopasowania."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Zwraca listę użytkowników członkostwa, jeśli nazwa użytkownika odpowiada podane `usernameToMatch` dla skonfigurowanego `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       <xref:System.Web.Security.SqlMembershipProvider>Wykonuje wyszukiwanie przy użyciu klauzuli LIKE przed `usernameToMatch` parametru.</xref:System.Web.Security.SqlMembershipProvider> Żadnych symboli wieloznacznych, które są obsługiwane przez program SQL Server w jak klauzule mogą być używane w `usernameToMatch` wartość parametru.       Wyniki zwrócone przez FindUsersByName są ograniczone przez `pageIndex` i `pageSize` parametrów. `pageSize` Parametr określa maksymalną liczbę <xref:System.Web.Security.MembershipUser>obiektów do zwrócenia <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> `pageIndex` Strony wyników do zwrócenia, gdzie 0 identyfikuje pierwszej strony, która identyfikuje parametru. `totalRecords` Parametr jest `out` parametr, który ma wartość całkowitą liczbę użytkowników Członkowskich zgodnych `usernameToMatch` wartość. Na przykład odnaleziono 13 użytkowników, gdzie `usernameToMatch` dopasowaniu części lub nazwy wszystkich użytkowników i `pageIndex` wartość to 1 z `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection>zwrócił zawierałoby od szóstego do dziesiątego użytkowników zwrócił.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`może być ustawiona na 13."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/4f01d951-55a8-446c-be57-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/4f01d951-55a8-446c-be57-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "Nazwa użytkownika do wyszukania."
    - id: pageIndex
      type: System.Int32
      description: "Indeks strony wyników do zwrócenia. `pageIndex`jest liczony od zera."
    - id: pageSize
      type: System.Int32
      description: "Rozmiar strony wyników do zwrócenia."
    - id: totalRecords
      type: System.Int32
      description: "Całkowita liczba zgodnych użytkowników."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>zawiera strona <code> pageSize </code> <xref:System.Web.Security.MembershipUser>obiektów, zaczynając od strony określonej za <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>       Spacje początkowe i końcowe są usuwane z <code> usernameToMatch </code> wartość parametru."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>jest pustym ciągiem.       - lub - <code>pageIndex</code> jest mniejsza od zera.       - lub - <code>pageSize</code> jest mniejszy niż 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  id: GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Generuje losowe hasło o określonej długości."
  remarks: "Metoda GeneratePassword służy do generowania losowego hasła i jest najczęściej używana przez <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>Metoda implementowana przez dostawcę członkostwa, aby zresetować hasło dla użytkownika do nowego, tymczasowego hasła.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A>       Wygenerowane hasło zawiera tylko znaki alfanumeryczne i następujących znaków interpunkcyjnych: `!@#$%^&*()_-+=[{]};:<>|./?`. Żadne znaki niedrukowalne lub ukrytego kontroli zostaną uwzględnione w wygenerowanym haśle.      > [!NOTE] > Losowe hasło tworzone przez metodę GeneratePassword nie jest gwarantowana do przekazania wyrażenia regularnego w <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>Właściwości.</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Jednak losowe hasło będzie spełniać kryteria ustanowione przez <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>Właściwości i `numberOfNonAlphanumericCharacters` parametru.</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>"
  example:
  - "The following code example creates a new membership user and uses the GeneratePassword method to initialize the password for the new user to a random value, which is displayed to the user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#5](~/add/codesnippet/visualbasic/m-system.web.security.me_1_1.aspx)]\n [!code-cs[System.Web.Security.Membership#5](~/add/codesnippet/csharp/m-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);
    parameters:
    - id: length
      type: System.Int32
      description: "Liczba znaków w wygenerowanym haśle. Długość musi należeć do zakresu od 1 do 128 znaków."
    - id: numberOfNonAlphanumericCharacters
      type: System.Int32
      description: 'Minimalna liczba znaków niealfanumerycznych (takich jak @, #,!, %, &amp;i tak dalej) w wygenerowanym haśle.'
    return:
      type: System.String
      description: "Losowe hasło o określonej długości."
  overload: System.Web.Security.Membership.GeneratePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>length</code>jest mniejsza niż 1 lub większą niż 128 - lub - <code>numberOfNonAlphanumericCharacters</code> jest mniejsza niż 0 lub większą niż <code>length</code>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers
  id: GetAllUsers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera kolekcję wszystkich użytkowników w bazie danych."
  remarks: "GetAllUsers zwraca informacje dla wszystkich użytkowników członkostwa aplikacji jako kolekcja <xref:System.Web.Security.MembershipUser>obiektów.</xref:System.Web.Security.MembershipUser> Należy zachować ostrożność przy użyciu metody GetAllUsers z bazami danych bardzo dużej liczby użytkowników, jako powstałe w ten sposób <xref:System.Web.Security.MembershipUserCollection>w programu ASP.NET strony może zmniejszyć wydajność aplikacji.</xref:System.Web.Security.MembershipUserCollection>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>z <xref:System.Web.Security.MembershipUser>obiekty reprezentujące wszystkich użytkowników w bazie danych.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera kolekcję wszystkich użytkowników w bazie danych na stronach danych."
  remarks: "Wyniki zwrócone przez GetAllUsers są ograniczone przez `pageIndex` i `pageSize` parametrów. `pageSize` Parametr określa maksymalną liczbę <xref:System.Web.Security.MembershipUser>obiektów do zwrócenia <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> `pageIndex` Strony wyników do zwrócenia, gdzie 0 identyfikuje pierwszej strony, która identyfikuje parametru. `totalRecords` Parametr jest `out` parametr, który ma ustawioną wartość całkowita liczba użytkowników członkostwa dla skonfigurowanego `applicationName`. Na przykład, jeśli istnieją 13 użytkowników dla skonfigurowanego `applicationName`i `pageIndex` wartość to 1 z `pageSize` 5, <xref:System.Web.Security.MembershipUserCollection>zwrócił zawierałoby od szóstego do dziesiątego użytkowników zwrócił.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`może być ustawiona na 13."
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/e84b0b6e-963c-4328-843a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/e84b0b6e-963c-4328-843a-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "Indeks strony wyników do zwrócenia. Użyj wartości 0, aby wskazać pierwszej strony."
    - id: pageSize
      type: System.Int32
      description: "Rozmiar strony wyników do zwrócenia. `pageIndex`jest liczony od zera."
    - id: totalRecords
      type: System.Int32
      description: "Całkowita liczba użytkowników."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>z <xref:System.Web.Security.MembershipUser>obiekty reprezentujące wszystkich użytkowników w bazie danych skonfigurowanego <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>jest mniejsza od zera.       - lub - <code>pageSize</code> jest mniejszy niż 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera liczbę użytkownicy mający obecnie dostęp do aplikacji."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>Zwraca liczbę użytkowników dla bieżącego <xref:System.Web.Security.Membership.ApplicationName%2A>których data ostatniej aktywności jest większa niż bieżący czas minus <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>.</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> </xref:System.Web.Security.Membership.ApplicationName%2A></xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Sygnaturę daty i godziny ostatniej aktywności zostało zaktualizowane do bieżącej daty i czasu, po zweryfikowaniu poświadczeń użytkownika poprzez <xref:System.Web.Security.Membership.ValidateUser%2A>lub <xref:System.Web.Security.Membership.UpdateUser%2A>metody lub po wywołaniu <xref:System.Web.Security.Membership.GetUser%2A>przeciążenia, które przyjmuje żadnych parametrów lub korzystającą `userIsOnline` parametr, aby określić, należy zaktualizować sygnaturę daty i godziny.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.Membership.ValidateUser%2A>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_2_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "Liczba użytkownicy mający obecnie dostęp do aplikacji."
  overload: System.Web.Security.Membership.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser
  id: GetUser
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera informacje ze źródła danych i aktualizuje ostatniej aktywności sygnaturę daty i godziny dla bieżącego użytkownika zalogowanego członkostwa."
  remarks: "GetUser pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser>obiektu wypełniane przy użyciu zwróconych danych.</xref:System.Web.Security.MembershipUser> Jeśli używasz jednego z przeciążeń GetUser, które nie przyjmują `username` parametru GetUser zwraca informacje dla bieżącego użytkownika zalogowanego członkostwa. Bieżący użytkownik zalogowany członkostwa jest identyfikowany przez <xref:System.Security.Principal.IIdentity.Name%2A>użytkownika w bieżącym <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Można również określić, czy ma GetUser zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika pobierane przy użyciu `userIsOnline` parametru. Z <xref:System.Web.Security.Membership.GetUser%2A>przeciążeń, które nie przyjmują `userIsOnline` parametru `GetUser()` niejawnie sygnatury czasowej aktualizacji ostatniej aktywności użytkownika.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`i `GetUser(System.Object)` nie."
  example:
  - "The following code example updates the last-activity date/time stamp for the current logged-on membership user and displays the user name in the ASP.NET page.  \n  \n [!code-cs[System.Web.Security.Membership#3](~/add/codesnippet/csharp/m-system.web.security.me_14_1.aspx)]\n [!code-vb[System.Web.Security.Membership#3](~/add/codesnippet/visualbasic/m-system.web.security.me_14_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>obiekt reprezentujący bieżącego zalogowanego użytkownika.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Użytkownik nie jest aktualnie zalogowany."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  id: GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera informacje ze źródła danych dla bieżącego użytkownika zalogowanego członkostwa. Aktualizacje ostatniej aktywności sygnaturę daty i godziny dla bieżącego użytkownika zalogowanego członkostwa, jeśli określony."
  remarks: "Metoda GetUser pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser>obiektu wypełniane przy użyciu zwróconych danych.</xref:System.Web.Security.MembershipUser> Jeśli używany jest jeden z <xref:System.Web.Security.Membership.GetUser%2A>przeciążeń, które nie przyjmują `username` parametru <xref:System.Web.Security.Membership.GetUser%2A>zwraca informacje o bieżącym użytkowniku zalogowany członkostwa.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> Bieżący użytkownik zalogowany członkostwa jest identyfikowany przez <xref:System.Security.Principal.IIdentity.Name%2A>użytkownika w bieżącym <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Można również określić, czy mają <xref:System.Web.Security.Membership.GetUser%2A>zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika pobierane przy użyciu `userIsOnline` parametru.</xref:System.Web.Security.Membership.GetUser%2A> Z <xref:System.Web.Security.Membership.GetUser%2A>przeciążeń, które nie przyjmują `userIsOnline` parametru `GetUser()` niejawnie sygnatury czasowej aktualizacji ostatniej aktywności użytkownika.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`i `GetUser(System.Object)` nie."
  example:
  - "The following code example displays the user name for the current logged-on membership user in the ASP.NET page without updating the last-activity date/time stamp for the user.  \n  \n [!code-cs[System.Web.Security.Membership#4](~/add/codesnippet/csharp/m-system.web.security.me_9_1.aspx)]\n [!code-vb[System.Web.Security.Membership#4](~/add/codesnippet/visualbasic/m-system.web.security.me_9_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);
    parameters:
    - id: userIsOnline
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, aktualizacje ostatniej aktywności sygnaturę daty i godziny dla określonego użytkownika."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>obiekt reprezentujący bieżącego zalogowanego użytkownika.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Użytkownik nie jest aktualnie zalogowany."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object)
  id: GetUser(System.Object)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera informacje ze źródła danych skojarzone z określonym Unikatowy identyfikator użytkownika członkostwa."
  remarks: "Metoda GetUser pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser>obiektu wypełniane przy użyciu zwróconych danych.</xref:System.Web.Security.MembershipUser> Użytkownik jest identyfikowany przy użyciu Unikatowy identyfikator ze źródła danych, określić przy użyciu `providerUserKey` parametru.       Można również określić, czy mają <xref:System.Web.Security.Membership.GetUser%2A>zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika pobieranych z `userIsOnline` parametru.</xref:System.Web.Security.Membership.GetUser%2A> Z <xref:System.Web.Security.Membership.GetUser%2A>przeciążeń, które nie przyjmują `userIsOnline` parametru `GetUser()` niejawnie sygnatury czasowej aktualizacji ostatniej aktywności użytkownika.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`i `GetUser(System.Object)` nie"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "Identyfikator unikatowy użytkownika z źródła danych członkostwa dla użytkownika."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>obiekt reprezentujący użytkownika skojarzonego z określonym Unikatowy identyfikator.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String)
  id: GetUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera informacje ze źródła danych dla określonego użytkownika członkostwa."
  remarks: "Metoda GetUser pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser>obiektu wypełniane przy użyciu zwróconych danych.</xref:System.Web.Security.MembershipUser> Jeśli używany jest jeden z <xref:System.Web.Security.Membership.GetUser%2A>przeciążeń, które nie przyjmują `username` parametru <xref:System.Web.Security.Membership.GetUser%2A>zwraca informacje o bieżącym użytkowniku zalogowany członkostwa.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> Bieżący użytkownik zalogowany członkostwa jest identyfikowany przez <xref:System.Security.Principal.IIdentity.Name%2A>użytkownika w bieżącym <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Można również określić, czy mają <xref:System.Web.Security.Membership.GetUser%2A>zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika pobieranych z `userIsOnline` parametru.</xref:System.Web.Security.Membership.GetUser%2A> Z <xref:System.Web.Security.Membership.GetUser%2A>przeciążeń, które nie przyjmują `userIsOnline` parametru <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>niejawnie sygnatury czasowej aktualizacji ostatniej aktywności użytkownika.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> GetUser i <xref:System.Web.Security.Membership.GetUser%2A>nie.</xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example uses the GetUser method to return a <xref:System.Web.Security.MembershipUser> object for the current logged-on user and updates the e-mail address for the user.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika do pobrania."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>obiekt reprezentujący określonego użytkownika.</xref:System.Web.Security.MembershipUser> Jeśli <code> username </code> parametru nie odpowiada istniejącego użytkownika, ta metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>zawiera przecinka (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera informacje ze źródła danych skojarzone z określonym Unikatowy identyfikator użytkownika członkostwa. Sygnatury czasowej aktualizacji ostatniej aktywności użytkownika, jeśli określony."
  remarks: "Metoda GetUser pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser>obiektu wypełniane przy użyciu zwróconych danych.</xref:System.Web.Security.MembershipUser> Użytkownik jest identyfikowany o unikatowym identyfikatorze ze źródłem danych określonym w `providerUserKey` parametru."
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "Identyfikator unikatowy użytkownika z źródła danych członkostwa dla użytkownika."
    - id: userIsOnline
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, aktualizacje ostatniej aktywności sygnaturę daty i godziny dla określonego użytkownika."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>obiekt reprezentujący użytkownika skojarzonego z określonym Unikatowy identyfikator.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera informacje ze źródła danych dla określonego użytkownika członkostwa. Sygnatury czasowej aktualizacji ostatniej aktywności użytkownika, jeśli określony."
  remarks: "Metoda GetUser pobiera informacje o użytkowniku ze źródła danych i tworzy <xref:System.Web.Security.MembershipUser>obiektu wypełniane przy użyciu zwróconych danych.</xref:System.Web.Security.MembershipUser>       Jeśli używany jest jeden z <xref:System.Web.Security.Membership.GetUser%2A>przeciążeń, które nie przyjmują `username` parametru <xref:System.Web.Security.Membership.GetUser%2A>zwraca informacje o bieżącym użytkowniku zalogowany członkostwa.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> Bieżący użytkownik zalogowany członkostwa jest identyfikowany przez <xref:System.Security.Principal.IIdentity.Name%2A>użytkownika w bieżącym <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Można również określić, czy mają <xref:System.Web.Security.Membership.GetUser%2A>zaktualizować ostatniej aktywności sygnaturę daty i godziny dla użytkownika pobieranych z `userIsOnline` parametru.</xref:System.Web.Security.Membership.GetUser%2A> Z <xref:System.Web.Security.Membership.GetUser%2A>przeciążeń, które nie przyjmują `userIsOnline` parametru <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>niejawnie sygnatury czasowej aktualizacji ostatniej aktywności użytkownika.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>i <xref:System.Web.Security.Membership.GetUser%2A>nie.</xref:System.Web.Security.Membership.GetUser%2A></xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>"
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the e-mail address for the specified user. The call to <xref:System.Web.Security.Membership.GetUser%2A> specifies that the last-activity date/time stamp for the user not be updated.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.me_13_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/m-system.web.security.me_13_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika do pobrania."
    - id: userIsOnline
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, aktualizacje ostatniej aktywności sygnaturę daty i godziny dla określonego użytkownika."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>obiekt reprezentujący określonego użytkownika.</xref:System.Web.Security.MembershipUser> Jeśli <code> username </code> parametru nie odpowiada istniejącego użytkownika, ta metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>zawiera przecinka (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera nazwę użytkownika, jeśli adres e-mail użytkownika odpowiada podany adres e-mail."
  remarks: "GetUserNameByEmail można pobrać nazwy użytkownika dla członkostwa użytkownika w przypadku, gdy użytkownik nie ma nazwy użytkownika, ale znać swój adres e-mail. Jeśli więcej niż jednego użytkownika w magazynie danych ma ten sam adres e-mail, zwracana jest pierwsza nazwa użytkownika napotkano.       Spacje początkowe i końcowe są usuwane ze wszystkich wartości parametru."
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.me_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.me_5_1.aspx)]"
  syntax:
    content: public static string GetUserNameByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "Adres e-mail do wyszukania."
    return:
      type: System.String
      description: "Nazwa użytkownika, jeśli adres e-mail użytkownika odpowiada podany adres e-mail. Jeśli nie znaleziono, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> jest zwracany."
  overload: System.Web.Security.Membership.GetUserNameByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.HashAlgorithmType
  id: HashAlgorithmType
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Identyfikator algorytm wyznaczania wartości skrótu hasła."
  remarks: "Właściwość HashAlgorithmType identyfikuje algorytm skrótu niestandardowe używane przez <xref:System.Web.Security.Membership>klasę.</xref:System.Web.Security.Membership> Można ustawić za pomocą właściwości HashAlgorithmType `hashAlgorithmType` atrybut elementu.       .NET Framework umożliwia konfigurowanie klasy kryptografii niestandardowych przy użyciu sekcji konfiguracji elementu. Właściwość HashAlgorithmType musi być zgodna `name` atrybut elementu w elemencie. Aby uzyskać więcej informacji, zobacz [mapowanie nazw algorytmów na klasy kryptografii](~/add/includes/ajax-current-ext-md.md).       Jeśli nie ustawiono właściwości HashAlgorithmType, <xref:System.Web.Security.Membership>klasy używa algorytmu wyznaczania wartości skrótu w `validation` atrybut elementu.</xref:System.Web.Security.Membership>"
  syntax:
    content: public static string HashAlgorithmType { get; }
    return:
      type: System.String
      description: "Identyfikator algorytmu wyznaczania wartości skrótu hasła, lub puste, aby używany domyślny algorytm skrótu."
  overload: System.Web.Security.Membership.HashAlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera liczbę nieprawidłowego hasła lub odpowiedzi do hasła prób dozwolone przed zablokowaniem użytkownika Członkowskiego."
  remarks: "Właściwość MaxInvalidPasswordAttempts działa w połączeniu z <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>Właściwości chronią przed niechcianym źródła przy użyciu następującej liczby prób do odgadnięcia hasła lub odpowiedzi hasła użytkownika członkostwa.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Jeśli liczba nieudanych prób podania hasła lub odpowiedzi do hasła dla użytkownika członkostwa jest większa niż lub równa wartości właściwości MaxInvalidPasswordAttempts w ciągu określonej liczby minut określoną przez <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>Właściwości, a następnie użytkownik jest zablokowany przez ustawienie poza witrynę sieci Web <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>właściwości `true` dopóki użytkownik jest odblokowany przez wywołanie do <xref:System.Web.Security.MembershipUser.UnlockUser%2A>— Metoda.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Jeśli prawidłowe hasło lub odpowiedź hasła jest podana przed osiągnięciem wartości właściwości MaxInvalidPasswordAttempts, licznik, który śledzi liczbę nieudanych prób podania wynosi zero.       Nieprawidłowe hasło i prób podania hasła odpowiedzi osobno. Na przykład jeśli właściwość MaxInvalidPasswordAttempts jest ustawiona na 5, użytkownik ma do pięciu próby Wprowadź poprawne hasło i maksymalnie pięć próbuje wpisz odpowiedź prawidłowego hasła nie są zablokowane.       Wartość właściwości MaxInvalidPasswordAttempts jest ustawiana w konfiguracji aplikacji przy użyciu `maxInvalidPasswordAttempts` atrybut elementu konfiguracji.       Jeśli <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>jest właściwość `false`, próby podania hasła i odpowiedzi nie są śledzone.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of an application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "Liczba nieprawidłowego hasła lub odpowiedzi do hasła prób dozwolone przed zablokowaniem użytkownika Członkowskiego."
  overload: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera minimalną liczbę znaków specjalnych, które muszą być obecne w prawidłowe hasło."
  remarks: "Właściwość wartość MinRequiredNonAlphanumericCharacters zwraca minimalną liczbę znaków specjalnych, inne niż alfanumeryczne, które należy wprowadzić do utworzenia prawidłowego hasła dla dostawcy członkostwa określonego w <xref:System.Web.Security.Membership.Provider%2A>Właściwości.</xref:System.Web.Security.Membership.Provider%2A>       Wartość MinRequiredNonAlphanumericCharacters wartość właściwości jest ustawiana w konfiguracji aplikacji przy użyciu `minRequiredNonAlphanumericCharacters` atrybut elementu konfiguracji.       Znak niealfanumeryczny to taki znak, dla którego <xref:System.Char.IsLetterOrDigit%2A>Metoda zwraca `false`.</xref:System.Char.IsLetterOrDigit%2A>"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonAlphanumericCharacters` attribute to 1 character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonAlphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "Minimalna liczba znaków specjalnych, które muszą być obecne w prawidłowe hasło."
  overload: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera minimalną długość wymaganych do uznania hasła."
  remarks: "Właściwość wartość MinRequiredPasswordLength pobiera minimalną liczbę znaków, które należy wprowadzić do utworzenia prawidłowego hasła dla dostawcy członkostwa określonego w <xref:System.Web.Security.Membership.Provider%2A>Właściwości.</xref:System.Web.Security.Membership.Provider%2A>       Wartość właściwości wartość MinRequiredPasswordLength jest ustawiana w konfiguracji aplikacji przy użyciu `minRequiredPasswordLength` atrybut elementu konfiguracji."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredPasswordLength=\"7\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "Minimalna długość wymaganych do uznania hasła."
  overload: System.Web.Security.Membership.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera przedział czasu, między którymi kolejnych nieudanych prób, aby zapewnić prawidłowe hasło lub odpowiedzi do hasła są śledzone."
  remarks: "Właściwość PasswordAttemptWindow działa w połączeniu z <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>Właściwości w celu lepszego zabezpieczenia źródle niechciane odgadnięcie hasła lub odpowiedzi hasła członkostwa użytkownika za pomocą następującej liczby prób.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Gdy użytkownik próbuje zalogować się przy użyciu, zmienić lub zresetować swoje hasło, tylko określonej liczby kolejnych prób są dozwolone w przedziale czasu. Długość tego przedziału czasu jest określony we właściwości PasswordAttemptWindow, który określa liczbę minut między próbami nieprawidłowy.       Jeśli liczba kolejnych nieudanych prób, które użytkownik wysyła do resetowania jego lub jego hasło jest równa wartości przechowywanej w <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>właściwości oraz czas, jaki upłynął od ostatniej próby nieprawidłowy jest mniejsza niż określony we właściwości PasswordAttemptWindow minutach, a następnie zablokowaniem użytkownika Członkowskiego.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Użytkownik jest zablokowany przez ustawienie <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>właściwości `true` dopóki użytkownik jest odblokowany przez wywołanie do <xref:System.Web.Security.MembershipUser.UnlockUser%2A>metody.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A>       Jeśli interwał między bieżącym nieudanej próby i ostatniej nieudanej próby jest większa niż ustawienie właściwości PasswordAttemptWindow, bieżący Nieprawidłowa próba będzie traktowany jako pierwszy. Jeśli podano odpowiedzi prawidłowe hasło, zanim zostanie osiągnięta maksymalna liczba dozwolonych nieudanych prób podania, liczba prób podania hasła i odpowiedzi jest równa 0 (zero). Jeśli podano prawidłowe hasło, zanim maksymalna liczba dozwolonych nieprawidłowy osiągnięciu prób, liczba nieudanych próbach wpisania hasła i liczba prób podania hasła i odpowiedzi są ustawione na 0 (zero).       Nieprawidłowe próby podania hasła i odpowiedzi hasła kumulują się niezależnie od siebie. Na przykład jeśli <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>jest ustawiona na wartość 5 i trzech nieudanych próbach wpisania hasła zostaną wykonane przez dwa prób hasła i odpowiedzi, dwa więcej nieudanych próbach wpisania hasła (lub trzy kolejne próby hasła i odpowiedzi) muszą być wprowadzane w PasswordAttemptWindow dla użytkownika członkostwa zostaną zablokowane.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       Wartość właściwości PasswordAttemptWindow jest ustawiana w konfiguracji aplikacji przy użyciu `passwordAttemptWindow` atrybut sekcji element konfiguracji.       Jeśli <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>właściwość jest ustawiona na `false`, próby podania hasła i odpowiedzi nie są śledzone.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "Przedział czasu w minutach, podczas których kolejnych nie próbuje poda prawidłowego hasła lub odpowiedzi hasła są śledzone. Wartość domyślna to 10 minut. Jeśli interwał między bieżącym nieudanej próby i ostatniej nieudanej próby jest większa niż ustawienie właściwości PasswordAttemptWindow, każdej nieudanej próbie jest traktowana tak, jakby była to pierwsza próba nie powiodło się."
  overload: System.Web.Security.Membership.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wyrażenie regularne używane do analizowania hasła."
  remarks: "Właściwość PasswordStrengthRegularExpression pobiera wyrażenie regularne służące do oceny złożoności hasła od dostawcy określonego w <xref:System.Web.Security.Membership.Provider%2A>Właściwości.</xref:System.Web.Security.Membership.Provider%2A>       Właściwość PasswordStrengthRegularExpression jest ustawiona w konfiguracji aplikacji przy użyciu `passwordStrengthRegularExpression` atrybut elementu konfiguracji.       Aby uzyskać więcej informacji na temat wyrażeń regularnych, zobacz [wyrażeń regularnych programu .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates the password meets the following criteria:  \n  \n-   Is greater than seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\" @\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n   </providers>  \n</membership>  \n```"
  syntax:
    content: public static string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "Wyrażenie regularne używane do analizowania hasła."
  overload: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Provider
  id: Provider
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera odwołanie do domyślnego dostawcę członkostwa aplikacji."
  remarks: "Właściwości dostawcy umożliwia bezpośrednie odwołanie domyślnego dostawcę członkostwa aplikacji. To jest najczęściej używany do dostęp do niestandardowych elementów członkowskich dostawcy członkostwa, które nie są częścią <xref:System.Web.Security.MembershipProvider>abstrakcyjnej klasy podstawowej.</xref:System.Web.Security.MembershipProvider>"
  example:
  - "The following code example accesses the default <xref:System.Web.Security.SqlMembershipProvider> enabled for the application using the Provider property in order to determine the value of the custom <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property.  \n  \n [!code-vb[System.Web.Security.Membership#6](~/add/codesnippet/visualbasic/p-system.web.security.me_0_1.aspx)]\n [!code-cs[System.Web.Security.Membership#6](~/add/codesnippet/csharp/p-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "Domyślnym dostawcą członkostwa aplikacji ujawnianej za pomocą <xref:System.Web.Security.MembershipProvider>klasy abstrakcyjnej podstawowej.</xref:System.Web.Security.MembershipProvider>"
  overload: System.Web.Security.Membership.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Providers
  id: Providers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera kolekcję dostawców członkostwa dla aplikacji ASP.NET."
  remarks: "Właściwości dostawcy odwołuje się do wszystkich dostawców członkostwa włączony dla aplikacji, łącznie z dostawców dodane w pliku Web.config aplikacji i pliku Machine.config dla wszystkich aplikacji. Można kontrolować, które członkostwa są dostępni dostawcy dla aplikacji przy użyciu `providers` elementu sekcji w konfiguracji aplikacji. Na przykład poniższy przykład przedstawia sekcji w pliku Web.config dla aplikacji, która usuwa <xref:System.Web.Security.SqlMembershipProvider>wystąpienia (`AspNetSqlProvider`) określona w pliku konfiguracji komputera i dodaje <xref:System.Web.Security.SqlMembershipProvider>wystąpienia o nazwie `SqlProvider` jako domyślnego dostawcę członkostwa aplikacji.</xref:System.Web.Security.SqlMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />             <add name=&quot;SqlProvider&quot;               type=&quot;System.Web.Security.SqlMembershipProvider&quot;               connectionStringName=&quot;SqlServices&quot;               enablePasswordRetrieval=&quot;false&quot;               enablePasswordReset=&quot;true&quot;               requiresQuestionAndAnswer=&quot;true&quot;               passwordFormat=&quot;Hashed&quot;               applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```Podczas określania [członkostwa — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) sekcji, musisz określić `defaultProvider` atrybutu. Jeśli nie określisz [członkostwa — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) służą sekcji w pliku Web.config, wartości z konfiguracji maszyny i <xref:System.Web.Security.SqlMembershipProvider>wystąpienia o nazwie `AspNetSqlProvider` zostanie ustanowiony jako `defaultProvider`.</xref:System.Web.Security.SqlMembershipProvider>       Możesz uzyskać jednoznacznie odwołania do dostawcy z kolekcji dostawców indeksowania według nazwy dostawcy członkostwa i rzutowania go jako żądanego typu."
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-cs[System.Web.Security.Membership#7](~/add/codesnippet/csharp/p-system.web.security.me_1_1.aspx)]\n [!code-vb[System.Web.Security.Membership#7](~/add/codesnippet/visualbasic/p-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProviderCollection Providers { get; }
    return:
      type: System.Web.Security.MembershipProviderCollection
      description: "A <xref:System.Web.Security.MembershipProviderCollection>dostawców członkostwa skonfigurowane dla aplikacji ASP.NET.</xref:System.Web.Security.MembershipProviderCollection>"
  overload: System.Web.Security.Membership.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy domyślny dostawca członkostwa wymaga od użytkownika odpowiedzi na pytanie hasła do resetowania hasła i pobierania."
  remarks: "Wymaganie pytanie dotyczące hasła i odpowiedzi zapewnia dodatkową warstwę zabezpieczeń podczas pobierania lub resetowania hasła użytkownika. Użytkownicy mogą dostarczać pytanie i odpowiedź po utworzeniu nazwy użytkownika później można użyć do pobierania lub zresetować zapomniane hasło.       RequiresQuestionAndAnswer jest sprawdzana podczas <xref:System.Web.Security.MembershipUser.ResetPassword%2A>lub <xref:System.Web.Security.MembershipUser.GetPassword%2A>jest wywoływana.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A> Zgłasza dostawcy wyposażone w programie .NET Framework <xref:System.NotSupportedException>Jeśli RequiresQuestionAndAnswer `true` i odpowiedzi podane hasło jest `null`.</xref:System.NotSupportedException>       Jeśli <xref:System.Web.Security.Membership.EnablePasswordReset%2A>i <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>są `false`, nadal można używać RequiresQuestionAndAnswer wymusić tworzenie pytań i odpowiedzi, podczas tworzenia nowych użytkowników, jednak pytanie i odpowiedź nie użyjemy.</xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> </xref:System.Web.Security.Membership.EnablePasswordReset%2A> Można pobrać pytania za pomocą <xref:System.Web.Security.MembershipUser>klasy.</xref:System.Web.Security.MembershipUser>       Aby uzyskać więcej informacji zobacz <xref:System.Web.Security.MembershipUser.ResetPassword%2A>i <xref:System.Web.Security.MembershipUser.GetPassword%2A>.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider>, enables password reset, and requires a password answer when performing a reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code sample checks the value of RequiresQuestionAndAnswer and adds the necessary controls for a password question and answer to be supplied when creating a user.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/p-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/p-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli odpowiedź hasła jest wymagane do resetowania hasła i pobierania; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Aktualizuje bazę danych informacjami dla określonego użytkownika."
  remarks: "UpdateUser, przyjmuje jako dane wejściowe, <xref:System.Web.Security.MembershipUser>obiektu wypełniane przy użyciu bieżących informacji dotyczących użytkownika członkostwa i aktualizuje źródła danych przy użyciu wartości właściwości <xref:System.Web.Security.MembershipUser>obiektu.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> Można utworzyć nowy <xref:System.Web.Security.MembershipUser>, lub pobrać <xref:System.Web.Security.MembershipUser>wypełniane przy użyciu bieżących wartości źródła danych za pomocą obiektu <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, lub <xref:System.Web.Security.Membership.FindUsersByEmail%2A>metody.</xref:System.Web.Security.Membership.FindUsersByEmail%2A> </xref:System.Web.Security.Membership.FindUsersByName%2A> </xref:System.Web.Security.Membership.GetAllUsers%2A> </xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>"
  example:
  - "The following code example updates the e-mail address for the current logged-on user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_8_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_8_1.aspx)]"
  syntax:
    content: public static void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>obiekt, który reprezentuje użytkownika do zaktualizowania oraz zaktualizowane informacje dla użytkownika.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  id: UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Określa liczbę minut po ostatniej aktywności daty/godziny sygnatury dla użytkownika, w którym użytkownik jest uznawany za online."
  remarks: "Wartość właściwości UserIsOnlineTimeWindow jest sprawdzana podczas wywołania <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>.</xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A> Jeśli <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>dla użytkownika jest większa niż bieżąca data i godzina minus wartość UserIsOnlineTimeWindow minut, następnie użytkownik jest uznawany za online.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Można określić, czy użytkownik jest uznawany za online z <xref:System.Web.Security.MembershipUser.IsOnline%2A>właściwości <xref:System.Web.Security.MembershipUser>klasy.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser.IsOnline%2A>       <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>Dla użytkownika jest aktualizowany, gdy poświadczenia użytkownika zostały pomyślnie sprawdzony przez <xref:System.Web.Security.Membership.ValidateUser%2A>metody.</xref:System.Web.Security.Membership.ValidateUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Możesz również zaktualizować <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>dla użytkownika członkostwa, wywołując jedną z <xref:System.Web.Security.Membership.GetUser%2A>przeciążeń.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Jeśli wywołujesz <xref:System.Web.Security.Membership.GetUser%2A>przeciążenia, które przyjmuje `userIsOnline` parametru, określ wartość `true` można zaktualizować <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>dla użytkownika.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> </xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `userIsOnlineTimeWindow` attribute to 20 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int UserIsOnlineTimeWindow { get; }
    return:
      type: System.Int32
      description: "Liczba minut po ostatniej aktywności daty/godziny sygnatury dla użytkownika, w którym użytkownik jest uznawany za online."
  overload: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Sprawdza, czy nazwa użytkownika i hasło są prawidłowe."
  remarks: "Funkcja ValidateUser zapewnia prosty sposób można zweryfikować nazwy użytkownika i hasła ze źródła danych. Należy zauważyć, że jeśli `username` parametr jest pusty lub `null`, <xref:System.Web.HttpException>jest generowany.</xref:System.Web.HttpException>"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.Membership> class. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL by the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/m-system.web.security.me_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.me_7_1.aspx)]"
  syntax:
    content: public static bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika ma zostać zweryfikowana."
    - id: password
      type: System.String
      description: "Hasło dla określonego użytkownika."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nazwa użytkownika i hasło są prawidłowe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.ValidateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidatingPassword
  id: ValidatingPassword
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Występuje, gdy użytkownik jest tworzony, zmienić hasło lub resetowania hasła."
  remarks: "<xref:System.Web.Security.MembershipProvider.ValidatingPassword>Zdarzenie jest wywoływane podczas <xref:System.Web.Security.MembershipProvider.CreateUser%2A>metody <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>metody, lub <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>wywoływana jest metoda dostawcy członkostwa.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A> </xref:System.Web.Security.MembershipProvider.ValidatingPassword>       Można użyć <xref:System.Web.Security.MembershipProvider.ValidatingPassword>zdarzenia w celu zweryfikowania formatach hasła i wartości dla użytkowników członkostwa.</xref:System.Web.Security.MembershipProvider.ValidatingPassword>       Możesz anulować bieżące <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, lub <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>akcji przez ustawienie <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>Właściwość podana <xref:System.Web.Security.ValidatePasswordEventArgs>do `true` podczas <xref:System.Web.Security.MembershipProvider.ValidatingPassword>zdarzeń.</xref:System.Web.Security.MembershipProvider.ValidatingPassword> </xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> </xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A>       Anulowania bieżącej akcji przez ustawienie <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>właściwości `true`, można ustawić <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>Właściwość podane <xref:System.Web.Security.ValidatePasswordEventArgs>wyjątek opisujący przyczynę błędu sprawdzania poprawności hasła.</xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> Wywołanie metody spowoduje zgłoszenie wyjątku który <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>ma ustawioną wartość właściwości.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> Jeśli <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>jest właściwość `null`, wywołujący zgłosi wyjątek ogólny błąd w przypadku weryfikacji hasła.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>"
  example:
  - "The following code example shows a <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event that validates the format of the password for a user and cancels the action if the password does not match the required format.  \n  \n [!code-cs[System.Web.Security.Membership#11](~/add/codesnippet/csharp/e-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.Membership#11](~/add/codesnippet/visualbasic/e-system.web.security.me_1.aspx)]"
  syntax:
    content: public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;
    return:
      type: System.Web.Security.MembershipValidatePasswordEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.MembershipCreateUserException
  isExternal: true
  name: System.Web.Security.MembershipCreateUserException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.Membership.ApplicationName
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
- uid: System.Web.Security.Membership.EnablePasswordReset
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
- uid: System.Web.Security.Membership.GetAllUsers
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
- uid: System.Web.Security.Membership.GetUser
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
- uid: System.Web.Security.Membership.GetUser(System.Object)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
- uid: System.Web.Security.Membership.GetUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
- uid: System.Web.Security.Membership.HashAlgorithmType
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Web.Security.Membership.Providers
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
- uid: System.Web.Security.MembershipProviderCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipProviderCollection
  nameWithType: MembershipProviderCollection
  fullName: System.Web.Security.MembershipProviderCollection
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
- uid: System.Web.Security.Membership.ValidatingPassword
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
- uid: System.Web.Security.MembershipValidatePasswordEventHandler
  parent: System.Web.Security
  isExternal: true
  name: MembershipValidatePasswordEventHandler
  nameWithType: MembershipValidatePasswordEventHandler
  fullName: System.Web.Security.MembershipValidatePasswordEventHandler
- uid: System.Web.Security.Membership.ApplicationName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
- uid: System.Web.Security.Membership.CreateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser
  nameWithType: Membership.CreateUser
- uid: System.Web.Security.Membership.DeleteUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser
  nameWithType: Membership.DeleteUser
- uid: System.Web.Security.Membership.EnablePasswordReset*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail
  nameWithType: Membership.FindUsersByEmail
- uid: System.Web.Security.Membership.FindUsersByName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName
  nameWithType: Membership.FindUsersByName
- uid: System.Web.Security.Membership.GeneratePassword*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword
  nameWithType: Membership.GeneratePassword
- uid: System.Web.Security.Membership.GetAllUsers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers
  nameWithType: Membership.GetAllUsers
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: Membership.GetNumberOfUsersOnline
- uid: System.Web.Security.Membership.GetUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser
  nameWithType: Membership.GetUser
- uid: System.Web.Security.Membership.GetUserNameByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: Membership.GetUserNameByEmail
- uid: System.Web.Security.Membership.HashAlgorithmType*
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
- uid: System.Web.Security.Membership.Providers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser
  nameWithType: Membership.UpdateUser
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser
  nameWithType: Membership.ValidateUser
