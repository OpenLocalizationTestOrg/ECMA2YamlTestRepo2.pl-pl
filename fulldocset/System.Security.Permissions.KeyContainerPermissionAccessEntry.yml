### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
  id: KeyContainerPermissionAccessEntry
  children:
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry
  type: Class
  summary: "Określa prawa dostępu do określonych kontenerów kluczy. Ta klasa nie może być dziedziczona."
  remarks: "To uprawnienie mają na celu umożliwienie użytkownikom łatwe zarządzanie kontenerów kluczy, gdy chodzi o niewielkiej liczby kluczy lub ma zostać przydzielony tylko niektóre klucze dostępu."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermissionAccessEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)
  id: '#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)'
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> przy użyciu parametrów provider (CSP) określonej usługi kryptograficzne i uprawnień dostępu."
  remarks: "Ten konstruktor umożliwia prawa dostępu do przypisania do określonych kontenerów kluczy, które zostały zidentyfikowane w <xref:System.Security.Cryptography.CspParameters>obiektu.</xref:System.Security.Cryptography.CspParameters>"
  example:
  - "The following code example shows the use of the KeyContainerPermissionAccessEntry constructor.  \n  \n [!code-cs[System.Security.Permissions.KeyContainerPermission#3](~/add/codesnippet/csharp/c73d5ebe-2b51-40a4-b31f-_1.cs)]\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#3](~/add/codesnippet/cpp/c73d5ebe-2b51-40a4-b31f-_1.cpp)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#3](~/add/codesnippet/visualbasic/c73d5ebe-2b51-40a4-b31f-_1.vb)]"
  syntax:
    content: public KeyContainerPermissionAccessEntry (System.Security.Cryptography.CspParameters parameters, System.Security.Permissions.KeyContainerPermissionFlags flags);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.CspParameters
      description: "A <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> obiekt, który zawiera parametry dostawcę usług kryptograficznych."
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> wartości."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wynikowy wpis będzie mają nieograniczony dostęp."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)
  id: '#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)'
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> przy użyciu uprawnienia dostępu i nazwę określonego kontenera kluczy."
  remarks: "Ten konstruktor służy do określenia prawa dostępu do określonych kontenerów kluczy określanego przez nazwę; Użyj gwiazdki (&quot;*&quot;) do reprezentowania wszystkich kontenerów kluczy."
  example:
  - "The following code example shows the use of the KeyContainerPermissionAccessEntry constructor.  \n  \n [!code-cs[System.Security.Permissions.KeyContainerPermission#2](~/add/codesnippet/csharp/cbd63005-8ff3-44be-953b-_1.cs)]\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#2](~/add/codesnippet/cpp/cbd63005-8ff3-44be-953b-_1.cpp)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#2](~/add/codesnippet/visualbasic/cbd63005-8ff3-44be-953b-_1.vb)]"
  syntax:
    content: public KeyContainerPermissionAccessEntry (string keyContainerName, System.Security.Permissions.KeyContainerPermissionFlags flags);
    parameters:
    - id: keyContainerName
      type: System.String
      description: "Nazwa kontenera kluczy."
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> wartości."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wynikowy wpis będzie mają nieograniczony dostęp."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)
  id: '#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)'
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> z wartościami określonej właściwości."
  remarks: "Ten konstruktor umożliwia prawa dostępu do przypisania do określonych kontenerów kluczy. A `keySpec` lub `providerType` wartość -1, reprezentuje wszystkich specyfikacji klucza lub typy dostawców. A `keyStore`, `providerName`, lub `keyContainerName` o &quot;*&quot; reprezentuje wszystkich magazynów kluczy, dostawców lub kontenerów kluczy. A `providerName` lub `keyContainerName` czyli `null` reprezentuje wszystkich dostawców lub kontenerów kluczy."
  example:
  - "The following code example shows the use of the KeyContainerPermissionAccessEntry constructor.  \n  \n [!code-cs[System.Security.Permissions.KeyContainerPermission#4](~/add/codesnippet/csharp/323ccea4-2c50-40e8-9276-_1.cs)]\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#4](~/add/codesnippet/cpp/323ccea4-2c50-40e8-9276-_1.cpp)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#4](~/add/codesnippet/visualbasic/323ccea4-2c50-40e8-9276-_1.vb)]"
  syntax:
    content: public KeyContainerPermissionAccessEntry (string keyStore, string providerName, int providerType, string keyContainerName, int keySpec, System.Security.Permissions.KeyContainerPermissionFlags flags);
    parameters:
    - id: keyStore
      type: System.String
      description: "Nazwa magazynu kluczy."
    - id: providerName
      type: System.String
      description: "Nazwa dostawcy."
    - id: providerType
      type: System.Int32
      description: "Kod typu dostawcy. Zobacz <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*>Właściwości dla wartości.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*>"
    - id: keyContainerName
      type: System.String
      description: "Nazwa kontenera kluczy."
    - id: keySpec
      type: System.Int32
      description: "Specyfikacja klucza. Zobacz <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*>Właściwości dla wartości.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*>"
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> wartości."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wynikowy wpis będzie mają nieograniczony dostęp."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: KeyContainerPermissionAccessEntry.Equals(Object)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Określa, czy określony <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> obiekt jest taki sam, jak bieżące wystąpienie."
  remarks: "Metody Equals porównanie dwóch właściwości <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>obiektów w celu ustalenia, czy są równe.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> Obiekt do porównania z currentinstance."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określony <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> jest taki sam, jak bieżący <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> obiektu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags
  id: Flags
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: Flags
  nameWithType: KeyContainerPermissionAccessEntry.Flags
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia uprawnienia kontener klucza."
  remarks: "> [!CAUTION]> Wiele te flagi są wydajne i zezwolenie na dostęp do kontenerów kluczy, które powinno być przyznane wyłącznie do kodu wysoce zaufanych.       Najbardziej zaawansowanych flagi są <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>, <xref:System.Security.Permissions.KeyContainerPermissionFlags>i <xref:System.Security.Permissions.KeyContainerPermissionFlags>.</xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> </xref:System.Security.Permissions.KeyContainerPermissionFlags> Uzyskać określone zagrożenia powodowane przez użycie tych flag zobacz opis poszczególnych flagi."
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref> wartości. Wartość domyślna to <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref>."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode
  id: GetHashCode
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera wartość skrótu dla bieżącego wystąpienia, które jest odpowiednie do użycia w mieszania algorytmów i struktury danych, takich jak tablicy skrótów."
  remarks: "Pełni rolę funkcji skrótu dla <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>, odpowiednie do użycia z mieszania struktury algorytmów i danych, takich jak tablicy skrótów.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu dla bieżącego <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> obiektu."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName
  id: KeyContainerName
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: KeyContainerName
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia nazwę kontenera kluczy."
  remarks: "Użyj wartości &quot;*&quot; do zastosowania wpisu dostępu do wszystkich kontenerów kluczy w ramach określonej nazwy dostawcy i typ dostawcy."
  syntax:
    content: public string KeyContainerName { get; set; }
    return:
      type: System.String
      description: "Nazwa kontenera kluczy."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wynikowy wpis będzie mają nieograniczony dostęp."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec
  id: KeySpec
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: KeySpec
  nameWithType: KeyContainerPermissionAccessEntry.KeySpec
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia specyfikacja klucza."
  remarks: "Prawidłowe wartości dla tej właściwości to wartość AT_KEYEXCHANGE (1) i AT_SIGNATURE (2). Wartość domyślna to -1, reprezentujący wszystkie możliwe wartości."
  syntax:
    content: public int KeySpec { get; set; }
    return:
      type: System.Int32
      description: "Jedna z wartości AT_ zdefiniowane w pliku nagłówka Wincrypt.h."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wynikowy wpis będzie mają nieograniczony dostęp."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore
  id: KeyStore
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: KeyStore
  nameWithType: KeyContainerPermissionAccessEntry.KeyStore
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia nazwę klucza magazynu."
  remarks: "Prawidłowe wartości to &quot;Użytkownika&quot;, &quot;Machine&quot; lub &quot;*&quot;. Jeśli `null` jest określony, wartość jest równa &quot;\\*&quot;."
  syntax:
    content: public string KeyStore { get; set; }
    return:
      type: System.String
      description: "Nazwa magazynu kluczy."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wynikowy wpis będzie mają nieograniczony dostęp."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName
  id: ProviderName
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: ProviderName
  nameWithType: KeyContainerPermissionAccessEntry.ProviderName
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia nazwę dostawcy."
  remarks: "Przykład nazwy dostawcy jest &quot;Microsoft Enhanced Cryptographic Provider&quot;. Jeśli `null` jest określony, używana jest nazwa rozszerzony dostawca usług kryptograficznych."
  syntax:
    content: public string ProviderName { get; set; }
    return:
      type: System.String
      description: "Nazwa dostawcy."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wynikowy wpis będzie mają nieograniczony dostęp."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType
  id: ProviderType
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: ProviderType
  nameWithType: KeyContainerPermissionAccessEntry.ProviderType
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia typ dostawcy."
  remarks: "The default value is –1, representing all possible values.  \n  \n The Wincrypt.h header file defines the following values:  \n  \n-   \\#define PROV_RSA_FULL 1  \n  \n-   \\#define PROV_RSA_SIG 2  \n  \n-   \\#define PROV_DSS 3  \n  \n-   \\#define PROV_FORTEZZA 4  \n  \n-   \\#define PROV_MS_EXCHANGE 5  \n  \n-   \\#define PROV_SSL 6  \n  \n-   \\#define PROV_RSA_SCHANNEL 12  \n  \n-   \\#define PROV_DSS_DH 13  \n  \n-   \\#define PROV_EC_ECDSA_SIG 14  \n  \n-   \\#define PROV_EC_ECNRA_SIG 15  \n  \n-   \\#define PROV_EC_ECDSA_FULL 16  \n  \n-   \\#define PROV_EC_ECNRA_FULL 17  \n  \n-   \\#define PROV_DH_SCHANNEL 18  \n  \n-   \\#define PROV_SPYRUS_LYNKS 20  \n  \n-   \\#define PROV_RNG 21  \n  \n-   \\#define PROV_INTEL_SEC 22  \n  \n-   \\#define PROV_REPLACE_OWF 23  \n  \n-   \\#define PROV_RSA_AES 24"
  syntax:
    content: public int ProviderType { get; set; }
    return:
      type: System.Int32
      description: "Jedna z wartości PROV_ zdefiniowane w pliku nagłówka Wincrypt.h."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wynikowy wpis będzie mają nieograniczony dostęp."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters,KeyContainerPermissionFlags)
- uid: System.Security.Cryptography.CspParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
- uid: System.Security.Permissions.KeyContainerPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionFlags
  nameWithType: KeyContainerPermissionFlags
  fullName: System.Security.Permissions.KeyContainerPermissionFlags
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,KeyContainerPermissionFlags)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String,String,Int32,String,Int32,KeyContainerPermissionFlags)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: Equals(Object)
  nameWithType: KeyContainerPermissionAccessEntry.Equals(Object)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermissionAccessEntry.Flags
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: GetHashCode()
  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode()
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyContainerName
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeySpec
  nameWithType: KeyContainerPermissionAccessEntry.KeySpec
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyStore
  nameWithType: KeyContainerPermissionAccessEntry.KeyStore
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: ProviderName
  nameWithType: KeyContainerPermissionAccessEntry.ProviderName
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: ProviderType
  nameWithType: KeyContainerPermissionAccessEntry.ProviderType
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: Equals
  nameWithType: KeyContainerPermissionAccessEntry.Equals
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermissionAccessEntry.Flags
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: GetHashCode
  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyContainerName
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeySpec
  nameWithType: KeyContainerPermissionAccessEntry.KeySpec
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyStore
  nameWithType: KeyContainerPermissionAccessEntry.KeyStore
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: ProviderName
  nameWithType: KeyContainerPermissionAccessEntry.ProviderName
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: ProviderType
  nameWithType: KeyContainerPermissionAccessEntry.ProviderType
