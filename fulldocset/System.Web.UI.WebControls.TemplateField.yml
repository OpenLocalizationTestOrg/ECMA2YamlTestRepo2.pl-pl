### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TemplateField
  id: TemplateField
  children:
  - System.Web.UI.WebControls.TemplateField.#ctor
  - System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  - System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.TemplateField.CreateField
  - System.Web.UI.WebControls.TemplateField.EditItemTemplate
  - System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.TemplateField.FooterTemplate
  - System.Web.UI.WebControls.TemplateField.HeaderTemplate
  - System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  - System.Web.UI.WebControls.TemplateField.ItemTemplate
  - System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  - System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  langs:
  - csharp
  name: TemplateField
  nameWithType: TemplateField
  fullName: System.Web.UI.WebControls.TemplateField
  type: Class
  summary: "Reprezentuje pole, które wyświetla zawartość niestandardowe w formancie powiązane z danymi."
  remarks: "Klasa TemplateField jest używany przez formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.GridView>i <xref:System.Web.UI.WebControls.DetailsView>) do wyświetlenia niestandardowej zawartości dla każdego rekordu wyświetlane.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Gdy są potrzebne do wyświetlania zawartości w formancie powiązane z danymi, który nie został dostarczony przez jedną ze wstępnie zdefiniowanych danych pola formantu (takie jak <xref:System.Web.UI.WebControls.BoundField>), użyj klasy TemplateField, aby utworzyć użytkownika niestandardowego interfejsu użytkownika (UI).</xref:System.Web.UI.WebControls.BoundField> Obiekt TemplateField są wyświetlane inaczej w zależności od kontrolki powiązania danych, w którym jest używana. Na przykład <xref:System.Web.UI.WebControls.GridView>kontrolka ma wyświetlać jako kolumny, obiekt TemplateField i <xref:System.Web.UI.WebControls.DetailsView>kontroli wyświetla go jako wiersz.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Można zdefiniować szablon niestandardowy dla różnych części obiektu TemplateField za pomocą szablonów wymienionych w poniższej tabeli.      | Szablon | Opis elementu |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>| Określa zawartość, aby wyświetlić przemiennych elementów w obiekcie TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>| Określa zawartość ma być wyświetlany dla elementu w trybie edycji w obiekcie TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>| Określa zawartość ma być wyświetlany dla stopki obiektu TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>| Określa zawartość ma być wyświetlany dla sekcji nagłówka obiektu TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>| Określa zawartość ma być wyświetlany dla elementu w trybie wstawiania w obiekcie TemplateField.</xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> Ten szablon jest obsługiwana tylko przez formant <xref:System.Web.UI.WebControls.DetailsView>. |   | <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>| Określa zawartość do wyświetlania elementów w obiekcie TemplateField. |       Obiekt TemplateField w formancie powiązane z danymi można ukryć, ustawiając <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>właściwości `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> </xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView>       Jako alternatywę do określenia niestandardowego <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>lub <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>szablonu, można dostosować w nagłówku i stopce sekcjach obiektu TemplateField innych właściwości obiektu TemplateField.</xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> Aby wyświetlić podpisu w nagłówku lub stopce strony sekcjach, ustaw <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>lub <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>Właściwości, odpowiednio.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> Wyświetlanie tekstu w nagłówku sekcji, a nie można wyświetlić obrazu ustawiając <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>Właściwości.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> Sekcja nagłówka może być ukryte w obiekcie TemplateField przez ustawienie <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>właściwości `false`.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      > [!NOTE] > Niektóre formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.GridView>kontroli) można wyświetlić lub ukryć tylko sekcji cały nagłówek formantu.</xref:System.Web.UI.WebControls.GridView> Nie obsługują tych kontrolek powiązanych z danymi <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>Właściwości dla poszczególnych pól powiązania.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> Aby wyświetlić lub ukryć sekcji całego nagłówka formantu powiązanego z danymi, użyj formantu `ShowHeader` właściwości (jeśli jest dostępna).       Możesz również dostosować wygląd obiektu TemplateField (kolor czcionki, kolor tła itd.) przez ustawienie właściwości stylu dla różnych części pola. W poniższej tabeli wymieniono właściwości inny styl.      | Właściwość style | Opis elementu |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| Ustawienia stylu dla kontrolki serwera sieci Web podrzędnych obiektu TemplateField. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| Ustawienia stylu stopce obiektu TemplateField. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| Ustawienia stylu dla sekcji nagłówka obiektu TemplateField. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| Ustawienia stylu dla elementów danych w obiekcie TemplateField. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to create a custom TemplateField object that displays two fields in the same cell. The first name and last name fields are combined into the same TemplateField object.  \n  \n [!code-cs[TemplateField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[TemplateField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_104_1.aspx)]"
  syntax:
    content: 'public class TemplateField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: TemplateField()
  nameWithType: TemplateField.TemplateField()
  fullName: System.Web.UI.WebControls.TemplateField.TemplateField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> klasy."
  remarks: "Ten konstruktor umożliwia inicjuje nowe wystąpienie <xref:System.Web.UI.WebControls.TemplateField>klasy.</xref:System.Web.UI.WebControls.TemplateField> Ten konstruktor jest często stosowany podczas dodawania pól do utworzony dynamicznie formantu powiązanego z danymi.       Dynamiczne dodawanie <xref:System.Web.UI.WebControls.TemplateField>obiektu do formantu powiązanego z danymi, Utwórz nową <xref:System.Web.UI.WebControls.TemplateField>obiekt, zdefiniuj odpowiednie szablony, a następnie dodaj go do kolekcji pól formantu powiązanego z danymi.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.TemplateField> Na przykład, jeśli używasz <xref:System.Web.UI.WebControls.GridView>kontrolować, Dodaj <xref:System.Web.UI.WebControls.TemplateField>do obiektu <xref:System.Web.UI.WebControls.GridView.Columns%2A>kolekcji.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > Wprawdzie może dynamicznie dodać pól do formantu powiązanego z danymi, zdecydowanie zaleca się czy pola można statycznie zadeklarowany i pokazywane lub ukryte, odpowiednio. Deklarowanie statycznie wszystkich pól zmniejsza rozmiar stan widoku formantu nadrzędnego powiązane z danymi."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.TemplateField> field column to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[TemplateFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_118_1.aspx)]\n [!code-vb[TemplateFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_118_1.aspx)]"
  syntax:
    content: public TemplateField ();
    parameters: []
  overload: System.Web.UI.WebControls.TemplateField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  id: AlternatingItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia szablon dla wyświetlanie naprzemiennych elementów w <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> obiektu."
  remarks: "Użyj właściwości AlternatingItemTemplate umożliwia określenie niestandardowych zawartości wyświetlane dla elementów przemiennych <xref:System.Web.UI.WebControls.TemplateField>obiektu.</xref:System.Web.UI.WebControls.TemplateField> Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania elementów przemiennych.      > [!NOTE] > AlternatingItemTemplate jest zwykle używana w połączeniu z <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>właściwość, aby utworzyć inny wygląd dla każdego innego elementu w formancie powiązane z danymi.</xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>       Aby określić szablon, najpierw umieścić otwierające i zamykające `<AlternatingItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu `<TemplateField>` elementu. Następnie dodaj niestandardowe zawartości między otwarcia i zamknięcia `<AlternatingItemTemplate>` tagów. Zawartość może być prosta jako zwykły tekst lub bardziej złożonych (osadzanie inne formanty w szablonie, na przykład).       Do uzyskania programowego dostępu do formantu zdefiniowane w szablonie, najpierw określić, które <xref:System.Web.UI.WebControls.TableCell>obiektu w formancie powiązane z danymi z formantem.</xref:System.Web.UI.WebControls.TableCell> Następnie użyj <xref:System.Web.UI.Control.Controls%2A>Kolekcja <xref:System.Web.UI.WebControls.TableCell>obiektu do kontroli dostępu.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Można również użyć <xref:System.Web.UI.Control.FindControl%2A>metody <xref:System.Web.UI.WebControls.TableCell>obiektu można znaleźć formantu, jeśli formant ma <xref:System.Web.UI.Control.ID%2A>określona właściwość.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the AlternatingItemTemplate property to create a custom template for the alternating items in a <xref:System.Web.UI.WebControls.TemplateField> field column of a <xref:System.Web.UI.WebControls.GridView> control. The template is a variation of the template specified by the <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> property, where an image is displayed on the opposite side of the cell.  \n  \n [!code-vb[TemplateFieldAlternatingItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1029_1.aspx)]\n [!code-cs[TemplateFieldAlternatingItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1029_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-zaimplementowany obiekt, który zawiera szablon dla wyświetlanie naprzemiennych elementów w <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą czy wartość która <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> obiekt jest powiązany do powinny być konwertowane na <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> przypadku <xref:System.String.Empty>.</xref:System.String.Empty>"
  remarks: "Ta właściwość dotyczy oświadczeń dwukierunkowego powiązania danych w szablonie. Konwersja odbywa się po wyodrębnieniu wartości z dwukierunkowe powiązanego szablonu, a przed przekazaniem wartości do źródła danych dla operacji wstawiania lub aktualizacji.       Na przykład użytkownik może wprowadzić ciąg pusty (&quot;&quot;) dla wartości pola podczas aktualizowania i wstawiania rekordów. Użyj właściwości ConvertEmptyStringToNull, aby określić, czy wartość pustego ciągu jest automatycznie konwertowany do `null` gdy zaktualizowano pole danych w źródle danych."
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość która <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> jest powiązany z powinny być konwertowane na <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> gdy jest <xref:System.String.Empty>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.String.Empty> Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: TemplateField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.TemplateField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Kopiuje właściwości bieżącego <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>-pochodnych do określonego obiektu <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> obiektu."
  remarks: "Metoda CopyProperties jest używany do kopiowania właściwości bieżącej metody pomocnika <xref:System.Web.UI.WebControls.TemplateField>-pochodnych obiektu <xref:System.Web.UI.WebControls.DataControlField>obiektu utworzonego przez metodę.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.TemplateField>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> Można skopiować właściwości bieżącego <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> do."
  overload: System.Web.UI.WebControls.TemplateField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: CreateField()
  nameWithType: TemplateField.CreateField()
  fullName: System.Web.UI.WebControls.TemplateField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tworzy nowy <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> obiektu."
  remarks: "Metoda CreateField zastępuje metodę podstawową, aby zwrócić <xref:System.Web.UI.WebControls.TemplateField>obiektu.</xref:System.Web.UI.WebControls.TemplateField>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "Zawsze zwraca nową <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia szablon do wyświetlania elementów w trybie edycji w <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> obiektu."
  remarks: "Użyj właściwości EditItemTemplate umożliwia określenie niestandardowych zawartości wyświetlany dla elementu, który jest w trybie edycji w <xref:System.Web.UI.WebControls.TemplateField>obiektu.</xref:System.Web.UI.WebControls.TemplateField> Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania elementu w trybie edycji. Właściwość EditItemTemplate zwykle zawiera kontrolki wejściowe dla użytkownika zmodyfikować wartości w źródle danych.       Aby określić szablon, najpierw umieścić otwierające i zamykające `<EditItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu `<TemplateField>` elementu. Następnie dodaj niestandardowe zawartości między otwarcia i zamknięcia `<EditItemTemplate>` tagów. Zawartość może być prosta jako zwykły tekst lub bardziej złożonych (osadzanie inne formanty w szablonie, na przykład).       Do uzyskania programowego dostępu do formantu zdefiniowane w szablonie, najpierw określić, które <xref:System.Web.UI.WebControls.TableCell>obiektu w formancie powiązane z danymi z formantem.</xref:System.Web.UI.WebControls.TableCell> Następnie użyj <xref:System.Web.UI.Control.Controls%2A>Kolekcja <xref:System.Web.UI.WebControls.TableCell>obiektu do kontroli dostępu.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Można również użyć <xref:System.Web.UI.Control.FindControl%2A>metody <xref:System.Web.UI.WebControls.TableCell>obiektu można znaleźć formantu, jeśli formant ma <xref:System.Web.UI.Control.ID%2A>określona właściwość.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the EditItemTemplate property to create a custom template for an item in edit mode in a <xref:System.Web.UI.WebControls.TemplateField> field column of a <xref:System.Web.UI.WebControls.GridView> control. The template contains validation server controls to prevent a user from leaving a value field empty.  \n  \n [!code-cs[TemplateFieldEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_821_1.aspx)]\n [!code-vb[TemplateFieldEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_821_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-zaimplementowany obiekt, który zawiera szablon do wyświetlania elementów w trybie edycji w <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.UI.WebControls.TemplateField.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Wyodrębnia wartości formantu danych pola określone przez jedną lub więcej instrukcji Wiązanie dwukierunkowe (<xref uid=&quot;langword_csharp_DataBind&quot; name=&quot;DataBind&quot; href=&quot;&quot;></xref>) z bieżącą komórką tabeli i dodaje do określonej wartości <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> kolekcji."
  remarks: "Metoda ExtractValuesFromCell jest implementowana przez typy pochodne <xref:System.Web.UI.WebControls.DataControlField>, takich jak <xref:System.Web.UI.WebControls.TemplateField>.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.DataControlField> Ta metoda jest wywoływana, aby wyodrębnić wartości pola powiązane z danymi dwukierunkowe szablonu, aby wypełnić słowniki do przekazania do źródła danych do aktualizowania, wstawiania lub operację usuwania. Pary pól i wartości są przechowywane w kolekcji słownik, który jest przekazywany do metody. Metoda ExtractValuesFromCell jest wywoływana przez `ExtractRowValues` metod kontroli danych, takich jak <xref:System.Web.UI.WebControls.DetailsView>i <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "An <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> zawierający tekst lub formanty <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> wartości."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, że wartości pola tylko do odczytu są uwzględniane w `dictionary` kolekcji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
  fullName: System.Web.UI.WebControls.TemplateField.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia szablon do wyświetlania stopce <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> obiektu."
  remarks: "Umożliwia określenie niestandardowych zawartość wyświetlaną w stopce właściwości elementu FooterTemplate <xref:System.Web.UI.WebControls.TemplateField>obiektu.</xref:System.Web.UI.WebControls.TemplateField> Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania stopki.       Aby określić szablon, najpierw umieścić otwierające i zamykające `<FooterTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu `<TemplateField>` elementu. Następnie dodaj niestandardowe zawartości między otwarcia i zamknięcia `<FooterTemplate>` tagów. Zawartość może być prosta jako zwykły tekst lub bardziej złożonych (osadzanie inne formanty w szablonie, na przykład).       Do uzyskania programowego dostępu do formantu zdefiniowane w szablonie, najpierw określić, które <xref:System.Web.UI.WebControls.TableCell>obiektu w formancie powiązane z danymi z formantem.</xref:System.Web.UI.WebControls.TableCell> Następnie użyj <xref:System.Web.UI.Control.Controls%2A>Kolekcja <xref:System.Web.UI.WebControls.TableCell>obiektu do kontroli dostępu.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Można również użyć <xref:System.Web.UI.Control.FindControl%2A>metody <xref:System.Web.UI.WebControls.TableCell>obiektu można znaleźć formantu, jeśli formant ma <xref:System.Web.UI.Control.ID%2A>określona właściwość.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the FooterTemplate property to create a custom template for the footer section of a <xref:System.Web.UI.WebControls.TemplateField> field column in a <xref:System.Web.UI.WebControls.GridView> control. The template displays the sum of the values in the <xref:System.Web.UI.WebControls.TemplateField> field column.  \n  \n [!code-cs[TemplateFieldFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1286_1.aspx)]\n [!code-vb[TemplateFieldFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1286_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-zaimplementowany obiekt, który zawiera szablon do wyświetlania stopce <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.UI.WebControls.TemplateField.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
  fullName: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia szablon do wyświetlania sekcji nagłówka <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> obiektu."
  remarks: "Użyj właściwości elementu HeaderTemplate umożliwia określenie niestandardowych zawartości wyświetlany w nagłówku sekcji <xref:System.Web.UI.WebControls.TemplateField>obiektu.</xref:System.Web.UI.WebControls.TemplateField> Zdefiniuj zawartość, tworząc szablon, który określa, jak jest renderowany w nagłówku sekcji.       Aby określić szablon, najpierw umieścić otwierające i zamykające `<HeaderTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu `<TemplateField>` elementu. Następnie dodaj niestandardowe zawartości między otwarcia i zamknięcia `<HeaderTemplate>` tagów. Zawartość może być prosta jako zwykły tekst lub bardziej złożonych (osadzanie inne formanty w szablonie, na przykład).       Do uzyskania programowego dostępu do formantu zdefiniowane w szablonie, najpierw określić, które <xref:System.Web.UI.WebControls.TableCell>obiektu w formancie powiązane z danymi z formantem.</xref:System.Web.UI.WebControls.TableCell> Następnie użyj <xref:System.Web.UI.Control.Controls%2A>Kolekcja <xref:System.Web.UI.WebControls.TableCell>obiektu do kontroli dostępu.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Można również użyć <xref:System.Web.UI.Control.FindControl%2A>metody <xref:System.Web.UI.WebControls.TableCell>obiektu można znaleźć formantu, jeśli formant ma <xref:System.Web.UI.Control.ID%2A>określona właściwość.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the HeaderTemplate property to create a custom template for the header section of a <xref:System.Web.UI.WebControls.TemplateField> field column in a <xref:System.Web.UI.WebControls.GridView> control. The template displays a check box that allows the user to show or hide the rows of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[TemplateFieldHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1149_1.aspx)]\n [!code-vb[TemplateFieldHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1149_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-zaimplementowany obiekt, który zawiera szablon do wyświetlania sekcji nagłówka <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> w formancie powiązane z danymi. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.UI.WebControls.TemplateField.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Dodaje tekst lub kontrolki do kolekcji controls komórki."
  remarks: "Ta metoda jest wywoływana podczas tworzenia kontrolki powiązane z danymi niestandardowej, która używa <xref:System.Web.UI.WebControls.DataControlFieldCell>obiektów zainicjować komórki struktury tabeli z danymi lub formantów.</xref:System.Web.UI.WebControls.DataControlFieldCell>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> zawierający tekst lub formanty <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> wartości."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> wartości określający stan wiersza, który zawiera <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref>."
    - id: rowIndex
      type: System.Int32
      description: "Indeks wiersza, który <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> znajduje się w."
  overload: System.Web.UI.WebControls.TemplateField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  id: InsertItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia szablon do wyświetlania elementów w trybie wstawiania w <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> obiektu."
  remarks: "Użyj właściwości InsertItemTemplate umożliwia określenie niestandardowych zawartości wyświetlane dla elementów w trybie wstawiania w <xref:System.Web.UI.WebControls.TemplateField>obiektu.</xref:System.Web.UI.WebControls.TemplateField> Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania elementów w trybie wstawiania.       Aby określić szablon, najpierw umieścić otwierające i zamykające `<InsertItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu `<TemplateField>` elementu. Następnie dodaj niestandardowe zawartości między otwarcia i zamknięcia `<InsertItemTemplate>` tagów. Zawartość może być prosta jako zwykły tekst lub bardziej złożonych (osadzanie inne formanty w szablonie, na przykład).       Do uzyskania programowego dostępu do formantu zdefiniowane w szablonie, najpierw określić, które <xref:System.Web.UI.WebControls.TableCell>obiektu w formancie powiązane z danymi z formantem.</xref:System.Web.UI.WebControls.TableCell> Następnie użyj <xref:System.Web.UI.Control.Controls%2A>Kolekcja <xref:System.Web.UI.WebControls.TableCell>obiektu do kontroli dostępu.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Można również użyć <xref:System.Web.UI.Control.FindControl%2A>metody <xref:System.Web.UI.WebControls.TableCell>obiektu można znaleźć formantu, jeśli formant ma <xref:System.Web.UI.Control.ID%2A>określona właściwość.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>      > [!NOTE] > Nie wszystkie formanty powiązane z danymi obsługuje ten szablon ten szablon jest obsługiwana tylko przez formanty powiązane z danymi, które umożliwiają wstawianie rekordu, takie jak <xref:System.Web.UI.WebControls.DetailsView>kontroli.</xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the InsertItemTemplate property to create a custom template for an item in insert mode in a <xref:System.Web.UI.WebControls.TemplateField> field row in a <xref:System.Web.UI.WebControls.DetailsView> control. The template displays a <xref:System.Web.UI.WebControls.DropDownList> control that allows the user to select a value from a predefined list.  \n  \n [!code-vb[TemplateFieldInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_855_1.aspx)]\n [!code-cs[TemplateFieldInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_855_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-zaimplementowany obiekt, który zawiera szablon do wyświetlania elementów w trybie wstawiania w <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.UI.WebControls.TemplateField.InsertItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia szablon do wyświetlania elementów w formancie powiązane z danymi."
  remarks: "Umożliwia określenie niestandardowej zawartości wyświetlane dla elementów właściwości ItemTemplate <xref:System.Web.UI.WebControls.TemplateField>obiektu.</xref:System.Web.UI.WebControls.TemplateField> Zdefiniuj zawartość, tworząc szablon, który określa sposób renderowania elementów.      > [!NOTE] > Można opcjonalnie zdefiniować <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>właściwość w połączeniu z właściwości ItemTemplate utworzyć inny wygląd dla każdego innego elementu w formancie powiązane z danymi.</xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>       Aby określić szablon, najpierw umieścić otwierające i zamykające `<ItemTemplate>` tagi pomiędzy otwierającym, a zamykającym tagiem elementu `<TemplateField>` elementu. Następnie dodaj niestandardowe zawartości między otwarcia i zamknięcia `<ItemTemplate>` tagów. Zawartość może być prosta jako zwykły tekst lub bardziej złożonych (osadzanie inne formanty w szablonie, na przykład).       Do uzyskania programowego dostępu do formantu zdefiniowane w szablonie, najpierw określić, które <xref:System.Web.UI.WebControls.TableCell>obiektu w formancie powiązane z danymi z formantem.</xref:System.Web.UI.WebControls.TableCell> Następnie użyj <xref:System.Web.UI.Control.Controls%2A>Kolekcja <xref:System.Web.UI.WebControls.TableCell>obiektu do kontroli dostępu.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Można również użyć <xref:System.Web.UI.Control.FindControl%2A>metody <xref:System.Web.UI.WebControls.TableCell>obiektu można znaleźć formantu, jeśli formant ma <xref:System.Web.UI.Control.ID%2A>określona właściwość.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the ItemTemplate property to create a custom template for the items of a <xref:System.Web.UI.WebControls.TemplateField> field in a <xref:System.Web.UI.WebControls.GridView> control. The template displays the field's value in a <xref:System.Web.UI.WebControls.RadioButtonList> control.  \n  \n [!code-cs[TemplateFieldItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_239_1.aspx)]\n [!code-vb[TemplateFieldItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_239_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-zaimplementowany obiekt, który zawiera szablon do wyświetlania elementu <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.UI.WebControls.TemplateField.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość określającą, czy formant sprawdza poprawność danych wejściowych klienta."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli formant sprawdza poprawność danych wejściowych klienta; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: TemplateField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Określa, czy formanty zawarte w <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> obiektu wywołania zwrotne strony pomocy technicznej."
  remarks: "Metoda ValidateSupportsCallback nie jest obsługiwana dla tej klasy i zawsze zwraca <xref:System.NotSupportedException>wyjątek.</xref:System.NotSupportedException>"
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Domyślna implementacja ta metoda jest wywoływana."
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.TemplateField.#ctor
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: TemplateField()
  nameWithType: TemplateField.TemplateField()
  fullName: System.Web.UI.WebControls.TemplateField.TemplateField()
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: TemplateField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.TemplateField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.TemplateField.CreateField
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CreateField()
  nameWithType: TemplateField.CreateField()
  fullName: System.Web.UI.WebControls.TemplateField.CreateField()
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.EditItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
  fullName: System.Web.UI.WebControls.TemplateField.FooterTemplate
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
  fullName: System.Web.UI.WebControls.TemplateField.HeaderTemplate
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.ItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: TemplateField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.TemplateField.#ctor*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: TemplateField
  nameWithType: TemplateField.TemplateField
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CopyProperties
  nameWithType: TemplateField.CopyProperties
- uid: System.Web.UI.WebControls.TemplateField.CreateField*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CreateField
  nameWithType: TemplateField.CreateField
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: TemplateField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InitializeCell
  nameWithType: TemplateField.InitializeCell
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: TemplateField.ValidateSupportsCallback
