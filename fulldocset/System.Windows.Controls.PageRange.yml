### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.PageRange
  id: PageRange
  children:
  - System.Windows.Controls.PageRange.#ctor(System.Int32)
  - System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)
  - System.Windows.Controls.PageRange.Equals(System.Object)
  - System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)
  - System.Windows.Controls.PageRange.GetHashCode
  - System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  - System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  - System.Windows.Controls.PageRange.PageFrom
  - System.Windows.Controls.PageRange.PageTo
  - System.Windows.Controls.PageRange.ToString
  langs:
  - csharp
  name: PageRange
  nameWithType: PageRange
  fullName: System.Windows.Controls.PageRange
  type: Struct
  summary: "Określa zakres stron."
  remarks: "PageRange definiuje zakres stron, które powinny być przetwarzane w operacji, takich jak drukowania."
  syntax:
    content: public struct PageRange
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: PageRange(Int32)
  nameWithType: PageRange.PageRange(Int32)
  fullName: System.Windows.Controls.PageRange.PageRange(Int32)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> klasa, która zawiera tylko jeden określonej strony."
  remarks: "`page` Wartość parametru jest oparta na 1; stronę o numerze 1 jest pierwszą stroną."
  syntax:
    content: public PageRange (int page);
    parameters:
    - id: page
      type: System.Int32
      description: "Strona, która jest drukowana ani przetworzyć."
  overload: System.Windows.Controls.PageRange.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: PageRange(Int32,Int32)
  nameWithType: PageRange.PageRange(Int32,Int32)
  fullName: System.Windows.Controls.PageRange.PageRange(Int32,Int32)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> klasy z określonym pierwszej i ostatniej strony."
  remarks: "`pageFrom` i `PageTo` wartości parametrów są oparte na 1; stronę o numerze 1 jest pierwszą stroną.       Ponieważ zakres obejmuje zarówno &quot;od&quot; a &quot;do&quot; stron jest całkowita liczba stron &quot;<xref:System.Windows.Controls.PageRange.PageTo%2A> - <xref:System.Windows.Controls.PageRange.PageFrom%2A>+ 1&quot;.</xref:System.Windows.Controls.PageRange.PageFrom%2A> </xref:System.Windows.Controls.PageRange.PageTo%2A>"
  syntax:
    content: public PageRange (int pageFrom, int pageTo);
    parameters:
    - id: pageFrom
      type: System.Int32
      description: "Na pierwszej stronie zakresu."
    - id: pageTo
      type: System.Int32
      description: "Ostatnia strona zakresu."
  overload: System.Windows.Controls.PageRange.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PageRange.Equals(Object)
  fullName: System.Windows.Controls.PageRange.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Sprawdza, czy jest taki sam obiekt nieznanego typu <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt przetestowane."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli obiekt jest typu <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> i jest taki sam <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.PageRange.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)
  id: Equals(System.Windows.Controls.PageRange)
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: Equals(PageRange)
  nameWithType: PageRange.Equals(PageRange)
  fullName: System.Windows.Controls.PageRange.Equals(PageRange)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Testy czy <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> jest taki sam <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
  syntax:
    content: public bool Equals (System.Windows.Controls.PageRange pageRange);
    parameters:
    - id: pageRange
      type: System.Windows.Controls.PageRange
      description: "<xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> Przetestowane."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dwa <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> obiekty są równe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.PageRange.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PageRange.GetHashCode()
  fullName: System.Windows.Controls.PageRange.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Pobiera wartość skrótu kodu dla <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu kodu dla <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
  overload: System.Windows.Controls.PageRange.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  id: op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: op_Equality(PageRange,PageRange)
  nameWithType: PageRange.op_Equality(PageRange,PageRange)
  fullName: System.Windows.Controls.PageRange.op_Equality(PageRange,PageRange)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Definiuje operator &quot;==&quot; do testowania, czy dwa określone <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> obiekty są takie same."
  syntax:
    content: public static bool op_Equality (System.Windows.Controls.PageRange pr1, System.Windows.Controls.PageRange pr2);
    parameters:
    - id: pr1
      type: System.Windows.Controls.PageRange
      description: "Pierwszy <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
    - id: pr2
      type: System.Windows.Controls.PageRange
      description: "Drugi <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dwa <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> obiekty są równe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.PageRange.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  id: op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: op_Inequality(PageRange,PageRange)
  nameWithType: PageRange.op_Inequality(PageRange,PageRange)
  fullName: System.Windows.Controls.PageRange.op_Inequality(PageRange,PageRange)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Definiuje &quot;! =&quot; operator sprawdzenie, czy dwa określone <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> obiekty są *nie* takie same."
  syntax:
    content: public static bool op_Inequality (System.Windows.Controls.PageRange pr1, System.Windows.Controls.PageRange pr2);
    parameters:
    - id: pr1
      type: System.Windows.Controls.PageRange
      description: "Pierwszy <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
    - id: pr2
      type: System.Windows.Controls.PageRange
      description: "Drugi <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dwa <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> obiekty są *nie* równe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.PageRange.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.PageFrom
  id: PageFrom
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: PageFrom
  nameWithType: PageRange.PageFrom
  fullName: System.Windows.Controls.PageRange.PageFrom
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Pobiera lub ustawia numer pierwszej strony w zakresie."
  remarks: "Właściwość PageFrom jest oparty na 1; numer strony 1 jest pierwszą stroną."
  syntax:
    content: public int PageFrom { get; set; }
    return:
      type: System.Int32
      description: "Numer strony na podstawie 1 pierwszej strony w zakresie."
  overload: System.Windows.Controls.PageRange.PageFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.PageTo
  id: PageTo
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: PageTo
  nameWithType: PageRange.PageTo
  fullName: System.Windows.Controls.PageRange.PageTo
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Pobiera lub ustawia numer ostatniej strony w zakresie."
  remarks: "Właściwość PageTo jest oparty na 1; numer strony 1 jest pierwszą stroną."
  syntax:
    content: public int PageTo { get; set; }
    return:
      type: System.Int32
      description: "Na podstawie 1 numer ostatniej strony w zakresie."
  overload: System.Windows.Controls.PageRange.PageTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.ToString
  id: ToString
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: ToString()
  nameWithType: PageRange.ToString()
  fullName: System.Windows.Controls.PageRange.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Pobiera reprezentację ciągu obiektu zakresu."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Ciąg reprezentujący zakres stron w formacie &quot;<>*>`-`<>*>&quot;."
  overload: System.Windows.Controls.PageRange.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Controls.PageRange.#ctor(System.Int32)
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageRange(Int32)
  nameWithType: PageRange.PageRange(Int32)
  fullName: System.Windows.Controls.PageRange.PageRange(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageRange(Int32,Int32)
  nameWithType: PageRange.PageRange(Int32,Int32)
  fullName: System.Windows.Controls.PageRange.PageRange(Int32,Int32)
- uid: System.Windows.Controls.PageRange.Equals(System.Object)
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: Equals(Object)
  nameWithType: PageRange.Equals(Object)
  fullName: System.Windows.Controls.PageRange.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: Equals(PageRange)
  nameWithType: PageRange.Equals(PageRange)
  fullName: System.Windows.Controls.PageRange.Equals(PageRange)
- uid: System.Windows.Controls.PageRange
  parent: System.Windows.Controls
  isExternal: false
  name: PageRange
  nameWithType: PageRange
  fullName: System.Windows.Controls.PageRange
- uid: System.Windows.Controls.PageRange.GetHashCode
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: GetHashCode()
  nameWithType: PageRange.GetHashCode()
  fullName: System.Windows.Controls.PageRange.GetHashCode()
- uid: System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: op_Equality(PageRange,PageRange)
  nameWithType: PageRange.op_Equality(PageRange,PageRange)
  fullName: System.Windows.Controls.PageRange.op_Equality(PageRange,PageRange)
- uid: System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: op_Inequality(PageRange,PageRange)
  nameWithType: PageRange.op_Inequality(PageRange,PageRange)
  fullName: System.Windows.Controls.PageRange.op_Inequality(PageRange,PageRange)
- uid: System.Windows.Controls.PageRange.PageFrom
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageFrom
  nameWithType: PageRange.PageFrom
  fullName: System.Windows.Controls.PageRange.PageFrom
- uid: System.Windows.Controls.PageRange.PageTo
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageTo
  nameWithType: PageRange.PageTo
  fullName: System.Windows.Controls.PageRange.PageTo
- uid: System.Windows.Controls.PageRange.ToString
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: ToString()
  nameWithType: PageRange.ToString()
  fullName: System.Windows.Controls.PageRange.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.PageRange.#ctor*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageRange
  nameWithType: PageRange.PageRange
- uid: System.Windows.Controls.PageRange.Equals*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: Equals
  nameWithType: PageRange.Equals
- uid: System.Windows.Controls.PageRange.GetHashCode*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: GetHashCode
  nameWithType: PageRange.GetHashCode
- uid: System.Windows.Controls.PageRange.op_Equality*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: op_Equality
  nameWithType: PageRange.op_Equality
- uid: System.Windows.Controls.PageRange.op_Inequality*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: op_Inequality
  nameWithType: PageRange.op_Inequality
- uid: System.Windows.Controls.PageRange.PageFrom*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageFrom
  nameWithType: PageRange.PageFrom
- uid: System.Windows.Controls.PageRange.PageTo*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageTo
  nameWithType: PageRange.PageTo
- uid: System.Windows.Controls.PageRange.ToString*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: ToString
  nameWithType: PageRange.ToString
