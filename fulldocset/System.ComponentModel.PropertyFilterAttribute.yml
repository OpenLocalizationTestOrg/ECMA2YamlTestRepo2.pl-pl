### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.PropertyFilterAttribute
  id: PropertyFilterAttribute
  children:
  - System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)
  - System.ComponentModel.PropertyFilterAttribute.Default
  - System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)
  - System.ComponentModel.PropertyFilterAttribute.Filter
  - System.ComponentModel.PropertyFilterAttribute.GetHashCode
  - System.ComponentModel.PropertyFilterAttribute.Match(System.Object)
  langs:
  - csharp
  name: PropertyFilterAttribute
  nameWithType: PropertyFilterAttribute
  fullName: System.ComponentModel.PropertyFilterAttribute
  type: Class
  summary: "Określa właściwości, które deskryptory typu, należy podać w szczególności <xref:System.ComponentModel.TypeDescriptor.GetProperties*>metody.</xref:System.ComponentModel.TypeDescriptor.GetProperties*>"
  remarks: "PropertyFilterAttribute [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] obsługuje wewnętrzny mechanizm, który ogranicza liczbę właściwości w typie, które są zwracane przez niestandardowego <xref:System.Windows.DependencyObject>Deskryptor typu.</xref:System.Windows.DependencyObject> Jeśli [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] zostanie znaleziony, deskryptor typu umożliwia zawężenie zakresu zwróconych właściwości. PropertyFilterAttribute różni się od typowego [!INCLUDE[TLA#tla_netframewkattr#plural](~/add/includes/tlasharptla-netframewkattrsharpplural-md.md)] , ponieważ nie można go zastosować do klasy, jak metadanych. Działa mechanizm filtrowania używany przez kod zamiast za pomocą statycznego metadanych."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property)]

      public sealed class PropertyFilterAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)
  id: '#ctor(System.ComponentModel.PropertyFilterOptions)'
  parent: System.ComponentModel.PropertyFilterAttribute
  langs:
  - csharp
  name: PropertyFilterAttribute(PropertyFilterOptions)
  nameWithType: PropertyFilterAttribute.PropertyFilterAttribute(PropertyFilterOptions)
  fullName: System.ComponentModel.PropertyFilterAttribute.PropertyFilterAttribute(PropertyFilterOptions)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref> klasy."
  syntax:
    content: public PropertyFilterAttribute (System.ComponentModel.PropertyFilterOptions filter);
    parameters:
    - id: filter
      type: System.ComponentModel.PropertyFilterOptions
      description: "Opcje, które opisują ten filtr właściwości."
  overload: System.ComponentModel.PropertyFilterAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyFilterAttribute.Default
  id: Default
  parent: System.ComponentModel.PropertyFilterAttribute
  langs:
  - csharp
  name: Default
  nameWithType: PropertyFilterAttribute.Default
  fullName: System.ComponentModel.PropertyFilterAttribute.Default
  type: Field
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Ten element członkowski obsługuje [!INCLUDE[TLA#tla_netframewk](~/add/includes/tlasharptla-netframewk-md.md)] infrastrukturę i nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: public static readonly System.ComponentModel.PropertyFilterAttribute Default;
    return:
      type: System.ComponentModel.PropertyFilterAttribute
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.PropertyFilterAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PropertyFilterAttribute.Equals(Object)
  fullName: System.ComponentModel.PropertyFilterAttribute.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zwraca wartość wskazującą, czy bieżący <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] jest taki sam jak określony obiekt."
  remarks: "Ta implementacja porównuje <xref:System.ComponentModel.PropertyFilterOptions>wartości w każdym <xref:System.ComponentModel.PropertyFilterAttribute>wartość pod kątem równości.</xref:System.ComponentModel.PropertyFilterAttribute> </xref:System.ComponentModel.PropertyFilterOptions> Jeśli <xref:System.ComponentModel.PropertyFilterOptions>są takie same, następnie dwa <xref:System.ComponentModel.PropertyFilterAttribute>wystąpienia są takie same.</xref:System.ComponentModel.PropertyFilterAttribute> </xref:System.ComponentModel.PropertyFilterOptions>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do porównania z tym <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określony <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref> jest taki sam, jak bieżący <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyFilterAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyFilterAttribute.Filter
  id: Filter
  parent: System.ComponentModel.PropertyFilterAttribute
  langs:
  - csharp
  name: Filter
  nameWithType: PropertyFilterAttribute.Filter
  fullName: System.ComponentModel.PropertyFilterAttribute.Filter
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Pobiera opcje filtrowania dla tego <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]."
  remarks: "Wartość filtru ma tę samą wartość, jak podano `filter` argument konstruktora podczas to <xref:System.ComponentModel.PropertyFilterAttribute>został skonstruowany.</xref:System.ComponentModel.PropertyFilterAttribute> Nie istnieje żadne inne sposoby ustawiania wartości filtru."
  syntax:
    content: public System.ComponentModel.PropertyFilterOptions Filter { get; }
    return:
      type: System.ComponentModel.PropertyFilterOptions
      description: "Opcje filtrowania właściwości."
  overload: System.ComponentModel.PropertyFilterAttribute.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyFilterAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.PropertyFilterAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PropertyFilterAttribute.GetHashCode()
  fullName: System.ComponentModel.PropertyFilterAttribute.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zwraca wartość skrótu dla bieżącego <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)]."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość całkowita 32-bitowa."
  overload: System.ComponentModel.PropertyFilterAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyFilterAttribute.Match(System.Object)
  id: Match(System.Object)
  parent: System.ComponentModel.PropertyFilterAttribute
  langs:
  - csharp
  name: Match(Object)
  nameWithType: PropertyFilterAttribute.Match(Object)
  fullName: System.ComponentModel.PropertyFilterAttribute.Match(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zwraca wartość wskazującą, czy właściwość Filtrowanie opcji bieżącego <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref> [!INCLUDE[TLA#tla_netframewkattr](~/add/includes/tlasharptla-netframewkattr-md.md)] spełniają warunków filtrowania właściwość podanego obiektu."
  remarks: "Dla atrybutów, które przechowują flagi, którego dotyczy <xref:System.ComponentModel.PropertyFilterAttribute>, wynik dopasowania może się różnić od <xref:System.ComponentModel.PropertyFilterAttribute.Equals%2A>wynik.</xref:System.ComponentModel.PropertyFilterAttribute.Equals%2A> </xref:System.ComponentModel.PropertyFilterAttribute> Na przykład filtr dla <xref:System.ComponentModel.PropertyFilterOptions>zgodny z filtrem z <xref:System.ComponentModel.PropertyFilterOptions>, ponieważ <xref:System.ComponentModel.PropertyFilterOptions>jest scalenie wszystkich wartości filtru.</xref:System.ComponentModel.PropertyFilterOptions> </xref:System.ComponentModel.PropertyFilterOptions> </xref:System.ComponentModel.PropertyFilterOptions>"
  syntax:
    content: public override bool Match (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Obiekt do porównania. Ten obiekt powinien być <xref href=&quot;System.ComponentModel.PropertyFilterAttribute&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli istnieje dopasowanie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyFilterAttribute.Match*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: PropertyFilterAttribute(PropertyFilterOptions)
  nameWithType: PropertyFilterAttribute.PropertyFilterAttribute(PropertyFilterOptions)
  fullName: System.ComponentModel.PropertyFilterAttribute.PropertyFilterAttribute(PropertyFilterOptions)
- uid: System.ComponentModel.PropertyFilterOptions
  parent: System.ComponentModel
  isExternal: false
  name: PropertyFilterOptions
  nameWithType: PropertyFilterOptions
  fullName: System.ComponentModel.PropertyFilterOptions
- uid: System.ComponentModel.PropertyFilterAttribute.Default
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Default
  nameWithType: PropertyFilterAttribute.Default
  fullName: System.ComponentModel.PropertyFilterAttribute.Default
- uid: System.ComponentModel.PropertyFilterAttribute
  parent: System.ComponentModel
  isExternal: false
  name: PropertyFilterAttribute
  nameWithType: PropertyFilterAttribute
  fullName: System.ComponentModel.PropertyFilterAttribute
- uid: System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: PropertyFilterAttribute.Equals(Object)
  fullName: System.ComponentModel.PropertyFilterAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.PropertyFilterAttribute.Filter
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Filter
  nameWithType: PropertyFilterAttribute.Filter
  fullName: System.ComponentModel.PropertyFilterAttribute.Filter
- uid: System.ComponentModel.PropertyFilterAttribute.GetHashCode
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: PropertyFilterAttribute.GetHashCode()
  fullName: System.ComponentModel.PropertyFilterAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.PropertyFilterAttribute.Match(System.Object)
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Match(Object)
  nameWithType: PropertyFilterAttribute.Match(Object)
  fullName: System.ComponentModel.PropertyFilterAttribute.Match(Object)
- uid: System.ComponentModel.PropertyFilterAttribute.#ctor*
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: PropertyFilterAttribute
  nameWithType: PropertyFilterAttribute.PropertyFilterAttribute
- uid: System.ComponentModel.PropertyFilterAttribute.Equals*
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Equals
  nameWithType: PropertyFilterAttribute.Equals
- uid: System.ComponentModel.PropertyFilterAttribute.Filter*
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Filter
  nameWithType: PropertyFilterAttribute.Filter
- uid: System.ComponentModel.PropertyFilterAttribute.GetHashCode*
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: PropertyFilterAttribute.GetHashCode
- uid: System.ComponentModel.PropertyFilterAttribute.Match*
  parent: System.ComponentModel.PropertyFilterAttribute
  isExternal: false
  name: Match
  nameWithType: PropertyFilterAttribute.Match
