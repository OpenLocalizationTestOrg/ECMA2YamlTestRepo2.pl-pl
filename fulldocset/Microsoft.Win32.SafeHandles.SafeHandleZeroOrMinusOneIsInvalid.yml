### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  id: SafeHandleZeroOrMinusOneIsInvalid
  children:
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  langs:
  - csharp
  name: SafeHandleZeroOrMinusOneIsInvalid
  nameWithType: SafeHandleZeroOrMinusOneIsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  type: Class
  summary: "Udostępnia klasę podstawową dla implementacji bezpieczne dojście Win32, w których wartość 0 lub wartość -1 oznacza nieprawidłowego dojścia."
  remarks: "Ta klasa pochodzi od <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=fullName>klasy.</xref:System.Runtime.InteropServices.SafeHandle?displayProperty=fullName> Opisuje format nieprawidłowego dojścia. Na przykład niektóre uchwytów użyj -1 jako wartość nieprawidłowego dojścia, podczas gdy inne 0. Dalsze pochodnymi tej klasy (na przykład plików lub rejestru dojść) można specialize to dodatkowe. Zobacz <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>klasy przykład klasy, która jest pochodną SafeHandleZeroOrMinusOneIsInvalid.</xref:Microsoft.Win32.SafeHandles.SafeFileHandle>      > [!IMPORTANT] > Ten typ implementuje <xref:System.IDisposable>interfejsu.</xref:System.IDisposable> Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niego. Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A>metody w `try` / `catch` bloku.</xref:System.IDisposable.Dispose%2A> Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak `using` (w języku C#) lub `Using` (w języku Visual Basic). Aby uzyskać więcej informacji, zobacz sekcję &quot;Przy użyciu obiektu który implementuje interfejs IDisposable&quot; w <xref:System.IDisposable>tematu interfejsu.</xref:System.IDisposable>       Jeśli potrzebne jest bezpiecznie opakowywać niezarządzanego zasobu, który nie ma istniejących zarządzany otok, należy użyć klasy SafeHandleZeroOrMinusOneIsInvalid."
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class SafeHandleZeroOrMinusOneIsInvalid : System.Runtime.InteropServices.SafeHandle
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  langs:
  - csharp
  name: SafeHandleZeroOrMinusOneIsInvalid(Boolean)
  nameWithType: SafeHandleZeroOrMinusOneIsInvalid.SafeHandleZeroOrMinusOneIsInvalid(Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.SafeHandleZeroOrMinusOneIsInvalid(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid&quot;> </xref> klasy określenie, czy niezawodnie można zwolnić dojścia."
  syntax:
    content: protected SafeHandleZeroOrMinusOneIsInvalid (bool ownsHandle);
    parameters:
    - id: ownsHandle
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby niezawodnie zwolnić dojścia w fazie finalizacji; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> zapobiegające niezawodnej wersji (niezalecane)."
  overload: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  id: IsInvalid
  parent: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  langs:
  - csharp
  name: IsInvalid
  nameWithType: SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Pobiera wartość wskazującą, czy dojście jest nieprawidłowe."
  remarks: "Środowisko uruchomieniowe języka wspólnego używa tej właściwości w celu określenia, czy finalizacji krytyczne jest wymagana."
  syntax:
    content: public override bool IsInvalid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dojście nie jest nieprawidłowy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.SafeHandle
  isExternal: false
  name: System.Runtime.InteropServices.SafeHandle
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)
  parent: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: SafeHandleZeroOrMinusOneIsInvalid(Boolean)
  nameWithType: SafeHandleZeroOrMinusOneIsInvalid.SafeHandleZeroOrMinusOneIsInvalid(Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.SafeHandleZeroOrMinusOneIsInvalid(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  parent: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  fullName: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: SafeHandleZeroOrMinusOneIsInvalid
  nameWithType: SafeHandleZeroOrMinusOneIsInvalid.SafeHandleZeroOrMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid*
  parent: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: IsInvalid
  nameWithType: SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
