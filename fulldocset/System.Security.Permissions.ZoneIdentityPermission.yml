### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.ZoneIdentityPermission
  id: ZoneIdentityPermission
  children:
  - System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)
  - System.Security.Permissions.ZoneIdentityPermission.Copy
  - System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  - System.Security.Permissions.ZoneIdentityPermission.ToXml
  - System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: ZoneIdentityPermission
  nameWithType: ZoneIdentityPermission
  fullName: System.Security.Permissions.ZoneIdentityPermission
  type: Class
  summary: "Definiuje uprawnienia tożsamości dla strefy, z którego pochodzi kod. Ta klasa nie może być dziedziczona."
  remarks: "To uprawnienie można określić, czy kod wywołujący jest z określonej strefy. Strefy są skonfigurowane zgodnie z opcjami Microsoft Internet Explorer i są mapowane z adresu URL przez program Internet Explorer IInternetSecurityManager i powiązanych interfejsów API. Tylko strefy dokładnego dopasowania są definiowane dla uprawnień; adres URL może należeć tylko do jednej strefie.      -Lokalnej strefy intranetowej: lokalnej strefy intranetowej służy do zawartości znajdującej się w intranecie firmy. Ponieważ serwery są w obrębie firmy zapory, zawartość w intranecie jest przypisana wyższego poziomu zaufania.      -Strefy zaufanych witryn: strefy Zaufane witryny jest używany dla zawartości znajdującej się na witryn, które są uważane za więcej zaufanych lub zaufanego niż innych witryn w Internecie. Użytkownicy mogą korzystać z tej strefy, aby przypisać wyższy poziom zaufania do określonych witryn internetowych. Adresy URL tych zaufanych witryn sieci Web muszą być mapowane do tej strefy przez użytkownika. Domyślnie Lokacje w strefie zaufanych witryn odbierają zaufania wyższe niż w strefie Internet. Użytkownik lub firma musi zmienić poziom zaufania przyznano do tej strefy, jeśli chcą, aby lokacje, że zawiera ona podawana wyższego poziomu zaufania.      -Strefy internetowej: strefy internetowej służy do witryn sieci Web w Internecie, które nie należą do innej strefy. Ustawienia domyślne umożliwiają kod pobrany z te witryny tylko minimalnego dostępu do zasobów na komputerze użytkownika. Witryny sieci Web, które nie są mapowane na inne strefy na automatycznie należą do tej strefy.      -Strefy witryny z ograniczeniami: strefa witryny z ograniczeniami jest używany dla witryn sieci Web, które mają zawartość, która może spowodować, że lub może to być wcześniej spowodowane, problemy podczas pobierania. Tej strefy, można zapobiec kodu pobrane z tych lokacji, z działającego na komputerze użytkownika. Adresy URL tych niezaufanych witryn sieci Web muszą być mapowane do tej strefy przez użytkownika.      -Lokalnej strefy maszyny: strefa Komputer lokalny jest strefą domyślną używany dla zawartości, która istnieje na komputerze użytkownika. Zawartość znalezione na komputerze użytkownika, z wyjątkiem zawartości pamięci podręcznej programu Internet Explorer w systemie lokalnym jest traktowana z bardzo wysokim poziomie zaufania.      > [!IMPORTANT] > Począwszy [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], uprawnienia dotyczące tożsamości nie są używane.   >> W wersji systemu .NET Framework 1.0 i 1.1 wymagania dotyczące uprawnień tożsamości są skuteczne, nawet wtedy, gdy zestaw wywołujący jest w pełni zaufany. Oznacza to mimo że zestaw wywołujący ma pełne zaufanie, zażąda uprawnień tożsamości wynik negatywny, jeśli zestaw nie spełnia kryteriów żądane. W programie .NET Framework w wersji 2.0, zapotrzebowanie na uprawnienia dotyczące tożsamości jest nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Zapewnia to spójność wszystkie uprawnienia, eliminując traktowanie uprawnienia dotyczące tożsamości w szczególnych przypadkach."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ZoneIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: ZoneIdentityPermission(PermissionState)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;> </xref> klasy z określonym <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "Tworzy albo pełni ograniczeniami (`None`) lub `Unrestricted` uprawnienia.      > [!NOTE] > Wersji w programie .NET Framework 1.0 i 1.1, nie może mieć uprawnienia dotyczące tożsamości <xref:System.Security.Permissions.PermissionState>wartość stanu uprawnień.</xref:System.Security.Permissions.PermissionState> W programie .NET Framework w wersji 2.0, uprawnienia dotyczące tożsamości mogą mieć dowolną wartość stanu uprawnień. To oznacza, że w wersji 2.0 lub nowszej, uprawnienia dotyczące tożsamości ma takie samo zachowanie jako uprawnień, które implementują <xref:System.Security.Permissions.IUnrestrictedPermission>interfejsu.</xref:System.Security.Permissions.IUnrestrictedPermission> Oznacza to, że żądanie tożsamości zawsze zakończy się powodzeniem, niezależnie od tego, tożsamość zestawu, jeśli zestaw ma przyznane pełne zaufanie.       W wersji systemu .NET Framework 1.0 i 1.1 wymagania dotyczące uprawnień tożsamości obowiązują, nawet wtedy, gdy zestaw wywołujący jest w pełni zaufany. Oznacza to mimo że zestaw wywołujący ma pełne zaufanie, zażąda uprawnień tożsamości wynik negatywny, jeśli zestaw nie spełnia kryteriów żądane. W programie .NET Framework w wersji 2.0, zapotrzebowanie na uprawnienia dotyczące tożsamości jest nieskuteczne, jeśli zestaw wywołujący ma pełne zaufanie. Zapewnia to spójność wszystkie uprawnienia, eliminując traktowanie uprawnienia dotyczące tożsamości w szczególnych przypadkach."
  example:
  - "The following example shows the use of the ZoneIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.ZoneIdentityPermission#7](~/add/codesnippet/visualbasic/15a7f59e-a46d-4cbf-89a9-_1.vb)]\n [!code-cs[System.Security.Permissions.ZoneIdentityPermission#7](~/add/codesnippet/csharp/15a7f59e-a46d-4cbf-89a9-_1.cs)]"
  syntax:
    content: public ZoneIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Jeden z <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> wartości."
  overload: System.Security.Permissions.ZoneIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> state </code> Parametr nie jest prawidłową wartością <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)
  id: '#ctor(System.Security.SecurityZone)'
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: ZoneIdentityPermission(SecurityZone)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;> </xref> klasy do reprezentowania tożsamości określonej strefy."
  remarks: ''
  example:
  - "The following example shows the use of the ZoneIdentityPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.ZoneIdentityPermission#8](~/add/codesnippet/visualbasic/66b125e0-a7cf-4ec2-89f3-_1.vb)]\n [!code-cs[System.Security.Permissions.ZoneIdentityPermission#8](~/add/codesnippet/csharp/66b125e0-a7cf-4ec2-89f3-_1.cs)]"
  syntax:
    content: public ZoneIdentityPermission (System.Security.SecurityZone zone);
    parameters:
    - id: zone
      type: System.Security.SecurityZone
      description: "Identyfikator strefy."
  overload: System.Security.Permissions.ZoneIdentityPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: ZoneIdentityPermission.Copy()
  fullName: System.Security.Permissions.ZoneIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Tworzy i zwraca identyczne kopię bieżącego uprawnień."
  remarks: "Kopię uprawnienie reprezentuje takie same prawa dostępu do zasobów oryginalnego uprawnienia."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Kopię bieżącego uprawnień."
  overload: System.Security.Permissions.ZoneIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ZoneIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.ZoneIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Rekonstruuje uprawnienie o określonym stanie kodowania XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "Kodowanie XML na potrzeby rekonstrukcji uprawnienia."
  overload: System.Security.Permissions.ZoneIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> esd </code> Parametru nie jest elementem prawidłowego uprawnienia.       - lub - <code> esd </code> parametru numer wersji jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: ZoneIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Tworzy i zwraca uprawnienia, które jest przecięcia bieżące uprawnienia i określony."
  remarks: "Część wspólną dwóch uprawnień jest uprawnienia, które opisano zestaw działań, które opisują one zarówno wspólnych. Tylko zażąda przekazuje oba oryginalnego uprawnienia zostaną spełnione przecięcie.       Część wspólną dwóch identycznych <xref:System.Security.Permissions.ZoneIdentityPermission>obiektów jest to uprawnienie.</xref:System.Security.Permissions.ZoneIdentityPermission> Inne kombinacje powoduje uprawnienia, które jest `null`."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uprawnienie do intersect z uprawnieniami bieżącego. Należy tego samego typu co bieżący uprawnień."
    return:
      type: System.Security.IPermission
      description: "Nowe uprawnienie reprezentuje część wspólną bieżące uprawnienia i określony. Jest to nowe uprawnienie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli część wspólną jest pusta."
  overload: System.Security.Permissions.ZoneIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Parametr nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i nie jest taki sam typ jak bieżące uprawnienia."
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: ZoneIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Określa, czy bieżące uprawnienia podzbiór określonego uprawnienia."
  remarks: "Bieżące uprawnienia jest podzbiorem określonego uprawnienia, jeśli dwa uprawnienia są takie same lub jeśli bieżący uprawnienie reprezentuje <xref:System.Security.SecurityZone>strefy zabezpieczeń.</xref:System.Security.SecurityZone>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uprawnienia, które ma być sprawdzane pod kątem relacji podzbioru. To uprawnienie musi być tego samego typu co bieżący uprawnień."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżące uprawnienia są podzbiorem określonego uprawnienia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Parametr nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, to uprawnienie reprezentuje <xref href=&quot;System.Security.SecurityZone&quot;> </xref> strefy zabezpieczeń i określone uprawnienie nie jest równa bieżące uprawnienia."
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  id: SecurityZone
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: SecurityZone
  nameWithType: ZoneIdentityPermission.SecurityZone
  fullName: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia strefy reprezentowany przez bieżący <xref href=&quot;System.Security.Permissions.ZoneIdentityPermission&quot;> </xref>."
  syntax:
    content: public System.Security.SecurityZone SecurityZone { get; set; }
    return:
      type: System.Security.SecurityZone
      description: "Jeden z <xref href=&quot;System.Security.SecurityZone&quot;> </xref> wartości."
  overload: System.Security.Permissions.ZoneIdentityPermission.SecurityZone*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wartość parametru nie jest prawidłową wartością <xref href=&quot;System.Security.SecurityZone&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: ZoneIdentityPermission.ToXml()
  fullName: System.Security.Permissions.ZoneIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Tworzy kodowania XML uprawnienia i swojego bieżącego stanu."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Kodowanie XML uprawnienia, łącznie z żadnych informacji o stanie."
  overload: System.Security.Permissions.ZoneIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: ZoneIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Tworzy uprawnienia, które łączy bieżące uprawnienia i określony."
  remarks: "Wynik wywołania Unii jest uprawnienia, które reprezentuje strefy zabezpieczeń reprezentowany przez bieżące uprawnienia i określonego uprawnienia. Wszelkie żądania, który przekazuje albo uprawnienie przekazuje ich union. Złożenie dwóch identycznych <xref:System.Security.Permissions.ZoneIdentityPermission>obiektów jest to uprawnienie.</xref:System.Security.Permissions.ZoneIdentityPermission> Unii o wartości null uprawnień i <xref:System.Security.Permissions.ZoneIdentityPermission>uprawnienie jest uprawnień, który nie jest zerowa.</xref:System.Security.Permissions.ZoneIdentityPermission>       Należy pamiętać, że<xref:System.Security.Permissions.ZoneIdentityPermission> reprezentujący obiekt <xref:System.Security.SecurityZone>strefy zabezpieczeń jest traktowane jako wartości null uprawnień i obsługiwane w szczególnych przypadkach.</xref:System.Security.SecurityZone> </xref:System.Security.Permissions.ZoneIdentityPermission> Złożenie <xref:System.Security.Permissions.ZoneIdentityPermission>reprezentujący obiekt <xref:System.Security.SecurityZone>strefy zabezpieczeń i uprawnienia null ma wartość null.</xref:System.Security.SecurityZone> </xref:System.Security.Permissions.ZoneIdentityPermission> Złożenie dwóch uprawnienia tożsamości innej strefie powoduje <xref:System.ArgumentException>wyjątek został zgłoszony, gdy żadna z dwóch uprawnienia reprezentuje <xref:System.Security.SecurityZone>strefy zabezpieczeń.</xref:System.Security.SecurityZone> </xref:System.ArgumentException>"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uprawnienie do łączenia z uprawnieniami bieżącego. Należy tego samego typu co bieżący uprawnień."
    return:
      type: System.Security.IPermission
      description: "Nowe uprawnienie reprezentuje złożenie bieżące uprawnienia i określony."
  overload: System.Security.Permissions.ZoneIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Parametr nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i nie jest taki sam typ jak bieżące uprawnienia.       - lub - dwa uprawnienia nie są takie same, jak i bieżące uprawnienia nie reprezentuje <xref href=&quot;System.Security.SecurityZone&quot;> </xref> strefy zabezpieczeń."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ZoneIdentityPermission(PermissionState)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ZoneIdentityPermission(SecurityZone)
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)
- uid: System.Security.SecurityZone
  parent: System.Security
  isExternal: false
  name: SecurityZone
  nameWithType: SecurityZone
  fullName: System.Security.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermission.Copy
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: ZoneIdentityPermission.Copy()
  fullName: System.Security.Permissions.ZoneIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ZoneIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.ZoneIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: ZoneIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: ZoneIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: SecurityZone
  nameWithType: ZoneIdentityPermission.SecurityZone
  fullName: System.Security.Permissions.ZoneIdentityPermission.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: ZoneIdentityPermission.ToXml()
  fullName: System.Security.Permissions.ZoneIdentityPermission.ToXml()
- uid: System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: ZoneIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.ZoneIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ZoneIdentityPermission
  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission
- uid: System.Security.Permissions.ZoneIdentityPermission.Copy*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: ZoneIdentityPermission.Copy
- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: ZoneIdentityPermission.FromXml
- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: ZoneIdentityPermission.Intersect
- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: ZoneIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: SecurityZone
  nameWithType: ZoneIdentityPermission.SecurityZone
- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: ZoneIdentityPermission.ToXml
- uid: System.Security.Permissions.ZoneIdentityPermission.Union*
  parent: System.Security.Permissions.ZoneIdentityPermission
  isExternal: false
  name: Union
  nameWithType: ZoneIdentityPermission.Union
