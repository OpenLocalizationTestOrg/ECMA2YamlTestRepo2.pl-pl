### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  id: SupportedAddressingMode
  children:
  - System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  - System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  - System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  langs:
  - csharp
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
  type: Enum
  summary: "Określa, czy usługa obsługuje wysyłanie odpowiedzi na adresy anonimowe, tylko adresy nieanonimowych i/lub."
  remarks: "To wyliczenie służy do określania możliwości serwer, który z kolei nakłada zapotrzebowania na swoich klientów.       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]istnieje wiele formantów adresów, służącą do wysyłania wiadomości. Na przykład istnieje logicznym <xref:System.ServiceModel.Channels.MessageHeaders.To%2A>adres docelowy komunikatu, fizyczny (&quot;poprzez&quot;) adres używany przez transport, na którym nasłuchuje usługa, a <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A>adres punktu końcowego, który udostępnia adres punktu końcowego klienta.</xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> </xref:System.ServiceModel.Channels.MessageHeaders.To%2A>       W przypadku najprostszych stronami wymiany wiadomości między sobą tylko go nie jest konieczne oddzielnie Określ tych adresów. Jednak ponieważ wymiany może wymagać innych miejsc docelowych wiadomości, musi być możliwe określenie adresów musi jawnie udostępniane. Nawet między stronami dwóch tę możliwość czasami jest wymagane jako dwa protokołu HTTP z gdzie serwera należy utworzyć własny żądania HTTP. Następujące rodzaje relacje są zdefiniowanych przez wyliczenie SupportedAddressingMode do przechwycenia te wzorce obsługi komunikatów:-anonimowe adresy są najbardziej podstawowej postaci adresowania. Adresowanie anonimowego jest używana po domyślną ścieżkę dla odpowiedzi. Protokół TCP jest transportu komunikacja dwukierunkowa i mogą być wysyłane odpowiedzi na wiadomość TCP do drugiej stronie gniazda, który wysłał oryginalnej wiadomości. Podobnie model żądanie odpowiedź HTTP wysyła odpowiedzi za pośrednictwem kanału odpowiedzi HTTP. Żadna z tych odpowiedzi, wymaga określenia, gdzie będą wiadomości odpowiedzi. Jeśli serwer wymaga anonimowe odpowiedzi od klienta, używa anonimowe wartości wyliczenia. [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] Dostarczane przez system <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding>i <xref:System.ServiceModel.WSHttpBinding>powiązania zawsze używać adresów anonimowych.</xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.BasicHttpBinding> </xref:System.ServiceModel.NetTcpBinding>      -Nieanonimowych adresy są używane podczas wysyłania odpowiedzi wymaga utworzenia nowego kanału komunikacji. [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] Dostarczane przez system <xref:System.ServiceModel.WSDualHttpBinding>powiązania używa adresu nieanonimowych.</xref:System.ServiceModel.WSDualHttpBinding> Z podwójną HTTP klient tworzy żądanie HTTP, aby wysłać wiadomość, a następnie serwera musi utworzyć własną żądania HTTP do wysłania do odpowiedzi. Ponieważ serwer inicjuje wysyłania, musi on mieć określonego punktu końcowego do nawiązania połączenia. Należy podać serwer adres punktu końcowego dla odpowiedzi. Podobnie jeśli usługa musi odpowiadać, jednokierunkowe wiadomość, która odebrała, wymagany jest również nieanonimowych adresów, ponieważ nie jest dostępna dla komunikacji nie kanału zwrotnego. Jeśli serwer wysyła wiadomość ponownie, wymagany jest osobny operacji z używany do wysyłania do pierwszej wiadomości.      -Mieszany jest trzeci formularza adresowania, który łączy anonimowe i nieanonimowych adresów w zależności od tego, który jest wysyłany komunikat. Typowym przykładem adresowania trybu mieszanego jest użycie dedykowanych maszyny do przetwarzania awarii lub potwierdzeń wiadomości. W przypadku standardowej wymiany sekwencji odpowiedzi HTTP lub TCP, odpowiedzi Użyj anonimowe adresowania, ale usterek Użyj nieanonimowych adresowania. Gdy [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] nie zawiera mieszane adresowania funkcji w jednym z powiązań standardowych, istnieje możliwość zapisu kanału, który umożliwia usłudze wysyłania odpowiedzi bezpośrednio na kanału zwrotnego (jeśli jest to adres odpowiedzi jest anonimowy) lub na oddzielnych kanałów (jeśli jest to adres odpowiedzi jest nieanonimowych). W takim przypadku element powiązania kanału służy do setSupportedAddressingMode mieszany."
  syntax:
    content: public enum SupportedAddressingMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  id: Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Serwer obsługuje tylko adresy anonimowe i klientów, musisz podać adres anonimowy odpowiedzi."
  syntax:
    content: Anonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  id: Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Serwer obsługuje zarówno anonimowych, jak i nieanonimowych adresy i może wybrać jednego lub obu klientów."
  syntax:
    content: Mixed
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  id: NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Serwer obsługuje tylko adresy anonimowe i klientów, należy podać adres nieanonimowych odpowiedzi."
  syntax:
    content: NonAnonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  parent: System.ServiceModel.Channels
  isExternal: false
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
