### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerPrefixCollection
  id: HttpListenerPrefixCollection
  children:
  - System.Net.HttpListenerPrefixCollection.Add(System.String)
  - System.Net.HttpListenerPrefixCollection.Clear
  - System.Net.HttpListenerPrefixCollection.Contains(System.String)
  - System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  - System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  - System.Net.HttpListenerPrefixCollection.Count
  - System.Net.HttpListenerPrefixCollection.GetEnumerator
  - System.Net.HttpListenerPrefixCollection.IsReadOnly
  - System.Net.HttpListenerPrefixCollection.IsSynchronized
  - System.Net.HttpListenerPrefixCollection.Remove(System.String)
  - System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: HttpListenerPrefixCollection
  nameWithType: HttpListenerPrefixCollection
  fullName: System.Net.HttpListenerPrefixCollection
  type: Class
  summary: "Reprezentuje kolekcję używany do przechowywania prefiksy jednolity identyfikator zasobów (URI) dla <xref href=&quot;System.Net.HttpListener&quot;> </xref> obiektów."
  remarks: "<xref:System.Net.HttpListener.Prefixes%2A>Właściwość zwraca wystąpienia tej kolekcji.</xref:System.Net.HttpListener.Prefixes%2A>"
  example:
  - "The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its HttpListenerPrefixCollection.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_1_1.cs)]"
  syntax:
    content: 'public class HttpListenerPrefixCollection : System.Collections.Generic.ICollection<string>, System.Collections.Generic.IEnumerable<string>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.String>
  - System.Collections.Generic.IEnumerable<System.String>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: HttpListenerPrefixCollection.Add(String)
  fullName: System.Net.HttpListenerPrefixCollection.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Prefiks identyfikatora URI (Uniform Resource) dodaje do kolekcji."
  remarks: "Ta metoda dodaje prefiks URI do zestawu prefiksy zarządzane przez skojarzony <xref:System.Net.HttpListener>obiektu.</xref:System.Net.HttpListener> Podczas sprawdzania `uriPrefix` aby upewnić się, że jest ona prawidłowa, wielkość liter jest ignorowana.       Ciąg prefiksu identyfikatora URI składa się z schemat (http lub https), hosta, opcjonalnego portu oraz opcjonalnej ścieżki, na przykład &quot;`http://www.contoso.com:8080/customerData``/`&quot;. Prefiks musi kończyć się ukośnikiem (&quot;/&quot;). <xref:System.Net.HttpListener>z prefiks, który najlepiej pasuje do żądanego identyfikatora URI odpowiada na żądanie.</xref:System.Net.HttpListener> Wiele <xref:System.Net.HttpListener>obiektów nie można dodać tego samego prefiksu.</xref:System.Net.HttpListener> <xref:System.Net.HttpListenerException>Jest zgłaszany wyjątek, jeśli <xref:System.Net.HttpListener>dodaje prefiks, który jest już używać.</xref:System.Net.HttpListener> </xref:System.Net.HttpListenerException>       Jeśli port jest określony, można zastąpić host element &quot;`*`&quot; z informacją, że <xref:System.Net.HttpListener>akceptuje żądania wysyłane do portu, jeśli żądanego identyfikatora URI nie jest zgodny z innymi prefiks.</xref:System.Net.HttpListener> Na przykład, aby otrzymywać wszystkie żądania wysyłane do portu 8080, gdy żądanego identyfikatora URI nie jest obsługiwany przez inne <xref:System.Net.HttpListener>, prefiks jest &quot;`http://*:8080``/`&quot;.</xref:System.Net.HttpListener> Podobnie Aby określić, że <xref:System.Net.HttpListener>akceptuje wszystkie żądania wysyłane do portu, Zastąp element hosta z &quot;`+`&quot;character&quot;,`https://+:8080`/&quot;.</xref:System.Net.HttpListener> &quot;`*`&quot;I&quot;`+`&quot; znaki mogą być obecne w prefiksów, które zawierają ścieżki.       Począwszy od .NET 4.5.3 i Windows 10, poddomen symboli wieloznacznych są obsługiwane w prefiksy URI, które są zarządzane przez <xref:System.Net.HttpListener>obiektu.</xref:System.Net.HttpListener> Aby określić poddomeny symboli wieloznacznych, użyj &quot;*&quot; znak jako część nazwy hosta w prefiks identyfikatora URI: na przykład `http://*.foo.com/`i przekazany jako argument do metody HttpListenerPrefixCollection.Add. To będzie działać na .NET 4.5.3 i Windows 10; we wcześniejszych wersjach to wygenerowanie<xref:System.Net.HttpListenerException></xref:System.Net.HttpListenerException>"
  example:
  - "The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/m-system.net.httplistene_16_1.cs)]"
  syntax:
    content: public void Add (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "A <xref:System.String>informacje identyfikatora URI, które są porównywane w żądań przychodzących, które identyfikują.</xref:System.String> Prefiks musi kończyć się ukośnikiem (&quot;/&quot;)."
  overload: System.Net.HttpListenerPrefixCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>uriPrefix</code>nie należy używać schematu http:// lub https://. Są tylko schematy obsługiwane w przypadku <xref href=&quot;System.Net.HttpListener&quot;> </xref> obiektów.       - lub - <code>uriPrefix</code> nie jest poprawnie sformatowany prefiks identyfikatora URI. Upewnij się, że ciąg kończy się znakiem &quot;/&quot;."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.HttpListener&quot;> </xref> Skojarzony z tym kolekcji jest zamknięty."
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Nie można wywołać funkcji systemu Windows. Sprawdź wyjątek <xref:System.Net.HttpListenerException.ErrorCode*>właściwość, aby ustalić przyczynę tego wyjątku.</xref:System.Net.HttpListenerException.ErrorCode*> Ten wyjątek jest zgłaszany, jeśli inny <xref href=&quot;System.Net.HttpListener&quot;> </xref> został już dodany prefiks <code> uriPrefix </code>."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Clear
  id: Clear
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpListenerPrefixCollection.Clear()
  fullName: System.Net.HttpListenerPrefixCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Usuwa wszystkie prefiksy identyfikator URI (Uniform Resource) z kolekcji."
  remarks: "Po wywołaniu tej metody, nie można uruchomić skojarzony <xref:System.Net.HttpListener>bez dodawania nowych prefiksy; to zrobić, jeśli jest zgłaszany wyjątek.</xref:System.Net.HttpListener>"
  example:
  - "The following code example removes all prefixes in an <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#6](~/add/codesnippet/csharp/m-system.net.httplistene_7_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Net.HttpListenerPrefixCollection.Clear*
  exceptions:
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Nie można wywołać funkcji systemu Windows. Sprawdź wyjątek <xref:System.Net.HttpListenerException.ErrorCode*>właściwość, aby ustalić przyczynę tego wyjątku.</xref:System.Net.HttpListenerException.ErrorCode*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.HttpListener&quot;> </xref> Skojarzony z tym kolekcji jest zamknięty."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: HttpListenerPrefixCollection.Contains(String)
  fullName: System.Net.HttpListenerPrefixCollection.Contains(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Zwraca <xref:System.Boolean>wartość, która wskazuje, czy określony prefiks znajduje się w kolekcji.</xref:System.Boolean>"
  remarks: "Określony prefiks musi dokładnie odpowiadać istniejącej wartości."
  example:
  - "The following code example checks to see whether a user-specified prefix is contained in the prefix collection of an <xref:System.Net.HttpListener>.  \n  \n [!code-cs[Net_Listener_Basic#4](~/add/codesnippet/csharp/m-system.net.httplistene_14_1.cs)]"
  syntax:
    content: public bool Contains (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "<xref:System.String>Zawiera prefiks identyfikatora URI (Uniform Resource) do testu.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta kolekcja zawiera określony przez prefiks <code> uriPrefix </code>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(Array,Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Kopiuje zawartość <xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;> </xref> do określonej tablicy."
  remarks: "Tablica musi mieć możliwość zawierają ciągi i nie może być wielowymiarowe."
  example:
  - "The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/m-system.net.httplistene_18_1.cs)]"
  syntax:
    content: public void CopyTo (Array array, int offset);
    parameters:
    - id: array
      type: System.Array
      description: "Jeden wymiarów <xref:System.Array>odbierająca ciągi prefiks identyfikatora URI (Uniform Resource) w tej kolekcji.</xref:System.Array>"
    - id: offset
      type: System.Int32
      description: "Liczony od zera indeks w `array` od rozpoczyna się kopiowanie które."
  overload: System.Net.HttpListenerPrefixCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>ma więcej niż jednym wymiarze."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Ta kolekcja zawiera więcej elementów niż można przechowywać w <code> array </code> zaczynając od <code> offset </code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.HttpListener&quot;> </xref> Skojarzony z tym kolekcji jest zamknięty."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>array</code>Nie można zapisać wartości ciągu."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(String[],Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Kopiuje zawartość <xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;> </xref> tablicę określonego ciągu."
  remarks: "Tablica musi mieć możliwość zawierają ciągi i nie może być wielowymiarowe."
  example:
  - "The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/m-system.net.httplistene_6_1.cs)]"
  syntax:
    content: public void CopyTo (string[] array, int offset);
    parameters:
    - id: array
      type: System.String[]
      description: "Jeden tablicy ciągów wymiarów odbierająca ciągi prefiks identyfikatora URI (Uniform Resource) w tej kolekcji."
    - id: offset
      type: System.Int32
      description: "Liczony od zera indeks w `array` od rozpoczyna się kopiowanie które."
  overload: System.Net.HttpListenerPrefixCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>ma więcej niż jednym wymiarze."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Ta kolekcja zawiera więcej elementów niż można przechowywać w <code> array </code> zaczynając od <code> offset </code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.HttpListener&quot;> </xref> Skojarzony z tym kolekcji jest zamknięty."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Count
  id: Count
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
  fullName: System.Net.HttpListenerPrefixCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera liczbę prefiksy zawartych w kolekcji."
  remarks: ''
  example:
  - "The following code example displays the prefixes in a collection.  \n  \n [!code-cs[Net_Listener_Basic#1](~/add/codesnippet/csharp/p-system.net.httplistene_43_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Zawierający liczby prefiksów w tej kolekcji.</xref:System.Int32>"
  overload: System.Net.HttpListenerPrefixCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Zwraca obiekt, który może służyć do iterowania po kolekcji."
  remarks: "Obiekt, który jest zwracany przez tę metodę jest początkowo ustawiony przed pierwszym elementem w tej kolekcji. Należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A>metody w celu uzyskania dostępu do pierwszego elementu.</xref:System.Collections.IEnumerator.MoveNext%2A> Aby uzyskać dostęp do elementu w bieżącym położeniu, należy wywołać <xref:System.Collections.IEnumerator.Current%2A>Właściwości.</xref:System.Collections.IEnumerator.Current%2A>       Nie należy modyfikować kolekcji podczas korzystania z modułu wyliczającego. Jeśli kolekcja zostanie zmodyfikowana w czasie moduł wyliczający znajduje się w Użyj, próba ustawienia pozycji przez wywołanie metody <xref:System.Collections.IEnumerator.MoveNext%2A>lub <xref:System.Collections.IEnumerator.Reset%2A>powoduje <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Aby uzyskać szczegółowy opis moduły wyliczające, zobacz dokumentację dla <xref:System.Collections.IEnumerator>klasy i <xref:System.Collections.IEnumerable.GetEnumerator%2A>metody.</xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Collections.IEnumerator>"
  example:
  - "The following code example demonstrates enumerating through a collection. Note that the Visual Basic and C# examples use language specific statements to enumerate through the collection instead of retrieving the enumerator.  \n  \n [!code-cs[Net_Listener_Basic#1](~/add/codesnippet/csharp/m-system.net.httplistene_8_1.cs)]"
  syntax:
    content: public System.Collections.Generic.IEnumerator<string> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.String}
      description: "Obiekt, który implementuje <xref:System.Collections.IEnumerator>interfejsu i zapewnia dostęp do ciągów w tej kolekcji.</xref:System.Collections.IEnumerator>"
  overload: System.Net.HttpListenerPrefixCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
  fullName: System.Net.HttpListenerPrefixCollection.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera wartość wskazującą, czy dostęp do kolekcji jest tylko do odczytu."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Zawsze zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
  fullName: System.Net.HttpListenerPrefixCollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera wartość wskazującą, czy dostęp do kolekcji jest zsynchronizowany (wątkowo)."
  remarks: "Wyliczanie za pomocą kolekcji leżą nie jest procedurą wątkowo. Nawet jeśli kolekcja jest synchronizowane, inne wątki mogą modyfikować kolekcji, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki, które w wyniku zmiany wprowadzone przez inne wątki."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Ta właściwość zawsze zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpListenerPrefixCollection.Remove(String)
  fullName: System.Net.HttpListenerPrefixCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Usuwa określony identyfikator URI (Uniform Resource) z listy prefiksy obsługiwane przez <xref href=&quot;System.Net.HttpListener&quot;> </xref> obiektu."
  remarks: "Jeśli `uriPrefix` jest nie istnieje w kolekcji, ta metoda nie działa."
  syntax:
    content: public bool Remove (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "A <xref:System.String>zawierający Prefiks URI do usunięcia.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> uriPrefix </code> został znaleziony w <xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;> </xref> i usunięty; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Nie można wywołać funkcji systemu Windows. Aby ustalić przyczynę wyjątek, sprawdź kod błędu wyjątku."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.HttpListener&quot;> </xref> Skojarzony z tym kolekcji jest zamknięty."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Zwraca obiekt, który może służyć do iterowania po kolekcji."
  remarks: "Obiekt, który jest zwracany przez tę metodę jest początkowo ustawiony przed pierwszym elementem w tej kolekcji. Należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A>metody w celu uzyskania dostępu do pierwszego elementu.</xref:System.Collections.IEnumerator.MoveNext%2A> Aby uzyskać dostęp do elementu w bieżącym położeniu, należy wywołać <xref:System.Collections.IEnumerator.Current%2A>Właściwości.</xref:System.Collections.IEnumerator.Current%2A>       Nie należy modyfikować kolekcji podczas korzystania z modułu wyliczającego. Jeśli kolekcja zostanie zmodyfikowana w czasie moduł wyliczający znajduje się w Użyj, próba ustawienia pozycji przez wywołanie metody <xref:System.Collections.IEnumerator.MoveNext%2A>lub <xref:System.Collections.IEnumerator.Reset%2A>powoduje <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Aby uzyskać szczegółowy opis moduły wyliczające, zobacz dokumentację dla <xref:System.Collections.IEnumerator>klasy i <xref:System.Collections.IEnumerable.GetEnumerator%2A>metody.</xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Collections.IEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Obiekt, który implementuje <xref:System.Collections.IEnumerator>interfejsu i zapewnia dostęp do ciągów w tej kolekcji.</xref:System.Collections.IEnumerator>"
  overload: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.HttpListenerException
  parent: System.Net
  isExternal: false
  name: HttpListenerException
  nameWithType: HttpListenerException
  fullName: System.Net.HttpListenerException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Net.HttpListenerPrefixCollection.Add(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Add(String)
  nameWithType: HttpListenerPrefixCollection.Add(String)
  fullName: System.Net.HttpListenerPrefixCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerPrefixCollection.Clear
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Clear()
  nameWithType: HttpListenerPrefixCollection.Clear()
  fullName: System.Net.HttpListenerPrefixCollection.Clear()
- uid: System.Net.HttpListenerPrefixCollection.Contains(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Contains(String)
  nameWithType: HttpListenerPrefixCollection.Contains(String)
  fullName: System.Net.HttpListenerPrefixCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(Array,Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(String[],Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(String[],Int32)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.HttpListenerPrefixCollection.Count
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
  fullName: System.Net.HttpListenerPrefixCollection.Count
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<String>
  nameWithType: IEnumerator<String>
  fullName: System.Collections.Generic.IEnumerator<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
  fullName: System.Net.HttpListenerPrefixCollection.IsReadOnly
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
  fullName: System.Net.HttpListenerPrefixCollection.IsSynchronized
- uid: System.Net.HttpListenerPrefixCollection.Remove(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Remove(String)
  nameWithType: HttpListenerPrefixCollection.Remove(String)
  fullName: System.Net.HttpListenerPrefixCollection.Remove(String)
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.HttpListenerPrefixCollection.Add*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Add
  nameWithType: HttpListenerPrefixCollection.Add
- uid: System.Net.HttpListenerPrefixCollection.Clear*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Clear
  nameWithType: HttpListenerPrefixCollection.Clear
- uid: System.Net.HttpListenerPrefixCollection.Contains*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Contains
  nameWithType: HttpListenerPrefixCollection.Contains
- uid: System.Net.HttpListenerPrefixCollection.CopyTo*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo
  nameWithType: HttpListenerPrefixCollection.CopyTo
- uid: System.Net.HttpListenerPrefixCollection.Count*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpListenerPrefixCollection.GetEnumerator
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
- uid: System.Net.HttpListenerPrefixCollection.Remove*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Remove
  nameWithType: HttpListenerPrefixCollection.Remove
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator
