### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeDescriptor
  id: TypeDescriptor
  children:
  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
  - System.ComponentModel.TypeDescriptor.ComObjectType
  - System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  - System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  - System.ComponentModel.TypeDescriptor.InterfaceType
  - System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  - System.ComponentModel.TypeDescriptor.Refreshed
  - System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  langs:
  - csharp
  name: TypeDescriptor
  nameWithType: TypeDescriptor
  fullName: System.ComponentModel.TypeDescriptor
  type: Class
  summary: "Zawiera informacje dotyczące właściwości składnika, takie jak jego atrybuty, właściwości i zdarzeń. Ta klasa nie może być dziedziczona."
  remarks: "Platforma .NET Framework zapewnia dwa sposoby metadanych dla typu: odbicie interfejsu API w <xref:System.Reflection?displayProperty=fullName>przestrzeni nazw i klasy deskryptor typu.</xref:System.Reflection?displayProperty=fullName> Odbicie jest mechanizm ogólne dostępne dla wszystkich typów, ponieważ jego foundation jest określana w <xref:System.Object.GetType%2A>metody <xref:System.Object>klasy</xref:System.Object> głównym</xref:System.Object.GetType%2A> Informacje, które zwraca dla typu nie jest rozszerzalny, że nie można zmodyfikować po kompilacji typu docelowego. Aby uzyskać więcej informacji, zobacz Tematy w [odbicia](~/add/includes/ajax-current-ext-md.md).       Z kolei deskryptora typu jest mechanizm kontroli extensible składników: tych klas, które implementują <xref:System.ComponentModel.IComponent>interfejsu.</xref:System.ComponentModel.IComponent> W odróżnieniu od odbicia go nie kontrolują dla metod. Deskryptor typu można przedłużyć dynamicznie przez kilka usług dostępnych przez składnik docelowy <xref:System.ComponentModel.Component.Site%2A>.</xref:System.ComponentModel.Component.Site%2A> W poniższej tabeli przedstawiono te usługi.      | Nazwa usługi | Opis elementu |   |------------------|-----------------|   | <xref:System.ComponentModel.IExtenderProvider>| Włącza inną klasę, takich jak <xref:System.Windows.Forms.ToolTip>, aby zapewnić dodatkowe właściwości składnika. |   | <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>| Włącza inny obiekt do zmodyfikowania metadanych standardowe udostępnianym przez składnik. |   | <xref:System.ComponentModel.ICustomTypeDescriptor>| Włącza całkowicie i dynamicznie określić własne metadane, zastępując mechanizmu kontroli standardowe deskryptora typu klasy. |       Rozszerzalność podał deskryptora typu umożliwia czasu projektowania reprezentację składnika różnią się od jego środowiska wykonawczego odzwierciedla rzeczywistego, co sprawia, że deskryptora typu jest przydatne w przypadku tworzenia czasu projektowania infrastruktury.</xref:System.ComponentModel.ICustomTypeDescriptor> </xref:System.ComponentModel.Design.ITypeDescriptorFilterService> </xref:System.Windows.Forms.ToolTip> </xref:System.ComponentModel.IExtenderProvider>       Wszystkie metody to deskryptora typu `static`. Nie można utworzyć wystąpienia tej klasy, a ta klasa nie może być dziedziczona.       Można ustawić właściwości i zdarzenia wartości dwa różne sposoby: określ je w klasie, składnika lub je zmienić w czasie projektowania. Można ustawić te wartości na dwa sposoby, przeciążonej metody deskryptora typu trwa dwa różne typy parametrów: typu klasy lub wystąpienia obiektu.       Gdy chcesz uzyskać dostęp do informacji deskryptor typu dla wystąpienia obiektu, należy użyć metody, która odwołuje się do składnika. Użyć metody, która odwołuje się do typu klasy tylko wtedy, gdy nie masz wystąpienie obiektu.       Właściwości i zdarzenia są buforowane przez deskryptor typu dla danej szybkości. Zwykle są one stałe dla okresu istnienia obiektu. Jednak dostawcy rozszerzeń i projektantów zmienić zbiór właściwości obiektu. Jeśli jest dostępna, a następnie <xref:System.ComponentModel.TypeDescriptor.Refresh%2A>Metoda musi zostać wywołana w celu aktualizacji pamięci podręcznej.</xref:System.ComponentModel.TypeDescriptor.Refresh%2A>"
  syntax:
    content: public sealed class TypeDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  id: AddAttributes(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddAttributes(Object,Attribute[])
  nameWithType: TypeDescriptor.AddAttributes(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Dodaje atrybuty klasy do obiektu docelowego składnika."
  remarks: "Metoda AddAttributes dodaje atrybuty klasy określonego wystąpienia składnika. Ponieważ jest to typowe wymagane aplikacje przy użyciu [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] okna Projektant formularzy systemu Windows i właściwości, ta metoda zapewnia skrót tworząc Dostawca opisu typu, który scala podane atrybuty z atrybutami, które już istnieją w klasie. Wartość zwracana jest Dostawca opisu typu, które zostało użyte do dodania atrybutów. Ten dostawca później mogą zostać przekazane do <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metodą podczas dodane atrybuty nie są już potrzebne.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, Attribute[] attributes);
    parameters:
    - id: instance
      type: System.Object
      description: "Wystąpienie elementu docelowego."
    - id: attributes
      type: System.Attribute[]
      description: "Tablica <xref:System.Attribute>obiektów do dodania do klasy składnika.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "Nowo utworzony <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> które zostało użyte do dodania określonych atrybutów."
  overload: System.ComponentModel.TypeDescriptor.AddAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Co najmniej jeden z parametrów jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  id: AddAttributes(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddAttributes(Type,Attribute[])
  nameWithType: TypeDescriptor.AddAttributes(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Dodaje atrybuty klasy na typ docelowy składnika."
  remarks: "Metoda AddAttributes dodaje atrybuty klasy na określony typ składnika. Ponieważ jest to typowe wymagane aplikacje przy użyciu [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] okna Projektant formularzy systemu Windows i właściwości, ta metoda zapewnia skrót tworząc Dostawca opisu typu, który scala podane atrybuty z atrybutami, które już istnieją w klasie. Wartość zwracana jest Dostawca opisu typu, które zostało użyte do dodania atrybutów. Ten dostawca później mogą zostać przekazane do <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metodą podczas dodane atrybuty nie są już potrzebne.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, Attribute[] attributes);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
    - id: attributes
      type: System.Attribute[]
      description: "Tablica <xref:System.Attribute>obiektów do dodania do klasy składnika.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "Nowo utworzony <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> które zostało użyte do dodania określonych atrybutów."
  overload: System.ComponentModel.TypeDescriptor.AddAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Co najmniej jeden z parametrów jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  id: AddEditorTable(System.Type,System.Collections.Hashtable)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddEditorTable(Type,Hashtable)
  nameWithType: TypeDescriptor.AddEditorTable(Type,Hashtable)
  fullName: System.ComponentModel.TypeDescriptor.AddEditorTable(Type,Hashtable)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Dodaje tabeli edytora dla edytora danego typu podstawowego."
  remarks: "Metoda AddEditorTable dodaje tabeli edytora dla edytora danego typu podstawowego. Zazwyczaj edytory są określone jako metadanych składnika. Jednak jeśli brak metadanych dla edytorze żądany podstawowy typ znajduje się na składnik skojarzony <xref:System.ComponentModel.TypeDescriptor>wyszukiwania tabeli edytora dla typu edytora, jeśli znajduje się jeden.</xref:System.ComponentModel.TypeDescriptor> Po dodaniu deskryptor typu tabeli edytor nie może zostać usunięty, a właścicielem deskryptor typu. Deskryptor typu swobodnie może wprowadzać modyfikacje do tej tabeli.       Format tabeli Edytor używa typy danych jako klucze i edytory jako wartości. Wartość części wpisu w tabeli reprezentuje wystąpienie edytora. Może mieć jedną z trzech wartości. Zawiera ciąg, deskryptor typu jest założenie, że jest to pełna nazwa typu i następnie obciążenia typ obiektu. Jeśli zawiera on typ, uzyskanie Edytor będzie można utworzyć wystąpienia tego typu. Na koniec część wartość może zawierać wystąpienia faktycznym edytorem. Deskryptor typu rozpoznaje edytora do wystąpienia, zapisze wystąpienia powrót do tabeli do użytku w przyszłości."
  syntax:
    content: public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "Typ podstawowy edytor można dodać tabeli edytora. Jeśli tabela już istnieje dla tego typu, ta metoda będzie nic nie rób."
    - id: table
      type: System.Collections.Hashtable
      description: "The <xref href=&quot;System.Collections.Hashtable&quot;></xref> to add."
  overload: System.ComponentModel.TypeDescriptor.AddEditorTable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddProvider(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Dodaje dostawcę opisu typu dla pojedynczego wystąpienia składnika."
  remarks: "Metoda Procedura AddProvider dodaje Dostawca opisu typu, aby dostaw typ informacji dla pojedynczego wystąpienia składnika. Jeśli dostawca jest dodawany przez tej metody, dostawca <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>nie będzie można wywołać metody, ponieważ wystąpienie już istnieje.</xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>       Tej metody nie są zachowywane twardych odwołania do składnika, więc nie zapobiega składnika z finalizowanie.       Istnieje możliwość dodania wielu dostawców opisu typu dla tego samego typu lub obiektu. W takim przypadku pierwszy dostawca opisu typu napotkano udostępniający informacje o typie będzie służyć wyłącznie. Ponieważ dostawców typów informacje są przechowywane w stosie, ostatniego dostawcę dodane będzie pierwszego zapytanie. To zachowanie umożliwia Procedura AddProvider i <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>metody mają być używane do wypychania i pop wpisz opis dostawcy zgodnie z wymaganiami w specyficznych scenariuszach.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>       Jeśli się powiedzie, ta metoda wywołuje metodę <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29>Metoda `instance` parametru.</xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29>      > [!NOTE] > Dwie wersje tej metody dostarczyło wyników przy użyciu różnych zakresów. <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>Metody pobierającej <xref:System.Object>parametru dotyczy tylko to pojedyncze wystąpienie składnika określonego.</xref:System.Object> </xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> Z kolei innych przeciążenia, który przyjmuje <xref:System.Type>parametr ma wpływ na wszystkie wystąpienia elementu opisanego przez tego typu.</xref:System.Type>       Użyj <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metodę, jeśli należy wywołać pochodzących z częściowo zaufanego kodu.</xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "The <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref> to add."
    - id: instance
      type: System.Object
      description: "Wystąpienie elementu docelowego."
  overload: System.ComponentModel.TypeDescriptor.AddProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub oba parametry są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddProvider(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Dodaje dostawcę opisu typu dla klasy składnika."
  remarks: "Metoda Procedura AddProvider dodaje Dostawca opisu typu tej informacji o typie dostaw dla określonej klasy, klasy pochodne i wszystkich wystąpień tego typu.      > [!NOTE] > `type` Parametr może być dowolnego typu, w tym interfejsie. Na przykład, aby zapewnić typu niestandardowego i informacje o wystąpieniu dla wszystkich składników, należy określić `typeof(IComponent)`. Przekazywanie `typeof(object)` wywoła dostawcy do dostarczania informacji o typie dla wszystkich typów.       Ta metoda nie przechowuje twardych odwołania do dowolnego obiektu, nie zapobiega obiektów z finalizowanie.       Istnieje możliwość dodania wielu dostawców opisu typu dla tego samego typu lub obiektu. W takim przypadku pierwszy dostawca opisu typu napotkano udostępniający informacje o typie będzie służyć wyłącznie. Ponieważ dostawców typów informacje są przechowywane w stosie, ostatniego dostawcę dodane będą proszeni pierwsza z nich. To zachowanie umożliwia Procedura AddProvider i <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>metody mają być używane do wypychania i pop wpisz opis dostawcy zgodnie z wymaganiami w specyficznych scenariuszach.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>       Jeśli się powiedzie, ta metoda wywołuje metodę <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29>Metoda `type` parametru.</xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29>      > [!NOTE] > Dwie wersje tej metody dostarczyło wyników przy użyciu różnych zakresów. <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>Metody pobierającej <xref:System.Object>parametru dotyczy tylko to pojedyncze wystąpienie składnika określonego.</xref:System.Object> </xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> Z kolei innych przeciążenia, który przyjmuje <xref:System.Type>parametr ma wpływ na wszystkie wystąpienia elementu opisanego przez tego typu.</xref:System.Type>       Użyj <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metodę, jeśli należy wywołać pochodzących z częściowo zaufanego kodu.</xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "The <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref> to add."
    - id: type
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.AddProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub oba parametry są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddProviderTransparent(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Dodaje dostawcę opisu typu dla pojedynczego wystąpienia składnika."
  remarks: "Ta metoda może być wywołana z częściowo zaufanego kodu. Jeśli <xref:System.Security.Permissions.TypeDescriptorPermissionFlags>jest zdefiniowany, wywołujący można zarejestrować dostawcę dla określonego wystąpienia jeśli jej typ jest również częściowo zaufany.</xref:System.Security.Permissions.TypeDescriptorPermissionFlags>       Użyj <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metodę, jeśli nie należy wywoływać z częściowo zaufanego kodu.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "The <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref> to add."
    - id: instance
      type: System.Object
      description: "Wystąpienie elementu docelowego."
  overload: System.ComponentModel.TypeDescriptor.AddProviderTransparent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub oba parametry są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddProviderTransparent(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Dodaje dostawcę opisu typu dla klasy składnika."
  remarks: "Ta metoda może być wywołana z częściowo zaufanego kodu. Jeśli <xref:System.Security.Permissions.TypeDescriptorPermissionFlags>jest zdefiniowana, wywołujący można zarejestrować dostawcę dla określonego typu, jeśli jest również częściowo zaufany.</xref:System.Security.Permissions.TypeDescriptorPermissionFlags>       Użyj <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metodę, jeśli nie należy wywoływać z częściowo zaufanego kodu.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "The <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref> to add."
    - id: type
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.AddProviderTransparent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub oba parametry są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
  id: ComNativeDescriptorHandler
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: ComNativeDescriptorHandler
  nameWithType: TypeDescriptor.ComNativeDescriptorHandler
  fullName: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera lub Ustawia dostawcę dla składnika modelu COM (Object) informacje o typie dla składnika docelowego."
  remarks: "Właściwość ComNativeDescriptorHandler i <xref:System.ComponentModel.IComNativeDescriptorHandler>interfejsu są przestarzałe.</xref:System.ComponentModel.IComNativeDescriptorHandler> Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>Właściwości.</xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>"
  syntax:
    content: public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }
    return:
      type: System.ComponentModel.IComNativeDescriptorHandler
      description: "<xref href=&quot;System.ComponentModel.IComNativeDescriptorHandler&quot;> </xref> Wystąpienia reprezentującej COM typ informacji o dostawcy."
  overload: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.ComObjectType
  id: ComObjectType
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: ComObjectType
  nameWithType: TypeDescriptor.ComObjectType
  fullName: System.ComponentModel.TypeDescriptor.ComObjectType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera typ obiektu składnika modelu COM (Object) reprezentowanego przez składnik docelowy."
  remarks: "Właściwość ComObjectType zwraca typ, który można przekazać do <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metody do zdefiniowania dostawcy opis typów dla typów COM.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>       Właściwość ComObjectType i innych elementów członkowskich w tej klasie zastępują funkcjonalność w przestarzałe <xref:System.ComponentModel.IComNativeDescriptorHandler>interfejsu.</xref:System.ComponentModel.IComNativeDescriptorHandler> Do zaimplementowania warstwie mapowania między obiektu COM i <xref:System.ComponentModel.TypeDescriptor>, Dodaj <xref:System.ComponentModel.TypeDescriptionProvider>do obsługi typu ComObjectType.</xref:System.ComponentModel.TypeDescriptionProvider> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public static Type ComObjectType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Reprezentowany przez ten składnik obiektu modelu COM lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> dla obiektów COM z systemem innym niż.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.ComObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  id: CreateAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateAssociation(Object,Object)
  nameWithType: TypeDescriptor.CreateAssociation(Object,Object)
  fullName: System.ComponentModel.TypeDescriptor.CreateAssociation(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tworzy skojarzenie podstawowe i pomocnicze między dwoma obiektami."
  remarks: "Metoda CreateAssociation tworzy skojarzenie między podstawowym i pomocniczym obiektu. Po utworzeniu skojarzenia projektanta lub inny mechanizm filtrowania można dodać właściwości, które kierować do obu obiektu do obiektu podstawowego zestawu właściwości. Po wywołaniu właściwości względem obiektu podstawowego <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>Metoda zostanie wywołana w celu rozwiązania wystąpienie rzeczywistego obiektu powiązanej z jej parametr typu.</xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>       A <xref:System.WeakReference>służy do obsługi skojarzenie obiektu podstawowego i pomocniczego; w związku z tym ta metoda nie uniemożliwiają albo obiekt sfinalizowana, a następnie odzyskać przez wyrzucanie elementów bezużytecznych.</xref:System.WeakReference>"
  syntax:
    content: public static void CreateAssociation (object primary, object secondary);
    parameters:
    - id: primary
      type: System.Object
      description: "Podstawowy <xref:System.Object>.</xref:System.Object>"
    - id: secondary
      type: System.Object
      description: "Pomocniczy <xref:System.Object>.</xref:System.Object>"
  overload: System.ComponentModel.TypeDescriptor.CreateAssociation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub oba parametry są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>primary</code>jest równa <code>secondary</code>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
  id: CreateDesigner(System.ComponentModel.IComponent,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateDesigner(IComponent,Type)
  nameWithType: TypeDescriptor.CreateDesigner(IComponent,Type)
  fullName: System.ComponentModel.TypeDescriptor.CreateDesigner(IComponent,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tworzy wystąpienie projektanta skojarzone z określonego składnika i określonego typu projektanta."
  remarks: "Jeśli ta metoda nie może znaleźć prawidłowej <xref:System.ComponentModel.DesignerAttribute>, wyszukiwania przez nią w hierarchii klasy projektanta.</xref:System.ComponentModel.DesignerAttribute> Jeśli nie można odnaleźć projektanta w hierarchii klas, zwraca `null`."
  syntax:
    content: public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> , Który określa składnik do skojarzenia z projektanta."
    - id: designerBaseType
      type: System.Type
      description: "A <xref:System.Type>reprezentujący typ designer, aby utworzyć.</xref:System.Type>"
    return:
      type: System.ComponentModel.Design.IDesigner
      description: "<xref href=&quot;System.ComponentModel.Design.IDesigner&quot;> </xref> Projektanta dla tego składnika, czyli wystąpienia lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> w przypadku nieodnalezienia projektanta."
  overload: System.ComponentModel.TypeDescriptor.CreateDesigner*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  id: CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateEvent(Type,EventDescriptor,Attribute[])
  nameWithType: TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tworzy nowy deskryptor zdarzeń, który jest identyczny deskryptora istniejące zdarzenia po upływie istniejące <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref>."
  syntax:
    content: public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "Typ składnika, do których chcesz utworzyć nowe zdarzenie."
    - id: oldEventDescriptor
      type: System.ComponentModel.EventDescriptor
      description: "Istniejące informacje zdarzeń."
    - id: attributes
      type: System.Attribute[]
      description: "Nowe atrybuty."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "Nowy <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> który został scalony atrybutów określonych metadanych z istniejących atrybutów metadanych."
  overload: System.ComponentModel.TypeDescriptor.CreateEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  id: CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateEvent(Type,String,Type,Attribute[])
  nameWithType: TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tworzy nowy deskryptor zdarzeń nie jest taka sama jak istniejącego deskryptora zdarzeń dynamiczne generowanie informacje deskryptora z określonego zdarzenia w typie."
  syntax:
    content: public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "Typ składnika zdarzenia znajduje się."
    - id: name
      type: System.String
      description: "Nazwa zdarzenia."
    - id: type
      type: System.Type
      description: "Typ delegata, który obsługuje zdarzenie."
    - id: attributes
      type: System.Attribute[]
      description: "Atrybuty dla tego zdarzenia."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "<xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> Który jest powiązany z typem."
  overload: System.ComponentModel.TypeDescriptor.CreateEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateInstance(IServiceProvider,Type,Type[],Object[])
  nameWithType: TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])
  fullName: System.ComponentModel.TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tworzy obiekt, który można zastąpić inny typ danych."
  remarks: "CreateInstance — metoda umożliwia wyszukiwanie <xref:System.ComponentModel.TypeDescriptionProvider>skojarzonego z określonym `objectType` — typ danych.</xref:System.ComponentModel.TypeDescriptionProvider> Ta metoda po raz pierwszy próbuje uzyskać od dostawcy opis typów `provider` parametru. Jeśli to się nie powiedzie, wewnętrzny tabel wyszukiwania dla dostawcy (te wpisy zostały utworzone przy użyciu poprzednich wywołań <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> W przypadku odnalezienia dostawcę, ta metoda będzie delegowane Wywołanie utworzenia tego obiektu."
  syntax:
    content: public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "Dostawcy usług, która zapewnia <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> usługi. Ten parametr może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: objectType
      type: System.Type
      description: "<xref:System.Type>Obiektu do utworzenia.</xref:System.Type>"
    - id: argTypes
      type: System.Type[]
      description: "Tablica opcjonalne typy parametrów, które mają być przekazane do konstruktora obiektu. Ten parametr może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub tablicą o zerowej długości."
    - id: args
      type: System.Object[]
      description: "Tablica opcjonalne parametry do przekazania do konstruktora obiektu. Jeśli nie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, liczba elementów musi być taka sama jak `argTypes`."
    return:
      type: System.Object
      description: "Wystąpienie typu danych substitute, jeśli skojarzone <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> zostanie odnaleziony; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeDescriptor.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>objectType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, or <code>args</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when <code>argTypes</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argTypes</code>i <code>args</code> mają różne liczby elementów."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  id: CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateProperty(Type,PropertyDescriptor,Attribute[])
  nameWithType: TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tworzy nowy deskryptor właściwości z istniejącej deskryptora właściwości, za pomocą określonego istniejącego <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> i atrybut tablicy."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "<xref:System.Type>Składnika, że właściwość jest elementem członkowskim.</xref:System.Type>"
    - id: oldPropertyDescriptor
      type: System.ComponentModel.PropertyDescriptor
      description: "Istniejące deskryptor właściwości."
    - id: attributes
      type: System.Attribute[]
      description: "Nowe atrybuty dla tej właściwości."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "Nowy <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> z atrybutami określonych metadanych scalone z istniejących atrybutów metadanych."
  overload: System.ComponentModel.TypeDescriptor.CreateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  id: CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateProperty(Type,String,Type,Attribute[])
  nameWithType: TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Tworzy i dynamicznie wiąże deskryptora właściwości typu przy użyciu nazwy określonej właściwości, typ i atrybut tablicy."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "<xref:System.Type>Składnika, że właściwość jest elementem członkowskim.</xref:System.Type>"
    - id: name
      type: System.String
      description: "Nazwa właściwości."
    - id: type
      type: System.Type
      description: "<xref:System.Type>Właściwości.</xref:System.Type>"
    - id: attributes
      type: System.Attribute[]
      description: "Nowe atrybuty dla tej właściwości."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> który jest powiązany z określonego typu i z atrybutami określonych metadanych scalane z istniejących atrybutów metadanych."
  overload: System.ComponentModel.TypeDescriptor.CreateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  id: GetAssociation(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetAssociation(Type,Object)
  nameWithType: TypeDescriptor.GetAssociation(Type,Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAssociation(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca wystąpienie typu skojarzonego z określonym obiektem podstawowego."
  remarks: "Jeśli wykonano poprzednie skojarzenia dla `type` przy użyciu parametru <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>metody, a następnie metoda GetAssociation zwraca prawidłowy obiekt dodatkowej do wywołania dla żądanego typu.</xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> W przeciwnym razie GetAssociation wyszukuje zgodny projektanta dla `type` i zwraca projektanta, jeśli został znaleziony. Ta metoda nie zwraca `null`.       A <xref:System.WeakReference>służy do obsługi skojarzenie obiektu podstawowego i pomocniczego; w związku z tym ta metoda nie uniemożliwiają obiekt podstawowy lub pomocniczy sfinalizowana, a następnie odzyskać przez wyrzucanie elementów bezużytecznych.</xref:System.WeakReference>"
  syntax:
    content: public static object GetAssociation (Type type, object primary);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
    - id: primary
      type: System.Object
      description: "Podstawowy obiekt skojarzenia."
    return:
      type: System.Object
      description: "Wystąpienia typu dodatkowej, który został skojarzony z obiektem głównej, jeśli skojarzenie istnieje; w przeciwnym razie <code> primary </code> Jeśli nie zostanie określony skojarzenie istnieje."
  overload: System.ComponentModel.TypeDescriptor.GetAssociation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub oba parametry są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  id: GetAttributes(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetAttributes(Object)
  nameWithType: TypeDescriptor.GetAttributes(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję atrybutów dla określonego składnika."
  remarks: "Atrybutów zwracanych w wyniku <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>Metoda może być modyfikowany dynamicznie z oryginalnego składnika źródła wyświetlania przez dostawców rozszerzeń (<xref:System.ComponentModel.IExtenderProvider>), filtrować usług (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>) i atrybutu filtrów.</xref:System.ComponentModel.Design.ITypeDescriptorFilterService> </xref:System.ComponentModel.IExtenderProvider> </xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>       Podczas definiowania atrybutu niestandardowego o <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>ustawioną `true`, konieczne jest przesłonięcie <xref:System.Attribute.TypeId%2A?displayProperty=fullName>Właściwości w celu zapewnienia unikatowości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> Jeśli wszystkie wystąpienia atrybut są unikatowe, Zastąp <xref:System.Attribute.TypeId%2A?displayProperty=fullName>do zwrócenia tożsamości obiektu atrybut.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Jeśli tylko niektóre wystąpienia atrybut są unikatowe, zwrócona wartość <xref:System.Attribute.TypeId%2A?displayProperty=fullName>w przypadkach, który zwróci równości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Na przykład niektóre atrybuty mają parametru konstruktora, który działa jako unikatowy klucz. Dla tych atrybutów, zwróć wartość parametru konstruktora z <xref:System.Attribute.TypeId%2A?displayProperty=fullName>Właściwości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName>      > [!NOTE] > Domyślna implementacja <xref:System.Attribute.TypeId%2A?displayProperty=fullName>zwraca tożsamości typu niezależnie od wartości <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>Właściwości.</xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> </xref:System.Attribute.TypeId%2A?displayProperty=fullName> Aby można było zwracać wiele wystąpień <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>atrybutu z <xref:System.ComponentModel.AttributeCollection>, atrybut musi zastąpić <xref:System.Attribute.TypeId%2A?displayProperty=fullName>Właściwości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.ComponentModel.AttributeCollection> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>"
  example:
  - For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.
  syntax:
    content: public static System.ComponentModel.AttributeCollection GetAttributes (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik, dla którego chcesz pobrać atrybutów."
    return:
      type: System.ComponentModel.AttributeCollection
      description: "<xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> Zawierających atrybuty dla składnika. Jeśli <code> component </code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ta metoda zwraca pustą kolekcję."
  overload: System.ComponentModel.TypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  id: GetAttributes(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetAttributes(Type)
  nameWithType: TypeDescriptor.GetAttributes(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję atrybutów dla określonego typu składnika."
  remarks: "Ta wersja tej metody należy wywołać tylko wtedy, gdy nie masz wystąpienie obiektu.       W przypadku atrybutów z <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>ustawioną `true`, kolekcji atrybutów usuwa zduplikowane wystąpienia.</xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> Są to wystąpień, w którym <xref:System.Attribute.TypeId%2A?displayProperty=fullName>właściwość zwraca równe wartości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName>       Podczas definiowania atrybutu niestandardowego o <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>ustawioną `true`, konieczne jest przesłonięcie <xref:System.Attribute.TypeId%2A?displayProperty=fullName>Właściwości w celu zapewnienia unikatowości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> Jeśli wszystkie wystąpienia atrybut są unikatowe, Zastąp <xref:System.Attribute.TypeId%2A?displayProperty=fullName>do zwrócenia tożsamości obiektu atrybut.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Jeśli tylko niektóre wystąpienia atrybut są unikatowe, zwrócona wartość <xref:System.Attribute.TypeId%2A?displayProperty=fullName>w przypadkach, który zwróci równości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Na przykład niektóre atrybuty mają parametru konstruktora, który działa jako unikatowy klucz. Dla tych atrybutów, zwróć wartość parametru konstruktora z <xref:System.Attribute.TypeId%2A?displayProperty=fullName>Właściwości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName>      > [!NOTE] > Domyślna implementacja <xref:System.Attribute.TypeId%2A?displayProperty=fullName>zwraca tożsamości typu niezależnie od wartości <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>Właściwości.</xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> </xref:System.Attribute.TypeId%2A?displayProperty=fullName> Aby można było zwracać wiele wystąpień <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>atrybutu z <xref:System.ComponentModel.AttributeCollection>, atrybut musi zastąpić <xref:System.Attribute.TypeId%2A?displayProperty=fullName>Właściwości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.ComponentModel.AttributeCollection> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>"
  syntax:
    content: public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
    return:
      type: System.ComponentModel.AttributeCollection
      description: "<xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> z atrybutami dla typu składnika. Jeżeli kondycja składnika jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ta metoda zwraca pustą kolekcję."
  overload: System.ComponentModel.TypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  id: GetAttributes(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetAttributes(Object,Boolean)
  nameWithType: TypeDescriptor.GetAttributes(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję atrybutów dla określonego składnika i wartość Boolean wskazująca, że utworzono deskryptora typu niestandardowego."
  remarks: "Atrybutów zwracanych w wyniku <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>Metoda może być modyfikowany dynamicznie z oryginalnego źródła składników wyświetlania przez dostawców rozszerzeń (<xref:System.ComponentModel.IExtenderProvider>), filtrować usług (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>) i atrybutu filtrów.</xref:System.ComponentModel.Design.ITypeDescriptorFilterService> </xref:System.ComponentModel.IExtenderProvider> </xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>       Podczas definiowania atrybutu niestandardowego o <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>ustawioną `true`, konieczne jest przesłonięcie <xref:System.Attribute.TypeId%2A?displayProperty=fullName>Właściwości w celu zapewnienia unikatowości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> Jeśli wszystkie wystąpienia atrybut są unikatowe, Zastąp <xref:System.Attribute.TypeId%2A?displayProperty=fullName>do zwrócenia tożsamości obiektu atrybut.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Jeśli tylko niektóre wystąpienia atrybut są unikatowe, zwrócona wartość <xref:System.Attribute.TypeId%2A?displayProperty=fullName>w przypadkach, który zwróci równości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Na przykład niektóre atrybuty mają parametru konstruktora, który działa jako unikatowy klucz. Dla tych atrybutów, zwróć wartość parametru konstruktora z <xref:System.Attribute.TypeId%2A?displayProperty=fullName>Właściwości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName>      > [!NOTE] > Domyślna implementacja <xref:System.Attribute.TypeId%2A?displayProperty=fullName>zwraca tożsamości typu niezależnie od wartości <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>Właściwości.</xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> </xref:System.Attribute.TypeId%2A?displayProperty=fullName> Aby można było zwracać wiele wystąpień <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>atrybutu z <xref:System.ComponentModel.AttributeCollection>, atrybut musi zastąpić <xref:System.Attribute.TypeId%2A?displayProperty=fullName>Właściwości.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.ComponentModel.AttributeCollection> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>"
  syntax:
    content: public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik, dla którego chcesz pobrać atrybutów."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby użyć linii bazowej zestawu atrybutów z deskryptora typu niestandardowego, jeśli `component` jest typu <xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.AttributeCollection
      description: "<xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> z atrybutami dla składnika. Jeżeli kondycja składnika jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ta metoda zwraca pustą kolekcję."
  overload: System.ComponentModel.TypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  id: GetClassName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetClassName(Object)
  nameWithType: TypeDescriptor.GetClassName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca nazwę klasy dla określonego składnika przy użyciu domyślnego deskryptora typu."
  remarks: "Zwykle ta metoda zwraca pełny <xref:System.Type>nazwę `component` typ parametru.</xref:System.Type> Na przykład nazwa klasy dla przycisku jest &quot;System.Windows.Forms.Button&quot;. Jeśli `component` implementuje <xref:System.ComponentModel.ICustomTypeDescriptor>, może on zwrócić alternatywną nazwę.</xref:System.ComponentModel.ICustomTypeDescriptor>       Ta metoda jest odpowiednikiem przeciążona <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29>metody z drugim parametrem `false`.</xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29>"
  syntax:
    content: public static string GetClassName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "<xref:System.Object>Dla którego ma nazwę klasy.</xref:System.Object>"
    return:
      type: System.String
      description: "A <xref:System.String>zawierający nazwę klasy dla określonego składnika.</xref:System.String>"
  overload: System.ComponentModel.TypeDescriptor.GetClassName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  id: GetClassName(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetClassName(Type)
  nameWithType: TypeDescriptor.GetClassName(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca nazwę klasy dla określonego typu."
  remarks: "Ta metoda używa deskryptora typu niestandardowego pamięci podręcznej dla określonego typu do odnajdywania nazwy klasy skojarzone."
  syntax:
    content: public static string GetClassName (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
    return:
      type: System.String
      description: "A <xref:System.String>zawierający nazwę klasy dla typu określonego składnika.</xref:System.String>"
  overload: System.ComponentModel.TypeDescriptor.GetClassName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>componentType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  id: GetClassName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetClassName(Object,Boolean)
  nameWithType: TypeDescriptor.GetClassName(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca nazwę klasy dla określonego składnika przy użyciu deskryptora typu niestandardowego."
  remarks: "Zwykle ta metoda zwraca pełny <xref:System.Type>nazwę `component` typ parametru.</xref:System.Type> Na przykład nazwa klasy dla przycisku jest &quot;System.Windows.Forms.Button&quot;. Jeśli `component` implementuje parametru <xref:System.ComponentModel.ICustomTypeDescriptor>, może on zwrócić alternatywną nazwę.</xref:System.ComponentModel.ICustomTypeDescriptor>"
  syntax:
    content: public static string GetClassName (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "<xref:System.Object>Dla którego ma nazwę klasy.</xref:System.Object>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>uwzględnienie informacji opisu typu niestandardowego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "A <xref:System.String>zawierający nazwę klasy dla określonego składnika.</xref:System.String>"
  overload: System.ComponentModel.TypeDescriptor.GetClassName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  id: GetComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetComponentName(Object)
  nameWithType: TypeDescriptor.GetComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca nazwę określonego składnika przy użyciu domyślnego deskryptora typu."
  remarks: "Zwykle ta metoda zwraca nazwę lokacji składnika, jeśli taka istnieje. Na przykład nazwa klasy dla przycisku jest &quot;System.Windows.Forms.Button&quot;.       Ta metoda jest odpowiednikiem przeciążone <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29>metody z drugim parametrem `false`.</xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29>       Ta metoda jest używana w czasie projektowania pobrać nazwy wystąpienia składnika."
  syntax:
    content: public static string GetComponentName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "<xref:System.Object>Dla którego ma nazwę klasy.</xref:System.Object>"
    return:
      type: System.String
      description: "A <xref:System.String>zawierającą nazwę określonego składnika lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , jeśli nie została żadna nazwa składnika.</xref:System.String>"
  overload: System.ComponentModel.TypeDescriptor.GetComponentName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  id: GetComponentName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetComponentName(Object,Boolean)
  nameWithType: TypeDescriptor.GetComponentName(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca nazwę określonego składnika przy użyciu deskryptora typu niestandardowego."
  remarks: "Ta metoda jest używana w czasie projektowania pobrać nazwy wystąpienia składnika. Zwykle ta metoda zwraca nazwę lokacji składnika, jeśli taka istnieje. Na przykład nazwa klasy dla przycisku jest &quot;System.Windows.Forms.Button&quot;. Jeśli zaimplementowano składnik <xref:System.ComponentModel.ICustomTypeDescriptor>interfejsu, może on zwrócić alternatywną nazwę.</xref:System.ComponentModel.ICustomTypeDescriptor>"
  syntax:
    content: public static string GetComponentName (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "<xref:System.Object>Dla którego ma nazwę klasy.</xref:System.Object>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>uwzględnienie informacji opisu typu niestandardowego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Nazwa klasy dla określonego składnika lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , jeśli nie została żadna nazwa składnika."
  overload: System.ComponentModel.TypeDescriptor.GetComponentName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  id: GetConverter(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetConverter(Object)
  nameWithType: TypeDescriptor.GetConverter(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca konwerter typów dla typu określonego składnika."
  remarks: "Ta metoda lokalizuje konwertera odpowiedniego typu, wyszukując <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> Nie można znaleźć <xref:System.ComponentModel.TypeConverterAttribute>, aż do znalezienia typem pierwotnym wzdłuż hierarchii klasę podstawową klasy.</xref:System.ComponentModel.TypeConverterAttribute>       Ta metoda jest odpowiednikiem przeciążona <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>metody z drugim parametrem `false`.</xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>"
  example:
  - For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public static System.ComponentModel.TypeConverter GetConverter (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać konwerter."
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> określonego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetConverter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  id: GetConverter(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetConverter(Type)
  nameWithType: TypeDescriptor.GetConverter(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca konwerter typu dla określonego typu."
  remarks: "Ta wersja tej metody należy wywołać tylko wtedy, gdy nie masz wystąpienie obiektu.       Ta metoda sprawdza konwertera odpowiedniego typu, wyszukując <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> Nie można znaleźć <xref:System.ComponentModel.TypeConverterAttribute>, aż do znalezienia typem pierwotnym wzdłuż hierarchii klasę podstawową klasy.</xref:System.ComponentModel.TypeConverterAttribute>"
  syntax:
    content: public static System.ComponentModel.TypeConverter GetConverter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> dla określonego typu."
  overload: System.ComponentModel.TypeDescriptor.GetConverter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  id: GetConverter(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetConverter(Object,Boolean)
  nameWithType: TypeDescriptor.GetConverter(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca konwerter typów dla typu określonego składnika deskryptora typu niestandardowego."
  remarks: "Ta metoda sprawdza odpowiedniego typu konwertera przez próby znalezienia <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> Nie można znaleźć <xref:System.ComponentModel.TypeConverterAttribute>, aż do znalezienia typem pierwotnym wzdłuż hierarchii klasę podstawową klasy.</xref:System.ComponentModel.TypeConverterAttribute>"
  syntax:
    content: public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać konwerter."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>uwzględnienie informacji opisu typu niestandardowego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> określonego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetConverter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  id: GetDefaultEvent(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent(Object)
  nameWithType: TypeDescriptor.GetDefaultEvent(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca domyślne zdarzenie dla określonego składnika."
  remarks: "Ta metoda jest odpowiednikiem przeciążone <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29>metody z drugim parametrem `false`.</xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29>"
  syntax:
    content: public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać zdarzenia."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "<xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> Ze zdarzeniem domyślne lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli brak zdarzeń."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  id: GetDefaultEvent(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent(Type)
  nameWithType: TypeDescriptor.GetDefaultEvent(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca domyślne zdarzenie dla określonego typu składnika."
  remarks: "Ta wersja tej metody należy wywołać tylko wtedy, gdy nie masz wystąpienie obiektu."
  syntax:
    content: public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
    return:
      type: System.ComponentModel.EventDescriptor
      description: "<xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> Ze zdarzeniem domyślne lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli brak zdarzeń."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  id: GetDefaultEvent(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent(Object,Boolean)
  nameWithType: TypeDescriptor.GetDefaultEvent(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca domyślne zdarzenie dla składnika o deskryptora typu niestandardowego."
  syntax:
    content: public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać zdarzenia."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>uwzględnienie informacji opisu typu niestandardowego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "<xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> Ze zdarzeniem domyślne lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli brak zdarzeń."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  id: GetDefaultProperty(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty(Object)
  nameWithType: TypeDescriptor.GetDefaultProperty(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca domyślną właściwość dla określonego składnika."
  remarks: "Jeśli `component` parametr jest `null`, ta metoda zwraca `null`."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać domyślnej właściwości dla."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> z właściwością domyślną lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , jeśli nie ma żadnych właściwości."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultProperty*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  id: GetDefaultProperty(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty(Type)
  nameWithType: TypeDescriptor.GetDefaultProperty(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca domyślną właściwość dla określonego typu składnika."
  remarks: "Ta wersja tej metody należy wywołać tylko wtedy, gdy nie masz wystąpienie obiektu.       Jeśli `componentType` parametr jest `null`, ta metoda zwraca `null`."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "<xref:System.Type>Reprezentujący klasę, aby pobrać for. właściwości</xref:System.Type>"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> z właściwością domyślną lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , jeśli nie ma żadnych właściwości."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  id: GetDefaultProperty(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty(Object,Boolean)
  nameWithType: TypeDescriptor.GetDefaultProperty(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca domyślną właściwość dla określonego składnika deskryptora typu niestandardowego."
  remarks: "Jeśli `component` parametr jest `null`, ta metoda zwraca `null`."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać domyślnej właściwości dla."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>uwzględnienie informacji opisu typu niestandardowego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> z właściwością domyślną lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , jeśli nie ma żadnych właściwości."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultProperty*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  id: GetEditor(System.Object,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEditor(Object,Type)
  nameWithType: TypeDescriptor.GetEditor(Object,Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera edytor z określonym typem bazowym dla określonego składnika."
  remarks: "Typ `editorBaseType` jest zwykle <xref:System.Drawing.Design.UITypeEditor>, ale można również używać innych typów (na przykład <xref:System.ComponentModel.ComponentEditor>i <xref:System.ComponentModel.InstanceCreationEditor>).</xref:System.ComponentModel.InstanceCreationEditor> </xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>       Można zdefiniować wiele edytorów dla właściwości. Ta metoda umożliwia wybranie edytor, którego chcesz użyć."
  syntax:
    content: public static object GetEditor (object component, Type editorBaseType);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać edytora."
    - id: editorBaseType
      type: System.Type
      description: "A <xref:System.Type>reprezentujący typ bazowy edytor, który ma zostać znaleziony.</xref:System.Type>"
    return:
      type: System.Object
      description: "Wystąpienie edytora, która może być rzutowana na typ określony Edytor lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> w przypadku nieodnalezienia nie Edytor żądanego typu."
  overload: System.ComponentModel.TypeDescriptor.GetEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>or <code>editorBaseType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  id: GetEditor(System.Type,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEditor(Type,Type)
  nameWithType: TypeDescriptor.GetEditor(Type,Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Type,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca edytora określonego typu podstawowego dla określonego typu."
  remarks: "Typ `editorBaseType` jest zwykle <xref:System.Drawing.Design.UITypeEditor>, ale można również używać innych typów (na przykład <xref:System.ComponentModel.ComponentEditor>i <xref:System.ComponentModel.InstanceCreationEditor>).</xref:System.ComponentModel.InstanceCreationEditor> </xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>       Można zdefiniować wiele edytorów dla typu. Ta metoda umożliwia wybierz ten, który ma być używany.       Ta wersja tej metody należy wywołać tylko wtedy, gdy nie masz wystąpienie obiektu."
  syntax:
    content: public static object GetEditor (Type type, Type editorBaseType);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
    - id: editorBaseType
      type: System.Type
      description: "A <xref:System.Type>reprezentujący typ bazowy Edytor próbujesz odnaleźć.</xref:System.Type>"
    return:
      type: System.Object
      description: "Wystąpienie obiektu edytora, które mogą być rzutowane na danego typu podstawowego lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> w przypadku nieodnalezienia nie Edytor żądanego typu."
  overload: System.ComponentModel.TypeDescriptor.GetEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>editorBaseType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  id: GetEditor(System.Object,System.Type,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEditor(Object,Type,Boolean)
  nameWithType: TypeDescriptor.GetEditor(Object,Type,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca edytora określonego typu podstawowego i deskryptora typu niestandardowego dla określonego składnika."
  remarks: "Typ `editorBaseType` jest zwykle <xref:System.Drawing.Design.UITypeEditor>, ale można również używać innych typów (na przykład <xref:System.ComponentModel.ComponentEditor>i <xref:System.ComponentModel.InstanceCreationEditor>).</xref:System.ComponentModel.InstanceCreationEditor> </xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>       Można zdefiniować wiele edytorów dla właściwości. Ta metoda umożliwia wybranie edytor, którego chcesz użyć."
  syntax:
    content: public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać edytora."
    - id: editorBaseType
      type: System.Type
      description: "A <xref:System.Type>reprezentujący typ bazowy edytor, który ma zostać znaleziony.</xref:System.Type>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "Flaga wskazująca, czy informacje o opisie typu niestandardowego należy traktować jako."
    return:
      type: System.Object
      description: "Wystąpienie edytora, która może być rzutowana na typ określony Edytor lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> w przypadku nieodnalezienia nie Edytor żądanego typu."
  overload: System.ComponentModel.TypeDescriptor.GetEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>or <code>editorBaseType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  id: GetEvents(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Object)
  nameWithType: TypeDescriptor.GetEvents(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję zdarzeń dla określonego składnika."
  remarks: "Pobiera kolekcję zdarzeń, które danego `component` wystąpienia parametru zapewnia. Ta kolekcja może się różnić od zestaw zdarzeń, który zawiera klasę. Jeśli `component` parametru jest ulokowany, lokacji można dodać lub usunąć dodatkowe zdarzenia.       Jeśli `component` jest `null`, zwracana jest pustej kolekcji.       Kolejność zwracana Kolekcja nie jest gwarantowana identyczne między wywołaniami, więc zawsze kolejność przed użyciem."
  example:
  - For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać zdarzenia."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> Zdarzenia dla tego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  id: GetEvents(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Type)
  nameWithType: TypeDescriptor.GetEvents(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję zdarzeń dla określonego typu składnika."
  remarks: "Ta wersja tej metody należy wywołać tylko wtedy, gdy nie masz wystąpienie obiektu.       Jeśli `componentType` parametr jest `null`, zwracany jest pustej kolekcji.       Kolejność zwracana Kolekcja nie jest gwarantowana identyczne między wywołaniami, więc zawsze kolejność przed użyciem."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> Zdarzenia dla tego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  id: GetEvents(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Object,Attribute[])
  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję zdarzeń dla określonego składnika przy użyciu określonej tablicy atrybutów jako filtr."
  remarks: "Zdarzenia `component` parametru może się różnić od zdarzenia klasy, ponieważ lokacji można dodawać i usuwać zdarzenia, jeśli `component` parametru jest ulokowany.       `attributes` Tablica mogą mieć różnych <xref:System.Type>i <xref:System.Attribute>obiektów.</xref:System.Attribute> </xref:System.Type> Filtrowanie jest definiowana za pomocą następujących reguł: — <xref:System.Type>jest traktowany jako symbolu wieloznacznego, zdarzenie, dla którego jest on zgodny <xref:System.Type>w jego zestaw atrybutów.</xref:System.Type> </xref:System.Type>      — Jeśli zdarzenie nie ma <xref:System.Attribute>do tej samej klasy zdarzenia nie znajduje się w tablicy zwrócony.</xref:System.Attribute>      — Jeśli ten atrybut jest wystąpieniem <xref:System.Attribute>klasy, zdarzenia musi być w pełni zgodne lub nie znajduje się w tablicy zwrócony.</xref:System.Attribute>      -Jeśli <xref:System.Attribute>zostało określone wystąpienie i jest zdarzenie domyślne, nawet jeśli dostępny jest wystąpienie nie zostało uwzględnione w zwracana tablica <xref:System.Attribute>w zdarzeniu.</xref:System.Attribute> </xref:System.Attribute>       Jeśli `component` jest `null`, zwracany jest pustej kolekcji.       Kolejność zwracana Kolekcja nie jest gwarantowana identyczne między wywołaniami, więc zawsze kolejność przed użyciem."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać zdarzenia."
    - id: attributes
      type: System.Attribute[]
      description: "Tablica typu <xref:System.Attribute>służąca jako filtr.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> Ze zdarzeniami, spełniających określone atrybuty dla tego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  id: GetEvents(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Object,Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję zdarzeń dla określonego składnika deskryptora typu niestandardowego."
  remarks: "Ta metoda pobiera zbierania zdarzeń, które danego `component` wystąpienia parametru zapewnia. To może się różnić od zestaw zdarzeń, który zawiera klasę. Jeśli `component` parametru jest ulokowany, lokacji można dodać lub usunąć dodatkowe zdarzenia.       Jeśli `component` jest `null`, zwracany jest pustej kolekcji.       Kolejność zwracana Kolekcja nie jest gwarantowana identyczne między wywołaniami, więc zawsze kolejność przed użyciem."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać zdarzenia."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>uwzględnienie informacji opisu typu niestandardowego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> Zdarzenia dla tego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  id: GetEvents(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Type,Attribute[])
  nameWithType: TypeDescriptor.GetEvents(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję zdarzeń dla określonego typu składnika przy użyciu określonej tablicy atrybutów jako filtr."
  remarks: "Ta wersja tej metody należy wywołać tylko wtedy, gdy nie masz wystąpienie obiektu.       `attributes` Tablicy parametrów mogą mieć różnych <xref:System.Type>i <xref:System.Attribute>obiektów.</xref:System.Attribute> </xref:System.Type> Filtrowanie jest definiowana za pomocą następujących reguł: — <xref:System.Type>jest traktowany jako symbolu wieloznacznego, zdarzenie, dla którego jest on zgodny <xref:System.Type>w jego zestaw atrybutów.</xref:System.Type> </xref:System.Type>      — Jeśli zdarzenie nie ma <xref:System.Attribute>do tej samej klasy zdarzenia nie znajduje się w tablicy zwrócony.</xref:System.Attribute>      — Jeśli ten atrybut jest wystąpieniem <xref:System.Attribute>klasy, zdarzenia musi być w pełni zgodne lub nie znajduje się w tablicy zwrócony.</xref:System.Attribute>      -Jeśli <xref:System.Attribute>zostało określone wystąpienie i jest zdarzenie domyślne, nawet jeśli dostępny jest wystąpienie nie zostało uwzględnione w zwracana tablica <xref:System.Attribute>w zdarzeniu.</xref:System.Attribute> </xref:System.Attribute>       Jeśli `componentType` parametr jest `null`, zwracany jest pustej kolekcji.       Kolejność zwracana Kolekcja nie jest gwarantowana identyczne między wywołaniami, więc zawsze kolejność przed użyciem."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
    - id: attributes
      type: System.Attribute[]
      description: "Tablica typu <xref:System.Attribute>służąca jako filtr.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> Ze zdarzeniami, spełniających określone atrybuty dla tego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  id: GetEvents(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Object,Attribute[],Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[],Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[],Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję zdarzeń dla określonego składnika przy użyciu określonej tablicy atrybutów jako filtr i deskryptora typu niestandardowego."
  remarks: "Zdarzenia `component` parametru może się różnić od zdarzenia klasy, ponieważ lokacji można dodawać i usuwać zdarzenia, jeśli `component` parametru jest ulokowany.       `attributes` Tablicy parametrów mogą mieć różnych <xref:System.Type>i <xref:System.Attribute>obiektów.</xref:System.Attribute> </xref:System.Type> Filtrowanie jest definiowana za pomocą następujących reguł: — <xref:System.Type>jest traktowany jako symbolu wieloznacznego, zdarzenie, dla którego jest on zgodny <xref:System.Type>w jego zestaw atrybutów.</xref:System.Type> </xref:System.Type>      — Jeśli zdarzenie nie ma <xref:System.Attribute>do tej samej klasy zdarzenia nie znajduje się w tablicy zwrócony.</xref:System.Attribute>      — Jeśli ten atrybut jest wystąpieniem <xref:System.Attribute>klasy, zdarzenia musi być w pełni zgodne lub nie znajduje się w tablicy zwrócony.</xref:System.Attribute>      -Jeśli <xref:System.Attribute>zostało określone wystąpienie i jest zdarzenie domyślne, nawet jeśli dostępny jest wystąpienie nie zostało uwzględnione w zwracana tablica <xref:System.Attribute>w zdarzeniu.</xref:System.Attribute> </xref:System.Attribute>       Jeśli `component` jest `null`, zwracany jest pustej kolekcji.       Kolejność zwracana Kolekcja nie jest gwarantowana identyczne między wywołaniami, więc zawsze kolejność przed użyciem."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać zdarzenia."
    - id: attributes
      type: System.Attribute[]
      description: "Tablica typu <xref:System.Attribute>do użycia jako filtr.</xref:System.Attribute>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>uwzględnienie informacji opisu typu niestandardowego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> Ze zdarzeniami, spełniających określone atrybuty dla tego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  id: GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetFullComponentName(Object)
  nameWithType: TypeDescriptor.GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetFullComponentName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca w pełni kwalifikowana nazwa składnika."
  remarks: "W wielu przypadkach metoda GetFullComponentName zwróci taką samą wartość jak <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A>metody.</xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> Jednak jeśli składnik znajduje się w kontenerze zagnieżdżone lub ma inne semantykę zagnieżdżone, mogą zwracać inną nazwę FQDN."
  syntax:
    content: public static string GetFullComponentName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "<xref href=&quot;System.ComponentModel.Component&quot;> </xref> Można znaleźć nazwy dla."
    return:
      type: System.String
      description: "W pełni kwalifikowana nazwa określonego składnika lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli składnik nie ma nazwy."
  overload: System.ComponentModel.TypeDescriptor.GetFullComponentName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  id: GetProperties(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Object)
  nameWithType: TypeDescriptor.GetProperties(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję właściwości dla określonego składnika."
  remarks: "Właściwości składnika może się różnić od właściwości klasy, ponieważ lokacji można dodać lub usunąć właściwości, jeśli składnik jest ulokowany.       Jeśli `component` parametr jest `null`, zwracany jest pustej kolekcji.       Kolejność zwracana Kolekcja nie jest gwarantowana identyczne między wywołaniami, więc zawsze kolejność przed użyciem."
  example:
  - "The following code example demonstrates the use of the GetProperties method to access the properties of a control. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.  \n  \n [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/add/codesnippet/visualbasic/m-system.componentmodel._38_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerServices#8](~/add/codesnippet/csharp/m-system.componentmodel._38_1.cs)]"
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać właściwości."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> z właściwości dla określonego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  id: GetProperties(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Type)
  nameWithType: TypeDescriptor.GetProperties(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję właściwości dla określonego typu składnika."
  remarks: "Ta wersja tej metody należy wywołać tylko wtedy, gdy nie masz wystąpienie obiektu.       Jeśli `componentType` parametr jest `null`, zwracany jest pustej kolekcji.       Kolejność zwracana Kolekcja nie jest gwarantowana identyczne między wywołaniami, więc zawsze kolejność przed użyciem."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "<xref:System.Type>Reprezentujący składnik można pobrać właściwości for.</xref:System.Type>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> z właściwości dla określonego typu składnika."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  id: GetProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Object,Attribute[])
  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję właściwości dla określonego składnika przy użyciu określonej tablicy atrybutów jako filtr."
  remarks: "Właściwości `component` parametru może się różnić od właściwości klasy, ponieważ lokacji można dodać lub usunąć właściwości, jeśli `component` parametru jest ulokowany.       `attributes` Tablicy parametrów służy do filtrowania tablicy. Filtrowanie jest definiowana za pomocą następujących reguł: — Jeśli nie ma właściwości <xref:System.Attribute>do tej samej klasy właściwość nie jest objęta zwracana tablica.</xref:System.Attribute>      — Jeśli ten atrybut jest wystąpieniem <xref:System.Attribute>klasy, właściwość musi być w pełni zgodne lub nie znajduje się w tablicy zwrócony.</xref:System.Attribute>      -Jeśli <xref:System.Attribute>zostało określone wystąpienie i jest właściwością domyślną, nawet jeśli dostępny jest wystąpienie nie zostało uwzględnione w zwracana tablica <xref:System.Attribute>we właściwości.</xref:System.Attribute> </xref:System.Attribute>      -Jeśli `attributes` ma domyślny atrybut GetProperties — metoda zgodna przypadku, gdy właściwość nie ma atrybut zastosowany.       Jeśli `component` jest `null`, zwracany jest pustej kolekcji.       Kolejność zwracana Kolekcja nie jest gwarantowana identyczne między wywołaniami, więc zawsze kolejność przed użyciem."
  example:
  - "The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.  \n  \n [!code-cs[PropertyTabExample#2](~/add/codesnippet/csharp/0d160e65-8e23-4623-ad72-_1.cs)]\n [!code-cpp[PropertyTabExample#2](~/add/codesnippet/cpp/0d160e65-8e23-4623-ad72-_1.cpp)]\n [!code-vb[PropertyTabExample#2](~/add/codesnippet/visualbasic/0d160e65-8e23-4623-ad72-_1.vb)]"
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać właściwości."
    - id: attributes
      type: System.Attribute[]
      description: "Tablica typu <xref:System.Attribute>do użycia jako filtr.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> z właściwościami, spełniających określone atrybuty dla określonego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  id: GetProperties(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Object,Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję właściwości dla określonego składnika przy użyciu domyślnego deskryptora typu."
  remarks: "Właściwości `component` parametru może się różnić od właściwości klasy, ponieważ lokacji można dodać lub usunąć właściwości, jeśli `component` parametru jest ulokowany.       Jeśli `component` jest `null`, zwracany jest pustej kolekcji.       Kolejność zwracana Kolekcja nie jest gwarantowana identyczne między wywołaniami, więc zawsze kolejność przed użyciem."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać właściwości."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby nie należy wziąć pod uwagę informacje o opisie typu niestandardowego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> z właściwości dla określonego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  id: GetProperties(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Type,Attribute[])
  nameWithType: TypeDescriptor.GetProperties(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję właściwości dla określonego typu składnika przy użyciu określonej tablicy atrybutów jako filtr."
  remarks: "Ta wersja tej metody należy wywołać tylko wtedy, gdy nie masz wystąpienie obiektu.       `attributes` Tablicy parametrów służy do filtrowania tablicy. Filtrowanie jest definiowana za pomocą następujących reguł: — Jeśli nie ma właściwości <xref:System.Attribute>do tej samej klasy właściwość nie jest objęta zwracana tablica.</xref:System.Attribute>      — Jeśli ten atrybut jest wystąpieniem <xref:System.Attribute>klasy, właściwość musi być w pełni zgodne lub nie znajduje się w tablicy zwrócony.</xref:System.Attribute>      -Jeśli <xref:System.Attribute>zostało określone wystąpienie i jest właściwością domyślną, nawet jeśli dostępny jest wystąpienie nie zostało uwzględnione w zwracana tablica <xref:System.Attribute>we właściwości.</xref:System.Attribute> </xref:System.Attribute>      -Jeśli `attributes` ma domyślny atrybut GetProperties — metoda zgodna przypadku, gdy właściwość nie ma atrybut zastosowany.       Jeśli `componentType` parametr jest `null`, zwracany jest pustej kolekcji.       Kolejność zwracana Kolekcja nie jest gwarantowana identyczne między wywołaniami, więc zawsze kolejność przed użyciem."
  example:
  - "The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.  \n  \n [!code-cs[PropertyTabExample#2](~/add/codesnippet/csharp/af245915-0d17-4307-99bf-_1.cs)]\n [!code-cpp[PropertyTabExample#2](~/add/codesnippet/cpp/af245915-0d17-4307-99bf-_1.cpp)]\n [!code-vb[PropertyTabExample#2](~/add/codesnippet/visualbasic/af245915-0d17-4307-99bf-_1.vb)]"
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
    - id: attributes
      type: System.Attribute[]
      description: "Tablica typu <xref:System.Attribute>do użycia jako filtr.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> z właściwościami, spełniających określone atrybuty dla tego typu składnika."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  id: GetProperties(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Object,Attribute[],Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[],Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[],Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca kolekcję właściwości dla określonego składnika przy użyciu określonej tablicy atrybutów jako filtr i deskryptora typu niestandardowego."
  remarks: "Właściwości `component` może się różnić od właściwości klasy, ponieważ lokacji można dodać lub usunąć właściwości, jeśli `component` jest ulokowany.       `attributes` Tablicy parametrów służy do filtrowania tablicy. Filtrowanie jest definiowana za pomocą następujących reguł: — Jeśli nie ma właściwości <xref:System.Attribute>do tej samej klasy właściwość nie jest objęta zwracana tablica.</xref:System.Attribute>      — Jeśli ten atrybut jest wystąpieniem <xref:System.Attribute>klasy, właściwość musi być w pełni zgodne lub nie znajduje się w tablicy zwrócony.</xref:System.Attribute>      -Jeśli <xref:System.Attribute>zostało określone wystąpienie i jest właściwością domyślną, nawet jeśli dostępny jest wystąpienie nie zostało uwzględnione w zwracana tablica <xref:System.Attribute>we właściwości.</xref:System.Attribute> </xref:System.Attribute>      -Jeśli `attributes` ma domyślny atrybut GetProperties — metoda zgodna przypadku, gdy właściwość nie ma atrybut zastosowany.       Jeśli `component` parametr jest `null`, zwracany jest pustej kolekcji.       Kolejność zwracana Kolekcja nie jest gwarantowana identyczne między wywołaniami, więc zawsze kolejność przed użyciem."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik można pobrać właściwości."
    - id: attributes
      type: System.Attribute[]
      description: "Tablica typu <xref:System.Attribute>do użycia jako filtr.</xref:System.Attribute>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>uwzględnienie informacji opisu typu niestandardowego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> ze zdarzeniami, spełniających określone atrybuty dla określonego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>jest między procesami obiektu zdalnego."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  id: GetProvider(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProvider(Object)
  nameWithType: TypeDescriptor.GetProvider(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca dostawcy opisu typu dla określonego składnika."
  remarks: "<xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>Metoda zawsze zwraca typ dostawcy opis.</xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> Nawet domyślna <xref:System.ComponentModel.TypeDescriptor>Implementacja jest oparty na <xref:System.ComponentModel.TypeDescriptionProvider>.</xref:System.ComponentModel.TypeDescriptionProvider> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Wystąpienie elementu docelowego."
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "A <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> skojarzone z określonego składnika."
  overload: System.ComponentModel.TypeDescriptor.GetProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  id: GetProvider(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProvider(Type)
  nameWithType: TypeDescriptor.GetProvider(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca typ dostawcy opisu dla określonego typu."
  remarks: "<xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>Metoda zawsze zwraca typ dostawcy opis.</xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> Nawet domyślna <xref:System.ComponentModel.TypeDescriptor>Implementacja jest oparty na <xref:System.ComponentModel.TypeDescriptionProvider>.</xref:System.ComponentModel.TypeDescriptionProvider> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "A <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> skojarzone z określonym typem."
  overload: System.ComponentModel.TypeDescriptor.GetProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  id: GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetReflectionType(Object)
  nameWithType: TypeDescriptor.GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca <xref:System.Type>który może służyć do wykonywania odbicia, podany obiekt.</xref:System.Type>"
  remarks: "<xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>Metoda jest wersję niskiego poziomu <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>metody.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>zwykle służy do wykonywania standardowych odbicia względem obiektu, gdy Brak deskryptora typu niestandardowego może znajdować się na jej.</xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>"
  syntax:
    content: public static Type GetReflectionType (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Wystąpienie elementu docelowego."
    return:
      type: System.Type
      description: "A <xref:System.Type>dla określonego obiektu.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.GetReflectionType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  id: GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetReflectionType(Type)
  nameWithType: TypeDescriptor.GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca <xref:System.Type>który może służyć do wykonywania odbicia, danego typu klasy.</xref:System.Type>"
  remarks: "<xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>Metoda jest wersję niskiego poziomu <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>metody.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>zwykle służy do wykonywania standardowych odbicia z klasą, gdy Brak deskryptora typu niestandardowego może znajdować się na jej.</xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>"
  syntax:
    content: public static Type GetReflectionType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
    return:
      type: System.Type
      description: "<xref:System.Type>Określonej klasy.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.GetReflectionType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.InterfaceType
  id: InterfaceType
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: InterfaceType
  nameWithType: TypeDescriptor.InterfaceType
  fullName: System.ComponentModel.TypeDescriptor.InterfaceType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera typ, który reprezentuje typ dostawcy opisu dla wszystkich typów interfejsu."
  remarks: "Pobiera Właściwość InterfaceType <xref:System.Type>obiekt, który można przekazać do <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>metod do zdefiniowania dostawcy opisu typu dla typów interfejsów.</xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> </xref:System.Type>"
  syntax:
    content: public static Type InterfaceType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>reprezentujący niestandardowego dostawcy opisu typu wszystkie typy interfejsów.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.InterfaceType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  id: Refresh(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refresh(Object)
  nameWithType: TypeDescriptor.Refresh(Object)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Czyści właściwości i zdarzenia dla określonego składnika z pamięci podręcznej."
  remarks: "Właściwości i zdarzenia są buforowane przez <xref:System.ComponentModel.TypeDescriptor>szybkości.</xref:System.ComponentModel.TypeDescriptor> Zwykle są one stałe dla okresu istnienia obiektu. Jednak dostawcy rozszerzeń i projektantów zmienić zbiór właściwości obiektu. Jeśli nie, ich powinny wywoływać tej metody, aby wyczyścić deskryptorów właściwości i zdarzenia obiektu. Ta metoda jest używana tylko w czasie projektowania. Nie jest on używany w czasie wykonywania.       Ta metoda również zgłasza <xref:System.ComponentModel.TypeDescriptor.Refreshed>zdarzenie po zmianie właściwości lub zdarzenia składnika.</xref:System.ComponentModel.TypeDescriptor.Refreshed> To zdarzenie jest wywoływane tylko, jeśli wystąpił wcześniejszym wywołaniu <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>lub <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>metodę, która informacje w pamięci podręcznej.</xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> </xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  example:
  - For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.
  syntax:
    content: public static void Refresh (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Składnik, dla którego właściwości lub zdarzenia zostały zmienione."
  overload: System.ComponentModel.TypeDescriptor.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  id: Refresh(System.Reflection.Assembly)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refresh(Assembly)
  nameWithType: TypeDescriptor.Refresh(Assembly)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Assembly)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Czyści właściwości i zdarzenia dla określonego zestawu z pamięci podręcznej."
  remarks: "Właściwości i zdarzenia są buforowane przez <xref:System.ComponentModel.TypeDescriptor>szybkości.</xref:System.ComponentModel.TypeDescriptor> Zwykle są one stałe dla okresu istnienia obiektu. Jednak dostawcy rozszerzeń i projektantów zmienić zbiór właściwości obiektu. Jeśli tak się one wywołać tę metodę, aby wyczyścić deskryptorów właściwości i zdarzenia obiektu. Ta metoda jest używana tylko w czasie projektowania. Nie jest on używany w czasie wykonywania.       Przed wprowadzeniem wywołanie <xref:System.ComponentModel.TypeDescriptor.Refresh%2A>metodę, aby wyczyścić pamięć podręczną, należy wywołać <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>Metoda dla określonego zestawu najpierw buforowanie tych informacji.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> </xref:System.ComponentModel.TypeDescriptor.Refresh%2A>       Ta metoda również zgłasza <xref:System.ComponentModel.TypeDescriptor.Refreshed>zdarzenie, aby powiadomić wszystkich klas, które chcą być powiadamiani, gdy wartość właściwości zmian składnika.</xref:System.ComponentModel.TypeDescriptor.Refreshed>"
  syntax:
    content: public static void Refresh (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>Reprezentujący zestawu, aby odświeżyć.</xref:System.Reflection.Assembly> Każdy <xref:System.Type>w tym zestawie zostaną odświeżone.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  id: Refresh(System.Reflection.Module)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refresh(Module)
  nameWithType: TypeDescriptor.Refresh(Module)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Module)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Czyści właściwości i zdarzenia dla określonego modułu z pamięci podręcznej."
  remarks: "Właściwości i zdarzenia są buforowane przez <xref:System.ComponentModel.TypeDescriptor>szybkości.</xref:System.ComponentModel.TypeDescriptor> Zwykle są one stałe dla okresu istnienia obiektu. Jednak dostawcy rozszerzeń i projektantów zmienić zbiór właściwości obiektu. Jeśli tak się one wywołać tę metodę, aby wyczyścić deskryptorów właściwości i zdarzenia obiektu. Ta metoda jest używana tylko w czasie projektowania. Nie jest on używany w czasie wykonywania.       Przed wprowadzeniem wywołanie <xref:System.ComponentModel.TypeDescriptor.Refresh%2A>metodę, aby wyczyścić pamięć podręczną, należy wywołać <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>Metoda dla określonego modułu najpierw buforowanie tych informacji.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> </xref:System.ComponentModel.TypeDescriptor.Refresh%2A>       Ta metoda również zgłasza <xref:System.ComponentModel.TypeDescriptor.Refreshed>zdarzenie, aby powiadomić wszystkich klas, które chcą być powiadamiani, gdy wartość właściwości zmian składnika.</xref:System.ComponentModel.TypeDescriptor.Refreshed>"
  syntax:
    content: public static void Refresh (System.Reflection.Module module);
    parameters:
    - id: module
      type: System.Reflection.Module
      description: "<xref:System.Reflection.Module>Reprezentujący modułu, aby odświeżyć.</xref:System.Reflection.Module> Każdy <xref:System.Type>w tym module zostaną odświeżone.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  id: Refresh(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refresh(Type)
  nameWithType: TypeDescriptor.Refresh(Type)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Czyści właściwości i zdarzenia dla określonego typu składnika z pamięci podręcznej."
  remarks: "Ta wersja tej metody należy wywołać tylko wtedy, gdy nie masz wystąpienie obiektu.       Właściwości i zdarzenia są buforowane przez <xref:System.ComponentModel.TypeDescriptor>szybkości.</xref:System.ComponentModel.TypeDescriptor> Zwykle są one stałe dla okresu istnienia obiektu. Jednak dostawcy rozszerzeń i projektantów zmienić zbiór właściwości obiektu. Jeśli tak się one wywołać tę metodę, aby wyczyścić deskryptorów właściwości i zdarzenia obiektu. Ta metoda jest używana tylko w czasie projektowania. Nie jest on używany w czasie wykonywania.       Ta metoda również zgłasza <xref:System.ComponentModel.TypeDescriptor.Refreshed>zdarzenie po zmianie właściwości lub zdarzenia składnika.</xref:System.ComponentModel.TypeDescriptor.Refreshed> To zdarzenie jest wywoływane tylko, jeśli wystąpił wcześniejszym wywołaniu <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>lub <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>metodę, która informacje w pamięci podręcznej.</xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> </xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  syntax:
    content: public static void Refresh (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refreshed
  id: Refreshed
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refreshed
  nameWithType: TypeDescriptor.Refreshed
  fullName: System.ComponentModel.TypeDescriptor.Refreshed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Występuje po wyczyszczeniu pamięci podręcznej dla składnika."
  remarks: 'Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.
  syntax:
    content: public static event System.ComponentModel.RefreshEventHandler Refreshed;
    return:
      type: System.ComponentModel.RefreshEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  id: RemoveAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveAssociation(Object,Object)
  nameWithType: TypeDescriptor.RemoveAssociation(Object,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociation(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Usuwa skojarzenie między dwoma obiektami."
  remarks: "Metoda RemoveAssociation usuwa skojarzenie między dwa obiekty utworzone przez <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>metody.</xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>       A <xref:System.WeakReference>służy do obsługi skojarzenie obiektu podstawowego i pomocniczego; w związku z tym ta metoda nie ma wpływu albo obiekt jest sfinalizowany lub odzyskana przez wyrzucanie elementów bezużytecznych.</xref:System.WeakReference>"
  syntax:
    content: public static void RemoveAssociation (object primary, object secondary);
    parameters:
    - id: primary
      type: System.Object
      description: "Podstawowy <xref:System.Object>.</xref:System.Object>"
    - id: secondary
      type: System.Object
      description: "Pomocniczy <xref:System.Object>.</xref:System.Object>"
  overload: System.ComponentModel.TypeDescriptor.RemoveAssociation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub oba parametry są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  id: RemoveAssociations(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveAssociations(Object)
  nameWithType: TypeDescriptor.RemoveAssociations(Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociations(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Usuwa wszystkie skojarzenia dla obiekt podstawowy."
  remarks: "Metoda RemoveAssociations usuwa wszystkie skojarzenia między podstawowym obiektu i wszystkich jego dodatkowej obiekty utworzone przez wywołania <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>metody.</xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>       A <xref:System.WeakReference>służy do obsługi skojarzenie obiektu podstawowego i pomocniczego; w związku z tym ta metoda nie ma wpływu podczas podstawowej obiekty pomocnicze są sfinalizowany lub odzyskana przez wyrzucanie elementów bezużytecznych.</xref:System.WeakReference>"
  syntax:
    content: public static void RemoveAssociations (object primary);
    parameters:
    - id: primary
      type: System.Object
      description: "Podstawowy <xref:System.Object>w skojarzeniu.</xref:System.Object>"
  overload: System.ComponentModel.TypeDescriptor.RemoveAssociations*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>primary</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveProvider(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Usuwa uprzednio dodanych typ dostawcy opis, który jest skojarzony z określonym obiektem."
  remarks: "Ta metoda usuwa wcześniej dodane w dostawcy opisu typu <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metody.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> Usunięcie dostawcy powoduje, że <xref:System.ComponentModel.TypeDescriptor.Refreshed>się dla obiektu skojarzonego zdarzenia.</xref:System.ComponentModel.TypeDescriptor.Refreshed>       Użyj <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metodę, jeśli należy wywołać pochodzących z częściowo zaufanego kodu.</xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "<xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> Do usunięcia."
    - id: instance
      type: System.Object
      description: "Wystąpienie elementu docelowego."
  overload: System.ComponentModel.TypeDescriptor.RemoveProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub oba parametry są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveProvider(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Usuwa uprzednio dodanych typ dostawcy opis, który jest skojarzony z określonym typem."
  remarks: "Ta metoda usuwa wcześniej dodane w dostawcy opisu typu <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metody.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> Usunięcie dostawcy powoduje, że <xref:System.ComponentModel.TypeDescriptor.Refreshed>się do skojarzonego typu zdarzenia.</xref:System.ComponentModel.TypeDescriptor.Refreshed>       Użyj <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metodę, jeśli należy wywołać pochodzących z częściowo zaufanego kodu.</xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "<xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> Do usunięcia."
    - id: type
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.RemoveProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub oba parametry są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveProviderTransparent(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Usuwa uprzednio dodanych typ dostawcy opis, który jest skojarzony z określonym obiektem."
  remarks: "Ta metoda usuwa wcześniej dodane w dostawcy opisu typu <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metody.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> Usunięcie dostawcy powoduje, że <xref:System.ComponentModel.TypeDescriptor.Refreshed>się dla obiektu skojarzonego zdarzenia.</xref:System.ComponentModel.TypeDescriptor.Refreshed>       Ta metoda może być wywołana z częściowo zaufanego kodu. Jeśli <xref:System.Security.Permissions.TypeDescriptorPermissionFlags>jest zdefiniowany, wywołujący można zarejestrować dostawcę dla określonego wystąpienia jeśli jej typ jest również częściowo zaufany.</xref:System.Security.Permissions.TypeDescriptorPermissionFlags>       Użyj <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metodę, jeśli nie należy wywoływać z częściowo zaufanego kodu.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "<xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> Do usunięcia."
    - id: instance
      type: System.Object
      description: "Wystąpienie elementu docelowego."
  overload: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub oba parametry są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveProviderTransparent(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Usuwa uprzednio dodanych typ dostawcy opis, który jest skojarzony z określonym typem."
  remarks: "Ta metoda usuwa wcześniej dodane w dostawcy opisu typu <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metody.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> Usunięcie dostawcy powoduje, że <xref:System.ComponentModel.TypeDescriptor.Refreshed>się do skojarzonego typu zdarzenia.</xref:System.ComponentModel.TypeDescriptor.Refreshed>       Ta metoda może być wywołana z częściowo zaufanego kodu. Jeśli <xref:System.Security.Permissions.TypeDescriptorPermissionFlags>jest zdefiniowana, wywołujący można wyrejestrować dostawcę dla określonego typu, jeśli jest również częściowo zaufany.</xref:System.Security.Permissions.TypeDescriptorPermissionFlags>       Użyj <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metodę, jeśli nie należy wywoływać z częściowo zaufanego kodu.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "<xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> Do usunięcia."
    - id: type
      type: System.Type
      description: "<xref:System.Type>Elementu docelowego.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden lub oba parametry są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  id: SortDescriptorArray(System.Collections.IList)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: SortDescriptorArray(IList)
  nameWithType: TypeDescriptor.SortDescriptorArray(IList)
  fullName: System.ComponentModel.TypeDescriptor.SortDescriptorArray(IList)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sortuje deskryptory przy użyciu nazwy deskryptora."
  syntax:
    content: public static void SortDescriptorArray (System.Collections.IList infos);
    parameters:
    - id: infos
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>Zawierający deskryptorów do sortowania.</xref:System.Collections.IList>"
  overload: System.ComponentModel.TypeDescriptor.SortDescriptorArray*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>infos</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddAttributes(Object,Attribute[])
  nameWithType: TypeDescriptor.AddAttributes(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Object,Attribute[])
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddAttributes(Type,Attribute[])
  nameWithType: TypeDescriptor.AddAttributes(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Type,Attribute[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddEditorTable(Type,Hashtable)
  nameWithType: TypeDescriptor.AddEditorTable(Type,Hashtable)
  fullName: System.ComponentModel.TypeDescriptor.AddEditorTable(Type,Hashtable)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProvider(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProvider(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProviderTransparent(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProviderTransparent(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)
- uid: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: ComNativeDescriptorHandler
  nameWithType: TypeDescriptor.ComNativeDescriptorHandler
  fullName: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
- uid: System.ComponentModel.IComNativeDescriptorHandler
  parent: System.ComponentModel
  isExternal: false
  name: IComNativeDescriptorHandler
  nameWithType: IComNativeDescriptorHandler
  fullName: System.ComponentModel.IComNativeDescriptorHandler
- uid: System.ComponentModel.TypeDescriptor.ComObjectType
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: ComObjectType
  nameWithType: TypeDescriptor.ComObjectType
  fullName: System.ComponentModel.TypeDescriptor.ComObjectType
- uid: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateAssociation(Object,Object)
  nameWithType: TypeDescriptor.CreateAssociation(Object,Object)
  fullName: System.ComponentModel.TypeDescriptor.CreateAssociation(Object,Object)
- uid: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateDesigner(IComponent,Type)
  nameWithType: TypeDescriptor.CreateDesigner(IComponent,Type)
  fullName: System.ComponentModel.TypeDescriptor.CreateDesigner(IComponent,Type)
- uid: System.ComponentModel.Design.IDesigner
  parent: System.ComponentModel.Design
  isExternal: false
  name: IDesigner
  nameWithType: IDesigner
  fullName: System.ComponentModel.Design.IDesigner
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateEvent(Type,EventDescriptor,Attribute[])
  nameWithType: TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateEvent(Type,String,Type,Attribute[])
  nameWithType: TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateInstance(IServiceProvider,Type,Type[],Object[])
  nameWithType: TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])
  fullName: System.ComponentModel.TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateProperty(Type,PropertyDescriptor,Attribute[])
  nameWithType: TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateProperty(Type,String,Type,Attribute[])
  nameWithType: TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAssociation(Type,Object)
  nameWithType: TypeDescriptor.GetAssociation(Type,Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAssociation(Type,Object)
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAttributes(Object)
  nameWithType: TypeDescriptor.GetAttributes(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object)
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAttributes(Type)
  nameWithType: TypeDescriptor.GetAttributes(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Type)
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAttributes(Object,Boolean)
  nameWithType: TypeDescriptor.GetAttributes(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetClassName(Object)
  nameWithType: TypeDescriptor.GetClassName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object)
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetClassName(Type)
  nameWithType: TypeDescriptor.GetClassName(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Type)
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetClassName(Object,Boolean)
  nameWithType: TypeDescriptor.GetClassName(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetComponentName(Object)
  nameWithType: TypeDescriptor.GetComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object)
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetComponentName(Object,Boolean)
  nameWithType: TypeDescriptor.GetComponentName(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetConverter(Object)
  nameWithType: TypeDescriptor.GetConverter(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object)
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetConverter(Type)
  nameWithType: TypeDescriptor.GetConverter(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Type)
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetConverter(Object,Boolean)
  nameWithType: TypeDescriptor.GetConverter(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultEvent(Object)
  nameWithType: TypeDescriptor.GetDefaultEvent(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultEvent(Type)
  nameWithType: TypeDescriptor.GetDefaultEvent(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Type)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultEvent(Object,Boolean)
  nameWithType: TypeDescriptor.GetDefaultEvent(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultProperty(Object)
  nameWithType: TypeDescriptor.GetDefaultProperty(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultProperty(Type)
  nameWithType: TypeDescriptor.GetDefaultProperty(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Type)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultProperty(Object,Boolean)
  nameWithType: TypeDescriptor.GetDefaultProperty(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEditor(Object,Type)
  nameWithType: TypeDescriptor.GetEditor(Object,Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type)
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEditor(Type,Type)
  nameWithType: TypeDescriptor.GetEditor(Type,Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Type,Type)
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEditor(Object,Type,Boolean)
  nameWithType: TypeDescriptor.GetEditor(Object,Type,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Object)
  nameWithType: TypeDescriptor.GetEvents(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object)
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Type)
  nameWithType: TypeDescriptor.GetEvents(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Object,Attribute[])
  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Object,Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Type,Attribute[])
  nameWithType: TypeDescriptor.GetEvents(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Object,Attribute[],Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[],Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[],Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetFullComponentName(Object)
  nameWithType: TypeDescriptor.GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetFullComponentName(Object)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Object)
  nameWithType: TypeDescriptor.GetProperties(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Type)
  nameWithType: TypeDescriptor.GetProperties(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Object,Attribute[])
  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Object,Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Type,Attribute[])
  nameWithType: TypeDescriptor.GetProperties(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Object,Attribute[],Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[],Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[],Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProvider(Object)
  nameWithType: TypeDescriptor.GetProvider(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Object)
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProvider(Type)
  nameWithType: TypeDescriptor.GetProvider(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Type)
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetReflectionType(Object)
  nameWithType: TypeDescriptor.GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Object)
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetReflectionType(Type)
  nameWithType: TypeDescriptor.GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Type)
- uid: System.ComponentModel.TypeDescriptor.InterfaceType
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: InterfaceType
  nameWithType: TypeDescriptor.InterfaceType
  fullName: System.ComponentModel.TypeDescriptor.InterfaceType
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh(Object)
  nameWithType: TypeDescriptor.Refresh(Object)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Object)
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh(Assembly)
  nameWithType: TypeDescriptor.Refresh(Assembly)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh(Module)
  nameWithType: TypeDescriptor.Refresh(Module)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Module)
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh(Type)
  nameWithType: TypeDescriptor.Refresh(Type)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Type)
- uid: System.ComponentModel.TypeDescriptor.Refreshed
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refreshed
  nameWithType: TypeDescriptor.Refreshed
  fullName: System.ComponentModel.TypeDescriptor.Refreshed
- uid: System.ComponentModel.RefreshEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: RefreshEventHandler
  nameWithType: RefreshEventHandler
  fullName: System.ComponentModel.RefreshEventHandler
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveAssociation(Object,Object)
  nameWithType: TypeDescriptor.RemoveAssociation(Object,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociation(Object,Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveAssociations(Object)
  nameWithType: TypeDescriptor.RemoveAssociations(Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociations(Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProvider(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProvider(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProviderTransparent(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProviderTransparent(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)
- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: SortDescriptorArray(IList)
  nameWithType: TypeDescriptor.SortDescriptorArray(IList)
  fullName: System.ComponentModel.TypeDescriptor.SortDescriptorArray(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.TypeDescriptor.AddAttributes*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddAttributes
  nameWithType: TypeDescriptor.AddAttributes
- uid: System.ComponentModel.TypeDescriptor.AddEditorTable*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddEditorTable
  nameWithType: TypeDescriptor.AddEditorTable
- uid: System.ComponentModel.TypeDescriptor.AddProvider*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProvider
  nameWithType: TypeDescriptor.AddProvider
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProviderTransparent
  nameWithType: TypeDescriptor.AddProviderTransparent
- uid: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: ComNativeDescriptorHandler
  nameWithType: TypeDescriptor.ComNativeDescriptorHandler
- uid: System.ComponentModel.TypeDescriptor.ComObjectType*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: ComObjectType
  nameWithType: TypeDescriptor.ComObjectType
- uid: System.ComponentModel.TypeDescriptor.CreateAssociation*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateAssociation
  nameWithType: TypeDescriptor.CreateAssociation
- uid: System.ComponentModel.TypeDescriptor.CreateDesigner*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateDesigner
  nameWithType: TypeDescriptor.CreateDesigner
- uid: System.ComponentModel.TypeDescriptor.CreateEvent*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateEvent
  nameWithType: TypeDescriptor.CreateEvent
- uid: System.ComponentModel.TypeDescriptor.CreateInstance*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateInstance
  nameWithType: TypeDescriptor.CreateInstance
- uid: System.ComponentModel.TypeDescriptor.CreateProperty*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateProperty
  nameWithType: TypeDescriptor.CreateProperty
- uid: System.ComponentModel.TypeDescriptor.GetAssociation*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAssociation
  nameWithType: TypeDescriptor.GetAssociation
- uid: System.ComponentModel.TypeDescriptor.GetAttributes*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAttributes
  nameWithType: TypeDescriptor.GetAttributes
- uid: System.ComponentModel.TypeDescriptor.GetClassName*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetClassName
  nameWithType: TypeDescriptor.GetClassName
- uid: System.ComponentModel.TypeDescriptor.GetComponentName*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetComponentName
  nameWithType: TypeDescriptor.GetComponentName
- uid: System.ComponentModel.TypeDescriptor.GetConverter*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetConverter
  nameWithType: TypeDescriptor.GetConverter
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultEvent
  nameWithType: TypeDescriptor.GetDefaultEvent
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultProperty
  nameWithType: TypeDescriptor.GetDefaultProperty
- uid: System.ComponentModel.TypeDescriptor.GetEditor*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: TypeDescriptor.GetEditor
- uid: System.ComponentModel.TypeDescriptor.GetEvents*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents
  nameWithType: TypeDescriptor.GetEvents
- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetFullComponentName
  nameWithType: TypeDescriptor.GetFullComponentName
- uid: System.ComponentModel.TypeDescriptor.GetProperties*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties
  nameWithType: TypeDescriptor.GetProperties
- uid: System.ComponentModel.TypeDescriptor.GetProvider*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProvider
  nameWithType: TypeDescriptor.GetProvider
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetReflectionType
  nameWithType: TypeDescriptor.GetReflectionType
- uid: System.ComponentModel.TypeDescriptor.InterfaceType*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: InterfaceType
  nameWithType: TypeDescriptor.InterfaceType
- uid: System.ComponentModel.TypeDescriptor.Refresh*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh
  nameWithType: TypeDescriptor.Refresh
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveAssociation
  nameWithType: TypeDescriptor.RemoveAssociation
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveAssociations
  nameWithType: TypeDescriptor.RemoveAssociations
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProvider
  nameWithType: TypeDescriptor.RemoveProvider
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProviderTransparent
  nameWithType: TypeDescriptor.RemoveProviderTransparent
- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: SortDescriptorArray
  nameWithType: TypeDescriptor.SortDescriptorArray
