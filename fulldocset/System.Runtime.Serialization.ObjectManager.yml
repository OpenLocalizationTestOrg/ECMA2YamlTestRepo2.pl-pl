### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.ObjectManager
  id: ObjectManager
  children:
  - System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Serialization.ObjectManager.DoFixups
  - System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)
  - System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent
  - System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)
  - System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)
  - System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)
  - System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)
  - System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)
  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)
  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)
  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)
  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])
  langs:
  - csharp
  name: ObjectManager
  nameWithType: ObjectManager
  fullName: System.Runtime.Serialization.ObjectManager
  type: Class
  summary: "Przechowuje informacje o obiektach, ponieważ są one deserializacji."
  remarks: "Podczas deserializacji <xref:System.Runtime.Serialization.Formatter>odpytuje Element ObjectManager, aby określić, czy odwołanie do obiektu w serializowanym strumieniu odwołuje się do obiektu, który już został zdeserializowany (odwołanie z poprzednimi wersjami), lub do obiektu, który nie ma jeszcze zdeserializować (odwołanie do przodu).</xref:System.Runtime.Serialization.Formatter> Jeśli odwołania w serializowanym strumieniu jest odwołaniem do przodu, a następnie <xref:System.Runtime.Serialization.Formatter>można zarejestrować naprawie z Element ObjectManager.</xref:System.Runtime.Serialization.Formatter> Jeśli odwołania w serializowanym strumieniu jest odwołaniem do tyłu <xref:System.Runtime.Serialization.Formatter>natychmiast kończy odwołania.</xref:System.Runtime.Serialization.Formatter> Naprawy odwołuje się do procesu finalizowanie odwołania do obiektów nie zakończono podczas deserializacji obiektu. Po wymaganego obiektu został zdeserializowany, Element ObjectManager ukończy odwołania.       Element ObjectManager postępuje zgodnie z zestawem reguł, które wymuszają kolejności naprawy. Wszystkie obiekty, które implementują <xref:System.Runtime.Serialization.ISerializable>lub <xref:System.Runtime.Serialization.ISerializationSurrogate>można oczekiwać, że mają wszystkie obiekty, które są przesyłane za pośrednictwem <xref:System.Runtime.Serialization.SerializationInfo>dostępny, gdy deserializowany jest obiekt drzewa.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.ISerializationSurrogate> </xref:System.Runtime.Serialization.ISerializable> Jednak obiektu nadrzędnego nie uznają, że wszystkie jego obiekty podrzędne zostanie całkowicie ukończony po jest w pełni deserializacji. Wszystkich obiektów podrzędnych będą znajdować się, ale nie do wszystkich obiektów z podwójnym zawsze będzie wyświetlany. Jeśli obiekt musi podjąć pewne akcje, które są zależne od wykonywanie kodu na jego obiektów podrzędnych, można opóźnić te akcje, wdrożenie <xref:System.Runtime.Serialization.IDeserializationCallback>interfejsu i wykonywania kodu tylko wtedy, gdy jest wywołanie zwrotne w tym interfejsie.</xref:System.Runtime.Serialization.IDeserializationCallback>"
  example:
  - "The following code example shows how to use the ObjectManager class to walk through an object graph, traversing to each object only once.  \n  \n [!code-cs[ObjectManager#1](~/add/codesnippet/csharp/t-system.runtime.seriali_0_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ObjectManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)'
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: ObjectManager(ISurrogateSelector,StreamingContext)
  nameWithType: ObjectManager.ObjectManager(ISurrogateSelector,StreamingContext)
  fullName: System.Runtime.Serialization.ObjectManager.ObjectManager(ISurrogateSelector,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Runtime.Serialization.ObjectManager&quot;> </xref> klasy."
  syntax:
    content: public ObjectManager (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: selector
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "Selektor zastępczego do użycia. <xref href=&quot;System.Runtime.Serialization.ISurrogateSelector&quot;> </xref> Określa poprawny surogatu do użycia podczas deserializacji obiektów danego typu. Podczas deserializacji selektor Surogat tworzy nowe wystąpienie obiektu z informacje przekazywane w strumieniu."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Kontekst przesyłania strumieniowego. <xref:System.Runtime.Serialization.StreamingContext>Nie jest używany przez <xref uid=&quot;langword_csharp_ObjectManager&quot; name=&quot;ObjectManager&quot; href=&quot;&quot;> </xref>, ale został on przekazany jako parametr do implementacji obiektów <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> lub <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext> Te obiekty mogą być określone czynności w zależności od źródła informacji do deserializacji."
  overload: System.Runtime.Serialization.ObjectManager.#ctor*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.DoFixups
  id: DoFixups
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: DoFixups()
  nameWithType: ObjectManager.DoFixups()
  fullName: System.Runtime.Serialization.ObjectManager.DoFixups()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Wykonuje wszystkie zarejestrowane korekty."
  remarks: "Korekt są wykonywane przez wszystkie odpowiednie Surogat samego obiektu (jeśli implementuje <xref:System.Runtime.Serialization.ISerializable>), lub domyślna implementacja.</xref:System.Runtime.Serialization.ISerializable>"
  syntax:
    content: public virtual void DoFixups ();
    parameters: []
  overload: System.Runtime.Serialization.ObjectManager.DoFixups*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Naprawy nie została pomyślnie ukończona."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)
  id: GetObject(System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: GetObject(Int64)
  nameWithType: ObjectManager.GetObject(Int64)
  fullName: System.Runtime.Serialization.ObjectManager.GetObject(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Zwraca obiekt o identyfikatorze określony obiekt."
  remarks: "Zarejestrowany i wystawiony identyfikator obiektu w wyniku wywołania obiektu <xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A>metody.</xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A>"
  syntax:
    content: public virtual object GetObject (long objectID);
    parameters:
    - id: objectID
      type: System.Int64
      description: "Identyfikator żądanego obiektu."
    return:
      type: System.Object
      description: "Obiekt o identyfikatorze określony obiekt, jeśli został wcześniej przechowywane lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli nie zarejestrowano żadnych takiego obiektu."
  overload: System.Runtime.Serialization.ObjectManager.GetObject*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code> Parametr jest mniejsza niż lub równa zero."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent
  id: RaiseDeserializationEvent
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RaiseDeserializationEvent()
  nameWithType: ObjectManager.RaiseDeserializationEvent()
  fullName: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Zgłasza zdarzenie deserializacji do każdego zarejestrowanego obiektu implementującego <xref href=&quot;System.Runtime.Serialization.IDeserializationCallback&quot;> </xref>."
  syntax:
    content: public virtual void RaiseDeserializationEvent ();
    parameters: []
  overload: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)
  id: RaiseOnDeserializingEvent(System.Object)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RaiseOnDeserializingEvent(Object)
  nameWithType: ObjectManager.RaiseOnDeserializingEvent(Object)
  fullName: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Wywołuje metody oznaczonej jako <xref:System.Runtime.Serialization.OnDeserializingAttribute>.</xref:System.Runtime.Serialization.OnDeserializingAttribute>"
  syntax:
    content: public void RaiseOnDeserializingEvent (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Wystąpienie typu, który zawiera wywoływanej metody."
  overload: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)
  id: RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RecordArrayElementFixup(Int64,Int32,Int64)
  nameWithType: ObjectManager.RecordArrayElementFixup(Int64,Int32,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(Int64,Int32,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Rejestruje naprawy dla jednego elementu w tablicy."
  remarks: "Naprawa jest przeznaczony dla określonego elementu w określonej tablicy. Wartość używaną podczas procesu naprawy znajduje się w `objectRequired` parametru."
  syntax:
    content: public virtual void RecordArrayElementFixup (long arrayToBeFixed, int index, long objectRequired);
    parameters:
    - id: arrayToBeFixed
      type: System.Int64
      description: "Identyfikator używany do rejestrowania naprawie tablicy."
    - id: index
      type: System.Int32
      description: "Indeks w `arrayFixup` żądanego naprawy dla."
    - id: objectRequired
      type: System.Int64
      description: "Identyfikator obiektu, który będzie wskazywać bieżącego elementu tablicy po zakończeniu naprawy."
  overload: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> arrayToBeFixed </code> Lub <code> objectRequired </code> parametr jest mniejsza niż lub równa zero."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>index</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)
  id: RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RecordArrayElementFixup(Int64,Int32[],Int64)
  nameWithType: ObjectManager.RecordArrayElementFixup(Int64,Int32[],Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(Int64,Int32[],Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Napraw rekordów dla określonych elementów w tablicy, można wykonać później."
  remarks: "Naprawa jest przeznaczony dla określonych elementów określonej tablicy. Wartość używaną podczas procesu naprawy znajduje się w `objectRequired` parametru."
  syntax:
    content: public virtual void RecordArrayElementFixup (long arrayToBeFixed, int[] indices, long objectRequired);
    parameters:
    - id: arrayToBeFixed
      type: System.Int64
      description: "Identyfikator używany do rejestrowania naprawie tablicy."
    - id: indices
      type: System.Int32[]
      description: "W tablicy wielowymiarowej, który naprawie jest wymagany dla indeksów."
    - id: objectRequired
      type: System.Int64
      description: "Identyfikator obiektu elementów tablicy wskaże po zakończeniu naprawy."
  overload: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> arrayToBeFixed </code> Lub <code> objectRequired </code> parametr jest mniejsza niż lub równa zero."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>indices</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)
  id: RecordDelayedFixup(System.Int64,System.String,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RecordDelayedFixup(Int64,String,Int64)
  nameWithType: ObjectManager.RecordDelayedFixup(Int64,String,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(Int64,String,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Rejestruje naprawy dla elementu członkowskiego obiektu, do wykonania później."
  remarks: "Naprawa jest przeznaczony dla określonego elementu członkowskiego określonego obiektu. Wartość do użycia podczas procesu naprawy jest dostarczana jako `objectRequired` argumentu."
  syntax:
    content: public virtual void RecordDelayedFixup (long objectToBeFixed, string memberName, long objectRequired);
    parameters:
    - id: objectToBeFixed
      type: System.Int64
      description: "Identyfikator obiektu, który wymaga odwołania do `objectRequired`."
    - id: memberName
      type: System.String
      description: "Nazwa elementu członkowskiego `objectToBeFixed` której zostanie wykonane naprawy."
    - id: objectRequired
      type: System.Int64
      description: "Identyfikator obiektu wymaganego przez `objectToBeFixed`."
  overload: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>objectToBeFixed</code>lub <code>objectRequired</code> parametr jest mniejsza niż lub równa zero."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>memberName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)
  id: RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RecordFixup(Int64,MemberInfo,Int64)
  nameWithType: ObjectManager.RecordFixup(Int64,MemberInfo,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordFixup(Int64,MemberInfo,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Rejestruje naprawy dla członka obiektu, można wykonać później."
  remarks: "Naprawa jest przeznaczony dla określonego elementu członkowskiego określonego obiektu. Wartość do użycia podczas procesu naprawy jest dostarczana jako `objectRequired` parametru."
  syntax:
    content: public virtual void RecordFixup (long objectToBeFixed, System.Reflection.MemberInfo member, long objectRequired);
    parameters:
    - id: objectToBeFixed
      type: System.Int64
      description: "Identyfikator obiektu, który wymaga odwołania do `objectRequired` obiektu."
    - id: member
      type: System.Reflection.MemberInfo
      description: "Członek `objectToBeFixed` której zostanie wykonane naprawy."
    - id: objectRequired
      type: System.Int64
      description: "Identyfikator obiektu wymaganego przez `objectToBeFixed`."
  overload: System.Runtime.Serialization.ObjectManager.RecordFixup*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectToBeFixed </code> Lub <code> objectRequired </code> parametr jest mniejsza niż lub równa zero."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>member</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)
  id: RegisterObject(System.Object,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RegisterObject(Object,Int64)
  nameWithType: ObjectManager.RegisterObject(Object,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Rejestruje zdeserializować obiektu, ponieważ, skojarzenie go z <code> objectID </code>."
  remarks: "<xref:System.Runtime.Serialization.ObjectManager>przechowuje informacje o obiekt i jego identyfikator.</xref:System.Runtime.Serialization.ObjectManager> Podczas deserializacji, nowsze <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>służy do sprawdzenia, czy identyfikator określonego obiektu ma już deserializacji, czy jest do przodu odwołanie do obiektu, który nie ma jeszcze zdeserializować.</xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>"
  syntax:
    content: public virtual void RegisterObject (object obj, long objectID);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do zarejestrowania."
    - id: objectID
      type: System.Int64
      description: "Identyfikator obiektu do zarejestrowania."
  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code> Parametr jest mniejsza niż lub równa zero."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<code> objectID </code> Został już zarejestrowany dla obiekt inny niż <code> obj </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)
  id: RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RegisterObject(Object,Int64,SerializationInfo)
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Rejestruje zdeserializować obiektu, ponieważ, skojarzenie go z <code> objectID </code>oraz rejestrowanie <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> używany razem z nim."
  remarks: "<xref:System.Runtime.Serialization.ObjectManager>przechowuje informacje o obiekt i jego identyfikator.</xref:System.Runtime.Serialization.ObjectManager> Później, podczas deserializacji, można użyć <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>Aby dowiedzieć się, czy identyfikator ma już rozszeregować określonego obiektu, czy jest do przodu odwołanie do obiektu, który nie ma jeszcze zdeserializować.</xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>"
  syntax:
    content: public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do zarejestrowania."
    - id: objectID
      type: System.Int64
      description: "Identyfikator obiektu do zarejestrowania."
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> used if `obj` implements <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;></xref> or has a <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;></xref>. `info`zostanie zakończone. wszystkie informacje wymagane naprawy i następnie przekazywane do wymaganego obiektu po zakończeniu tego obiektu."
  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code> Parametr jest mniejsza niż lub równa zero."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<code> objectID </code> Został już zarejestrowany dla obiekt inny niż <code> obj </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)
  id: RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Rejestruje rozszeregować elementu członkowskiego obiektu, ponieważ, skojarzenie go z <code> objectID </code>oraz rejestrowanie <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  remarks: "Należy podać `member` i `idOfContainingObj` parametry Jeśli `obj` jest <xref:System.ValueType>ze względu na sposób korekty są wykonywane na <xref:System.ValueType>obiektów.</xref:System.ValueType> </xref:System.ValueType> Miejsca do przechowywania informacji o <xref:System.ValueType>został przydzielony wbudowany z zawierającego go obiektu.</xref:System.ValueType> Jednakże, gdy <xref:System.ValueType>jest opakowany rejestrowana z <xref:System.Runtime.Serialization.ObjectManager>, utraty połączenia z zawierającego go obiektu.</xref:System.Runtime.Serialization.ObjectManager> </xref:System.ValueType> Aby zagwarantować, że korekt występować w wystąpieniu programu <xref:System.ValueType>przechowywanych w obiektu zawierającego i nie spakowanym wystąpieniem <xref:System.Runtime.Serialization.ObjectManager>przechowuje dodatkowe informacje.</xref:System.Runtime.Serialization.ObjectManager> </xref:System.ValueType>       <xref:System.Runtime.Serialization.ObjectManager>przechowuje informacje o obiekt i jego identyfikator.</xref:System.Runtime.Serialization.ObjectManager> Podczas deserializacji, nowsze <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>służy do odnajdywania identyfikator określonego obiektu ma już deserializacji, czy czy do przodu odwołanie do obiektu nie jest jeszcze zdeserializować.</xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>"
  syntax:
    content: public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do zarejestrowania."
    - id: objectID
      type: System.Int64
      description: "Identyfikator obiektu do zarejestrowania."
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> used if `obj` implements <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;></xref> or has a <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;></xref>. `info`zostanie zakończone. wszystkie informacje wymagane naprawy i następnie przekazywane do wymaganego obiektu po zakończeniu tego obiektu."
    - id: idOfContainingObj
      type: System.Int64
      description: "Identyfikator obiektu zawierającego `obj`. Ten parametr jest wymagany tylko wtedy, gdy `obj` jest typem wartości."
    - id: member
      type: System.Reflection.MemberInfo
      description: "Pole w obiektu zawierającego gdzie `obj` istnieje. Ten parametr ma znaczenie tylko wtedy, gdy `obj` jest typem wartości."
  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code> Parametr jest mniejsza niż lub równa zero."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "The <code>objectID</code> has already been registered for an object other than <code>obj</code>, or <code>member</code> is not a <xref:System.Reflection.FieldInfo> and <code>member</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Reflection.FieldInfo>"
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])
  id: RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Rejestruje członkiem tablicy zawartych w obiekcie, gdy jest on deserializacji, skojarzenie go z <code> objectID </code>oraz rejestrowanie <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  remarks: "Należy podać `member` i `idOfContainingObj` parametry Jeśli `obj` jest <xref:System.ValueType>ze względu na sposób korekty są wykonywane na <xref:System.ValueType>obiektów.</xref:System.ValueType> </xref:System.ValueType> Miejsca do przechowywania informacji o <xref:System.ValueType>został przydzielony wbudowany z zawierającego go obiektu.</xref:System.ValueType> Jednakże, gdy <xref:System.ValueType>jest opakowany rejestrowana z <xref:System.Runtime.Serialization.ObjectManager>, utraty połączenia z zawierającego go obiektu.</xref:System.Runtime.Serialization.ObjectManager> </xref:System.ValueType> Aby zagwarantować, że korekt występować w wystąpieniu programu <xref:System.ValueType>przechowywanych w obiektu zawierającego i nie spakowanym wystąpieniem <xref:System.Runtime.Serialization.ObjectManager>przechowuje dodatkowe informacje.</xref:System.Runtime.Serialization.ObjectManager> </xref:System.ValueType>       <xref:System.Runtime.Serialization.ObjectManager>przechowuje informacje o obiekt i jego identyfikator.</xref:System.Runtime.Serialization.ObjectManager> Podczas deserializacji, nowsze <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>służy do odnajdywania identyfikator określonego obiektu ma już deserializacji, czy czy do przodu odwołanie do obiektu nie jest jeszcze zdeserializować.</xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>"
  syntax:
    content: public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member, int[] arrayIndex);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do zarejestrowania."
    - id: objectID
      type: System.Int64
      description: "Identyfikator obiektu do zarejestrowania."
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> used if `obj` implements <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;></xref> or has a <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;></xref>. `info`zostanie zakończone. wszystkie informacje wymagane naprawy i następnie przekazywane do wymaganego obiektu po zakończeniu tego obiektu."
    - id: idOfContainingObj
      type: System.Int64
      description: "Identyfikator obiektu zawierającego `obj`. Ten parametr jest wymagany tylko wtedy, gdy `obj` jest typem wartości."
    - id: member
      type: System.Reflection.MemberInfo
      description: "Pole w obiektu zawierającego gdzie `obj` istnieje. Ten parametr ma znaczenie tylko wtedy, gdy `obj` jest typem wartości."
    - id: arrayIndex
      type: System.Int32[]
      description: "Jeśli `obj` jest <xref:System.ValueType>i element członkowski tablicy `arrayIndex` zawiera indeks w tablicy gdzie `obj` istnieje.</xref:System.ValueType> `arrayIndex`jest ignorowana, jeśli `obj` nie jest zarówno <xref:System.ValueType>i element członkowski tablicy.</xref:System.ValueType>"
  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code> Parametr jest mniejsza niż lub równa zero."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "The <code>objectID</code> has already been registered for an object other than <code>obj</code>, or <code>member</code> is not a <xref:System.Reflection.FieldInfo> and <code>member</code> isn&quot;t <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Reflection.FieldInfo>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: ObjectManager(ISurrogateSelector,StreamingContext)
  nameWithType: ObjectManager.ObjectManager(ISurrogateSelector,StreamingContext)
  fullName: System.Runtime.Serialization.ObjectManager.ObjectManager(ISurrogateSelector,StreamingContext)
- uid: System.Runtime.Serialization.ISurrogateSelector
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISurrogateSelector
  nameWithType: ISurrogateSelector
  fullName: System.Runtime.Serialization.ISurrogateSelector
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization.ObjectManager.DoFixups
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: DoFixups()
  nameWithType: ObjectManager.DoFixups()
  fullName: System.Runtime.Serialization.ObjectManager.DoFixups()
- uid: System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: GetObject(Int64)
  nameWithType: ObjectManager.GetObject(Int64)
  fullName: System.Runtime.Serialization.ObjectManager.GetObject(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RaiseDeserializationEvent()
  nameWithType: ObjectManager.RaiseDeserializationEvent()
  fullName: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent()
- uid: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RaiseOnDeserializingEvent(Object)
  nameWithType: ObjectManager.RaiseOnDeserializingEvent(Object)
  fullName: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(Object)
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordArrayElementFixup(Int64,Int32,Int64)
  nameWithType: ObjectManager.RecordArrayElementFixup(Int64,Int32,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(Int64,Int32,Int64)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordArrayElementFixup(Int64,Int32[],Int64)
  nameWithType: ObjectManager.RecordArrayElementFixup(Int64,Int32[],Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(Int64,Int32[],Int64)
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordDelayedFixup(Int64,String,Int64)
  nameWithType: ObjectManager.RecordDelayedFixup(Int64,String,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(Int64,String,Int64)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordFixup(Int64,MemberInfo,Int64)
  nameWithType: ObjectManager.RecordFixup(Int64,MemberInfo,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordFixup(Int64,MemberInfo,Int64)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject(Object,Int64)
  nameWithType: ObjectManager.RegisterObject(Object,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64)
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject(Object,Int64,SerializationInfo)
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
- uid: System.Runtime.Serialization.ObjectManager.#ctor*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: ObjectManager
  nameWithType: ObjectManager.ObjectManager
- uid: System.Runtime.Serialization.ObjectManager.DoFixups*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: DoFixups
  nameWithType: ObjectManager.DoFixups
- uid: System.Runtime.Serialization.ObjectManager.GetObject*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: GetObject
  nameWithType: ObjectManager.GetObject
- uid: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RaiseDeserializationEvent
  nameWithType: ObjectManager.RaiseDeserializationEvent
- uid: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RaiseOnDeserializingEvent
  nameWithType: ObjectManager.RaiseOnDeserializingEvent
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordArrayElementFixup
  nameWithType: ObjectManager.RecordArrayElementFixup
- uid: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordDelayedFixup
  nameWithType: ObjectManager.RecordDelayedFixup
- uid: System.Runtime.Serialization.ObjectManager.RecordFixup*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordFixup
  nameWithType: ObjectManager.RecordFixup
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject
  nameWithType: ObjectManager.RegisterObject
