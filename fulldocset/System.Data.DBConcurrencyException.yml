### YamlMime:ManagedReference
items:
- uid: System.Data.DBConcurrencyException
  id: DBConcurrencyException
  children:
  - System.Data.DBConcurrencyException.#ctor
  - System.Data.DBConcurrencyException.#ctor(System.String)
  - System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)
  - System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])
  - System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])
  - System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)
  - System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.DBConcurrencyException.Row
  - System.Data.DBConcurrencyException.RowCount
  langs:
  - csharp
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException
  fullName: System.Data.DBConcurrencyException
  type: Class
  summary: "Wyjątek zgłaszany przez <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> podczas wstawiania, aktualizowania lub usuwania operacji, jeśli liczba zmodyfikowanych wierszy jest równa zero."
  remarks: "<xref:System.Data.Common.DataAdapter>Sprawdza liczbę wierszy wpływ wykonywanie każdego insert, update lub operacja usuwania i zgłasza wyjątek, jeśli liczba jest równa zero.</xref:System.Data.Common.DataAdapter> Przyczyną tego wyjątku jest zazwyczaj Naruszenie współbieżności."
  syntax:
    content: 'public sealed class DBConcurrencyException : SystemException'
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.#ctor
  id: '#ctor'
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: DBConcurrencyException()
  nameWithType: DBConcurrencyException.DBConcurrencyException()
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref> klasy."
  remarks: "Konstruktor domyślny inicjuje wszystkie pola z wartościami domyślnymi."
  syntax:
    content: public DBConcurrencyException ();
    parameters: []
  overload: System.Data.DBConcurrencyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: DBConcurrencyException(String)
  nameWithType: DBConcurrencyException.DBConcurrencyException(String)
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref> klasy."
  syntax:
    content: public DBConcurrencyException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Tekst opisujący szczegóły wyjątku."
  overload: System.Data.DBConcurrencyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: DBConcurrencyException(String,Exception)
  nameWithType: DBConcurrencyException.DBConcurrencyException(String,Exception)
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String,Exception)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref> klasy."
  remarks: "Możesz utworzyć nowy wyjątek, który przechwytuje wcześniej wyjątek. Kod obsługujący drugi wyjątek może być Sprawdź przyczynę błędu początkowej dodatkowych informacji z wcześniejszych wyjątek, nazywany również wyjątek wewnętrzny."
  syntax:
    content: public DBConcurrencyException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "Tekst opisujący szczegóły wyjątku."
    - id: inner
      type: System.Exception
      description: "Odwołanie do wyjątek wewnętrzny."
  overload: System.Data.DBConcurrencyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])
  id: '#ctor(System.String,System.Exception,System.Data.DataRow[])'
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: DBConcurrencyException(String,Exception,DataRow[])
  nameWithType: DBConcurrencyException.DBConcurrencyException(String,Exception,DataRow[])
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String,Exception,DataRow[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref> klasy."
  syntax:
    content: public DBConcurrencyException (string message, Exception inner, System.Data.DataRow[] dataRows);
    parameters:
    - id: message
      type: System.String
      description: "Komunikat o błędzie opisujący przyczynę tego wyjątku."
    - id: inner
      type: System.Exception
      description: "Wyjątek będący przyczyną bieżącego wyjątku lub odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic), jeśli jest określony żaden wyjątek wewnętrzny."
    - id: dataRows
      type: System.Data.DataRow[]
      description: "Tablica zawierająca <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów, których Niepowodzenie aktualizacji wygenerowany tego wyjątku."
  overload: System.Data.DBConcurrencyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])
  id: CopyToRows(System.Data.DataRow[])
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: CopyToRows(DataRow[])
  nameWithType: DBConcurrencyException.CopyToRows(DataRow[])
  fullName: System.Data.DBConcurrencyException.CopyToRows(DataRow[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopie <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów, których Niepowodzenie aktualizacji wygenerowany wyjątek, aby określona tablica elementów <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów."
  remarks: "Podczas przeprowadzania aktualizacji wsadowych z <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>Właściwość <xref:System.Data.Common.DataAdapter>ustawioną `true`, zgłoszenia tego wyjątku, jeśli wszystkie wiersz Niepowodzenie aktualizacji.</xref:System.Data.Common.DataAdapter> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> W takim przypadku to <xref:System.Data.DBConcurrencyException>zawiera <xref:System.Data.DataRow>obiektów dla wszystkich wierszy, w których aktualizacja nie powiodła się, a nie tylko jedno <xref:System.Data.DataRow>obiektu w <xref:System.Data.DBConcurrencyException.Row%2A>i dotyczy <xref:System.Data.DataRow>obiektów mogą zostać pobrane przez wywołanie <xref:System.Data.DBConcurrencyException.CopyToRows%2A>.</xref:System.Data.DBConcurrencyException.CopyToRows%2A> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException.Row%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException>"
  syntax:
    content: public void CopyToRows (System.Data.DataRow[] array);
    parameters:
    - id: array
      type: System.Data.DataRow[]
      description: "Jednowymiarowa tablica <xref href=&quot;System.Data.DataRow&quot;> </xref> obiekty do kopiowania <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów do."
  overload: System.Data.DBConcurrencyException.CopyToRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)
  id: CopyToRows(System.Data.DataRow[],System.Int32)
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: CopyToRows(DataRow[],Int32)
  nameWithType: DBConcurrencyException.CopyToRows(DataRow[],Int32)
  fullName: System.Data.DBConcurrencyException.CopyToRows(DataRow[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopie <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów, których Niepowodzenie aktualizacji wygenerowany wyjątek, aby określona tablica elementów <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów, zaczynając od indeksu tablicy w określonej lokalizacji docelowej."
  remarks: "Podczas przeprowadzania aktualizacji wsadowych z <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>Właściwość <xref:System.Data.Common.DataAdapter>ustawioną `true`, zgłoszenia tego wyjątku, jeśli wszystkie wiersz Niepowodzenie aktualizacji.</xref:System.Data.Common.DataAdapter> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> W takim przypadku to <xref:System.Data.DBConcurrencyException>zawiera <xref:System.Data.DataRow>obiektów dla wszystkich wierszy, w których aktualizacja nie powiodła się, a nie tylko jedno <xref:System.Data.DataRow>obiektu w <xref:System.Data.DBConcurrencyException.Row%2A>i dotyczy <xref:System.Data.DataRow>obiektów mogą zostać pobrane przez wywołanie <xref:System.Data.DBConcurrencyException.CopyToRows%2A>.</xref:System.Data.DBConcurrencyException.CopyToRows%2A> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException.Row%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException>"
  syntax:
    content: public void CopyToRows (System.Data.DataRow[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Data.DataRow[]
      description: "Jednowymiarowa tablica <xref href=&quot;System.Data.DataRow&quot;> </xref> obiekty do kopiowania <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów do."
    - id: arrayIndex
      type: System.Int32
      description: "Indeks tablicy docelowej, aby rozpocząć kopiowanie do."
  overload: System.Data.DBConcurrencyException.CopyToRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DBConcurrencyException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.DBConcurrencyException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Wypełnia obiekt informacje serializacji aprcified dane potrzebne do serializacji <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref>."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowuje dane serializowane skojarzone z <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext>, która zawiera źródło docelowego serializowanym strumieniu skojarzone z <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Data.DBConcurrencyException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> info </code> Parametr jest odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.Row
  id: Row
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: Row
  nameWithType: DBConcurrencyException.Row
  fullName: System.Data.DBConcurrencyException.Row
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia wartość <xref href=&quot;System.Data.DataRow&quot;> </xref> generowany <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref>."
  remarks: "Użyj wiersza do pobierania wartości <xref:System.Data.DataRow>wiersza, który wygenerowany <xref:System.Data.DBConcurrencyException>.</xref:System.Data.DBConcurrencyException> </xref:System.Data.DataRow> Ustawienie wartości <xref:System.Data.DataRow>nie ma wpływu.</xref:System.Data.DataRow>       Podczas przeprowadzania aktualizacji wsadowych z <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>Właściwość <xref:System.Data.Common.DataAdapter>ustawioną `true`, zgłoszenia tego wyjątku, jeśli wszystkie wiersz Niepowodzenie aktualizacji.</xref:System.Data.Common.DataAdapter> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> W takim przypadku ten <xref:System.Data.DBConcurrencyException>zawiera <xref:System.Data.DataRow>obiekty, dla wszystkich wierszy, w których aktualizacja nie powiodła się, a nie tylko jeden <xref:System.Data.DataRow>obiekt, w wierszu i dotyczy <xref:System.Data.DataRow>obiektów mogą zostać pobrane przez wywołanie <xref:System.Data.DBConcurrencyException.CopyToRows%2A>.</xref:System.Data.DBConcurrencyException.CopyToRows%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException>       Obsługa serializacji nie istnieje dla <xref:System.Data.DataRow>obiektów.</xref:System.Data.DataRow> W związku z tym jeśli można serializować <xref:System.Data.DBConcurrencyException>obiekt, wartość właściwości wiersza w wersja serializowanego obiektu ma ustawioną wartość null.</xref:System.Data.DBConcurrencyException>"
  syntax:
    content: public System.Data.DataRow Row { get; set; }
    return:
      type: System.Data.DataRow
      description: "Wartość <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DBConcurrencyException.Row*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.RowCount
  id: RowCount
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: RowCount
  nameWithType: DBConcurrencyException.RowCount
  fullName: System.Data.DBConcurrencyException.RowCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera liczbę wierszy, którego aktualizacja nie powiodła się, generowania tego wyjątku."
  syntax:
    content: public int RowCount { get; }
    return:
      type: System.Int32
      description: "Całkowitą reprezentującą liczbę liczbę wierszy, którego aktualizacja nie powiodła się."
  overload: System.Data.DBConcurrencyException.RowCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.DBConcurrencyException.#ctor
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException()
  nameWithType: DBConcurrencyException.DBConcurrencyException()
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException()
- uid: System.Data.DBConcurrencyException.#ctor(System.String)
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException(String)
  nameWithType: DBConcurrencyException.DBConcurrencyException(String)
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException(String,Exception)
  nameWithType: DBConcurrencyException.DBConcurrencyException(String,Exception)
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException(String,Exception,DataRow[])
  nameWithType: DBConcurrencyException.DBConcurrencyException(String,Exception,DataRow[])
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String,Exception,DataRow[])
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: CopyToRows(DataRow[])
  nameWithType: DBConcurrencyException.CopyToRows(DataRow[])
  fullName: System.Data.DBConcurrencyException.CopyToRows(DataRow[])
- uid: System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: CopyToRows(DataRow[],Int32)
  nameWithType: DBConcurrencyException.CopyToRows(DataRow[],Int32)
  fullName: System.Data.DBConcurrencyException.CopyToRows(DataRow[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DBConcurrencyException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.DBConcurrencyException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.DBConcurrencyException.Row
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: Row
  nameWithType: DBConcurrencyException.Row
  fullName: System.Data.DBConcurrencyException.Row
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DBConcurrencyException.RowCount
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: RowCount
  nameWithType: DBConcurrencyException.RowCount
  fullName: System.Data.DBConcurrencyException.RowCount
- uid: System.Data.DBConcurrencyException.#ctor*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException.DBConcurrencyException
- uid: System.Data.DBConcurrencyException.CopyToRows*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: CopyToRows
  nameWithType: DBConcurrencyException.CopyToRows
- uid: System.Data.DBConcurrencyException.GetObjectData*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: GetObjectData
  nameWithType: DBConcurrencyException.GetObjectData
- uid: System.Data.DBConcurrencyException.Row*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: Row
  nameWithType: DBConcurrencyException.Row
- uid: System.Data.DBConcurrencyException.RowCount*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: RowCount
  nameWithType: DBConcurrencyException.RowCount
