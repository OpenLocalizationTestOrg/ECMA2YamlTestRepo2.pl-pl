### YamlMime:ManagedReference
items:
- uid: System.Web.HttpResponse
  id: HttpResponse
  children:
  - System.Web.HttpResponse.#ctor(System.IO.TextWriter)
  - System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])
  - System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)
  - System.Web.HttpResponse.AddCacheItemDependencies(System.String[])
  - System.Web.HttpResponse.AddCacheItemDependency(System.String)
  - System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)
  - System.Web.HttpResponse.AddFileDependencies(System.String[])
  - System.Web.HttpResponse.AddFileDependency(System.String)
  - System.Web.HttpResponse.AddHeader(System.String,System.String)
  - System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  - System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)
  - System.Web.HttpResponse.AppendHeader(System.String,System.String)
  - System.Web.HttpResponse.AppendToLog(System.String)
  - System.Web.HttpResponse.ApplyAppPathModifier(System.String)
  - System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)
  - System.Web.HttpResponse.BinaryWrite(System.Byte[])
  - System.Web.HttpResponse.Buffer
  - System.Web.HttpResponse.BufferOutput
  - System.Web.HttpResponse.Cache
  - System.Web.HttpResponse.CacheControl
  - System.Web.HttpResponse.Charset
  - System.Web.HttpResponse.Clear
  - System.Web.HttpResponse.ClearContent
  - System.Web.HttpResponse.ClearHeaders
  - System.Web.HttpResponse.ClientDisconnectedToken
  - System.Web.HttpResponse.Close
  - System.Web.HttpResponse.ContentEncoding
  - System.Web.HttpResponse.ContentType
  - System.Web.HttpResponse.Cookies
  - System.Web.HttpResponse.DisableKernelCache
  - System.Web.HttpResponse.DisableUserCache
  - System.Web.HttpResponse.End
  - System.Web.HttpResponse.EndFlush(System.IAsyncResult)
  - System.Web.HttpResponse.Expires
  - System.Web.HttpResponse.ExpiresAbsolute
  - System.Web.HttpResponse.Filter
  - System.Web.HttpResponse.Flush
  - System.Web.HttpResponse.FlushAsync
  - System.Web.HttpResponse.HeaderEncoding
  - System.Web.HttpResponse.Headers
  - System.Web.HttpResponse.HeadersWritten
  - System.Web.HttpResponse.IsClientConnected
  - System.Web.HttpResponse.IsRequestBeingRedirected
  - System.Web.HttpResponse.Output
  - System.Web.HttpResponse.OutputStream
  - System.Web.HttpResponse.Pics(System.String)
  - System.Web.HttpResponse.PushPromise(System.String)
  - System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.HttpResponse.Redirect(System.String)
  - System.Web.HttpResponse.Redirect(System.String,System.Boolean)
  - System.Web.HttpResponse.RedirectLocation
  - System.Web.HttpResponse.RedirectPermanent(System.String)
  - System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)
  - System.Web.HttpResponse.RedirectToRoute(System.Object)
  - System.Web.HttpResponse.RedirectToRoute(System.String)
  - System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)
  - System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RemoveOutputCacheItem(System.String)
  - System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)
  - System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)
  - System.Web.HttpResponse.Status
  - System.Web.HttpResponse.StatusCode
  - System.Web.HttpResponse.StatusDescription
  - System.Web.HttpResponse.SubStatusCode
  - System.Web.HttpResponse.SupportsAsyncFlush
  - System.Web.HttpResponse.SuppressContent
  - System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  - System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  - System.Web.HttpResponse.TransmitFile(System.String)
  - System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)
  - System.Web.HttpResponse.TrySkipIisCustomErrors
  - System.Web.HttpResponse.Write(System.Char)
  - System.Web.HttpResponse.Write(System.Object)
  - System.Web.HttpResponse.Write(System.String)
  - System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)
  - System.Web.HttpResponse.WriteFile(System.String)
  - System.Web.HttpResponse.WriteFile(System.String,System.Boolean)
  - System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)
  - System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)
  - System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  langs:
  - csharp
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
  type: Class
  summary: "Hermetyzuje informacje o odpowiedzi HTTP z operacji programu ASP.NET."
  remarks: "Metody i właściwości klasy HttpResponse są dostępne za pośrednictwem <xref:System.Web.HttpApplication.Response%2A>właściwości <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, i <xref:System.Web.UI.UserControl>klasy.</xref:System.Web.UI.UserControl> </xref:System.Web.UI.Page> </xref:System.Web.HttpContext> </xref:System.Web.HttpApplication> </xref:System.Web.HttpApplication.Response%2A>       Następujące metody klasy HttpResponse są obsługiwane tylko w scenariuszach post Wstecz i nie znajduje się w asynchronicznej post kopii scenariusze:- <xref:System.Web.HttpResponse.BinaryWrite%2A>— <xref:System.Web.HttpResponse.Clear%2A>— <xref:System.Web.HttpResponse.ClearContent%2A>— <xref:System.Web.HttpResponse.ClearHeaders%2A>— <xref:System.Web.HttpResponse.Close%2A>— <xref:System.Web.HttpResponse.End%2A>— <xref:System.Web.HttpResponse.Flush%2A>— <xref:System.Web.HttpResponse.TransmitFile%2A>— <xref:System.Web.HttpResponse.Write%2A>— <xref:System.Web.HttpResponse.WriteFile%2A>— <xref:System.Web.HttpResponse.WriteSubstitution%2A>aktualizacje stron częściowych jest włączone, gdy używasz <xref:System.Web.UI.UpdatePanel>formanty zaktualizować wybranych regionach zamiast aktualizowania całej strony ogłaszanie zwrotne strony.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.HttpResponse.WriteSubstitution%2A> </xref:System.Web.HttpResponse.WriteFile%2A> </xref:System.Web.HttpResponse.Write%2A> </xref:System.Web.HttpResponse.TransmitFile%2A> </xref:System.Web.HttpResponse.Flush%2A> </xref:System.Web.HttpResponse.End%2A> </xref:System.Web.HttpResponse.Close%2A> </xref:System.Web.HttpResponse.ClearHeaders%2A> </xref:System.Web.HttpResponse.ClearContent%2A> </xref:System.Web.HttpResponse.Clear%2A> </xref:System.Web.HttpResponse.BinaryWrite%2A> Aby uzyskać więcej informacji, zobacz [informacje o formancie UpdatePanel](~/add/includes/ajax-current-ext-md.md) i [omówienie renderowania stron częściowych](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example draws three overlapping rectangles when the page is requested. The code begins by setting the <xref:System.Web.HttpResponse.ContentType%2A> property to image/jpeg, so that the entire page will be rendered as a JPEG image. The code then calls the <xref:System.Web.HttpResponse.Clear%2A> method to ensure that no extraneous content is sent with this response. Next, the code sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the page is completely processed before it is sent to the requesting client. Two objects used to draw the rectangles are then created: a <xref:System.Drawing.Bitmap> and a <xref:System.Drawing.Graphics> object. The variables created in the page are used as coordinates to draw the rectangles and a string that appears inside the largest rectangle.  \n  \n When the three rectangles and the string that appears inside them are drawn, the <xref:System.Drawing.Bitmap> is saved to the <xref:System.IO.Stream> object that is associated with the <xref:System.Web.HttpResponse.OutputStream%2A> property and its format is set to JPEG. The code calls the <xref:System.Drawing.Image.Dispose%2A> and <xref:System.Drawing.Graphics.Dispose%2A> methods to release the resources used by the two drawing objects. Lastly, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the buffered response to the requesting client.  \n  \n> [!NOTE]\n>  In code, the HttpResponse object is referred to by the keyword `Response`. For example, `Response.Clear()` refers to the <xref:System.Web.HttpResponse.Clear%2A?displayProperty=fullName> method. The <xref:System.Web.UI.Page> class has a property that is named <xref:System.Web.UI.Page.Response%2A> that exposes the current instance of HttpResponse.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/t-system.web.httpresponse_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/t-system.web.httpresponse_1.aspx)]"
  syntax:
    content: public sealed class HttpResponse
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpResponse.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: HttpResponse(TextWriter)
  nameWithType: HttpResponse.HttpResponse(TextWriter)
  fullName: System.Web.HttpResponse.HttpResponse(TextWriter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.HttpResponse&quot;> </xref> klasy."
  remarks: "Ten element członkowski obsługuje infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie.       Metody i właściwości <xref:System.Web.HttpResponse>klasy są dostępne za pośrednictwem wewnętrznego <xref:System.Web.HttpContext.Response%2A>obiektu w programie ASP.NET.</xref:System.Web.HttpContext.Response%2A> </xref:System.Web.HttpResponse>"
  syntax:
    content: public HttpResponse (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>obiekt, który umożliwia niestandardowych wyniku HTTP.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpResponse.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])
  id: AddCacheDependency(System.Web.Caching.CacheDependency[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheDependency(CacheDependency[])
  nameWithType: HttpResponse.AddCacheDependency(CacheDependency[])
  fullName: System.Web.HttpResponse.AddCacheDependency(CacheDependency[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Kojarzy zestaw zależności w pamięci podręcznej z odpowiedzią ułatwiające unieważniania odpowiedzi, jeśli jest ona przechowywana w wyjściowej pamięci podręcznej i zmienić określonej zależności."
  remarks: "Metoda AddCacheDependency umożliwia zależności, które można utworzyć między buforowane odpowiedzi i <xref:System.Web.Caching.CacheDependency>obiektu.</xref:System.Web.Caching.CacheDependency>"
  example:
  - "The following example demonstrates how to create a cache dependency by using the AddCacheDependency method and a <xref:System.Web.Caching.CacheDependency> object.  \n  \n [!code-vb[HttpResponse.AddCacheDependency#1](~/add/codesnippet/visualbasic/a9e8dbb8-b5f3-41b1-b083-_1.aspx)]\n [!code-cs[HttpResponse.AddCacheDependency#1](~/add/codesnippet/csharp/a9e8dbb8-b5f3-41b1-b083-_1.aspx)]"
  syntax:
    content: public void AddCacheDependency (System.Web.Caching.CacheDependency[] dependencies);
    parameters:
    - id: dependencies
      type: System.Web.Caching.CacheDependency[]
      description: "Plik, klucz pamięci podręcznej lub <xref href=&quot;System.Web.Caching.CacheDependency&quot;> </xref> do dodania do listy zależności aplikacji."
  overload: System.Web.HttpResponse.AddCacheDependency*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>dependencies</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ta metoda została wywołana za późno w potoku przetwarzania w pamięci podręcznej, po buforowanej odpowiedzi został już utworzony."
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)
  id: AddCacheItemDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheItemDependencies(ArrayList)
  nameWithType: HttpResponse.AddCacheItemDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(ArrayList)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Sprawia, że ważności buforowaną odpowiedź zależny od innych elementów w pamięci podręcznej."
  remarks: "Jeśli elementy wymienione w `cacheKeys` parametru są usuwane z pamięci podręcznej, odpowiedź buforowana bieżącego elementu jest nieprawidłowy."
  example:
  - "The following example demonstrates how to use an ASP.NET page that is output cached. The code for the page creates an <xref:System.Collections.ArrayList> object of keys that are associated with items that are stored in the <xref:System.Web.Caching.Cache> object. Next, the code passes the <xref:System.Collections.ArrayList> as the parameter in a call to the AddCacheItemDependencies method. This makes the output cached response not valid, if any of the files specified in the <xref:System.Collections.ArrayList> change.  \n  \n [!code-cs[System.Web.HttpResponse_Samples2#5](~/add/codesnippet/csharp/m-system.web.httprespons_6_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples2#5](~/add/codesnippet/visualbasic/m-system.web.httprespons_6_1.aspx)]"
  syntax:
    content: public void AddCacheItemDependencies (System.Collections.ArrayList cacheKeys);
    parameters:
    - id: cacheKeys
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref> Zawierający klucze elementów, które jest zależne od bieżącej buforowanej odpowiedzi."
  overload: System.Web.HttpResponse.AddCacheItemDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.String[])
  id: AddCacheItemDependencies(System.String[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheItemDependencies(String[])
  nameWithType: HttpResponse.AddCacheItemDependencies(String[])
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Sprawia, że ważności elementu pamięci podręcznej zależny od innego elementu w pamięci podręcznej."
  remarks: "Przy `cacheKey`s są usuwane z pamięci podręcznej i odpowiedź buforowana bieżącego elementu jest nieprawidłowy."
  syntax:
    content: public void AddCacheItemDependencies (string[] cacheKeys);
    parameters:
    - id: cacheKeys
      type: System.String[]
      description: "Tablica elementu kluczy, które jest zależny od buforowanej odpowiedzi."
  overload: System.Web.HttpResponse.AddCacheItemDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheItemDependency(System.String)
  id: AddCacheItemDependency(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheItemDependency(String)
  nameWithType: HttpResponse.AddCacheItemDependency(String)
  fullName: System.Web.HttpResponse.AddCacheItemDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Sprawia, że ważności buforowaną odpowiedź zależny od innego elementu w pamięci podręcznej."
  remarks: "Gdy element odpowiadający `cacheKey` parametr zostanie usunięty z pamięci podręcznej, odpowiedź buforowana bieżącego elementu jest nieprawidłowy."
  example:
  - "The following example is an ASP.NET user control that is output cached. The code for the control calls the AddCacheItemDependency method with the key of an item stored in the <xref:System.Web.Caching.Cache> object passed as its parameter. If the item does not exist in the cache, the control's response that was stored in the output cache is invalidated. This means that on the subsequent request, a new version of the control's response will be added to the output cache.  \n  \n Next, the code checks whether an item associated with a `bookData` key is stored in the `Cache` object, and displays one of two lines of text dependent upon the result. Then, the code sets the <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property of a <xref:System.Web.UI.WebControls.DataGrid> control, which is named `dgBooks`, with a call to a custom `DataHelper` class' shared `GetBookData` method, and populates the <xref:System.Web.UI.WebControls.DataGrid> with the <xref:System.Web.UI.Control.DataBind%2A> method.  \n  \n [!code-cs[System.Web.HttpResponse_Samples2#3](~/add/codesnippet/csharp/m-system.web.httprespons_13_1.ascx)]\n [!code-vb[System.Web.HttpResponse_Samples2#3](~/add/codesnippet/visualbasic/m-system.web.httprespons_13_1.ascx)]"
  syntax:
    content: public void AddCacheItemDependency (string cacheKey);
    parameters:
    - id: cacheKey
      type: System.String
      description: "Klucz elementu, który jest zależny od buforowanej odpowiedzi."
  overload: System.Web.HttpResponse.AddCacheItemDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)
  id: AddFileDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddFileDependencies(ArrayList)
  nameWithType: HttpResponse.AddFileDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddFileDependencies(ArrayList)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje grupę nazw plików do kolekcji nazw plików, na których jest zależna bieżąca odpowiedź."
  remarks: ''
  example:
  - "The following example is an ASP.NET page that is output cached. The code for the page creates an <xref:System.Collections.ArrayList> of file paths, and then passes the <xref:System.Collections.ArrayList> as the parameter in a call to the AddFileDependencies method. This makes the output cached response invalid if any of the files specified in the <xref:System.Collections.ArrayList> changes.  \n  \n [!code-vb[System.Web.HttpResponse_Samples2#6](~/add/codesnippet/visualbasic/m-system.web.httprespons_10_1.aspx)]\n [!code-cs[System.Web.HttpResponse_Samples2#6](~/add/codesnippet/csharp/m-system.web.httprespons_10_1.aspx)]"
  syntax:
    content: public void AddFileDependencies (System.Collections.ArrayList filenames);
    parameters:
    - id: filenames
      type: System.Collections.ArrayList
      description: "Kolekcja plików do dodania."
  overload: System.Web.HttpResponse.AddFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddFileDependencies(System.String[])
  id: AddFileDependencies(System.String[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddFileDependencies(String[])
  nameWithType: HttpResponse.AddFileDependencies(String[])
  fullName: System.Web.HttpResponse.AddFileDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje tablicę nazw plików do kolekcji nazw plików, na których jest zależna bieżąca odpowiedź."
  remarks: ''
  example:
  - "The following example adds an array of file names to the AddFileDependencies file dependency list. If the files changes, the cached response is invalidated.  \n  \n [!code-cs[Response.AddFileDependency#1](~/add/codesnippet/csharp/m-system.web.httprespons_0_1.aspx)]\n [!code-vb[Response.AddFileDependency#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_0_1.aspx)]"
  syntax:
    content: public void AddFileDependencies (string[] filenames);
    parameters:
    - id: filenames
      type: System.String[]
      description: "Tablica plików do dodania."
  overload: System.Web.HttpResponse.AddFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddFileDependency(System.String)
  id: AddFileDependency(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddFileDependency(String)
  nameWithType: HttpResponse.AddFileDependency(String)
  fullName: System.Web.HttpResponse.AddFileDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje nazwę jednego pliku do kolekcji nazw plików, na których jest zależna bieżąca odpowiedź."
  remarks: 'Metoda AddFileDependency umożliwia dodawanie zależności pliku, należy również określić wyjściowej pamięci podręcznej programowo i deklaratywnie. Na przykład aby określić deklaratywnie buforowania danych wyjściowych, należy użyć dyrektywy. Aby uzyskać więcej informacji, zobacz [porady: pamięci podręcznej danych wyjściowych strony o zależnościach plików](~/add/includes/ajax-current-ext-md.md).'
  example:
  - "The following example shows how to add a single file name to the AddFileDependency file dependency list. If the file changes, the cached response is invalidated.  \n  \n [!code-vb[Classic HttpResponse.AddFileDependency Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_11_1.vb)]\n [!code-cs[Classic HttpResponse.AddFileDependency Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_11_1.cs)]"
  syntax:
    content: public void AddFileDependency (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Nazwa pliku do dodania."
  overload: System.Web.HttpResponse.AddFileDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddHeader(System.String,System.String)
  id: AddHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddHeader(String,String)
  nameWithType: HttpResponse.AddHeader(String,String)
  fullName: System.Web.HttpResponse.AddHeader(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje nagłówek HTTP w strumieniu wyjściowym. AddHeader jest zapewnia zgodność z wcześniejszymi wersjami programu ASP."
  remarks: "AddHeader jest taka sama jak <xref:System.Web.HttpResponse.AppendHeader%2A>i tylko w celu zachowania zgodności z wcześniejszymi wersjami programu ASP.</xref:System.Web.HttpResponse.AppendHeader%2A> ASP.NET za pomocą <xref:System.Web.HttpResponse.AppendHeader%2A>.</xref:System.Web.HttpResponse.AppendHeader%2A>"
  syntax:
    content: public void AddHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa nagłówka HTTP, aby dodać `value` do."
    - id: value
      type: System.String
      description: "Ciąg do dodania do nagłówka."
  overload: System.Web.HttpResponse.AddHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  id: AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddOnSendingHeaders(Action<HttpContext>)
  nameWithType: HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
  fullName: System.Web.HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "[Obsługiwane w programie .NET Framework 4.5.2 i nowszych wersjach]       Rejestruje wywołanie zwrotne środowiska uruchomieniowego ASP.NET wywoła bezpośrednio przed odpowiedzi wysłania nagłówki dla tego żądania."
  remarks: "> [!IMPORTANT]> Metoda AddOnSendingHeaders nie jest wywoływana, jeśli moduł macierzysty opróżnia najpierw odpowiedzi.       OnSendingHeaders pseudo-zdarzeń różni się od zdarzeń potoku poziom IHttpModule w tym jest subskrypcji na żądanie, a nie w subskrypcji dla poszczególnych aplikacji. Celem nie może zmienić kod stanu odpowiedzi wywołania zwrotnego lub może ustawić nagłówka lub plik cookie odpowiedzi. Inne uwagi dotyczące użycia i ostrzeżenia: — Ta metoda jest efektywne tylko wtedy, gdy usługi IIS są uruchamiane w potoku tryb zintegrowanego potoku i tylko wtedy, gdy nagłówki odpowiedzi nie zostały jeszcze wysłane dla bieżącego żądania.      -Środowiskiem uruchomieniowym ASP.NET nie gwarantuje niczego o wywołanie zwrotne wywoływane w wątku. Na przykład wywołania zwrotnego może wywołać synchronicznie w wątku w tle Jeśli opróżnienie tła jest wykonywana. <xref:System.Web.HttpContext.Current%2A>nie musi być dostępna w takich wątku.</xref:System.Web.HttpContext.Current%2A>      -Wywołania zwrotnego nie mogą wywoływać dowolnej metody, które zmienia treść jednostki odpowiedzi lub który powoduje opróżnienie. Na przykład nie należy wywołać metodę wywołania zwrotnego <xref:System.Web.HttpResponse.Redirect%2A>, ponieważ ta metoda może manipulować treść jednostki odpowiedzi.</xref:System.Web.HttpResponse.Redirect%2A>      -Wywołania zwrotnego może zawierać tylko krótko uruchamianie kodu synchronicznego. Próba wywołania operacji asynchronicznej lub zaczekaj na taką operację może doprowadzić do zakleszczenia.      -Wywołania zwrotnego nie należy zgłosić wyjątek; w przeciwnym razie zachowanie jest niezdefiniowana."
  syntax:
    content: public System.Web.ISubscriptionToken AddOnSendingHeaders (Action<System.Web.HttpContext> callback);
    parameters:
    - id: callback
      type: System.Action{System.Web.HttpContext}
      description: "Metoda wywołania zwrotnego."
    return:
      type: System.Web.ISubscriptionToken
      description: "<xref href=&quot;System.Web.ISubscriptionToken&quot;> </xref> Obiekt, który reprezentuje subskrybowanie pseudo-zdarzeń OnSendingHeaders."
  overload: System.Web.HttpResponse.AddOnSendingHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)
  id: AppendCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AppendCookie(HttpCookie)
  nameWithType: HttpResponse.AppendCookie(HttpCookie)
  fullName: System.Web.HttpResponse.AppendCookie(HttpCookie)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje plik cookie HTTP do kolekcji wewnętrznej pliku cookie."
  remarks: ''
  example:
  - "The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and appends the cookie to the current cookie collection. All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.  \n  \n [!code-cs[Classic HttpResponse.AppendCookie Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_22_1.cs)]\n [!code-vb[Classic HttpResponse.AppendCookie Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_22_1.vb)]"
  syntax:
    content: public void AppendCookie (System.Web.HttpCookie cookie);
    parameters:
    - id: cookie
      type: System.Web.HttpCookie
      description: "<xref href=&quot;System.Web.HttpCookie&quot;> </xref> Do dodania do strumienia wyjściowego."
  overload: System.Web.HttpResponse.AppendCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Plik cookie jest dołączany po wysłaniu nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.AppendHeader(System.String,System.String)
  id: AppendHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AppendHeader(String,String)
  nameWithType: HttpResponse.AppendHeader(String,String)
  fullName: System.Web.HttpResponse.AppendHeader(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje nagłówek HTTP w strumieniu wyjściowym."
  remarks: "Jeśli korzystasz z metody AppendHeader wysyłanie nagłówków specyficzne dla pamięci podręcznej i w tym samym czasie korzystania z modelu obiektu pamięci podręcznej (<xref:System.Web.HttpResponse.Cache%2A>) można ustawić zasady pamięci podręcznej, nagłówków odpowiedzi HTTP, które odnoszą się do buforowania (`Cache-Control`, `Expires`, `Last-Modified`, `Pragma`, i `Vary`) mogą zostać usunięte, gdy jest używany model obiektu pamięci podręcznej.</xref:System.Web.HttpResponse.Cache%2A> To zachowanie umożliwia platformę ASP.NET do obsługi najbardziej restrykcyjne ustawienia. Rozważmy na przykład strona, która zawiera kontrolki użytkownika. Jeśli te rozwiązania mają zasady powodujące konflikt pamięci podręcznej, najbardziej restrykcyjne zasady pamięci podręcznej będzie używany. Jeśli jeden formant użytkownika ustawia nagłówek &quot;`Cache-Control: Public`&quot;i inny formant użytkownika ustawia nagłówek bardziej restrykcyjne&quot;`Cache-Control: Private`&quot; za pośrednictwem wywołania <xref:System.Web.HttpCachePolicy.SetCacheability%2A>, a następnie &quot;`Cache-Control: Private`&quot; nagłówka będą wysyłane z odpowiedzią.</xref:System.Web.HttpCachePolicy.SetCacheability%2A>       Listę standardowych nagłówków HTTP/1.1, zobacz sekcję &quot;Definicje pól nagłówka&quot; 14 w [Hypertext Transfer Protocol — HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specyfikacji w witrynie sieci Web w sieci World Wide Web konsorcjum W3C."
  example:
  - "The following example calls the AppendHeader method to add a custom header to the <xref:System.Web.HttpResponse> object sent to the requesting client.  \n  \n [!code-cs[System.Web.HttpResponse.AppendHeader_Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_19_1.aspx)]\n [!code-vb[System.Web.HttpResponse.AppendHeader_Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_19_1.aspx)]"
  syntax:
    content: public void AppendHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa nagłówka HTTP, aby dodać do strumienia wyjściowego."
    - id: value
      type: System.String
      description: "Ciąg do dołączenia do nagłówka."
  overload: System.Web.HttpResponse.AppendHeader*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Nagłówek jest dołączany po wysłaniu nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.AppendToLog(System.String)
  id: AppendToLog(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AppendToLog(String)
  nameWithType: HttpResponse.AppendToLog(String)
  fullName: System.Web.HttpResponse.AppendToLog(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje informacje dziennika niestandardowego do pliku dziennika usług Internet Information Services (IIS)."
  remarks: "Aby zezwolić na określony ciąg znaków, które mają być rejestrowane w pliku dziennika, należy najpierw włączyć **zapytania identyfikatora URI** opcji **rozszerzone właściwości rejestrowania** okno dialogowe dla lokacji, które mają być rejestrowane działanie w usługach IIS.       Aby dostosować rozszerzonej rejestrowania w usługach IIS 6.0, wykonaj następujące kroki: 1.  W Menedżerze usług IIS rozwiń węzeł komputera lokalnego, rozwiń folder w sieci Web lub witryny FTP, kliknij prawym przyciskiem myszy witrynę sieci Web i FTP, a następnie kliknij przycisk **właściwości**.      2.  Kliknij przycisk **sieci Web lub witrynę FTP** , a następnie wybierz **włączyć rejestrowanie** pole wyboru (Jeśli nie została jeszcze wybrana).      3.  W **format aktywnego dziennika** kliknij **rozszerzony Format W3C pliku dziennika**.      4.  Kliknij przycisk **właściwości**.      5.  Kliknij przycisk **zaawansowane** , a następnie wybierz właściwości, które mają być logowania, a następnie kliknij przycisk **OK**."
  example:
  - "The following example shows how to append a string to the log.  \n  \n [!code-vb[Classic HttpResponse.AppendToLog Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_15_1.vb)]\n [!code-cs[Classic HttpResponse.AppendToLog Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_15_1.cs)]"
  syntax:
    content: public void AppendToLog (string param);
    parameters:
    - id: param
      type: System.String
      description: "Tekst, który chcesz dodać do pliku dziennika."
  overload: System.Web.HttpResponse.AppendToLog*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ApplyAppPathModifier(System.String)
  id: ApplyAppPathModifier(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ApplyAppPathModifier(String)
  nameWithType: HttpResponse.ApplyAppPathModifier(String)
  fullName: System.Web.HttpResponse.ApplyAppPathModifier(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dodaje identyfikator sesji na ścieżkę wirtualną, jeśli używa sesji <> </> *> stan sesji i zwraca połączone ścieżki. Jeśli <> </> *> stan sesji nie jest używany, ApplyAppPathModifier zwraca oryginalnej ścieżki wirtualnej."
  remarks: "ApplyAppPathModifier jest używany tylko z sesji bez plików cookie do utworzenia bezwzględnej odwołania HREF."
  example:
  - "The following example declares a string variable named `urlConverted`, and sets it to the result of an ApplyAppPathModifier method call. The code then passes the variable's value to a <xref:System.Web.UI.WebControls.HyperLink> control's <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> property.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#5](~/add/codesnippet/csharp/m-system.web.httprespons_4_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#5](~/add/codesnippet/visualbasic/m-system.web.httprespons_4_1.aspx)]"
  syntax:
    content: public string ApplyAppPathModifier (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Ścieżka wirtualna do zasobu."
    return:
      type: System.String
      description: "<code> virtualPath </code> z sesją dodaje identyfikator."
  overload: System.Web.HttpResponse.ApplyAppPathModifier*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)
  id: BeginFlush(System.AsyncCallback,System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: BeginFlush(AsyncCallback,Object)
  nameWithType: HttpResponse.BeginFlush(AsyncCallback,Object)
  fullName: System.Web.HttpResponse.BeginFlush(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wysyła obecnie buforowaną odpowiedź do klienta."
  remarks: "Jeśli podstawowa <xref:System.Web.HttpWorkerRequest>obiektu obsługuje asynchroniczne operacje opróżniania i ta metoda jest wywoływana z zdarzenie asynchronicznego modułu lub asynchronicznej obsługi, operacja opróżniania jest wykonywane asynchronicznie.</xref:System.Web.HttpWorkerRequest> W przeciwnym razie operacja opróżniania odbywa się synchronicznie. Asynchronicznego opróżniania jest obsługiwana dla usług IIS 6.0 i nowszych."
  syntax:
    content: public IAsyncResult BeginFlush (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Obiektu wywołania zwrotnego."
    - id: state
      type: System.Object
      description: "Stan odpowiedzi."
    return:
      type: System.IAsyncResult
      description: "Asynchroniczny obiekt wyniku."
  overload: System.Web.HttpResponse.BeginFlush*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Odpowiedź jest już ukończone."
  platform:
  - net462
- uid: System.Web.HttpResponse.BinaryWrite(System.Byte[])
  id: BinaryWrite(System.Byte[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: BinaryWrite(Byte[])
  nameWithType: HttpResponse.BinaryWrite(Byte[])
  fullName: System.Web.HttpResponse.BinaryWrite(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje ciąg znaków binarnego do strumienia wyjściowego HTTP."
  remarks: ''
  example:
  - "The following example reads a text file into a buffer and writes the buffer to the HTTP output stream.  \n  \n [!code-cs[Classic HttpResponse.BinaryWrite Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_21_1.cs)]\n [!code-vb[Classic HttpResponse.BinaryWrite Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_21_1.vb)]"
  syntax:
    content: public void BinaryWrite (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bajty zapisu do strumienia wyjściowego."
  overload: System.Web.HttpResponse.BinaryWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Buffer
  id: Buffer
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Buffer
  nameWithType: HttpResponse.Buffer
  fullName: System.Web.HttpResponse.Buffer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia wartość wskazującą, czy do buforowania danych wyjściowych, a następnie wysłać je po pełnej odpowiedzi zakończyło się przetwarzanie."
  remarks: "Właściwość Buffer jest przestarzała uzyskać <xref:System.Web.HttpResponse.BufferOutput%2A>Właściwości i jest dostępne tylko w celu zapewnienia zgodności z wcześniejszymi wersjami programu ASP.</xref:System.Web.HttpResponse.BufferOutput%2A> ASP.NET za pomocą <xref:System.Web.HttpResponse.BufferOutput%2A>.</xref:System.Web.HttpResponse.BufferOutput%2A>"
  syntax:
    content: public bool Buffer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dane wyjściowe do klienta jest buforowana; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.BufferOutput
  id: BufferOutput
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: BufferOutput
  nameWithType: HttpResponse.BufferOutput
  fullName: System.Web.HttpResponse.BufferOutput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia wartość wskazującą, czy do buforowania danych wyjściowych, a następnie wysłać je po stronie pełne przetwarzanie ukończone."
  remarks: ''
  example:
  - "The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the BufferOutput property to true so that the entire page will be processed before any content is sent to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/p-system.web.httprespons_3_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.httprespons_3_1.aspx)]"
  syntax:
    content: public bool BufferOutput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dane wyjściowe do klienta jest buforowana; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.BufferOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Cache
  id: Cache
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Cache
  nameWithType: HttpResponse.Cache
  fullName: System.Web.HttpResponse.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera zasady buforowania (takich jak wygaśnięcia czasu ustawienia prywatności i różnią się klauzule) strony sieci Web."
  remarks: ''
  example:
  - "The following example writes properties of the current cache policy to the HTTP output stream.  \n  \n [!code-vb[Classic HttpResponse.Cache Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_4_1.vb)]\n [!code-cs[Classic HttpResponse.Cache Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_4_1.cs)]"
  syntax:
    content: public System.Web.HttpCachePolicy Cache { get; }
    return:
      type: System.Web.HttpCachePolicy
      description: "<xref href=&quot;System.Web.HttpCachePolicy&quot;> </xref> Obiekt, który zawiera informacje o zasadach buforowania bieżącej odpowiedzi."
  overload: System.Web.HttpResponse.Cache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.CacheControl
  id: CacheControl
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: CacheControl
  nameWithType: HttpResponse.CacheControl
  fullName: System.Web.HttpResponse.CacheControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia <xref uid=&quot;langword_csharp_Cache-Control&quot; name=&quot;Cache-Control&quot; href=&quot;&quot;> </xref> nagłówka HTTP, który jest zgodny z <xref href=&quot;System.Web.HttpCacheability&quot;> </xref> wartości wyliczenia."
  remarks: "Wartości `Private`, `Public`, i `No-Cache` są ciągami i musi być ujęta w znaki cudzysłowu (&quot;&quot;). Jeśli właściwość CacheControl jest ustawiona na wartość, która nie pasuje do jednej z <xref:System.Web.HttpCacheability>wartości wyliczenia, a następnie <xref:System.ArgumentException>jest generowany.</xref:System.ArgumentException> </xref:System.Web.HttpCacheability> Jeśli nie ustawiono właściwości CacheControl, buforowanie odpowiedzi jest ustawiony na <xref:System.Web.HttpCacheability>.</xref:System.Web.HttpCacheability>       `CacheControl`, <xref:System.Web.HttpResponse.Expires%2A>, I <xref:System.Web.HttpResponse.ExpiresAbsolute%2A>Właściwości są przestarzałe.</xref:System.Web.HttpResponse.ExpiresAbsolute%2A> </xref:System.Web.HttpResponse.Expires%2A> Zamiast tego metody <xref:System.Web.HttpCachePolicy>klasy są dostępne za pośrednictwem <xref:System.Web.HttpResponse.Cache%2A>obiektu wewnętrznego, aby kontrolować Internet Information Services (IIS), dane wyjściowe pamięci podręcznej i pamięci podręczne klientów.</xref:System.Web.HttpResponse.Cache%2A> </xref:System.Web.HttpCachePolicy>"
  syntax:
    content: public string CacheControl { get; set; }
    return:
      type: System.String
      description: "Reprezentacja ciągu <xref href=&quot;System.Web.HttpCacheability&quot;> </xref> wartości wyliczenia."
  overload: System.Web.HttpResponse.CacheControl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wartość ciągu jest niezgodny z <xref href=&quot;System.Web.HttpCacheability&quot;> </xref> wartości wyliczenia."
  platform:
  - net462
- uid: System.Web.HttpResponse.Charset
  id: Charset
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Charset
  nameWithType: HttpResponse.Charset
  fullName: System.Web.HttpResponse.Charset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia zestaw znaków HTTP w strumieniu wyjściowym."
  remarks: "`Charset` Ustawioną właściwość `null` do pomijania HTTP `Content-Type` nagłówka."
  example:
  - "The following example checks whether the character set of the output stream is Central European (ISO).  \n  \n [!code-vb[System.Web.HttpResponse.Charset#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_7_1.aspx)]\n [!code-cs[System.Web.HttpResponse.Charset#1](~/add/codesnippet/csharp/p-system.web.httprespons_7_1.aspx)]"
  syntax:
    content: public string Charset { get; set; }
    return:
      type: System.String
      description: "Zestaw znaków HTTP w strumieniu wyjściowym."
  overload: System.Web.HttpResponse.Charset*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref uid=&quot;langword_csharp_Charset&quot; name=&quot;Charset&quot; href=&quot;&quot;> </xref> Właściwość została ustawiona po nagłówki zostały wysłane."
  platform:
  - net462
- uid: System.Web.HttpResponse.Clear
  id: Clear
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpResponse.Clear()
  fullName: System.Web.HttpResponse.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Czyści całą zawartość dane wyjściowe ze strumienia buforu."
  remarks: "Clear — metoda nie czyści informacje nagłówka."
  example:
  - "The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the Clear method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/m-system.web.httprespons_2_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_2_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.HttpResponse.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ClearContent
  id: ClearContent
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ClearContent()
  nameWithType: HttpResponse.ClearContent()
  fullName: System.Web.HttpResponse.ClearContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Czyści całą zawartość dane wyjściowe ze strumienia buforu."
  remarks: "Metoda ClearContent nie czyści informacje nagłówka."
  example:
  - "The following example clears all content from the buffer stream.  \n  \n [!code-cs[Classic HttpResponse.ClearContent Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_17_1.cs)]\n [!code-vb[Classic HttpResponse.ClearContent Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_17_1.vb)]"
  syntax:
    content: public void ClearContent ();
    parameters: []
  overload: System.Web.HttpResponse.ClearContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ClearHeaders
  id: ClearHeaders
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ClearHeaders()
  nameWithType: HttpResponse.ClearHeaders()
  fullName: System.Web.HttpResponse.ClearHeaders()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Czyści wszystkie nagłówki ze strumienia buforu."
  remarks: ''
  example:
  - "The following example calls the ClearHeaders method to ensure that no headers are sent with the current response. This technique can be especially important if the ASP.NET response is generating an image, such as a JPEG file. In this example the <xref:System.Web.HttpResponse.ContentType%2A> property is set to image/jpeg.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#2](~/add/codesnippet/csharp/m-system.web.httprespons_14_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_14_1.aspx)]"
  syntax:
    content: public void ClearHeaders ();
    parameters: []
  overload: System.Web.HttpResponse.ClearHeaders*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Nagłówki są czyszczone po wysłaniu nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.ClientDisconnectedToken
  id: ClientDisconnectedToken
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ClientDisconnectedToken
  nameWithType: HttpResponse.ClientDisconnectedToken
  fullName: System.Web.HttpResponse.ClientDisconnectedToken
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera <xref:System.Threading.CancellationToken>obiekt, który jest uruchomiony, gdy klient odłączy.</xref:System.Threading.CancellationToken>"
  remarks: "Ten interfejs API jest wątkowo. Istnieją pewne ograniczenia dotyczące używania token anulowania. Nieprawidłowe użycie może prowadzić do wyścigu, zakleszczenie lub inne nieoczekiwane zachowania. Pamiętać o następujących wytycznych:-Upewnij się, nie wywołują ten interfejs API poza granicami pojedynczego żądania, ponieważ zlikwiduje token anulowania na końcu żądania ASP.NET. Nie ma żadnej gwarancji, która token nigdy spowoduje przejście do stanu anulowane przed jego usunięcia. Na przykład jeśli żądanie kończy się bez użycia klienta o odłączony, token zostanie usunięte bez konieczności najpierw anulować.      -Nie Czekaj <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName>, jak to pozbawia sensu asynchroniczne powiadomienia i może spowodować zakleszczenie.</xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName>      -Nie wywołuj <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName>przeciążenia, które wywołują wywołania zwrotnego w pierwotnej <xref:System.Threading.SynchronizationContext>obiektu.</xref:System.Threading.SynchronizationContext> </xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName>      — Nie używaj <xref:System.Web.HttpContext>obiektu lub innych niż wątkowo ASP.NET obiekty wewnętrzne z wewnątrz wywołania zwrotnego dostarczonego do <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName>metody.</xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName> </xref:System.Web.HttpContext> Wywołanie zwrotne mogą być uruchomione jednocześnie z innymi ASP.NET lub kod aplikacji.      — Wartość pola Utrzymaj metody wywołania zwrotnego wykonywania short i bez blokowania.      — Upewnić wszelkich starań, aby uniknąć generowania wyjątków z wewnątrz metody wywołania zwrotnego.       Ta właściwość ma zastosowanie do Internet Information usługi (IIS) 7.5 tylko w trybie zintegrowanym. Jeśli można wywołać bez prawa usług IIS w wersji lub potoku trybu, <xref:System.PlatformNotSupportedException>jest generowany.</xref:System.PlatformNotSupportedException> Aby określić wersji usług IIS, należy użyć <xref:System.Web.HttpRuntime.IISVersion%2A>.</xref:System.Web.HttpRuntime.IISVersion%2A> Aby określić tryb potokowy, użyj <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>"
  syntax:
    content: public System.Threading.CancellationToken ClientDisconnectedToken { get; }
    return:
      type: System.Threading.CancellationToken
      description: "Token anulowania."
  overload: System.Web.HttpResponse.ClientDisconnectedToken*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Close
  id: Close
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Close()
  nameWithType: HttpResponse.Close()
  fullName: System.Web.HttpResponse.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zamyka połączenie gniazda do klienta."
  remarks: "Ta metoda zakończy połączenie z klientem w nagłych sposób i nie jest przeznaczony do normalnego przetwarzania żądania HTTP. Metoda wysyła pakiet resetowania do klienta, co może powodować dane odpowiedzi, które są buforowane na serwerze, kliencie lub gdzieś między go porzucić.       Jednak zwykle należy wywołać <xref:System.Web.HttpApplication.CompleteRequest%2A>zamiast tego, aby przejść do <xref:System.Web.HttpApplication.EndRequest>zdarzeń i wysyłania odpowiedzi do klienta.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.HttpApplication.CompleteRequest%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Web.HttpResponse.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ContentEncoding
  id: ContentEncoding
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
  fullName: System.Web.HttpResponse.ContentEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia zestaw znaków HTTP w strumieniu wyjściowym."
  remarks: "Domyślna `ContentEncoding` można określić w pliku konfiguracji platformy ASP.NET w [globalizacji — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) sekcji. Jeśli ContentEncoding jest określony przez klienta, są zastępowane domyślnych ustawień konfiguracji."
  example:
  - "The following example writes a human-readable description of the character set encoding to the output stream.  \n  \n [!code-cs[Classic HttpResponse.ContentEncoding Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_0_1.cs)]\n [!code-vb[Classic HttpResponse.ContentEncoding Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_0_1.vb)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "A <xref:System.Text.Encoding>obiektu, który zawiera informacje o zestawie znaków bieżącej odpowiedzi.</xref:System.Text.Encoding>"
  overload: System.Web.HttpResponse.ContentEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Próbowano ustawić ContentEncoding <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.ContentType
  id: ContentType
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpResponse.ContentType
  fullName: System.Web.HttpResponse.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia typ HTTP MIME w strumieniu wyjściowym."
  remarks: ''
  example:
  - "The following example sets the ContentType property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/p-system.web.httprespons_2_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.httprespons_2_1.aspx)]"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "Typ HTTP MIME w strumieniu wyjściowym. Wartość domyślna to &quot;<xref uid=&quot;langword_csharp_text/html&quot; name=&quot;text/html&quot; href=&quot;&quot;></xref>&quot;."
  overload: System.Web.HttpResponse.ContentType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Ustawiono właściwość ContentType <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.Cookies
  id: Cookies
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpResponse.Cookies
  fullName: System.Web.HttpResponse.Cookies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera kolekcję plików cookie odpowiedzi."
  remarks: "Program ASP.NET zawiera dwie kolekcje wewnętrzne pliku cookie. Kolekcja dostępne za pośrednictwem <xref:System.Web.HttpRequest.Cookies%2A>Kolekcja <xref:System.Web.HttpRequest>zawiera pliki cookie wysłanych przez klienta do serwera w `Cookie` nagłówka.</xref:System.Web.HttpRequest> </xref:System.Web.HttpRequest.Cookies%2A> Kolekcja dostępne za pośrednictwem kolekcję plików cookie <xref:System.Web.HttpResponse>zawiera nowe pliki cookie utworzone na serwerze i przesyłane do klienta w `Set-Cookie` nagłówka.</xref:System.Web.HttpResponse>       Po dodaniu pliku cookie przy użyciu kolekcji plików cookie, plik cookie jest natychmiast dostępna w <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName>kolekcji, nawet jeśli nie została wysłana odpowiedź do klienta.</xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName>"
  example:
  - "The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and adds the cookie to the current cookie collection. All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.  \n  \n [!code-cs[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_12_1.cs)]\n [!code-vb[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_12_1.vb)]"
  syntax:
    content: public System.Web.HttpCookieCollection Cookies { get; }
    return:
      type: System.Web.HttpCookieCollection
      description: "Kolekcja plików cookie odpowiedzi."
  overload: System.Web.HttpResponse.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.DisableKernelCache
  id: DisableKernelCache
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: DisableKernelCache()
  nameWithType: HttpResponse.DisableKernelCache()
  fullName: System.Web.HttpResponse.DisableKernelCache()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wyłącza buforowanie jądra dla bieżącej odpowiedzi."
  remarks: "Jeśli buforowanie jądra nie jest obsługiwane, ta metoda nie ma znaczenia."
  syntax:
    content: public void DisableKernelCache ();
    parameters: []
  overload: System.Web.HttpResponse.DisableKernelCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.DisableUserCache
  id: DisableUserCache
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: DisableUserCache()
  nameWithType: HttpResponse.DisableUserCache()
  fullName: System.Web.HttpResponse.DisableUserCache()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wyłącza IIS buforowanie w trybie użytkownika dla tej odpowiedzi."
  remarks: "Jeśli buforowanie w trybie użytkownika usług IIS nie jest obsługiwana, ta metoda zwraca bez wykonywania żadnych czynności."
  syntax:
    content: public void DisableUserCache ();
    parameters: []
  overload: System.Web.HttpResponse.DisableUserCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.End
  id: End
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: End()
  nameWithType: HttpResponse.End()
  fullName: System.Web.HttpResponse.End()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wysyła do klienta, wszystkie obecnie buforowanych wyników, zatrzymuje wykonywanie strony i zgłasza <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> zdarzeń."
  remarks: "Ta metoda jest dostępne tylko w celu zgodności z ASP — to znaczy dla zgodności z technologii sieci Web — Programowanie oparte na modelu COM, która poprzedzone ASP.NET. Jeśli chcesz przejść do <xref:System.Web.HttpApplication.EndRequest>zdarzeń i wysyłania odpowiedzi do klienta, zaleca się zazwyczaj do wywołania <xref:System.Web.HttpApplication.CompleteRequest%2A>zamiast.</xref:System.Web.HttpApplication.CompleteRequest%2A> </xref:System.Web.HttpApplication.EndRequest>       Aby naśladował zachowanie `End` metody w ASP, ta metoda próbuje podnieść <xref:System.Threading.ThreadAbortException>wyjątek.</xref:System.Threading.ThreadAbortException> Jeśli ta próba zakończy się pomyślnie, wątek wywołujący zostanie przerwane, uniemożliwiających wydajności sieci Web. W takim przypadku jest wykonywany żaden kod po wywołaniu metody End.       Jeśli metoda End nie będzie mógł podnieść <xref:System.Threading.ThreadAbortException>, zamiast tego opróżnia bajtów odpowiedzi do klienta.</xref:System.Threading.ThreadAbortException> Robi to synchronicznie, które również mogą być szkodliwe dla wydajności sieci Web.       W obu przypadkach (czy <xref:System.Threading.ThreadAbortException>pomyślnie wyjątek), potoku odpowiedzi przechodzi dalej do <xref:System.Web.HttpApplication.EndRequest>zdarzeń.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Threading.ThreadAbortException>       <xref:System.Web.HttpApplication.CompleteRequest%2A>— Metoda nie zgłaszał wyjątku i kod po wywołaniu <xref:System.Web.HttpApplication.CompleteRequest%2A>metody mogą być wykonywane.</xref:System.Web.HttpApplication.CompleteRequest%2A> </xref:System.Web.HttpApplication.CompleteRequest%2A> Jeśli masz zamiar w celu uniknięcia wykonywanie kolejnych kodu, a dopuszczalny jest zmniejszenie wydajności punktu końcowego, należy wywołać zakończenia zamiast <xref:System.Web.HttpApplication.CompleteRequest%2A>.</xref:System.Web.HttpApplication.CompleteRequest%2A>"
  syntax:
    content: public void End ();
    parameters: []
  overload: System.Web.HttpResponse.End*
  exceptions:
  - type: System.Threading.ThreadAbortException
    commentId: T:System.Threading.ThreadAbortException
    description: "Wywołanie w celu przerwał bieżącego żądania."
  platform:
  - net462
- uid: System.Web.HttpResponse.EndFlush(System.IAsyncResult)
  id: EndFlush(System.IAsyncResult)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: EndFlush(IAsyncResult)
  nameWithType: HttpResponse.EndFlush(IAsyncResult)
  fullName: System.Web.HttpResponse.EndFlush(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Kończy operację asynchroniczną opróżniania."
  syntax:
    content: public void EndFlush (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Asynchroniczny obiekt wyniku."
  overload: System.Web.HttpResponse.EndFlush*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Asynchronicznego opróżniania nie jest obsługiwana i <code> asyncResult </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Asynchronicznego opróżniania nie jest obsługiwana i <code> asyncResult </code> nie można rzutować parametru `FlushAsyncResult` obiektu."
  platform:
  - net462
- uid: System.Web.HttpResponse.Expires
  id: Expires
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Expires
  nameWithType: HttpResponse.Expires
  fullName: System.Web.HttpResponse.Expires
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia liczbę minut przed wygaśnięciem strony buforowanej w przeglądarce. Po powrocie do tej samej strony przed jej wygaśnięciem, wyświetlana jest wersja buforowana. Wygasa zapewnia zgodność z wcześniejszymi wersjami programu ASP."
  remarks: "`Expires`, <xref:System.Web.HttpResponse.ExpiresAbsolute%2A>i <xref:System.Web.HttpResponse.CacheControl%2A>Właściwości została zastąpiona metody <xref:System.Web.HttpCachePolicy>klasy dostępne za pośrednictwem <xref:System.Web.HttpResponse.Cache%2A>obiektu wewnętrznego, aby kontrolować Internet Information Services (IIS), dane wyjściowe pamięci podręcznej i pamięci podręczne klientów.</xref:System.Web.HttpResponse.Cache%2A> </xref:System.Web.HttpCachePolicy> </xref:System.Web.HttpResponse.CacheControl%2A> </xref:System.Web.HttpResponse.ExpiresAbsolute%2A>"
  syntax:
    content: public int Expires { get; set; }
    return:
      type: System.Int32
      description: "Liczba minut przed wygaśnięciem strony."
  overload: System.Web.HttpResponse.Expires*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ExpiresAbsolute
  id: ExpiresAbsolute
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ExpiresAbsolute
  nameWithType: HttpResponse.ExpiresAbsolute
  fullName: System.Web.HttpResponse.ExpiresAbsolute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia bezwzględny Data i czas, w którym można usunąć informacji o pamięci podręcznej z pamięci podręcznej. ExpiresAbsolute jest zapewnia zgodność z wcześniejszymi wersjami programu ASP."
  remarks: "`ExpiresAbsolute`, <xref:System.Web.HttpResponse.Expires%2A>, I <xref:System.Web.HttpResponse.CacheControl%2A>Właściwości została zastąpiona metody <xref:System.Web.HttpCachePolicy>klasy dostępne za pośrednictwem <xref:System.Web.HttpResponse.Cache%2A>obiektu wewnętrznego, aby kontrolować Internet Information Services (IIS), dane wyjściowe pamięci podręcznej i pamięci podręczne klientów.</xref:System.Web.HttpResponse.Cache%2A> </xref:System.Web.HttpCachePolicy> </xref:System.Web.HttpResponse.CacheControl%2A> </xref:System.Web.HttpResponse.Expires%2A>"
  syntax:
    content: public DateTime ExpiresAbsolute { get; set; }
    return:
      type: System.DateTime
      description: "Data i godzina, jaką strona wygasa."
  overload: System.Web.HttpResponse.ExpiresAbsolute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Filter
  id: Filter
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Filter
  nameWithType: HttpResponse.Filter
  fullName: System.Web.HttpResponse.Filter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia obiekt filtru zawijania używane do modyfikowania treści jednostki HTTP przed ich przesłaniem."
  remarks: "Podczas tworzenia `Stream` obiektu i ustaw dla właściwości filtru `Stream` obiektu HTTP wszystkie dane wyjściowe wysyłane przez <xref:System.Web.HttpResponse.Write%2A>przechodzi przez filtr.</xref:System.Web.HttpResponse.Write%2A>"
  example:
  - "The following example is an ASP.NET page that sets the Filter property to a new instance of the `UpperCaseFilter` class, a custom <xref:System.IO.Stream> class that converts all text that passes through it to uppercase. The information about the request is saved to a text file, and then the Filter property is set. After the response filter is in place, the code calls the <xref:System.Web.HttpRequest.MapPath%2A> method to get the absolute path to a text file named `TestFile.txt` that serves as the source for the content of the response. The code then creates a new <xref:System.IO.StreamReader> object to read the text file from beginning to end, and then calls the <xref:System.Web.HttpResponse.Write%2A> method to display the content of the file on the page.  \n  \n [!code-vb[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_8_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/csharp/p-system.web.httprespons_8_1.aspx)]"
  syntax:
    content: public System.IO.Stream Filter { get; set; }
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>Obiektu, który działa jako filtr danych wyjściowych.</xref:System.IO.Stream>"
  overload: System.Web.HttpResponse.Filter*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Filtrowanie nie jest dozwolone z jednostką."
  platform:
  - net462
- uid: System.Web.HttpResponse.Flush
  id: Flush
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Flush()
  nameWithType: HttpResponse.Flush()
  fullName: System.Web.HttpResponse.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wszystkie obecnie buforowanych wyników wysyła do klienta."
  remarks: "Wymusza wszystkie aktualnie buforowane dane wyjściowe do wysłania do klienta. Metoda Flush może być wywołana wiele razy podczas przetwarzania żądania."
  example:
  - "The following example calls the <xref:System.Drawing.Graphics.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property and converts the image to the JPEG format. The code then calls the `Dispose` method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using. It then calls the Flush method to send the content of the response to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/m-system.web.httprespons_24_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_24_1.aspx)]"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.Web.HttpResponse.Flush*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Pamięć podręczna jest opróżniany po wysłaniu odpowiedzi."
  platform:
  - net462
- uid: System.Web.HttpResponse.FlushAsync
  id: FlushAsync
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: FlushAsync()
  nameWithType: HttpResponse.FlushAsync()
  fullName: System.Web.HttpResponse.FlushAsync()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Asynchronicznie wysyła wszystkie obecnie buforowane dane wyjściowe do klienta."
  syntax:
    content: public System.Threading.Tasks.Task FlushAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: "A <xref:System.Threading.Tasks.Task>reprezentujący operację asynchroniczną.</xref:System.Threading.Tasks.Task>"
  overload: System.Web.HttpResponse.FlushAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.HeaderEncoding
  id: HeaderEncoding
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: HeaderEncoding
  nameWithType: HttpResponse.HeaderEncoding
  fullName: System.Web.HttpResponse.HeaderEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia <xref:System.Text.Encoding>obiekt, który reprezentuje kodowania dla bieżącego nagłówka wyjściowego strumienia.</xref:System.Text.Encoding>"
  remarks: "Właściwość HeaderEncoding daje możliwość wyłączenia lub zmień <xref:System.Text.Encoding>obiektu nagłówka odpowiedzi przy użyciu <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF7Encoding>, lub <xref:System.Text.UTF8Encoding>obiektu.</xref:System.Text.UTF8Encoding> </xref:System.Text.UTF7Encoding> </xref:System.Text.UnicodeEncoding> </xref:System.Text.ASCIIEncoding> </xref:System.Text.Encoding> Domyślnym kodowaniem wartość jest <xref:System.Text.UTF8Encoding>klasy.</xref:System.Text.UTF8Encoding>       Zmieniając typ właściwości HeaderEncoding potencjalnie można zwiększyć ryzyko wystąpienia niektórych złośliwych ataków lub spowodować, że poufne dane mają być wysyłane za pośrednictwem nagłówka odpowiedzi. Nagłówek iniekcji ataków można uniknąć, w części pozostawić właściwości HeaderEncoding odpowiedzi na ustawienie domyślne. Atak wykorzystujący usterce aplikacji można echo ponownie powierzyć danych jako część nagłówka odpowiedzi. HeaderEncoding jest wyłączona z powodu stanowi wymóg dla kontynuacji wierszy w nagłówku lub jakikolwiek inny nagłówek jest tworzony na podstawie wyniku niezaufanych danych, danych nagłówka powinny być weryfikowane przed wysłaniem do strumienia odpowiedzi."
  syntax:
    content: public System.Text.Encoding HeaderEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>Zawierający informacje dotyczące zestawu dla bieżącego nagłówka znaków.</xref:System.Text.Encoding>"
  overload: System.Web.HttpResponse.HeaderEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość kodowania <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The encoding value is <xref:System.Text.Encoding.Unicode*>.  \n  \n \\- or -  \n  \n The headers have already been sent."
  platform:
  - net462
- uid: System.Web.HttpResponse.Headers
  id: Headers
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Headers
  nameWithType: HttpResponse.Headers
  fullName: System.Web.HttpResponse.Headers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera kolekcję nagłówków odpowiedzi."
  remarks: "Właściwość nagłówki jest obsługiwana tylko z [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] tryb zintegrowanego potoku i co najmniej środowiska .NET Framework 3.0. Podczas próby dostępu do właściwości nagłówków i jeden z tych dwóch warunków nie jest spełniony, <xref:System.PlatformNotSupportedException>jest generowany.</xref:System.PlatformNotSupportedException>"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> nagłówków odpowiedzi."
  overload: System.Web.HttpResponse.Headers*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Operacja wymaga trybu zintegrowanego potoku w [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] i co najmniej programu .NET Framework w wersji 3.0 lub nowszej."
  platform:
  - net462
- uid: System.Web.HttpResponse.HeadersWritten
  id: HeadersWritten
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: HeadersWritten
  nameWithType: HttpResponse.HeadersWritten
  fullName: System.Web.HttpResponse.HeadersWritten
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "[Obsługiwane w programie .NET Framework 4.5.2 i nowszych wersjach]       Pobiera wartość wskazującą, czy nagłówki odpowiedzi zostały zapisane."
  syntax:
    content: public bool HeadersWritten { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nagłówki odpowiedzi zostały zapisane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.HeadersWritten*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.IsClientConnected
  id: IsClientConnected
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: IsClientConnected
  nameWithType: HttpResponse.IsClientConnected
  fullName: System.Web.HttpResponse.IsClientConnected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera wartość wskazującą, czy klient jest nadal połączony z serwerem."
  remarks: "Zwraca właściwości IsClientConnected `false` gdy są spełnione następujące warunki:-połączenie z klientem zostało przerwane. Taka sytuacja może wystąpić, jeśli <xref:System.Web.HttpResponse.Close%2A>wywołano metodę lub jeśli klient zatrzymał wykonywanie strony sieci Web lub przeglądać do innej strony.</xref:System.Web.HttpResponse.Close%2A>      - <xref:System.Web.HttpWorkerRequest>Obiekt, który obsługuje żądania jest `null` lub <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName>Metoda zwraca `false`.</xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> </xref:System.Web.HttpWorkerRequest> Jeśli niestandardowego <xref:System.Web.HttpWorkerRequest>obiektu obsługi żądania, a następnie <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName>Metoda może być ustawiona na podstawie kryteriów niestandardowych.</xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> </xref:System.Web.HttpWorkerRequest> Na przykład żądania niestandardowy proces roboczy może wymusić limit czasu po upływie określonego czasu."
  example:
  - "The following example uses the IsClientConnected property to check whether the client that is requesting the page remains connected to the server. If IsClientConnected is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page. If IsClientConnected is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.  \n  \n [!code-cs[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/csharp/p-system.web.httprespons_1_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_1_1.aspx)]"
  syntax:
    content: public bool IsClientConnected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli klient jest obecnie połączony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.IsClientConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.IsRequestBeingRedirected
  id: IsRequestBeingRedirected
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: IsRequestBeingRedirected
  nameWithType: HttpResponse.IsRequestBeingRedirected
  fullName: System.Web.HttpResponse.IsRequestBeingRedirected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera wartość logiczną wskazującą, czy klient jest przenoszona do nowej lokalizacji."
  remarks: "Użyj właściwości IsRequestBeingRedirected z <xref:System.Web.HttpResponse.RedirectLocation%2A>właściwości do testowania i określić, czy bezwzględny identyfikator URI jest przesyłane do klientów w HTTP `Location` nagłówka jest inny niż bieżący identyfikator URI i jakie będą nowy zamierzonego identyfikator URI, który jest przesyłany do.</xref:System.Web.HttpResponse.RedirectLocation%2A>"
  syntax:
    content: public bool IsRequestBeingRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartości nagłówka odpowiedzi lokalizacja jest inna niż bieżąca lokalizacja; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.IsRequestBeingRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Output
  id: Output
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Output
  nameWithType: HttpResponse.Output
  fullName: System.Web.HttpResponse.Output
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dane wyjściowe umożliwia tekst w strumieniu wychodzące odpowiedzi HTTP."
  remarks: ''
  example:
  - "The following example is an ASP.NET page that contains a <xref:System.Web.UI.WebControls.TextBox> control that has its <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> property set to <xref:System.Web.UI.WebControls.TextBoxMode>. The page's code takes the text that a user enters in the <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>, uses the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method to HTML encode it, and the Output property to display the encoded string to the page.  \n  \n [!code-vb[System.Web.HttpResponse.Output_Sample#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_5_1.aspx)]\n [!code-cs[System.Web.HttpResponse.Output_Sample#1](~/add/codesnippet/csharp/p-system.web.httprespons_5_1.aspx)]"
  syntax:
    content: public System.IO.TextWriter Output { get; set; }
    return:
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>obiekt, który umożliwia niestandardowe dane wyjściowe do klienta.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpResponse.Output*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.OutputStream
  id: OutputStream
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: OutputStream
  nameWithType: HttpResponse.OutputStream
  fullName: System.Web.HttpResponse.OutputStream
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Umożliwia wyjście binarne do wychodzących treści HTTP."
  remarks: "Starting with the .NET Framework version 2.0, when you use the [Stream.Write(Byte\\[\\], Int32, Int32)](assetId:///M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)?qualifyHint=True&autoUpgrade=False) method of the IO stream returned by the OutputStream property, the following exceptions might be thrown:  \n  \n-   <xref:System.ArgumentOutOfRangeException>, if the `offset` or `count` parameter is negative or if the `buffer` parameter's length minus the `offset` parameter is less than or equal to zero.  \n  \n-   <xref:System.ArgumentNullException>, if the `buffer` parameter is `null`."
  example:
  - "The following example calls the <xref:System.Drawing.Image.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the OutputStream property, and converts the image to the JPEG format. The code then calls the Dispose method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using. Finally, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/p-system.web.httprespons_13_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_13_1.aspx)]"
  syntax:
    content: public System.IO.Stream OutputStream { get; }
    return:
      type: System.IO.Stream
      description: "We/Wy <xref:System.IO.Stream>reprezentujący nieprzetworzona zawartość wychodzących treści HTTP.</xref:System.IO.Stream>"
  overload: System.Web.HttpResponse.OutputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>OutputStream</code>nie jest dostępna."
  platform:
  - net462
- uid: System.Web.HttpResponse.Pics(System.String)
  id: Pics(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Pics(String)
  nameWithType: HttpResponse.Pics(String)
  fullName: System.Web.HttpResponse.Pics(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dołącza HTTP <xref uid=&quot;langword_csharp_PICS-Label&quot; name=&quot;PICS-Label&quot; href=&quot;&quot;> </xref> nagłówka do strumienia wyjściowego."
  remarks: "Platforma dla zaznaczenia zawartości Internetu (PICS) to standard sieci World Wide Web konsorcjum W3C do oznaczania zawartości. PICS jest zasadniczo język do tworzenia system klasyfikacji.       Każda wartość może być etykietę PICS; Program ASP.NET nie sprawdza etykiety. Maksymalna długość ciągu to 255 znaków. Aby uzyskać więcej informacji na temat PICS standardów i składni, zobacz [sieci World Wide Web konsorcjum](http://go.microsoft.com/fwlink/?LinkID=37125) witryny sieci Web."
  example:
  - "The following example is an ASP.NET page that displays an image. The page code calls the Pics method to set the HTTP `PICS-Label` header for the response. The string that is passed as the parameter to the Pics method represents a rating label generated from the Internet Content Rating Association (ICRA) Web site.  \n  \n [!code-cs[System.Web.HttpResponse_Sample4#2](~/add/codesnippet/csharp/m-system.web.httprespons_8_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample4#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_8_1.aspx)]"
  syntax:
    content: public void Pics (string value);
    parameters:
    - id: value
      type: System.String
      description: "Ciąg do dodania do <xref uid=&quot;langword_csharp_PICS-Label&quot; name=&quot;PICS-Label&quot; href=&quot;&quot;> </xref> nagłówka."
  overload: System.Web.HttpResponse.Pics*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.PushPromise(System.String)
  id: PushPromise(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: PushPromise(String)
  nameWithType: HttpResponse.PushPromise(String)
  fullName: System.Web.HttpResponse.PushPromise(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: 'Ten interfejs API jest do obsługi aplikacji wysyłania wypychania zobowiązuje się do klientów HTTP 2.0. Więcej szczegółów można znaleźć w odniesieniu do wypychania serwera Http2 w [8.2 sekcji specyfikacji HTTP/2: wypychane serwera](http://http2.github.io/http2-spec/#PushResources).'
  remarks: "PushPromise jest deterministyczna, a aplikacje nie powinny mieć logikę, która zależy od niego. Jej jedynym celem jest zalet wydajności w niektórych przypadkach. Istnieje wiele warunków (protokół i wykonania), mogą powodować całkowicie ignorowanie żądań wypychania. Oczekiwania jest oparta na fire i zapomnij."
  syntax:
    content: public void PushPromise (string path);
    parameters:
    - id: path
      type: System.String
      description: "Adres URL żądania wypychania. Należy go ścieżkę wirtualną względną zasób, który serwer będzie chciał push do klienta."
  overload: System.Web.HttpResponse.PushPromise*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  id: PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: PushPromise(String,String,NameValueCollection)
  nameWithType: HttpResponse.PushPromise(String,String,NameValueCollection)
  fullName: System.Web.HttpResponse.PushPromise(String,String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: 'Ten interfejs API jest do obsługi aplikacji wysyłania wypychania zobowiązuje się do klientów HTTP 2.0. Więcej szczegółów można znaleźć w odniesieniu do wypychania serwera Http2 w [8.2 sekcji specyfikacji HTTP/2: wypychane serwera](http://http2.github.io/http2-spec/#PushResources).'
  remarks: "PushPromise jest deterministyczna, a aplikacje nie powinny mieć logikę, która zależy od niego. Jej jedynym celem jest zalet wydajności w niektórych przypadkach. Istnieje wiele warunków (protokół i wykonania), mogą powodować całkowicie ignorowanie żądań wypychania. Oczekiwania jest oparta na fire i zapomnij."
  syntax:
    content: public void PushPromise (string path, string method, System.Collections.Specialized.NameValueCollection headers);
    parameters:
    - id: path
      type: System.String
      description: "Adres URL żądania wypychania. Należy go ścieżkę wirtualną względną zasób, który serwer będzie chciał push do klienta."
    - id: method
      type: System.String
      description: "Metoda żądania HTTP, który będzie używany przez żądanie wypychania."
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: "Nagłówek żądania HTTP, który będzie używany przez żądanie wypychania."
  overload: System.Web.HttpResponse.PushPromise*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Redirect(System.String)
  id: Redirect(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Redirect(String)
  nameWithType: HttpResponse.Redirect(String)
  fullName: System.Web.HttpResponse.Redirect(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Przekierowuje żądanie do nowego adresu URL i umożliwia określenie nowego adresu URL."
  remarks: "Wywołanie metody przekierowania jest odpowiednikiem wywołania <xref:System.Web.HttpResponse.Redirect%2A>z drugim parametrem ustawioną `true`.</xref:System.Web.HttpResponse.Redirect%2A>       Przekieruj wywołania <xref:System.Web.HttpResponse.End%2A>które zgłasza <xref:System.Threading.ThreadAbortException>wyjątek po zakończeniu.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A> Ten wyjątek ma niekorzystny wpływ na wydajność aplikacji sieci Web. Dlatego zaleca się zamiast tego przeciążenia użycie <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName>przeciążenia, a następnie przekaż `false` dla `endResponse` parametr, a następnie wywołania <xref:System.Web.HttpApplication.CompleteRequest%2A>metody.</xref:System.Web.HttpApplication.CompleteRequest%2A> </xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName> Aby uzyskać więcej informacji, zobacz <xref:System.Web.HttpResponse.End%2A>metody.</xref:System.Web.HttpResponse.End%2A>      > [!NOTE] > Dla stron tylko dla urządzeń przenośnych, jeśli aplikacja zależy od sesji bez plików cookie lub może odbierać żądania z urządzeń przenośnych, które wymagają sesje bez plików cookie, przy użyciu tyldy (~) w ścieżce może spowodować utworzenie nowej sesji i potencjalnie utraty danych sesji. Można ustawić właściwości w formancie przenośnych ze ścieżką takich jak &quot;~ / path&quot;, rozwiązania przy użyciu ścieżki <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>&quot;~ / ścieżki&quot; przed przypisaniem go do właściwości.</xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>       ASP.NET wykonuje przekierowanie zwróciła kod stanu HTTP 302. To alternatywny sposób transfer kontroli do innej strony <xref:System.Web.HttpServerUtility.Transfer%2A>metody.</xref:System.Web.HttpServerUtility.Transfer%2A> <xref:System.Web.HttpServerUtility.Transfer%2A>Metoda jest zazwyczaj bardziej wydajne, ponieważ nie powoduje podróż do klienta.</xref:System.Web.HttpServerUtility.Transfer%2A> Aby uzyskać więcej informacji, zobacz [porady: przekierować użytkowników do innej strony](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example forces an unconditional redirection to another Web site.  \n  \n [!code-cs[Classic HttpResponse.Redirect Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_9_1.cs)]\n [!code-vb[Classic HttpResponse.Redirect Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_9_1.vb)]"
  syntax:
    content: public void Redirect (string url);
    parameters:
    - id: url
      type: System.String
      description: "Lokalizacja docelowa."
  overload: System.Web.HttpResponse.Redirect*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Przekierowanie nastąpiła po wysłaniu nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.Redirect(System.String,System.Boolean)
  id: Redirect(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Redirect(String,Boolean)
  nameWithType: HttpResponse.Redirect(String,Boolean)
  fullName: System.Web.HttpResponse.Redirect(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Przekierowuje klienta do nowego adresu URL. Określa nowy adres URL i określa, czy należy zakończyć wykonywanie bieżącej strony."
  remarks: "Można określić bezwzględny adres URL (na przykład http://www.contoso.com/default.aspx) lub względny adres URL (na przykład Default.aspx) dla lokalizacji docelowej, ale niektóre przeglądarki mogą odrzucić względnym adresem URL.       Jeśli używasz tej metody w obsłudze strony zakończenie żądania dla jednej strony, a następnie rozpocznij nowe żądanie dla innej strony, należy ustawić `endResponse` do `false` , a następnie wywołać <xref:System.Web.HttpApplication.CompleteRequest%2A>metody.</xref:System.Web.HttpApplication.CompleteRequest%2A> Jeśli określisz `true` dla `endResponse` parametru, ta metoda wywołuje <xref:System.Web.HttpResponse.End%2A>metody oryginalnego żądania, która zgłasza <xref:System.Threading.ThreadAbortException>wyjątek po jego ukończeniu.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A> Ten wyjątek ma niekorzystny wpływ na wydajność aplikacji sieci Web, dlatego przekazywanie `false` dla `endResponse` parametru jest zalecane. Aby uzyskać więcej informacji, zobacz <xref:System.Web.HttpResponse.End%2A>metody.</xref:System.Web.HttpResponse.End%2A>      > [!NOTE] > Dla stron dla urządzeń przenośnych, jeśli aplikacja zależy od sesji bez plików cookie lub może odbierać żądania z urządzeń przenośnych, które wymagają sesje bez plików cookie, przy użyciu tyldy (~) w ścieżce można utworzyć nowej sesji i może spowodować utratę danych sesji. Można ustawić właściwości w formancie przenośnych ze ścieżką takich jak &quot;~ / path&quot;, rozwiązania przy użyciu ścieżki <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>&quot;~ / ścieżki&quot; przed przypisaniem go do właściwości.</xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>       ASP.NET wykonuje przekierowanie zwróciła kod stanu HTTP 302. To alternatywny sposób transfer kontroli do innej strony <xref:System.Web.HttpServerUtility.Transfer%2A>metody.</xref:System.Web.HttpServerUtility.Transfer%2A> <xref:System.Web.HttpServerUtility.Transfer%2A>Metoda jest zazwyczaj bardziej wydajne, ponieważ nie powoduje podróż do klienta.</xref:System.Web.HttpServerUtility.Transfer%2A> Aby uzyskać więcej informacji, zobacz [porady: przekierować użytkowników do innej strony](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server. If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the Redirect method, and the client will view another page. If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.  \n  \n [!code-cs[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/csharp/m-system.web.httprespons_16_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_16_1.aspx)]"
  syntax:
    content: public void Redirect (string url, bool endResponse);
    parameters:
    - id: url
      type: System.String
      description: "Lokalizacji obiektu docelowego."
    - id: endResponse
      type: System.Boolean
      description: "Wskazuje, czy należy zakończyć wykonywanie bieżącej strony."
  overload: System.Web.HttpResponse.Redirect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>url</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code>zawiera znak nowego wiersza."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Przekierowanie nastąpiła po wysłaniu nagłówków HTTP."
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "Żądanie dostępu do strony jest wynikiem wywołania zwrotnego."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectLocation
  id: RedirectLocation
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectLocation
  nameWithType: HttpResponse.RedirectLocation
  fullName: System.Web.HttpResponse.RedirectLocation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia wartość http <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> nagłówka."
  remarks: ''
  example:
  - "The following example shows how to use this property to specify the redirect URL when you code a permanent redirect by using the HTTP 301 response code.  \n  \n```c#  \nResponse.StatusCode = 301;  \nResponse.Status = \"301 Moved Permanently\";  \nResponse.RedirectLocation = \"http://www.newurl.com \";  \nResponse.End();  \n```"
  syntax:
    content: public string RedirectLocation { get; set; }
    return:
      type: System.String
      description: "Bezwzględny identyfikator URI, który są przesyłane do klientów w HTTP <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> nagłówka."
  overload: System.Web.HttpResponse.RedirectLocation*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Nagłówki HTTP zostały już zapisane."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectPermanent(System.String)
  id: RedirectPermanent(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectPermanent(String)
  nameWithType: HttpResponse.RedirectPermanent(String)
  fullName: System.Web.HttpResponse.RedirectPermanent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje przekierowanie trwałe z żądanego adresu URL, pod określony adres URL."
  remarks: "Przeciążenie metody RedirectPermanent zawiera kod stanu HTTP 301 w odpowiedzi oraz adres URL przekierowania żądania. Kod stanu HTTP 301 to standardowy kod odpowiedzi HTTP. Wskazuje on, że istnieje stałe przekierowanie i zapewnia lokalizacji przekierowania.       Wywoływanie przeciążenie metody RedirectPermanent kończy odpowiedź."
  syntax:
    content: public void RedirectPermanent (string url);
    parameters:
    - id: url
      type: System.String
      description: "Lokalizacja, aby przekierować żądania do."
  overload: System.Web.HttpResponse.RedirectPermanent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>url</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code>zawiera znak nowego wiersza (` `)."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)
  id: RedirectPermanent(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectPermanent(String,Boolean)
  nameWithType: HttpResponse.RedirectPermanent(String,Boolean)
  fullName: System.Web.HttpResponse.RedirectPermanent(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje przekierowanie trwałe z żądanego adresu URL, pod określony adres URL i udostępnia opcję, aby ukończyć odpowiedzi."
  remarks: "Przeciążenie metody RedirectPermanent zawiera kod stanu HTTP 301 w odpowiedzi oraz adres URL przekierowania żądania. To przeciążenie metody udostępnia opcję, aby określić, czy Zakończenie lub przeprowadzenie odpowiedzi po wykonał przekierowanie. Kod stanu HTTP 301 to standardowy kod odpowiedzi HTTP. Wskazuje on, że istnieje stałe przekierowanie i zapewnia lokalizacji przekierowania."
  syntax:
    content: public void RedirectPermanent (string url, bool endResponse);
    parameters:
    - id: url
      type: System.String
      description: "Lokalizacja, aby przekierować żądania do."
    - id: endResponse
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zakończyć odpowiedzi; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.RedirectPermanent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>url</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code>zawiera znak nowego wiersza (` `)."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.Object)
  id: RedirectToRoute(System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(Object)
  nameWithType: HttpResponse.RedirectToRoute(Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Przekierowuje żądanie do nowego adresu URL przy użyciu wartości parametru trasy."
  remarks: "Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metody z drugim parametrem ustawioną `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Ta metoda Konwertuje obiekt, który jest przekazywany w `routeValues` do <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>obiektu przy użyciu <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>konstruktora.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>Wywoływana jest metoda następnie ustalić adresu URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET wykonuje przekierowanie zwróciła kod stanu HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoute (object routeValues);
    parameters:
    - id: routeValues
      type: System.Object
      description: "Wartości parametrów trasy."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Żadna trasa odpowiada określone parametry trasy."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Przekierowanie podjęto próbę po wysłał nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.String)
  id: RedirectToRoute(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(String)
  nameWithType: HttpResponse.RedirectToRoute(String)
  fullName: System.Web.HttpResponse.RedirectToRoute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Przekierowuje żądanie do nowego adresu URL przy użyciu nazwy trasy."
  remarks: "Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metody z drugim parametrem ustawioną `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Ta metoda konwertuje nazwę trasy, który jest przekazywany w `routeName` do adresu URL za pomocą <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>metody.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET wykonuje przekierowanie zwróciła kod stanu HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Products`.  \n  \n```vb#  \nResponse.RedirectToRoute(\"Products\")  \n```  \n  \n```c#  \nResponse.RedirectToRoute(\"Products\");  \n```"
  syntax:
    content: public void RedirectToRoute (string routeName);
    parameters:
    - id: routeName
      type: System.String
      description: "Nazwa trasy."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Żadna trasa odpowiada określone parametry trasy."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Przekierowanie podjęto próbę po wysłał nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Przekierowuje żądanie do nowego adresu URL przy użyciu wartości parametru trasy."
  remarks: "Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metody z drugim parametrem ustawioną `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Ta metoda wywołuje <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>metodę, aby określić adres URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET wykonuje przekierowanie zwróciła kod stanu HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(  \n  (new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoute (System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "Wartości parametrów trasy."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Żadna trasa odpowiada określone parametry trasy."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Przekierowanie podjęto próbę po wysłał nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)
  id: RedirectToRoute(System.String,System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(String,Object)
  nameWithType: HttpResponse.RedirectToRoute(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Przekierowuje żądanie do nowego adresu URL przy użyciu wartości parametru trasy i nazwy trasy."
  remarks: "Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metody z drugim parametrem ustawioną `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Ta metoda Konwertuje obiekt, który jest przekazywany w `routeValues` do <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>obiektu przy użyciu <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>konstruktora.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>Wywoływana jest metoda następnie ustalić adresu URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET wykonuje przekierowanie zwróciła kod stanu HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(\"Product\",  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(\"Product\",  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoute (string routeName, object routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "Nazwa trasy."
    - id: routeValues
      type: System.Object
      description: "Wartości parametrów trasy."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Żadna trasa odpowiada określone parametry trasy."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Przekierowanie podjęto próbę po wysłał nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Przekierowuje żądanie do nowego adresu URL przy użyciu wartości parametru trasy i nazwy trasy."
  remarks: "Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metody z drugim parametrem ustawioną `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>Metoda jest wywoływana w celu określenia adresu URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET wykonuje przekierowanie zwróciła kod stanu HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(\"Product\",  \n  (new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoute (string routeName, System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "Nazwa trasy."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "Wartości parametrów trasy."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Żadna trasa odpowiada określone parametry trasy."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Przekierowanie podjęto próbę po wysłał nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)
  id: RedirectToRoutePermanent(System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje przekierowanie trwałe z żądanego adresu URL do nowego adresu URL przy użyciu wartości parametru trasy."
  remarks: "Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>metody z drugim parametrem ustawioną `false`.</xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>       Ta metoda Konwertuje obiekt, który jest przekazywany w `routeValues` do <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>obiektu przy użyciu <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>konstruktora.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>Wywoływana jest metoda następnie ustalić adresu URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET wykonuje przekierowanie zwróciła kod stanu HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (object routeValues);
    parameters:
    - id: routeValues
      type: System.Object
      description: "Wartości parametrów trasy."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Żadna trasa odpowiada określone parametry trasy."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Przekierowanie podjęto próbę po wysłał nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String)
  id: RedirectToRoutePermanent(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(String)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje przekierowanie trwałe z żądanego adresu URL do nowego adresu URL przy użyciu nazwy trasy."
  remarks: "Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>metody z drugim parametrem ustawioną `false`.</xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>       Ta metoda konwertuje nazwę trasy, który jest przekazywany w `routeName` do adresu URL za pomocą <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>metody.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET wykonuje przekierowanie zwróciła kod stanu HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Products`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(\"Products\")  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(\"Products\");  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (string routeName);
    parameters:
    - id: routeName
      type: System.String
      description: "Nazwa trasy."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Żadna trasa odpowiada określone parametry trasy."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Przekierowanie podjęto próbę po wysłał nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje przekierowanie trwałe z żądanego adresu URL do nowego adresu URL przy użyciu wartości parametru trasy."
  remarks: "Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metody z drugim parametrem ustawioną `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Ta metoda wywołuje <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>metodę, aby określić adres URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET wykonuje przekierowanie zwróciła kod stanu HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "Wartości parametrów trasy."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Żadna trasa odpowiada określone parametry trasy."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Przekierowanie podjęto próbę po wysłał nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)
  id: RedirectToRoutePermanent(System.String,System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(String,Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje przekierowanie trwałe z żądanego adresu URL do nowego adresu URL przy użyciu wartości parametru trasy i nazwy trasy, który odpowiada nowego adresu URL."
  remarks: "Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.HttpResponse.RedirectPermanent%2A>metody z drugim parametrem ustawioną `false`.</xref:System.Web.HttpResponse.RedirectPermanent%2A>       Ta metoda Konwertuje obiekt, który jest przekazywany w `routeValues` do <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>obiektu przy użyciu <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>konstruktora.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>Wywoływana jest metoda następnie ustalić adresu URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET wykonuje przekierowanie zwróciła kod stanu HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (string routeName, object routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "Nazwa trasy."
    - id: routeValues
      type: System.Object
      description: "Wartości parametrów trasy."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Żadna trasa odpowiada określone parametry trasy."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Przekierowanie podjęto próbę po wysłał nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje przekierowanie trwałe z żądanego adresu URL do nowego adresu URL przy użyciu wartości parametru trasy i nazwy trasy."
  remarks: "Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metody z drugim parametrem ustawioną `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Ta metoda wywołuje <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>metodę, aby określić adres URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET wykonuje przekierowanie zwróciła kod stanu HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (string routeName, System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "Nazwa trasy."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "Wartości parametrów trasy."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Żadna trasa odpowiada określone parametry trasy."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Przekierowanie podjęto próbę po wysłał nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String)
  id: RemoveOutputCacheItem(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RemoveOutputCacheItem(String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Usuwa z pamięci podręcznej wszystkie buforowane elementy, które są skojarzone z domyślnego dostawcy pamięci podręcznej danych wyjściowych. Ta metoda jest statyczna."
  remarks: "Wywołaj tę metodę, aby usunąć elementy pamięci podręcznej danych wyjściowych, które są skojarzone z domyślnego dostawcy pamięci podręcznej danych wyjściowych. Wywołanie <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A>metodę, aby usunąć elementy pamięci podręcznej danych wyjściowych, które są skojarzone z niestandardowych dostawców pamięci podręcznej danych wyjściowych, które są określone w pliku konfiguracji witryny sieci Web.</xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A>"
  syntax:
    content: public static void RemoveOutputCacheItem (string path);
    parameters:
    - id: path
      type: System.String
      description: "Bezwzględna ścieżka wirtualna do elementów, które są usuwane z pamięci podręcznej."
  overload: System.Web.HttpResponse.RemoveOutputCacheItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>nie jest bezwzględną ścieżką wirtualną."
  platform:
  - net462
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)
  id: RemoveOutputCacheItem(System.String,System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RemoveOutputCacheItem(String,String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String,String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Używa określonego dostawcy pamięci podręcznej danych wyjściowych, aby usunąć wszystkie elementy pamięci podręcznej danych wyjściowych, które są skojarzone z określoną ścieżką."
  remarks: "Wywołaj tę metodę, aby usunąć elementy pamięci podręcznej danych wyjściowych, które są skojarzone z niestandardowych dostawców pamięci podręcznej danych wyjściowych, które są określone w pliku konfiguracji witryny sieci Web. Aby usunąć elementy pamięci podręcznej danych wyjściowych, które są skojarzone z pamięci podręcznej danych wyjściowych domyślnego dostawcę, należy wywołać <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29>przeciążenie metody.</xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29>"
  syntax:
    content: public static void RemoveOutputCacheItem (string path, string providerName);
    parameters:
    - id: path
      type: System.String
      description: "Bezwzględna ścieżka wirtualna elementów, które są usuwane z pamięci podręcznej."
    - id: providerName
      type: System.String
      description: "Dostawcy, który służy do usuwania artefakty pamięci podręcznej danych wyjściowych, które są skojarzone z określoną ścieżką."
  overload: System.Web.HttpResponse.RemoveOutputCacheItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>ma wartość null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>jest nieprawidłową ścieżkę."
  platform:
  - net462
- uid: System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)
  id: SetCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SetCookie(HttpCookie)
  nameWithType: HttpResponse.SetCookie(HttpCookie)
  fullName: System.Web.HttpResponse.SetCookie(HttpCookie)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aktualizuje istniejący plik cookie w kolekcji plików cookie."
  remarks: ''
  example:
  - "The following example updates the value of an existing cookie.  \n  \n [!code-cs[Classic HttpResponse.SetCookie Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_23_1.cs)]\n [!code-vb[Classic HttpResponse.SetCookie Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_23_1.vb)]"
  syntax:
    content: public void SetCookie (System.Web.HttpCookie cookie);
    parameters:
    - id: cookie
      type: System.Web.HttpCookie
      description: "Plik cookie w kolekcji do zaktualizowania."
  overload: System.Web.HttpResponse.SetCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Próbowano ustawić plik cookie po nagłówków HTTP zostały wysłane."
  platform:
  - net462
- uid: System.Web.HttpResponse.Status
  id: Status
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Status
  nameWithType: HttpResponse.Status
  fullName: System.Web.HttpResponse.Status
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ustawia <xref uid=&quot;langword_csharp_Status&quot; name=&quot;Status&quot; href=&quot;&quot;> </xref> wiersza, która jest zwracana do klienta."
  remarks: "Stan jest przestarzała uzyskać <xref:System.Web.HttpResponse.StatusDescription%2A>i tylko w celu zachowania zgodności z wcześniejszymi wersjami programu ASP.</xref:System.Web.HttpResponse.StatusDescription%2A> ASP.NET, za pomocą <xref:System.Web.HttpResponse.StatusDescription%2A>zamiast.</xref:System.Web.HttpResponse.StatusDescription%2A>"
  syntax:
    content: public string Status { get; set; }
    return:
      type: System.String
      description: "Kod stanu ustawienie powoduje, że ciąg opisujący stan wyniku HTTP, która ma zostać zwrócona do klienta. Wartość domyślna to 200 (OK)."
  overload: System.Web.HttpResponse.Status*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Stan jest ustawiony na kod nieprawidłowy stan."
  platform:
  - net462
- uid: System.Web.HttpResponse.StatusCode
  id: StatusCode
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: StatusCode
  nameWithType: HttpResponse.StatusCode
  fullName: System.Web.HttpResponse.StatusCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia kod stanu HTTP wyjścia zwróconego do klienta."
  remarks: ''
  example:
  - "The following example checks the status code of the output stream. If the status code is not equal to 200, additional code is executed.  \n  \n [!code-vb[System.Web.HttpResponse.StatusCode#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_11_1.aspx)]\n [!code-cs[System.Web.HttpResponse.StatusCode#1](~/add/codesnippet/csharp/p-system.web.httprespons_11_1.aspx)]"
  syntax:
    content: public int StatusCode { get; set; }
    return:
      type: System.Int32
      description: "Liczba całkowita reprezentująca stan HTTP wyjścia zwróconego do klienta. Wartość domyślna to 200 (OK). Zawiera listę kodów stanu prawidłowe, zobacz [kody stanu Http](http://go.microsoft.com/fwlink/?LinkId=73157)."
  overload: System.Web.HttpResponse.StatusCode*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "StatusCode jest ustawiana po wysłaniu nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.StatusDescription
  id: StatusDescription
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
  fullName: System.Web.HttpResponse.StatusDescription
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia ciąg stanu HTTP wyjścia zwróconego do klienta."
  remarks: ''
  example:
  - "The following example checks the status string of the output stream. If the status is not equal to \"OK\", additional code is executed.  \n  \n [!code-vb[System.Web.HttpResponse.StatusDescription#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_10_1.aspx)]\n [!code-cs[System.Web.HttpResponse.StatusDescription#1](~/add/codesnippet/csharp/p-system.web.httprespons_10_1.aspx)]"
  syntax:
    content: public string StatusDescription { get; set; }
    return:
      type: System.String
      description: "Ciąg opisujący stan HTTP wyjścia zwróconego do klienta. Wartość domyślna to &quot;OK&quot;. Zawiera listę kodów stanu prawidłowe, zobacz [kody stanu Http](http://go.microsoft.com/fwlink/?LinkId=73157)."
  overload: System.Web.HttpResponse.StatusDescription*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>StatusDescription</code>ustawiono po wysłaniu nagłówków HTTP."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wybrana wartość ma długość większą niż 512."
  platform:
  - net462
- uid: System.Web.HttpResponse.SubStatusCode
  id: SubStatusCode
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SubStatusCode
  nameWithType: HttpResponse.SubStatusCode
  fullName: System.Web.HttpResponse.SubStatusCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia wartość kwalifikowanie kod stanu odpowiedzi."
  remarks: "Właściwość SubStatusCode jest obsługiwana tylko w trybie zintegrowanym potoku [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] i co najmniej programu .NET Framework w wersji 3.0 lub nowszej. Po ustawieniu właściwości SubStatusCode stan jest zalogowany [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] Jeśli skonfigurowane jest śledzenie żądanie nie powiodło się. Niezależnie od tego, czy skonfigurowane jest śledzenie, kod nigdy nie są wysyłane jako część ostatecznej odpowiedzi na żądanie. Aby uzyskać więcej informacji, zobacz [rozwiązywania problemów nie powiodło się żądania za pomocą śledzenia nieudanych żądań w usługach IIS 7.0](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1)."
  example:
  - "The following example sets the SubStatusCode property in an event handler for the <xref:System.Web.HttpApplication> instance of the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event. Put the code file in the App_Code folder of your Web application and configure the Web.config file to register the module. For more information, see [Walkthrough: Creating and Registering a Custom HTTP Module](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.HttpResponse.SubStatusCode#1](~/add/codesnippet/csharp/p-system.web.httprespons_9_1.cs)]\n [!code-vb[System.Web.HttpResponse.SubStatusCode#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_9_1.vb)]"
  syntax:
    content: public int SubStatusCode { get; set; }
    return:
      type: System.Int32
      description: "Wartość całkowitą, która reprezentuje [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] sub kod stanu."
  overload: System.Web.HttpResponse.SubStatusCode*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Operacja wymaga trybu zintegrowanego potoku w [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] i co najmniej programu .NET Framework w wersji 3.0 lub nowszej."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Kod stanu jest ustawiana po wysłaniu wszystkich nagłówków HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.SupportsAsyncFlush
  id: SupportsAsyncFlush
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SupportsAsyncFlush
  nameWithType: HttpResponse.SupportsAsyncFlush
  fullName: System.Web.HttpResponse.SupportsAsyncFlush
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera wartość wskazującą, czy połączenie obsługuje opróżniania operacji asynchronicznych."
  remarks: "Ta właściwość zwraca wartość <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName>Właściwości.</xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName>"
  syntax:
    content: public bool SupportsAsyncFlush { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli połączenie obsługuje asynchroniczne operacje opróżniania; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.SupportsAsyncFlush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.SuppressContent
  id: SuppressContent
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SuppressContent
  nameWithType: HttpResponse.SuppressContent
  fullName: System.Web.HttpResponse.SuppressContent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia wartość wskazującą, czy do wysłania zawartości HTTP klienta."
  remarks: ''
  example:
  - "The following example checks whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false. If it is, the SuppressContent property is set to true to stop the response from being sent.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/csharp/p-system.web.httprespons_6_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/visualbasic/p-system.web.httprespons_6_1.aspx)]"
  syntax:
    content: public bool SuppressContent { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby pominąć dane wyjściowe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.SuppressContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  id: SuppressDefaultCacheControlHeader
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SuppressDefaultCacheControlHeader
  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader
  fullName: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "[Obsługiwane w programie .NET Framework 4.5.2 i nowszych wersjach]       Pobiera lub ustawia wartość wskazującą, czy pominąć domyślna `Cache Control: private` nagłówek dla bieżącej odpowiedzi HTTP."
  remarks: "Domyślnie wysyła ASP.NET `Cache-Control: private` nagłówka odpowiedzi, chyba że zasady jawne pamięci podręcznej został określony dla tej odpowiedzi. Ta właściwość umożliwia pomijanie ten nagłówek odpowiedzi domyślne na podstawie danego żądania. Nadal można pominąć nagłówek na całej aplikacji przez ustawienie <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A>w [httpRuntime — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) lub [outputCache Element do buforowania (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/47cd2b47-316f-4dfd-bbf8-539be3066fee).</xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A>       Należy zachować ostrożność podczas pomijanie domyślnie `Cache-Control: private` nagłówka jako serwery proxy i innych pośredników mogą traktować odpowiedzi bez tego nagłówka jako buforowalnej domyślnie. Takie podejście może prowadzić do niepotrzebnemu buforowaniu poufne informacje. Zobacz [RFC 2616, 13.4 s.](http://tools.ietf.org/html/rfc2616) Aby uzyskać więcej informacji."
  syntax:
    content: public bool SuppressDefaultCacheControlHeader { get; set; }
    return:
      type: System.Boolean
      description: '<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby pominąć domyślne `Cache Control: private` nagłówek dla bieżącej odpowiedzi HTTP; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.'
  overload: System.Web.HttpResponse.SuppressDefaultCacheControlHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  id: SuppressFormsAuthenticationRedirect
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SuppressFormsAuthenticationRedirect
  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect
  fullName: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia wartość określającą, czy ma być pomijana przekierowania uwierzytelniania formularzy do strony logowania."
  remarks: "Domyślnie uwierzytelnianie formularzy konwertuje kodów stanu HTTP 401 na 302 w celu przekierowania do strony logowania. To nie jest odpowiednia dla niektórych klas błędów, na przykład gdy uwierzytelnienie zakończy się pomyślnie, ale autoryzacji nie powiedzie się lub gdy bieżące żądanie dotyczy żądanie obsługi AJAX lub sieci web. Ta właściwość umożliwia pomijanie zachowanie przekierowania i wysłać do klienta oryginalnym kod stanu."
  syntax:
    content: public bool SuppressFormsAuthenticationRedirect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ma być pomijana przekierowania uwierzytelniania formularzy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.TransmitFile(System.String)
  id: TransmitFile(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: TransmitFile(String)
  nameWithType: HttpResponse.TransmitFile(String)
  fullName: System.Web.HttpResponse.TransmitFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje określony plik bezpośrednio w strumieniu wyjściowym odpowiedzi HTTP, bez buforowania go w pamięci."
  syntax:
    content: public void TransmitFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Nazwa pliku do zapisu w wyniku HTTP."
  overload: System.Web.HttpResponse.TransmitFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> filename </code> Parametru<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)
  id: TransmitFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: TransmitFile(String,Int64,Int64)
  nameWithType: HttpResponse.TransmitFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.TransmitFile(String,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje określoną część pliku bezpośrednio w strumieniu wyjściowym odpowiedzi HTTP bez buforowania go w pamięci."
  remarks: "Jeśli określisz 0 jako `offset` parametr i wartość -1 jako `length` parametru wysyłane cały plik."
  syntax:
    content: public void TransmitFile (string filename, long offset, long length);
    parameters:
    - id: filename
      type: System.String
      description: "Nazwa pliku do zapisu w wyniku HTTP."
    - id: offset
      type: System.Int64
      description: "Pozycja w pliku do zapisu w wyniku HTTP."
    - id: length
      type: System.Int64
      description: "Liczba bajtów, które mają być przekazywane."
  overload: System.Web.HttpResponse.TransmitFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>offset</code> parameter is less than zero.  \n  \n \\- or -  \n  \n The <code>length</code> parameter is less than -1.  \n  \n \\- or -  \n  \n The <code>length</code> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The out-of-process worker request is not supported.  \n  \n \\- or -  \n  \n The response is not using an <xref href=\"System.Web.HttpWriter\"></xref> object."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>offset</code> parameter is less than zero or greater than the file size.  \n  \n \\- or -  \n  \n The <code>length</code> parameter is less than -1 or greater than the value of the <code>offset</code> parameter plus the file size."
  platform:
  - net462
- uid: System.Web.HttpResponse.TrySkipIisCustomErrors
  id: TrySkipIisCustomErrors
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: TrySkipIisCustomErrors
  nameWithType: HttpResponse.TrySkipIisCustomErrors
  fullName: System.Web.HttpResponse.TrySkipIisCustomErrors
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia wartość określającą czy [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] błędy niestandardowe są wyłączone."
  remarks: "Właściwość TrySkipIisCustomErrors jest używana tylko wtedy, gdy aplikacja jest hostowana w usługach IIS 7.0. Gdy jest uruchomiony w trybie klasycznym w usługach IIS 7.0, wartością domyślną właściwości TrySkipIisCustomErrors `true`. Podczas uruchamiania w trybie zintegrowanym, wartością domyślną właściwości TrySkipIisCustomErrors jest `false`."
  syntax:
    content: public bool TrySkipIisCustomErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wyłączyć błędów niestandardowych usług IIS; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.TrySkipIisCustomErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.Char)
  id: Write(System.Char)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(Char)
  nameWithType: HttpResponse.Write(Char)
  fullName: System.Web.HttpResponse.Write(Char)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje znak w strumieniu wyjściowym odpowiedzi HTTP."
  remarks: ''
  example:
  - "The following example creates a series of constants that are written to an ASP.NET page using the Write method. The code calls this version of the Write method to write individual character constants to the page.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/csharp/m-system.web.httprespons_7_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/visualbasic/m-system.web.httprespons_7_1.aspx)]"
  syntax:
    content: public void Write (char ch);
    parameters:
    - id: ch
      type: System.Char
      description: "Znak do zapisu HTTP output strumienia."
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.Object)
  id: Write(System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(Object)
  nameWithType: HttpResponse.Write(Object)
  fullName: System.Web.HttpResponse.Write(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje <xref:System.Object>do strumienia odpowiedzi HTTP.</xref:System.Object>"
  syntax:
    content: public void Write (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>Można zapisać do strumienia wyjściowego HTTP.</xref:System.Object>"
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.String)
  id: Write(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(String)
  nameWithType: HttpResponse.Write(String)
  fullName: System.Web.HttpResponse.Write(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje ciąg w strumieniu wyjściowym odpowiedzi HTTP."
  remarks: "Dynamicznie generowanym stron HTML można wprowadzać zagrożenia bezpieczeństwa, jeśli dane wejściowe otrzymane z klientów sieci Web nie jest sprawdzana poprawność po odebraniu przez klienta lub są przesyłane do klienta. Złośliwy skrypt, który jest osadzony w danych wejściowych przesłane do witryny sieci Web i później zapisywane klient może się pojawić pochodzącym z zaufanego źródła. To zagrożenie bezpieczeństwa jest określana jako atak skryptowy między witrynami. Zawsze należy sprawdzić, czy dane odebrane od klienta, gdy zostanie on przekazywane z lokacji do przeglądarki klienta.       Ponadto, gdy można zapisać jako plik HTML żadnych danych, która została odebrana jako dane wejściowe, powinien kodowania go przy użyciu technik, takich jak <xref:System.Web.HttpServerUtility.HtmlEncode%2A>lub <xref:System.Web.HttpServerUtility.UrlEncode%2A>Aby zapobiec wykonywania przez złośliwy skrypt.</xref:System.Web.HttpServerUtility.UrlEncode%2A> </xref:System.Web.HttpServerUtility.HtmlEncode%2A> Ta technika jest przydatne w przypadku danych, która nie została zweryfikowana, gdy zostało przesłane.       Podczas kodowania lub filtrowanie danych, należy określić zestaw stron sieci Web, dzięki czemu filtrów można zidentyfikować i usuń wszelkie bajtów sekwencje, które nie należą do ustaw (na przykład sekwencji innych niż alfanumeryczne), które może potencjalnie złośliwy skrypt osadzonych w tych znaków.       Aby uzyskać więcej informacji dotyczących ataków skryptów między witrynami, zobacz artykuł Q252985, &quot;Sposób można zapobiec Cross-Site skryptów problemy z zabezpieczeniami&quot; w [bazy wiedzy Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?LinkID=37115) witryny sieci Web."
  example:
  - "The following example echoes the client's name back to the client's browser. The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method strips any malicious script and invalid characters that may have been submitted in the `UserName` input field.  \n  \n [!code-vb[System.Web.HttpResponse.Write#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_1_1.vb)]\n [!code-cs[System.Web.HttpResponse.Write#1](~/add/codesnippet/csharp/m-system.web.httprespons_1_1.cs)]"
  syntax:
    content: public void Write (string s);
    parameters:
    - id: s
      type: System.String
      description: "Ciąg do zapisu HTTP output strumienia."
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: HttpResponse.Write(Char[],Int32,Int32)
  fullName: System.Web.HttpResponse.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje tablicę znaków w strumieniu wyjściowym odpowiedzi HTTP."
  remarks: ''
  example:
  - "The following example creates a series of constants that are written to an ASP.NET page using the Write method. The code calls this version of the Write method to write individual character constants to the page.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/csharp/m-system.web.httprespons_20_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/visualbasic/m-system.web.httprespons_20_1.aspx)]"
  syntax:
    content: public void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tablica znaków do zapisu."
    - id: index
      type: System.Int32
      description: "Pozycja w tablicy znaków, w której rozpoczyna się zapisu."
    - id: count
      type: System.Int32
      description: "Liczba znaków do zapisu, rozpoczynając od `index`."
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.String)
  id: WriteFile(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(String)
  nameWithType: HttpResponse.WriteFile(String)
  fullName: System.Web.HttpResponse.WriteFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje zawartość określonego pliku bezpośrednio w strumieniu wyjściowym odpowiedzi HTTP jako blokowania plików."
  remarks: 'Gdy ta metoda jest używana z dużymi plikami, wywołanie metody może zgłosić wyjątek. Rozmiar pliku, który może być używany z tej metody zależy od konfiguracji sprzętu serwera sieci Web. Aby uzyskać więcej informacji, zobacz artykuł 812406, &quot;PRB: Response.WriteFile nie można pobrać plików o dużym&quot; w [bazy wiedzy Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) witryny sieci Web.'
  example:
  - "The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.  \n  \n [!code-vb[Classic HttpResponse.WriteFile Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_18_1.vb)]\n [!code-cs[Classic HttpResponse.WriteFile Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_18_1.cs)]"
  syntax:
    content: public void WriteFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Nazwa pliku do zapisu w wyniku HTTP."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Boolean)
  id: WriteFile(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(String,Boolean)
  nameWithType: HttpResponse.WriteFile(String,Boolean)
  fullName: System.Web.HttpResponse.WriteFile(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje zawartość określonego pliku bezpośrednio w strumieniu wyjściowym odpowiedzi HTTP jako bloku pamięci."
  remarks: 'Gdy ta metoda jest używana z dużymi plikami, wywołanie metody może zgłosić wyjątek. Rozmiar pliku, który może być używany z tej metody zależy od konfiguracji sprzętu serwera sieci Web. Aby uzyskać więcej informacji, zobacz artykuł 812406, &quot;PRB: Response.WriteFile nie można pobrać plików o dużym&quot; w [bazy wiedzy Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) witryny sieci Web.'
  example:
  - "The following example writes a file to memory.  \n  \n [!code-cs[Classic HttpResponse.WriteFile1 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_3_1.cs)]\n [!code-vb[Classic HttpResponse.WriteFile1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_3_1.vb)]"
  syntax:
    content: public void WriteFile (string filename, bool readIntoMemory);
    parameters:
    - id: filename
      type: System.String
      description: "Nazwa pliku do zapisu do bloku pamięci."
    - id: readIntoMemory
      type: System.Boolean
      description: "Wskazuje, czy plik zostanie zapisany w bloku pamięci."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)
  id: WriteFile(System.IntPtr,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(IntPtr,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(IntPtr,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(IntPtr,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje określony plik bezpośrednio w strumieniu wyjściowym odpowiedzi HTTP."
  remarks: 'Gdy ta metoda jest używana z dużymi plikami, wywołanie metody może zgłosić wyjątek. Rozmiar pliku, który może być używany z tej metody zależy od konfiguracji sprzętu serwera sieci Web. Aby uzyskać więcej informacji, zobacz artykuł 812406, &quot;PRB: Response.WriteFile nie można pobrać plików o dużym&quot; w [bazy wiedzy Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) witryny sieci Web.'
  example:
  - "The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.  \n  \n [!code-vb[Classic HttpResponse.WriteFile3 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_12_1.vb)]\n [!code-cs[Classic HttpResponse.WriteFile3 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_12_1.cs)]"
  syntax:
    content: public void WriteFile (IntPtr fileHandle, long offset, long size);
    parameters:
    - id: fileHandle
      type: System.IntPtr
      description: "Dojście do pliku pliku do zapisu do strumienia wyjściowego HTTP."
    - id: offset
      type: System.Int64
      description: "Pozycja bajtów w pliku, gdy rozpocznie się zapisu."
    - id: size
      type: System.Int64
      description: "Liczba bajtów do zapisania w strumieniu wyjściowym."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileHandler</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>offset</code> is less than 0.  \n  \n \\- or -  \n  \n <code>size</code> is greater than the file size minus <code>offset</code>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)
  id: WriteFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(String,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(String,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje określony plik bezpośrednio w strumieniu wyjściowym odpowiedzi HTTP."
  remarks: 'Gdy ta metoda jest używana z dużymi plikami, wywołanie metody może zgłosić wyjątek. Rozmiar pliku, który może być używany z tej metody zależy od konfiguracji sprzętu serwera sieci Web. Aby uzyskać więcej informacji, zobacz artykuł 812406, &quot;PRB: Response.WriteFile nie można pobrać plików o dużym&quot; w [bazy wiedzy Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) witryny sieci Web.'
  example:
  - "The following example writes all the contents of a text file named `Login.txt` (which might contain literal text and HTML input controls) directly to the output stream.  \n  \n [!code-cs[Classic HttpResponse.WriteFile2 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_5_1.cs)]\n [!code-vb[Classic HttpResponse.WriteFile2 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_5_1.vb)]"
  syntax:
    content: public void WriteFile (string filename, long offset, long size);
    parameters:
    - id: filename
      type: System.String
      description: "Nazwa pliku do zapisu HTTP output strumienia."
    - id: offset
      type: System.Int64
      description: "Pozycja bajtów w pliku, gdy rozpocznie się zapisu."
    - id: size
      type: System.Int64
      description: "Liczba bajtów do zapisania w strumieniu wyjściowym."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>offset</code> is less than 0.  \n  \n \\- or -  \n  \n <code>size</code> is greater than the file size minus <code>offset</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  id: WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteSubstitution(HttpResponseSubstitutionCallback)
  nameWithType: HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
  fullName: System.Web.HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Umożliwia wstawienie bloków podstawienia odpowiedzi do odpowiedzi, która umożliwia dynamiczne generowanie kodu odpowiedzi określonych regionów dla odpowiedzi w pamięci podręcznej danych wyjściowych."
  remarks: "Metoda WriteSubstitution podstawiania po pamięci podręcznej w pamięci podręcznej danych wyjściowych strony. Przez przekazanie <xref:System.Web.HttpContext>obiektu do metody wywołania zwrotnego z wyznaczonych <xref:System.Web.HttpResponseSubstitutionCallback>podpisu, można zastąpić danych wyjściowych w pamięci podręcznej zawartości w dowolnym miejscu podanego w pamięci podręcznej stron.</xref:System.Web.HttpResponseSubstitutionCallback> </xref:System.Web.HttpContext> Aby zainicjować zastąpienia, wywołaj metodę WriteSubstitution, przekazanie jej przez metodę wywołania zwrotnego, która musi zapewniać bezpieczeństwo wątkowe i może użyć jednej z następujących:-statycznej metody formantu kontenera strony lub użytkownika.      -Statycznych lub metoda obiektu dowolnego innego wystąpienia.       Na pierwsze żądanie do strony, wywołuje WriteSubstitution <xref:System.Web.HttpResponseSubstitutionCallback>delegata do generowania danych wyjściowych.</xref:System.Web.HttpResponseSubstitutionCallback> Następnie dodaje bufor podstawienia do odpowiedzi, która zachowuje delegata, który ma zostać wywołany w przyszłych żądań. Na koniec powoduje spadek buforowanie po stronie klienta z publicznej tylko do serwera, do zapewnienia przyszłych żądań do wywołania ponownie strony delegat przez nie pamięci podręcznej na kliencie.      > [!NOTE] > Podstawiania po pamięci podręcznej nie jest obsługiwana dla kontrolkę użytkownika pamięci podręcznej, w którym buforowanie danych wyjściowych jest stosowana na poziomie formantu użytkownika. Jest to również nazywane buforowanie fragmentu. Aby uzyskać więcej informacji, zobacz [buforowanie części strony ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void WriteSubstitution (System.Web.HttpResponseSubstitutionCallback callback);
    parameters:
    - id: callback
      type: System.Web.HttpResponseSubstitutionCallback
      description: "Metoda, kontrolki użytkownika lub obiektu do zastąpienia."
  overload: System.Web.HttpResponse.WriteSubstitution*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Element docelowy <code> callback </code> parametr jest typu <xref href=&quot;System.Web.UI.Control&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Threading.ThreadAbortException
  parent: System.Threading
  isExternal: false
  name: ThreadAbortException
  nameWithType: ThreadAbortException
  fullName: System.Threading.ThreadAbortException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ApplicationException
  parent: System
  isExternal: false
  name: ApplicationException
  nameWithType: ApplicationException
  fullName: System.ApplicationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpResponse.#ctor(System.IO.TextWriter)
  parent: System.Web.HttpResponse
  isExternal: false
  name: HttpResponse(TextWriter)
  nameWithType: HttpResponse.HttpResponse(TextWriter)
  fullName: System.Web.HttpResponse.HttpResponse(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheDependency(CacheDependency[])
  nameWithType: HttpResponse.AddCacheDependency(CacheDependency[])
  fullName: System.Web.HttpResponse.AddCacheDependency(CacheDependency[])
- uid: System.Web.Caching.CacheDependency[]
  parent: System.Web.Caching
  isExternal: false
  name: CacheDependency
  nameWithType: CacheDependency
  fullName: System.Web.Caching.CacheDependency[]
  spec.csharp:
  - uid: System.Web.Caching.CacheDependency
    name: CacheDependency
    nameWithType: CacheDependency
    fullName: CacheDependency[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependencies(ArrayList)
  nameWithType: HttpResponse.AddCacheItemDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.String[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependencies(String[])
  nameWithType: HttpResponse.AddCacheItemDependencies(String[])
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.AddCacheItemDependency(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependency(String)
  nameWithType: HttpResponse.AddCacheItemDependency(String)
  fullName: System.Web.HttpResponse.AddCacheItemDependency(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependencies(ArrayList)
  nameWithType: HttpResponse.AddFileDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddFileDependencies(ArrayList)
- uid: System.Web.HttpResponse.AddFileDependencies(System.String[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependencies(String[])
  nameWithType: HttpResponse.AddFileDependencies(String[])
  fullName: System.Web.HttpResponse.AddFileDependencies(String[])
- uid: System.Web.HttpResponse.AddFileDependency(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependency(String)
  nameWithType: HttpResponse.AddFileDependency(String)
  fullName: System.Web.HttpResponse.AddFileDependency(String)
- uid: System.Web.HttpResponse.AddHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddHeader(String,String)
  nameWithType: HttpResponse.AddHeader(String,String)
  fullName: System.Web.HttpResponse.AddHeader(String,String)
- uid: System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddOnSendingHeaders(Action<HttpContext>)
  nameWithType: HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
  fullName: System.Web.HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
- uid: System.Web.ISubscriptionToken
  parent: System.Web
  isExternal: false
  name: ISubscriptionToken
  nameWithType: ISubscriptionToken
  fullName: System.Web.ISubscriptionToken
- uid: System.Action{System.Web.HttpContext}
  parent: System
  isExternal: true
  name: Action<HttpContext>
  nameWithType: Action<HttpContext>
  fullName: System.Action<System.Web.HttpContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Web.HttpContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendCookie(HttpCookie)
  nameWithType: HttpResponse.AppendCookie(HttpCookie)
  fullName: System.Web.HttpResponse.AppendCookie(HttpCookie)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.HttpResponse.AppendHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendHeader(String,String)
  nameWithType: HttpResponse.AppendHeader(String,String)
  fullName: System.Web.HttpResponse.AppendHeader(String,String)
- uid: System.Web.HttpResponse.AppendToLog(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendToLog(String)
  nameWithType: HttpResponse.AppendToLog(String)
  fullName: System.Web.HttpResponse.AppendToLog(String)
- uid: System.Web.HttpResponse.ApplyAppPathModifier(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: ApplyAppPathModifier(String)
  nameWithType: HttpResponse.ApplyAppPathModifier(String)
  fullName: System.Web.HttpResponse.ApplyAppPathModifier(String)
- uid: System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: BeginFlush(AsyncCallback,Object)
  nameWithType: HttpResponse.BeginFlush(AsyncCallback,Object)
  fullName: System.Web.HttpResponse.BeginFlush(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.HttpResponse.BinaryWrite(System.Byte[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: BinaryWrite(Byte[])
  nameWithType: HttpResponse.BinaryWrite(Byte[])
  fullName: System.Web.HttpResponse.BinaryWrite(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.Buffer
  parent: System.Web.HttpResponse
  isExternal: false
  name: Buffer
  nameWithType: HttpResponse.Buffer
  fullName: System.Web.HttpResponse.Buffer
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpResponse.BufferOutput
  parent: System.Web.HttpResponse
  isExternal: false
  name: BufferOutput
  nameWithType: HttpResponse.BufferOutput
  fullName: System.Web.HttpResponse.BufferOutput
- uid: System.Web.HttpResponse.Cache
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cache
  nameWithType: HttpResponse.Cache
  fullName: System.Web.HttpResponse.Cache
- uid: System.Web.HttpCachePolicy
  parent: System.Web
  isExternal: false
  name: HttpCachePolicy
  nameWithType: HttpCachePolicy
  fullName: System.Web.HttpCachePolicy
- uid: System.Web.HttpResponse.CacheControl
  parent: System.Web.HttpResponse
  isExternal: false
  name: CacheControl
  nameWithType: HttpResponse.CacheControl
  fullName: System.Web.HttpResponse.CacheControl
- uid: System.Web.HttpResponse.Charset
  parent: System.Web.HttpResponse
  isExternal: false
  name: Charset
  nameWithType: HttpResponse.Charset
  fullName: System.Web.HttpResponse.Charset
- uid: System.Web.HttpResponse.Clear
  parent: System.Web.HttpResponse
  isExternal: false
  name: Clear()
  nameWithType: HttpResponse.Clear()
  fullName: System.Web.HttpResponse.Clear()
- uid: System.Web.HttpResponse.ClearContent
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearContent()
  nameWithType: HttpResponse.ClearContent()
  fullName: System.Web.HttpResponse.ClearContent()
- uid: System.Web.HttpResponse.ClearHeaders
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearHeaders()
  nameWithType: HttpResponse.ClearHeaders()
  fullName: System.Web.HttpResponse.ClearHeaders()
- uid: System.Web.HttpResponse.ClientDisconnectedToken
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClientDisconnectedToken
  nameWithType: HttpResponse.ClientDisconnectedToken
  fullName: System.Web.HttpResponse.ClientDisconnectedToken
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Web.HttpResponse.Close
  parent: System.Web.HttpResponse
  isExternal: false
  name: Close()
  nameWithType: HttpResponse.Close()
  fullName: System.Web.HttpResponse.Close()
- uid: System.Web.HttpResponse.ContentEncoding
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
  fullName: System.Web.HttpResponse.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.HttpResponse.ContentType
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpResponse.ContentType
  fullName: System.Web.HttpResponse.ContentType
- uid: System.Web.HttpResponse.Cookies
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpResponse.Cookies
  fullName: System.Web.HttpResponse.Cookies
- uid: System.Web.HttpCookieCollection
  parent: System.Web
  isExternal: false
  name: HttpCookieCollection
  nameWithType: HttpCookieCollection
  fullName: System.Web.HttpCookieCollection
- uid: System.Web.HttpResponse.DisableKernelCache
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableKernelCache()
  nameWithType: HttpResponse.DisableKernelCache()
  fullName: System.Web.HttpResponse.DisableKernelCache()
- uid: System.Web.HttpResponse.DisableUserCache
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableUserCache()
  nameWithType: HttpResponse.DisableUserCache()
  fullName: System.Web.HttpResponse.DisableUserCache()
- uid: System.Web.HttpResponse.End
  parent: System.Web.HttpResponse
  isExternal: false
  name: End()
  nameWithType: HttpResponse.End()
  fullName: System.Web.HttpResponse.End()
- uid: System.Web.HttpResponse.EndFlush(System.IAsyncResult)
  parent: System.Web.HttpResponse
  isExternal: false
  name: EndFlush(IAsyncResult)
  nameWithType: HttpResponse.EndFlush(IAsyncResult)
  fullName: System.Web.HttpResponse.EndFlush(IAsyncResult)
- uid: System.Web.HttpResponse.Expires
  parent: System.Web.HttpResponse
  isExternal: false
  name: Expires
  nameWithType: HttpResponse.Expires
  fullName: System.Web.HttpResponse.Expires
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpResponse.ExpiresAbsolute
  parent: System.Web.HttpResponse
  isExternal: false
  name: ExpiresAbsolute
  nameWithType: HttpResponse.ExpiresAbsolute
  fullName: System.Web.HttpResponse.ExpiresAbsolute
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.HttpResponse.Filter
  parent: System.Web.HttpResponse
  isExternal: false
  name: Filter
  nameWithType: HttpResponse.Filter
  fullName: System.Web.HttpResponse.Filter
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.HttpResponse.Flush
  parent: System.Web.HttpResponse
  isExternal: false
  name: Flush()
  nameWithType: HttpResponse.Flush()
  fullName: System.Web.HttpResponse.Flush()
- uid: System.Web.HttpResponse.FlushAsync
  parent: System.Web.HttpResponse
  isExternal: false
  name: FlushAsync()
  nameWithType: HttpResponse.FlushAsync()
  fullName: System.Web.HttpResponse.FlushAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.HttpResponse.HeaderEncoding
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeaderEncoding
  nameWithType: HttpResponse.HeaderEncoding
  fullName: System.Web.HttpResponse.HeaderEncoding
- uid: System.Web.HttpResponse.Headers
  parent: System.Web.HttpResponse
  isExternal: false
  name: Headers
  nameWithType: HttpResponse.Headers
  fullName: System.Web.HttpResponse.Headers
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpResponse.HeadersWritten
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeadersWritten
  nameWithType: HttpResponse.HeadersWritten
  fullName: System.Web.HttpResponse.HeadersWritten
- uid: System.Web.HttpResponse.IsClientConnected
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsClientConnected
  nameWithType: HttpResponse.IsClientConnected
  fullName: System.Web.HttpResponse.IsClientConnected
- uid: System.Web.HttpResponse.IsRequestBeingRedirected
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsRequestBeingRedirected
  nameWithType: HttpResponse.IsRequestBeingRedirected
  fullName: System.Web.HttpResponse.IsRequestBeingRedirected
- uid: System.Web.HttpResponse.Output
  parent: System.Web.HttpResponse
  isExternal: false
  name: Output
  nameWithType: HttpResponse.Output
  fullName: System.Web.HttpResponse.Output
- uid: System.Web.HttpResponse.OutputStream
  parent: System.Web.HttpResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpResponse.OutputStream
  fullName: System.Web.HttpResponse.OutputStream
- uid: System.Web.HttpResponse.Pics(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Pics(String)
  nameWithType: HttpResponse.Pics(String)
  fullName: System.Web.HttpResponse.Pics(String)
- uid: System.Web.HttpResponse.PushPromise(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: PushPromise(String)
  nameWithType: HttpResponse.PushPromise(String)
  fullName: System.Web.HttpResponse.PushPromise(String)
- uid: System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpResponse
  isExternal: false
  name: PushPromise(String,String,NameValueCollection)
  nameWithType: HttpResponse.PushPromise(String,String,NameValueCollection)
  fullName: System.Web.HttpResponse.PushPromise(String,String,NameValueCollection)
- uid: System.Web.HttpResponse.Redirect(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Redirect(String)
  nameWithType: HttpResponse.Redirect(String)
  fullName: System.Web.HttpResponse.Redirect(String)
- uid: System.Web.HttpResponse.Redirect(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Redirect(String,Boolean)
  nameWithType: HttpResponse.Redirect(String,Boolean)
  fullName: System.Web.HttpResponse.Redirect(String,Boolean)
- uid: System.Web.HttpResponse.RedirectLocation
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpResponse.RedirectLocation
  fullName: System.Web.HttpResponse.RedirectLocation
- uid: System.Web.HttpResponse.RedirectPermanent(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectPermanent(String)
  nameWithType: HttpResponse.RedirectPermanent(String)
  fullName: System.Web.HttpResponse.RedirectPermanent(String)
- uid: System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectPermanent(String,Boolean)
  nameWithType: HttpResponse.RedirectPermanent(String,Boolean)
  fullName: System.Web.HttpResponse.RedirectPermanent(String,Boolean)
- uid: System.Web.HttpResponse.RedirectToRoute(System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(Object)
  nameWithType: HttpResponse.RedirectToRoute(Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(Object)
- uid: System.Web.HttpResponse.RedirectToRoute(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(String)
  nameWithType: HttpResponse.RedirectToRoute(String)
  fullName: System.Web.HttpResponse.RedirectToRoute(String)
- uid: System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(RouteValueDictionary)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(String,Object)
  nameWithType: HttpResponse.RedirectToRoute(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,Object)
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,RouteValueDictionary)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(Object)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(String)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(String,Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,Object)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RemoveOutputCacheItem(String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String)
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RemoveOutputCacheItem(String,String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String,String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String,String)
- uid: System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  isExternal: false
  name: SetCookie(HttpCookie)
  nameWithType: HttpResponse.SetCookie(HttpCookie)
  fullName: System.Web.HttpResponse.SetCookie(HttpCookie)
- uid: System.Web.HttpResponse.Status
  parent: System.Web.HttpResponse
  isExternal: false
  name: Status
  nameWithType: HttpResponse.Status
  fullName: System.Web.HttpResponse.Status
- uid: System.Web.HttpResponse.StatusCode
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpResponse.StatusCode
  fullName: System.Web.HttpResponse.StatusCode
- uid: System.Web.HttpResponse.StatusDescription
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
  fullName: System.Web.HttpResponse.StatusDescription
- uid: System.Web.HttpResponse.SubStatusCode
  parent: System.Web.HttpResponse
  isExternal: false
  name: SubStatusCode
  nameWithType: HttpResponse.SubStatusCode
  fullName: System.Web.HttpResponse.SubStatusCode
- uid: System.Web.HttpResponse.SupportsAsyncFlush
  parent: System.Web.HttpResponse
  isExternal: false
  name: SupportsAsyncFlush
  nameWithType: HttpResponse.SupportsAsyncFlush
  fullName: System.Web.HttpResponse.SupportsAsyncFlush
- uid: System.Web.HttpResponse.SuppressContent
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressContent
  nameWithType: HttpResponse.SuppressContent
  fullName: System.Web.HttpResponse.SuppressContent
- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressDefaultCacheControlHeader
  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader
  fullName: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressFormsAuthenticationRedirect
  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect
  fullName: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
- uid: System.Web.HttpResponse.TransmitFile(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: TransmitFile(String)
  nameWithType: HttpResponse.TransmitFile(String)
  fullName: System.Web.HttpResponse.TransmitFile(String)
- uid: System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  isExternal: false
  name: TransmitFile(String,Int64,Int64)
  nameWithType: HttpResponse.TransmitFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.TransmitFile(String,Int64,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.HttpResponse.TrySkipIisCustomErrors
  parent: System.Web.HttpResponse
  isExternal: false
  name: TrySkipIisCustomErrors
  nameWithType: HttpResponse.TrySkipIisCustomErrors
  fullName: System.Web.HttpResponse.TrySkipIisCustomErrors
- uid: System.Web.HttpResponse.Write(System.Char)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(Char)
  nameWithType: HttpResponse.Write(Char)
  fullName: System.Web.HttpResponse.Write(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.HttpResponse.Write(System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(Object)
  nameWithType: HttpResponse.Write(Object)
  fullName: System.Web.HttpResponse.Write(Object)
- uid: System.Web.HttpResponse.Write(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(String)
  nameWithType: HttpResponse.Write(String)
  fullName: System.Web.HttpResponse.Write(String)
- uid: System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: HttpResponse.Write(Char[],Int32,Int32)
  fullName: System.Web.HttpResponse.Write(Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.WriteFile(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(String)
  nameWithType: HttpResponse.WriteFile(String)
  fullName: System.Web.HttpResponse.WriteFile(String)
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(String,Boolean)
  nameWithType: HttpResponse.WriteFile(String,Boolean)
  fullName: System.Web.HttpResponse.WriteFile(String,Boolean)
- uid: System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(IntPtr,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(IntPtr,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(IntPtr,Int64,Int64)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(String,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(String,Int64,Int64)
- uid: System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteSubstitution(HttpResponseSubstitutionCallback)
  nameWithType: HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
  fullName: System.Web.HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
- uid: System.Web.HttpResponseSubstitutionCallback
  parent: System.Web
  isExternal: false
  name: HttpResponseSubstitutionCallback
  nameWithType: HttpResponseSubstitutionCallback
  fullName: System.Web.HttpResponseSubstitutionCallback
- uid: System.Web.HttpResponse.#ctor*
  parent: System.Web.HttpResponse
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse.HttpResponse
- uid: System.Web.HttpResponse.AddCacheDependency*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheDependency
  nameWithType: HttpResponse.AddCacheDependency
- uid: System.Web.HttpResponse.AddCacheItemDependencies*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependencies
  nameWithType: HttpResponse.AddCacheItemDependencies
- uid: System.Web.HttpResponse.AddCacheItemDependency*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependency
  nameWithType: HttpResponse.AddCacheItemDependency
- uid: System.Web.HttpResponse.AddFileDependencies*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependencies
  nameWithType: HttpResponse.AddFileDependencies
- uid: System.Web.HttpResponse.AddFileDependency*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependency
  nameWithType: HttpResponse.AddFileDependency
- uid: System.Web.HttpResponse.AddHeader*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddHeader
  nameWithType: HttpResponse.AddHeader
- uid: System.Web.HttpResponse.AddOnSendingHeaders*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddOnSendingHeaders
  nameWithType: HttpResponse.AddOnSendingHeaders
- uid: System.Web.HttpResponse.AppendCookie*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendCookie
  nameWithType: HttpResponse.AppendCookie
- uid: System.Web.HttpResponse.AppendHeader*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendHeader
  nameWithType: HttpResponse.AppendHeader
- uid: System.Web.HttpResponse.AppendToLog*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendToLog
  nameWithType: HttpResponse.AppendToLog
- uid: System.Web.HttpResponse.ApplyAppPathModifier*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ApplyAppPathModifier
  nameWithType: HttpResponse.ApplyAppPathModifier
- uid: System.Web.HttpResponse.BeginFlush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: BeginFlush
  nameWithType: HttpResponse.BeginFlush
- uid: System.Web.HttpResponse.BinaryWrite*
  parent: System.Web.HttpResponse
  isExternal: false
  name: BinaryWrite
  nameWithType: HttpResponse.BinaryWrite
- uid: System.Web.HttpResponse.Buffer*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Buffer
  nameWithType: HttpResponse.Buffer
- uid: System.Web.HttpResponse.BufferOutput*
  parent: System.Web.HttpResponse
  isExternal: false
  name: BufferOutput
  nameWithType: HttpResponse.BufferOutput
- uid: System.Web.HttpResponse.Cache*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cache
  nameWithType: HttpResponse.Cache
- uid: System.Web.HttpResponse.CacheControl*
  parent: System.Web.HttpResponse
  isExternal: false
  name: CacheControl
  nameWithType: HttpResponse.CacheControl
- uid: System.Web.HttpResponse.Charset*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Charset
  nameWithType: HttpResponse.Charset
- uid: System.Web.HttpResponse.Clear*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Clear
  nameWithType: HttpResponse.Clear
- uid: System.Web.HttpResponse.ClearContent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearContent
  nameWithType: HttpResponse.ClearContent
- uid: System.Web.HttpResponse.ClearHeaders*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearHeaders
  nameWithType: HttpResponse.ClearHeaders
- uid: System.Web.HttpResponse.ClientDisconnectedToken*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClientDisconnectedToken
  nameWithType: HttpResponse.ClientDisconnectedToken
- uid: System.Web.HttpResponse.Close*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Close
  nameWithType: HttpResponse.Close
- uid: System.Web.HttpResponse.ContentEncoding*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
- uid: System.Web.HttpResponse.ContentType*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpResponse.ContentType
- uid: System.Web.HttpResponse.Cookies*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpResponse.Cookies
- uid: System.Web.HttpResponse.DisableKernelCache*
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableKernelCache
  nameWithType: HttpResponse.DisableKernelCache
- uid: System.Web.HttpResponse.DisableUserCache*
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableUserCache
  nameWithType: HttpResponse.DisableUserCache
- uid: System.Web.HttpResponse.End*
  parent: System.Web.HttpResponse
  isExternal: false
  name: End
  nameWithType: HttpResponse.End
- uid: System.Web.HttpResponse.EndFlush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: EndFlush
  nameWithType: HttpResponse.EndFlush
- uid: System.Web.HttpResponse.Expires*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Expires
  nameWithType: HttpResponse.Expires
- uid: System.Web.HttpResponse.ExpiresAbsolute*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ExpiresAbsolute
  nameWithType: HttpResponse.ExpiresAbsolute
- uid: System.Web.HttpResponse.Filter*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Filter
  nameWithType: HttpResponse.Filter
- uid: System.Web.HttpResponse.Flush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Flush
  nameWithType: HttpResponse.Flush
- uid: System.Web.HttpResponse.FlushAsync*
  parent: System.Web.HttpResponse
  isExternal: false
  name: FlushAsync
  nameWithType: HttpResponse.FlushAsync
- uid: System.Web.HttpResponse.HeaderEncoding*
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeaderEncoding
  nameWithType: HttpResponse.HeaderEncoding
- uid: System.Web.HttpResponse.Headers*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Headers
  nameWithType: HttpResponse.Headers
- uid: System.Web.HttpResponse.HeadersWritten*
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeadersWritten
  nameWithType: HttpResponse.HeadersWritten
- uid: System.Web.HttpResponse.IsClientConnected*
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsClientConnected
  nameWithType: HttpResponse.IsClientConnected
- uid: System.Web.HttpResponse.IsRequestBeingRedirected*
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsRequestBeingRedirected
  nameWithType: HttpResponse.IsRequestBeingRedirected
- uid: System.Web.HttpResponse.Output*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Output
  nameWithType: HttpResponse.Output
- uid: System.Web.HttpResponse.OutputStream*
  parent: System.Web.HttpResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpResponse.OutputStream
- uid: System.Web.HttpResponse.Pics*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Pics
  nameWithType: HttpResponse.Pics
- uid: System.Web.HttpResponse.PushPromise*
  parent: System.Web.HttpResponse
  isExternal: false
  name: PushPromise
  nameWithType: HttpResponse.PushPromise
- uid: System.Web.HttpResponse.Redirect*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Redirect
  nameWithType: HttpResponse.Redirect
- uid: System.Web.HttpResponse.RedirectLocation*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpResponse.RedirectLocation
- uid: System.Web.HttpResponse.RedirectPermanent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectPermanent
  nameWithType: HttpResponse.RedirectPermanent
- uid: System.Web.HttpResponse.RedirectToRoute*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute
  nameWithType: HttpResponse.RedirectToRoute
- uid: System.Web.HttpResponse.RedirectToRoutePermanent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent
  nameWithType: HttpResponse.RedirectToRoutePermanent
- uid: System.Web.HttpResponse.RemoveOutputCacheItem*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RemoveOutputCacheItem
  nameWithType: HttpResponse.RemoveOutputCacheItem
- uid: System.Web.HttpResponse.SetCookie*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SetCookie
  nameWithType: HttpResponse.SetCookie
- uid: System.Web.HttpResponse.Status*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Status
  nameWithType: HttpResponse.Status
- uid: System.Web.HttpResponse.StatusCode*
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpResponse.StatusCode
- uid: System.Web.HttpResponse.StatusDescription*
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
- uid: System.Web.HttpResponse.SubStatusCode*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SubStatusCode
  nameWithType: HttpResponse.SubStatusCode
- uid: System.Web.HttpResponse.SupportsAsyncFlush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SupportsAsyncFlush
  nameWithType: HttpResponse.SupportsAsyncFlush
- uid: System.Web.HttpResponse.SuppressContent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressContent
  nameWithType: HttpResponse.SuppressContent
- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressDefaultCacheControlHeader
  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader
- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressFormsAuthenticationRedirect
  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect
- uid: System.Web.HttpResponse.TransmitFile*
  parent: System.Web.HttpResponse
  isExternal: false
  name: TransmitFile
  nameWithType: HttpResponse.TransmitFile
- uid: System.Web.HttpResponse.TrySkipIisCustomErrors*
  parent: System.Web.HttpResponse
  isExternal: false
  name: TrySkipIisCustomErrors
  nameWithType: HttpResponse.TrySkipIisCustomErrors
- uid: System.Web.HttpResponse.Write*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write
  nameWithType: HttpResponse.Write
- uid: System.Web.HttpResponse.WriteFile*
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile
  nameWithType: HttpResponse.WriteFile
- uid: System.Web.HttpResponse.WriteSubstitution*
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteSubstitution
  nameWithType: HttpResponse.WriteSubstitution
