### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ICommandSource
  id: ICommandSource
  children:
  - System.Windows.Input.ICommandSource.Command
  - System.Windows.Input.ICommandSource.CommandParameter
  - System.Windows.Input.ICommandSource.CommandTarget
  langs:
  - csharp
  name: ICommandSource
  nameWithType: ICommandSource
  fullName: System.Windows.Input.ICommandSource
  type: Interface
  summary: "Definiuje obiekt, który umożliwia wywołanie polecenia."
  remarks: "Źródło polecenia definiuje sposób wywoływania polecenia przez dany obiekt.  Na przykład jeśli <xref:System.Windows.Controls.Button>skojarzonego z poleceniem polecenie jest wywoływane, gdy <xref:System.Windows.Controls.Button>zostanie kliknięty.</xref:System.Windows.Controls.Button> </xref:System.Windows.Controls.Button>       Źródło polecenia zwykle sam się wyłączy Jeśli polecenia, który jest skojarzony z nie można wykonać na bieżącym elemencie docelowym polecenia.  Na przykład <xref:System.Windows.Controls.MenuItem>skojarzone z <xref:System.Windows.Input.ApplicationCommands.Paste%2A>polecenia są wyszarzane się podczas <xref:System.Windows.Input.ApplicationCommands.Paste%2A>polecenia nie można wykonać na bieżącym elemencie docelowym polecenia.</xref:System.Windows.Input.ApplicationCommands.Paste%2A> </xref:System.Windows.Input.ApplicationCommands.Paste%2A> </xref:System.Windows.Controls.MenuItem>       Zwykle będzie nasłuchiwać źródło polecenia <xref:System.Windows.Input.ICommand.CanExecuteChanged>zdarzenia w poleceniu.</xref:System.Windows.Input.ICommand.CanExecuteChanged>  Po zmianie warunków w elemencie docelowym polecenia, takich jak utraty fokus klawiatury informuje źródło polecenia.  Źródło polecenia można zbadać za pomocą polecenia <xref:System.Windows.Input.ICommand.CanExecute%2A>metody.</xref:System.Windows.Input.ICommand.CanExecute%2A>       Niektóre z klas w [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] które implementują są ICommandSource: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>i <xref:System.Windows.Documents.Hyperlink>.</xref:System.Windows.Documents.Hyperlink> </xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.Primitives.ButtonBase>       W [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] droższe systemu, <xref:System.Windows.Input.InputBinding.CommandTarget%2A>Właściwość ICommandSource ma zastosowanie tylko gdy <xref:System.Windows.Input.ICommand>jest <xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommand> </xref:System.Windows.Input.InputBinding.CommandTarget%2A>  Jeśli <xref:System.Windows.Input.InputBinding.CommandTarget%2A>jest ustawiony na ICommandSource i odpowiadające jej polecenie nie jest <xref:System.Windows.Input.RoutedCommand>, element docelowy polecenia jest ignorowany.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.InputBinding.CommandTarget%2A>"
  syntax:
    content: public interface ICommandSource
  implements: []
  platform:
  - net462
- uid: System.Windows.Input.ICommandSource.Command
  id: Command
  parent: System.Windows.Input.ICommandSource
  langs:
  - csharp
  name: Command
  nameWithType: ICommandSource.Command
  fullName: System.Windows.Input.ICommandSource.Command
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Pobiera polecenie, które będą wykonywane po wywołaniu polecenia źródła."
  syntax:
    content: public System.Windows.Input.ICommand Command { get; }
    return:
      type: System.Windows.Input.ICommand
      description: "Polecenie, które będą wykonywane po wywołaniu polecenia źródła."
  overload: System.Windows.Input.ICommandSource.Command*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ICommandSource.CommandParameter
  id: CommandParameter
  parent: System.Windows.Input.ICommandSource
  langs:
  - csharp
  name: CommandParameter
  nameWithType: ICommandSource.CommandParameter
  fullName: System.Windows.Input.ICommandSource.CommandParameter
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Reprezentuje wartość danych, które mogą być przekazywane do polecenia po wykonaniu zdefiniowany przez użytkownika."
  remarks: "Zwykle CommandParameter używany do przekazywania określonych informacji do polecenia podczas jej wykonywania.  Typ danych jest zdefiniowany przez polecenie."
  syntax:
    content: public object CommandParameter { get; }
    return:
      type: System.Object
      description: "Polecenie określone dane."
  overload: System.Windows.Input.ICommandSource.CommandParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ICommandSource.CommandTarget
  id: CommandTarget
  parent: System.Windows.Input.ICommandSource
  langs:
  - csharp
  name: CommandTarget
  nameWithType: ICommandSource.CommandTarget
  fullName: System.Windows.Input.ICommandSource.CommandTarget
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Polecenie jest wykonywana na obiekt."
  remarks: "W [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] droższe systemu, <xref:System.Windows.Input.InputBinding.CommandTarget%2A>Właściwość <xref:System.Windows.Input.ICommandSource>ma zastosowanie tylko gdy <xref:System.Windows.Input.ICommand>jest <xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommand> </xref:System.Windows.Input.ICommandSource> </xref:System.Windows.Input.InputBinding.CommandTarget%2A>  Jeśli <xref:System.Windows.Input.InputBinding.CommandTarget%2A>jest ustawiony na <xref:System.Windows.Input.ICommandSource>i odpowiadające jej polecenie nie jest <xref:System.Windows.Input.RoutedCommand>, element docelowy polecenia jest ignorowany.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommandSource> </xref:System.Windows.Input.InputBinding.CommandTarget%2A>       W przypadku użycia z <xref:System.Windows.Input.RoutedCommand>, obiektu, na którym jest element docelowy polecenia <xref:System.Windows.Input.CommandManager.Executed>i <xref:System.Windows.Input.CommandManager.CanExecute>zdarzenia są generowane.</xref:System.Windows.Input.CommandManager.CanExecute> </xref:System.Windows.Input.CommandManager.Executed> </xref:System.Windows.Input.RoutedCommand> Jeśli nie ustawiono właściwości CommandTarget, element z fokusem klawiatury będzie używany jako element docelowy."
  syntax:
    content: public System.Windows.IInputElement CommandTarget { get; }
    return:
      type: System.Windows.IInputElement
      description: "Polecenie jest wykonywana na obiekt."
  overload: System.Windows.Input.ICommandSource.CommandTarget*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.ICommandSource.Command
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: Command
  nameWithType: ICommandSource.Command
  fullName: System.Windows.Input.ICommandSource.Command
- uid: System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Windows.Input.ICommandSource.CommandParameter
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: CommandParameter
  nameWithType: ICommandSource.CommandParameter
  fullName: System.Windows.Input.ICommandSource.CommandParameter
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.ICommandSource.CommandTarget
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: CommandTarget
  nameWithType: ICommandSource.CommandTarget
  fullName: System.Windows.Input.ICommandSource.CommandTarget
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.ICommandSource.Command*
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: Command
  nameWithType: ICommandSource.Command
- uid: System.Windows.Input.ICommandSource.CommandParameter*
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: CommandParameter
  nameWithType: ICommandSource.CommandParameter
- uid: System.Windows.Input.ICommandSource.CommandTarget*
  parent: System.Windows.Input.ICommandSource
  isExternal: false
  name: CommandTarget
  nameWithType: ICommandSource.CommandTarget
