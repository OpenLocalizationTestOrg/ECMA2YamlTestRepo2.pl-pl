### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionInterop
  id: TransactionInterop
  children:
  - System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  - System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  - System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  - System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  - System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  - System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  - System.Transactions.TransactionInterop.GetWhereabouts
  - System.Transactions.TransactionInterop.PromoterTypeDtc
  langs:
  - csharp
  name: TransactionInterop
  nameWithType: TransactionInterop
  fullName: System.Transactions.TransactionInterop
  type: Class
  summary: "Umożliwia interakcję między <xref href=&quot;System.Transactions&quot;> </xref> i składników, które zostały wcześniej zapisane w interakcję z usługi MSDTC, COM + lub <xref href=&quot;System.EnterpriseServices&quot;> </xref>. Ta klasa nie może być dziedziczona."
  remarks: "Ta klasa dostarcza metody propagacji transakcji. Aby uzyskać więcej informacji na działanie tego procesu, zobacz [propagacji transakcji](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp).       Przy użyciu metody dostarczone przez tę klasę, można udziału w dwa rodzaje propagacji transakcji, Eksport (model wypychania) i nadajnika/odbiornika (model ściągania).       Propagacja eksportu/importu (model wypychania) obejmuje następujące kroki: 1.  Na komputerze zdalnym &quot;miejsc pobytu&quot; Menedżera transakcji tej maszynie uzyskać przez wywołanie metody <xref:System.Transactions.TransactionInterop.GetWhereabouts%2A>metody.</xref:System.Transactions.TransactionInterop.GetWhereabouts%2A> Następnie można buforować ten element informacji na komputerze klienckim na potrzeby przyszłego użycia.      2.  Wyślij dane zawierające lokalizacji do komputera klienckiego przy użyciu dowolnej metody preferowane 3.  Na komputerze klienckim umożliwia bajtów &quot;Eksportuj&quot; transakcji z komputerem zdalnym i Generuj transakcji &quot;plik cookie&quot;.  Jest to realizowane przez wywołanie <xref:System.Transactions.TransactionInterop.GetExportCookie%2A>i przekazując lokalizacji na komputerze zdalnym.</xref:System.Transactions.TransactionInterop.GetExportCookie%2A>      4.  Wyślij dane zawierające transakcji &quot;plik cookie&quot; z komputerem zdalnym przy użyciu dowolnej metody preferowanych 5.  Na komputerze zdalnym, aby uzyskać Sklonowanie transakcji klienta przez wywołanie metody wykonaj transakcji &quot;plik cookie&quot; <xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A>metody.</xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A>      6.  Na komputerze zdalnym należy użyć transakcji klonowania można zarejestrować Menedżera zasobów przy użyciu <xref:System.Transactions.Transaction.EnlistVolatile%2A>lub <xref:System.Transactions.Transaction.EnlistDurable%2A>metody <xref:System.Transactions.Transaction>klasy.</xref:System.Transactions.Transaction> </xref:System.Transactions.Transaction.EnlistDurable%2A> </xref:System.Transactions.Transaction.EnlistVolatile%2A>       Propagacja nadajnika/odbiornika (model ściągania) obejmuje następujące kroki, - na komputerze klienckim przy użyciu transakcji generuje odpowiedni &quot;tokenu propagacji&quot; przez wywołanie metody <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>— Wyślij dane zawierające &quot;tokenu propagacji&quot; transakcji z komputerem zdalnym za pomocą dowolnego preferowaną metodą - na komputerze zdalnym, użyj &quot;tokenu propagacji&quot; można uzyskać w klonowania klienta transakcji przez wywołanie metody modelu <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>nadajnika/odbiornika zapewnia lepszą wydajność w scenariuszach, gdzie token transakcji jest wysyłany do komputera zdalnego , ale komputer zdalny nie może korzystać z uzyskanie transakcji.</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> </xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>  Jest to spowodowane transakcji nie są propagowane do <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>jest wywoływana.</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> Inną zaletą jest to, że tokenu propagacji mogą być wysyłane do dowolnego komputera zdalnego, chociaż eksportu pliku cookie mogą być używane tylko na komputerze, który dostarczony o lokalizacji.       Jednak należy również zauważyć, że lokalizacji menedżerowie transakcji zdalnego znajdują się w wszystkie tokeny propagacji nadawania większe niż odpowiednie pliki cookie transakcji z modelu eksportu/importu.       **Uwaga** używa tego typu <xref:System.Security.Permissions.SecurityAction>Aby zapobiec jest wywoływany z kodu niezaufane; jednak tylko bezpośredniego obiektu wywołującego jest wymagany do posiadał `FullTrust` zestaw uprawnień.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public static class TransactionInterop
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  id: GetDtcTransaction(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetDtcTransaction(Transaction)
  nameWithType: TransactionInterop.GetDtcTransaction(Transaction)
  fullName: System.Transactions.TransactionInterop.GetDtcTransaction(Transaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Pobiera <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> wystąpienia, który reprezentuje <xref href=&quot;System.Transactions.Transaction&quot;> </xref>."
  syntax:
    content: public static System.Transactions.IDtcTransaction GetDtcTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref> wystąpienia można zorganizować."
    return:
      type: System.Transactions.IDtcTransaction
      description: "<xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> Wystąpienia, który reprezentuje <xref href=&quot;System.Transactions.Transaction&quot;> </xref>.  <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> Wystąpienia jest zgodny z niezarządzanego formę [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) używanych przez usługi MSDTC i z zarządzanego formę <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> używane przez <xref href=&quot;System.EnterpriseServices&quot;> </xref>."
  overload: System.Transactions.TransactionInterop.GetDtcTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  id: GetExportCookie(System.Transactions.Transaction,System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetExportCookie(Transaction,Byte[])
  nameWithType: TransactionInterop.GetExportCookie(Transaction,Byte[])
  fullName: System.Transactions.TransactionInterop.GetExportCookie(Transaction,Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Przekształca obiekt transaction w pliku cookie eksportu transakcji."
  remarks: "Tę metodę można wywołać, jeśli chcesz wyeksportować transakcję. `transaction` Jest ono przekazywane wraz jest przekazywane do pliku cookie transakcji. Następnie można wysłać pliku cookie transakcji do procesu docelowego. Jest to określane jako propagowanie transakcji między procesami lub systemów. Propagacji jest uważany za modelu wypychania, gdzie transakcja lokalnego zostanie przypisany do miejsca docelowego.  W związku z tym informacji zawartych w `whereabouts` musi opisywać docelowym Menedżera transakcji.       Aby uzyskać więcej informacji na propagacji różne modele zobacz sekcję uwag <xref:System.Transactions.TransactionInterop>klasy.</xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public static byte[] GetExportCookie (System.Transactions.Transaction transaction, byte[] whereabouts);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "<xref href=&quot;System.Transactions.Transaction&quot;> </xref> Obiektu można zorganizować."
    - id: whereabouts
      type: System.Byte[]
      description: "Adres, który opisuje lokalizacji docelowej Menedżera transakcji. Pozwala to na dwóch menedżerowie transakcji do komunikowania się ze sobą i tym samym propagację transakcji z jednego systemu do drugiego."
    return:
      type: System.Byte[]
      description: "Plik cookie eksportu transakcji reprezentującą określoną <xref href=&quot;System.Transactions.Transaction&quot;> </xref> obiektu."
  overload: System.Transactions.TransactionInterop.GetExportCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  id: GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromDtcTransaction(IDtcTransaction)
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  fullName: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Generuje <xref href=&quot;System.Transactions.Transaction&quot;> </xref> z określonej <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref>."
  remarks: "`transactionNative` Jest zgodny z niezarządzanego formę [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) używanych przez usługi MSDTC i za pomocą formularza zarządzane przez <xref:System.EnterpriseServices.ITransaction> <xref:System.EnterpriseServices>.</xref:System.EnterpriseServices> </xref:System.EnterpriseServices.ITransaction>"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromDtcTransaction (System.Transactions.IDtcTransaction transactionNative);
    parameters:
    - id: transactionNative
      type: System.Transactions.IDtcTransaction
      description: "<xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref> Obiektu można zorganizować."
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref> wystąpienia, który reprezentuje danego <xref href=&quot;System.Transactions.IDtcTransaction&quot;> </xref>."
  overload: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  id: GetTransactionFromExportCookie(System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromExportCookie(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromExportCookie(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Generuje <xref href=&quot;System.Transactions.Transaction&quot;> </xref> z określonego pliku cookie eksportu."
  remarks: "Aby uzyskać więcej informacji na propagacji różne modele zobacz sekcję uwag <xref:System.Transactions.TransactionInterop>klasy.</xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromExportCookie (byte[] cookie);
    parameters:
    - id: cookie
      type: System.Byte[]
      description: "Formularz organizowane obiektu transakcji."
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref> z określonym eksportu pliku cookie."
  overload: System.Transactions.TransactionInterop.GetTransactionFromExportCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  id: GetTransactionFromTransmitterPropagationToken(System.Byte[])
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransactionFromTransmitterPropagationToken(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Generuje <xref href=&quot;System.Transactions.Transaction&quot;> </xref> wystąpienie z tokenu propagacji nadajnika określony."
  remarks: "Ta metoda, wraz z <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>metody zapewniają funkcje propagacji &quot;ściągania&quot;, w którym transakcji &quot;pobieranych&quot; z komputera zdalnego, gdy ta metoda jest wywoływana do wycofania transakcji.</xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>       Aby uzyskać więcej informacji na propagacji różne modele zobacz sekcję uwag <xref:System.Transactions.TransactionInterop>klasy.</xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public static System.Transactions.Transaction GetTransactionFromTransmitterPropagationToken (byte[] propagationToken);
    parameters:
    - id: propagationToken
      type: System.Byte[]
      description: "Tokenu propagacji transakcji reprezentujący."
    return:
      type: System.Transactions.Transaction
      description: "A <xref href=&quot;System.Transactions.Transaction&quot;> </xref> z tokenu propagacji nadajnika określony."
  overload: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*
  exceptions:
  - type: System.Transactions.TransactionManagerCommunicationException
    commentId: T:System.Transactions.TransactionManagerCommunicationException
    description: "Deserializacja transakcji nie powiedzie się, ponieważ nie można skontaktować się z menedżerem transakcji. Może to być spowodowane ustawień zapory lub zabezpieczeń sieci."
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  id: GetTransmitterPropagationToken(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetTransmitterPropagationToken(Transaction)
  nameWithType: TransactionInterop.GetTransmitterPropagationToken(Transaction)
  fullName: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(Transaction)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Generuje token dla określonego propagacji <xref href=&quot;System.Transactions.Transaction&quot;> </xref>."
  syntax:
    content: public static byte[] GetTransmitterPropagationToken (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Aby być przekazywane do tokenu propagacji transakcji."
    return:
      type: System.Byte[]
      description: "Ta metoda, wraz z <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*>metody zapewniają funkcje propagacji odbiornik/nadajnik, w którym transakcji &quot;pobieranych&quot; z maszyny zdalnej podczas jego wywołania do wycofania transakcji.</xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*>       Aby uzyskać więcej informacji na propagacji różne modele, zobacz sekcję uwag <xref href=&quot;System.Transactions.TransactionInterop&quot;> </xref> klasy."
  overload: System.Transactions.TransactionInterop.GetTransmitterPropagationToken*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.GetWhereabouts
  id: GetWhereabouts
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: GetWhereabouts()
  nameWithType: TransactionInterop.GetWhereabouts()
  fullName: System.Transactions.TransactionInterop.GetWhereabouts()
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Pobiera lokalizacji Menedżera transakcji rozproszonych, który <xref href=&quot;System.Transactions&quot;> </xref> używa."
  remarks: "Lokalizacji zawiera adres, który określa lokalizację Menedżera transakcji. Pozwala to na dwóch menedżerowie transakcji do komunikowania się ze sobą i tym samym propagację transakcji z jednego systemu do drugiego. Informacje zwracane przez tę metodę mogą służyć do zapewnienia informacji o lokalizacji propagacji transakcji modelu wypychania z <xref:System.Transactions.TransactionInterop.GetExportCookie%2A>metody.</xref:System.Transactions.TransactionInterop.GetExportCookie%2A>       Aby uzyskać więcej informacji na propagacji różne modele zobacz sekcję uwag <xref:System.Transactions.TransactionInterop>klasy.</xref:System.Transactions.TransactionInterop>"
  syntax:
    content: public static byte[] GetWhereabouts ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Lokalizacji Menedżera transakcji rozproszonych który <xref href=&quot;System.Transactions&quot;> </xref> używa."
  overload: System.Transactions.TransactionInterop.GetWhereabouts*
  exceptions: []
  platform:
  - net462
- uid: System.Transactions.TransactionInterop.PromoterTypeDtc
  id: PromoterTypeDtc
  parent: System.Transactions.TransactionInterop
  langs:
  - csharp
  name: PromoterTypeDtc
  nameWithType: TransactionInterop.PromoterTypeDtc
  fullName: System.Transactions.TransactionInterop.PromoterTypeDtc
  type: Field
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: "Typ procesora transakcji rozproszonej."
  remarks: "Ta wartość jest używana dla `Transaction.PromoterType` właściwości, gdy transakcja jest lub zostanie podwyższony do usługi MSDTC i `Transaction.GetPromotedToken` metoda zwróci tokenu propagacji transakcji usługi MSDTC dla `byte[]` wynik."
  syntax:
    content: public static readonly Guid PromoterTypeDtc;
    return:
      type: System.Guid
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Transactions.TransactionManagerCommunicationException
  parent: System.Transactions
  isExternal: false
  name: TransactionManagerCommunicationException
  nameWithType: TransactionManagerCommunicationException
  fullName: System.Transactions.TransactionManagerCommunicationException
- uid: System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetDtcTransaction(Transaction)
  nameWithType: TransactionInterop.GetDtcTransaction(Transaction)
  fullName: System.Transactions.TransactionInterop.GetDtcTransaction(Transaction)
- uid: System.Transactions.IDtcTransaction
  parent: System.Transactions
  isExternal: false
  name: IDtcTransaction
  nameWithType: IDtcTransaction
  fullName: System.Transactions.IDtcTransaction
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetExportCookie(Transaction,Byte[])
  nameWithType: TransactionInterop.GetExportCookie(Transaction,Byte[])
  fullName: System.Transactions.TransactionInterop.GetExportCookie(Transaction,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromDtcTransaction(IDtcTransaction)
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
  fullName: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(IDtcTransaction)
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromExportCookie(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromExportCookie(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromExportCookie(Byte[])
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromTransmitterPropagationToken(Byte[])
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
  fullName: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(Byte[])
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransmitterPropagationToken(Transaction)
  nameWithType: TransactionInterop.GetTransmitterPropagationToken(Transaction)
  fullName: System.Transactions.TransactionInterop.GetTransmitterPropagationToken(Transaction)
- uid: System.Transactions.TransactionInterop.GetWhereabouts
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetWhereabouts()
  nameWithType: TransactionInterop.GetWhereabouts()
  fullName: System.Transactions.TransactionInterop.GetWhereabouts()
- uid: System.Transactions.TransactionInterop.PromoterTypeDtc
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: PromoterTypeDtc
  nameWithType: TransactionInterop.PromoterTypeDtc
  fullName: System.Transactions.TransactionInterop.PromoterTypeDtc
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.TransactionInterop.GetDtcTransaction*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetDtcTransaction
  nameWithType: TransactionInterop.GetDtcTransaction
- uid: System.Transactions.TransactionInterop.GetExportCookie*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetExportCookie
  nameWithType: TransactionInterop.GetExportCookie
- uid: System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromDtcTransaction
  nameWithType: TransactionInterop.GetTransactionFromDtcTransaction
- uid: System.Transactions.TransactionInterop.GetTransactionFromExportCookie*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromExportCookie
  nameWithType: TransactionInterop.GetTransactionFromExportCookie
- uid: System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransactionFromTransmitterPropagationToken
  nameWithType: TransactionInterop.GetTransactionFromTransmitterPropagationToken
- uid: System.Transactions.TransactionInterop.GetTransmitterPropagationToken*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetTransmitterPropagationToken
  nameWithType: TransactionInterop.GetTransmitterPropagationToken
- uid: System.Transactions.TransactionInterop.GetWhereabouts*
  parent: System.Transactions.TransactionInterop
  isExternal: false
  name: GetWhereabouts
  nameWithType: TransactionInterop.GetWhereabouts
