### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement
  id: CompositeDuplexBindingElement
  children:
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: CompositeDuplexBindingElement
  nameWithType: CompositeDuplexBindingElement
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement
  type: Class
  summary: "Reprezentuje element powiązania, który jest używany, gdy klient musi ujawniać punkt końcowy usługi by wysłać wiadomości do klienta."
  remarks: "Jest to zazwyczaj używane z transportu, takich jak HTTP, które nie zezwalają na komunikacji dupleksowej natywnie. TCP, natomiast zezwalania na komunikację z dupleksu natywnie i nie wymagają użycia tego elementu powiązania do wysyłania wiadomości z powrotem do klienta usługi.       Klient musi ujawniać adres, w którym usługa może nawiązać kontakt z go do nawiązania połączenia z usługą do klienta. Ten adres klienta jest zapewniana przez <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>Właściwości.</xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> Należy pamiętać, że [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] generuje automatycznie <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>Jeśli jeden nie jest jawnie ustawiona przez użytkownika.</xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>"
  syntax:
    content: 'public sealed class CompositeDuplexBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension'
  inheritance:
  - System.ServiceModel.Channels.BindingElement
  implements:
  - System.ServiceModel.Description.IPolicyExportExtension
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: CompositeDuplexBindingElement()
  nameWithType: CompositeDuplexBindingElement.CompositeDuplexBindingElement()
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CompositeDuplexBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ServiceModel.Channels.CompositeDuplexBindingElement&quot;> </xref> klasy."
  syntax:
    content: public CompositeDuplexBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: BuildChannelFactory(BindingContext)
  nameWithType: CompositeDuplexBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Do dodania."
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "Do dodania."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: BuildChannelListener(BindingContext)
  nameWithType: CompositeDuplexBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Do dodania."
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: "Do dodania."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: CompositeDuplexBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Do dodania."
    return:
      type: System.Boolean
      description: "Do dodania."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: CanBuildChannelListener(BindingContext)
  nameWithType: CompositeDuplexBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Do dodania."
    return:
      type: System.Boolean
      description: "Do dodania."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress
  id: ClientBaseAddress
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: ClientBaseAddress
  nameWithType: CompositeDuplexBindingElement.ClientBaseAddress
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Pobiera lub ustawia adres podstawowy klienta."
  remarks: "Ta właściwość zapewnia adres, pod którym usługa może nawiązać kontakt z klienta. A `null` wartość powoduje, że system ma automatycznie generować adres podstawowy klienta.       Jest to adres podstawowy nie jako adres bezwzględny. Identyfikator GUID jest dołączany do podstawowego adresu podczas generowania punktów końcowych klienta z tego powiązania."
  syntax:
    content: public Uri ClientBaseAddress { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>zawierający adres podstawowy klienta.</xref:System.Uri>"
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: CompositeDuplexBindingElement.Clone()
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Zwraca bezpośredni klonowania bieżącego elementu powiązania."
  remarks: "Zwracanie klon umożliwia środowiska uruchomieniowego do obsługi sytuacji, w której wiele powiązań niestandardowych udostępnianie element niestandardowego powiązania. Jeśli nie są zwracane w klonowania, zachowania w czasie wykonywania jest niezdefiniowana.       Głębokie klonowania obiektu tworzy kopię obiektu i kopie wszystkich bezpośrednio lub pośrednio odwołuje się ten obiekt. (Jest to również nazywane Kopiowanie całego obiektu wykresu.) Pobieżnego klonu obiektu, natomiast stanowi kopię tylko obiekt. Jeśli obiekt zawiera odwołania do innych obiektów, kopię pobieżną nie tworzy kopie określonego obiektów; Zamiast tego są kopiowane tylko odwołania do oryginalnych obiektów. W szczególności bezpośrednich kopię <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>kopiowane przez <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>wartość.</xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> </xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "A <xref href=&quot;System.ServiceModel.Channels.CompositeDuplexBindingElement&quot;> </xref> to głębokie klonowania bieżącego elementu powiązania."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: GetProperty(BindingContext)
  nameWithType: CompositeDuplexBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Do dodania."
    return:
      type: T
      description: "Do dodania."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  isEii: true
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  langs:
  - csharp
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Eksportowanie niestandardowych asercji zasad dotyczących powiązań reprezentujących obecności dupleks złożone powiązanie."
  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Description.IPolicyExportExtension>.</xref:System.ServiceModel.Description.IPolicyExportExtension>'
  syntax:
    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.MetadataExporter
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExporter&quot;> </xref> Można zmodyfikować eksportowanie procesu."
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "<xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref> Można wstawić Twojej potwierdzenia zasad niestandardowych."
  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: System.ServiceModel.Channels.BindingElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: CompositeDuplexBindingElement()
  nameWithType: CompositeDuplexBindingElement.CompositeDuplexBindingElement()
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CompositeDuplexBindingElement()
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: BuildChannelFactory(BindingContext)
  nameWithType: CompositeDuplexBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: BuildChannelListener(BindingContext)
  nameWithType: CompositeDuplexBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: CompositeDuplexBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory(BindingContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: CanBuildChannelListener(BindingContext)
  nameWithType: CompositeDuplexBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: ClientBaseAddress
  nameWithType: CompositeDuplexBindingElement.ClientBaseAddress
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: Clone()
  nameWithType: CompositeDuplexBindingElement.Clone()
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone()
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: GetProperty(BindingContext)
  nameWithType: CompositeDuplexBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: System.ServiceModel.Description.MetadataExporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: CompositeDuplexBindingElement
  nameWithType: CompositeDuplexBindingElement.CompositeDuplexBindingElement
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: CompositeDuplexBindingElement.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: CompositeDuplexBindingElement.BuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>
  nameWithType: CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>
  nameWithType: CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: ClientBaseAddress
  nameWithType: CompositeDuplexBindingElement.ClientBaseAddress
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: Clone
  nameWithType: CompositeDuplexBindingElement.Clone
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty<T>*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: CompositeDuplexBindingElement.GetProperty<T>
- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
  nameWithType: CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
