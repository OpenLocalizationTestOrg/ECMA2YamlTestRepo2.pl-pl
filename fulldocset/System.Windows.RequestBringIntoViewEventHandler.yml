### YamlMime:ManagedReference
items:
- uid: System.Windows.RequestBringIntoViewEventHandler
  id: RequestBringIntoViewEventHandler
  langs:
  - csharp
  name: RequestBringIntoViewEventHandler
  nameWithType: RequestBringIntoViewEventHandler
  fullName: System.Windows.RequestBringIntoViewEventHandler
  type: Delegate
  summary: "Reprezentuje metodę, która będzie obsługiwać <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> kierowanego zdarzenia."
  remarks: "Obsługa tego zdarzenia zwykle jest wykonywane tylko w elementach, które obsługują przewijanego region lub w przeciwnym razie celowo ustaw ich renderowania rozmiar mniejszy niż łączny rozmiar żądaną zawartość elementu podrzędnego, a jest wykonywane tylko przez celowo obsługi zdarzeń po jego ma skierowany w górę w drzewie elementu osiągnięto limit pierwszy element nadrzędny, który zapewnia obsługę regionie przewijania. Istniejące implementację, która obsługuje regiony przewijania w taki sposób, który jest zwykle pożądane w przypadku kontrolek użytkownika jest <xref:System.Windows.Controls.ScrollViewer>.</xref:System.Windows.Controls.ScrollViewer> Jeśli pochodzi od <xref:System.Windows.Controls.ScrollViewer>, można zarejestrować obsługi dla klasy <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>i uzupełnia klasie podstawowej obsługi zdarzenia.</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer> Należy również rozważyć za pomocą lub obsługi klasa zdefiniowana klasa <xref:System.Windows.Controls.ScrollViewer.ScrollChanged>zdarzeń zamiast <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>.</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer.ScrollChanged> Alternatywnie Jeśli Utwórz całkowicie niestandardowej klasy, który nie pochodzi od <xref:System.Windows.Controls.ScrollViewer>, można dodać klasy obsługi przez wywołanie metody <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName>w sieci podczas tworzenia wystąpienia klasy.</xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer>  Szczegółowe informacje dotyczące obsługi klasa, zobacz [oznaczenie kierowane zdarzenia jako Handled i obsługa klasy](~/add/includes/ajax-current-ext-md.md).       Elementy zawartości mogą powodować zdarzenia do wywołania przez hosty z ich zawartości (za pośrednictwem wywołania <xref:System.Windows.FrameworkContentElement.BringIntoView%2A>i wywoływanie <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>z hosta zawartości).</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.BringIntoView%2A> Podobnie możesz poprosić elementy drzewa logicznego wprowadzanych do widoku przy użyciu metody pomocnika <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.</xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>       <xref:System.Windows.Controls.ListBox>Implementuje powiązane, ale inną metodę <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> </xref:System.Windows.Controls.ListBox>"
  syntax:
    content: public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
