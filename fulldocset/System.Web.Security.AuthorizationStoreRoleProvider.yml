### YamlMime:ManagedReference
items:
- uid: System.Web.Security.AuthorizationStoreRoleProvider
  id: AuthorizationStoreRoleProvider
  children:
  - System.Web.Security.AuthorizationStoreRoleProvider.#ctor
  - System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
  - System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
  - System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles
  - System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
  langs:
  - csharp
  name: AuthorizationStoreRoleProvider
  nameWithType: AuthorizationStoreRoleProvider
  fullName: System.Web.Security.AuthorizationStoreRoleProvider
  type: Class
  summary: "Zarządza przechowywanie informacji członkostwo roli dla aplikacji ASP.NET w magazynie zasad Menedżera autoryzacji, albo w pliku XML, w usłudze Active Directory lub na serwerze tryb aplikacji usługi Active Directory."
  remarks: "This class is used by the <xref:System.Web.Security.Roles> and <xref:System.Web.Security.RolePrincipal> classes to provide role-management services for an ASP.NET application using an authorization-manager store. You can use role management to specify different levels of authorization for your application. The authorization manager can be accessed using the Microsoft Management Console.  \n  \n The AuthorizationStoreRoleProvider object works with both Windows authentication and forms authentication modes.  \n  \n You can configure the AuthorizationStoreRoleProvider object to use either a local XML file or an Active Directory or Active Directory Application Mode (ADAM) server. When using a local file, the connection string should look like the following example.  \n  \n```  \nmsxml://<path to xml file>  \n```  \n  \n If the local file is stored in the directory tree of an ASP.NET Web application, you can use the tilde (\"~\") character to indicate the root directory. For example, to indicate that the local file is stored in the Web application's data directory, you would use a connection string similar to the following example.  \n  \n `msxml://~\\App_Data\\datafilename.xml`  \n  \n> [!IMPORTANT]\n>  Storing an XML data file in the Web application directory is a potential security threat. By default, IIS will serve XML data files to the Web. To improve security when using a local data file in an ASP.NET application, you should store the data file in the `App_Data` directory. Files stored in the `App_Data` directory will not be served to the Web.  \n  \n If you are using an Active Directory or ADAM server for the policy store, your connection string should be similar to the following example.  \n  \n `msldap://myserver/CN=MyAzManStore,OU=MyOU,DC=MyDomain,DC=MyDC,DC=Com`  \n  \n The exceptions listed in the documentation for AuthorizationStoreRoleProvider object methods are the exceptions that are raised by the AuthorizationStoreRoleProvider object. Since the provider relies on the underlying Authentication Manager runtime, a <xref:System.Runtime.InteropServices.COMException> exception may be thrown whenever the AuthorizationStoreRoleProvider object forwards a method call to the Authentication Manager runtime.  \n  \n> [!IMPORTANT]\n>  The AuthorizationStoreRoleProvider object has the following requirements for running in partial-trust environments:  \n>   \n>  When using a file-based policy store in an ASP.NET application, the file I/O permissions granted by the current trust level determine whether read and write actions are allowed by the provider. The ASP.NET application must have read permission on the file to read data from the policy store, and must have write permission to save new information or update existing information in the policy store. The default Medium-trust policy file gives an ASP.NET application read/write permissions in its application directory. The default Low-trust policy file only gives an ASP.NET application read permission in its application directory. In addition, the process identity under which the ASP.NET application runs must have file-system permissions to read and/or write the policy file.  \n>   \n>  When using an Active Directory or ADAM server, the ASP.NET application needs unmanaged-code permission because the internal AuthorizationStoreRoleProvider object code uses COM interop.  \n>   \n>  When using the AuthorizationStoreRoleProvider object outside of ASP.NET, the calling code needs unmanaged-code permission."
  example:
  - "The following code example shows a Web.config file set to use the AuthorizationStoreRoleProvider for role management.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"AuthorizationServices\" connectionString=\"msxml://~\\App_Data\\SampleStore.xml\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n  \n    <authentication mode=\"Windows\" />  \n    <identity impersonate=\"true\" />  \n  \n    <roleManager defaultProvider=\"AuthorizationStoreRoleProvider\"   \n      enabled=\"true\"  \n      cacheRolesInCookie=\"true\"  \n      cookieName=\".ASPROLES\"  \n      cookieTimeout=\"30\"  \n      cookiePath=\"/\"  \n      cookieRequireSSL=\"false\"  \n      cookieSlidingExpiration=\"true\"  \n      cookieProtection=\"All\" >  \n      <providers>  \n        <clear />  \n          <add  \n            name=\"AuthorizationStoreRoleProvider\"  \n            type=\"System.Web.Security.AuthorizationStoreRoleProvider\"  \n            connectionStringName=\"AuthorizationServices\"  \n            applicationName=\"SampleApplication\"   \n            cacheRefreshInterval=\"60\"  \n            scopeName=\"\" />  \n      </providers>  \n    </roleManager>  \n  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class AuthorizationStoreRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: AuthorizationStoreRoleProvider()
  nameWithType: AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider()
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> klasy."
  remarks: "Konstruktor Element AuthorizationStoreRoleProvider jest wywoływana przez platformę ASP.NET w celu utworzenia wystąpienia <xref:System.Web.Security.AuthorizationStoreRoleProvider>klasy określony w konfiguracji aplikacji.</xref:System.Web.Security.AuthorizationStoreRoleProvider> Ten konstruktor nie jest przeznaczony do użycia w kodzie."
  syntax:
    content: public AuthorizationStoreRoleProvider ();
    parameters: []
  overload: System.Web.Security.AuthorizationStoreRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: AuthorizationStoreRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Dodaje określone nazwy użytkownika do każdej z określonych ról."
  remarks: "Metoda AddUsersToRoles jest wywoływana przez <xref:System.Web.Security.Roles>klasę, aby skojarzyć użytkowników z jednego lub więcej z co najmniej jedną rolę w magazynie danych programu Menedżer autoryzacji określona w pliku konfiguracyjnym aplikacji platformy ASP.NET (Web.config).</xref:System.Web.Security.Roles> Ta metoda jest wywoływana przez <xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=fullName>, <xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=fullName>, <xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=fullName>, a także <xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=fullName>metody <xref:System.Web.Security.Roles>klasy.</xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=fullName> </xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=fullName> </xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=fullName> </xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=fullName>"
  example:
  - "The following code example adds one or more users to a role or removes a user from a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/51528ad0-2535-416a-b69f-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/51528ad0-2535-416a-b69f-_1.aspx)]"
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Tablica ciągów nazw użytkowników, które mają zostać dodane do określonych ról."
    - id: roleNames
      type: System.String[]
      description: "Tablica ciągów nazw ról do określone nazwy użytkownika do dodania."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jednym z określone nazwy użytkownika jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - nazwy określonej roli jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       -or-       <code>usernames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Jeden z określone nazwy użytkownika to ciąg pusty lub zawiera przecinka (,).       - lub - nazwy określonej roli jest ciągiem pustym lub zawiera przecinka (,).       - lub - <code> usernames </code> zawiera zduplikowany element.       - lub - <code> roleNames </code> zawiera zduplikowany element."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Skonfigurowanego <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - skonfigurowanego <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - środowiska uruchomieniowego programu Menedżer autoryzacji nie jest zainstalowany na serwerze."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> Atrybut odwołuje się do ciągu połączenia w pliku, który nie istnieje."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona w bieżącym poziomie zaufania."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: AuthorizationStoreRoleProvider.ApplicationName
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera lub ustawia nazwę aplikacji magazynu autoryzacji, dla którego mają być przechowywane i pobierane informacje."
  remarks: "Właściwość ApplicationName jest używany przez <xref:System.Web.Security.AuthorizationStoreRoleProvider>do skojarzenia z aplikacjami innego menedżera autoryzacji, dzięki czemu wiele aplikacji programu ASP.NET korzystać z tej samej zasad Menedżera autoryzacji użytkowników i role sklepu informacje o rolach bez powodowania powoduje konflikt między nazwami zduplikowane roli.</xref:System.Web.Security.AuthorizationStoreRoleProvider> Alternatywnie wiele aplikacji programu ASP.NET można użyć tego samego magazynu zasad przez określenie tej samej wartości we właściwości ApplicationName. Właściwość ApplicationName można ustawić programowo lub jego można ustawić deklaratywnie w pliku Web.config aplikacji przy użyciu `applicationName` atrybutu.       Jeśli nie określono wartości dla `applicationName` atrybutu w pliku Web.config, a następnie <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>wartości właściwości dla bieżącej <xref:System.Web.HttpContext.Request%2A?displayProperty=fullName>obiekt jest używany.</xref:System.Web.HttpContext.Request%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>      > [!NOTE] > Nazwy aplikacji Menedżera autoryzacji nie mogą zawierać znaku &quot;/&quot;, który znajduje się w <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>Właściwości.</xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName> W związku z tym wartość domyślna właściwość ApplicationName nie można użyć jako nazwy aplikacji Menedżera autoryzacji, a w pliku Web.config aplikacji, należy zawsze określić `applicationName` atrybutu w `provider` element, aby skonfigurować Twoje <xref:System.Web.Security.AuthorizationStoreRoleProvider>wystąpienia.</xref:System.Web.Security.AuthorizationStoreRoleProvider>      > [!CAUTION] > Ponieważ domyślnego pojedynczego wystąpienia dostawcy roli jest używana dla wszystkich żądań obsłużonych przez <xref:System.Web.HttpApplication>obiektu, może mieć wiele żądań wykonywanych równocześnie i ustawiania wartości właściwości ApplicationName.</xref:System.Web.HttpApplication> Właściwość ApplicationName nie jest wielowątkowość dla wielu operacji zapisu, a zmiana wartości właściwości ApplicationName może spowodować nieoczekiwane zachowanie w przypadku wielu użytkowników aplikacji. Zaleca się unikać pisania kodu, który umożliwia użytkownikom można ustawić właściwości ApplicationName, chyba że użytkownik musi. Przykładem aplikacji, których ustawienia właściwości ApplicationName mogą być wymagane jest administracyjne aplikacji, która zarządza danymi roli dla wielu zastosowań. Takiej aplikacji powinna być aplikacją pojedynczego użytkownika, a nie aplikacji sieci Web."
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.AuthorizationStoreRoleProvider> instance and sets the ApplicationName property to `MyApplication`.  \n  \n```  \n<roleManager defaultProvider=\"AuthorizationStoreProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/\"  \n  cookieRequireSSL=\"false\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"All\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.AuthorizationStoreRoleProvider\"  \n      connectionStringName=\"AuthorizationStoreServices\"   \n      scopeName=\"MyScope\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Nazwa autoryzacja przechowywania aplikacji, dla którego mają być przechowywane i pobierane informacje. Wartość domyślna to &lt;xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName&gt; wartości właściwości dla bieżącej &lt;xref:System.Web.HttpContext.Request%2A?displayProperty=fullName&gt;."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Próbowano ustawić właściwość ApplicationName ciąg, który jest dłuższa niż 256 znaków."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
  id: CacheRefreshInterval
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: CacheRefreshInterval
  nameWithType: AuthorizationStoreRoleProvider.CacheRefreshInterval
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera liczbę minut między operacjami odświeżania pamięci podręcznej danych magazynu zasad."
  syntax:
    content: public int CacheRefreshInterval { get; }
    return:
      type: System.Int32
      description: "Liczba minut między operacjami odświeżania danych magazynu pamięci podręcznej zasad. Wartość domyślna to 60."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: AuthorizationStoreRoleProvider.CreateRole(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Dodaje nową rolę do magazynu zasad Menedżera autoryzacji ról."
  remarks: "Metoda CreateRole jest wywoływana przez <xref:System.Web.Security.Roles>klasę, aby utworzyć rolę w magazynie danych programu Menedżer autoryzacji określona w pliku konfiguracyjnym aplikacji platformy ASP.NET (Web.config).</xref:System.Web.Security.Roles>       Nazwy roli nie jest uwzględniana."
  example:
  - "The following code example creates a new role in the authorization-manager policy store. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.au_0_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.au_0_1.aspx)]"
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Nazwa roli do utworzenia."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>jest pustym ciągiem.       - lub - <code>roleName</code> zawiera przecinek."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Skonfigurowanego <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - skonfigurowanego <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - środowiska uruchomieniowego programu Menedżer autoryzacji nie jest zainstalowany na serwerze."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> Atrybut odwołuje się do ciągu połączenia w pliku, który nie istnieje."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona w bieżącym poziomie zaufania."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: AuthorizationStoreRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Usuwa rolę z magazynu zasad Menedżera autoryzacji."
  remarks: "Metoda DeleteRole jest wywoływana przez <xref:System.Web.Security.Roles>klasę, aby usunąć rolę z magazynu zasad Menedżera autoryzacji, które są określone w pliku konfiguracyjnym aplikacji platformy ASP.NET (Web.config).</xref:System.Web.Security.Roles> Po usunięciu roli listę użytkowników skojarzonych z tej roli są także usuwane z magazynu zasad. Nie wpływa na informacje o użytkowniku w bazie danych.       Jeśli `throwOnPopulatedRole` jest `true`, następnie zostanie wygenerowany wyjątek i roli nie zostaną usunięte, jeśli rola zidentyfikowana na podstawie `roleName` parametr ma co najmniej jednego członka. Jeśli `throwOnPopulatedRole` jest `false`, roli zostanie usunięty, czy nie jest on pusty."
  example:
  - "The following example deletes a role from the authorization-manager policy store. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/csharp/f8238a62-ae02-4a3c-85f0-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/visualbasic/f8238a62-ae02-4a3c-85f0-_1.aspx)]"
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "Nazwa roli do usunięcia."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, zgłasza wyjątek, jeśli `roleName` ma co najmniej jednego członka."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli rola została usunięta; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>jest pustym ciągiem.       - lub - <code>roleName</code> zawiera przecinek."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>roleName</code>zawiera co najmniej jednego członka i <code>throwOnPopulatedRole</code> jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.       - lub - skonfigurowanego <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - skonfigurowanego <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - środowiska uruchomieniowego programu Menedżer autoryzacji nie jest zainstalowany na serwerze."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> Atrybut odwołuje się do ciągu połączenia w pliku, który nie istnieje."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona w bieżącym poziomie zaufania."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: AuthorizationStoreRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ta metoda nie jest obsługiwana przez dostawcę roli magazynu autoryzacji."
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "Rola do przeszukania."
    - id: usernameToMatch
      type: System.String
      description: "Nazwa użytkownika do wyszukania."
    return:
      type: System.String[]
      description: "Tablica ciągów zawierająca nazwy wszystkich użytkowników, których nazwa użytkownika jest zgodna <code> usernameToMatch </code> i którzy są członkami określonej roli."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Nieobsługiwana metoda została wywołana."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: AuthorizationStoreRoleProvider.GetAllRoles()
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera listę wszystkich ról dla aplikacji."
  remarks: "Metoda GetAllRoles jest wywoływana przez <xref:System.Web.Security.Roles>klasy można pobrać listy wszystkich ról w magazynie zasad Menedżera autoryzacji, które są określone w pliku konfiguracyjnym aplikacji platformy ASP.NET (Web.config).</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetAllRoles%2A> method to get the list of roles for an application and bind the results to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.au_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.au_2_1.aspx)]"
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "Tablica ciągów zawierająca nazwy wszystkich ról, które są przechowywane w magazynie zasad Menedżera autoryzacji dla określonej aplikacji."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Skonfigurowanego <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - skonfigurowanego <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - środowiska uruchomieniowego programu Menedżer autoryzacji nie jest zainstalowany na serwerze."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> Atrybut odwołuje się do ciągu połączenia w pliku, który nie istnieje."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona w bieżącym poziomie zaufania."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: AuthorizationStoreRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera listę ról, które użytkownik."
  remarks: "Metoda GetRolesForUser jest wywoływana przez <xref:System.Web.Security.Roles>klasę, aby pobrać listę ról określonego użytkownika z magazynu zasad Menedżera autoryzacji, które są określone w pliku konfiguracyjnym aplikacji platformy ASP.NET (Web.config).</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetRolesForUser%2A> method to retrieve a list of roles for a specified user and binds them to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/csharp/540a45cf-e182-4a47-b288-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/visualbasic/540a45cf-e182-4a47-b288-_1.aspx)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Użytkownik, aby powrócić do listy ról."
    return:
      type: System.String[]
      description: "Tablica ciągów zawierająca nazwy wszystkich ról określonego użytkownika."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>zawiera przecinek."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Skonfigurowanego <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - skonfigurowanego <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - środowiska uruchomieniowego programu Menedżer autoryzacji nie jest zainstalowany na serwerze."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> Atrybut odwołuje się do ciągu połączenia w pliku, który nie istnieje."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona w bieżącym poziomie zaufania."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: AuthorizationStoreRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera listę użytkowników w określonej roli."
  remarks: "Metoda GetUsersInRole jest wywoływana przez <xref:System.Web.Security.Roles>klasy można pobrać listy użytkowników skojarzonych z określoną rolę w magazynie zasad Menedżera autoryzacji, które są określone w pliku konfiguracyjnym aplikacji platformy ASP.NET (Web.config).</xref:System.Web.Security.Roles>       Metoda GetUsersInRole zwraca tylko nazwy użytkownika, które znajdują się bezpośrednio w roli Menedżera autoryzacji, określony przez `roleName` parametru. Podstawowy — Menedżer autoryzacji API wywoływane przez GetUsersInRole metoda nie obsługuje rozszerzania grupy, tak użytkownicy, zawarte w grupach zagnieżdżonych NT, zagnieżdżonych grup Menedżera autoryzacji i grupy zapytań LDAP nie zostaną zwrócone."
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetUsersInRole%2A> method to get a list of the users in a particular role and bind the results to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/ebc3a7d6-e0bc-48f6-bf0f-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/ebc3a7d6-e0bc-48f6-bf0f-_1.aspx)]"
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Nazwa roli, aby uzyskać listę użytkowników."
    return:
      type: System.String[]
      description: "Tablica ciągów zawierająca nazwy wszystkich użytkowników, którzy są członkami określonej roli."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>jest pustym ciągiem.       - lub - <code>roleName</code> zawiera przecinek."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Skonfigurowanego <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - skonfigurowanego <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - środowiska uruchomieniowego programu Menedżer autoryzacji nie jest zainstalowany na serwerze."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> Atrybut odwołuje się do ciągu połączenia w pliku, który nie istnieje."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona w bieżącym poziomie zaufania."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: AuthorizationStoreRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicjuje dostawcę roli Menedżera autoryzacji z wartościami właściwości określony w pliku konfiguracji aplikacji ASP.NET. Ta metoda nie jest przeznaczona do użycia bezpośrednio w kodzie."
  remarks: "Metoda inicjowania inicjuje <xref:System.Web.Security.AuthorizationStoreRoleProvider>z właściwością wartości określone w pliku konfiguracyjnym aplikacji platformy ASP.NET (Web.config), a nie jest przeznaczona do użycia bezpośrednio w kodzie.</xref:System.Web.Security.AuthorizationStoreRoleProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> wystąpienie do zainicjowania."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> zawiera nazwy i wartości opcji konfiguracji dla dostawcy ról."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> Atrybut jest pusty lub nie istnieje w [connectionStrings — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de) sekcji konfiguracji.       - lub - skonfigurowanego <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> jest dłuższa niż 256 znaków.       - lub - konfiguracji dla tego <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> wystąpienie zawiera nierozpoznany atrybut."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Aplikacja ASP.NET nie jest uruchomiona na <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> zaufania lub nowszej."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: AuthorizationStoreRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy określony użytkownik ma określoną rolę."
  remarks: "Metoda IsUserInRole jest wywoływana przez <xref:System.Web.Security.Roles>klasy i <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metody <xref:System.Web.UI.Page.User%2A?displayProperty=fullName>Właściwości w celu określenia, czy użytkownik jest skojarzony z rolą w magazynie danych programu Menedżer autoryzacji określona w pliku konfiguracyjnym aplikacji platformy ASP.NET (Web.config).</xref:System.Web.UI.Page.User%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example programmatically checks to see whether the logged-on user is in the Administrators role before allowing the user to view user roles. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/csharp/90a9fe0c-acb8-442c-9ca1-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/visualbasic/90a9fe0c-acb8-442c-9ca1-_1.aspx)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "Nazwa użytkownika do wyszukania."
    - id: roleName
      type: System.String
      description: "Rola do przeszukania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określona nazwa użytkownika znajduje się w określonej roli; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or       <code>roleName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>jest pustym ciągiem.       - lub - <code>roleName</code> zawiera przecinek.       - lub - <code>username</code> zawiera przecinek."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Skonfigurowanego <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - skonfigurowanego <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - środowiska uruchomieniowego programu Menedżer autoryzacji nie jest zainstalowany na serwerze."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> Atrybut odwołuje się do ciągu połączenia w pliku, który nie istnieje."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona w bieżącym poziomie zaufania."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: AuthorizationStoreRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Usuwa określone nazwy użytkownika z określonych ról."
  remarks: "Metoda RemoveUsersFromRoles jest wywoływana przez <xref:System.Web.Security.Roles>klasę, aby usunąć jednego lub więcej użytkowników z co najmniej jedną rolę w magazynie zasad Menedżera autoryzacji, które są określone w pliku konfiguracyjnym aplikacji platformy ASP.NET (Web.config).</xref:System.Web.Security.Roles> Ta metoda jest wywoływana przez <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, a także <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A>metody <xref:System.Web.Security.Roles>klasy.</xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> </xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> </xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> </xref:System.Web.Security.Roles.RemoveUserFromRole%2A>"
  example:
  - "The following code example adds one or more users to a role or removes a user from a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/a89492ce-ed56-4c62-adf2-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/a89492ce-ed56-4c62-adf2-_1.aspx)]"
  syntax:
    content: public override void RemoveUsersFromRoles (string[] userNames, string[] roleNames);
    parameters:
    - id: userNames
      type: System.String[]
      description: "Tablica ciągów nazw użytkowników do usunięcia z określonych ról."
    - id: roleNames
      type: System.String[]
      description: "Tablica ciągów nazw ról, aby usunąć określone nazwy użytkownika."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jednym z określone nazwy użytkownika jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - lub - nazwy określonej roli jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       -or-       <code>userNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Jeden z określone nazwy użytkownika to ciąg pusty lub zawiera przecinek.       - lub - nazwy określonej roli to ciąg pusty lub zawiera przecinek.       - lub - <code> userNames </code> zawiera zduplikowany element.       - lub - <code> roleNames </code> zawiera zduplikowany element."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Skonfigurowanego <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - skonfigurowanego <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - środowiska uruchomieniowego programu Menedżer autoryzacji nie jest zainstalowany na serwerze."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> Atrybut odwołuje się do ciągu połączenia w pliku, który nie istnieje."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona w bieżącym poziomie zaufania."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: AuthorizationStoreRoleProvider.RoleExists(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera wartość wskazującą, czy nazwa określona rola już istnieje w magazynie zasad Menedżera autoryzacji."
  remarks: "Metoda RoleExists jest wywoływana przez <xref:System.Web.Security.Roles>klasę, aby określić, czy nazwa roli istnieje w magazynie danych programu Menedżer autoryzacji, które są określone w pliku konfiguracyjnym aplikacji platformy ASP.NET (Web.config).</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.RoleExists%2A> method to determine whether a role name already exists before creating the role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.au_1_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.au_1_1.aspx)]"
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Nazwa roli do wyszukania w magazynie zasad Menedżera autoryzacji."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nazwa roli już istnieje w magazynie zasad Menedżera autoryzacji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>jest pustym ciągiem.       - lub - <code>roleName</code> zawiera przecinek."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Skonfigurowanego <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - skonfigurowanego <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nie został znaleziony.       - lub - środowiska uruchomieniowego programu Menedżer autoryzacji nie jest zainstalowany na serwerze."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> Atrybut odwołuje się do ciągu połączenia w pliku, który nie istnieje."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> Wystąpienie jest skonfigurowane z magazynem zasad opartych na plikach i dostęp do odczytu do pliku jest niedozwolona w bieżącym poziomie zaufania."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
  id: ScopeName
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: ScopeName
  nameWithType: AuthorizationStoreRoleProvider.ScopeName
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Pobiera lub ustawia nazwę zakresu dla magazynu autoryzacji."
  remarks: "Właściwość ScopeName można ustawić za pomocą `scopeName` atrybutem konfiguracyjnym dla wystąpienia dostawcy w `providers` sekcji konfiguracji.      > [!CAUTION] > Ponieważ domyślnego pojedynczego wystąpienia dostawcy roli jest używana dla wszystkich żądań obsłużonych przez <xref:System.Web.HttpApplication>obiektu, może mieć wiele żądań wykonywanych równocześnie i ustawiania wartości właściwości ScopeName.</xref:System.Web.HttpApplication> Właściwość ScopeName nie jest wielowątkowość dla wielu operacji zapisu, a zmiana wartości właściwości ScopeName może spowodować nieoczekiwane zachowanie w przypadku wielu użytkowników aplikacji. Zaleca się unikać pisania kodu, który umożliwia użytkownikom można ustawić właściwości ScopeName, chyba że użytkownik musi. Przykładem aplikacji, gdy ustawienie właściwości ScopeName mogą być wymagane jest administracyjne aplikacji, która zarządza danymi roli dla wielu zastosowań. Takiej aplikacji powinna być aplikacją pojedynczego użytkownika, a nie aplikacji sieci Web."
  syntax:
    content: public string ScopeName { get; set; }
    return:
      type: System.String
      description: "Nazwa zakresu dla magazynu autoryzacji."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Web.Security.AuthorizationStoreRoleProvider.#ctor
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: AuthorizationStoreRoleProvider()
  nameWithType: AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider()
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider()
- uid: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: AuthorizationStoreRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: AuthorizationStoreRoleProvider.ApplicationName
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: CacheRefreshInterval
  nameWithType: AuthorizationStoreRoleProvider.CacheRefreshInterval
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: AuthorizationStoreRoleProvider.CreateRole(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: AuthorizationStoreRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: AuthorizationStoreRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: AuthorizationStoreRoleProvider.GetAllRoles()
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles()
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: AuthorizationStoreRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: AuthorizationStoreRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: AuthorizationStoreRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: AuthorizationStoreRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(String,String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: AuthorizationStoreRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: AuthorizationStoreRoleProvider.RoleExists(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: ScopeName
  nameWithType: AuthorizationStoreRoleProvider.ScopeName
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
- uid: System.Web.Security.AuthorizationStoreRoleProvider.#ctor*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: AuthorizationStoreRoleProvider
  nameWithType: AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider
- uid: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: AuthorizationStoreRoleProvider.AddUsersToRoles
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: AuthorizationStoreRoleProvider.ApplicationName
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: CacheRefreshInterval
  nameWithType: AuthorizationStoreRoleProvider.CacheRefreshInterval
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: AuthorizationStoreRoleProvider.CreateRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: AuthorizationStoreRoleProvider.DeleteRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: AuthorizationStoreRoleProvider.FindUsersInRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: AuthorizationStoreRoleProvider.GetAllRoles
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: AuthorizationStoreRoleProvider.GetRolesForUser
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: AuthorizationStoreRoleProvider.GetUsersInRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.Initialize*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: AuthorizationStoreRoleProvider.Initialize
- uid: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: AuthorizationStoreRoleProvider.IsUserInRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: AuthorizationStoreRoleProvider.RemoveUsersFromRoles
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: AuthorizationStoreRoleProvider.RoleExists
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: ScopeName
  nameWithType: AuthorizationStoreRoleProvider.ScopeName
