### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpReceiveResult
  id: UdpReceiveResult
  children:
  - System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)
  - System.Net.Sockets.UdpReceiveResult.Buffer
  - System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)
  - System.Net.Sockets.UdpReceiveResult.Equals(System.Object)
  - System.Net.Sockets.UdpReceiveResult.GetHashCode
  - System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  - System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  - System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
  langs:
  - csharp
  name: UdpReceiveResult
  nameWithType: UdpReceiveResult
  fullName: System.Net.Sockets.UdpReceiveResult
  type: Struct
  summary: "Przedstawia informacje o UDP otrzymywanie informacji, wynik po wywołaniu <xref:System.Net.Sockets.UdpClient.ReceiveAsync*>metody.</xref:System.Net.Sockets.UdpClient.ReceiveAsync*>"
  syntax:
    content: 'public struct UdpReceiveResult : IEquatable<System.Net.Sockets.UdpReceiveResult>'
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Net.Sockets.UdpReceiveResult>
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)
  id: '#ctor(System.Byte[],System.Net.IPEndPoint)'
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: UdpReceiveResult(Byte[],IPEndPoint)
  nameWithType: UdpReceiveResult.UdpReceiveResult(Byte[],IPEndPoint)
  fullName: System.Net.Sockets.UdpReceiveResult.UdpReceiveResult(Byte[],IPEndPoint)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> klasy."
  syntax:
    content: public UdpReceiveResult (byte[] buffer, System.Net.IPEndPoint remoteEndPoint);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bufor dla danych do otrzymania w pakiecie UDP."
    - id: remoteEndPoint
      type: System.Net.IPEndPoint
      description: "Zdalny punkt końcowy pakietów UDP."
  overload: System.Net.Sockets.UdpReceiveResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.Buffer
  id: Buffer
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: Buffer
  nameWithType: UdpReceiveResult.Buffer
  fullName: System.Net.Sockets.UdpReceiveResult.Buffer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Pobiera buforu z danych otrzymanych w pakiecie UDP."
  syntax:
    content: public byte[] Buffer { get; }
    return:
      type: System.Byte[]
      description: "Zwraca <xref:System.Byte>.</xref:System.Byte>       A <xref:System.Byte>tablicy danych otrzymanych w pakiecie UDP.</xref:System.Byte>"
  overload: System.Net.Sockets.UdpReceiveResult.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)
  id: Equals(System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: Equals(UdpReceiveResult)
  nameWithType: UdpReceiveResult.Equals(UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.Equals(UdpReceiveResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Zwraca wartość wskazującą, czy to wystąpienie jest taki sam jak określony obiekt."
  syntax:
    content: public bool Equals (System.Net.Sockets.UdpReceiveResult other);
    parameters:
    - id: other
      type: System.Net.Sockets.UdpReceiveResult
      description: "Obiekt do porównania z tym wystąpieniem."
    return:
      type: System.Boolean
      description: "Zwraca <xref:System.Boolean>.</xref:System.Boolean>       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> other </code> jest wystąpieniem <xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> i jest równa wartości wystąpienia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Sockets.UdpReceiveResult.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: UdpReceiveResult.Equals(Object)
  fullName: System.Net.Sockets.UdpReceiveResult.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Zwraca wartość wskazującą, czy to wystąpienie jest taki sam jak określony obiekt."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do porównania z tym wystąpieniem."
    return:
      type: System.Boolean
      description: "Zwraca <xref:System.Boolean>.</xref:System.Boolean>       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> obj </code> jest wystąpieniem <xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> i jest równa wartości wystąpienia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Sockets.UdpReceiveResult.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.GetHashCode
  id: GetHashCode
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: UdpReceiveResult.GetHashCode()
  fullName: System.Net.Sockets.UdpReceiveResult.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Zwraca wartość skrótu dla tego wystąpienia."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Zwraca <xref:System.Int32>.</xref:System.Int32>       Wartość skrótu."
  overload: System.Net.Sockets.UdpReceiveResult.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  id: op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: op_Equality(UdpReceiveResult,UdpReceiveResult)
  nameWithType: UdpReceiveResult.op_Equality(UdpReceiveResult,UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.op_Equality(UdpReceiveResult,UdpReceiveResult)
  type: Operator
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Sprawdza, czy dwa określone <xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> wystąpienia są równoważne."
  syntax:
    content: public static bool op_Equality (System.Net.Sockets.UdpReceiveResult left, System.Net.Sockets.UdpReceiveResult right);
    parameters:
    - id: left
      type: System.Net.Sockets.UdpReceiveResult
      description: "<xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> Wystąpienia, które jest z lewej strony operatora równości."
    - id: right
      type: System.Net.Sockets.UdpReceiveResult
      description: "<xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> Wystąpienia, które jest z prawej strony operatora równości."
    return:
      type: System.Boolean
      description: "Zwraca <xref:System.Boolean>.</xref:System.Boolean>       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Sockets.UdpReceiveResult.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  id: op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: op_Inequality(UdpReceiveResult,UdpReceiveResult)
  nameWithType: UdpReceiveResult.op_Inequality(UdpReceiveResult,UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.op_Inequality(UdpReceiveResult,UdpReceiveResult)
  type: Operator
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Sprawdza, czy dwa określone <xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> wystąpień nie są takie same."
  syntax:
    content: public static bool op_Inequality (System.Net.Sockets.UdpReceiveResult left, System.Net.Sockets.UdpReceiveResult right);
    parameters:
    - id: left
      type: System.Net.Sockets.UdpReceiveResult
      description: "<xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> Wystąpienia, które jest z lewej strony operator not equal."
    - id: right
      type: System.Net.Sockets.UdpReceiveResult
      description: "<xref href=&quot;System.Net.Sockets.UdpReceiveResult&quot;> </xref> Wystąpienie, które ma prawa operator not equal."
    return:
      type: System.Boolean
      description: "Zwraca <xref:System.Boolean>.</xref:System.Boolean>       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are unequal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Sockets.UdpReceiveResult.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.Sockets.UdpReceiveResult
  langs:
  - csharp
  name: RemoteEndPoint
  nameWithType: UdpReceiveResult.RemoteEndPoint
  fullName: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Pobiera zdalnego punktu końcowego, w którym odebrano pakietów UDP."
  syntax:
    content: public System.Net.IPEndPoint RemoteEndPoint { get; }
    return:
      type: System.Net.IPEndPoint
      description: "Zwraca <xref:System.Net.IPEndPoint>.</xref:System.Net.IPEndPoint>       Zdalny punkt końcowy, z którego został odebrany pakietów UDP."
  overload: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: UdpReceiveResult(Byte[],IPEndPoint)
  nameWithType: UdpReceiveResult.UdpReceiveResult(Byte[],IPEndPoint)
  fullName: System.Net.Sockets.UdpReceiveResult.UdpReceiveResult(Byte[],IPEndPoint)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.Sockets.UdpReceiveResult.Buffer
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: Buffer
  nameWithType: UdpReceiveResult.Buffer
  fullName: System.Net.Sockets.UdpReceiveResult.Buffer
- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: Equals(UdpReceiveResult)
  nameWithType: UdpReceiveResult.Equals(UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.Equals(UdpReceiveResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.UdpReceiveResult
  parent: System.Net.Sockets
  isExternal: false
  name: UdpReceiveResult
  nameWithType: UdpReceiveResult
  fullName: System.Net.Sockets.UdpReceiveResult
- uid: System.Net.Sockets.UdpReceiveResult.Equals(System.Object)
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: Equals(Object)
  nameWithType: UdpReceiveResult.Equals(Object)
  fullName: System.Net.Sockets.UdpReceiveResult.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Sockets.UdpReceiveResult.GetHashCode
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: GetHashCode()
  nameWithType: UdpReceiveResult.GetHashCode()
  fullName: System.Net.Sockets.UdpReceiveResult.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: op_Equality(UdpReceiveResult,UdpReceiveResult)
  nameWithType: UdpReceiveResult.op_Equality(UdpReceiveResult,UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.op_Equality(UdpReceiveResult,UdpReceiveResult)
- uid: System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: op_Inequality(UdpReceiveResult,UdpReceiveResult)
  nameWithType: UdpReceiveResult.op_Inequality(UdpReceiveResult,UdpReceiveResult)
  fullName: System.Net.Sockets.UdpReceiveResult.op_Inequality(UdpReceiveResult,UdpReceiveResult)
- uid: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: RemoteEndPoint
  nameWithType: UdpReceiveResult.RemoteEndPoint
  fullName: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint
- uid: System.Net.Sockets.UdpReceiveResult.#ctor*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: UdpReceiveResult
  nameWithType: UdpReceiveResult.UdpReceiveResult
- uid: System.Net.Sockets.UdpReceiveResult.Buffer*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: Buffer
  nameWithType: UdpReceiveResult.Buffer
- uid: System.Net.Sockets.UdpReceiveResult.Equals*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: Equals
  nameWithType: UdpReceiveResult.Equals
- uid: System.Net.Sockets.UdpReceiveResult.GetHashCode*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: GetHashCode
  nameWithType: UdpReceiveResult.GetHashCode
- uid: System.Net.Sockets.UdpReceiveResult.op_Equality*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: op_Equality
  nameWithType: UdpReceiveResult.op_Equality
- uid: System.Net.Sockets.UdpReceiveResult.op_Inequality*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: op_Inequality
  nameWithType: UdpReceiveResult.op_Inequality
- uid: System.Net.Sockets.UdpReceiveResult.RemoteEndPoint*
  parent: System.Net.Sockets.UdpReceiveResult
  isExternal: false
  name: RemoteEndPoint
  nameWithType: UdpReceiveResult.RemoteEndPoint
