### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer
  id: ICallContextInitializer
  children:
  - System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)
  - System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  langs:
  - csharp
  name: ICallContextInitializer
  nameWithType: ICallContextInitializer
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer
  type: Interface
  summary: "Definiuje metody, umożliwiając inicjowanie i odtwarzania z magazynu lokalnego wątku z wątku, który wywołuje kod użytkownika."
  remarks: "Zaimplementuj interfejs ICallContextInitializer i dodaj go do <xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=fullName>Właściwości inicjowanie i oczyszczanie magazynu lokalnego wątku dla wątku, który wywołuje kod użytkownika.</xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=fullName> Zwykle jest używane do niektórych wartości, takich jak personifikacji lub zmiana <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName> Jeśli chcesz ustanowić niektóre niestandardowe kontekstu jest punkt rozszerzenia można zainicjować właściwości kontekstu statycznego, która jest dostępna dla deweloperów w ramach działania."
  syntax:
    content: public interface ICallContextInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)
  id: AfterInvoke(System.Object)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  langs:
  - csharp
  name: AfterInvoke(Object)
  nameWithType: ICallContextInitializer.AfterInvoke(Object)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Implementuje brać udziału w czyszczenia wątku, który wywołał operację."
  remarks: "Użyj tej metody, aby wykonać wszelkie niezbędne czyszczenia wątku operację."
  syntax:
    content: public void AfterInvoke (object correlationState);
    parameters:
    - id: correlationState
      type: System.Object
      description: "Zwróciła obiekt korelacji <xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*>metody.</xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*>"
  overload: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  id: BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  langs:
  - csharp
  name: BeforeInvoke(InstanceContext,IClientChannel,Message)
  nameWithType: ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Implementuje brać udziału w wątku operację inicjowania."
  remarks: "Zaimplementuj metodę BeforeInvoke, aby zainicjować i czyszczenie magazynu lokalnego wątku dla wątku, który wywołuje kod użytkownika. Zwykle jest używane do niektórych wartości, takich jak personifikacji lub zmiana <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName> Jeśli chcesz ustanowić niektóre niestandardowe kontekstu jest punkt rozszerzenia można zainicjować właściwości kontekstu statycznego, która jest dostępna dla deweloperów w ramach działania."
  syntax:
    content: public object BeforeInvoke (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.IClientChannel channel, System.ServiceModel.Channels.Message message);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "Wystąpienie usługi dla tej operacji."
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: "Kanał klienta."
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Komunikat przychodzący."
    return:
      type: System.Object
      description: "Obiekt korelacji przekazany jako parametr <xref:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*>metody.</xref:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*>"
  overload: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: AfterInvoke(Object)
  nameWithType: ICallContextInitializer.AfterInvoke(Object)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: BeforeInvoke(InstanceContext,IClientChannel,Message)
  nameWithType: ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
- uid: System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: true
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: AfterInvoke
  nameWithType: ICallContextInitializer.AfterInvoke
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: BeforeInvoke
  nameWithType: ICallContextInitializer.BeforeInvoke
