### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlException
  id: SqlException
  children:
  - System.Data.SqlClient.SqlException.Class
  - System.Data.SqlClient.SqlException.ClientConnectionId
  - System.Data.SqlClient.SqlException.Errors
  - System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.SqlClient.SqlException.LineNumber
  - System.Data.SqlClient.SqlException.Number
  - System.Data.SqlClient.SqlException.Procedure
  - System.Data.SqlClient.SqlException.Server
  - System.Data.SqlClient.SqlException.Source
  - System.Data.SqlClient.SqlException.State
  - System.Data.SqlClient.SqlException.ToString
  langs:
  - csharp
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
  type: Class
  summary: "Wyjątek zgłaszany, gdy program SQL Server zwraca ostrzeżenia lub błędu. Ta klasa nie może być dziedziczona."
  remarks: "Ta klasa jest tworzony przy każdym dostawcy danych programu .NET Framework dla programu SQL Server napotkał błąd podczas wygenerowana przez serwer. (Błędy po stronie klienta są zgłaszane jako wyjątki środowiska uruchomieniowego języka wspólnego standard). SqlException zawsze zawiera co najmniej jedno wystąpienie <xref:System.Data.SqlClient.SqlError>.</xref:System.Data.SqlClient.SqlError>       Wiadomości o ważności poziomu 10 lub mniej są informacyjny i wskazują na problemy spowodowane przez błędy w informacje, które użytkownik wprowadził. Poziomy ważności od 11 do 16 są generowane przez użytkownika, a można rozwiązać przez użytkownika. Poziomy ważności od 17 do 25 wskazują błędy oprogramowania lub sprzętu. Jeśli poziom 17 18 lub 19 wystąpi błąd, możesz kontynuować pracę, chociaż może nie mieć możliwość wykonania określonej instrukcji.       <xref:System.Data.SqlClient.SqlConnection>Pozostaje otwarty, gdy poziom ważności jest 19 lub mniej.</xref:System.Data.SqlClient.SqlConnection> Jeśli poziom ważności jest 20 lub większą, serwer zwykle zamyka <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> Jednak użytkownik może ponownie otworzyć połączenie i kontynuować. W obu przypadkach SqlException jest generowany przez metody wykonywania polecenia.       Informacje o ostrzeżenia i informacyjne wiadomości wysłane przez program SQL Server zobacz sekcję Rozwiązywanie problemów z programu SQL Server — książki Online. Mapuje klasy SqlException waga programu SQL Server.       Poniżej przedstawiono ogólne informacje na temat obsługi wyjątków. Kod należy przechwytywać wyjątki zapobiega awarii aplikacji i umożliwić wyświetlanie komunikat o błędzie istotne dla użytkownika.  Transakcji bazy danych można użyć, aby upewnić się, że dane są spójne niezależnie od tego, co dzieje się w aplikacji klienta (w tym awarii). Funkcje, takie jak System.Transaction.TransactionScope lub metody BeginTransaction (w System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection i System.Data.SqlClient.SqlConnection) zapewnienia spójności danych niezależnie od wyjątki zgłoszone przez dostawcę. Transakcje może zakończyć się niepowodzeniem, tak catch błędy i spróbuj ponowić transakcję.       Należy pamiętać, że począwszy od programu .NET Framework 4.5, SqlException przywrócić wewnętrzny <xref:System.ComponentModel.Win32Exception>.</xref:System.ComponentModel.Win32Exception>       Klasa wyjątków programu .net Framework dostawcy danych raporty błędów specyficznych dla dostawcy. Na przykład System.Data.Odbc ma odbcexception — System.Data.OleDb ma oledbexception — i System.Data.SqlClient ma SqlException. Najlepsze poziomu szczegóły błędu catch tych wyjątków i użyj elementów członkowskich klasy tych wyjątków, aby uzyskać szczegóły błędu.       Oprócz błędów specyficznych dla dostawcy typów dostawcy danych .NET Framework może zgłaszać wyjątki .NET Framework, takich jak System.OutOfMemoryException i System.Threading.ThreadAbortException. Odzyskiwanie z tych wyjątków nie może być możliwe.       Dane wejściowe zła może spowodować typ dostawcy danych .NET Framework zgłosić wyjątek, takich jak System.ArgumentException lub System.IndexOutOfRangeException.  Wywoływanie metody o złej godzinie podnieść System.InvalidOperationException.       Tak, ogólnie rzecz biorąc, zapisać program obsługi wyjątku, który przechwytuje u innego dostawcy określonych wyjątków, jak również wyjątki od środowiska CLR.  Można je w następujący sposób warstwie: ```   Try {      // code here   }   catch (SqlException odbcEx) {      // Handle more specific SqlException exception here.   }   catch (Exception ex) {      // Handle generic ones here.   }      ``` lub: ```   Try {      // code here   }   catch (Exception ex) {      if (ex is SqlException) {         // Handle more specific SqlException exception here.      }      Else {         // Handle generic ones here.      }   }      ``` istnieje również możliwość wywołania metody dostawcy danych .NET Framework zakończy się niepowodzeniem w wątku puli wątków z żadnego kodu użytkownika na stosie. W tym przypadku i przy użyciu wywołań metod asynchronicznych, należy zarejestrować <xref:System.AppDomain.UnhandledException>zdarzenia w celu obsługi tych wyjątków i uniknąć awarii aplikacji.</xref:System.AppDomain.UnhandledException>"
  example:
  - "The following example generates a SqlException and then displays the exception.  \n  \n [!code-cs[Classic WebData SqlException Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._1_1.cs)]\n [!code-vb[Classic WebData SqlException Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._1_1.vb)]"
  syntax:
    content: 'public sealed class SqlException : System.Data.Common.DbException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  - System.Data.Common.DbException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Class
  id: Class
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Class
  nameWithType: SqlException.Class
  fullName: System.Data.SqlClient.SqlException.Class
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera poziom ważności błędu zwrócony z dostawcy danych programu .NET Framework dla programu SQL Server."
  remarks: "Wiadomości o ważności poziomu 10 lub mniej są informacyjny i wskazują na problemy spowodowane przez błędy w informacje, które użytkownik wprowadził. Poziomy ważności od 11 do 16 są generowane przez użytkownika, a można rozwiązać przez użytkownika. Poziomy ważności od 17 do 25 wskazują błędy oprogramowania lub sprzętu. Jeśli poziom 17 18 lub 19 wystąpi błąd, możesz kontynuować pracę, chociaż może nie mieć możliwość wykonania określonej instrukcji.       <xref:System.Data.SqlClient.SqlConnection>Pozostaje otwarty, gdy poziom ważności jest 19 lub mniej.</xref:System.Data.SqlClient.SqlConnection> Jeśli poziom ważności jest 20 lub większą, serwer zwykle zamyka <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> Jednak użytkownik może ponownie otworzyć połączenie i kontynuować. W obu przypadkach <xref:System.Data.SqlClient.SqlException>jest generowany przez metodę wykonywania polecenia.</xref:System.Data.SqlClient.SqlException>       Informacje ostrzeżenia i informacyjne wiadomości wysłane przez program SQL Server zobacz sekcję Rozwiązywanie problemów w dokumentacji programu SQL Server.       Jest to otoki dla <xref:System.Data.SqlClient.SqlError.Class%2A>Właściwości pierwszego <xref:System.Data.SqlClient.SqlError>w <xref:System.Data.SqlClient.SqlException.Errors%2A>Właściwości.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Class%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._21_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._21_1.vb)]"
  syntax:
    content: public byte Class { get; }
    return:
      type: System.Byte
      description: "Wartość z zakresu od 1 do 25 wskazuje poziom ważności błędu."
  overload: System.Data.SqlClient.SqlException.Class*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.ClientConnectionId
  id: ClientConnectionId
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: ClientConnectionId
  nameWithType: SqlException.ClientConnectionId
  fullName: System.Data.SqlClient.SqlException.ClientConnectionId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Reprezentuje identyfikator połączenia klienta. Aby uzyskać więcej informacji, zobacz [danych śledzenia w ADO.NET](~/add/includes/ajax-current-ext-md.md)."
  remarks: "Aby uzyskać przykładowy kod zobacz <xref:System.Data.SqlClient.SqlException.ToString%2A>.</xref:System.Data.SqlClient.SqlException.ToString%2A>"
  syntax:
    content: public Guid ClientConnectionId { get; }
    return:
      type: System.Guid
      description: "Zwraca identyfikator połączenia klienta."
  overload: System.Data.SqlClient.SqlException.ClientConnectionId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Errors
  id: Errors
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Errors
  nameWithType: SqlException.Errors
  fullName: System.Data.SqlClient.SqlException.Errors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera kolekcję jednego lub więcej <xref href=&quot;System.Data.SqlClient.SqlError&quot;> </xref> obiektów, które zapewniają szczegółowe informacje na temat wyjątki generowane przez .NET Framework Data Provider for SQL Server."
  remarks: "<xref:System.Data.SqlClient.SqlErrorCollection>Klasa zawsze zawiera co najmniej jedno wystąpienie <xref:System.Data.SqlClient.SqlError>klasy.</xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlErrorCollection>       Jest to otoki dla <xref:System.Data.SqlClient.SqlErrorCollection>.</xref:System.Data.SqlClient.SqlErrorCollection> Aby uzyskać więcej informacji na temat błędów aparatu programu SQL Server zobacz dokumentację SQL Server — książki Online."
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-vb[Classic WebData SqlError Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._59_1.vb)]\n [!code-cs[Classic WebData SqlError Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._59_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlErrorCollection Errors { get; }
    return:
      type: System.Data.SqlClient.SqlErrorCollection
      description: "Zebrane wystąpienia <xref href=&quot;System.Data.SqlClient.SqlError&quot;> </xref> klasy."
  overload: System.Data.SqlClient.SqlException.Errors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SqlException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.SqlClient.SqlException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Ustawia <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> informacje o wyjątku."
  remarks: '`GetObjectData`Ustawia `SerializationInfo` ze wszystkimi danymi obiektu wyjątków przeznaczone do serializacji. Podczas deserializacji, wyjątek jest odtworzonych z `SerializationInfo` przesyłane przez strumień.'
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> Zawierający dane zserializowanego obiektu dotyczące zgłaszanego wyjątku."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>Zawierający informacje kontekstowe dotyczące źródła lub miejsca docelowego.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Data.SqlClient.SqlException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> si </code> Parametr jest odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.LineNumber
  id: LineNumber
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: LineNumber
  nameWithType: SqlException.LineNumber
  fullName: System.Data.SqlClient.SqlException.LineNumber
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera liczbę wierszy w partii polecenia języka Transact-SQL lub procedury składowanej, który wygenerował błąd."
  remarks: "Wiersz numerowanie rozpoczyna się od 1; Jeśli zostanie zwrócony 0, numer wiersza nie ma zastosowania.       Jest to otoki dla <xref:System.Data.SqlClient.SqlError.LineNumber%2A>Właściwości pierwszego <xref:System.Data.SqlClient.SqlError>w <xref:System.Data.SqlClient.SqlException.Errors%2A>Właściwości.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.LineNumber%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._10_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._10_1.vb)]"
  syntax:
    content: public int LineNumber { get; }
    return:
      type: System.Int32
      description: "Numer wiersza w partii polecenia języka Transact-SQL lub procedury składowanej, który wygenerował błąd."
  overload: System.Data.SqlClient.SqlException.LineNumber*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Number
  id: Number
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Number
  nameWithType: SqlException.Number
  fullName: System.Data.SqlClient.SqlException.Number
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera numer określający typ błędu."
  remarks: "Jest to otoki dla <xref:System.Data.SqlClient.SqlError.Number%2A>Właściwości pierwszego <xref:System.Data.SqlClient.SqlError>w <xref:System.Data.SqlClient.SqlException.Errors%2A>Właściwości.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Number%2A> Aby uzyskać więcej informacji na temat błędów aparatu programu SQL Server zobacz dokumentację SQL Server — książki Online."
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._13_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._13_1.vb)]"
  syntax:
    content: public int Number { get; }
    return:
      type: System.Int32
      description: "Liczba, która określa typ błędu."
  overload: System.Data.SqlClient.SqlException.Number*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Procedure
  id: Procedure
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Procedure
  nameWithType: SqlException.Procedure
  fullName: System.Data.SqlClient.SqlException.Procedure
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera nazwę procedury składowanej lub zdalnego wywołania procedury (RPC), który wygenerował błąd."
  remarks: "Jest to otoki dla <xref:System.Data.SqlClient.SqlError.Procedure%2A>Właściwości pierwszego <xref:System.Data.SqlClient.SqlError>w <xref:System.Data.SqlClient.SqlException.Errors%2A>Właściwości.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Procedure%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._9_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._9_1.vb)]"
  syntax:
    content: public string Procedure { get; }
    return:
      type: System.String
      description: "Nazwa procedury składowanej lub RPC."
  overload: System.Data.SqlClient.SqlException.Procedure*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Server
  id: Server
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Server
  nameWithType: SqlException.Server
  fullName: System.Data.SqlClient.SqlException.Server
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera nazwę komputera, na którym jest uruchomione wystąpienie programu SQL Server, który wygenerował błąd."
  remarks: "Jest to otoki dla <xref:System.Data.SqlClient.SqlError.Server%2A>Właściwości pierwszego <xref:System.Data.SqlClient.SqlError>w <xref:System.Data.SqlClient.SqlException.Errors%2A>Właściwości.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Server%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._25_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._25_1.vb)]"
  syntax:
    content: public string Server { get; }
    return:
      type: System.String
      description: "Nazwa komputera z uruchomionym wystąpieniem programu SQL Server."
  overload: System.Data.SqlClient.SqlException.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.Source
  id: Source
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: Source
  nameWithType: SqlException.Source
  fullName: System.Data.SqlClient.SqlException.Source
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera nazwę dostawcy, który wygenerował błąd."
  remarks: "Jest to otoki dla <xref:System.Data.SqlClient.SqlError.Source%2A>Właściwości pierwszego <xref:System.Data.SqlClient.SqlError>w <xref:System.Data.SqlClient.SqlException.Errors%2A>Właściwości.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.Source%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._20_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._20_1.vb)]"
  syntax:
    content: public override string Source { get; }
    return:
      type: System.String
      description: "Nazwa dostawcy, który wygenerował błąd."
  overload: System.Data.SqlClient.SqlException.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.State
  id: State
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: State
  nameWithType: SqlException.State
  fullName: System.Data.SqlClient.SqlException.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera liczbowy kod błędu z programu SQL Server, który reprezentuje błąd, ostrzeżenie lub komunikat &quot;nie znaleziono danych&quot;. Aby uzyskać więcej informacji na temat dekodowanie tych wartości, zobacz dokumentację SQL Server — książki Online."
  remarks: "Jest to otoki dla <xref:System.Data.SqlClient.SqlError.State%2A>Właściwości pierwszego <xref:System.Data.SqlClient.SqlError>w <xref:System.Data.SqlClient.SqlException.Errors%2A>Właściwości.</xref:System.Data.SqlClient.SqlException.Errors%2A> </xref:System.Data.SqlClient.SqlError> </xref:System.Data.SqlClient.SqlError.State%2A>"
  example:
  - "The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \n  \n [!code-cs[Classic WebData SqlException.State Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._61_1.cs)]\n [!code-vb[Classic WebData SqlException.State Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._61_1.vb)]"
  syntax:
    content: public byte State { get; }
    return:
      type: System.Byte
      description: "Liczba reprezentująca kod błędu."
  overload: System.Data.SqlClient.SqlException.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlException.ToString
  id: ToString
  parent: System.Data.SqlClient.SqlException
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlException.ToString()
  fullName: System.Data.SqlClient.SqlException.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zwraca ciąg reprezentujący bieżące <xref href=&quot;System.Data.SqlClient.SqlException&quot;> </xref> obiektu i zawiera identyfikator połączenia klienta (Aby uzyskać więcej informacji, zobacz <xref:System.Data.SqlClient.SqlException.ClientConnectionId*>).</xref:System.Data.SqlClient.SqlException.ClientConnectionId*>"
  remarks: ''
  example:
  - "The following C# example shows how a connection attempt to a valid server but non-existent database causes a <xref:System.Data.SqlClient.SqlException>, which includes the client connection ID:  \n  \n```  \nusing System.Data.SqlClient;  \nusing System;  \n  \npublic class A {  \n   public static void Main() {  \n      SqlConnection connection = new SqlConnection();  \n      connection.ConnectionString = \"Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true\";  \n      try {  \n         connection.Open();  \n      }  \n      catch (SqlException p) {  \n         Console.WriteLine(\"{0}\", p.ClientConnectionId);  \n         Console.WriteLine(\"{0}\", p.ToString());  \n      }  \n      connection.Close();  \n   }  \n}  \n```  \n  \n The following Visual Basic sample is functionally equivalent to the previous (C#) sample:  \n  \n```  \nImports System.Data.SqlClient  \nImports System  \n  \nModule Module1  \n  \n    Sub Main()  \n        Dim connection As New SqlConnection()  \n        connection.ConnectionString = \"Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true\"  \n        Try  \n            connection.Open()  \n        Catch p As SqlException  \n            Console.WriteLine(\"{0}\", p.ClientConnectionId)  \n            Console.WriteLine(\"{0}\", p.ToString())  \n        End Try  \n        connection.Close()  \n    End Sub  \n  \nEnd Module  \n```"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Ciąg reprezentujący bieżące <xref href=&quot;System.Data.SqlClient.SqlException&quot;> </xref> obiektu.<xref:System.String>.</xref:System.String>"
  overload: System.Data.SqlClient.SqlException.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbException
  isExternal: false
  name: System.Data.Common.DbException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.SqlClient.SqlException.Class
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Class
  nameWithType: SqlException.Class
  fullName: System.Data.SqlClient.SqlException.Class
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlClient.SqlException.ClientConnectionId
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlException.ClientConnectionId
  fullName: System.Data.SqlClient.SqlException.ClientConnectionId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.SqlClient.SqlException.Errors
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Errors
  nameWithType: SqlException.Errors
  fullName: System.Data.SqlClient.SqlException.Errors
- uid: System.Data.SqlClient.SqlErrorCollection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlErrorCollection
  nameWithType: SqlErrorCollection
  fullName: System.Data.SqlClient.SqlErrorCollection
- uid: System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SqlException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.SqlClient.SqlException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.SqlClient.SqlException.LineNumber
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: LineNumber
  nameWithType: SqlException.LineNumber
  fullName: System.Data.SqlClient.SqlException.LineNumber
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlException.Number
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Number
  nameWithType: SqlException.Number
  fullName: System.Data.SqlClient.SqlException.Number
- uid: System.Data.SqlClient.SqlException.Procedure
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Procedure
  nameWithType: SqlException.Procedure
  fullName: System.Data.SqlClient.SqlException.Procedure
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlException.Server
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Server
  nameWithType: SqlException.Server
  fullName: System.Data.SqlClient.SqlException.Server
- uid: System.Data.SqlClient.SqlException.Source
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Source
  nameWithType: SqlException.Source
  fullName: System.Data.SqlClient.SqlException.Source
- uid: System.Data.SqlClient.SqlException.State
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: State
  nameWithType: SqlException.State
  fullName: System.Data.SqlClient.SqlException.State
- uid: System.Data.SqlClient.SqlException.ToString
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: ToString()
  nameWithType: SqlException.ToString()
  fullName: System.Data.SqlClient.SqlException.ToString()
- uid: System.Data.SqlClient.SqlException.Class*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Class
  nameWithType: SqlException.Class
- uid: System.Data.SqlClient.SqlException.ClientConnectionId*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlException.ClientConnectionId
- uid: System.Data.SqlClient.SqlException.Errors*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Errors
  nameWithType: SqlException.Errors
- uid: System.Data.SqlClient.SqlException.GetObjectData*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: GetObjectData
  nameWithType: SqlException.GetObjectData
- uid: System.Data.SqlClient.SqlException.LineNumber*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: LineNumber
  nameWithType: SqlException.LineNumber
- uid: System.Data.SqlClient.SqlException.Number*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Number
  nameWithType: SqlException.Number
- uid: System.Data.SqlClient.SqlException.Procedure*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Procedure
  nameWithType: SqlException.Procedure
- uid: System.Data.SqlClient.SqlException.Server*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Server
  nameWithType: SqlException.Server
- uid: System.Data.SqlClient.SqlException.Source*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: Source
  nameWithType: SqlException.Source
- uid: System.Data.SqlClient.SqlException.State*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: State
  nameWithType: SqlException.State
- uid: System.Data.SqlClient.SqlException.ToString*
  parent: System.Data.SqlClient.SqlException
  isExternal: false
  name: ToString
  nameWithType: SqlException.ToString
