### YamlMime:ManagedReference
items:
- uid: System.Resources.ResXResourceReader
  id: ResXResourceReader
  children:
  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream)
  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)
  - System.Resources.ResXResourceReader.#ctor(System.String)
  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.BasePath
  - System.Resources.ResXResourceReader.Close
  - System.Resources.ResXResourceReader.Dispose(System.Boolean)
  - System.Resources.ResXResourceReader.Finalize
  - System.Resources.ResXResourceReader.FromFileContents(System.String)
  - System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.GetEnumerator
  - System.Resources.ResXResourceReader.GetMetadataEnumerator
  - System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  - System.Resources.ResXResourceReader.System#IDisposable#Dispose
  - System.Resources.ResXResourceReader.UseResXDataNodes
  langs:
  - csharp
  name: ResXResourceReader
  nameWithType: ResXResourceReader
  fullName: System.Resources.ResXResourceReader
  type: Class
  summary: "Wylicza XML pliki zasobów (resx) oraz strumieni i odczytuje zasób sekwencyjnych pary nazw i wartości."
  remarks: "Klasa ResXResourceReader udostępnia domyślną implementację <xref:System.Resources.IResourceReader>interfejsu, która odczytuje informacje dotyczące zasobów w formacie XML.</xref:System.Resources.IResourceReader> Można odczytać informacji o zasobie z formatu binarnego zasobów, użyj <xref:System.Resources.ResourceReader>klasy.</xref:System.Resources.ResourceReader>       Klasa ResXResourceReader służy do wyliczenia zasobów w plikach .resx przez przechodzących przez moduł wyliczający słownika (<xref:System.Collections.IDictionaryEnumerator>) zwracane przez <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>metody.</xref:System.Resources.ResXResourceReader.GetEnumerator%2A> </xref:System.Collections.IDictionaryEnumerator> Wywołanie metody udostępniane przez <xref:System.Collections.IDictionaryEnumerator>Aby przejść do następnego zasobu i do odczytu z nazwą i wartością każdego zasobu w pliku resx.</xref:System.Collections.IDictionaryEnumerator>      > [!NOTE] > ResXResourceReader klasa udostępnia dwa moduły wyliczające. <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName>Metoda zwraca <xref:System.Collections.IDictionaryEnumerator>obiekt; zalecane jest użycie tej metody można wyliczyć zasobów.</xref:System.Collections.IDictionaryEnumerator> </xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName> <xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName>Metoda jest implementacją interfejsu jawnego zwracające <xref:System.Collections.IEnumerator>obiekt; nie zaleca się jego użycie.</xref:System.Collections.IEnumerator> </xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName>       W poniższym przykładzie użyto <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>metodę, aby uzyskać <xref:System.Collections.IDictionaryEnumerator>obiekt, który jest używany do wyliczenia zasobów w pliku .resx.</xref:System.Collections.IDictionaryEnumerator> </xref:System.Resources.ResXResourceReader.GetEnumerator%2A> Przykład obejmuje `CreateResourceFile` procedura powoduje utworzenie pliku niezbędnego zasobu.       [!code-cs[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)][!code-vb[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb) ] Jeśli <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>właściwość jest `true`, wartość <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName>jest właściwość <xref:System.Resources.ResXDataNode>obiekt zamiast wartości zasobu.</xref:System.Resources.ResXDataNode> </xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName> </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>   To udostępnienie komentarza elementu zasobów z <xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName>Właściwości.</xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName> W poniższym przykładzie <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>właściwości `true` i wylicza zasobów w pliku .resx [!code-cs [System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)][!code-vb[System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb) ] Jeśli <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>jest `true`, <xref:System.Resources.ResXDataNode>elementów w wyliczeniu mogą być:-o nazwie zasobów wraz z danymi.</xref:System.Resources.ResXDataNode> </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>   </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> W takim przypadku <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName>jest właściwość `null`.</xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName>      -O nazwie zasobów oraz nazwę pliku, który zawiera dane zasobów. W takim przypadku <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName>zwraca <xref:System.Resources.ResXFileRef>obiekt, który zawiera informacje o zasobie, łącznie z nazwą jego pliku.</xref:System.Resources.ResXFileRef> </xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName> Jeśli używane są nazwy pliku względną, zawsze należy ustawić <xref:System.Resources.ResXResourceReader.BasePath%2A>właściwość, aby zapewnić punkt odniesienia dla ścieżki względnej.</xref:System.Resources.ResXResourceReader.BasePath%2A>       Jeśli chcesz pobrać nazwanych zasobów z pliku .resx, a nie wyliczania jej zasobów, można utworzyć wystąpienie <xref:System.Resources.ResXResourceSet>obiekt i wywołanie jego `GetString` i `GetObject` metody.</xref:System.Resources.ResXResourceSet>      > [!NOTE] > ResXResourceReader klasa zawiera żądanie łącza i dziedziczenie żądanie na poziomie klasy, która ma zastosowanie do wszystkich elementów członkowskich. A <xref:System.Security.SecurityException>wyjątek podczas bezpośredniego obiektu wywołującego lub Klasa pochodna nie ma uprawnienia pełnego zaufania.</xref:System.Security.SecurityException>"
  example:
  - "The following example demonstrates how to use a ResXResourceReader to iterate through the resources in a .resx file. First, the ResXResourceReader`rsxr` is created for the file `items.resx`. Next, the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method is used to create an <xref:System.Collections.IDictionaryEnumerator> to iterate through the resources and display the contents to the console.  \n  \n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/t-system.resources.resxr_1_3.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/t-system.resources.resxr_1_3.cs)]\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_3.vb)]"
  syntax:
    content: 'public class ResXResourceReader : System.Resources.IResourceReader'
  inheritance:
  - System.Object
  implements:
  - System.Resources.IResourceReader
  inheritedMembers: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(Stream)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> klasy dla określonego strumienia."
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Resources.ResXResourceReader.Dispose%2A> and <xref:System.Resources.ResXResourceReader.Close%2A> methods do not close the stream you specify in this constructor.
  syntax:
    content: public ResXResourceReader (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Strumień wejściowy, który zawiera zasoby."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)
  id: '#ctor(System.IO.TextReader)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(TextReader)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> dla określonego <xref:System.IO.TextReader>.</xref:System.IO.TextReader> — klasa"
  syntax:
    content: public ResXResourceReader (System.IO.TextReader reader);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "Strumień wejściowy tekst, w zawierającym zasoby."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(String)
  nameWithType: ResXResourceReader.ResXResourceReader(String)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> klasy dla pliku określonego zasobu."
  remarks: ''
  example:
  - "The following example creates a new instance of the <xref:System.Resources.ResXResourceReader> class for the specified file, iterates through the resources of the file, and displays the contents to the console.  \n  \n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/m-system.resources.resxr_1_1.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/m-system.resources.resxr_1_1.cs)]\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_1_1.vb)]"
  syntax:
    content: public ResXResourceReader (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Ścieżka pliku zasobu do odczytu."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(Stream,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> przy użyciu strumienia wejściowego i usługi rozpoznawania typów."
  syntax:
    content: public ResXResourceReader (System.IO.Stream stream, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Strumień wejściowy, który zawiera zasoby."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Obiekt, który jest rozpoznawana wpisz nazwy określone w zasobie."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  id: '#ctor(System.IO.Stream,System.Reflection.AssemblyName[])'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(Stream,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> przy użyciu strumienia i tablicę nazw zestawu."
  syntax:
    content: public ResXResourceReader (System.IO.Stream stream, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Strumień wejściowy, który zawiera zasoby."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Tablica <xref:System.Reflection.AssemblyName>obiektów, które określa jeden lub więcej zestawów.</xref:System.Reflection.AssemblyName> Zestawy są używane do rozpoznawania Nazwa typu w zasobie rzeczywistego typu."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(TextReader,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> przy użyciu czytnik strumienia tekstu i usługi rozpoznawania typów."
  syntax:
    content: public ResXResourceReader (System.IO.TextReader reader, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "Czytnik strumienia tekstu zawierającego zasoby."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Obiekt, który jest rozpoznawana wpisz nazwy określone w zasobie."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  id: '#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(TextReader,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> przy użyciu <xref:System.IO.TextReader>obiekt i tablicę nazw zestawów.</xref:System.IO.TextReader>"
  syntax:
    content: public ResXResourceReader (System.IO.TextReader reader, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "Obiekt używany do odczytu zasobów z strumienia tekstu."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Tablica <xref:System.Reflection.AssemblyName>obiektów, które określa jeden lub więcej zestawów.</xref:System.Reflection.AssemblyName> Zestawy są używane do rozpoznawania Nazwa typu w zasobie rzeczywistego typu."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> przy użyciu nazwy pliku i usługi rozpoznawania typów."
  syntax:
    content: public ResXResourceReader (string fileName, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: fileName
      type: System.String
      description: "Nazwa pliku zasobu XML zawierający zasoby."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Obiekt, który jest rozpoznawana wpisz nazwy określone w zasobie."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  id: '#ctor(System.String,System.Reflection.AssemblyName[])'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(String,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,AssemblyName[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> przy użyciu nazwy pliku zasobu XML i tablicę nazw zestawu."
  syntax:
    content: public ResXResourceReader (string fileName, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: fileName
      type: System.String
      description: "Nazwa pliku zasobu XML zawierający zasoby."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Tablica <xref:System.Reflection.AssemblyName>obiektów, które określa jeden lub więcej zestawów.</xref:System.Reflection.AssemblyName> Zestawy są używane do rozpoznawania Nazwa typu w zasobie rzeczywistego typu."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.BasePath
  id: BasePath
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
  fullName: System.Resources.ResXResourceReader.BasePath
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Pobiera lub ustawia ścieżkę podstawowej na ścieżce względnej określonej w <xref href=&quot;System.Resources.ResXFileRef&quot;> </xref> obiektu."
  remarks: "Właściwość nieistniejący jest używana do rozpoznawania odwołań ścieżki względnej, przypisanych do <xref:System.Resources.ResXFileRef.FileName%2A>Właściwość <xref:System.Resources.ResXFileRef>obiektów.</xref:System.Resources.ResXFileRef> </xref:System.Resources.ResXFileRef.FileName%2A>  Domyślnie, jego wartość wynosi <xref:System.String.Empty?displayProperty=fullName>, a odwołania do ścieżki względnej pliku są rozpoznawane w stosunku do bieżącego katalogu zwrócony przez <xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName>Właściwości.</xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName> </xref:System.String.Empty?displayProperty=fullName> Tej właściwości należy ustawić przed rozpoczęciem wyliczania zasobów."
  example:
  - "The following example creates an XML resource file that contains images of dog breeds, and also creates a string resource that specifies the application that created the resource. <xref:System.Resources.ResXFileRef> objects are used to store the path to the images rather than storing the binary images themselves in the resource file. The example sets the BasePath property so that the relative file paths in the images' file names are interpreted as subdirectories of a directory named C:\\data\\\\.  \n  \n [!code-vb[System.Resources.ResXResourceReader.BasePath#1](~/add/codesnippet/visualbasic/p-system.resources.resxr_1_1.vb)]\n [!code-cs[System.Resources.ResXResourceReader.BasePath#1](~/add/codesnippet/csharp/p-system.resources.resxr_1_1.cs)]  \n  \n Note that you must add a reference to System.Drawing.dll to compile the project successfully. The example also requires that the necessary images exist in a directory named C:\\data\\images\\\\."
  syntax:
    content: public string BasePath { get; set; }
    return:
      type: System.String
      description: "Ścieżka, że jeśli dołączany na początku ścieżka względna jest określona w <xref href=&quot;System.Resources.ResXFileRef&quot;> </xref> obiekt; daje ścieżka bezwzględna do pliku zasobów."
  overload: System.Resources.ResXResourceReader.BasePath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "W operacji set nie można określić wartości, ponieważ plik XML zasób ma już dostępne i jest używany."
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.Close
  id: Close
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: Close()
  nameWithType: ResXResourceReader.Close()
  fullName: System.Resources.ResXResourceReader.Close()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Zwalnia wszelkie zasoby używane przez <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref>."
  remarks: "Wywoływanie zamknięcia umożliwia zasoby używane przez <xref:System.Resources.ResXResourceReader>odbiorczego do innych celów.</xref:System.Resources.ResXResourceReader> Aby uzyskać więcej informacji na temat Zamknij zobacz [czyszczenie zasobów niezarządzanych](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example displays the resources of a file to the console, and then uses the Close method to shut down the reader and to make its resources available for other processes.  \n  \n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/m-system.resources.resxr_2_1.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/m-system.resources.resxr_2_1.cs)]\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_2_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Resources.ResXResourceReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ResXResourceReader.Dispose(Boolean)
  fullName: System.Resources.ResXResourceReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Zwalnia zasoby niezarządzane używane przez <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> i opcjonalnie zwalnia zasoby zarządzane."
  remarks: "Ta metoda może być wywoływany przez albo <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A>metody lub <xref:System.Object.Finalize%2A?displayProperty=fullName>metody.</xref:System.Object.Finalize%2A?displayProperty=fullName> </xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A>Wywołanie tej metody za pomocą `disposing` ustawiono parametr `true`.</xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> <xref:System.Object.Finalize%2A>Wywołanie tej metody za pomocą `disposing` ustawioną `false`.</xref:System.Object.Finalize%2A>       Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Resources.ResXResourceReader>odwołań.</xref:System.Resources.ResXResourceReader> Ta metoda wywołuje `Dispose` metody każdego odwołuje się do obiektu."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.Resources.ResXResourceReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.Finalize
  id: Finalize
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: Finalize()
  nameWithType: ResXResourceReader.Finalize()
  fullName: System.Resources.ResXResourceReader.Finalize()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Ten element członkowski zastępuje <xref:System.Object.Finalize*>metody.</xref:System.Object.Finalize*>"
  syntax:
    content: ~ResXResourceReader ();
    parameters: []
  overload: System.Resources.ResXResourceReader.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String)
  id: FromFileContents(System.String)
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: FromFileContents(String)
  nameWithType: ResXResourceReader.FromFileContents(String)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Tworzy nowy <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> obiektu i inicjuje go odczytać ciągu, których zawartość jest w formie pliku XML zasobów."
  syntax:
    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents);
    parameters:
    - id: fileContents
      type: System.String
      description: "Ciąg zawierający informacje o formacie zasobów XML."
    return:
      type: System.Resources.ResXResourceReader
      description: "Obiekt, który odczytuje zasoby z <code> fileContents </code> ciąg."
  overload: System.Resources.ResXResourceReader.FromFileContents*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  id: FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: FromFileContents(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.FromFileContents(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,ITypeResolutionService)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Tworzy nowy <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> obiektu i inicjuje go odczytać ciągu, których zawartość jest w formie pliku XML zasób i użyj <xref href=&quot;System.ComponentModel.Design.ITypeResolutionService&quot;> </xref> obiekt do rozpoznania nazwy typu określone w zasobie."
  syntax:
    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: fileContents
      type: System.String
      description: "Ciąg zawierający informacje o formacie zasobów XML."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Obiekt, który jest rozpoznawana wpisz nazwy określone w zasobie."
    return:
      type: System.Resources.ResXResourceReader
      description: "Obiekt, który odczytuje zasoby z <code> fileContents </code> ciąg."
  overload: System.Resources.ResXResourceReader.FromFileContents*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  id: FromFileContents(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: FromFileContents(String,AssemblyName[])
  nameWithType: ResXResourceReader.FromFileContents(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,AssemblyName[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Tworzy nowy <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> obiektu i inicjuje go odczytać ciągu, których zawartość jest w formie pliku XML zasób i użyj tablicy <xref:System.Reflection.AssemblyName>obiektów można rozpoznać nazwy typu określone w zasobie.</xref:System.Reflection.AssemblyName>"
  syntax:
    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: fileContents
      type: System.String
      description: "Ciąg, których zawartość jest w formie pliku XML zasobów."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Tablica <xref:System.Reflection.AssemblyName>obiektów, które określa jeden lub więcej zestawów.</xref:System.Reflection.AssemblyName> Zestawy są używane do rozpoznawania Nazwa typu w zasobie rzeczywistego typu."
    return:
      type: System.Resources.ResXResourceReader
      description: "Obiekt, który odczytuje zasoby z <code> fileContents </code> ciąg."
  overload: System.Resources.ResXResourceReader.FromFileContents*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.GetEnumerator
  id: GetEnumerator
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ResXResourceReader.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Zwraca moduł wyliczający dla bieżącego <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> obiektu."
  remarks: "Metody GetEnumerator pobiera pary nazwa/wartość w strumieniu XML zasobów (resx) lub ciąg skojarzone z bieżącym <xref:System.Resources.ResXResourceReader>obiektu.</xref:System.Resources.ResXResourceReader> Jednak jeśli <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>właściwość jest ustawiona na `true` przed wywołaniem GetEnumerator pobierania elementów zasobu jako <xref:System.Resources.ResXDataNode>obiektów.</xref:System.Resources.ResXDataNode> </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> W tym przypadku zwracane są wszystkie węzły zasobów niezależnie od tego typu."
  example:
  - "The following example uses the GetEnumerator method to obtain an <xref:System.Collections.IDictionaryEnumerator> object that is used to enumerate the resources in a .resx file. The example includes a `CreateResourceFile` routine that creates the necessary resource file.  \n  \n [!code-cs[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/csharp/m-system.resources.resxr_0_1.cs)]\n [!code-vb[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_0_1.vb)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Moduł wyliczający dla bieżącego <xref href=&quot;System.Resources.ResourceReader&quot;> </xref> obiektu."
  overload: System.Resources.ResXResourceReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator
  id: GetMetadataEnumerator
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: GetMetadataEnumerator()
  nameWithType: ResXResourceReader.GetMetadataEnumerator()
  fullName: System.Resources.ResXResourceReader.GetMetadataEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Zawiera słownik moduł wyliczający, który można pobrać właściwości czasu projektowania z bieżącego pliku zasobu XML lub strumienia."
  remarks: "Zasoby są przechowywane jako pary nazwa/wartość w pliku zasobów lub strumienia. Właściwości czasu projektowania, które są nazywane metadanych, są przechowywane w pliku zasobów lub strumienia wraz ze środowiska uruchomieniowego zasobów danych. Udostępnia metody GetMetadataEnumerator <xref:System.Collections.IDictionaryEnumerator>obiekt, który można pobrać metadanych z pliku zasobów lub strumienia skojarzonego z bieżącym <xref:System.Resources.ResXResourceReader>obiektu.</xref:System.Resources.ResXResourceReader> </xref:System.Collections.IDictionaryEnumerator> Jednak jeśli <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>właściwość jest ustawiona na `true` przed wywołaniem GetMetadataEnumerator żadnych węzłów zasobów są pobierane.</xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>"
  example:
  - "The following example uses the GetMetadataEnumerator method to iterate through the metadata resources in an XML resource file. This code example is part of a larger example provided for the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property.  \n  \n [!code-vb[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/visualbasic/m-system.resources.resxr_4_1.vb)]\n [!code-cpp[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/cpp/m-system.resources.resxr_4_1.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/csharp/m-system.resources.resxr_4_1.cs)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetMetadataEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Moduł wyliczający dla metadanych w zasobie."
  overload: System.Resources.ResXResourceReader.GetMetadataEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Zwraca moduł wyliczający dla bieżącego <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> obiektu. Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt; metody."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Resources.ResXResourceReader>wystąpienia jest rzutowane na <xref:System.Collections.IEnumerable>interfejsu.</xref:System.Collections.IEnumerable> </xref:System.Resources.ResXResourceReader> Aby wyliczyć zasobów w pliku .resx, firma Microsoft zaleca, należy wywołać <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName>metody, a następnie wywołania `MoveNext` metody w zwróconym <xref:System.Collections.IDictionaryEnumerator>obiektu.</xref:System.Collections.IDictionaryEnumerator> </xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Moduł wyliczający, który można wykonać iterację pary nazwa/wartość w strumieniu XML zasobów (resx) lub ciąg skojarzone z bieżącym <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> obiektu."
  overload: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ResXResourceReader.System.IDisposable.Dispose()
  fullName: System.Resources.ResXResourceReader.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Zwalnia zasoby niezarządzane używane przez <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> i opcjonalnie zwalnia zasoby zarządzane. Opis tego elementu członkowskiego, zobacz &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; metody."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Resources.ResXResourceReader>wystąpienia jest rzutowane na <xref:System.IDisposable>interfejsu.</xref:System.IDisposable> </xref:System.Resources.ResXResourceReader>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Resources.ResXResourceReader.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.UseResXDataNodes
  id: UseResXDataNodes
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
  fullName: System.Resources.ResXResourceReader.UseResXDataNodes
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Pobiera lub ustawia wartość wskazującą, czy <xref href=&quot;System.Resources.ResXDataNode&quot;> </xref> obiekty są zwracane podczas odczytywania bieżącego pliku zasobu XML lub strumienia."
  remarks: "Można ustawić właściwości UseResXDataNodes, przed rozpoczęciem wyliczania zasobów. Domyślnie, jego wartość wynosi `false`."
  example:
  - "The following example enumerates and displays resource items in an XML file. Initially, UseResXDataNodes is set to `false` to show both data and metadata items as they occur in the resource file. The second enumeration has the UseResXDataNodes set to `true` so that resource data elements are returned as <xref:System.Resources.ResXDataNode>objects.  \n  \n [!code-vb[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/visualbasic/p-system.resources.resxr_0_1.vb)]\n [!code-cpp[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/cpp/p-system.resources.resxr_0_1.cpp)]\n [!code-cs[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/csharp/p-system.resources.resxr_0_1.cs)]  \n  \n The resource XML file used by the example contains one data node and one metadata node. To use the XML file with the previous example, copy the following text and save it to a file named Resource1.resx.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<root>  \n  <resheader name=\"resmimetype\">  \n    <value>text/microsoft-resx</value>  \n  </resheader>  \n  <resheader name=\"version\">  \n    <value>2.0</value>  \n  </resheader>  \n  <resheader name=\"reader\">  \n    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,  \n           Culture=neutral, PublicKeyToken=b77a5c561934e089  \n    </value>  \n  </resheader>  \n  <resheader name=\"writer\">  \n    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,  \n           Culture=neutral, PublicKeyToken=b77a5c561934e089  \n    </value>  \n  </resheader>  \n  <data name=\"DataSample\" xml:space=\"preserve\">  \n    <value>Sample DATA value</value>  \n  </data>  \n  <metadata name=\"MetadataSample\">  \n    <value>Sample METADATA value</value>  \n  </metadata>  \n</root>  \n```"
  syntax:
    content: public bool UseResXDataNodes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli węzły dane zasobu są pobierane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli węzłów dane zasobu są ignorowane."
  overload: System.Resources.ResXResourceReader.UseResXDataNodes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "W ramach operacji zestawu modułu wyliczającego dla pliku zasobów, czy strumień jest już otwarty."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(Stream)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(TextReader)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Resources.ResXResourceReader.#ctor(System.String)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(String)
  nameWithType: ResXResourceReader.ResXResourceReader(String)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(Stream,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
- uid: System.ComponentModel.Design.ITypeResolutionService
  parent: System.ComponentModel.Design
  isExternal: false
  name: ITypeResolutionService
  nameWithType: ITypeResolutionService
  fullName: System.ComponentModel.Design.ITypeResolutionService
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(Stream,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
- uid: System.Reflection.AssemblyName[]
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName[]
  spec.csharp:
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: AssemblyName[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(TextReader,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(TextReader,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(String,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,AssemblyName[])
- uid: System.Resources.ResXResourceReader.BasePath
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
  fullName: System.Resources.ResXResourceReader.BasePath
- uid: System.Resources.ResXResourceReader.Close
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Close()
  nameWithType: ResXResourceReader.Close()
  fullName: System.Resources.ResXResourceReader.Close()
- uid: System.Resources.ResXResourceReader.Dispose(System.Boolean)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ResXResourceReader.Dispose(Boolean)
  fullName: System.Resources.ResXResourceReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.ResXResourceReader.Finalize
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Finalize()
  nameWithType: ResXResourceReader.Finalize()
  fullName: System.Resources.ResXResourceReader.Finalize()
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents(String)
  nameWithType: ResXResourceReader.FromFileContents(String)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String)
- uid: System.Resources.ResXResourceReader
  parent: System.Resources
  isExternal: false
  name: ResXResourceReader
  nameWithType: ResXResourceReader
  fullName: System.Resources.ResXResourceReader
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.FromFileContents(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,ITypeResolutionService)
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents(String,AssemblyName[])
  nameWithType: ResXResourceReader.FromFileContents(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,AssemblyName[])
- uid: System.Resources.ResXResourceReader.GetEnumerator
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: ResXResourceReader.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetMetadataEnumerator()
  nameWithType: ResXResourceReader.GetMetadataEnumerator()
  fullName: System.Resources.ResXResourceReader.GetMetadataEnumerator()
- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ResXResourceReader.System.IDisposable.Dispose()
  fullName: System.Resources.ResXResourceReader.System.IDisposable.Dispose()
- uid: System.Resources.ResXResourceReader.UseResXDataNodes
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
  fullName: System.Resources.ResXResourceReader.UseResXDataNodes
- uid: System.Resources.ResXResourceReader.#ctor*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader
  nameWithType: ResXResourceReader.ResXResourceReader
- uid: System.Resources.ResXResourceReader.BasePath*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
- uid: System.Resources.ResXResourceReader.Close*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Close
  nameWithType: ResXResourceReader.Close
- uid: System.Resources.ResXResourceReader.Dispose*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Dispose
  nameWithType: ResXResourceReader.Dispose
- uid: System.Resources.ResXResourceReader.Finalize*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Finalize
  nameWithType: ResXResourceReader.Finalize
- uid: System.Resources.ResXResourceReader.FromFileContents*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents
  nameWithType: ResXResourceReader.FromFileContents
- uid: System.Resources.ResXResourceReader.GetEnumerator*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetEnumerator
  nameWithType: ResXResourceReader.GetEnumerator
- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetMetadataEnumerator
  nameWithType: ResXResourceReader.GetMetadataEnumerator
- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator
- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ResXResourceReader.System.IDisposable.Dispose
- uid: System.Resources.ResXResourceReader.UseResXDataNodes*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
