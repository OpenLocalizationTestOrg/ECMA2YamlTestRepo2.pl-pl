### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  id: WebPartManager
  children:
  - System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  - System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  - System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  - System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  - System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  langs:
  - csharp
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
  type: Class
  summary: "Pełni rolę centralnej klasy zestawu kontroli części sieci Web, zarządzanie wszystkie składniki Web Part formantów, funkcje i zdarzenia występujące na stronie sieci Web."
  remarks: "Formant WebPartManager działa jako centrum koncentratora lub kontroli aplikacji części sieci Web. Musi to być jeden — i tylko jeden — wystąpienie kontrolki WebPartManager na każdej stronie, która używa kontrolki części sieci Web. Podobnie jak w przypadku większości aspektów aplikacji składników Web Part, kontroli WebPartManager działa tylko dla uwierzytelnionych użytkowników. Co więcej jego funkcja działa prawie całkowicie z formantami serwera, które znajdują się w strefach składników Web Part, które dziedziczą z <xref:System.Web.UI.WebControls.WebParts.WebZone>klasy.</xref:System.Web.UI.WebControls.WebParts.WebZone> Formanty serwera, które znajdują się na stronie poza tych stref może być bardzo mało funkcji części sieci Web lub interakcji z formantem WebPartManager.       Jako koncentrator funkcji składników Web Part na stronie formantu WebPartManager wykonuje rodzaje zadań opisanych w poniższej tabeli.      | Kategoria zadania | Co to jest formant |   |-------------------|---------------------------|   | Śledzenie formantów składników Web Part | Przechowuje informacje o wiele różnych formantów na stronie, które zapewniają funkcje części sieci Web, w tym <xref:System.Web.UI.WebControls.WebParts.WebPart>, połączeń, stref, a inne. |   | Dodawanie i usuwanie składników Web Part kontrolki | Udostępnia metody dodawania, usuwania i zamykania <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów na stronie. |   | Administrowanie połączenia | Tworzy połączenia między formantami i monitoruje połączenia, a także procesy dodawania i usuwania ich. |   | Personalizowanie kontrolek i stron | Umożliwia użytkownikom przenoszenie formantów do różnych lokalizacji na stronie i uruchamia widoków, w których użytkownicy mogą edytować wygląd, właściwości i zachowanie formantów.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Przechowuje ustawienia personalizacji specyficzne dla użytkownika na każdej stronie. |   | Przełączanie między widokami innej strony | Zmienia strony między różne widoki specjalne strony, dzięki czemu użytkownicy mogą przeprowadzać niektórych zadań, takich jak zmiana układ strony lub formantów edycji. |   | Wywoływanie zdarzeń cyklu życia części sieci Web | Definiuje, generuje i umożliwiają deweloperom do obsługi zdarzeń cyklu życia formantów części sieci Web, na przykład jeśli formanty są dodawane, przeniesione, połączony, usunięte lub. |   | Włączanie importowanie i eksportowanie kontrolki | Eksportuje strumieni XML, które zawierają stan właściwości formantów <xref:System.Web.UI.WebControls.WebParts.WebPart>i umożliwia importowanie plików dla wygody w personalizowanie złożonych kontrolek w innych stron lub witryn. |       Klasa WebPartManager ma duży zbiór właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPart> Zgodnie z rolą WebPartManager śledzenia inne formanty, ma wiele właściwości, które odwołują się do kolekcji formantów części sieci Web lub innych obiektów specjalnych części sieci Web. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>, I <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>Właściwości są wszystkie kolekcje używany przez formant WebPartManager do jego śledzenia i inne zadania zarządzania.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>       Innej grupy właściwości zawiera dostosowania ostrzeżenia, które są stosowane w niektórych scenariuszach, które występują w aplikacji sieci Web Part. Obejmują one <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>Właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>       Klasa WebPartManager zastępuje niektóre podstawowe właściwości dziedziczone, które są używane przez wiele kontrolki serwera sieci Web. Obejmują one <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>, i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>Właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>       Na koniec istnieje grupa właściwości przydatne w przypadku uzyskiwania dostępu do bieżącego stanu aplikacji. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>Właściwość wskazuje bieżący tryb wyświetlania, że strona jest.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A>Właściwość wskazuje, czy formant może renderować skryptu po stronie klienta, które jest odpowiednie w sytuacjach, gdy użytkownicy mogą mają przeglądarki z różne możliwości lub skryptów wyłączenia.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>Właściwość jest przydatna dla odwołania do klasy narzędzia, która zawiera wywołania do liczby ważne metody części sieci Web, które są używane w przypadku rozszerzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> Ukrywając wywołania tych metod w klasie oddzielne ( <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>klasy), klasa WebPartManager własny interfejs API jest uproszczone.</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>Właściwość zapewnia dostęp do obiektów personalizacji, które przechowują ustawień personalizacji użytkowników i zachować te dane w magazynie trwałym.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>Wskazuje właściwość, która <xref:System.Web.UI.WebControls.WebParts.WebPart>formantu na stronie jest obecnie wybrane przez użytkownika lub aplikacji.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>Właściwość wskazuje, czy dane personalizacji niestandardowe na <xref:System.Web.UI.WebControls.WebParts.WebPart>formant został zmieniony.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>       Formant WebPartManager zawiera pięć trybów wyświetlania wbudowanych lub widoki strony sieci Web. Deweloperzy mogą rozszerzać tej funkcji tworzenia trybów wyświetlania niestandardowych rozszerzając typów, takie jak <xref:System.Web.UI.WebControls.WebParts.WebZone>Klasa lub <xref:System.Web.UI.WebControls.WebParts.ToolZone>klasy.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> Użytkownicy można przełączać strony do różnych trybów wyświetlania, pod warunkiem, że właściwy rodzaj formantów, które odpowiadają tryb wyświetlania danego znajdują się na stronie.      > [!NOTE] > Można rozszerzyć tę funkcję, dzięki czemu użytkownicy mogą przełączać w tryb wyświetlania niestandardowych bez konieczności odpowiadającą strefę na stronie. Domyślnym zachowaniem jest jednak trybów wyświetlania odnoszą się do strefy.       Tryby wyświetlania standardowe są reprezentowane przez pola publiczne w klasie WebPartManager. W poniższej tabeli przedstawiono pola i trybów wyświetlania, których dotyczą. Bieżący tryb wyświetlania strony, jak wspomniano powyżej, zawsze odwołuje się do <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>Właściwości wraz z zestawem trybów wyświetlania, jaki jest dostępny na stronie podany rodzaj stref, które znajdują się na stronie znajduje się w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>Właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>      | Pole | Wyświetl szczegóły trybu |   |-----------|--------------------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>| Zwykły użytkownik widok strony sieci Web; domyślną i najbardziej typowych tryb wyświetlania. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>| Widok, w którym użytkownicy mogą rozmieszczanie lub usunąć formantów, aby zmienić układ strony. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>| Widok, w którym edycji interfejsu użytkownika (UI) staje się widoczna; Użytkownicy mogą edytować wygląd, właściwości i zachowanie formantów, które są widoczne w trybie normalnym przeglądania. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>| Widok, w którym katalogu interfejsu użytkownika staje się widoczna; Użytkownicy mogą dodawać formanty do strony z katalogów dostępnych formantów. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>| Widok, w którym połączenie interfejsu użytkownika staje się widoczna; Użytkownicy mogą połączyć, zarządzania i rozłączenie połączeń między formantami. |       Formant WebPartManager zawiera również liczbę zdarzeń, które są niezbędne w cyklu życia składników Web Part stron i kontrolek.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Zdarzenia te zapewniają dokładne programowe kontrolę nad zachowanie formantów składników Web Part. Większości metod odnoszą się bezpośrednio do <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów (lub inne formanty serwera lub użytkownika, które są umieszczone w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy, dzięki czemu działają jako <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów).</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Jednak kilka zdarzeń odnoszą się do stanu strony lub połączeń na stronie. Poniższej tabeli wymieniono dostępne zdarzenia i podsumowanie ich celów.      > [!NOTE] > We wszystkich przypadkach w poniższej tabeli, word &quot;control&quot; odwołuje się do <xref:System.Web.UI.WebControls.WebParts.WebPart>formant lub każdego formantu serwera, który znajduje się w strefie i jest opakowane <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>obiektu w czasie wykonywania.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>      | Zdarzenia | Opis elementu |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>| Występuje zaraz przed formant został dodany do strony, aby sprawdzić, czy jest autoryzowany. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>| Występuje po uaktywnieniu wszystkich połączeń na stronie. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>| Występuje zaraz przed proces aktywacji wszystkich połączeń na stronie. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>| Występuje po zmianie bieżącego trybu wyświetlania strony. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>| Występuje zaraz przed proces zmiany trybu wyświetlania strony. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>| Występuje po zaznaczenia formantu zostało anulowane. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>| Występuje zaraz przed proces anulowanie zaznaczenia formantu. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>| Występuje po formant został dodany do strefy. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>| Występuje zaraz przed proces dodawania formantu do strefy. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>| Występuje po formant został zamknięty (usunięta ze strony). |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>| Występuje zaraz przed proces zamykania formantu. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>| Występuje po trwale usunięte wystąpienie kontrolki dynamicznej (po jednym utworzonych programowo lub dodać z wykazu). |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>| Występuje zaraz przed proces usuwania dynamicznej kontroli. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>| Występuje, gdy formant zostanie przeniesiona w ramach strefy lub do innej strefy. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>| Występuje zaraz przed proces przechodzenia formantu. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>| Występuje po dwóch formantów wybrane do udziału w połączenie zostało ustanowione połączenie. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>| Występuje zaraz przed proces łączenia dwóch formantów. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>| Występuje po rozłączeniu dwóch formantów połączonych. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>| Występuje zaraz przed procesu rozłączenia dwóch formantów. |       Formant WebPartManager ma wiele metod do zarządzania stronami części sieci Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Duży zbiór metod, niewymienione w tym metodami, których nazwy formę na*EventName*. Te metody zwykle podnieść ich skojarzonego zdarzenia i podaj zdarzenia z obsługą typu <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>.</xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler> Większość tych metod może zostać przesłonięta przez deweloperów, którzy dziedziczyć WebPartManager klasy. Ponadto strona deweloperzy mogą podać niestandardowe programy obsługi dla zdarzenia powiązane z tych metod. Na przykład w odniesieniu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>zdarzeń, deweloper strony można dodać `OnWebPartAdded` atrybutu `<asp:webpartmanager>` elementu w znaczniku strony sieci Web, a następnie przypisz metody niestandardowej nazwy atrybutu by zapewnić niestandardową obsługę zdarzenia.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> Atrybut odpowiada <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>— Metoda i ten podstawowy wzorzec działa w przypadku większości zdarzeń części sieci Web i ich skojarzonych metody obsługi zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>       Ponadto kontrolka WebPartManager ma określonych metod do zarządzania <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów (i kontrolki serwera lub użytkownika używany jako <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów).</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> These methods include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>       Inny zestaw metod jest przeznaczone do połączenia. This includes methods such as <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>       Ponadto niektóre metody WebPartManager skupić się na funkcjonalność personalizacji. These include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>       Aby uzyskać więcej informacji o innych metodach WebPartManager, które są dostępne za pośrednictwem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>Właściwości, można znaleźć w dokumentacji <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>klasy.</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>"
  example:
  - "The following code example demonstrates both declarative and programmatic use of the WebPartManager control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The user control has a drop-down list control that shows the possible display modes on a page, given the Web Parts controls that are present on the page. In the Web page for this code example, this user control is declared just below the WebPartManager element in the page's markup, and there is a `Register` directive near the top of the Web page to register the control. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_1.ascx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_1.ascx)]  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. The page also contains some inline code that handles connection-related events for the WebPartManager control; you can see the effect of this code as you connect and disconnect controls.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_2.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_2.aspx)]  \n  \n The third part of the example is the source code for the controls. Note that there is an interface named `IZipCode`, and this interface is implemented in the `ZipCodeWebPart` class. This class has a special callback method named `ProvideIZipCode` that serves as a provider. The other type, named `WeatherWebPart`, is also implemented with a special method named `GetIZipCode`, which enables the control to act as a consumer of the other control.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you have compiled the source into an assembly, and the `Register` directive in the Web page references the assembly name. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_3.cs)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_3.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection UI appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and then click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. You can enter a ZIP Code, and the consumer control will be updated with the value you enter. Because the `ZipCode` property was marked with the `Personalizable` attribute in the source code, this property value will persist across browser sessions, thus saving the value entered by a user. A more sophisticated consumer control could take the ZIP code information, look up weather information based on the code, and display it to a user."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.ViewStateModeById]

      public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> klasy."
  remarks: "Konstruktor elementu WebPartManager inicjuje kilka ważnych zmiennych <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Przypisanie co bezpośrednio wpływa na wszystkich stronach składników Web Part jest fakt, że ustawiono tryb przeglądania domyślny tryb wyświetlania strony (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>"
  syntax:
    content: public WebPartManager ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  id: ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Uaktywnia wszystkich połączeń na stronie sieci Web, które nie są obecnie aktywne."
  remarks: "Na każde żądanie strony do aktywowania istniejących połączeń między wywoływana jest metoda ActivateConnections <xref:System.Web.UI.WebControls.WebParts.WebPart>i innych kontrolek serwera znajdującej się w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> W niektórych przypadkach do wystąpienia, jeśli istnieje konflikt w połączeniach aktywowana, ta metoda z kolei wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>metodę, aby zakończyć połączenie problematyczne.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Podczas procesu rozłączania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>zdarzenie jest wywoływane.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Zwykle programiści można anulować to zdarzenie, ale w przypadku tam, gdzie to konflikt między połączenia nie może być anulowana, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formant wymaga rozwiązać konflikt, aby zakończyć proces aktywacji połączeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  syntax:
    content: protected virtual void ActivateConnections ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zawiera standardowe programowe metoda dodawania <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formanty do strony sieci Web."
  remarks: "Metoda AddWebPart jest używana zarówno do dodawania nowych dynamicznie <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolki na stronie i ponownie otworzyć formanty statyczne lub dynamiczne, które wcześniej zostały zamknięte na stronie.</xref:System.Web.UI.WebControls.WebParts.WebPart> Po wywołaniu metody, aby dodać nową kontrolkę, faktycznie tworzy kopię formantu, do którego odwołuje się `webPart` parametru. Nowy identyfikator jest generowany kopii formantu, więc deweloperzy powinien odwoływać <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli zwrócona przez metodę, aby uzyskać nową wartość Identyfikatora.</xref:System.Web.UI.WebControls.WebParts.WebPart> Aby ponownie otworzyć wcześniej zamknięte formantu ma zostać wywołana metoda, zwraca bezpośrednie odwołanie do formantu odwołuje się `webPart` parametru.      > [!IMPORTANT] > Zawsze należy używać metody AddWebPart zamiast <xref:System.Web.UI.ControlCollection.Add%2A>metody kolekcji formantów odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName>Właściwości, aby dodać <xref:System.Web.UI.WebControls.WebParts.WebPart>programowo kontrolki do strony, ponieważ używa <xref:System.Web.UI.ControlCollection.Add%2A>Metoda zgłasza wyjątek.</xref:System.Web.UI.ControlCollection.Add%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.ControlCollection.Add%2A> Aby dodać kontrolkę, która nie jest <xref:System.Web.UI.WebControls.WebParts.WebPart>formantu (innymi słowy, formantu serwera, który będzie ujęte w <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>formantu w czasie wykonywania), należy najpierw wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>metodę, aby utworzyć formantu, a następnie wywołaj metodę AddWebPart, aby dodać kontrolki.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Pokaz tego podejścia znajduje się w sekcji przykładu."
  example:
  - "The following code example demonstrates use of the AddWebPart method to add a server control programmatically to a page. The page markup contains an empty `<asp:webpartzone>` element, and an `<asp:webpartmanager>` element. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object, calling the AddWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6da004d9-95d1-4401-9d7e-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6da004d9-95d1-4401-9d7e-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (Lub serwera lub użytkownika) do dodania do strony sieci Web lub otworzyć na stronie."
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> Który `webPart` jest dodawany do."
    - id: zoneIndex
      type: System.Int32
      description: "Liczba całkowita, która reprezentuje numer pozycji, które `webPart` zajmuje w `zone`, względnym w stosunku do innych kontrolek w `zone`."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formant, który został dodany do strony."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>zone</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>zone</code> is not registered in the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control's collection of zones.  \n  \n \\- or -  \n  \n <code>webPart</code> is already in <code>zone</code>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość <code> zoneIndex </code> jest mniejszy od zera."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  id: AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>Metoda jest wywoływana w celu określenia czy <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub kontrolki serwera można dodać do strony.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>"
  remarks: "Zawsze, gdy wystąpi zdarzenie AuthorizeWebPart <xref:System.Web.UI.WebControls.WebParts.WebPart>formant jest dodawany do strony.</xref:System.Web.UI.WebControls.WebParts.WebPart> Istnieje wiele typowych scenariuszy, w którym można dodać formantu do strony. Pełny opis tych, zobacz sekcję uwag dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Po dodaniu formantu musi zaznaczone aby zobaczyć, czy jego <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>właściwość została ustawiona, a jeśli tak, czy formant jest autoryzowany do dodania do strony.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Deweloperzy mogą tworzyć obsługi zdarzeń dla zdarzenia AuthorizeWebPart, aby zapewnić filtrowania dla formantów. Jeśli formantu <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>wartość właściwości nie spełnia kryteriów w kodzie programu obsługi zdarzeń, formant nie został dodany do strony.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the AuthorizeWebPart event, which automatically overrides the default <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method.  \n  \n The code in the `mgr1_AuthorizeWebPart` method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `user` and, if so, returns `true`, which means that they will be authorized and added to the page. This assumes the default approach is to allow users to view controls with a page in user personalization scope. Notice, however, that in the example one of the controls has its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property value set to `admin`. Developers might place this filter on a specialized control that was designed for only administrative users to see. This control will fail the authorization check during the AuthorizeWebPart event, and will not be displayed. Note that controls that do not have the property set are displayed as well; they are assumed not to be part of a filtering scenario because their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties are not set.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_9_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_9_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  id: AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera kolekcję <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> obiektów, które są dostępne dla używany do tworzenia składników Web Part połączeń między formantami serwera."
  remarks: "Ta właściwość używa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>metodę w celu utworzenia kolekcji.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> Domyślnie jest odczytywana dostępnych funkcji przekształcania z pliku konfiguracji aplikacji."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.TransformerTypeCollection&quot;> </xref> zawierający zestaw <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> obiektów."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Uruchamia proces łączenia dwóch <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrolki."
  remarks: "Istnieje metoda BeginWebPartConnecting, tak aby proces tworzenia połączenia między formantami może odbywać się w różnych etapach, podając deweloperom większą kontrolę nad procesem połączenia. Metoda przeprowadza zestawu testów początkowej, aby upewnić się, że `webPart` jest w stanie, w którym połączenie legalnego można tworzone. Jeśli `webPart` pomyślnie przejdzie wszystkie testy, następnie jest ustawiona jako aktualnie zaznaczonego formantu (zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>Właściwości), i kontynuować proces łączenia.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Formant, dla której utworzona jest połączenie."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie jest bieżący tryb wyświetlania na stronie <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Uruchamia proces edycji <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu."
  remarks: "Istnieje metoda BeginWebPartEditing, tak aby proces formantów edycji może odbywać się w różnych etapach, podając deweloperom większą kontrolę nad procesem. Metoda przeprowadza zestawu testów początkowej, aby upewnić się, że `webPart` jest w stanie, w którym można edytować. Jeśli `webPart` pomyślnie przejdzie wszystkie testy, następnie jest ustawiona jako aktualnie zaznaczonego formantu (zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>Właściwości), i kontynuować proces edycji.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Formant do edycji."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie jest bieżący tryb wyświetlania na stronie <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  id: BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Reprezentuje domyślny tryb wyświetlania dla stron, które zawierają formanty części sieci Web. To pole jest tylko do odczytu."
  remarks: "W polu BrowseDisplayMode odwołuje się do niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>obiekt, który jest tworzony i zawarty w <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Ponieważ jest to obiekt statycznych, można odwołać się do niego bezpośrednio za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasy bez konieczności wystąpienia formantu.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Jeśli strona zawierająca składników Web Part steruje pierwszy obciążeń, jest w BrowseDisplayMode (tryb przeglądania) domyślnie. Gdy użytkownicy są po prostu przeglądanie tak samo jak na stronie sieci Web normalne, strony pozostaje w trybie przeglądania. Użytkownicy chcą spersonalizować na stronie układu, kontrolek, wygląd lub zachowanie, ich strony przełączyć na jeden z trybów wyświetlania specjalne dostępne za pośrednictwem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>Właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>"
  example:
  - "The following code example demonstrates how to work with the BrowseDisplayMode field programmatically. The code populates a drop-down list with the supported display modes, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to BrowseDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_5_1.aspx)]\n [!code-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_5_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page that indicates you are in browse mode. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now hidden."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Sprawdza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantów, które będą uczestniczyć w ramach połączenia, aby określić, czy są w stanie połączenia, jeżeli kontroli klienta i dostawcy interfejsy zgodne i na <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> obiektu nie jest wymagana."
  remarks: "Ta metoda służy do łączenia `provider` i `consumer` gdy oba formanty mają niezgodne połączenia punktu typy, tak aby <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>obiektu nie jest potrzebna.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Można użyć tej metody do Sprawdź, czy dwa formanty można połączenie przed wywołaniem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>Aby utworzyć połączenie programowe.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       To przeciążenie używa tej samej implementacji jako <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>przeciążenie metody, z wyjątkiem jest to przeciążenie nie wymaga transformatora.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>"
  example:
  - "The following code example demonstrates how to use this method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, an `<asp:webpartmanager>` element, and some event-handling code that creates a connection using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks whether the connection can be made and, if so, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. It contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, one acting as a provider, and the other as a consumer. Because they have compatible connection points (both of them recognize the `IZipCode` interface), a transformer is not needed to make the connection. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_2.cs)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_2.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method."
  syntax:
    content: public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Formant, który dostarcza dane do `consumer` po nawiązaniu połączenia kontrolki."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> , który umożliwia `provider` brać udziału w połączeniu."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Formant, który odbiera dane z `provider` po nawiązaniu połączenia kontrolki."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> działający jako metoda wywołania zwrotnego tak że `consumer` mogą uczestniczyć w połączeniu."
    return:
      type: System.Boolean
      description: "Wartość logiczna, która wskazuje, czy <code> provider </code> i <code> consumer </code> mogą zostać połączone."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Sprawdza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantów, które będą uczestniczyć w ramach połączenia, aby ustalić, czy są w stanie połączenia i używa <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> obiekt, aby utworzyć połączenie między niezgodne klienta oraz dostawcy."
  remarks: "Ta metoda służy do łączenia `provider` i `consumer` gdy oba formanty mają niezgodne połączenia punktu typy, tak aby <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>wymagany jest obiekt.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Można użyć tej metody do Sprawdź, czy dwa formanty można połączenie przed wywołaniem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>Aby utworzyć połączenie programowe.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       To przeciążenie używa tej samej implementacji jako <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>przeciążenie metody, z wyjątkiem jest, że to przeciążenie wymaga transformatora.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>"
  syntax:
    content: public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Formant, który dostarcza dane do `consumer` po nawiązaniu połączenia kontrolki."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> działający jako metoda wywołania zwrotnego tak że `provider` mogą uczestniczyć w połączeniu."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Formant, który odbiera dane z `provider` po nawiązaniu połączenia kontrolki."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> działający jako metoda wywołania zwrotnego tak że `consumer` mogą uczestniczyć w połączeniu."
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> , który umożliwia niezgodną `provider` i `consumer` się połączyć."
    return:
      type: System.Boolean
      description: "Wartość logiczna, która wskazuje, czy <code> provider </code> i <code> consumer </code> może się komunikować."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  id: CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Reprezentuje tryb wyświetlania służąca do dodawania formantów serwera z katalogu formantów do strony sieci Web. To pole jest tylko do odczytu."
  remarks: "W polu CatalogDisplayMode odwołuje się do niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>obiekt, który jest tworzony i zawarty w <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Ponieważ jest to obiekt statycznych, można odwołać się do niego bezpośrednio za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasy bez konieczności wystąpienia formantu.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Kiedy użytkownik chce dodawanie formantów do strony, jeśli katalog formantów serwera jest dostępny, można przełączyć strony CatalogDisplayMode (tryb katalogu), a zostanie wyświetlony katalogu interfejs użytkownika (UI). Interfejs użytkownika dla wykaz części sieci Web są udostępniane przez <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>strefy kontroli.</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Deweloperzy tej strefy, Dodaj do strony w czasie projektowania, a następnie dodaj formanty serwera do strefy, dzięki czemu użytkownicy będą mogli dodawać tych kontrolek do stron w czasie wykonywania. Po dodaniu tych kontrolek dewelopera trybu katalogu staje się tryb wyświetlania obsługiwane na tej stronie, ponieważ istnieją niezbędnych opcji Aby włączyć tryb katalogu.       Gdy użytkownik przełącza strony do katalogu tryb, strefie i wszystkich kontrolek serwera, które zostały dodane do niego stają się widoczne i użytkownik może wybrać formantów z katalogu, aby dodać do strony lub usuwanie kontrolek na stronie. Po dodaniu kontrolki na stronie pojawią się one w trybie normalnym przeglądania i aktualizacji strony."
  example:
  - "The following code example demonstrates how to work with the CatalogDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and catalog. The catalog mode is available because of the `<asp:CatalogZone>` element and its child elements in the Web page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to CatalogDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_3_1.aspx)]\n [!code-cs[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_3_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to catalog mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. You can select the control in the catalog and add it to either of the two zones on the page."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  id: CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Sprawdza możliwości przeglądarki, dzięki czemu żądania i wartość <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>Właściwości, aby określić, czy do renderowania klienta skryptu</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>"
  syntax:
    content: protected virtual bool CheckRenderClientScript ();
    parameters: []
    return:
      type: System.Boolean
      description: "Wartość logiczna, która wskazuje, czy do renderowania skrypt po stronie klienta."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  id: CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera lub ustawia ostrzeżenie jest wyświetlane, gdy użytkownik zamyka formant, który działa jako dostawca do innych kontrolek w połączeniu."
  remarks: "Gdy użytkownik zamyka <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolować, zwykle komunikat nie jest wyświetlony.</xref:System.Web.UI.WebControls.WebParts.WebPart> Aby uzyskać więcej informacji o tym, co oznacza zamknąć formantu, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>       Jednak gdy formant jest połączony z formantem i działa jako dostawcy danych do innych kontroli, domyślne wyświetlany jest komunikat ostrzegawczy, gdy użytkownik próbuje zamknąć formantu. Komunikat informuje użytkowników kontroli dostawcy o zbliżającym się zamknąć, które oznacza, że kontrolki podłączone do tego dostawcy, jak konsumentów nie będą już zawierały danych do pracy. Właściwość CloseProviderWarning umożliwia deweloperom dostosować komunikat ostrzegawczy, który jest widoczny dla użytkownika.       Jeśli projektant strony przypisuje wartość pusty lub zerowy ciąg do tej właściwości, nie komunikat ostrzegawczy będą wyświetlane, gdy użytkownik zamyka <xref:System.Web.UI.WebControls.WebParts.WebPart>formant, który jest dostawcą.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the CloseProviderWarning property to display a custom warning to users.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to assign a custom warning message to the CloseProviderWarning property in declarative markup in the `<asp:webpartmanager>` element.  \n  \n [!code-cs[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_979_1.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_979_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Finally, click the verbs menu for the **ZIP Code** control (which is the provider control in this case) and select **Close**. The custom message you assigned to the CloseProviderWarning property is displayed."
  syntax:
    content: public virtual string CloseProviderWarning { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera komunikat ostrzegawczy. Wartość domyślna to specyficzne dla kultury wiadomość dostarczona przez program .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zamyka <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroli w taki sposób, że nie jest renderowany na stronie sieci Web, ale można je otworzyć ponownie."
  remarks: "Metoda CloseWebPart usuwa <xref:System.Web.UI.WebControls.WebParts.WebPart>lub inny serwer sterowanie tak, aby nie jest renderowany na stronie sieci Web, który pierwotnie zawarty go.</xref:System.Web.UI.WebControls.WebParts.WebPart> Zamknięte formant został dodany do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>obiektu, który przechowuje odwołanie do zamkniętego formantu i umożliwia formantu ma zostać przywrócony do strony.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Zamkniętej <xref:System.Web.UI.WebControls.WebParts.WebPart>formant jest nadal wyświetlana w kolekcji odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>Właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Zamykanie formantu różni się od jego usunięciem. Formanty zamkniętego są nadal dostępne, można przywrócić do strony, ale wystąpienie usunięto formantu zostanie usunięty i nigdy nie można przywrócić. Niezależnie od tego, czy <xref:System.Web.UI.WebControls.WebParts.WebPart>lub kontrolki serwera jest statyczny (deklaracja w znaczniku strony) lub dynamiczny (dodany do strony programowo lub przez użytkownika z katalogu części sieci Web), można zamknąć i otworzyć ponownie na stronie.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Zazwyczaj użytkowników można zamknąć <xref:System.Web.UI.WebControls.WebParts.WebPart>sterowania, klikając menu zleceń i wybierając Zlecenie zamknięcia.</xref:System.Web.UI.WebControls.WebParts.WebPart> Formant może zostać zamknięty również przez bezpośrednie wywołanie metody CloseWebPart i przekazanie jej przez odwołanie do `webPart`.       Na stronie gdzie <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty zostały zamknięte, jeśli deklaruje dewelopera `<asp:catalogzone>` elementu i jego dodaje `<asp:pagecatalogpart>` elementu udostępnia prosty interfejs użytkownika (UI) dla użytkowników przywrócić zamkniętego formantów strony w czasie wykonywania.</xref:System.Web.UI.WebControls.WebParts.WebPart> Użytkownicy mogą przełączać strony do trybu wyświetlania katalogu i formanty zamkniętego pojawi się w katalogu strony. Użytkownicy mogą wybierz formanty zamknięte i dodaj je wróć do strony w dowolnym miejscu chcą, a następnie wybrane formanty są przywracane do strony i renderowane jako standardowa.       Po wywołaniu metody CloseWebPart zgłasza kilka zdarzeń: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>(jeśli istnieje wiele formantów), i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>(jeśli istnieją formanty połączonych).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Zwykle programiści można anulować te zdarzenia, ale w niektórych przypadkach nie jest możliwe je anulować. Aby uzyskać więcej informacji, zobacz dokumentację <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>, i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  example:
  - "The following code example demonstrates how to use the CloseWebPart method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_1.vb)]\n [!code-cs[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_1.cs)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with an <`asp:pagecatalogpart>` element declared within it. This is what will contain the closed <xref:System.Web.UI.WebControls.WebParts.WebPart> control and enable users to add it back to the page. The `Button1_Click` method directly calls the CloseWebPart method to close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, although a user can also close the control through the verbs menu.  \n  \n [!code-cs[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_2.aspx)]  \n  \n After you load the page in a browser, close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control by clicking the verbs menu (the arrow symbol) in the header of the control, and clicking **Close**. Now change the page to catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. The page catalog appears with the closed control. Select the check box next to the closed control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. The control is restored to the page. Now close it again, this time by clicking the **Close WebPart** button."
  syntax:
    content: public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub formantu serwera, który zostaje zamknięte w <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n \\- or -  \n  \n <code>webPart</code> is a shared control and has already been closed by another user."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  id: ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Reprezentuje tryb wyświetlania służący do wyświetlania interfejs specjalnego użytkownika (UI) dla użytkowników do zarządzania połączeniami między <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrolki. To pole jest tylko do odczytu."
  remarks: "W polu ConnectDisplayMode odwołuje się do niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>obiekt, który jest tworzony i zawarty w <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Ponieważ jest to obiekt statycznych, można odwołać się do niego bezpośrednio za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasy bez konieczności wystąpienia formantu.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Gdy użytkownicy mają być zarządzane połączeń między <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolki na stronie sieci Web, jeśli <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>Strefa została zadeklarowana na stronie one można przełączać strony do trybu ConnectDisplayMode.</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Tryb wyświetlania connect Wyświetla specjalne interfejsu użytkownika do zarządzania połączeniami, w tym możliwość Połącz lub Rozłącz formantów i zmienić szczegóły istniejących połączeń.       Jeśli chcesz zapewnić użytkownikom możliwość zarządzania połączeniami przy użyciu interfejsu użytkownika udostępniane przez zestaw kontroli części sieci Web, muszą deklarować `<asp:connectionszone>` elementu w znaczniku strony. W odróżnieniu od innych typów elementów <xref:System.Web.UI.WebControls.WebParts.WebZone>stref, dodawanie innych tagów wewnątrz tego elementu nie jest konieczne; po prostu zadeklarować elementu samodzielnie.</xref:System.Web.UI.WebControls.WebParts.WebZone>"
  example:
  - "The following code example demonstrates the usage of the ConnectDisplayMode mode.  \n  \n The code example has three parts:  \n  \n-   A source file that contains an interface and custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection.  \n  \n-   A Web page that provides a connection UI and demonstrates working with the ConnectDisplayMode mode.  \n  \n-   An explanation of how to run the example.  \n  \n The first part of the code example is a source file that contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that are designed so they can be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compilation approach. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_1.cs)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_1.vb)]  \n  \n The second part of the example is a Web page that hosts the custom controls. Within the server `<script>` tags on the page are several methods that populate a drop-down list with the display modes available on the page. A user can select these from the drop-down list to change the page's display mode. One of the available display modes is connect display mode, because an `<asp:connectionszone>` element is declared in the page's markup. Notice that this element does not contain any other child elements; it exists only to enable the connection management UI for users.  \n  \n The ConnectDisplayMode mode appears in this example in two places. First, in the `Page_Init` method, the connect display mode is added to the drop-down list of display modes, as the code loops through the collection referenced in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property. Second, the `Page_PreRender` method checks the current display mode on the page, and if the current mode is ConnectDisplayMode, a message is displayed in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_2.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_2.aspx)]  \n  \n After you load the page in a browser, click the drop-down list and select **Connect** to switch the page into connect display mode. Notice that a message appears, telling you that the page is in connect display mode. Now click the verbs menu (an arrow symbol) in the title bar of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and then click **Connect** in the verbs menu. After the connection UI is displayed, click the link to create a connection. Use the drop-down list within the connection UI that appears, select the other control that will participate in the connection, and click the **Connect** button. The connection is established. Click the **Close** button, and then use the drop-down list at the top of the page to return the page to browse display mode."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  id: Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera odwołanie do kolekcji wszystkich bieżących połączeń na stronie sieci Web."
  remarks: "Właściwość połączenia umożliwia dostęp do bieżącego zestawu połączeń na stronie. Sama kolekcja jest tylko do odczytu i deweloperów, którzy chcą do manipulowania określonego połączenia z kolekcji, należy użyć <xref:System.Web.UI.WebControls.WebParts.WebPartManager>metody, takie jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to use the Connections property programmatically to get the count of current connections on a page. Note that in the `<script>` tag section, the code to handle two events for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control accesses the Connections property to obtain the count.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_34_1.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_34_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) displays, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Note that a label now displays the number of connections and the number of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. If you now return to connect mode and disconnect the two controls, when you return to browse mode, the label's content should be updated and there should be no connections."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> zawierający zestaw <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> obiektów."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  id: ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje po wszystkich bieżących połączeń części sieci Web na stronie tylko nie są połączone, ale również zaczęli aktywnie udostępniania danych między formantami klienta i dostawcy objętego każdego połączenia."
  remarks: "W cyklu życia połączeń to zdarzenie występuje po ukończeniu procesu ładowania. Występuje także po <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>zdarzeń, który wskazuje, że tylko <xref:System.Web.UI.WebControls.WebParts.WebPart>lub pomyślnie nawiązano połączenie kontrolki serwera objętego określonego połączenia.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> W przypadku których istnieje wiele połączeń na stronie metody ConnectionsActivated wskazuje, że wszystkie prawidłowe połączenia składników Web Part na stronie teraz aktywne i mogli udostępniać dane. Wiedząc, że wszystkie połączenia są aktywne, deweloperzy mogą przeprowadzać dowolną liczbę zadań, takich jak powiadamianie użytkowników o stanie wszystkich połączeń powiadamiania formanty użytkownika do przetwarzania i wyświetlane dane z ich dostawców i tak dalej.       To zdarzenie jest skojarzony z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>metodę, która wywołuje zdarzenie i umożliwia deweloperom tworzenie niestandardowe programy obsługi dla zdarzenia.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>       Strona deweloperzy mogą tworzyć niestandardowe obsługi dla zdarzenia przez dodanie `OnConnectionsActivated` atrybutu `<asp:webpartmanager>` elementu na stronie i przypisując nazwę niestandardowej metody z atrybutem."
  syntax:
    content: public event EventHandler ConnectionsActivated;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  id: ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje podczas procesu aktywacji wszystkich ustalonych połączeń części sieci Web na stronie sieci Web."
  remarks: "W cyklu życia połączeń, to zdarzenie występuje jako stronę ukończenia tuż przed jego proces ładowania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>Metoda jest wywoływana.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Różni się od <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>zdarzenie, które obejmuje danego połączenia między <xref:System.Web.UI.WebControls.WebParts.WebPart>lub innych formantów serwera.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> Zdarzenie ConnectionsActivating występuje, gdy wszystkie możliwe połączenia na stronie zostaną podłączone i mają być aktywowany.       Zdarzenie ConnectionsActivating jest skojarzony z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>metodę, która wywołuje zdarzenie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> Formant deweloperów, którzy chcą rozszerzyć typ połączenia, które mogą zostać dodane do strony można zastąpić chronionej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>— Metoda i Aktywuj dodatkowe typy połączeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>       Strona deweloperzy mogą tworzyć niestandardowe obsługi dla zdarzenia przez dodanie `OnConnectionsActivating` atrybutu `<asp:webpartmanager>` elementu na stronie i przypisując nazwę niestandardowej metody z atrybutem."
  syntax:
    content: public event EventHandler ConnectionsActivating;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Tworzy połączenie między dwoma <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> steruje przy użyciu tylko odwołania do formantów i ich określonego <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> obiektów."
  remarks: "To przeciążenie służy do łączenia formantów, jeśli ich punkty połączenia nie są wystarczająco zgodne, aby umożliwić im połączenie bez użycia <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>obiektu.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Po wywołaniu tego przeciążenia metody ją po prostu przekazuje wywołanie innych wersji przeciążonej metody i przekazuje `null` dla parametru, który wymaga <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>obiektu.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>       Podczas próby połączenia dwóch formantów programowo, można użyć <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>metody warunkowego sprawdzenie w celu określenia, czy formanty może być bezpośrednio połączony.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>"
  example:
  - "The following code example demonstrates how to use this method to create a connection programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. From that example, you will need the source code for the user control that allows you to change display modes on the page, and the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The code for the Web page that hosts the two controls follows. The page uses `Register` directives at the top to declare the user control and the custom controls. The custom controls are then referenced declaratively within an `<asp:webpartzone>` element. The code that handles the `Button1_Click` method creates a connection between the controls by using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/csharp/4892fea4-8419-4966-aca7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/visualbasic/4892fea4-8419-4966-aca7-_1.aspx)]  \n  \n After you load the page in a browser, click the **Connect WebPart Controls** button to form the connection. You can then enter some data in the text box, and click the **Enter 5-digit ZIP Code** button to demonstrate that the controls are connected, and that data entered in the first control is updated in the second."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formant, który ma rolę otrzymanie danych do innego połączenia kontroli."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Metoda, która służy jako metoda wywołania zwrotnego dla połączenia. Zgodnie z implementacją w zestawie formantu części sieci Web, jest to metoda publiczna w `provider` oznaczona z <xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;> </xref> atrybutu metadanych."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu, który ma rolę odbieranie danych z `provider`, a następnie przetwarzania lub wyświetlanie."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Metody, która łączy się z usługą `providerConnectionPoint` do odbioru danych dla połączenia. Zgodnie z implementacją w zestawie formantu części sieci Web, jest to metoda publiczna w `consumer` oznaczona z <xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;> </xref> atrybutu metadanych."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> zawiera różne informacje o dostawcy i klienta wymagane dla połączenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> Formantu kolekcja kolekcji dynamicznych jest tylko do odczytu."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Tworzy połączenie między dwoma <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> kontrolki, używając odwołań z formantami, ich określonego <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> obiektów, a <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> obiektu."
  remarks: "To przeciążenie używany do łączenia formantów podczas ich punktów połączenia są niezgodne. Niezgodność występuje, gdy `consumer` implementuje interfejs inny niż `provider` jako punktu połączenia. Transformator konwertuje je na typ, który zostały zrozumiane przez `consumer`."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> rolą otrzymanie danych do innego połączenia formantu."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Metoda publiczna w `provider` który jest oznaczony atrybutem <xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;> </xref> atrybutu metadanych i służy jako metoda wywołania zwrotnego dla połączenia."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> rolą odbierania danych z `provider` lub `transformer`, a następnie przetwarzania lub wyświetlanie."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Metoda publiczna w `consumer` oznaczona z <xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;> </xref> atrybutu metadanych i nawiązanie połączenia z `providerConnectionPoint` do odbioru danych dla połączenia."
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> , który umożliwia połączenie między dwóch formantów za pomocą konwersji danych z `provider` na format, który `consumer` może przetwarzać."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> zawierający informacje o dostawcy, konsumenta i transformatora wymagane dla połączenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uaktywnieniu połączeń w <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  id: Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera kolekcję wszystkich <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>, serwera lub kontrolki użytkownika, które są zawarte w <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy na stronie sieci Web i są zarządzane przez <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu."
  remarks: "Właściwości formantów nie odwołuje się do innych kontrolek, które odwołują się <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrolować, takie jak strefy poszczególnych kontrolek, <xref:System.Web.UI.WebControls.WebParts.EditorPart>lub <xref:System.Web.UI.WebControls.WebParts.CatalogPart>, a inne.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Ta właściwość jest używana przez zestaw kontroli części sieci Web i w większości sytuacji programowanie, który nie jest przeznaczona do wywoływania z kodu. Z tego powodu mimo że właściwość nie jest publiczny, jest on ukryty z IntelliSense. Deweloperzy, którzy chcą uzyskać dostępu do kolekcji z <xref:System.Web.UI.WebControls.WebParts.WebPart>lub innych kontrolek serwera zarządza <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formant powinien używać jej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>Właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "A <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> zawierający wszystkie formanty zarządza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Używany przez formant części sieci Web, wartość, aby utworzyć kopię <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub kontrolki serwera na potrzeby dodawania formantu do strony sieci Web."
  remarks: "Nie można wywołać metody CopyWebPart bezpośrednio w kodzie. Ta metoda jest wywoływana wewnętrznie przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formant jako część procesu dodawania nowych dynamicznie <xref:System.Web.UI.WebControls.WebParts.WebPart>lub kontrolki serwera do strony.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Dynamicznej kontroli jest dodawany do strony programowo lub za pomocą części sieci Web interfejsu użytkownika (UI), na przykład przez dodawanie formantu z katalogu formantów, w przeciwieństwie do statyczną kontrolkę zadeklarowano bezpośrednio w znaczniku strony użytkownika.      > [!NOTE] > Metody może zostać przesłonięta w klasie pochodnej, jeśli chcesz włączyć metodę obsługi sterowania dodatkowe scenariusze kopiowanie deweloperów. Aby uzyskać więcej informacji zobacz Uwagi dotyczące obiektów dziedziczących sekcji.       Po dodaniu nowego dynamicznej kontroli, jeśli jest <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli, metoda CopyWebPart zwraca nowe wystąpienie klasy formantu.</xref:System.Web.UI.WebControls.WebParts.WebPart> Jeśli sterowania dodawana jest innego typu kontrolki serwera (na przykład kontrolki użytkownika, kontrolkę niestandardową lub kontrolka ASP.NET), formantu zostanie już opakowane z <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>obiektu przez zestaw kontroli części sieci Web.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Gdy metoda CopyWebPart napotka <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>kontroli, zwraca nowe wystąpienie klasy <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>formantu przy użyciu nowego wystąpienia kontrolki podrzędnej zawinięty w niej</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Metoda CopyWebPart tworzy nową kopię formantu do zwrócenia, również resetuje wartości wszystkich właściwości do wartości domyślnych. Należy pamiętać, że, jeśli chcesz zachować wartości wartość właściwości i ich skopiowane do nowego wystąpienia kontrolki powinny wywoływać <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A>również metody.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A> Ostatnim krokiem przeprowadzają CopyWebPart jest wywołanie metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>metodę, aby uzyskać nowy identyfikator dla formantu.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>      > [!NOTE] > Ponieważ metoda uzyskuje nowy identyfikator dla formantu skopiowane, nie należy polegać na odwołanie do dynamicznego formant, który jest dodawany do strony przez jego oryginalnego identyfikatora. Zamiast tego należy odwoływać nowe wystąpienie klasy formant zwrócony przez metodę."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> Lub kontrolki serwera do skopiowania."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> ma zostać dodany do strony."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  id: CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Tworzy zestaw transformatorów określony w pliku konfiguracji witryny sieci Web i dodaje je do kolekcji transformatory odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>Właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "Kolekcja transformatory określony w pliku konfiguracji witryny sieci Web."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zwraca kolekcję wszystkich kontrolek, które są zarządzane przez <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontrolki na stronie sieci Web. Ta klasa nie może być dziedziczona."
  syntax:
    content: protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "A <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> składające się z wszystkich różnych części sieci Web formantów zarządzanych przez <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  id: CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Tworzy zestaw wszystkie tryby wyświetlania możliwe dla aplikacji sieci Web Part."
  remarks: "Ta metoda tworzy listę wszystkich trybów wyświetlania można nie tylko tryby wyświetlania obsługiwane w określonej strony. Aby uzyskać więcej informacji na temat trybów wyświetlania obsługiwane, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>Właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       Domyślnie zestaw kontroli tworzy następujący zestaw składników Web Part wyświetla trybami ma być używany dla stron sieci Web Part:- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>deweloperzy mogą tworzyć trybów wyświetlania niestandardowych lub bez towarzyszącego niestandardowych stref, które pochodzą z <xref:System.Web.UI.WebControls.WebParts.WebZone>lub <xref:System.Web.UI.WebControls.WebParts.ToolZone>klasy.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Aby utworzyć tryb wyświetlania niestandardowych, musi dziedziczyć z <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>klasy, i aby dodać tryb wyświetlania jako obsługiwany tryb na stronie, musi dziedziczyć z <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasy i przesłonić metodę CreateDisplayModes.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       Po dodaniu trybów wyświetlania przy użyciu <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>metody, należy dodać je w kolejności mają pojawiać się w dowolnym formantów interfejsu użytkownika (takich jak <xref:System.Web.UI.WebControls.ListBox>kontroli) umożliwiające użytkownikom trybów wyświetlania możliwe na stronie.</xref:System.Web.UI.WebControls.ListBox> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>"
  example:
  - "The following code example demonstrates how to use the CreateDisplayModes method.  \n  \n The code example has five parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that hosts the other controls.  \n  \n-   A user control that resides in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone on the Web page, and enables you to enter and display text in a label.  \n  \n-   A source code file that contains two controls. One is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and the other is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object to add to the page's default display modes.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the Web page. It contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controls, both user controls, and the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Notice the `Register` directives at the top of the page to reference the user controls and namespace for the compiled controls.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_1.aspx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_1.aspx)]  \n  \n The third part of the example is the user control for entering and displaying text. It uses a <xref:System.Web.UI.WebControls.MultiView> control to create multiple views of the UI. One view appears with the `Button1` button, the other without. Notice that in the overridden `OnPreRender` method, the code checks to see whether the page is currently in the custom display mode and, if so, displays the first view of the user control, which includes the button. If the page is not in the custom display mode, for example if the page is in browse or design mode, the button is hidden.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_2.ascx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_2.ascx)]  \n  \n The fourth part of the example is the source file for the two custom classes. Notice that the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overrides the CreateDisplayModes method, and that it first calls the base method to add all the default display modes, and then adds the custom display mode. The custom display mode class, `InLineEditDisplayMode`, simply inherits from <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, sets the name of the display mode in the constructor, and overrides a number of the base properties to establish the characteristics of the custom display.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_3.cs)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_3.vb)]  \n  \n To run the code example, load the page in a browser. Notice that the page is currently in browse mode, and no button is visible. Using the **Display Mode** drop-down list control, change the page to **Inline Edit Display** mode, and notice that now the `Button1` button is visible in the lower user control. Add some text, and click the button to update the control. Notice that the page display is returned to browse mode, the text you entered is now displayed, and the button is once again hidden because the page is no longer in the custom display mode."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> zawierający wszystkie tryby wyświetlania, które są obsługiwane."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  id: CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera unikatową wartość jako identyfikator połączenia dynamicznego."
  remarks: "Metoda CreateDynamicConnectionID generuje wartość identyfikatora GUID i konwertuje ją na ciąg jako unikatowy identyfikator połączenia. Metoda jest wywoływana za każdym razem, tworzenia połączenia dynamicznego."
  syntax:
    content: protected virtual string CreateDynamicConnectionID ();
    parameters: []
    return:
      type: System.String
      description: "Ciąg, który zawiera unikatowy identyfikator połączenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  id: CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Generuje unikatowy identyfikator dynamicznym <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu."
  remarks: "Gdy <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty są dodawane do strony sieci Web, mogą być statyczne (co oznacza, że kontrolka jest zadeklarowany w znaczniku strony) lub dynamiczny (co oznacza, że są one dodawane programowo).</xref:System.Web.UI.WebControls.WebParts.WebPart> W żadnym scenariuszu gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formant jest tworzenie nowych formantów dynamicznych do dodania do strony, wywołuje tę metodę, aby wygenerować unikatowego identyfikatora.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Metoda jest wirtualnego, dzięki czemu deweloperzy je zastąpić, jeśli chcą niestandardowych implementacji wygenerowania identyfikatora."
  syntax:
    content: protected virtual string CreateDynamicWebPartID (Type webPartType);
    parameters:
    - id: webPartType
      type: System.Type
      description: "<xref:System.Type>Formantu, dla którego jest generowany identyfikator.</xref:System.Type>"
    return:
      type: System.String
      description: "Ciąg, który zawiera unikatowy identyfikator formantu."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPartType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  id: CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Tworzy specjalne formant, który jest wstawione do strony wyświetlany przez użytkowników końcowych, podczas próby załadowania lub utworzenia dynamicznym <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroli jakiegoś powodu nie powiedzie się."
  remarks: "Metoda CreateErrorWebPart jest wywoływane, gdy składniki Web Part kontrolować zestaw próby załadowania lub utworzenia wystąpienia dynamicznym <xref:System.Web.UI.WebControls.WebParts.WebPart>lub formantu serwera, a nie powiedzie się z jakiegoś powodu.</xref:System.Web.UI.WebControls.WebParts.WebPart> Ta metoda tworzy <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>obiekt, przypisuje komunikat o błędzie i zwraca go.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>Jest wstawiany formant zamiast kontrolkę, która nie powiodła się, a jego komunikat o błędzie jest wyświetlany na stronie.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>       Nie można wywołać metody CreateErrorWebPart bezpośrednio w kodzie. Jednak może dziedziczyć z <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasy i metody rozszerzenia.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Aby uzyskać więcej informacji zobacz Uwagi dotyczące obiektów dziedziczących sekcji.       Użytkownicy końcowi mogą pracować z <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>kontrolować na stronie znacznie tak samo jak w zwykłym <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Aby usunąć komunikat o błędzie, można zamknąć formantu przez kliknięcie przycisku Zamknij zlecenie, po czym formantu zostanie dodany do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>obiektu, takich jak inny formant zamknięte.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Jeśli użytkownik końcowy usuwa <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>formantu, formantu serwera, który nie może załadować również zostaną usunięte ze strony.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);
    parameters:
    - id: originalID
      type: System.String
      description: "Ciąg, który jest identyfikator formantu się niepowodzeniem. Jeśli <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> dotyczy błąd, identyfikator jest identyfikator formantu serwera jej podrzędnych."
    - id: originalTypeName
      type: System.String
      description: "Ciąg znaków będący nazwą <xref:System.Type>formantu nie powiodło się.</xref:System.Type> Jeśli <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> dotyczy błąd, nazwa typu jest typ formantu serwera, jego podrzędny."
    - id: originalPath
      type: System.String
      description: "Ciąg, który zawiera ścieżkę do kontrolki użytkownika, jeśli <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> zawiera element podrzędny uczestniczy kontrolki użytkownika nie powiedzie się."
    - id: genericWebPartID
      type: System.String
      description: "Ciąg, który zwraca identyfikator <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>, jeśli typ formantu uczestniczyła w niepowodzenie ładowania lub tworzenia formantu."
    - id: errorMessage
      type: System.String
      description: "Ciąg, który zawiera komunikat o błędzie do wyświetlania na stronie."
    return:
      type: System.Web.UI.WebControls.WebParts.ErrorWebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.ErrorWebPart&quot;> </xref> Który są wstawiane do strony zamiast formant, który nie może być załadowany lub utworzony."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  id: CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zwraca obiekt personalizacji zawierają dane personalizacji użytkownika dla bieżącej strony sieci Web."
  remarks: "Metoda CreatePersonalization zwraca obiekt zawierają i zarządzanie nimi ustawienia personalizacji użytkowników dla bieżącej strony. <xref:System.Web.UI.WebControls.WebParts.WebPartManager>Kontroli zarządza tego obiektu.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref> zawiera dane personalizacji użytkownika."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  id: CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Opakowuje formantu serwera, który nie jest <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> sterować za pomocą <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> obiektu, dzięki czemu formant może mieć funkcji części sieci Web."
  remarks: "Metoda CreateWebPart jest głównym mechanizm umożliwiający kontrolki serwera, które nie są <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty do wykonania na te same funkcje co <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli i w związku z tym w pełni uczestniczyć w aplikacjach części sieci Web.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Za pomocą tej metody, deweloperzy znacząco rozwiń liczba kontrolek serwera, których mogą użyć w aplikacji części sieci Web, ponieważ praktycznie dowolny typ kontrolki serwera — standardowych kontrolek ASP.NET, kontrolek użytkownika i kontrolek niestandardowych — może być używany.       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>Kontroli również używa tej metody w przypadku dwóch innych scenariuszy opakowywać kontrolki serwera z <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>obiektu.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Jeśli użytkownicy Dodawanie kontrolek serwera do strony przy użyciu <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>kontroli, jeśli nie jest importowany kontroli <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli, wywoływana jest metoda CreateWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Ponadto po kontrolki serwera są zadeklarowane w formacie trwałości <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy na stronie sieci Web, CreateWebPart metoda jest wywoływana dla wszystkie formanty, które nie są <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Po dodaniu serwera do strefy programowo, typowe rozwiązaniem jest użycie metody CreateWebPart opakowywać kontrolki z <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>obiekt, a następnie wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>metody w celu dodania do kolekcji wszystkie kontrolki <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolki na stronie, która odwołuje się do niego <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>Właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates use of the CreateWebPart method. In the `Button2_Click method`, the CreateWebPart method is called to wrap a <xref:System.Web.UI.WebControls.Calendar> control with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object before adding it to the zone.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6552ec5d-43c0-4c29-a8a1-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6552ec5d-43c0-4c29-a8a1-_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Formantu serwera, który nie jest <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu."
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> który opakowuje <code> control </code> i włączy ją do działania jako true <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  id: DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera lub ustawia niestandardowy komunikat ostrzegawczy wyświetlana dla użytkowników końcowych, usunięcie formantu."
  remarks: "Gdy użytkownik usuwa <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolować, zwykle wyświetlany jest komunikat ostrzegawczy domyślnego.</xref:System.Web.UI.WebControls.WebParts.WebPart> Go ostrzega użytkownika, że po usunięciu tego wystąpienia formantu, usunięcie jest trwały. Developer strony może zapewnić użytkownikom sposób, aby dodać nowe wystąpienie klasy formantu do strony (takich jak za pomocą wykazu z <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów, lub za pośrednictwem oznacza, że niektóre programowe), ale trwałe usunięcie bieżącego wystąpienia formantu, który zostanie usunięty.</xref:System.Web.UI.WebControls.WebParts.WebPart> Okno dialogowe, w którym są wyświetlane ostrzeżenia zawiera przycisk użytkownika anulować usunięcie, w razie potrzeby.       Właściwość DeleteWarning umożliwia deweloperom Ustaw komunikat ostrzegawczy, który jest widoczny dla użytkownika.       Jeśli Deweloper strony przypisuje ciąg pusty (&quot;&quot;) po usunięciu przez użytkownika będzie wyświetlana wartość tej właściwości nie ostrzeżenie komunikatów — okno dialogowe <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > DeleteWarning właściwość nie jest wyświetlana w przypadku statycznej <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty i serwera.</xref:System.Web.UI.WebControls.WebParts.WebPart> Statyczne formanty są kontrolki serwera, które są zadeklarowane w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy w znaczniku strony sieci Web.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Ponieważ takie formanty są statyczne, nie można ich usunąć, co komunikat ostrzegawczy delete nigdy nie jest wyświetlane w takim przypadku. Statyczne formanty może zostać zamknięty przez użytkownika, ale zamkniętego formant został dodany do strony katalogu, z którego dodaniem wróć do strony przez użytkownika, podczas gdy usunięty formant nigdy nie mogą zostać odzyskane."
  example:
  - "The following code example demonstrates the use of the DeleteWarning property declaratively and programmatically.  \n  \n There are four parts to the code example:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_1.cs)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_1.vb)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control declared in the zone, so that a user can add it to the page at run time. Note that only dynamic controls (controls that are added to a page programmatically or from a catalog like this one) can be deleted from a page. Static controls (controls that are declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone in the markup of a page) can be closed, but never deleted. The `<asp:webpartmanager>` element declares a custom value for the DeleteWarning property by using the `DeleteWarning` attribute. The `Button1_Click` method assigns another custom value to the DeleteWarning property.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_2.aspx)]  \n  \n After you load the page in a browser, you need to add the <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page. Using the **Display Mode** drop-down list control, select catalog mode. When the catalog appears, select the check box next to the custom control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. Now that the control is visible, you can delete it. Using the **Display Mode** control again, switch the page into design mode (you cannot delete controls while the page is in browse mode). Click the verbs menu (the arrow symbol) in the header of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and select **Delete**. The warning that you set on the `DeleteWarning` attribute appears. Click **Cancel**. Now click the button labeled **Change Delete Warning**, which changes the property value programmatically. From the verbs menu on the control, select **Delete** again, and notice that this time the other warning message appears."
  syntax:
    content: public virtual string DeleteWarning { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera tekst komunikatu ostrzegawczego. Wartość domyślna to zlokalizowane komunikat ostrzegawczy."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Trwale usuwa wystąpienie dynamicznego <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroli ze strony sieci Web."
  remarks: "Metoda DeleteWebPart trwale usuwa reprezentowany przez formant `webPart` parametr ze strony. W przeciwieństwie do zamkniętego kontrolkę, która jest dodawana do <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>kontroli i mogą być dodawane wróć do strony, wróć do strony nigdy nie można dodać wystąpienia usunięty formant.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>      > [!NOTE] > Zaimplementowanego przez formant składników Web Part ustawiona, przez użytkowników do usunięcia z dynamicznego <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli zależy od użytkownika i zakresu personalizacji, w której formant został dodany do strony.</xref:System.Web.UI.WebControls.WebParts.WebPart> Jeśli formant został dodany, gdy strona jest w zakresie udostępnionych (przez użytkownika, który ma uprawnienia), następnie formantu nie można usunąć przez poszczególnych użytkowników, gdy strona jest w zakresie użytkownika.       Można usunąć tylko formantów dynamicznych. Formantów dynamicznych są dodawane do strony programowo lub przez użytkowników, dodawanie formantów z wykazu. Statyczne formanty są dodawane do strony deklaratywnie w formacie trwałości lub znaczników. Ponieważ deklaratywne tagi trwale znajdują się w znaczniku, formantów statycznych nie można usunąć, ale można je zamknąć i otworzyć ponownie."
  example:
  - "The following code example demonstrates how to use the DeleteWebPart method. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Because the control is added programmatically, it is a dynamic control, and therefore it can be deleted. When a user clicks the **Delete Calendar** button, the code ensures that the control exists, and then deletes it by calling the DeleteWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/116fed0f-0c12-4700-9cde-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/116fed0f-0c12-4700-9cde-_1.aspx)]"
  syntax:
    content: public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Kontrolki serwera do usunięcia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  id: DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Reprezentuje tryb wyświetlania używanych do zmiany układu stron sieci Web, które zawierają formantów składników Web Part. To pole jest tylko do odczytu."
  remarks: "W polu DesignDisplayMode odwołuje się do niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>obiekt, który jest tworzony i zawarty w <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Ponieważ jest to obiekt statycznych, można odwołać się do niego bezpośrednio za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasy bez konieczności wystąpienia formantu.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Jeśli strona zawierająca składników Web Part steruje pierwszy obciążeń, znajduje się w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(tryb przeglądania) domyślnie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Kiedy użytkownik chce zmienić układ strony, przenosząc formanty do różnych stref lub w ramach bieżącej strefy, ich przełączać strony do DesignDisplayMode (tryb projektowania). W trybie projektowania zostanie wyświetlony interfejs użytkownika (UI) dla różnych stref, a użytkownicy mogą następnie przeciągnij formanty zmiany układu."
  example:
  - "The following code example demonstrates how to work with the DesignDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to DesignDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_6_1.aspx)]\n [!code-cs[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_6_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Usuwa <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub serwera, czyli kontroli jest zamknięty lub usunięty z połączeń uczestniczy ona w."
  remarks: "Metoda DisconnectWebPart jest wywoływana wewnętrznie przez formant części sieci Web, gdy formant jest zamknięty na stronie lub usunięte ze strony. W takiej sytuacji metoda jest wywoływana usunąć formant z połączeń gdy uczestniczy jako klienta lub dostawcy. Jeśli formantu zostanie usunięty z dowolnego połączenia, ta metoda wywołuje również <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>metodę, aby zakończyć wszystkie połączenia, w którym `webPart` uczestniczył.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       Po wywołaniu metody DisconnectWebPart zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Zwykle można anulować to zdarzenie, ale w obu przypadkach nie można anulować. Jeden przypadek występuje podczas żądania do strony, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>Metoda jest wywoływana.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Jeśli występuje konflikt między istniejących połączeń, aby zamknąć jeden konflikt połączeń, a w tym wystąpieniu będzie można wywołać metody DisconnectWebPart <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>nie można anulować zdarzenie, ponieważ konflikt musi zostać rozpoznane.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>       Inne przypadek występuje wtedy, gdy <xref:System.Web.UI.WebControls.WebParts.WebPart>lub formantu serwera, który jest aktualnie połączony jest zamknięty lub usunięty.</xref:System.Web.UI.WebControls.WebParts.WebPart> W takim przypadku z powodu formantu jest usuwana ze strony jego połączenia musi zostać zakończone, również w związku z tym zgodnie z projektem nie jest możliwe anulowanie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>zdarzeń, aby przerwać proces kończenia połączenia.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  example:
  - "The following code example demonstrates how to use the DisconnectWebPart method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls. If you close one of the controls while the page is in browse mode and the controls are connected, an override of the DisconnectWebPart method disconnects the closed control, ends the connection, and displays a message.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is the file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected, and a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n In the source code, notice the inherited control `MyWebPartManager` that overrides the DisconnectWebPart method. This method checks each connection in a page to see whether the control being closed participates in the connection and, if so, calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method to end the connection. This is identical to the base implementation of the method in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. The overridden method then customizes the base implementation by writing a message to the page.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control, and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, while the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_2.aspx)]  \n  \n After you load the page, click the **Connect** button to connect the controls. Then click the verbs menu in one of the controls (the downward arrow in the header of the control), and select **Close** from the verbs menu. When you try to close the control, the overridden method is called, the connection is ended, and the message is written to the page. If you want to reset the page to restore the closed control and experiment with other options, click the **Reset User State** link to remove personalization data and restore the page's original state."
  syntax:
    content: protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formant, który ma zostać przerwane."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  id: DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Wykonuje proces rozłączanie kontrolki serwera, które są połączone na stronie sieci Web."
  remarks: "Metody DisconnectWebParts wykonuje Zakończ proces kończenia połączenia między <xref:System.Web.UI.WebControls.WebParts.WebPart>lub kontrolki serwera, gdy przekazujesz ją `connection` parametru.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Ta metoda służy do rozłączenia formantów podczas umieszczania `<asp:connectionszone>` elementu na stronie sieci Web w celu zapewnienia interfejsu użytkownika (UI) do zarządzania połączeniami. Gdy strona jest w trybie wyświetlania łączenia (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>), a bieżące połączenie istnieje, użytkownik może kliknąć przycisk, który wywołuje metody DisconnectWebParts, aby zakończyć połączenie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>       Możesz także wywołać metody DisconnectWebParts bezpośrednio w kodzie, jeśli chcesz odłączyć formanty programowo i bez konieczności dodawania `<asp:connectionszone>` element na stronę."
  example:
  - "The following code example demonstrates how to use the DisconnectWebParts method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is a file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, and the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_2.aspx)]  \n  \n After you load the page, you can click the **Connect** button to connect the controls. If you enter some text in the text box control, and then click the **Enter** button, the text will be displayed in the connected control (it would not be displayed if the controls were disconnected). If you click the **Disconnect** button, the controls will be disconnected. You can verify the connection status of the controls by using the **Display Mode** drop-down list control to switch the page into **Connect** mode. After doing that, click the verbs menu (represented by an arrow) in the title bar of one of the controls, and select the **Connect** item. The connection UI is displayed; it is available because there is an `<asp:connectionszone>` element declared in the page. You can also connect and disconnect the controls from this UI."
  syntax:
    content: public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);
    parameters:
    - id: connection
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> reprezentujący połączenia między formantami serwera."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>connection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connection</code>nie jest zawarty w jednym <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> lub <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*>.  \n  \n \\- or -  \n  \n <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  id: DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera lub ustawia aktywny tryb wyświetlania dla strony sieci Web zawiera formanty części sieci Web."
  remarks: "Strona, która zawiera formanty składników Web Part jest zawsze w jednym z kilku trybów wyświetlania możliwe. Aby uzyskać szczegółowe informacje na temat trybów wyświetlania, zobacz [tryby wyświetlania strony sieci Web części](~/add/includes/ajax-current-ext-md.md).       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>Klasy tworzy trybów wyświetlania dla strony sieci Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Korzystanie z bazy <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>klasy <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli tworzy kilka obiektów trybu standardowego używane na stronach, które zawierają formanty części sieci Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Te tryby wyświetlania standardowe są opisane w <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>Przegląd klasy.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>Kontroli zarządza także trybów wyświetlania dla stron, które używają formantów składników Web Part.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Za pomocą właściwości DisplayMode <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formant zachowuje odwołanie do bieżącego trybu wyświetlania na stronie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Umożliwia także właściwością DisplayMode Aby przełączyć do trybów wyświetlania strony. Na przykład zmiany trybów wyświetlania na stronie, która używa kontrolki części sieci Web, zobacz [wskazówki: Zmiana trybów wyświetlania na stronie sieci Web części](~/add/includes/ajax-current-ext-md.md).       W ramach zarządzania tryb wyświetlania <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli udostępnia również zdarzeń i obsługi zdarzeń dotyczących tryby wyświetlania, takich jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A>— Metoda i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>— Metoda.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Te metody udostępniają mechanizm dostosowywania zachowanie strony, a nawet w przypadku dodawania tryb wyświetlania niestandardowych."
  example:
  - "The following code example demonstrates programmatic use of the DisplayMode property. After loading the page in a browser, you can use the buttons near the bottom of the page to switch display modes. The page is in browse mode by default when it loads. If you switch to design mode, you can drag the server controls from one zone to another, or arrange two controls within one zone. If you switch to edit mode, you can click the verbs menu in the header of either of the server controls, select **Edit**, and edit the control using the provided editing user interface (UI).  \n  \n> [!NOTE]\n>  Switching among display modes in a Web Parts application is very common, and you might want to provide a consistent, reusable way to do this on all your pages that contain Web Parts controls. For an example of a user control that changes display modes and that can be reused on many pages, see [Walkthrough: Changing Display Modes on a Web Parts Page](../Topic/Walkthrough:%20Changing%20Display%20Modes%20on%20a%20Web%20Parts%20Page.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_632_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_632_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> Określa tryb wyświetlania strony."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> Obiekt jest przypisywane do właściwości <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is not one of the supported display modes.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is disabled."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  id: DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje, gdy bieżący tryb wyświetlania na części sieci Web, strona została zmieniona."
  remarks: "Tryby wyświetlania są integralną częścią aplikacji części sieci Web. Gdy użytkownicy będą przełączać się do trybu wyświetlania różnych na stronie sieci Web, strony potrwa często bardzo inny wygląd, w zależności od przeznaczenia nowy tryb wyświetlania. Po zmianie trybu wyświetlania, być może chcesz wprowadzić pewne zmiany w interfejsie użytkownika (UI), takie jak ukrycie lub wyświetlenie niektórych formantów Zmienianie wyglądu wybranych elementów interfejsu użytkownika i tak dalej.      > [!NOTE] > Aby uzyskać więcej informacji dotyczących trybów wyświetlania, zobacz [tryby wyświetlania strony sieci Web części](~/add/includes/ajax-current-ext-md.md). Aby uzyskać więcej informacji na korzystanie ze zdarzeń, zobacz [porady: korzystać zdarzeń w aplikacjach formularzy sieci Web](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  id: DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje, gdy użytkownik kliknie zlecenie na stronie sieci Web, który rozpoczyna się proces zmiany na tryb wyświetlania różnych."
  remarks: "Tryby wyświetlania są integralną częścią aplikacji części sieci Web. Gdy użytkownicy będą przełączać się do trybu wyświetlania różnych na stronie sieci Web, strony potrwa często bardzo inny wygląd, w zależności od przeznaczenia nowy tryb wyświetlania. Po użytkownik zainicjuje proces zmiany na nowy tryb wyświetlania, klikając zlecenie, możesz wprowadzić pewne zmiany w interfejsie użytkownika (UI) przy użyciu <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A>Właściwości w celu określenia, jakie będą nowy tryb wyświetlania, a następnie odpowiednio zmienić różne elementy interfejsu użytkownika.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A> Wygodny sposób, w tym celu jest zastąpienie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>metodę w celu dostosowania interfejsu użytkownika.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>      > [!NOTE] > Aby uzyskać więcej informacji dotyczących trybów wyświetlania, zobacz [tryby wyświetlania strony sieci Web części](~/add/includes/ajax-current-ext-md.md). Aby uzyskać więcej informacji na korzystanie ze zdarzeń, zobacz [porady: korzystać zdarzeń w aplikacjach formularzy sieci Web](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  id: DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera kolekcję tylko do odczytu wszystkich trybów wyświetlania, które są skojarzone z <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu."
  remarks: "Wszystkie skojarzone tryby wyświetlania, contrast z odwołań do właściwości DisplayModes <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>właściwość, która odwołuje się do trybów wyświetlania, które są dostępne (obsługiwane) na bieżącej stronie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       Dwa tryby wyświetlania podany, przeglądania i projektowania, są zawsze obsługiwane na stronie. Innych trybów wyświetlania trzy, Edytuj katalog i połączeń, są obsługiwane tylko wtedy, gdy na stronie jest odpowiedni typ strefy niezbędne dla trybu wyświetlania określonego do pracy. Na przykład, jeśli użytkownik strony nie zawiera <xref:System.Web.UI.WebControls.WebParts.EditorZone>strefy, tryb wyświetlania edycji pojawią się w kolekcji odwołuje się właściwość DisplayModes, ale nie było wyświetlane w kolekcji odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>Właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example shows the programmatic use of the DisplayModes property. The code uses this property to populate the list with all the display modes available in the Web Parts control set, even those that are not supported on the current page. In this case, the catalog and connect display modes are not supported, because their corresponding required zones are not on the page.  \n  \n The other three display modes--browse, design, and edit--are supported on the page. Edit mode is supported because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> zone, while browse and design modes are always supported.  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control. Note that if you select **Catalog** or **Connect** in the drop-down list, an error page is generated.  \n  \n [!code-cs[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_572_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_572_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> zawierający zestaw <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> obiekty skojarzone z <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  id: DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera kolekcję wszystkich dynamicznych połączeń, które obecnie istnieje na stronie sieci Web."
  remarks: "Dynamiczne połączenia są połączeń, które są tworzone programowo, w przeciwieństwie do statycznie. Połączenia statyczne są tworzone przez zadeklarowanie je w znaczniku strony formularzy sieci Web. Dynamiczne połączenia są utworzone programowo, albo przez użytkownika, tworzenia połączenia przy użyciu połączenia interfejsu użytkownika (UI).       Kolekcja DynamicConnections, mimo że jest tylko do odczytu i nie można zmienić jego zawartość, zapewnia dostęp programistyczny do każdego obiektu połączenia dynamicznego.      > [!NOTE] > Wykonywanie typowych operacji, takich jak połączenie lub odłączanie <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów, programiści powinni używać metody publiczne na <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klas, takich jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, zamiast w trakcie bezpośrednio modyfikować obiekty połączenia w Kolekcja DynamicConnections.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> zawiera odwołania do wszystkich połączeń dynamicznych na stronie."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  id: EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Reprezentuje tryb wyświetlania, w którym można edytować i modyfikowanie kontrolek serwera użytkowników końcowych. To pole jest tylko do odczytu."
  remarks: "W polu EditDisplayMode odwołuje się do niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>obiekt, który jest tworzony i zawarty w <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Ponieważ jest to obiekt statycznych, można odwołać się do niego bezpośrednio za pomocą <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasy bez konieczności wystąpienia formantu.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Jeśli strona zawierająca składników Web Part steruje pierwszy obciążeń, znajduje się w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(tryb przeglądania) domyślnie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Gdy użytkownicy mają być edytowane lub zmodyfikować formantu serwera, ich przełączać strony do EditDisplayMode (tryb edycji). Po drugie użytkownik musi wybrać formant określonego serwera, aby edytować, klikając Zlecenie edycji w menu zleceń w nagłówku tego formantu. Gdy formant jest w trybie edycji, edycji interfejsu użytkownika (UI) pojawi się do edycji wybrany formant.       Aby włączyć tryb edycji strony, strony musi zawierać co najmniej jeden <xref:System.Web.UI.WebControls.WebParts.EditorZone>strefy, która zawiera co najmniej jednego z podanych edycji formanty, takie jak <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>formant lub niestandardowych formantów edycyjnych.</xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example demonstrates how to work with the EditDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and edit. To support editing, an `<asp:EditorZone>` element is in the page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to EditDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_7_1.aspx)]\n [!code-vb[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_7_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page is hidden. Use the drop-down list control to switch the page to edit mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. Click the **Edit** verb in the verbs menu on one of the controls, to enable editing of that specific control."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  id: EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera lub ustawia wartość określającą, czy skryptów po stronie klienta jest włączone na stronie sieci Web, który zawiera <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu."
  remarks: "Właściwość EnableClientScript umożliwia deweloperom wyłączyć skrypty klienta. Możesz wyłączyć klienta skryptów ze względów bezpieczeństwa lub upewnij się, że wszyscy użytkownicy strony podobne środowisko użytkownika, nawet jeśli używają różnych przeglądarkach.       Możesz wyłączyć skrypty przez dodanie klienta `EnableClientScript` atrybutu <xref:System.Web.UI.WebControls.WebParts.WebPartManager>elementu na stronie sieci Web, jak w następującym wierszu kodu deklaratywne: `<asp:webpartmanager id=&quot;manager&quot; runat=&quot;server&quot;` `EnableClientScript=&quot;false&quot; />` Ponadto deweloperzy można wyeliminować tej właściwości przez dziedziczenie z <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasy i ustawienie domyślne wartości na `false`.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>        </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Zestaw kontroli części sieci Web używa skrypty klienta, aby udostępnić niektóre klienta, interfejs użytkownika (UI) i funkcji personalizacji. Jeśli wyłączysz klienta skryptów i składniki Web Part formanty nadal działać, ale niektóre funkcje zostały wyłączone. Możliwość przeciągnij formanty w różnych strefach jest wyłączona, wraz z możliwością renderowania zleceń w menu rozwijanego zleceń na pasku tytułu formantu (zleceń zamiast tego są wyświetlane jako linki w pasku tytułu formantu)."
  syntax:
    content: public virtual bool EnableClientScript { get; set; }
    return:
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy skrypt po stronie klienta można uruchomić na stronie. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera wartość wskazującą, czy użycie motywów jest włączony na stronie sieci Web."
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>Formant przesłania podstawowym <xref:System.Web.UI.Control.EnableTheming%2A>Właściwości, aby upewnić się, że zawsze zwraca wartość `true`.</xref:System.Web.UI.Control.EnableTheming%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Jest to zrobić, ponieważ składniki Web Part, zestaw kontroli wymaga użycia motywów renderowanie części sieci Web formantów, które są formanty podrzędne <xref:System.Web.UI.WebControls.WebParts.WebPartManager>i kontroli, które tworzą interfejsu użytkownika (UI) strony sieci Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Na przykład kompozycji są używane do renderowania różnych stref i formantów, które znajdują się w strefach różnych typów część formantów (formantów, które dziedziczą z <xref:System.Web.UI.WebControls.WebParts.Part>klasy), kontrolek użytkownika i kontrolek serwera ASP.NET, niestandardowe kontrolki serwera.</xref:System.Web.UI.WebControls.WebParts.Part>       Mimo że przesłanianej właściwości EnableTheming jest zaimplementowany jako właściwości odczytu/zapisu, zgodnie z jego właściwość podstawowej, nie można ustawić właściwości, ponieważ zgodnie z projektem ona zawsze zwrócić wartość `true`. Jeśli spróbujesz ustawić właściwości, <xref:System.NotSupportedException>wyjątku.</xref:System.NotSupportedException>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy są włączone kompozycje. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>we wszystkich przypadkach."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Próbowano ustawić wartość właściwości."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  id: EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Kończy proces łączenia <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu do innego formantu."
  remarks: "Metoda EndWebPartConnecting zakończy proces łączenia <xref:System.Web.UI.WebControls.WebParts.WebPart>formant inny formant.</xref:System.Web.UI.WebControls.WebParts.WebPart> Jest odpowiednikiem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>       Metoda EndWebPartConnecting gwarantuje, że obiekt personalizacji odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>właściwość jest można modyfikować, które jest niezbędne, ponieważ stanowiących połączenie jest typem personalizacji.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Metoda następnie zapewnia, że <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>obiekt nie jest `null`, a na koniec wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartConnecting ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Odwołuje się formant <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>właściwość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  id: EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Kończy proces edycji <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu."
  remarks: "Metoda EndWebPartEditing zakończy proces edycji <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPart> Jest odpowiednikiem <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>       Metoda EndWebPartEditing gwarantuje, że obiekt personalizacji odwołuje się <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>właściwość jest można modyfikować, który jest konieczne, ponieważ formant edycji jest procesem, który wymaga wprowadzenia zmian personalizacji.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Metoda następnie zapewnia, że <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>obiekt nie jest `null`, dzięki czemu aktualnie zaznaczonego <xref:System.Web.UI.WebControls.WebParts.WebPart>formantu można zmienić, a na koniec wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartEditing ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Odwołuje się formant <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>właściwość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  id: ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera lub ustawia tekst ostrzeżenie jest wyświetlane, gdy użytkownik próbuje eksportować dane poufne stanu <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu."
  remarks: "Gdy użytkownik próbuje eksportować dane poufne stanu <xref:System.Web.UI.WebControls.WebParts.WebPart>sterowania, jeśli dane eksportowane pochodzi z elementu członkowskiego, który został oznaczony jako poufne w kodzie źródłowym, ostrzeżenie jest wyświetlane użytkownikowi w oknie komunikatu, informacją o tym, czy eksportowane wrażliwe dane i zapewniając możliwość anulowania eksportu.</xref:System.Web.UI.WebControls.WebParts.WebPart> Deweloperzy mogą oznaczać dane określonego elementu członkowskiego jako poufne przez ustawienie `isSensitive` parametr `[Personalizable]` atrybutu `true` w elemencie członkowskim. Aby uzyskać więcej informacji na temat tego atrybutu i parametr zobacz <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>klasy.</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>      > [!IMPORTANT] > Korzystając z funkcji eksportowania części sieci Web, potencjalnie można wyeksportować poufnych danych nieautoryzowanym użytkownikom. Aby uzyskać więcej informacji na temat ochrony przed zagrożeniem, zobacz [Zabezpieczanie stron składników Web Part](~/add/includes/ajax-current-ext-md.md).       Zawsze, gdy użytkownicy próbują eksportu, zostanie wyświetlony komunikat domyślny. Jednak przez przypisanie wartości do właściwości ExportSensitiveDataWarning, musisz podać niestandardowy komunikat ostrzegawczy."
  example:
  - "The following code example demonstrates the declarative use of the ExportSensitiveDataWarning property.  \n  \n The code for the following Web page uses a standard <xref:System.Web.UI.WebControls.BulletedList> control and places it in a zone. The control will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control at run time, which enables it to act as a true <xref:System.Web.UI.WebControls.WebParts.WebPart> control. To make the control exportable, an `ExportMode` attribute is added to the `<asp:bulletedlist>` element, and the attribute value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, which means that both sensitive and non-sensitive data can be exported. Note also that in the `<asp:webpartmanager>` element, the `ExportSensitiveDataWarning` attribute is assigned a custom value.  \n  \n Note that for the code example to work, there is a setting you must add in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n [!code-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1033_1.aspx)]\n [!code-cs[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1033_1.aspx)]  \n  \n After you load the page in a browser, click the verbs menu (represented by a downward arrow) in the title bar of the control that contains the links. In the verbs menu, select **Export**, and notice that a message box appears with the custom warning. If you want to continue with the export, click **OK**, which will allow you to save a local copy of an XML description file with all the data about the control."
  syntax:
    content: public virtual string ExportSensitiveDataWarning { get; set; }
    return:
      type: System.String
      description: "Ciąg, który zawiera komunikat ostrzegawczy. Komunikat domyślny to wartość specyficzne dla kultury dostarczonych przez program .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  id: ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Tworzy plik opisu XML, który zawiera dane o stanie i właściwości dla kontrolki serwera."
  remarks: "Metoda ExportWebPart składana różne dane stanu i właściwości z `webPart` do pliku XML. Dane obejmują informacje o formancie, łącznie z jej zestawu danych stanu i danych właściwości. Użytkownik, który inicjuje eksportu można zapisać pliku XML na dysku na komputerze lokalnym lub w sieci. Inni użytkownicy można zaimportować pliku opisu do innej strony lub witryny sieci Web i Zastosuj stanu i właściwości danych do innego wystąpienia programu `webPart`. Zapewnia to szybki i wygodny mechanizm dla użytkowników do udziału, a następnie ponownie użyć swoich ustawień kontrolek serwera i umożliwia także deweloperom umożliwia kontrolowanie wyglądu i zachowania formantów wyeksportowane i zaimportowane.       Właściwości `webPart` nie są eksportowane domyślnie. Aby włączyć eksportu właściwości, należy oznaczyć go przy użyciu `[Personalizable]` atrybutu w kodzie źródłowym. Opcjonalnie można oznaczyć właściwości można eksportować jako zawierające dane poufne, ustawiając `isSensitive` parametr `[Personalizable]` atrybutu `true`. Domyślnie `isSensitive` jest `false`. Deweloperzy mogą ustawić dla parametru `true` do wskazywania poufnych danych.       Aby włączyć `webPart` do wyeksportowania, ustawia dewelopera jego <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>wartość właściwości albo <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>(która obejmuje wszystkie właściwości wartość i liter), lub do <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, które Eksportuje wszystkie elementy z wyjątkiem właściwości poufnych.</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>      > [!IMPORTANT] > Zezwalanie użytkownikom eksportowania danych z formantów i zaimportuj dane do innych kontrolek pociąga za sobą niektórych zagrożenia bezpieczeństwa. Programiści powinni używać podejście opisanych wyżej w celu ochrony poufnych danych, a jeśli chcą uniknąć ryzyka związanego z ujawnieniem danych całkowicie ich nie należy włączać eksportu na `webPart` wcale. Aby uzyskać więcej informacji na składniki Web Part problemy z zabezpieczeniami, zobacz [Zabezpieczanie stron składników Web Part](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Formant, z którego zostaną wyeksportowane dane."
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>Który zapisuje wyeksportowanych danych z `webPart` do pliku opisu XML.</xref:System.Xml.XmlWriter>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the collection of controls referenced in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode*> property of <code>webPart</code> is set to a value of <xref href=\"System.Web.UI.WebControls.WebParts.WebPartExportMode\"></xref>, which means that export is disabled for <code>webPart</code>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  id: Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zastąpiony, aby zapobiec fokus kiedykolwiek ustawiania <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroli, ponieważ go nie ma interfejsu użytkownika (UI)."
  remarks: "Metoda fokus zastępuje podstawowym <xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName>metody i zgłasza wyjątek, jeśli obiekt wywołujący wywołuje metodę.</xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName> Ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formantu ma bez interfejsu użytkownika i nigdy nie są widoczne dla użytkowników, nigdy nie umożliwiają fokus należy ustawić na samym sobie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Obiekt wywołujący podejmie próbę wywołania metody fokus, który nie jest obsługiwany w formancie ma bez interfejsu użytkownika."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera kolekcję <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&quot;> </xref> obiektów, które mogą działać jako punkty połączenia z serwerem kontroli czyli działania jako konsumentów w ramach połączenia części sieci Web."
  remarks: "Połączenia składników Web Part, który jest zawsze obejmuje dokładnie dwóch formantów, jeden pełnią funkcję dostawcy danych, innych działając jako klient danych. Każda kontrolka musi mieć co najmniej jedną metodę, które są zdefiniowane jako punkty połączenia. W przypadku formantu użytkownika, jego punktów połączenia są <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>obiektów.</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Pobieranie punktów połączenia klienta jest krokiem w tworzeniu połączenia części sieci Web.       Klient zawsze musi mieć co najmniej jedno połączenie punkt aby można było nawiązać połączenie. Metoda GetConsumerConnectionPoints sprawdza formant użytkownika i pobiera kolekcję wszystkie punkty połączenia. Jeśli <xref:System.Web.UI.WebControls.WebParts.WebPart>formant nie ma punktów połączenia, metoda zwraca pustą kolekcję.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the GetConsumerConnectionPoints method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> object that is retrieved by using the GetConsumerConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/02749d07-cefa-48e1-9ad7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/02749d07-cefa-48e1-9ad7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Formantu serwera, który działa jako klient w połączeniu."
    return:
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&quot;> </xref> zawierający wszystkie punkty połączenia w konsumenta."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  id: GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera odwołanie do bieżącego wystąpienia elementu <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu na stronie."
  remarks: "Metoda GetCurrentWebPartManager jest przydatne w kontekstach, której chcesz pobrać odwołanie do bieżącego <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Jest to typowy scenariusz, w którym ta operacja zostanie wykonana, jeśli piszesz kontrolki niestandardowej, która nie może znać podczas tworzenia jakie identyfikator <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formant na jej stronie będzie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > GetCurrentWebPartManager metody jest statyczny, więc można go wywołać bezpośrednio, bez konieczności wystąpienia <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Niektóre formanty w części sieci Web kontrolować zestawu, takich jak <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty, mieć <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>właściwość, którą można pobrać odwołania do bieżącego <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> W związku z tym podczas pracy z takich formantów, należy używać tej właściwości można pobrać odwołania.       Jeśli są kodowania w kontekście, w którym wiadomo, identyfikator <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrolować, takie jak zapisywanie wbudowanego kodu na stronie sieci Web jest najprostsza i najbardziej efektywny odwołanie bezpośrednio do <xref:System.Web.UI.WebControls.WebParts.WebPartManager>sterowania za pomocą jego identyfikatora.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the GetCurrentWebPartManager method. The example has two parts: a custom server control, and a Web page that hosts the control.  \n  \n The custom <xref:System.Web.UI.WebControls.Label> control uses the GetCurrentWebPartManager method to retrieve the ID of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control on the current page, and then displays the ID.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_1.vb)]  \n  \n The following code example provides the Web page that hosts the control in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_2.aspx)]  \n  \n After you load the page in a browser, notice that the ID of the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is displayed within the custom <xref:System.Web.UI.WebControls.Label> control."
  syntax:
    content: public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "Strony sieci Web, który zawiera wystąpienie <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> który odwołuje się do bieżącego wystąpienia formantu na stronie."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>page</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera ciąg zawierający wartość <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>Właściwość <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  remarks: "Pobiera obliczona wartość <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>Właściwość `webPart`.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> Gdy deweloperzy nie należy przypisywać wartości do <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>Właściwość <xref:System.Web.UI.WebControls.WebParts.WebPart>formantu, ta metoda tworzy wartości, który będzie wyświetlany jako tytuł.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> Obliczona wartość dla formantów bez tytułu składa się z liczbą dołączony ciąg, liczbę określającą sekwencji formantu w ramach bieżącej strefy."
  syntax:
    content: protected virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Formant, dla którego metoda zwraca wartość <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
    return:
      type: System.String
      description: "Ciąg zawierający obliczona wartość <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>dla <code> webPart </code>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code>nie ma na liście <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> kolekcji."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera względną ścieżką wirtualną i ciągu zapytania, które są częścią żądania, gdy użytkownik próbuje wyeksportować <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu."
  remarks: "Wartość zwrócona przez metodę GetExportUrl jest względna ścieżka wirtualna do lokalizacji serwera strony, który zawiera formant, a także wartość ciągu kwerendy dołączonych, która tworzy żądanie eksportu przesłane do serwera. Metoda GetExportUrl koduje ciąg przed zezwoleniem na żądanie do przesłania do ochrony przez atakami złośliwych skryptów.      > [!NOTE] > Uzyskać więcej informacji na temat zabezpieczania aplikacji części sieci Web, zobacz [Zabezpieczanie stron składników Web Part](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> Które wyeksportowane."
    return:
      type: System.String
      description: "Ciąg zawierający względną ścieżką wirtualną i zapytanie ciągu razem formularza żądania, aby wyeksportować formantu."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  id: GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera odwołanie do wystąpienia <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> formant, który zawiera kontrolki serwera."
  remarks: "Ogólnie rzecz biorąc, istnieją dwie kategorie formantów, które deweloperzy umieścić w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy do udziału w aplikacjach części sieci Web: <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty, które dziedziczą z <xref:System.Web.UI.WebControls.WebParts.WebPart>klasy podstawowej, a inne formanty serwera, które mogą być standardowych kontrolek ASP.NET, niestandardowe kontrolki lub kontrolki użytkownika.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Jeśli którykolwiek z tych formantów jest umieszczany w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy, zajmuje funkcjonalności <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> A <xref:System.Web.UI.WebControls.WebParts.WebPart>formant z założenia ma tę funkcję, ale inne rodzaje kontrolki serwera nie.</xref:System.Web.UI.WebControls.WebParts.WebPart> Aby włączyć innych kontrolek serwera do pełnienia <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroluje, kiedy są umieszczane w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy, ASP.NET opakowuje je za pomocą <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>kontroli.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Ponieważ <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>kontroli dziedziczy bezpośrednio <xref:System.Web.UI.WebControls.WebParts.WebPart>klasy, zapewnia jej kontrolkach podrzędnych z funkcjami składników Web Part wartość true.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Często w czasie wykonywania, warto odwołać się do strony deweloperzy <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>kontrolkę zawierającą kontrolek serwera w strefie.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Metoda GetGenericWebPart umożliwia je, aby pobrać odwołanie do <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>kontroli.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates the use of the GetGenericWebPart method. The code example contains a <xref:System.Web.UI.WebControls.Calendar> control declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone. The `Button1_Click` method first prints the ID of the <xref:System.Web.UI.WebControls.Calendar> control to a label, and then uses the GetGenericWebPart method to retrieve a reference to the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control that wraps the calendar. The ID of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control, and the ID of its child control (which is the <xref:System.Web.UI.WebControls.Calendar> control), are both printed to a second label.  \n  \n [!code-cs[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/csharp/d656242f-a1d2-490c-85d4-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/visualbasic/d656242f-a1d2-490c-85d4-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Formantu serwera, który istnieje w <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> i jest zawijany jako formant podrzędny <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> w czasie wykonywania."
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> który opakowuje <code> control </code> jako formant podrzędny. Metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli <code> control </code> nie jest zawarta w <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera kolekcję <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&quot;> </xref> obiektów, które mogą działać jako punkty połączenia z serwerem kontroli czyli działający jako dostawca w ramach połączenia części sieci Web."
  remarks: "Połączenia składników Web Part, który jest zawsze obejmuje dokładnie dwóch formantów, jeden pełnią funkcję dostawcy danych, innych działając jako klient danych. Każda kontrolka musi mieć co najmniej jedną metodę, które są zdefiniowane jako punkty połączenia. W przypadku formantu dostawcy jego punktów połączenia są <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>obiektów.</xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       Dostawca zawsze musi mieć co najmniej jedno połączenie punkt mieć możliwość nawiązania połączenia. Metoda GetProviderConnectionPoints sprawdza formant dostawcy i pobiera kolekcję wszystkie punkty połączenia. Pobieranie punktów połączenia dostawcy jest krokiem w tworzeniu połączenia części sieci Web."
  example:
  - "The following code example demonstrates how to use the GetProviderConnectionPoints method.  \n  \n The example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> object that is retrieved by using the GetProviderConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/7aa405f8-9f90-4b6f-8d66-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/7aa405f8-9f90-4b6f-8d66-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Formantu serwera, który działa jako dostawca w połączeniu."
    return:
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&quot;> </xref> zawierający wszystkie punkty połączenia w dostawcy."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  id: ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Importuje plik XML opis, który zawiera dane o stanie i właściwości dla <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> sterowania i dotyczy danych formantu."
  remarks: "Metoda ImportWebPart importuje plik XML opis, który został utworzony przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>metody dla kontrolki serwera.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Nie jest formant używanego serwera, który jest importowany, ale tylko plik opis, zawierającego dane dotyczące stanu i właściwości dotyczące formantu. Kontrolowanie i zestawu, do którego odwołuje się plik opisu musi być dostępny na serwerze, na którym użytkownik próbuje zaimportować z pliku opisu.       Aby umożliwić importowanie formantu, deweloper musi dodać <xref:System.Web.UI.WebControls.WebParts.CatalogZone>kontrolki na stronie, gdzie będzie włączony importu.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> W strefie <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>kontrolka musi zostać dodana.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Ten formant zawiera okno dialogowe pliku, który umożliwia użytkownikom i znaleźć pliku opisu do zaimportowania.       Po użytkownika umożliwia znalezienie pliku opisu i rozpocznie się importu, pliku opisu jest do odczytu przez metodę ImportWebPart. Jeśli nie ma żadnych błędów, a w przypadku znalezienia zestawu i kontroli kontrolki serwera jest dodane do katalogu w ramach <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>różnych danych właściwości i stan określony w pliku opisu sterowania i są stosowane do formantu.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Użytkownik może następnie wybrać formant i dodaj go do strony.      > [!IMPORTANT] > Jak <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>Metoda, metoda ImportWebPart ma kilka możliwości na zagrożenia bezpieczeństwa.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Ponieważ spowodowałoby to importowanie danych do witryny sieci Web, złośliwy użytkownik może próbować wstawić nieprawidłowe dane lub kodzie skryptu nawet do pliku opisu, który jest importowany. Następnie nieprawidłowych danych może występować na stronie lub w bazie danych lub wstawionego skrypt można uruchomić. Omówienie potencjalne ryzyko związane z importowanie plików opisu i sposobów unikania te zagrożenia, zobacz [Zabezpieczanie stron składników Web Part](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>Które odczytuje dane stanu i właściwości z pliku XML opisu, który jest importowany.</xref:System.Xml.XmlReader>"
    - id: errorMessage
      type: System.String
      description: "A <xref:System.String>która jest wyświetlana dla użytkownika, jeśli wystąpi błąd podczas importowania.</xref:System.String>"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (lub formantu serwera, który jest opakowane przez <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> i w związku z tym traktowane jako <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>) który odwołuje się do pliku opisu XML."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: "<code>reader</code> could not read the file.  \n  \n \\- or -  \n  \n <code>reader</code> needed to display an import error message but did not find one in the file.  \n  \n \\- or -  \n  \n <code>reader</code> reached the end of the file without finding the XML element that contains the exported data."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  id: Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera odwołanie do <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref> klasy, która służy do łączenia i zestaw metod, które faktycznie są implementowane w oddzielnych <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> klasy, ale najczęściej są przydatne w przypadku deweloperów formantu."
  remarks: "Właściwość wewnętrzne udostępnia interfejsy API do wywoływania na zestaw <xref:System.Web.UI.WebControls.WebParts.WebPartManager>metod, które są używane głównie w przypadku rozszerzalności.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Zaprojektowany sposobem użycia tych metod wewnętrznego jest do nich dostęp za pośrednictwem właściwości wewnętrzne. Ponieważ właściwość jest chroniony, można tylko do niego dostęp i wywołać metod w ramach wystąpienia <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>klasy przez dziedziczenie z <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasy.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>      > [!NOTE] > Tej właściwości jest niewidoczna dla IntelliSense w [!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]. Jednak w pochodnym <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasy, użytkownik nadal dostęp do właściwości i jej różnych elementów członkowskich.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>, przez który <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> może odwoływać się różnych metod, które zostały podzielone na <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  id: IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Wykonuje kroki początkowe w określeniu, czy formant jest autoryzowany do dodania do strony."
  remarks: "Metoda IsAuthorized jest początkowej metodzie wywołanej przez formant składników Web Part ustawiona na sprawdzanie autoryzacji dla <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPart> Akceptuje `webPart` jako parametru i rozpocznie się proces, który określa, czy formant zostanie dodany do strony. Wywołać tej metody z kodu bezpośrednio po należy ustalić, czy dany formant jest autoryzowany.       Ta metoda wykonuje zadania początkowej określania, czy formant dziedziczy <xref:System.Web.UI.WebControls.WebParts.WebPart>klasy lub jest <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>kontroli, a jeśli tak, jakiego typu elementu podrzędnego sterować nim zawiera.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Aby zakończyć zadanie autoryzacji, wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>przeciążyć metodę.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>"
  example:
  - "The following code example demonstrates how to call the IsAuthorized method from your code to determine whether a control is authorized to be added to a page.  \n  \n The code example has three parts:  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the IsAuthorized method.  \n  \n-   A Web page that creates a filter for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   An explanation of how to run the code example.  \n  \n This code example uses a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload method to provide custom handling of the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property. This control checks for a property value of `admin` and, if the value is present, authorizes the control. If a control has a different value, it is not authorized; controls without the property value are authorized as well, as they are presumed not to be part of the filtering scenario.  \n  \n For this code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_1.vb)]  \n  \n The second part of the code example creates a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer. Notice also that in the `Page_Load` method, the code calls the IsAuthorized method to determine whether each of the controls is authorized, and if so, it sets each control's <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_2.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because it is excluded by the filter. The third control is also added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. Notice that if you click the verbs menu icon in the title bar of either control, they can both be exported because their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property values were assigned."
  syntax:
    content: public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub inny formant serwera sprawdzana pod kątem autoryzacji."
    return:
      type: System.Boolean
      description: "Wartość logiczna, która wskazuje, czy <code> webPart </code> może być dodany do strony."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  id: IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Wykonuje ostatnie kroki podczas określania, czy formant jest autoryzowany do dodania do strony."
  remarks: "Metoda przeciążenia IsAuthorized wykonuje ostatnie kroki podczas określania, czy formant jest autoryzowany do dodania do strony. Metoda gwarantuje, że `type` jest prawidłowym typem, a `path` ma wartość tylko, jeśli sprawdzany formant jest kontrolki użytkownika. A następnie wywołuje krytycznej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>metodę, która wywołuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>"
  example:
  - "The following code example demonstrates how to override the IsAuthorized method to determine whether a control is authorized to be added to a page.  \n  \n The first step is to create a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_1.aspx)]  \n  \n The second step is to override the IsAuthorized method, and create custom handling for authorization filters. Note that the code first checks whether the property has a value, so that any control that does not assign the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property will be added automatically. If a control has a filter, the code returns `true` only if the filter value is equal to `admin`. This demonstrates a simple mechanism you can use for displaying certain controls to certain users, depending on their role. While a full example using roles is beyond the scope of this topic, you could use the same logic as the overridden method in this code example, except that you could check whether the current user is in a role that matches the authorization filter value, and then add the control only for that user. This would enable you to create pages where some users would see all the controls, and other users would see only selected controls. This is how the logic that checks the filter might look if you used roles:  \n  \n [Visual Basic]  \n  \n```  \nIf Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  \n  return True  \nElse  \n  return False  \nEnd If  \n```  \n  \n [C#]  \n  \n```  \nif(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  \n    return true;  \nelse  \n    return false;  \n```  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_2.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_2.vb)]  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because its filter value is excluded. The third control is added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. If you change the property value on the second control to match that of the first control, and then run the page again, the second control is added as well."
  syntax:
    content: public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Formantu sprawdzana pod kątem autoryzacji.</xref:System.Type>"
    - id: path
      type: System.String
      description: "Ścieżka względna aplikacji do pliku źródłowego dla formantu autoryzowanego, jeśli formant jest kontrolki użytkownika."
    - id: authorizationFilter
      type: System.String
      description: "Wartość ciągu dowolnego przypisana do <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>Właściwość <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formant, używany do autoryzacji, czy formant można dodać do strony.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>"
    - id: isShared
      type: System.Boolean
      description: "Wskazuje, czy formant sprawdzana pod kątem autoryzacji jest kontrolowania udostępnionego, co oznacza, że są widoczne dla użytkowników w wielu lub wszystkich aplikacji, a jego <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>ma ustawioną wartość właściwości <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>"
    return:
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy formant jest autoryzowany do dodania do strony."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code> is a user control, and <code>path</code> is either <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\").  \n  \n \\- or -  \n  \n <code>type</code> is not a user control, and <code>path</code> has a value assigned to it."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  id: IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera wartość wskazującą, czy wprowadzono zmiany personalizacji, która wpływa na szczegóły na poziomie strony personalizacji kontrolowane przez <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu."
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>Kontroli używa właściwości IsCustomPersonalizationStateDirty wewnętrznie do śledzenia czy Personalizacja poziomu strony danych, która zarządza został zmieniony.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Dane personalizacji zostanie zmieniona, gdy użytkownicy wykonywania różnych akcji personalizacji na poziomie strony, takich jak dodawanie lub usuwanie <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów, połączenie lub odłączanie formantów, zmiana układ strony za pomocą przenoszenia kontrolek i innych działań.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Użytkowników można również wykonywać personalizacji na poziomie kontroli, co oznacza, że ich wprowadzania zmian personalizujących określonego formantu, a zmiany dotyczą tylko tego formantu. Przykład czy kontrolka edycji i zmiana jego tytuł lub jego kolor tła. Poziom kontroli personalizacji nie wpływa na dane personalizacji poziomu strony śledzone przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli, co nie zmieni wartość właściwości IsCustomPersonalizationStateDirty na `true` po wystąpieniu personalizacji poziom kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Mimo że metoda jest chroniona i nie można uzyskać dostępu do bezpośrednio przez obiekt wywołujący <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>bezpośrednio przez obiekty wywołujące mogą można uzyskać dostępu do właściwości i zwraca wartość tej właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>"
  syntax:
    content: protected virtual bool IsCustomPersonalizationStateDirty { get; }
    return:
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy wprowadzono zmiany personalizacji. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ładunki kontroli danych o stanie, który został zapisany z poprzedniego żądania strony, należy przywrócić na kolejne żądania."
  remarks: "LoadControlState metoda jest przydatne w celu przywrócenia danych właściwości, które powinny zostać utrwalony między ogłaszania zwrotnego strony, nawet wtedy, gdy <xref:System.Web.UI.Control.EnableViewState%2A>ma ustawioną właściwość `false`.</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Zawiera dane stanu utrwalonego do załadowania."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>savedState</code>nie jest prawidłową <xref:System.Web.UI.PageStatePersister.ControlState*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Przechowuje dane personalizacji niestandardowego, który został przekazany do <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroli przez obiekty personalizacji do użycia później, podczas procesu inicjalizacji."
  remarks: "Metoda LoadCustomPersonalizationState zapewnia dane o stanie zapisanych w formie <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>obiektu.</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> Te dane są używane po pewnym czasie, aby załadować danych personalizacji w formantach części sieci Web i wykonywanie innych zadań inicjowania.      > [!NOTE] > Ta metoda jest wywoływana przez sekwencję metody, która rozpoczyna się, gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>Metoda początkowo żąda skojarzony <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>obiektu do dostarczania danych personalizacji dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>       Nie można wywołać tej metody bezpośrednio w kodzie. Jednak można bezpośrednio wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>samą metodę, która wywołuje metodę LoadCustomPersonalizationState i zwraca dane personalizacji.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>"
  syntax:
    content: protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> zawiera dane o stanie do załadowania."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  id: MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera <xref href=&quot;System.Security.PermissionSet&quot;> </xref> obiektu, który umożliwia tylko <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> uprawnień i <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> uprawnienia."
  remarks: "<xref:System.Security.PermissionSet>Obiekt, który jest zwracany przez tę właściwość jest używana podczas importowania do deserializacji typu.</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MediumPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "A <xref href=&quot;System.Security.PermissionSet&quot;> </xref> obiektu, który umożliwia tylko <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> uprawnień i <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> uprawnienia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  id: MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera <xref href=&quot;System.Security.PermissionSet&quot;> </xref> obiektu, który umożliwia tylko <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> uprawnień i <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> uprawnienia."
  remarks: "<xref:System.Security.PermissionSet>Obiektu zwróconego przez tę właściwość jest używana podczas importowania dla wszystkich, z wyjątkiem typu deserializacji.</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "Pobiera <xref href=&quot;System.Security.PermissionSet&quot;> </xref> obiektu, który umożliwia tylko <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> uprawnień i <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> uprawnienia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Przenosi <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub kontrolki serwera z jednego <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy do innego, lub do nowej pozycji w tej samej strefie."
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>Kontroli używa metody MoveWebPart, aby przenieść `webPart` do nowej lokalizacji w tej samej strefie lub w innej strefie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Tę metodę można wywołać bezpośrednio z kodu, a także jest wywoływana, gdy użytkownik przeniesie formantu do nowej pozycji za pomocą różnych opcji w interfejsie użytkownika (UI) części sieci Web.       Kilka warunków muszą zostać spełnione przed `webPart` można przenieść, a większość z nich są wskazywane przez elementy wymienione w sekcji wyjątki w tym temacie. Jeśli `webPart` nie został umieszczony w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy rozpoczynać się od znaku, nie można przenieść do strefy.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Po spełnieniu warunków, aby przenieść ma miejsce następująca sekwencja akcji `webPart`: 1.  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>      2.  `webPart`zostanie usunięty z jego bieżącej strefy (w razie potrzeby) i dodać do nowej strefy lub nowe położenie w jego bieżącej strefy.      3.  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>Metoda zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>      4.  `zoneIndex` z każdym <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli w strefach pochodzenia i miejsce docelowe jest resetowany do uwzględnienia przeniesionego kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to call the MoveWebPart method directly from code to move a <xref:System.Web.UI.WebControls.WebParts.WebPart> control from one zone to another.  \n  \n The code example has three parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how to run the code example.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is a Web page that contains two zones, each of which contains two server controls. When a user clicks the **Move WebPart** button on the page, the code in the `Button1_Click` method moves a control from the first zone to a new position in the second zone. Notice that the code first must call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> method to retrieve the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object that wraps the `list1` control. This is required because the first parameter of the MoveWebPart method requires a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, whereas `list1` is an ASP.NET server control.  \n  \n [!code-cs[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/csharp/49caf3f6-e63d-4133-bdf2-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/visualbasic/49caf3f6-e63d-4133-bdf2-_1.aspx)]  \n  \n After the page loads, click the **Move WebPart** button, and note that the control that contains the links moves into the middle position in the second zone. This movement of the control is accomplished programmatically by calling the MoveWebPart method. You can also use the **Display Mode** drop-down list control to switch the page to design mode, and in design mode, you can drag the controls to different zones or different positions within their zones. The MoveWebPart method is also called by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to handle such user-initiated moves."
  syntax:
    content: public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> Lub inny formant serwera przenoszony."
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "Element docelowy <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> do którego `webPart` jest przenoszony."
    - id: zoneIndex
      type: System.Int32
      description: "Liczba całkowita, która wskazuje indeks `webPart` względem innych kontrolek w `zone`."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n <code>zone</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n The zone referenced by the <code>webPart</code> control's <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means that <code>webPart</code> is not currently contained in a zone."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>or <code>zone</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>zoneIndex</code>jest mniejsza od zera."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  id: OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart&quot;> </xref> zdarzeń i wywołuje program obsługi zdarzeń, jeśli taka istnieje."
  remarks: "OnAuthorizeWebPart metoda jest wywoływana przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>metody, gdy <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli jest sprawdzana pod kątem autoryzacji, które mają zostać dodane do strony.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Po wywołaniu metody OnAuthorizeWebPart zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>zdarzeń, a w przypadku metody obsługi dla zdarzenia, wywołuje program obsługi.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>       Proces autoryzacji <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty to ważna cecha części sieci Web.</xref:System.Web.UI.WebControls.WebParts.WebPart> Każdy <xref:System.Web.UI.WebControls.WebParts.WebPart>lub formantu serwera, który zostanie dodany do strefy przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formant przechodzi przez proces autoryzacji, aby określić, czy formant może być dodany.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart> Domyślnie zestaw kontroli części sieci Web nie ma żadnych kryteriów filtrowania, aby zapobiec formanty dodawane do strefy. Jednak zestaw kontroli mechanizmy, które są niezbędne dla deweloperów do tworzenia własnych kryteria filtrowania. Korzystając z tych mechanizmów, można utworzyć niestandardowe scenariusze filtrowania. Na przykład można utworzyć filtr, aby, jeśli użytkownik jest w roli administratora, niektóre formanty zostanie dodany do strefy podczas renderowania strony, a jeśli użytkownik ma rolę użytkownika, tych kontrolek nie zostanie dodany.       Mechanizmy filtrowania formantów podczas procesu autoryzacji są <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>Właściwość <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>i metod OnAuthorizeWebPart i <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>zdarzenia w <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Aby utworzyć scenariusz filtrowania, są zasadniczo dwa zadania. Najpierw Przypisz ciągi do <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>Właściwości każdego <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli, których chcesz filtrować.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Te wartości ciągu mogą być dowolnego, ale powinny zawierać kryteria, które chcesz filtrować. Na przykład, jeśli potrzebujesz określonej kontrolki ma zostać dodany do strefy tylko wtedy, gdy administrator użytkownik wyświetla stronę, a następnie można przypisać wartość ciągu `admin` do właściwości. Następnie można użyć funkcji ról platformy ASP.NET i dodać wszystkich użytkowników witryny do różnych ról, takich jak administrator, Menedżer i użytkownika. Podczas ładowania strony kodzie filtrowania może sprawdzić, jakie rola użytkownika jest w, porównaj je z wartości filtru autoryzacji w formancie sprawdzany i w razie (na przykład) użytkownik ma rolę administratora i ustawiana formantu <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>do wartości `admin`, mogą zostać dodane formantu.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Drugim krokiem w tworzeniu filtrowania scenariusza jest napisać kod, aby sprawdzić <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>wartości właściwości na <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolki oraz określa, czy każdej kontrolki jest autoryzowany, zanim zostanie dodany do strefy.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Dostępne są dwie opcje, w których można umieścić tego kodu filtrowania. Pierwsza opcja jest preferowaną opcję dla deweloperów strony. Można utworzyć metody obsługi <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>zdarzenia bezpośrednio w kodzie skryptu serwera strony sieci Web lub w pliku separację kodu.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Skojarz metodę ze zdarzeniem, dodając `OnAuthorizeWebPart` atrybut do tagu dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrolować na stronie, jak pokazano w następujący przykładowy kod znaczników.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      ```   <asp:webpartmanager id=&quot;manager1&quot; runat=&quot;server&quot;       OnAuthorizeWebPart=&quot;manager1_AuthorizeWebPart&quot; />   ```Wszystkie niestandardowe metodę związana jest sprawdzenie każdego <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolować kryteria filtrowania, a następnie, na podstawie wyników, przypisz wartość logiczną umożliwiającą <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A>Właściwość <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs>obiektu, aby wskazać, czy <xref:System.Web.UI.WebControls.WebParts.WebPart>można dodać kontrolki.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> Kod w sekcji przykładzie pokazano, jak to zrobić.       Drugą opcją lokalizację kodzie filtrowania ma dziedziczyć <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasy, a następnie zastąpić metodę sprawdzania kryteria filtrowania.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Te dwie metody, można zastąpić, czy są <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>metody lub OnAuthorizeWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> Mimo że będzie działać w każdej z metod, w większości przypadków zaleca się zastąpienie <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>metody, ponieważ zapewnia ona większa programowe sterowanie proces autoryzacji całej metody OnAuthorizeWebPart nie tylko jeden określonych zadań, która umożliwia wywoływanie zdarzeń i sprawdź, czy program obsługi.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Przykład kodu niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPartManager>klasy, która zastępuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>metody, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>przeciążenia metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, so that the handler can provide custom filtering code for the OnAuthorizeWebPart method. This example would be a typical way for a page developer to provide a filtering scenario and authorization of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to be added to a page.  \n  \n In the Web page, notice that the `<asp:webpartmanager>` element has the `OnAuthorizeWebPart` attribute with the name of the event handler assigned to it. The method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `admin` and, if so, returns `true`, which means that they will be authorized and added to the page.  \n  \n> [!NOTE]\n>  Note that controls that do not have any value assigned to the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property are added as well, because they are assumed not to be part of a filtering scenario. This would be a common approach in a filtering scenario: some controls would be filtered, and others would not be, because they are presumed to be available for all users.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/fb74240d-1119-4128-abbc-_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/fb74240d-1119-4128-abbc-_1.aspx)]  \n  \n Because setting up users in roles is beyond the scope of this topic, this code example does not check user roles in the filtering. However, the scenario of filtering controls according to user roles is likely to be one of the most common uses of this filtering feature. If you have roles on your site, and you want to check user roles in this method to filter controls, the method would resemble the following code block (versus the simpler approach in the preceding code example, which does not use roles).  \n  \n [Visual Basic]  \n  \n```  \nProtected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  \n  As Object, ByVal e As WebPartAuthorizationEventArgs)  \n  \n  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  \n    If Roles.IsUserInRole(Page.User.Identity.Name, _  \n      e.AuthorizationFilter) Then  \n  \n      e.IsAuthorized = True  \n    Else  \n      e.IsAuthorized = False  \n    End If  \n  End If  \n  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void mgr1_AuthorizeWebPart(object sender,   \n  WebPartAuthorizationEventArgs e)  \n{  \n  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  \n  {  \n    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  \n      e.IsAuthorized = true;  \n    else  \n      e.IsAuthorized = false;  \n  }  \n}  \n```"
  syntax:
    content: protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  id: OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated&quot;> </xref> zdarzenie, aby wskazać, że strony i jego formanty są ładowane i uaktywnieniu połączeń na stronie zacząć udostępniać dane."
  remarks: "Wywołuje metodę OnConnectionsActivated <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>zdarzeń po zakończeniu procesu ładowania strony.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> Metoda zapewnia sposób dodawania obsługi zdarzenia.       Deweloperzy strony można dodać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnConnectionsActivated` atrybutu `<asp:webpartmanager>` element strony, a następnie przypisanie nazwy niestandardowej metody z atrybutem."
  syntax:
    content: protected virtual void OnConnectionsActivated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>Zawierający dane zdarzenia.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  id: OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating&quot;> </xref> zdarzenie, aby wskazać, że strony i jego formantów zostały załadowane i rozpocząć proces aktywacji połączenia."
  remarks: "Wywołuje metodę OnConnectionsActivating <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>zdarzenie, które udostępnia deweloperom mechanizm programowo Dostosowywanie proces aktywacji połączeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>       Deweloperzy strony można dodać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnConnectionsActivating` atrybutu `<asp:webpartmanager>` element strony, a następnie przypisanie nazwy niestandardowej metody z atrybutem."
  syntax:
    content: protected virtual void OnConnectionsActivating (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>Zawierający dane zdarzenia.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  id: OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged&quot;> </xref> zdarzeń w celu wskazania, że <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> sterowania zostało zakończone, proces przełączania z trybu jednego ekranu do innego na stronie sieci Web."
  remarks: "Metoda OnDisplayModeChanged w swojej bazie formularza po prostu zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>"
  syntax:
    content: protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs&quot;> </xref> zawierający dane zdarzenia powiązane z tryb wyświetlania zmienione."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  id: OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging&quot;> </xref> zdarzeń w celu wskazania, że <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formant jest w trakcie przełączania z trybu jednego ekranu do innego na stronie sieci Web."
  remarks: "Metoda OnDisplayModeChanging w swojej bazie formularza po prostu zgłasza <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>"
  syntax:
    content: protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
      description: "<xref:System.EventArgs>Zawierający dane zdarzenia powiązane z zmiana trybu wyświetlania.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> zdarzenie, które jest pierwsze zdarzenie w <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroli cyklu życia."
  remarks: "Metody OnInit wywołuje metodę podstawową, która wywołuje <xref:System.Web.UI.Control.Init>zdarzenia dla formantu, a następnie wykonuje kilku czynności przygotowawczych, takich jak zapewnienie, że istnieje tylko jedno wystąpienie <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrolować na stronie i ładowanie danych personalizacji.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.Init>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>Zawierający dane zdarzenia.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Istnieje inny <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontrolki na stronie"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> zdarzenie, które występuje tuż przed <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> renderowania formantu na stronie sieci Web."
  remarks: "Metoda OnPreRender wywołuje metodę podstawową, która wywołuje <xref:System.Web.UI.Control.PreRender>zdarzenia dla formantu, a następnie rejestruje kilka skrypty klienta, które są wymagane na stronach zawierających składniki Web Part kontrolki.</xref:System.Web.UI.Control.PreRender>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>Zawierający dane zdarzenia.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged&quot;> </xref> zdarzenie, które występuje po <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> sterowania albo nowo wybrano lub jego zaznaczenie został wyczyszczony."
  remarks: "Wywołuje metodę OnSelectedWebPartChanged <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>zdarzenie, które jest zazwyczaj punktu w czasie, gdy deweloper może być konieczna zmiana wyglądu interfejsu użytkownika (UI).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Na przykład podczas tworzenia nowego <xref:System.Web.UI.WebControls.WebParts.WebPart>jest wybrana kontrolka, kontroli części sieci Web ustaw zmiany renderowania nowo zaznaczonego formantu.</xref:System.Web.UI.WebControls.WebParts.WebPart> Po wyłączeniu formantu wyboru renderowanie jest zwracana do normalnego.       Po wybraniu określonego <xref:System.Web.UI.WebControls.WebParts.WebPart>formant do edytowania, wywoływana jest metoda OnSelectedWebPartChanged.</xref:System.Web.UI.WebControls.WebParts.WebPart> Gdy użytkownik zakończy edycji formantu i zamyka z wynikami, że formant wyboru jest wyczyszczone, metoda OnSelectedWebPartChanged nie zostanie ponownie wywołany."
  syntax:
    content: protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging&quot;> </xref> zdarzenie, które występuje podczas zmiany, które <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> zaznaczonego formantu."
  remarks: "Wywołuje metodę OnSelectedWebPartChanging <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>zdarzenie, które występuje podczas zmiany, które <xref:System.Web.UI.WebControls.WebParts.WebPart>obecnie jest wybrana kontrolka.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>Kontroli korzysta z tej metody i skojarzonego zdarzenia, aby zapewnić możliwość anulowania procesu, w którym jest zmiana wybrany formant.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Na przykład metoda jest wywoływana w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>metody, a także w <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>metody w sposób, aby anulować proces.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> Jeśli użytkownik kliknie Zlecenie anulowania dla formantu, który jest edytowany, nie jest wybrana kontrolka i wszelkie edycji zmiany nie zostały zapisane, ponieważ metoda OnSelectedWebPartChanging pozwala anulować edycję.      > [!NOTE] > Podobnie wywołania metody podczas metody rozpoczęcia i zakończenia procesu łączenia <xref:System.Web.UI.WebControls.WebParts.WebPart>formantu do innego formantu, aby umożliwić anulowanie tego procesu.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Strona deweloperzy mogą tworzyć niestandardowe Obsługa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>zdarzenia przez dodanie `OnSelectedWebPartChanging` atrybutu `<asp:webpartmanager>` element w znaczniku strony deklaratywne i przypisanie do atrybutu nazwę niestandardowej metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>"
  syntax:
    content: protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza podstawowym <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> zdarzeń i usuwa <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> wystąpienia ze strony sieci Web."
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Dane zdarzenia powiązane z usuwaniem formantu."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded&quot;> </xref> zdarzenie, które występuje po <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formant został dodany do strony."
  remarks: "Podczas dodawania wywoływana jest metoda OnWebPartAdded <xref:System.Web.UI.WebControls.WebParts.WebPart>formantu (lub innych formantu serwera, który jest dodawany do <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy) do strony.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Strona deweloperzy mogą tworzyć niestandardowe Obsługa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>zdarzenia przez dodanie `OnWebPartAdded` atrybutu `asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>"
  syntax:
    content: protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  id: OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding&quot;> </xref> zdarzenie, które występuje w ciągu proces dodawania <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu (lub formant serwera lub użytkownika) do <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy."
  remarks: "Wywołuje metodę OnWebPartAdding <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>zdarzeń, aby wskazać, że formant jest w trakcie dodawany.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> Metoda udostępnia opcję, aby anulować proces dodawania. Jeśli formant został dodany pomyślnie, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>następuje zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       Strona deweloperzy mogą podać niestandardowego programu obsługi dla skojarzonego zdarzenia, dodając `OnWebPartAdding` atrybutu `<asp:webpartmanager>` elementu na stronie sieci Web, a następnie przypisanie nazwy niestandardowej metody z atrybutem."
  syntax:
    content: protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed&quot;> </xref> zdarzenia sygnalizują, że formant został usunięty ze strony."
  remarks: "Wywołuje metodę OnWebPartClosed <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>zdarzeń w celu wskazania, że <xref:System.Web.UI.WebControls.WebParts.WebPart>formantu (lub innego serwera lub użytkownika formantu) został zamknięty pomyślnie na stronie.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Aby zamknąć <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli oznacza usunąć go ze strony, aby nie są odtwarzane i umieścić go w specjalny zawierający obiekt skrót katalogu strony.</xref:System.Web.UI.WebControls.WebParts.WebPart> Katalog strony, który odpowiada <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>kontrolować, przechowuje odwołania do zamkniętego <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolki dla każdej strony.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Jeśli <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>zadeklarowano kontrolki na stronie w obrębie <xref:System.Web.UI.WebControls.WebParts.CatalogZone>strefy, użytkownicy mogą przełączać strony do trybu wyświetlania katalogu i Dodaj z powrotem do strony wszystkie formanty, które wcześniej zostały zamknięte.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       Metoda OnWebPartClosed zapewnia deweloperom tworzenie niestandardowego programu obsługi dla <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Deweloperzy strony można dodać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnWebPartClosed` atrybutu `<asp:webpartmanager>` element strony, a następnie przypisanie nazwy niestandardowej metody z atrybutem. Jedno zadanie przydatne, deweloper może przeprowadzać w ramach tej metody jest wyświetlane symbol zastępczy zamiast zamkniętego kontroli, wraz z etykietka narzędzia, który będzie informować użytkowników, jak dodać kontrolki wróć do strony."
  syntax:
    content: protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing&quot;> </xref> zdarzenie, które występuje podczas procesu <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub usuwana ze strony kontrolki serwera."
  remarks: "Wywołuje metodę OnWebPartClosing <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>zdarzenie, aby wskazać, że formant jest zamknięty lub usunięty ze strony.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Metoda udostępnia opcję, aby anulować proces zamykania. Jeśli formant jest pomyślnie usunięty ze strony <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>następuje zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Strona deweloperzy mogą podać niestandardowego programu obsługi dla skojarzonego zdarzenia, dodając `OnWebPartClosinging` atrybutu `<asp:webpartmanager>` elementu na stronie sieci Web, a następnie przypisanie nazwy niestandardowej metody z atrybutem."
  syntax:
    content: protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted&quot;> </xref> zdarzenie, które występuje po <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontroli zostały trwale usunięte ze strony."
  remarks: "W trakcie usuwania wywoływana jest metoda OnWebPartDeleted <xref:System.Web.UI.WebControls.WebParts.WebPart>formantu (lub innych formantu serwera, który jest dodawany do <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy) ze strony.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Strona deweloperzy mogą tworzyć niestandardowe Obsługa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>zdarzenia przez dodanie `OnWebPartDeleted` atrybutu `asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>"
  syntax:
    content: protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting&quot;> </xref> zdarzeń, który wskazuje, że dynamicznym <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu (lub formant serwera lub użytkownika, który jest zawarty w <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy) trwa proces usuwania."
  remarks: "Tylko dynamiczne <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty mogą zostać usunięte, a po usunięciu formantu wystąpienia formantu zostanie usunięty ze strony i nie można przywrócić.</xref:System.Web.UI.WebControls.WebParts.WebPart> Dynamiczne <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolki są tymi, które są dodawane programowo, lub z katalogu części sieci Web, w przeciwieństwie do formantów statycznych które są zadeklarowane w znaczniku strony sieci Web.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Wywołuje metodę OnWebPartDeleting <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>zdarzeń, aby wskazać, czy formant jest trwałe usunięcie z jego strefy.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> Metoda zawiera również anulować proces usuwania. Jeśli formant jest pomyślnie usunięty ze strony, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>następuje zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       Strona deweloperzy mogą podać niestandardowego programu obsługi dla skojarzonego zdarzenia, dodając `OnWebPartDeleting` atrybutu `<asp:webpartmanager>` elementu na stronie sieci Web, a następnie przypisanie nazwy niestandardowej metody z atrybutem."
  syntax:
    content: protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved&quot;> </xref> zdarzenie, które występuje po <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formant został przeniesiony do innej lokalizacji na stronie."
  remarks: "Wywołuje metodę OnWebPartMoved <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>zdarzeń na końcu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>metodę, która zapewnia pełne proces przechodzenia formantu przed żadnego kodu zdarzeń uruchamia program obsługi.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>Zdarzenie jest zgłaszane, gdy formant zostanie przesunięty w jego bieżącej strefy lub do innej strefy i nie ma znaczenia, czy ruch odbywa się programowo lub przez przeciąganie kontrolki użytkownika.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Strona deweloperzy mogą tworzyć niestandardowe Obsługa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>zdarzenia przez dodanie `OnWebPartMoved` atrybutu `asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>"
  syntax:
    content: protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  id: OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving&quot;> </xref> zdarzeń, który wskazuje, że <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub kontrolki serwera lub użytkownika w <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy jest w trakcie przenoszenia."
  remarks: "Wywołuje metodę OnWebPartMoving <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>zdarzenie, które występuje, gdy <xref:System.Web.UI.WebControls.WebParts.WebPart>lub inne kontrolki serwera jest przenoszone w ramach strefy lub do innej strefy.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> Metoda zawiera również anulować proces. Jeśli przeniesienie zostało pomyślnie ukończone, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>następuje zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Strona deweloperzy mogą podać niestandardowego programu obsługi dla skojarzonego zdarzenia, dodając `OnWebPartMoving` atrybutu `<asp:webpartmanager>` elementu na stronie sieci Web, a następnie przypisanie nazwy niestandardowej metody z atrybutem."
  syntax:
    content: protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected&quot;> </xref> zdarzenie, które występuje po nawiązaniu połączenia między <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrolki."
  remarks: "Metoda OnWebPartsConnected zgłasza jej odpowiednie zdarzenie w końcu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>metodę, która zapewnia, że kroki wymagane do łączenia się z dwóch formantów zostały zakończone przed uruchomieniem jakiegokolwiek kodu programu obsługi zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Metoda zapewnia programowy kontroli nad procesem tworzenia połączeń i stanowiąc wygodne miejsce, w którym należy zaktualizować interfejs użytkownika (UI) lub powiadamiania użytkownika, że połączenie zostało ustanowione jest skojarzonego zdarzenia.       Strona deweloperzy mogą tworzyć niestandardowe Obsługa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>zdarzenia przez dodanie `OnWebPartsConnected` atrybutu `asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>"
  syntax:
    content: protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting&quot;> </xref> zdarzenie, które występuje w trakcie nawiązywania połączenia między dwiema <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub serwera lub użytkownika formanty zawarte w <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy."
  remarks: "Wywołuje metodę OnWebPartsConnecting <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>zdarzenie, które występuje, gdy próba nawiązania połączenia dwóch formantów.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> Metoda zapewnia możliwość anulowania próba nawiązania połączenia. Jeśli połączenie zostanie nawiązane, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>następuje zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       Strona deweloperzy mogą podać niestandardowego programu obsługi dla skojarzonego zdarzenia, dodając `OnWebPartsConnecting` atrybutu `<asp:webpartmanager>` elementu na stronie sieci Web, a następnie przypisanie nazwy niestandardowej metody z atrybutem."
  syntax:
    content: protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected&quot;> </xref> zdarzenie, które występuje po połączenie między <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrolki została zakończona."
  remarks: "Metoda OnWebPartsDisconnected zgłasza jej odpowiednie zdarzenie w końcu <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>metodę, która wykonuje proces przerywa połączenie między dwoma formantami.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       Metoda zapewnia programowy kontroli nad procesem zakończenia połączenia, dzięki czemu deweloperzy mogą poinformować użytkownika, wprowadzić zmiany w interfejsie użytkownika (UI) lub wprowadzić inne zmiany w aplikacji.       Strona deweloperzy mogą tworzyć niestandardowe Obsługa <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>zdarzenia przez dodanie `OnWebPartsDisconnected` atrybutu `asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>"
  syntax:
    content: protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zgłasza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting&quot;> </xref> zdarzeń, co oznacza, że dwa <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub kontrolki serwera lub użytkownika w <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy są właśnie zakończenia połączenia."
  remarks: "Wywołuje metodę OnWebPartsDisconnecting <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>zdarzenie, które występuje, gdy dwa formanty są zakończenia połączenia.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Metoda zawiera anulować procesu rozłączania. Jeśli połączenie zostanie pomyślnie usunięty, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>następuje zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       Strona deweloperzy mogą podać niestandardowego programu obsługi dla skojarzonego zdarzenia, dodając `OnWebPartsDisconnecting` atrybutu `<asp:webpartmanager>` elementu na stronie sieci Web, a następnie przypisanie nazwy niestandardowej metody z atrybutem."
  syntax:
    content: protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  id: Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera odwołanie do obiektu, który zawiera dane personalizacji dla strony sieci Web."
  remarks: "Właściwość personalizacji zapewnia dostęp do <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>obiekt, który jest skojarzony ze stroną za pośrednictwem <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> Za pomocą tej właściwości, można dostęp do różnych elementów członkowskich obiektu personalizacji. Na przykład można użyć <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A>metodę, aby przełączyć zakresu personalizacji strony z udostępnionego do zakresu użytkownika, albo na odwrót.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> Można również znaleźć bieżącego zakresu personalizacji strony, czy Personalizacja nawet jest włączony na stronie, który dostawca jest używana dla danych personalizacji i inne.       Należy pamiętać, że danych odwołuje się właściwość personalizacji tylko dane personalizacji poziomu strony, które są śledzone przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Dane personalizacji specyficzne dla formantu, takie jak wartości właściwości wartość <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolki, nie jest częścią właściwości personalizacji.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Aby uzyskać więcej informacji dotyczących personalizacji części sieci Web, zobacz [Przegląd personalizacji części sieci Web](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the Personalization property programmatically.  \n  \n The following Web page allows a user to enter edit mode to edit certain aspects of the <xref:System.Web.UI.WebControls.Calendar> control. The **Toggle Scope** button switches the page to user or shared personalization scope. The **Edit Mode** and **Browse Mode** buttons each switch the page into the appropriate display mode. Notice that in the `<script>` tag section of the file, two of the methods that handle events use the Personalization property to access useful members of the underlying object. Specifically, these methods use the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> method and the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> property on the object accessed through the Personalization property.  \n  \n [!code-cs[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_970_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_970_1.aspx)]  \n  \n For the code example to run, you also must enable a user or users to personalize pages in shared scope. Add an entry to the Web.config file, within the `<system.web>` section, that looks like the following markup.  \n  \n```  \n<webParts>  \n  <personalization>  \n    <authorization>  \n      <allow  \n        users=\"[Replace the text and brackets with a user name or   \n           group.]\"  \n        roles=\"admin\"   \n        verbs=\"enterSharedScope\"  />  \n    </authorization>  \n  </personalization>  \n</webParts>   \n```  \n  \n After you load the page in a browser, click the **Toggle Scope** button, and notice that the page now says the scope is shared. Click **Edit Mode** to change the display mode, click the verbs menu on the visible control, and select **Edit** from the menu. Notice that the user interface (UI) for both editing controls appears. Now click **Browse Mode** to return to normal browsing. If the page says it is in shared scope, click **Toggle Scope** again to ensure the page is in user scope. Next, follow the same steps to edit the control again, but notice that now in the editing UI, the <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> control does not appear. That is because this control only works when the page is in shared personalization scope."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref> zawierający dane personalizacji."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  id: RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Umożliwia <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu można wyemitować skrypt po stronie klienta, który jest używany dla różnych funkcji personalizacji, takich jak przeciąganie <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrolki na stronie sieci Web."
  syntax:
    content: protected virtual void RegisterClientScript ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zastąpiona w celu zapobieżenia <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> renderowania zawartości formantu."
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Odbierająca zawartość kontrolki do zapisu do strony."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zapisuje dane o stanie <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontrolować, dane można przywrócić na przyszłe żądania do strony sieci Web, który zawiera formant."
  remarks: "SaveControlState metoda zapisuje dane o stanie dla właściwości, które powinny zostać utrwalony między ogłaszania zwrotnego strony, nawet wtedy, gdy <xref:System.Web.UI.Control.EnableViewState%2A>ma ustawioną właściwość `false`.</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>Dla tego formantu zapisanego dane o stanie.</xref:System.Object>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zapisuje dane stanu personalizacji niestandardowe przechowywane przez <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontrolować, dzięki czemu można wykorzystać te dane przy każdym załadowaniu strony."
  remarks: "Metoda SaveCustomPersonalizationState jest krytyczne w trakcie personalizacji, ponieważ umożliwia spersonalizowanych ustawień do przechowywania dla przeglądarki przyszłych sesji i odwiedza do strony. Metoda zapisuje dane stanu personalizacji niestandardowych, które zawiera pozycje takie jak następujące: dynamiczne <xref:System.Web.UI.WebControls.WebParts.WebPart>lub kontrolki serwera, które zostały dodane do strony lub usunięte z stronę; formantów, które zostały przeniesione na stronie; i dynamiczne połączenia, które zostały utworzone lub usunięte.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Nie można wywołać tej metody bezpośrednio w kodzie. Można jednak wywołać <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>metody, które wywołuje tę metodę w celu zapisywania danych personalizacji.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>"
  syntax:
    content: protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> zawiera dane o stanie do załadowania."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  id: SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera odwołanie do <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub innych formantu serwera, który jest aktualnie wybrany do edytowania lub tworzenia połączenia z formantem."
  remarks: "Właściwość elementu SelectedWebPart zwraca odwołanie do <xref:System.Web.UI.WebControls.WebParts.WebPart>lub innych formantu serwera, który jest aktualnie wybrany do edytowania lub tworzenia połączenia z formantem.</xref:System.Web.UI.WebControls.WebParts.WebPart>       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>Kontrola zapewnia kilka metod przydatne i zdarzeń do obsługi proces wybierania formantu.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>Zdarzenie tuż po wybraniu formantu, ale przed wprowadzeniem jakichkolwiek zmian.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Aby wykonać niektóre akcje w formancie po wybraniu, Przesłoń <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Na przykład można zmienić wygląd formantu, który jest zaznaczony, ale nie zmienił się jeszcze, aby wyróżnić wizualnie kontroli jest zaznaczone.       <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>Zdarzenie zaraz po zmianie wybranej kontrolki.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Aby wykonać niektóre akcje w formancie po został zmieniony, należy zastąpić <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formant, który jest aktualnie wybrany do edycji lub stanowiących połączenie."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  id: SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje po zaznaczeniu jednego <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu ma zmieniony i przeniesiony do innego formantu na stronie sieci Web."
  remarks: "To zdarzenie może być używany w połączeniu z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>metodę, aby zmienić interfejsu użytkownika (UI) wybrany formant.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Na przykład, jeśli użytkownik zmienia strony do trybu projektowania (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>), a następnie wybiera <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli z zamiarem przeciągając go do nowej pozycji jest często stosowanym rozwiązaniem zmienić renderowanie zaznaczonego formantu, na przykład zmiana koloru obramowania lub w tle jest.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>      > [!NOTE] > Uzyskać więcej informacji dotyczących używania zdarzeń, zobacz [porady: korzystanie zdarzeń w aplikacjach formularzy sieci Web](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  id: SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje podczas zmiany, które <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub serwera formant aktualnie jest zaznaczony na stronie sieci Web."
  remarks: "To zdarzenie może być używany w połączeniu z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Strona deweloperzy mogą tworzyć program obsługi zdarzeń w ich kodu dodając `OnSelectedWebPartChanging` atrybutu `<asp:webpartmanager>` element w stronę i ustawienia wartości atrybutu nazwy niestandardowej metody obsłuży zdarzenie.       To zdarzenie jest wywoływane podczas procesu początku lub na końcu połączenie między formantami i gdy otwierające i zamykające edycji formantu. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>       Zwykle po SelectedWebPartChanging zdarzenia jest bezpośrednio z powodu akcji przez użytkownika, która zmienia wybrany formant, zdarzenia można anulować. Istnieje jednak scenariusz, w którym nie można anulować zdarzenia. Jeśli <xref:System.Web.UI.WebControls.WebParts.WebPartZone>formantu zostanie usunięty, <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty zawiera wszystkie należy zamknąć, w przeciwnym razie mogłyby oddzielony.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> W takim przypadku <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrolować zamknięciu <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów, nie użytkownik i jego musi ustalić wybrano kontroli i kiedy należy zmienić wybór, bez żadnych ryzyko przerwania, tak, aby go ukończyć proces czyszczenie wszystkich kontrolek.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> W związku z tym zgodnie z założeniami SelectedWebPartChanging metody nie można anulować w tym scenariuszu. Dla zdarzenia powiązane, które można anulować, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  id: SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ustawia flagę wskazującą tych danych personalizacji niestandardowych w celu <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontrolki została zmieniona."
  remarks: "Metoda SetPersonalizationDirty ustawia flagę ostatecznie powodujący składniki personalizacji w kontroli części sieci Web w celu zapisywania danych personalizacji zaktualizowane. Aby uzyskać więcej informacji na temat scenariuszy, które mogą powodować zmiany w danych personalizacji śledzone przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>sterowania, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>Właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Metoda SetPersonalizationDirty nie można wywołać bezpośrednio w kodzie i nie może zostać zastąpione, ponieważ jest używana wewnętrznie przez formant części sieci Web, Ustaw jako część personalizacji części sieci Web."
  syntax:
    content: protected void SetPersonalizationDirty ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ustawia <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>wartość właściwości jest równa aktualnie zaznaczonego <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub kontrolki serwera.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  remarks: "Metoda SetSelectedWebPart jest wywoływana podczas procesów, które rozpoczynać się ani kończyć edycji określony przez kontrolki `webPart` parametr oraz te, które rozpoczynać się ani kończyć połączenie, które obejmuje `webPart`.       Na początku procesów edycji i połączenia, `webPart` jest formant, który został wybrany do edycji lub aby wprowadzić połączenia.       Po zakończeniu procesów edycji i połączenia `null` jest przekazywany do metody SetSelectedWebPart, co prowadzi do aktualnie zaznaczony formant już wybrane."
  syntax:
    content: protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub formantu serwera, który został wybrany."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera lub ustawia ciąg pusty (&quot;&quot;), aby skórki nie mogą być stosowane do <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu."
  remarks: "Właściwość SkinID zastępuje dziedziczonego <xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName>właściwość, aby zapobiec <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli, czyli niewidocznym formancie z za pomocą karnacji.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName> Implementacja właściwości uniemożliwia karnacji przypisywane przez zawsze zwraca pusty ciąg z `get` metody dostępu i zawsze zgłoszeniu wyjątku, jeśli podjęto próbę ustawienia wartości `set` metody dostępu."
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "Pusty ciąg, który uniemożliwia <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu o karnacji przypisane do niej."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Próbowano ustawić wartość właściwości."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  id: StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera odwołanie do kolekcji wszystkie <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> obiektów na stronie sieci Web, które są zdefiniowane jako połączenia statyczne."
  remarks: "Właściwość StaticConnections jest używana przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli śledzenie i zarządzanie nimi wszystkie połączenia statyczne na stronie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Połączenia statyczne, w przeciwieństwie do połączenia dynamicznego, nie trzeba za każdym razem, gdy realizacją strony można dodać do strony.       Kolekcja odwołuje się ta właściwość zawiera wszystkie znajdujące się na stronie, czy są one utworzone programowo, czy określony za pomocą połączenia statyczne `<asp:webpartconnection>` elementu w znaczniku strony."
  example:
  - "The following code example demonstrates programmatic use of the StaticConnections property.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need to obtain the first two parts of the example--the custom user control and the source code for the custom controls and interface--from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. That topic also explains your options for compiling the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The third part of the code example is the Web page. The declarative markup for the page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the StaticConnections property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_98_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_98_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> zawierający połączenia statyczne na stronie."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  id: SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera kolekcję tylko do odczytu wszystkich trybów wyświetlania, które są dostępne na określonej stronie sieci Web."
  remarks: "Właściwość SupportedDisplayModes zawiera trybów wyświetlania, które są faktycznie dostępne na stronie podane rodzaje strefy tam środki kontroli na stronie.      > [!NOTE] > Trybów wyświetlania można wyłączyć, a po wyłączeniu trybu wyświetlania nie został dodany do kolekcji SupportedDisplayModes nawet wtedy, gdy na stronie danego typu strefy, który obsługuje ten tryb wyświetlania.       Tryb przeglądania i tryb projektowania są zawsze obsługiwane. Edycja, są trybów wyświetlania, które mogą być różne w katalogu, a następnie połącz trybów. Każdy z tych trybów wyświetlania jest skojarzony z określonego typu <xref:System.Web.UI.WebControls.WebParts.ToolZone>kontroli.</xref:System.Web.UI.WebControls.WebParts.ToolZone> Jest obecność specjalnie typu strefy na stronie sieci Web, który powoduje, że tryb wyświetlania określonego do dodania do kolekcji odwołuje się właściwość SupportedDisplayModes. Na przykład, jeśli strona sieci Web zawiera <xref:System.Web.UI.WebControls.WebParts.EditorZone>strefy, ale nie <xref:System.Web.UI.WebControls.WebParts.CatalogZone>strefy, a następnie edytuj tryb wyświetlania jest jeden z trybów obsługiwane na tej stronie, ale tryb wyświetlania katalogu nie jest obsługiwana.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.EditorZone>      > [!NOTE] > Właściwości SupportedDisplayModes różni się od <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>właściwość, która odwołuje się do kolekcji zawierającej wszystkie tryby wyświetlania, które są dostępne dla bieżącego <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrolować, nawet te, które nie są obsługiwane w określonej strony.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>"
  example:
  - "The following code example shows the programmatic use of the SupportedDisplayModes property. The code uses this property to populate the list with only the display modes available in the current Web page.  \n  \n There are three supported display modes on this page: browse, design, and edit. The first two are always available, and the edit mode is available in this code example because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control. The catalog and connect display modes are not shown, because their corresponding zones are not on this page.  \n  \n [!code-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_388_1.aspx)]\n [!code-cs[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_388_1.aspx)]  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> zawierający zestaw <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> obiektów dostępnych na określonej stronie sieci Web."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera wartość wskazującą, czy dane stanu personalizacji niestandardowych zarządzane przez <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formant został zmieniony na stronie sieci Web."
  remarks: "Właściwość IPersonalizable.IsDirty umożliwia wywołań określić, czy Personalizacja stanu danych, który jest zarządzany przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formant został zmieniony.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Gdy użytkownicy personalizować szczegóły na poziomie strony, na przykład zmiana układ strony, tworzenie lub usuwanie połączeń oraz dodawanie lub usuwanie kontrolek, dane personalizacji zarządzanych przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli zmian.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Jest przekazywane metoda, która zwraca dotyczące obiektów wywołujących wartość chronionej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>Właściwości, które nie są bezpośrednio dostępne przez obiekty wywołujące.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>      > [!NOTE] > Właściwości IPersonalizable.IsDirty nie wskazuje, czy wartość właściwości lub poszczególnych właściwości, które mają wpływ na wygląd poszczególnych <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów, zostały zmienione.</xref:System.Web.UI.WebControls.WebParts.WebPart> Poziom kontroli personalizacji jest śledzony osobno dla każdego formantu. Właściwość IPersonalizable.IsDirty wskazuje tylko czy dane personalizacji który znajduje się na poziomie strony i jest zarządzany przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formant został zmieniony.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Na poniższej liście opisano niektóre typowe wystąpienia personalizacji spowodowałoby właściwości IPersonalizable.IsDirty zwrócić wartość `true`, wskazujące który <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formant ma pewne dane personalizacji zmienione:-zamknięcie statycznego <xref:System.Web.UI.WebControls.WebParts.WebPart>formantu (lub kontrolki serwera lub użytkownika), na stronie.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>      -Przywracanie static zamkniętych <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli z katalogu strony powrót do strony.</xref:System.Web.UI.WebControls.WebParts.WebPart>      — Przenoszenie żadnego formantu, w ramach strefy lub do innej strefy.      — Dodawanie formantu z katalogiem <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolki serwera i/lub dodawanie formantu programowo.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Tworzenie połączenia między dwiema <xref:System.Web.UI.WebControls.WebParts.WebPart>steruje programowo lub przy użyciu interfejsu użytkownika (UI) połączenia.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Usunięcie połączenia między dwiema <xref:System.Web.UI.WebControls.WebParts.WebPart>steruje programowo lub przy użyciu interfejsu użytkownika połączenia.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Aby uzyskać dostęp do wartości tej właściwości, należy rzutować <xref:System.Web.UI.WebControls.WebParts.WebPartManager>wystąpienie kontrolki do <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>interfejsu; możesz przeczytać <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>wartości właściwości.</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates a simple usage of the IPersonalizable.IsDirty property, to indicate some common page personalization instances that cause a <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control's personalization data to change.  \n  \n The code example has four parts:  \n  \n-   A user control that allows you to change display modes on a page that contains Web Parts controls.  \n  \n-   A source file that contains the code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an interface.  \n  \n-   A Web page that hosts all the controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the source file with the custom controls and the interface. Notice that the `IZipCode` interface exposes one method, and that this method as implemented in the custom `ZipCodeWebPart` control serves as a callback method to enable `ZipCodeWebPart` to act as a provider in a connection scenario. The other control, `WeatherWebPart`, acts as the consumer control in a connection; it can consume the particular interface provided by `ZipCodeWebPart`. In a real application, `WeatherWebPart` could consume a personalized ZIP Code value from the provider, and then provide graphical weather information to users.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation; therefore, notice that the `Register` directive for this component at the top of the Web page contains only `TagPrefix` and `Namespace` attributes, without an `Assembly` attribute. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that it contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zones, with the first one containing the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. There is also a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, which contains a standard <xref:System.Web.UI.WebControls.Calendar> control that users can add to the page. The `<asp:connectionszone>` element provides a connection UI for users to create connections between controls. In the `Page_PreRender` method, notice that it checks to see whether the personalization data has changed and, if so, updates the text of `Label1`.  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_2.aspx)]  \n  \n After you load the page in a browser, try to create some of the scenarios listed in the Remarks section of this topic that will change the personalization data. As you make various changes, when a change involves one of the personalization scenarios tracked by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, the text of the `Label1` control is displayed to indicate that personalization data has changed. For example, you can:  \n  \n-   Create a connection between controls by clicking the **Connect WebPart Controls** button.  \n  \n-   Use the **Display Mode** drop-down list control to switch the page to catalog mode, and add the **My Calendar** control to the second <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n-   Change the page back to browse mode, click on the verbs menu (shown with an arrow symbol in the title bar) for the **My Calendar** control, and select **Close** to close it and add it to the page catalog.  \n  \n-   Return the page to catalog mode, and add the **My Calendar** control back to the page.  \n  \n-   Use the **Display Mode** control to switch the page to design mode, and rearrange the layout of the controls by dragging one or more of them to another zone, or to a different position in the same zone."
  syntax:
    content: bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }
    return:
      type: System.Boolean
      description: "Wartość logiczna wskazująca, czy dane stanu personalizacji został zmieniony."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zwraca wcześniej zapisane dane stanu personalizacji niestandardowe muszą zostać załadowane do <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu."
  remarks: "Ta metoda jest implementacją <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName>metodę, która umożliwia kontroli składników Web Part ustawioną bezpośrednio dostęp do chronionej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName> Gdy ta metoda jest wywoływana, są przechowywane niestandardowe dane spersonalizowane, które jest zarządzane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli i który został wcześniej zapisany w magazynie danych trwałych do użycia w dalszej części procesu inicjalizacji.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > W większości przypadków kodu dewelopera strony i kontrolki nie trzeba wywołać tę metodę, ponieważ jest on używany głównie przez formant części sieci Web ustawiona jako jego mechanizmu pobierania danych personalizacji."
  syntax:
    content: void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> zawiera dane o stanie do załadowania."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zapisuje dane stanu personalizacji niestandardowego, który jest zarządzany przez <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> formantu."
  remarks: "Metoda IPersonalizable.Save jest implementacją <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName>metodę, która umożliwia kontroli składników Web Part ustawioną bezpośrednio dostęp do chronionej <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName> Ta metoda jest wywoływana, zapisuje wszystkie spersonalizowane danych, który jest zarządzany przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli w magazynie danych trwałych skonfigurowana dla aplikacji sieci Web części.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > W większości przypadków kodu dewelopera strony i kontrolki nie trzeba wywołać tę metodę, ponieważ jest on używany głównie przez formant części sieci Web, Ustaw jako jego mechanizm umożliwiający zapisanie danych personalizacji."
  syntax:
    content: void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> zawiera dane o stanie do zapisania."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zastosowanie personalizacji danych o stanie <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroli i wywołuje metodę podstawową, aby włączyć śledzenie zmian w danych stan widoku formantu."
  remarks: "Zmian stanu widoku danych są przechowywane w <xref:System.Web.UI.StateBag>obiektu i jest możliwy za pośrednictwem formantu <xref:System.Web.UI.Control.ViewState%2A>Właściwości.</xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.StateBag>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  id: Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera wartość, która umożliwia formantów podrzędnych mają być wyświetlane."
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>Formant przesłania podstawowym <xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName>zawsze zwraca wartość dla właściwości `true` dla właściwości Visible.</xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Mimo że <xref:System.Web.UI.WebControls.WebParts.WebPartManager>samego formantu nie jest widoczne, wartość właściwości Visible musi być ustawiona `true` tak, aby jej kontrolkach podrzędnych są widoczne domyślnie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Jeśli spróbujesz ustawić wartość właściwości Visible zawsze generuje błąd, ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli zastąpiono zachowanie właściwości podstawowej i uniemożliwia przypisywanie wartości do właściwości.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Ta właściwość nie jest powiązania w wizualnych projektantów, ale jest powiązania w czasie wykonywania. Aby uzyskać więcej informacji zobacz <xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute>"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "Wartość logiczna, która wskazuje, czy <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontroli i jej kontrolkach podrzędnych są widoczne. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>we wszystkich przypadkach."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Nastąpiła próba do przypisania wartości dla właściwości."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  id: WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje po dynamicznym <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub inne kontrolki serwera został dodany do <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy, aby wskazać, że formant został dodany pomyślnie."
  remarks: "Zdarzenie WebPartAdded jest przydatne w przypadku wskazującą, czy dynamiczna kontrola (kontrola dodać programistycznie, a nie został zadeklarowany w znaczniku strony) został pomyślnie dodany do strefy. W połączeniu z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>metody zdarzenia oferuje deweloperom sposób zaktualizuj interfejs użytkownika (UI) lub w przeciwnym razie Powiadom użytkowników, czy formant został pomyślnie dodany.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  id: WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje w ciągu proces dodawania dynamicznym <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub inny formant serwera do <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy."
  remarks: "Zdarzenie WebPartAdding zostanie wywołane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A>metody po rozpoczęciu procesu Dodawanie formantu do strefy.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> To zdarzenie umożliwia anulować proces przed ukończeniem. Jeśli proces dodawania zakończy się pomyślnie, to zdarzenie występuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       Strona deweloperzy mogą podać niestandardowe programy obsługi dla zdarzenia przez dodanie `OnWebPartAdding` atrybutu `<asp:webpartmanager>` element w stronę i przypisywanie nazwę niestandardowej metody z atrybutem."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  id: WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje, gdy <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu (lub kontrolki serwera lub użytkownika) zostaną usunięte ze strony."
  remarks: "Zdarzenie WebPartClosed oznacza, że formant został zamknięty pomyślnie, przez użytkownika lub programowo. Aby zamknąć <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli oznacza usunąć go ze strony, aby nie są odtwarzane i umieścić go w specjalny zawierający obiekt skrót katalogu strony.</xref:System.Web.UI.WebControls.WebParts.WebPart> Katalog strony, który odpowiada <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>kontrolować, przechowuje odwołania do zamkniętego <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolki dla każdej strony.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Jeśli <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>zadeklarowano kontrolki na stronie w obrębie <xref:System.Web.UI.WebControls.WebParts.CatalogZone>strefy, użytkownicy mogą przełączać strony do trybu wyświetlania katalogu i Dodaj z powrotem do strony wszystkie formanty, które wcześniej zostały zamknięte.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       Zdarzenie WebPartClosed jest skojarzone z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>metody, która zarówno wywołuje zdarzenie i zapewnia obsługi dla niego.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>       Deweloperzy strony można dodać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnWebPartClosed` atrybutu `<asp:webpartmanager>` element strony, a następnie przypisanie nazwy niestandardowej metody z atrybutem."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  id: WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje podczas procesu usuwania <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantu (lub kontrolki serwera lub użytkownika) ze strony."
  remarks: "WebPartClosing zdarzenie zostanie wywołane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A>metody podczas <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli Trwa zamykanie formantu.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> Jeżeli usunięcie formantu zakończy się pomyślnie, to zdarzenie występuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Strona deweloperzy mogą podać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnWebPartClosed` atrybutu `asp:webpartmanager>` element w stronę i przypisywanie nazwę niestandardowej metody z atrybutem.       Zwykle, gdy zdarzenie WebPartClosing jest wywoływane bezpośrednio z powodu zamknięcia użytkownika <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli, zdarzenia można anulować.</xref:System.Web.UI.WebControls.WebParts.WebPart> Istnieje jednak scenariusz, w którym nie można anulować zdarzenia. Jeśli <xref:System.Web.UI.WebControls.WebParts.WebPartZone>formantu zostanie usunięty, <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty zawiera wszystkie należy zamknąć, w przeciwnym razie mogłyby oddzielony.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> W takim przypadku <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrolować zamknięciu <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty nie użytkownika.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> I kiedy <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formant jest w trakcie wywoływania <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>metody, aby zamknąć każdego kontrolować i WebPartClosing zdarzenie jest zgłaszane, nie można anulować zdarzenia (zgodnie z projektem), ponieważ <xref:System.Web.UI.WebControls.WebParts.WebPartManager>musi wykonać zadanie oczyszczania formantów wszystkie strefy.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  id: WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje po <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub inne kontrolki serwera został usunięty z <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy."
  remarks: "Zdarzenie WebPartDeleted jest przydatne w przypadku wskazujący, że dynamicznej kontroli (kontrola dodać programistycznie, a nie został zadeklarowany w znaczniku strony) zostało pomyślnie usunięte ze strefy. W połączeniu z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>metody zdarzenia oferuje deweloperom sposób zaktualizuj interfejs użytkownika (UI) lub w przeciwnym razie Powiadom użytkowników, że formant został pomyślnie usunięty.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  id: WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje podczas procesu trwałe usunięcie wystąpienia dynamicznym <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub inny formant serwera z <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy."
  remarks: "Zdarzenie WebPartDeleting zostanie wywołane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A>metody, w trakcie usuwania kontrolki dynamicznej (taki, który został dodany programowo lub przez użytkownika za pomocą interfejsu użytkownika części sieci Web).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> Zdarzenie zapewnia możliwość anulować proces przed zakończeniem. Jeśli proces usuwania zostało pomyślnie ukończone, to zdarzenie występuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       Strona deweloperzy mogą podać niestandardowe programy obsługi dla zdarzenia przez dodanie `OnWebPartDeleting` atrybutu `<asp:webpartmanager>` element w stronę i przypisywanie nazwę niestandardowej metody z atrybutem."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  id: WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje po <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub kontrolki serwera został przeniesiony do innej lokalizacji na stronie sieci Web."
  remarks: "To zdarzenie dotyczy zarówno statyczne (deklaracja w znaczniku strony sieci Web), jak i formantów dynamicznych. Jest ona skojarzona z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> Ponieważ zdarzenie jest wywoływane po zakończeniu przenoszenia, deweloperzy mogą obejmować program obsługi zdarzeń zapewnienie niektórych powiadomień do użytkowników, niektóre weryfikacji lub pewne inne akcje. Aby dodać obsługę zdarzeń, można dodać `OnWebPartMoved` atrybutu `<asp:webpartmanager>` element w strony i przypisz nazwę niestandardowej metody z atrybutem."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  id: WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje podczas przenoszenia <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub innych formantu serwera, który jest zawarty w <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy."
  remarks: "WebPartMoving zdarzenie jest wywoływane podczas <xref:System.Web.UI.WebControls.WebParts.WebPart>lub inne kontrolki serwera jest przenoszony własnej strefie, lub do innej strefy.</xref:System.Web.UI.WebControls.WebParts.WebPart> Taka sytuacja może wystąpić, zarówno gdy użytkownik przeciąga formantu, jak i po programowe przenoszenia.       Zdarzenie WebPartMoving zostanie wywołane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>metody która zapewnia możliwość anulowania proces przed zakończeniem.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> Jeśli przeniesienie zostało zakończone i kontrolki umieszczone w nowej pozycji, to zdarzenie występuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Strona deweloperzy mogą tworzyć niestandardowe obsługi dla zdarzenia przez dodanie `OnWebPartMoving` atrybutu `<asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  id: WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera odwołanie do wszystkich <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formanty śledzone przez <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> kontrolki na stronie sieci Web."
  remarks: "Właściwość składników Web Part jest używana przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formantu, aby śledzić wszystkie <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów, które są zawarte w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy na stronie.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Mimo że kolekcja jest tylko do odczytu, są dostępne poszczególne <xref:System.Web.UI.WebControls.WebParts.WebPart>steruje za pośrednictwem zmiany kolekcji i udostępnić je programowo.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Możliwe są <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolki umieszczone na stronie poza <xref:System.Web.UI.WebControls.WebParts.WebPartZone>strefy, co prowadzi do formantu nie jest śledzony przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli lub w jego Kolekcja składników Web Part.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Istnieje jednak wyboru Użyj <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolować poza strefą, ponieważ następnie utraci jego funkcje części sieci Web i działa jako formant normalne serwera.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Dowolnego typu formantu, który można umieścić w strefie, czy niestandardowego <xref:System.Web.UI.WebControls.WebParts.WebPart>formantu, formantu standardowego ASP.NET, kontrolkę użytkownika lub formantu niestandardowego serwera, może być traktowana jako <xref:System.Web.UI.WebControls.WebParts.WebPart>formantu w czasie wykonywania.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Gdy formant, który nie jest <xref:System.Web.UI.WebControls.WebParts.WebPart>formant jest umieszczany w <xref:System.Web.UI.WebControls.WebParts.WebPartZone>strefy w czasie wykonywania ASP.NET opakowuje kontrolki z <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>obiektu, tak aby formant może zachowywać się jako wartość PRAWDA <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> W związku z tym za pomocą właściwości składników Web Part, <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formantu można śledzić dowolnego typu formantu serwera, niezależnie od tego, czy pochodzi od <xref:System.Web.UI.WebControls.WebParts.WebPart>klasy.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the WebParts property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Notice that in the declarative markup for the Web page, within the `<asp:webpartzone>` element there are two standard ASP.NET server controls. Although these do not inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, because they are in a zone they will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, and thus will be included in the collection referenced by the WebParts property. You could also add custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, user controls, or custom server controls in this zone, and they would be handled the same way.  \n  \n [!code-vb[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_992_1.aspx)]\n [!code-cs[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_992_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **WebPart Count** button, the code uses the WebParts property to return the count of controls in the collection. If you click the **Hide Calendar Title** button, the code changes the calendar so that it renders with only a border and not a title."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCollection&quot;> </xref> zawiera odwołania do zestawu <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrolki."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  id: WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje po ustanowieniu określonego połączenia między <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantów (lub kontrolki serwera lub użytkownika)."
  remarks: "Zdarzenie WebPartsConnected jest skojarzony z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> Zdarzenie jest przydatne, ponieważ po wiadomo, że połączenie jest pełny, możesz chcieć poinformować użytkownika fakt lub nawet zmienić interfejsu użytkownika (UI) strony. Na przykład można wyświetlić niektórych graficzny, które sugeruje udane połączenie między dwoma formantami lub wyświetlania krótką wiadomość, a następnie zmień tryb wyświetlania strony z powrotem do trybu przeglądania.       Deweloperzy strony można skojarzyć niestandardowy program obsługi zdarzeń z tym zdarzeniem, dodając `OnWebPartsConnected` atrybutu `<asp:webpartmanager>` elementu na stronie i przypisywanie nazwę niestandardowej metody z atrybutem."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  id: WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje podczas procesu tworzenia połączenia między <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> formantów (lub serwera lub użytkownika formanty umieszczane w <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy)."
  remarks: "Zdarzenie WebPartsConnecting zostanie wywołane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A>metody i sygnalizuje, rozpoczął proces połączenia (na przykład użytkownik ma wybrany formant i kliknięciu zlecenie połączenia), ale nie została jeszcze zakończona.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> Zdarzenie zapewnia możliwość anulowania połączenia przed zakończeniem. Jeśli połączenie zostało pomyślnie ukończone, to zdarzenie występuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       Deweloperzy strony można dodać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnWebPartsConnecting` atrybutu `<asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  id: WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje po zakończeniu połączenia między dwiema <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub kontrolki serwera zostało zakończone."
  remarks: "Zdarzenie WebPartsDisconnected jest skojarzony z <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>metody.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> Zdarzenie jest przydatne, ponieważ po wiadomo, że połączenie zostało zakończone, możesz chcieć poinformować użytkownika, niektóre akcje czyszczenia w kodzie lub wprowadzić inne zmiany w interfejsie użytkownika (UI).       Deweloperzy strony można skojarzyć niestandardowy program obsługi zdarzeń z tym zdarzeniem, dodając `OnWebPartsDisConnected` atrybutu `<asp:webpartmanager>` elementu na stronie i przypisywanie nazwę niestandardowej metody z atrybutem."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  id: WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Występuje podczas kończenia połączenia między wcześniej połączona <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> lub kontrolki serwera."
  remarks: "Zdarzenie WebPartsDisconnecting zostanie wywołane przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A>— Metoda która sygnalizuje fakt że użytkownik kliknął zlecenie rozłączenia lub <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>w przeciwnym razie zostanie wywołana metoda.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> Zdarzenie zapewnia możliwość anulowania zakończenia połączenia przed zakończeniem procesu. Jeśli połączenie jest zakończone pomyślnie, to zdarzenie występuje <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       Deweloperzy strony można dodać niestandardowego programu obsługi dla zdarzenia przez dodanie `OnWebPartsDisconnecting` atrybutu `<asp:webpartmanager>` elementu i przypisywanie nazwę niestandardowej metody z atrybutem.       Zwykle przypadku zdarzenia WebPartsDisconnecting bezpośrednio z powodu akcji przez użytkownika, która kończy się połączenia, można anulować zdarzenia. Istnieje jednak kilka scenariuszy, w których nie można anulować zdarzenia. Pierwszy scenariusz jest, jeśli <xref:System.Web.UI.WebControls.WebParts.WebPartZone>formantu zostanie usunięty, <xref:System.Web.UI.WebControls.WebParts.WebPart>formanty zawiera wszystkie należy zamknąć, w przeciwnym razie mogłyby oddzielony.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> W takim przypadku <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontrolować zamknięciu <xref:System.Web.UI.WebControls.WebParts.WebPart>formantów, nie użytkownik i jego musi również mieć możliwość przerwanie połączenia wszystkich połączonych formantów bez żadnych ryzyko przerwania, tak, aby ją zakończyć proces wyczyszczenie i zamknięcie wszystkich kontrolek.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> W związku z tym zgodnie z założeniami WebPartsDisconnecting metody nie można anulować w tym scenariuszu. Dla zdarzenia powiązane, które można anulować, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>zdarzeń.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>       Drugi scenariusz, w którym nie można anulować zdarzenia WebPartsDisconnecting jest gdy <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>Metoda jest wywoływana (to wywoływana podczas każdego żądania do strony, na przykład), a istnieje pewien typ konflikt w istniejących połączeń na stronie.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Na przykład możliwe, że użytkownik nawiązuje połączenie kontroli x y kontroli, ale użytkownika udostępnionego łączy kontroli x do sterowania z, a jeszcze kontroli x nie jest uprawniony do utworzenia wielu połączeń. W takim przypadku ustawienia użytkownika dla połączenia mają pierwszeństwo i <xref:System.Web.UI.WebControls.WebParts.WebPartManager>kontroli rozwiązuje konflikt przez wywołanie metody <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>— Metoda i zakończenia połączenia między x i z dla określonego użytkownika.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Ponieważ rozłączenie jest niezbędne do rozwiązywania konfliktów, zgodnie z założeniami WebPartsDisconnecting zdarzeń nie można anulować w tym scenariuszu.       Trzeci scenariusz, w którym nie można anulować metoda WebPartsDisconnecting jest gdy <xref:System.Web.UI.WebControls.WebParts.WebPart>lub formantu serwera, który jest aktualnie połączony został usunięty lub zamknięty.</xref:System.Web.UI.WebControls.WebParts.WebPart> Formantu ostatecznie mają zostać usunięte ze strony, dlatego jest logicznego konieczność usunięcia połączenia. W związku z tym, kiedy <xref:System.Web.UI.WebControls.WebParts.WebPartManager>wywołuje kontroli <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>metodę, która z kolei wywołuje zdarzenie WebPartsDisconnecting, zgodnie z projektem nie było możliwości programu Anulowanie zdarzenia.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  id: Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera odwołanie do kolekcji wszystkie <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy na stronie sieci Web."
  remarks: "Właściwość strefy jest używana przez <xref:System.Web.UI.WebControls.WebParts.WebPartManager>formantu, aby śledzić <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy na stronie sieci Web.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Należy pamiętać, że właściwość nie odwołuje się do wszystkich typów stref; odwołuje się tylko stref, które pochodzą z <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>klasy, w tym <xref:System.Web.UI.WebControls.WebParts.WebPartZone>strefy.</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Kolekcja odwołuje się właściwość jest tylko do odczytu, można użyć go do dostępu do poszczególnych obiektów w kolekcji i pracować z nimi programistycznie."
  example:
  - "The following code example demonstrates how to use the Zones property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone controls. Notice that in the declarative markup for the Web page, there are two `<asp:webpartzone>` elements, each containing a server control. In the `<script>` section of the page, the code uses the Zones property to access the individual zones, listing all the zone IDs and then changing the background color on the second zone.  \n  \n [!code-cs[WebParts_WebPartManager_Zones#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_860_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Zones#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_860_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **List Zone IDs** button, the code uses the Zones property to list the IDs of all zones in the collection. If you click the **Change Zone BackColor** button, the code changes the background color of the second zone."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneCollection&quot;> </xref> , która odwołuje się zestaw <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> strefy."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.EndOfStreamException
  isExternal: true
  name: System.IO.EndOfStreamException
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneBase
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneBase
  nameWithType: WebPartZoneBase
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneBase
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventHandler
  nameWithType: WebPartAuthorizationEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: TransformerTypeCollection
  nameWithType: TransformerTypeCollection
  fullName: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPoint
  nameWithType: ProviderConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPoint
  nameWithType: ConsumerConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartTransformer
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartTransformer
  nameWithType: WebPartTransformer
  fullName: System.Web.UI.WebControls.WebParts.WebPartTransformer
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionCollection
  nameWithType: WebPartConnectionCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnection
  nameWithType: WebPartConnection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCollection
  nameWithType: WebPartDisplayModeCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
- uid: System.Web.UI.WebControls.WebParts.ErrorWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ErrorWebPart
  nameWithType: ErrorWebPart
  fullName: System.Web.UI.WebControls.WebParts.ErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
- uid: System.Web.UI.WebControls.WebParts.WebPartPersonalization
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartPersonalization
  nameWithType: WebPartPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.GenericWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: GenericWebPart
  nameWithType: GenericWebPart
  fullName: System.Web.UI.WebControls.WebParts.GenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventHandler
  nameWithType: WebPartDisplayModeEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventHandler
  nameWithType: WebPartDisplayModeCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPointCollection
  nameWithType: ConsumerConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPointCollection
  nameWithType: ProviderConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManagerInternals
  nameWithType: WebPartManagerInternals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationDictionary
  nameWithType: PersonalizationDictionary
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventArgs
  nameWithType: WebPartAuthorizationEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventArgs
  nameWithType: WebPartDisplayModeEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventArgs
  nameWithType: WebPartDisplayModeCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventArgs
  nameWithType: WebPartEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventArgs
  nameWithType: WebPartCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventArgs
  nameWithType: WebPartAddingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventArgs
  nameWithType: WebPartMovingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventArgs
  nameWithType: WebPartConnectionsEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventArgs
  nameWithType: WebPartConnectionsCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventHandler
  nameWithType: WebPartEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventHandler
  nameWithType: WebPartCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventHandler
  nameWithType: WebPartAddingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventHandler
  nameWithType: WebPartMovingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCollection
  nameWithType: WebPartCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventHandler
  nameWithType: WebPartConnectionsEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventHandler
  nameWithType: WebPartConnectionsCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneCollection
  nameWithType: WebPartZoneCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections
  nameWithType: WebPartManager.ActivateConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart
  nameWithType: WebPartManager.AddWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting
  nameWithType: WebPartManager.BeginWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing
  nameWithType: WebPartManager.BeginWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts
  nameWithType: WebPartManager.CanConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript
  nameWithType: WebPartManager.CheckRenderClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart
  nameWithType: WebPartManager.CloseWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts
  nameWithType: WebPartManager.ConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart
  nameWithType: WebPartManager.CopyWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers
  nameWithType: WebPartManager.CreateAvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection
  nameWithType: WebPartManager.CreateControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes
  nameWithType: WebPartManager.CreateDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID
  nameWithType: WebPartManager.CreateDynamicConnectionID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID
  nameWithType: WebPartManager.CreateDynamicWebPartID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart
  nameWithType: WebPartManager.CreateErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization
  nameWithType: WebPartManager.CreatePersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart
  nameWithType: WebPartManager.CreateWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart
  nameWithType: WebPartManager.DeleteWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart
  nameWithType: WebPartManager.DisconnectWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts
  nameWithType: WebPartManager.DisconnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting
  nameWithType: WebPartManager.EndWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing
  nameWithType: WebPartManager.EndWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart
  nameWithType: WebPartManager.ExportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus
  nameWithType: WebPartManager.Focus
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints
  nameWithType: WebPartManager.GetConsumerConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager
  nameWithType: WebPartManager.GetCurrentWebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle
  nameWithType: WebPartManager.GetDisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl
  nameWithType: WebPartManager.GetExportUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart
  nameWithType: WebPartManager.GetGenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints
  nameWithType: WebPartManager.GetProviderConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart
  nameWithType: WebPartManager.ImportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized
  nameWithType: WebPartManager.IsAuthorized
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState
  nameWithType: WebPartManager.LoadControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState
  nameWithType: WebPartManager.LoadCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart
  nameWithType: WebPartManager.MoveWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart
  nameWithType: WebPartManager.OnAuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated
  nameWithType: WebPartManager.OnConnectionsActivated
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating
  nameWithType: WebPartManager.OnConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged
  nameWithType: WebPartManager.OnDisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging
  nameWithType: WebPartManager.OnDisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit
  nameWithType: WebPartManager.OnInit
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender
  nameWithType: WebPartManager.OnPreRender
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged
  nameWithType: WebPartManager.OnSelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging
  nameWithType: WebPartManager.OnSelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload
  nameWithType: WebPartManager.OnUnload
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded
  nameWithType: WebPartManager.OnWebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding
  nameWithType: WebPartManager.OnWebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed
  nameWithType: WebPartManager.OnWebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing
  nameWithType: WebPartManager.OnWebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted
  nameWithType: WebPartManager.OnWebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting
  nameWithType: WebPartManager.OnWebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved
  nameWithType: WebPartManager.OnWebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving
  nameWithType: WebPartManager.OnWebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected
  nameWithType: WebPartManager.OnWebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting
  nameWithType: WebPartManager.OnWebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected
  nameWithType: WebPartManager.OnWebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting
  nameWithType: WebPartManager.OnWebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript
  nameWithType: WebPartManager.RegisterClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render
  nameWithType: WebPartManager.Render
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState
  nameWithType: WebPartManager.SaveControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState
  nameWithType: WebPartManager.SaveCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty
  nameWithType: WebPartManager.SetPersonalizationDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart
  nameWithType: WebPartManager.SetSelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState
  nameWithType: WebPartManager.TrackViewState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
