### YamlMime:ManagedReference
items:
- uid: System.Web.UI.AuthenticationServiceManager
  id: AuthenticationServiceManager
  children:
  - System.Web.UI.AuthenticationServiceManager.#ctor
  - System.Web.UI.AuthenticationServiceManager.Path
  langs:
  - csharp
  name: AuthenticationServiceManager
  nameWithType: AuthenticationServiceManager
  fullName: System.Web.UI.AuthenticationServiceManager
  type: Class
  summary: "Określa lokalizację niestandardowej implementacji usługi uwierzytelniania."
  remarks: "Klasa AuthenticationServiceManager odpowiada <xref:System.Web.UI.ScriptManager.AuthenticationService%2A>Właściwość <xref:System.Web.UI.ScriptManager>lub <xref:System.Web.UI.ScriptManagerProxy>kontroli.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.AuthenticationService%2A>       Uwierzytelnianie usługi sieci Web jest używany przez aplikacje z włączoną obsługą technologii AJAX do logowania i wylogowywania z skrypt po stronie klienta. AuthenticationServiceManager służy do nadania ścieżkę alternatywną implementację uwierzytelniania usługi sieci Web zamiast wbudowanego usługi sieci Web, są udostępniane przez funkcje AJAX programu ASP.NET.       Aby korzystać z usługi uwierzytelniania w aplikacji, należy włączyć ją w pliku konfiguracji. Jeśli korzystasz z wbudowanego uwierzytelniania usługi sieci Web, nie trzeba jawnie deklarować uwierzytelniania programu service manager na stronie.       Aby utworzyć usługi uwierzytelniania, musisz zaimplementować usługi sieci Web, która ma dwie metody: `Login` i `Logout`. Ponadto te metody wymagają takiego samego podpisu wbudowane uwierzytelnianie usługi sieci Web.       Poniższy przykład przedstawia struktura klasy podstawowej, która musi zostać wdrożona w niestandardowe uwierzytelnianie klasy usługi sieci Web.       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] Aby użyć niestandardowego uwierzytelniania usługi sieci Web, można dodać usługi deklaratywnie w znacznikach przez dołączenie `<AuthenticationService>` element wewnątrz `<asp:ScriptManager>` elementu na stronie, jak pokazano w poniższym przykładzie.      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <AuthenticationService Path=&quot;MyAuthenticationService.asmx&quot; />   </asp:ScriptManager>   ```Można skonfigurować również programowo <xref:System.Web.UI.AuthenticationServiceManager.Path%2A>do użycia niestandardowego uwierzytelniania usługi sieci Web.</xref:System.Web.UI.AuthenticationServiceManager.Path%2A>       Bez względu na to czy sekcji deklaratywne dla usługi uwierzytelniania znajduje się na stronie, jeśli włączono usługę uwierzytelniania w pliku konfiguracji, a następnie aplikacji z włączoną obsługą technologii AJAX na renderowanej stronie uwzględni zmiennej ECMAScript (JavaScript). Dzięki temu skryptu klienta w celu ustalenia, czy bieżący użytkownik jest uwierzytelniony."
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class AuthenticationServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.AuthenticationServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.AuthenticationServiceManager
  langs:
  - csharp
  name: AuthenticationServiceManager()
  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager()
  fullName: System.Web.UI.AuthenticationServiceManager.AuthenticationServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.AuthenticationServiceManager&quot;> </xref> klasy."
  syntax:
    content: public AuthenticationServiceManager ();
    parameters: []
  overload: System.Web.UI.AuthenticationServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AuthenticationServiceManager.Path
  id: Path
  parent: System.Web.UI.AuthenticationServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: AuthenticationServiceManager.Path
  fullName: System.Web.UI.AuthenticationServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Pobiera lub ustawia ścieżkę usługi uwierzytelniania."
  remarks: "Jeśli nie ustawiono właściwości Path, następnie zwracana wartość jest <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName> W takim przypadku funkcjonalności interfejsu AJAX w programie ASP.NET będzie używać wbudowane uwierzytelnianie usługi sieci Web, która odnosi się do następującej ścieżki wewnętrznego ustawienia domyślnego: ~ / ScriptServices_AuthenticationService.asmx. Takie samo zachowanie występuje, jeśli zostanie ustawiona wartość pustą ścieżkę lub `null`.       Można określić ścieżkę w <xref:System.Web.UI.ScriptManager>kontroli lub skojarzony <xref:System.Web.UI.ScriptManagerProxy>kontroli.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Jeśli ścieżka jest ustawiona na <xref:System.Web.UI.ScriptManagerProxy>poziomu, zastosuj następujące ostrzeżenia:-w przypadku wielu serwerów proxy w hierarchii kontroli, ścieżka nie ma można ustawić dla każdego wystąpienia serwera proxy.</xref:System.Web.UI.ScriptManagerProxy>      — Jeśli ścieżka jest jawnie ustawione na wystąpienie serwera proxy, wartość musi być taka sama dla wszystkich innych proxy, na których ta właściwość jest jawnie ustawiona."
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "Ścieżka niestandardowe uwierzytelnianie usługi sieci Web."
  overload: System.Web.UI.AuthenticationServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Więcej niż jednej unikatowej ścieżki została ustawiona w hierarchii formantu."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.AuthenticationServiceManager.#ctor
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: AuthenticationServiceManager()
  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager()
  fullName: System.Web.UI.AuthenticationServiceManager.AuthenticationServiceManager()
- uid: System.Web.UI.AuthenticationServiceManager.Path
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: Path
  nameWithType: AuthenticationServiceManager.Path
  fullName: System.Web.UI.AuthenticationServiceManager.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.AuthenticationServiceManager.#ctor*
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: AuthenticationServiceManager
  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager
- uid: System.Web.UI.AuthenticationServiceManager.Path*
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: Path
  nameWithType: AuthenticationServiceManager.Path
