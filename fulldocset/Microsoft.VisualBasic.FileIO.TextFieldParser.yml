### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser
  id: TextFieldParser
  children:
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.Close
  - Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens
  - Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters
  - Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose
  - Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData
  - Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine
  - Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber
  - Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths
  - Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize
  - Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes
  - Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber
  - Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)
  - Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields
  - Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine
  - Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd
  - Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])
  - Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])
  - Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType
  - Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace
  langs:
  - csharp
  name: TextFieldParser
  nameWithType: TextFieldParser
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser
  type: Class
  summary: "Udostępnia metody i właściwości dla analizowanie tekstu w strukturze plików."
  remarks: "`TextFieldParser` Obiektu udostępnia metody i właściwości na potrzeby analizowania strukturę plików tekstowych. Podczas analizowania pliku tekstowego z `TextFieldParser` jest podobny do Iterowanie po pliku tekstowego podczas `ReadFields` metody do wyodrębniania pól tekstu jest podobny do dzielenia na ciągi.       `TextFieldParser` Można analizować dwa typy plików: rozdzielanego lub o stałej szerokości. Niektóre właściwości, takie jak `Delimiters` i `HasFieldsEnclosedInQuotes` mają znaczenie tylko podczas pracy z plików, podczas gdy `FieldWidths` właściwość ma znaczenie tylko wtedy, gdy praca z plikami o stałej szerokości.       W poniższej tabeli przedstawiono przykłady dotyczące zadań `Microsoft.VisualBasic.FileIO.TextFieldParser` obiektu.      | Aby | Zobacz |   |--------|---------|   | Odczyt z pliku tekstowego z separatorami | [Porady: Odczyt z plików tekstowych rozdzielanych przecinkami](~/add/includes/ajax-current-ext-md.md)|   | Odczyt z plików testowych o stałej szerokości | [Porady: Odczyt z plików testowych o stałej szerokości](~/add/includes/ajax-current-ext-md.md)|   | Odczyt z pliku tekstowego w wielu formatach | [Porady: Odczyt z plików tekstowych w wielu formatach](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example parses through a tab-delimited text file, `Bigfile`.  \n  \n [!code-vb[VbVbalrTextFieldParser#17](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._9_1.vb)]"
  syntax:
    content: 'public class TextFieldParser : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(Stream)
  nameWithType: TextFieldParser.TextFieldParser(Stream)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicjuje nowe wystąpienie klasy <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> klasy."
  remarks: "Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia, który jest reprezentowana przez `stream` parametru."
  syntax:
    content: public TextFieldParser (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>.</xref:System.IO.Stream> Strumień do przeanalizowania."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>Nie można odczytać z."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)
  id: '#ctor(System.IO.TextReader)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(TextReader)
  nameWithType: TextFieldParser.TextFieldParser(TextReader)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(TextReader)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicjuje nowe wystąpienie klasy <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> klasy."
  remarks: "Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia, który jest reprezentowana przez `reader` parametru."
  syntax:
    content: public TextFieldParser (System.IO.TextReader reader);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "<xref:System.IO.TextReader>.</xref:System.IO.TextReader> <xref:System.IO.TextReader>Strumienia do przeanalizowania.</xref:System.IO.TextReader>"
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(String)
  nameWithType: TextFieldParser.TextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicjuje nowe wystąpienie klasy <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> klasy."
  remarks: "Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować plik określony przez `path` parametru."
  syntax:
    content: public TextFieldParser (string path);
    parameters:
    - id: path
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Pełna ścieżka pliku do przeanalizowania."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>jest pustym ciągiem."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.Text.Encoding)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(Stream,Encoding)
  nameWithType: TextFieldParser.TextFieldParser(Stream,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream,Encoding)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicjuje nowe wystąpienie klasy <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> klasy."
  remarks: "Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia, który jest reprezentowana przez `stream` parametru.      > [!CAUTION] > Podczas kompilowania zestawu znaków z danego ustawienia kultury i pobrać te znaki tego samego z inne ustawienie kultury znaków nie może być interpretable, co może spowodować wyjątek zostanie wygenerowany."
  syntax:
    content: public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>.</xref:System.IO.Stream> Strumień do przeanalizowania."
    - id: defaultEncoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>.</xref:System.Text.Encoding> Nie określono kodowanie do użycia, jeśli kodowanie znaków z pliku. Domyślnie jest <xref:System.Text.Encoding.UTF8*>.</xref:System.Text.Encoding.UTF8*>"
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>defaultEncoding</code> is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>Nie można odczytać z."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)
  id: '#ctor(System.String,System.Text.Encoding)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(String,Encoding)
  nameWithType: TextFieldParser.TextFieldParser(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(String,Encoding)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicjuje nowe wystąpienie klasy <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> klasy."
  remarks: "Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować plik określony przez `path` parametru.      > [!CAUTION] > Podczas kompilowania zestawu znaków z danego ustawienia kultury i pobrać te znaki tego samego z inne ustawienie kultury znaków nie może być interpretable, co może spowodować wyjątek zostanie wygenerowany."
  syntax:
    content: public TextFieldParser (string path, System.Text.Encoding defaultEncoding);
    parameters:
    - id: path
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Pełna ścieżka pliku do przeanalizowania."
    - id: defaultEncoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>.</xref:System.Text.Encoding> Nie określono kodowanie do użycia, jeśli kodowanie znaków z pliku. Domyślnie jest <xref:System.Text.Encoding.UTF8*>.</xref:System.Text.Encoding.UTF8*>"
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>jest to pusty ciąg lub <code>defaultEncoding</code> jest <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(Stream,Encoding,Boolean)
  nameWithType: TextFieldParser.TextFieldParser(Stream,Encoding,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream,Encoding,Boolean)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicjuje nowe wystąpienie klasy <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> klasy."
  remarks: "Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia, który jest reprezentowana przez `stream` parametru.       Jeśli `detectEncoding` parametr jest `True`, próbuje wykryć kodowanie, analizując pierwsze trzy bajty pliku lub strumienia tego konstruktora. Automatycznie rozpoznaje UTF-8, little endian Unicode i big-endian Unicode tekst Jeśli plik rozpoczyna się od znaków odpowiedniej kolejności bajtów. W przeciwnym razie kodowania określony przez `defaultEncoding` jest używany.      > [!CAUTION] > Podczas kompilowania zestawu znaków z danego ustawienia kultury i pobrać te znaki tego samego z inne ustawienie kultury znaków nie może być interpretable, co może spowodować wyjątek zostanie wygenerowany."
  syntax:
    content: public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>.</xref:System.IO.Stream> Strumień do przeanalizowania."
    - id: defaultEncoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>.</xref:System.Text.Encoding> Nie określono kodowanie do użycia, jeśli kodowanie znaków z pliku. Domyślnie jest <xref:System.Text.Encoding.UTF8*>.</xref:System.Text.Encoding.UTF8*>"
    - id: detectEncoding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Wskazuje, czy ma zostać wyszukane znaczniki kolejności bajtów na początku pliku. Domyślnie jest <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>defaultEncoding</code> is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>Nie można odczytać z."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)
  id: '#ctor(System.String,System.Text.Encoding,System.Boolean)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(String,Encoding,Boolean)
  nameWithType: TextFieldParser.TextFieldParser(String,Encoding,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(String,Encoding,Boolean)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicjuje nowe wystąpienie klasy <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> klasy."
  remarks: "Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować plik określony przez `path` parametru.       Jeśli `detectEncoding` parametr jest `True`, próbuje wykryć kodowanie, analizując pierwsze trzy bajty pliku lub strumienia tego konstruktora. Automatycznie rozpoznaje UTF-8, little endian Unicode i big-endian Unicode tekst Jeśli plik rozpoczyna się od znaków odpowiedniej kolejności bajtów. W przeciwnym razie kodowania określony przez `defaultEncoding` jest używany.      > [!CAUTION] > Podczas kompilowania zestawu znaków z danego ustawienia kultury i pobrać te znaki tego samego z inne ustawienie kultury znaków nie może być interpretable, co może spowodować wyjątek zostanie wygenerowany."
  syntax:
    content: public TextFieldParser (string path, System.Text.Encoding defaultEncoding, bool detectEncoding);
    parameters:
    - id: path
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Pełna ścieżka pliku do przeanalizowania."
    - id: defaultEncoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>.</xref:System.Text.Encoding> Nie określono kodowanie do użycia, jeśli kodowanie znaków z pliku. Domyślnie jest <xref:System.Text.Encoding.UTF8*>.</xref:System.Text.Encoding.UTF8*>"
    - id: detectEncoding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Wskazuje, czy ma zostać wyszukane znaczniki kolejności bajtów na początku pliku. Domyślnie jest <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>jest to pusty ciąg lub <code>defaultEncoding</code> jest <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)'
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldParser(Stream,Encoding,Boolean,Boolean)
  nameWithType: TextFieldParser.TextFieldParser(Stream,Encoding,Boolean,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream,Encoding,Boolean,Boolean)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicjuje nowe wystąpienie klasy <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> klasy."
  remarks: "Tworzy nowy `TextFieldParser` obiekt, aby przeanalizować pliku lub strumienia, który jest reprezentowana przez `stream` parametru.       Jeśli `detectEncoding` parametr jest `True`, próbuje wykryć kodowanie, analizując pierwsze trzy bajty pliku lub strumienia tego konstruktora. Automatycznie rozpoznaje UTF-8, little endian Unicode i big-endian Unicode tekst Jeśli plik rozpoczyna się od znaków odpowiedniej kolejności bajtów. W przeciwnym razie kodowania określony przez `defaultEncoding` jest używany.      > [!CAUTION] > Podczas kompilowania zestawu znaków z danego ustawienia kultury i pobrać te znaki tego samego z inne ustawienie kultury znaków nie może być interpretable, co może spowodować wyjątek zostanie wygenerowany."
  syntax:
    content: public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>.</xref:System.IO.Stream> Strumień do przeanalizowania."
    - id: defaultEncoding
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>.</xref:System.Text.Encoding> Nie określono kodowanie do użycia, jeśli kodowanie znaków z pliku. Domyślnie jest <xref:System.Text.Encoding.UTF8*>.</xref:System.Text.Encoding.UTF8*>"
    - id: detectEncoding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Wskazuje, czy ma zostać wyszukane znaczniki kolejności bajtów na początku pliku. Domyślnie jest <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Wskazuje, czy należy pozostawić `stream` podczas otwierania <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> obiekt jest zamknięty. Domyślnie jest <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>or <code>defaultEncoding</code> is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>Nie można odczytać z."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Close
  id: Close
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: Close()
  nameWithType: TextFieldParser.Close()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Close()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Zamyka bieżące <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> obiektu."
  remarks: ''
  example:
  - "This example closes the `TextFieldParser``FileReader`.  \n  \n [!code-vb[VbVbalrTextFieldParser#14](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._27_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Close*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens
  id: CommentTokens
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: CommentTokens
  nameWithType: TextFieldParser.CommentTokens
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Definiuje tokeny komentarza. Token komentarz jest ciągiem, który po umieszczeniu na początku wiersza, wskazuje, że wiersz komentarz i należy ją ignorować przez analizator."
  remarks: "Jest to zaawansowane elementu członkowskiego; niewidoczne w IntelliSense dopóki nie klikniesz **wszystkie** kartę.       Tokenów komentarzy o zerowej długości są ignorowane."
  example:
  - "This example specifies that for the `TextFieldParser`, `FileReader` lines beginning with a single quotation mark (') should be ignored.  \n  \n [!code-vb[VbVbalrTextFieldParser#5](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._69_1.vb)]"
  syntax:
    content: public string[] CommentTokens { get; set; }
    return:
      type: System.String[]
      description: "Tablica ciągów zawierająca wszystkie komentarza tokeny dla <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> obiektu."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Token komentarz zawiera biały znak."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters
  id: Delimiters
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: Delimiters
  nameWithType: TextFieldParser.Delimiters
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Definiuje ograniczniki pliku tekstowego."
  remarks: "Ta właściwość ma znaczenie tylko wtedy, gdy <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A>ma ustawioną właściwość `FieldType.Delimited`.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A>       Definiowanie ograniczniki dla pliku tekstowego może być również wykonywane z <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A>metody.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A>       W poniższej tabeli przedstawiono przykład zadań, obejmujących `Delimiters` właściwości.      | Aby | Zobacz |   |--------|---------|   | Odczyt z pliku tekstowego z separatorami | [Porady: Odczyt z plików tekstowych rozdzielanych przecinkami](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example specifies that the delimiter for the `TextFieldParser` object, `FileReader`, is a comma (,).  \n  \n [!code-vb[VbVbalrTextFieldParser#9](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._88_1.vb)]"
  syntax:
    content: public string[] Delimiters { get; set; }
    return:
      type: System.String[]
      description: "Tablica ciągów zawierająca wszystkie pola ograniczniki <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> obiektu."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wartość ogranicznika jest ustawiony na znak nowego wiersza, ciągiem pustym lub <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose
  id: Dispose
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: Dispose()
  nameWithType: TextFieldParser.Dispose()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Zwalnia zasoby używane przez <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> obiektu."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TextFieldParser.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Zwalnia zasoby używane przez <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> obiektu."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Wartość logiczna. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>zwalnia zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> wersje tylko zasobów niezarządzanych."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData
  id: EndOfData
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: EndOfData
  nameWithType: TextFieldParser.EndOfData
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Zwraca <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> , jeśli nie ma żadnych niepustą, z systemem innym niż komentarz linii między bieżącą pozycją kursora i na końcu pliku."
  remarks: "Ta właściwość umożliwia podczas czytania z plików ustalić końca odczytywane dane.       W poniższej tabeli przedstawiono przykłady dotyczące zadań `EndOfData` właściwości.      | Aby | Zobacz |   |--------|---------|   | Odczyt z pliku rozdzielanego | [Porady: Odczyt z plików tekstowych rozdzielanych przecinkami](~/add/includes/ajax-current-ext-md.md)|   | Odczyt z pliku stałej szerokości | [Porady: Odczyt z plików testowych o stałej szerokości](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uses the `EndofData` property to loop through all the fields in the file with the `TextFieldReader`, `FileReader`.  \n  \n [!code-vb[VbVbalrTextFieldParser#6](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._28_1.vb)]"
  syntax:
    content: public bool EndOfData { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli nie ma żadnych więcej danych do odczytania. w przeciwnym razie <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine
  id: ErrorLine
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: ErrorLine
  nameWithType: TextFieldParser.ErrorLine
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Zwraca wiersz, który spowodował najnowszej <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> wyjątku."
  remarks: "Jeśli nie <xref:Microsoft.VisualBasic.FileIO.MalformedLineException>były zgłaszane wyjątki, jest zwracany ciąg pusty.</xref:Microsoft.VisualBasic.FileIO.MalformedLineException>       <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A>Właściwość może być używana do wyświetlania numer wiersza, który spowodował wyjątek.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A>       W poniższej tabeli przedstawiono przykłady dotyczące zadań `ErrorLine` właściwości.      | Aby | Zobacz |   |--------|---------|   | Odczyt z pliku rozdzielanego | [Porady: Odczyt z plików tekstowych rozdzielanych przecinkami](~/add/includes/ajax-current-ext-md.md)|   | Odczyt z pliku stałej szerokości | [Porady: Odczyt z plików testowych o stałej szerokości](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uses the `ErrorLine` property to display the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.  \n  \n [!code-vb[VbVbalrTextFieldParser#1](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._53_1.vb)]"
  syntax:
    content: public string ErrorLine { get; }
    return:
      type: System.String
      description: "Wiersz, który spowodował najnowszej <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> wyjątku."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber
  id: ErrorLineNumber
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: ErrorLineNumber
  nameWithType: TextFieldParser.ErrorLineNumber
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Zwraca numer wiersza, który spowodował najnowszej <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> wyjątku."
  remarks: "Jeśli nie <xref:Microsoft.VisualBasic.FileIO.MalformedLineException>były zgłaszane wyjątki, jest zwracana wartość -1.</xref:Microsoft.VisualBasic.FileIO.MalformedLineException>       <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A>Właściwość może być używana do wyświetlania numer wiersza, który spowodował wyjątek.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> Puste wiersze i komentarze nie są ignorowane podczas określania numer wiersza.       W poniższej tabeli przedstawiono przykłady dotyczące zadań `ErrorLineNumber` właściwości.      | Aby | Zobacz |   |--------|---------|   | Odczyt z pliku rozdzielanego | [Porady: Odczyt z plików tekstowych rozdzielanych przecinkami](~/add/includes/ajax-current-ext-md.md)|   | Odczyt z pliku stałej szerokości | [Porady: Odczyt z plików testowych o stałej szerokości](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uses the `ErrorLineNumber` property to display the location of the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.  \n  \n [!code-vb[VbVbalrTextFieldParser#3](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._11_1.vb)]"
  syntax:
    content: public long ErrorLineNumber { get; }
    return:
      type: System.Int64
      description: "Numer wiersza, który spowodował najnowszej <xref href=&quot;Microsoft.VisualBasic.FileIO.MalformedLineException&quot;> </xref> wyjątku."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths
  id: FieldWidths
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: FieldWidths
  nameWithType: TextFieldParser.FieldWidths
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Określa szerokość każdej kolumny w pliku tekstowym podczas analizowania."
  remarks: "Ta właściwość ma znaczenie tylko wtedy, gdy <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A>ma ustawioną właściwość `FieldType.FixedWidth`.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> Jeśli ostatni wpis w tablicy jest mniejsza lub równa zero, pole zakłada się, że o zmiennej szerokości.       <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A>Metody można również ustawić szerokości pól.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A>       W poniższej tabeli przedstawiono przykłady dotyczące zadań `FieldWidths` właściwości.      | Aby | Zobacz |   |--------|---------|   | Odczyt z plików testowych o stałej szerokości | [Porady: Odczyt z plików testowych o stałej szerokości](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the file `ParserText.txt`, specifying the widths; the first column is 5 characters wide, the second is 10, the third is 11, and the fourth is of variable width  \n  \n [!code-vb[VbVbalrTextFieldParser#16](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._92_1.vb)]"
  syntax:
    content: public int[] FieldWidths { get; set; }
    return:
      type: System.Int32[]
      description: "Tablica liczba całkowita, która zawiera szerokość każdej kolumny w pliku tekstowym, które są analizowane."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wartość szerokości, w dowolnym miejscu innym niż ostatni wpis tablicy jest mniejsza lub równa zero."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize
  id: Finalize
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: Finalize()
  nameWithType: TextFieldParser.Finalize()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Umożliwia <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, przed jego jest odzyskana przez wyrzucanie elementów bezużytecznych."
  syntax:
    content: ~TextFieldParser ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes
  id: HasFieldsEnclosedInQuotes
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: HasFieldsEnclosedInQuotes
  nameWithType: TextFieldParser.HasFieldsEnclosedInQuotes
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Określa, czy rozdzielonym pliku jest podczas analizowania pól są ujęte w cudzysłów."
  remarks: "Jest to zaawansowane elementu członkowskiego; niewidoczne w IntelliSense dopóki nie klikniesz **wszystkie** kartę.       Jeśli właściwość jest `True`, analizator przyjęto założenie, że pola są ujęte w cudzysłów (&quot;&quot;) i może zawierać zakończenia wierszy.       Jeśli pole jest ujęta w cudzysłów, na przykład `abc, &quot;field2a,field2b&quot;, field3` i ta właściwość jest `True`, następnie cały tekst ujęty w cudzysłów zostaną zwrócone, ponieważ jest; zwróci w tym przykładzie `abc|field2a,field2b|field3`. Ustawienie tej właściwości na `False` spowodowałoby, w tym przykładzie zwracany `abc|&quot;field2a|field2b&quot;|field3`."
  example:
  - "This example sets the `HasFieldsEnclosedInQuotes` property to `True` for `myReader`.  \n  \n [!code-vb[VbVbalrTextFieldParser#18](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._33_1.vb)]"
  syntax:
    content: public bool HasFieldsEnclosedInQuotes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli pola są ujęte w cudzysłów; w przeciwnym razie <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber
  id: LineNumber
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: LineNumber
  nameWithType: TextFieldParser.LineNumber
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Zwraca bieżący numer wiersza, lub zwraca wartość -1, jeśli żadne więcej znaki nie są dostępne w strumieniu."
  remarks: "Jest to zaawansowane elementu członkowskiego; niewidoczne w IntelliSense dopóki nie klikniesz **wszystkie** kartę.       Puste wiersze i komentarze nie są ignorowane podczas określania numer wiersza."
  example:
  - "This example searches for the name \"Jones\" in the text file and reports what line(s) it occurs on.  \n  \n [!code-vb[VbVbalrTextFieldParser#11](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._89_1.vb)]"
  syntax:
    content: public long LineNumber { get; }
    return:
      type: System.Int64
      description: "Numer bieżącego wiersza."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)
  id: PeekChars(System.Int32)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: PeekChars(Int32)
  nameWithType: TextFieldParser.PeekChars(Int32)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Odczytuje określoną liczbę znaków, bez przesuwania kursora."
  remarks: "`numberOfChars` Wartość musi być mniejsza niż całkowita liczba znaków w wierszu. Jeśli nie, długość ciągu zwróconego przez `PeekChars` zostanie skrócona do długość wiersza.       Puste wiersze są ignorowane.       Znaki końca wiersza nie są zwracane.       `PeekChars` Metoda przeprowadza analizy nie; znaku końca wiersza w rozdzielonych pól jest interpretowana jako rzeczywisty końca wiersza.       W poniższej tabeli przedstawiono przykłady dotyczące zadań `PeekChars` metody.      | Aby | Zobacz |   |--------|---------|   | Przed jego analizowanie określić format pola | [Porady: Odczyt z plików tekstowych w wielu formatach](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uses `PeekChars` to find the end of the data and stop parsing the file at that point.  \n  \n [!code-vb[VbVbalrTextFieldParser#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._48_1.vb)]"
  syntax:
    content: public string PeekChars (int numberOfChars);
    parameters:
    - id: numberOfChars
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;></xref>. Liczba znaków do odczytania. Wymagany."
    return:
      type: System.String
      description: "Ciąg zawierający określoną liczbę znaków do odczytu."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>numberOfChars</code>jest mniejsza niż 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields
  id: ReadFields
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: ReadFields()
  nameWithType: TextFieldParser.ReadFields()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Odczytuje wszystkie pola w bieżącym wierszu zwraca je w postaci tablicy ciągów i przesuwa kursor do następnego wiersza zawierającego dane."
  remarks: "Aby umożliwić użytkownikom analizy plików tekstowych w wielu formatach `ReadFields` metoda sprawdza, czy wartości `TextFieldType`, `Delimiters`, i `FieldWidths`, jeśli są one określone, zawsze jest ona wywoływana. Użytkownicy muszą prawidłowo skonfigurować `TextFieldType` i `FieldWidths` lub `Delimiters` właściwości, zależnie od potrzeb. Jeśli `TextFieldType` ustawiono `Delimited`, i `Delimiters` nie jest ustawiona, lub jeśli `TextFieldType` ustawiono `FixedWidth` i `FieldWidths`, jest zgłaszany wyjątek.       Jeśli `ReadFields` napotka puste wiersze, są one pominięte, a następnego wiersza niepustych jest zwracany.       Jeśli `ReadFields` metody nie można przeanalizować bieżącego wiersza, zgłasza wyjątek, a nie przenosi do następnego wiersza. Dzięki temu aplikacja spróbować ponownie przeanalizować wiersza.       W poniższej tabeli przedstawiono przykłady dotyczące zadań `ReadFields` metody.      | Aby | Zobacz |   |--------|---------|   | Odczyt z pliku rozdzielanego | [Porady: Odczyt z plików tekstowych rozdzielanych przecinkami](~/add/includes/ajax-current-ext-md.md)|   | Odczyt z pliku stałej szerokości | [Porady: Odczyt z plików testowych o stałej szerokości](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uses the `ReadFields` method to read from the comma-delimited file `ParserText.txt`. The example writes the fields to `Testfile.txt`.  \n  \n [!code-vb[VbVbalrTextFieldParser#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._242_1.vb)]"
  syntax:
    content: public string[] ReadFields ();
    parameters: []
    return:
      type: System.String[]
      description: "Tablica ciągów zawierająca wartości pola dla bieżącego wiersza."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields*
  exceptions:
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Nie można przeanalizować pola przy użyciu określonego formatu."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine
  id: ReadLine
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: ReadLine()
  nameWithType: TextFieldParser.ReadLine()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Zwraca bieżący wiersz w postaci ciągu i przesuwa kursor do następnego wiersza."
  remarks: "`ReadLine` Metoda przeprowadza analizy nie; znaku końca wiersza w rozdzielonych pól jest interpretowana jako rzeczywisty końca wiersza.       `Nothing`jest zwracany, jeśli zostanie osiągnięty koniec pliku."
  example:
  - "This example reads through the file `ParserText.txt` and writes it to `Testfile.txt`.  \n  \n [!code-vb[VbVbalrTextFieldParser#15](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._138_1.vb)]  \n  \n If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.  \n  \n This example writes the fields as a single string; to have each line display on its own line in the destination file, a `VbCrLf` character should be appended at the end of each line."
  syntax:
    content: public string ReadLine ();
    parameters: []
    return:
      type: System.String
      description: "Bieżący wiersz z pliku lub strumienia."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd
  id: ReadToEnd
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: ReadToEnd()
  nameWithType: TextFieldParser.ReadToEnd()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Odczytuje pozostałej części pliku tekstowego i zwraca go jako ciąg."
  remarks: "Jest to zaawansowane elementu członkowskiego; niewidoczne w IntelliSense dopóki nie klikniesz **wszystkie** kartę.       Jeśli nie ma nic więcej do odczytu, ponieważ osiągnięto koniec pliku, `Nothing` jest zwracany.       `ReadToEnd` Metody pomija puste wiersze i komentarze."
  example:
  - "This example uses the `ReadToEnd` method to read the entire file `ParserText.txt` and write it to the file `Testfile.txt`.  \n  \n [!code-vb[VbVbalrTextFieldParser#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._200_1.vb)]  \n  \n If `Testfile.txt` does not exist, it is created by the `WriteAllText` method."
  syntax:
    content: public string ReadToEnd ();
    parameters: []
    return:
      type: System.String
      description: "Pozostały tekst z pliku lub strumienia."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])
  id: SetDelimiters(System.String[])
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: SetDelimiters(String[])
  nameWithType: TextFieldParser.SetDelimiters(String[])
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Ustawia ograniczniki dla czytnika danych do określonych wartości i ustawia typ pola <xref uid=&quot;langword_csharp_Delimited&quot; name=&quot;Delimited&quot; href=&quot;&quot;> </xref>."
  remarks: "Istniejącą zawartość elementu `Delimiters` właściwości są usuwane, gdy ta metoda jest ustawiona.       Ta metoda umożliwia ustawienie ograniczników bez tworzenia tablicy.       W poniższej tabeli przedstawiono przykład zadań, obejmujących `SetDelimiters` metody.      | Aby | Zobacz |   |--------|---------|   | Przeanalizować plik tekstowy | [Analizowanie plików tekstowych za pomocą obiektu TextFieldParser](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a text field parser and defines the delimiter as `vbTab`.  \n  \n [!code-vb[VbVbalrTextFieldParser#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._239_1.vb)]  \n  \n Replace the path `C:\\logs\\test.log` with the path and name of the file you wish to parse."
  syntax:
    content: public void SetDelimiters (string[] delimiters);
    parameters:
    - id: delimiters
      type: System.String[]
      description: "Tablica typu <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ogranicznik jest o zerowej długości."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])
  id: SetFieldWidths(System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: SetFieldWidths(Int32[])
  nameWithType: TextFieldParser.SetFieldWidths(Int32[])
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(Int32[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Ustawia ograniczniki dla czytelnika określonymi wartościami."
  remarks: "Istniejącą zawartość elementu `Delimiters` właściwości są czyszczone po jej ustawieniu.       Ta metoda umożliwia ustawienie ograniczników bez tworzenia tablicy.       W poniższej tabeli przedstawiono przykładowe zadania dotyczące `SetFieldWidths` metody.      | Aby | Zobacz |   |--------|---------|   | Przeanalizować plik tekstowy. | [Analizowanie plików tekstowych za pomocą obiektu TextFieldParser](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a text-field parser and defines the field width as `5`.  \n  \n [!code-vb[VbVbalrTextFieldParser#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._56_1.vb)]  \n  \n Replace the path `C:\\logs\\test.log` with the path and name of the file you wish to parse.  \n  \n The following example opens a text-field parser and defines the field widths as `5`, `10`, and variable.  \n  \n [!code-vb[VbVbalrTextFieldParser#13](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._56_2.vb)]  \n  \n Replace the path `C:\\logs\\test.log` with the path and name of the file you wish to parse."
  syntax:
    content: public void SetFieldWidths (int[] fieldWidths);
    parameters:
    - id: fieldWidths
      type: System.Int32[]
      description: "Array of <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType
  id: TextFieldType
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TextFieldType
  nameWithType: TextFieldParser.TextFieldType
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Wskazuje, czy pliku do przeanalizowania rozdzielanego lub o stałej szerokości."
  remarks: "Wartość domyślna tej właściwości jest rozdzielana.       W poniższej tabeli przedstawiono przykłady dotyczące zadań `TextFieldType` właściwości.      | Aby | Zobacz |   |--------|---------|   | Odczyt z pliku tekstowego z separatorami | [Porady: Odczyt z plików tekstowych rozdzielanych przecinkami](~/add/includes/ajax-current-ext-md.md)|   | Odczyt z plików testowych o stałej szerokości | [Porady: Odczyt z plików testowych o stałej szerokości](~/add/includes/ajax-current-ext-md.md)|   | Odczyt z pliku tekstowego w wielu formatach | [Porady: Odczyt z plików tekstowych w wielu formatach](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates a `TextFieldParser`, `FileReader`, and specifies that it is delimited.  \n  \n [!code-vb[VbVbalrTextFieldParser#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._100_1.vb)]  \n  \n This example creates a `TextFieldParser`, `FileReader`, and specifies that it is fixed-width.  \n  \n [!code-vb[VbVbalrTextFieldParser#20](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._100_2.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.FileIO.FieldType TextFieldType { get; set; }
    return:
      type: Microsoft.VisualBasic.FileIO.FieldType
      description: "Wartość TextFieldType, która wskazuje, czy pliku do przeanalizowania rozdzielanego lub o stałej szerokości."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace
  id: TrimWhiteSpace
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  langs:
  - csharp
  name: TrimWhiteSpace
  nameWithType: TextFieldParser.TrimWhiteSpace
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Wskazuje, czy powinien zostać przycięty białe wiodące i końcowe z wartości pól."
  remarks: "Wartość domyślna dla tej właściwości to `True`."
  example:
  - "This example creates a `TextFieldParser`, `FileReader`, and sets the `TrimWhiteSpace` property to `True`.  \n  \n [!code-vb[VbVbalrTextFieldParser#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._12_1.vb)]"
  syntax:
    content: public bool TrimWhiteSpace { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli spacji wiodących i końcowych białych powinien zostać przycięty z wartości pola. w przeciwnym razie <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: MalformedLineException
  nameWithType: MalformedLineException
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(Stream)
  nameWithType: TextFieldParser.TextFieldParser(Stream)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(TextReader)
  nameWithType: TextFieldParser.TextFieldParser(TextReader)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(TextReader)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(String)
  nameWithType: TextFieldParser.TextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(Stream,Encoding)
  nameWithType: TextFieldParser.TextFieldParser(Stream,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(String,Encoding)
  nameWithType: TextFieldParser.TextFieldParser(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(String,Encoding)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(Stream,Encoding,Boolean)
  nameWithType: TextFieldParser.TextFieldParser(Stream,Encoding,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream,Encoding,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(String,Encoding,Boolean)
  nameWithType: TextFieldParser.TextFieldParser(String,Encoding,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(String,Encoding,Boolean)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser(Stream,Encoding,Boolean,Boolean)
  nameWithType: TextFieldParser.TextFieldParser(Stream,Encoding,Boolean,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldParser(Stream,Encoding,Boolean,Boolean)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Close
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Close()
  nameWithType: TextFieldParser.Close()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Close()
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: CommentTokens
  nameWithType: TextFieldParser.CommentTokens
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Delimiters
  nameWithType: TextFieldParser.Delimiters
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Dispose()
  nameWithType: TextFieldParser.Dispose()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose()
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TextFieldParser.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(Boolean)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: EndOfData
  nameWithType: TextFieldParser.EndOfData
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ErrorLine
  nameWithType: TextFieldParser.ErrorLine
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ErrorLineNumber
  nameWithType: TextFieldParser.ErrorLineNumber
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: FieldWidths
  nameWithType: TextFieldParser.FieldWidths
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Finalize()
  nameWithType: TextFieldParser.Finalize()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize()
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: HasFieldsEnclosedInQuotes
  nameWithType: TextFieldParser.HasFieldsEnclosedInQuotes
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: LineNumber
  nameWithType: TextFieldParser.LineNumber
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: PeekChars(Int32)
  nameWithType: TextFieldParser.PeekChars(Int32)
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ReadFields()
  nameWithType: TextFieldParser.ReadFields()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields()
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ReadLine()
  nameWithType: TextFieldParser.ReadLine()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine()
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ReadToEnd()
  nameWithType: TextFieldParser.ReadToEnd()
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd()
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: SetDelimiters(String[])
  nameWithType: TextFieldParser.SetDelimiters(String[])
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(String[])
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: SetFieldWidths(Int32[])
  nameWithType: TextFieldParser.SetFieldWidths(Int32[])
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(Int32[])
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldType
  nameWithType: TextFieldParser.TextFieldType
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType
- uid: Microsoft.VisualBasic.FileIO.FieldType
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: FieldType
  nameWithType: FieldType
  fullName: Microsoft.VisualBasic.FileIO.FieldType
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TrimWhiteSpace
  nameWithType: TextFieldParser.TrimWhiteSpace
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldParser
  nameWithType: TextFieldParser.TextFieldParser
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Close*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Close
  nameWithType: TextFieldParser.Close
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: CommentTokens
  nameWithType: TextFieldParser.CommentTokens
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Delimiters
  nameWithType: TextFieldParser.Delimiters
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Dispose
  nameWithType: TextFieldParser.Dispose
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: EndOfData
  nameWithType: TextFieldParser.EndOfData
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ErrorLine
  nameWithType: TextFieldParser.ErrorLine
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ErrorLineNumber
  nameWithType: TextFieldParser.ErrorLineNumber
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: FieldWidths
  nameWithType: TextFieldParser.FieldWidths
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: Finalize
  nameWithType: TextFieldParser.Finalize
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: HasFieldsEnclosedInQuotes
  nameWithType: TextFieldParser.HasFieldsEnclosedInQuotes
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: LineNumber
  nameWithType: TextFieldParser.LineNumber
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: PeekChars
  nameWithType: TextFieldParser.PeekChars
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ReadFields
  nameWithType: TextFieldParser.ReadFields
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ReadLine
  nameWithType: TextFieldParser.ReadLine
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: ReadToEnd
  nameWithType: TextFieldParser.ReadToEnd
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: SetDelimiters
  nameWithType: TextFieldParser.SetDelimiters
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: SetFieldWidths
  nameWithType: TextFieldParser.SetFieldWidths
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TextFieldType
  nameWithType: TextFieldParser.TextFieldType
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace*
  parent: Microsoft.VisualBasic.FileIO.TextFieldParser
  isExternal: false
  name: TrimWhiteSpace
  nameWithType: TextFieldParser.TrimWhiteSpace
