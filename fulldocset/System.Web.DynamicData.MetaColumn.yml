### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.MetaColumn
  id: MetaColumn
  children:
  - System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaColumn.AllowInitialValue
  - System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode
  - System.Web.DynamicData.MetaColumn.Attributes
  - System.Web.DynamicData.MetaColumn.BuildAttributeCollection
  - System.Web.DynamicData.MetaColumn.ColumnType
  - System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull
  - System.Web.DynamicData.MetaColumn.DataFormatString
  - System.Web.DynamicData.MetaColumn.DataTypeAttribute
  - System.Web.DynamicData.MetaColumn.DefaultValue
  - System.Web.DynamicData.MetaColumn.Description
  - System.Web.DynamicData.MetaColumn.DisplayName
  - System.Web.DynamicData.MetaColumn.EntityTypeProperty
  - System.Web.DynamicData.MetaColumn.FilterUIHint
  - System.Web.DynamicData.MetaColumn.HtmlEncode
  - System.Web.DynamicData.MetaColumn.Initialize
  - System.Web.DynamicData.MetaColumn.IsBinaryData
  - System.Web.DynamicData.MetaColumn.IsCustomProperty
  - System.Web.DynamicData.MetaColumn.IsFloatingPoint
  - System.Web.DynamicData.MetaColumn.IsForeignKeyComponent
  - System.Web.DynamicData.MetaColumn.IsGenerated
  - System.Web.DynamicData.MetaColumn.IsInteger
  - System.Web.DynamicData.MetaColumn.IsLongString
  - System.Web.DynamicData.MetaColumn.IsPrimaryKey
  - System.Web.DynamicData.MetaColumn.IsReadOnly
  - System.Web.DynamicData.MetaColumn.IsRequired
  - System.Web.DynamicData.MetaColumn.IsString
  - System.Web.DynamicData.MetaColumn.MaxLength
  - System.Web.DynamicData.MetaColumn.Model
  - System.Web.DynamicData.MetaColumn.Name
  - System.Web.DynamicData.MetaColumn.NullDisplayText
  - System.Web.DynamicData.MetaColumn.Prompt
  - System.Web.DynamicData.MetaColumn.Provider
  - System.Web.DynamicData.MetaColumn.RequiredErrorMessage
  - System.Web.DynamicData.MetaColumn.ResetMetadata
  - System.Web.DynamicData.MetaColumn.Scaffold
  - System.Web.DynamicData.MetaColumn.ShortDisplayName
  - System.Web.DynamicData.MetaColumn.SortExpression
  - System.Web.DynamicData.MetaColumn.Table
  - System.Web.DynamicData.MetaColumn.ToString
  - System.Web.DynamicData.MetaColumn.TypeCode
  - System.Web.DynamicData.MetaColumn.UIHint
  langs:
  - csharp
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
  type: Class
  summary: "Reprezentuje kolumny bazy danych, który jest używany przez dynamiczne dane."
  remarks: "W aplikacjach danych dynamicznych platformy ASP.NET klasa MetaColumn reprezentuje pole bazy danych. Klasa MetaColumn umożliwia pobieranie informacji na temat pola danych, takie jak typ i informacji o metadanych.       Można pobrać tabeli w polu danych, należy za pomocą <xref:System.Web.DynamicData.MetaColumn.Table%2A>Właściwości.</xref:System.Web.DynamicData.MetaColumn.Table%2A> Można również pobrać modelu danych za pomocą <xref:System.Web.DynamicData.MetaColumn.Model%2A>Właściwości.</xref:System.Web.DynamicData.MetaColumn.Model%2A>"
  syntax:
    content: 'public class MetaColumn : System.Web.DynamicData.IFieldFormattingOptions'
  inheritance:
  - System.Object
  implements:
  - System.Web.DynamicData.IFieldFormattingOptions
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: '#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)'
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: MetaColumn(MetaTable,ColumnProvider)
  nameWithType: MetaColumn.MetaColumn(MetaTable,ColumnProvider)
  fullName: System.Web.DynamicData.MetaColumn.MetaColumn(MetaTable,ColumnProvider)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> klasy."
  syntax:
    content: public MetaColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);
    parameters:
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "Tabela meta, która zawiera kolumny."
    - id: columnProvider
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "Dostawca kolumny."
  overload: System.Web.DynamicData.MetaColumn.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.AllowInitialValue
  id: AllowInitialValue
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: AllowInitialValue
  nameWithType: MetaColumn.AllowInitialValue
  fullName: System.Web.DynamicData.MetaColumn.AllowInitialValue
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia wartość określającą, czy kolumna umożliwia wartości do wstawienia."
  remarks: "Wartość domyślna to `false` , gdy kolumna jest tylko do odczytu i `true` Jeśli kolumna nie jest tylko do odczytu. Wartość domyślna może zostać przesłonięta przy użyciu <xref:System.ComponentModel.DataAnnotations.EditableAttribute>atrybutu.</xref:System.ComponentModel.DataAnnotations.EditableAttribute>"
  syntax:
    content: public bool AllowInitialValue { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli kolumna umożliwia wartości do wstawienia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.AllowInitialValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: MetaColumn.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy ciąg formatowania określone przez <xref:System.Web.DynamicData.MetaColumn.DataFormatString*>właściwość jest stosowana do wartości pola, gdy formant powiązany z danymi, który zawiera pola danych reprezentowanego przez <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> obiekt jest w trybie edycji.</xref:System.Web.DynamicData.MetaColumn.DataFormatString*>"
  remarks: "Właściwość ApplyFormatInEditMode sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=fullName>Właściwości.</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> Jeśli <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>atrybut nie zostanie znaleziony, ta właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute>atrybut jest stosowany do pobrania informacji o formatowania.</xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>"
  syntax:
    content: public bool ApplyFormatInEditMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ciąg formatowania, określony przez <xref:System.Web.DynamicData.MetaColumn.DataFormatString*>właściwość jest stosowana do wartości pola, gdy formant powiązany z danymi, który zawiera pola danych reprezentowanego przez <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> obiekt jest w trybie edycji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.DynamicData.MetaColumn.DataFormatString*>"
  overload: System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.Attributes
  id: Attributes
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: Attributes
  nameWithType: MetaColumn.Attributes
  fullName: System.Web.DynamicData.MetaColumn.Attributes
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera kolekcję atrybutów metadanych, które są stosowane do pola danych reprezentowanego przez <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> obiektu."
  syntax:
    content: public System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Kolekcja atrybutów metadanych, które są stosowane do pola danych reprezentowanego przez <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> obiektu."
  overload: System.Web.DynamicData.MetaColumn.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.BuildAttributeCollection
  id: BuildAttributeCollection
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: BuildAttributeCollection()
  nameWithType: MetaColumn.BuildAttributeCollection()
  fullName: System.Web.DynamicData.MetaColumn.BuildAttributeCollection()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera kolekcję atrybutów."
  remarks: "Należy wywołać metodę BuildAttributeCollection przed dostępu <xref:System.Web.DynamicData.MetaColumn.Attributes%2A>Właściwości.</xref:System.Web.DynamicData.MetaColumn.Attributes%2A>"
  syntax:
    content: protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Kolekcja atrybutów."
  overload: System.Web.DynamicData.MetaColumn.BuildAttributeCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.ColumnType
  id: ColumnType
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: ColumnType
  nameWithType: MetaColumn.ColumnType
  fullName: System.Web.DynamicData.MetaColumn.ColumnType
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera typ pola danych."
  remarks: "Właściwość ColumnType zwraca wspólnego typu języka wspólnego (CLR) w polu danych."
  syntax:
    content: public Type ColumnType { get; }
    return:
      type: System.Type
      description: "Typ pola danych."
  overload: System.Web.DynamicData.MetaColumn.ColumnType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: MetaColumn.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy puste ciągi (&quot;&quot;) są automatycznie konwertowane na <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> wartości po zaktualizowaniu pole danych w źródle danych."
  remarks: "Właściwość ConvertEmptyStringToNull sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=fullName>Właściwości.</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> Jeśli <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>atrybut nie zostanie znaleziony, ta właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute>atrybut jest stosowany do pobrania informacji o formatowania.</xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>"
  syntax:
    content: public bool ConvertEmptyStringToNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartości ciągu pustego zostaną automatycznie przekonwertowane na <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> wartości, gdy w polu danych jest zaktualizowane w źródle danych, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.DataFormatString
  id: DataFormatString
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: DataFormatString
  nameWithType: MetaColumn.DataFormatString
  fullName: System.Web.DynamicData.MetaColumn.DataFormatString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera ciąg, który określa format wyświetlania wartości pola."
  remarks: "Właściwość DataFormatString sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName>Właściwości.</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> Jeśli <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>atrybut nie zostanie znaleziony, ta właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute>atrybut jest stosowany do pobrania informacji o formatowania.</xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>"
  syntax:
    content: public string DataFormatString { get; }
    return:
      type: System.String
      description: "Ciąg, który określa format wyświetlania wartości pola."
  overload: System.Web.DynamicData.MetaColumn.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.DataTypeAttribute
  id: DataTypeAttribute
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: DataTypeAttribute
  nameWithType: MetaColumn.DataTypeAttribute
  fullName: System.Web.DynamicData.MetaColumn.DataTypeAttribute
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute>atrybut, który jest stosowany do pola danych.</xref:System.ComponentModel.DataAnnotations.DataTypeAttribute>"
  syntax:
    content: public System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute { get; }
    return:
      type: System.ComponentModel.DataAnnotations.DataTypeAttribute
      description: "<xref:System.ComponentModel.DataAnnotations.DataTypeAttribute>Atrybut, który jest stosowany do pola danych.</xref:System.ComponentModel.DataAnnotations.DataTypeAttribute>"
  overload: System.Web.DynamicData.MetaColumn.DataTypeAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.DefaultValue
  id: DefaultValue
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: DefaultValue
  nameWithType: MetaColumn.DefaultValue
  fullName: System.Web.DynamicData.MetaColumn.DefaultValue
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość domyślną dla pola danych."
  remarks: "Właściwość DefaultValue jest zazwyczaj używany do wstępnego wypełniania wartość pola po utworzeniu nowego wpisu. Ta właściwość sprawdza, czy <xref:System.ComponentModel.DefaultValueAttribute>atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DefaultValueAttribute.Value%2A>Właściwości.</xref:System.ComponentModel.DefaultValueAttribute.Value%2A> </xref:System.ComponentModel.DefaultValueAttribute>"
  syntax:
    content: public object DefaultValue { get; }
    return:
      type: System.Object
      description: "Wartość domyślna dla pola danych."
  overload: System.Web.DynamicData.MetaColumn.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.Description
  id: Description
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: Description
  nameWithType: MetaColumn.Description
  fullName: System.Web.DynamicData.MetaColumn.Description
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera opis w polu danych."
  remarks: "Opis właściwości sprawdza, czy <xref:System.ComponentModel.DescriptionAttribute>atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=fullName>Właściwości.</xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=fullName> </xref:System.ComponentModel.DescriptionAttribute>"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "Opis w polu danych."
  overload: System.Web.DynamicData.MetaColumn.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.DisplayName
  id: DisplayName
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: DisplayName
  nameWithType: MetaColumn.DisplayName
  fullName: System.Web.DynamicData.MetaColumn.DisplayName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera nazwę wyświetlaną dla pola danych."
  remarks: "Właściwość DisplayName zwraca przyjazną nazwę wyświetlaną dla pola danych, jeśli została ustawiona lub nazwę pola, jeśli określono nie nazwę wyświetlaną. Właściwość DisplayName sprawdza, czy ustawiono przyjazną nazwę wyświetlaną przez sprawdzenie, czy <xref:System.ComponentModel.DisplayNameAttribute>atrybut jest stosowany do pola danych.</xref:System.ComponentModel.DisplayNameAttribute>"
  syntax:
    content: public virtual string DisplayName { get; }
    return:
      type: System.String
      description: "Nazwa wyświetlana dla tego pola danych."
  overload: System.Web.DynamicData.MetaColumn.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.EntityTypeProperty
  id: EntityTypeProperty
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: EntityTypeProperty
  nameWithType: MetaColumn.EntityTypeProperty
  fullName: System.Web.DynamicData.MetaColumn.EntityTypeProperty
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera obiekt zawierający atrybuty właściwość, która reprezentuje pole danych w typie jednostki."
  syntax:
    content: public System.Reflection.PropertyInfo EntityTypeProperty { get; }
    return:
      type: System.Reflection.PropertyInfo
      description: "Obiekt zawierający atrybuty właściwość, która reprezentuje pole danych w typie jednostki."
  overload: System.Web.DynamicData.MetaColumn.EntityTypeProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.FilterUIHint
  id: FilterUIHint
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: FilterUIHint
  nameWithType: MetaColumn.FilterUIHint
  fullName: System.Web.DynamicData.MetaColumn.FilterUIHint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint*>wartość, która jest używana dla kolumny.</xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint*>"
  syntax:
    content: public string FilterUIHint { get; }
    return:
      type: System.String
      description: "<xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint*>Wartość, która jest używana dla kolumny.</xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint*>"
  overload: System.Web.DynamicData.MetaColumn.FilterUIHint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.HtmlEncode
  id: HtmlEncode
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: MetaColumn.HtmlEncode
  fullName: System.Web.DynamicData.MetaColumn.HtmlEncode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy wartości pól są kodowany w formacie HTML przed są wyświetlane w formancie powiązane z danymi."
  syntax:
    content: public bool HtmlEncode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>we wszystkich przypadkach."
  overload: System.Web.DynamicData.MetaColumn.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.Initialize
  id: Initialize
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: Initialize()
  nameWithType: MetaColumn.Initialize()
  fullName: System.Web.DynamicData.MetaColumn.Initialize()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicjuje dane, które mogą być niedostępne podczas wywołania konstruktora."
  remarks: "Tej metody nie można wywołać bezpośrednio. Aby dostosować inicjowania, może dziedziczyć po tej klasie i Przesłoń `Initialize` metody. Razie przesłonięcia tej metody należy wywołać kontrolki podstawowej `Initialize` metody."
  syntax:
    content: protected virtual void Initialize ();
    parameters: []
  overload: System.Web.DynamicData.MetaColumn.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.IsBinaryData
  id: IsBinaryData
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: IsBinaryData
  nameWithType: MetaColumn.IsBinaryData
  fullName: System.Web.DynamicData.MetaColumn.IsBinaryData
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy pole danych zawiera dane binarne."
  syntax:
    content: public bool IsBinaryData { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pole danych zawiera dane binarne; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.IsBinaryData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.IsCustomProperty
  id: IsCustomProperty
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: IsCustomProperty
  nameWithType: MetaColumn.IsCustomProperty
  fullName: System.Web.DynamicData.MetaColumn.IsCustomProperty
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy pole danych istnieje w bazie danych."
  remarks: "Właściwość IsCustomProperty służy do określenia, czy pole danych w bazie danych, lub jeśli jest to dodatkowe właściwości, która została dodana do obiektu kontekstu danych."
  syntax:
    content: public bool IsCustomProperty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli w polu danych nie istnieje w bazie danych. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.IsCustomProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.IsFloatingPoint
  id: IsFloatingPoint
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: IsFloatingPoint
  nameWithType: MetaColumn.IsFloatingPoint
  fullName: System.Web.DynamicData.MetaColumn.IsFloatingPoint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy pole danych jest typ zmiennoprzecinkowy."
  remarks: "Typy `float`, `double`, i `decimal` to ruchome typy punktów."
  syntax:
    content: public bool IsFloatingPoint { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pole danych jest typ zmiennoprzecinkowy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.IsFloatingPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.IsForeignKeyComponent
  id: IsForeignKeyComponent
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: IsForeignKeyComponent
  nameWithType: MetaColumn.IsForeignKeyComponent
  fullName: System.Web.DynamicData.MetaColumn.IsForeignKeyComponent
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy pole danych jest częścią klucza obcego."
  syntax:
    content: public bool IsForeignKeyComponent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pole danych jest częścią klucza obcego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.IsForeignKeyComponent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.IsGenerated
  id: IsGenerated
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: IsGenerated
  nameWithType: MetaColumn.IsGenerated
  fullName: System.Web.DynamicData.MetaColumn.IsGenerated
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy wartość pola danych jest automatycznie generowana w bazie danych."
  syntax:
    content: public bool IsGenerated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość w polu danych jest automatycznie generowany w bazie danych. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.IsGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.IsInteger
  id: IsInteger
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: IsInteger
  nameWithType: MetaColumn.IsInteger
  fullName: System.Web.DynamicData.MetaColumn.IsInteger
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy typ pola danych jest typu Liczba całkowita."
  remarks: "Typy `byte`, `short`, `int`, i `long` są typami liczb całkowitych."
  syntax:
    content: public bool IsInteger { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli typ pola danych jest typu Liczba całkowita w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.IsInteger*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.IsLongString
  id: IsLongString
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: IsLongString
  nameWithType: MetaColumn.IsLongString
  fullName: System.Web.DynamicData.MetaColumn.IsLongString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy typ pola danych może zawierać ciągów długich."
  remarks: "Typy SQL `text`, `ntext`, `varchar`, i `nvarchar` może zawierać ciągów długich. Wartość właściwości IsLongString służy do określają, czy szablon pole tekstowe lub TextArea jest wyświetlane, aby użytkownicy mogli zmodyfikować wartość pola."
  syntax:
    content: public bool IsLongString { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli typ pola danych może zawierać ciągów długich; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.IsLongString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.IsPrimaryKey
  id: IsPrimaryKey
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: IsPrimaryKey
  nameWithType: MetaColumn.IsPrimaryKey
  fullName: System.Web.DynamicData.MetaColumn.IsPrimaryKey
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy pole danych jest częścią klucza podstawowego tabeli."
  syntax:
    content: public bool IsPrimaryKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pole danych jest częścią klucza podstawowego tabeli; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.IsPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.IsReadOnly
  id: IsReadOnly
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: MetaColumn.IsReadOnly
  fullName: System.Web.DynamicData.MetaColumn.IsReadOnly
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy pole danych jest tylko do odczytu."
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pole danych jest tylko do odczytu. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.IsRequired
  id: IsRequired
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: IsRequired
  nameWithType: MetaColumn.IsRequired
  fullName: System.Web.DynamicData.MetaColumn.IsRequired
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy pole danych wymaga wartości."
  remarks: "<xref:System.Web.DynamicData.MetaColumn.Description%2A>Właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.RequiredAttribute>atrybut jest stosowany do pola danych lub jeśli schemat bazy danych zawiera informacje o danych pole jest wymagane w bazie danych do określenia, czy pole danych wymaga wartości.</xref:System.ComponentModel.DataAnnotations.RequiredAttribute> </xref:System.Web.DynamicData.MetaColumn.Description%2A>"
  syntax:
    content: public bool IsRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli w polu danych wymaga wartości; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.IsRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.IsString
  id: IsString
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: IsString
  nameWithType: MetaColumn.IsString
  fullName: System.Web.DynamicData.MetaColumn.IsString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy typ pola danych jest typem ciągu."
  syntax:
    content: public bool IsString { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli typ pola danych jest typ ciąg; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.IsString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.MaxLength
  id: MaxLength
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: MaxLength
  nameWithType: MetaColumn.MaxLength
  fullName: System.Web.DynamicData.MetaColumn.MaxLength
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą maksymalną długość danych, które mogą być przechowywane w polu danych."
  remarks: "Właściwości MaxLength sprawdza, czy <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute>atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A>Właściwości.</xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> </xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> Jeśli <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute>atrybut nie ma zastosowania do pola danych, właściwości MaxLength używa typu bazy danych można pobrać maksymalną dozwoloną długość.</xref:System.ComponentModel.DataAnnotations.StringLengthAttribute>"
  syntax:
    content: public int MaxLength { get; }
    return:
      type: System.Int32
      description: "Maksymalna długość danych, które mogą być przechowywane w polu danych."
  overload: System.Web.DynamicData.MetaColumn.MaxLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.Model
  id: Model
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: Model
  nameWithType: MetaColumn.Model
  fullName: System.Web.DynamicData.MetaColumn.Model
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera <xref href=&quot;System.Web.DynamicData.MetaModel&quot;> </xref> obiekt, który reprezentuje model danych, który należy do tego pola danych."
  syntax:
    content: public System.Web.DynamicData.MetaModel Model { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "Obiekt reprezentujący model danych, który należy do tego pola danych."
  overload: System.Web.DynamicData.MetaColumn.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.Name
  id: Name
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: Name
  nameWithType: MetaColumn.Name
  fullName: System.Web.DynamicData.MetaColumn.Name
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera nazwę pola danych."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Nazwa pola danych."
  overload: System.Web.DynamicData.MetaColumn.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.NullDisplayText
  id: NullDisplayText
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: MetaColumn.NullDisplayText
  fullName: System.Web.DynamicData.MetaColumn.NullDisplayText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera pola tekstem, który jest wyświetlany, gdy wartość pola jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Właściwość NullDisplayText sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=fullName>Właściwości.</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> Jeśli <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>atrybut nie zostanie znaleziony, ta właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute>atrybut jest stosowany do pobrania informacji o formatowania.</xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>"
  syntax:
    content: public string NullDisplayText { get; }
    return:
      type: System.String
      description: "Podpis wyświetlany dla pola, gdy wartość pola jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.Prompt
  id: Prompt
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: Prompt
  nameWithType: MetaColumn.Prompt
  fullName: System.Web.DynamicData.MetaColumn.Prompt
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość, która może być używany jako znak wodny w interfejsie użytkownika, który jest powiązany z danymi w kolumnie."
  remarks: "A `null` lub może być zwrócony pusty ciąg."
  example:
  - This property is set by the <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> attribute in the column's definition in the meta class for the data entity.
  syntax:
    content: public virtual string Prompt { get; }
    return:
      type: System.String
      description: "Wartość, która może być używany jako znak wodny w interfejsie użytkownika, który jest powiązany z danymi w kolumnie."
  overload: System.Web.DynamicData.MetaColumn.Prompt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.Provider
  id: Provider
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: Provider
  nameWithType: MetaColumn.Provider
  fullName: System.Web.DynamicData.MetaColumn.Provider
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera obiekt dostawcy abstrakcji, który służy do generowania <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> obiektu."
  syntax:
    content: public System.Web.DynamicData.ModelProviders.ColumnProvider Provider { get; }
    return:
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: "Obiekt dostawcy abstrakcji, który służy do generowania <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> obiektu."
  overload: System.Web.DynamicData.MetaColumn.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.RequiredErrorMessage
  id: RequiredErrorMessage
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: RequiredErrorMessage
  nameWithType: MetaColumn.RequiredErrorMessage
  fullName: System.Web.DynamicData.MetaColumn.RequiredErrorMessage
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera komunikat o błędzie, który jest wyświetlany, gdy w polu danych wymaga wartości, ale jej wartość jest pusta."
  syntax:
    content: public string RequiredErrorMessage { get; }
    return:
      type: System.String
      description: "Komunikat o błędzie wyświetlany, gdy w polu danych wymaga wartości, ale jej wartość jest pusta."
  overload: System.Web.DynamicData.MetaColumn.RequiredErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.ResetMetadata
  id: ResetMetadata
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: ResetMetadata()
  nameWithType: MetaColumn.ResetMetadata()
  fullName: System.Web.DynamicData.MetaColumn.ResetMetadata()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Czyści buforowanych metadanych kolumn."
  remarks: "Metadane kolumn nie są informacje, która jest określana na podstawie atrybutów i które są buforowane na wydajność. Wywołanie tej metody spowoduje wyczyszczenie pamięci podręcznej metadanych dla tej kolumny. Pamięć podręczna metadanych zostanie skompilowany ponownie przy następnym żądanej wszystkie informacje, które jest określana na podstawie metadanych."
  syntax:
    content: public void ResetMetadata ();
    parameters: []
  overload: System.Web.DynamicData.MetaColumn.ResetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.Scaffold
  id: Scaffold
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: Scaffold
  nameWithType: MetaColumn.Scaffold
  fullName: System.Web.DynamicData.MetaColumn.Scaffold
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość wskazującą, czy ma być wyświetlany w polu danych."
  remarks: "Właściwość szkieletu wskazuje, czy pole danych powinien być wyświetlany, gdy jest ona generowana automatycznie przez danych dynamicznych platformy ASP.NET. Ta właściwość sprawdza, czy <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute>atrybut jest stosowany do pola danych i zwraca wartość <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=fullName>Właściwości.</xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> Jeśli <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute>atrybut nie ma zastosowania do pola danych, aby określić, czy mają być wyświetlane kolumny danych dynamicznych stosowane są następujące reguły: - Jeśli <xref:System.ComponentModel.DataAnnotations.UIHintAttribute>atrybut jest stosowany do pola danych, jest wyświetlana w polu danych.</xref:System.ComponentModel.DataAnnotations.UIHintAttribute> </xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> Ta reguła zastępuje wszystkie inne zasady.      — W przypadku wartość <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A>właściwość jest `true`, nie jest wyświetlana w polu danych.</xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> Dzieje się tak, ponieważ dane dynamiczne obsługuje pola klucza obcego w inny sposób i zazwyczaj nie będą wyświetlane wartości pola klucza obcego.      — W przypadku wartość <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A>właściwość jest `true`, nie jest wyświetlana w polu danych.</xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> Zazwyczaj pola, które są generowane automatycznie w bazie danych nie zawierają istotne informacje. Upewnij się, że stosujesz <xref:System.ComponentModel.DataAnnotations.UIHintAttribute>atrybutu do pola danych, jeśli musi zostać wyświetlony w polu danych.</xref:System.ComponentModel.DataAnnotations.UIHintAttribute>      — W przypadku wartość <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A>właściwość jest `true`, nie jest wyświetlana w polu danych.</xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A>"
  syntax:
    content: public virtual bool Scaffold { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli powinien być wyświetlany w polu danych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaColumn.Scaffold*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.ShortDisplayName
  id: ShortDisplayName
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: ShortDisplayName
  nameWithType: MetaColumn.ShortDisplayName
  fullName: System.Web.DynamicData.MetaColumn.ShortDisplayName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera krótką nazwę kolumny."
  remarks: "Ta właściwość jest udostępniana dla <xref:System.Web.UI.WebControls.GridView>kontroli i innych kontrolek, gdy jest potrzebne krótkiej nazwy z powodu ograniczone miejsca nagłówka kolumny.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: public virtual string ShortDisplayName { get; }
    return:
      type: System.String
      description: "Krótka nazwa kolumny."
  overload: System.Web.DynamicData.MetaColumn.ShortDisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.SortExpression
  id: SortExpression
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: SortExpression
  nameWithType: MetaColumn.SortExpression
  fullName: System.Web.DynamicData.MetaColumn.SortExpression
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wyrażenie, które służy do określania kolejności sortowania dla pola danych."
  syntax:
    content: public string SortExpression { get; }
    return:
      type: System.String
      description: "Wyrażenie, które służy do określania kolejności sortowania dla pola danych."
  overload: System.Web.DynamicData.MetaColumn.SortExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.Table
  id: Table
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: Table
  nameWithType: MetaColumn.Table
  fullName: System.Web.DynamicData.MetaColumn.Table
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera <xref href=&quot;System.Web.DynamicData.MetaTable&quot;> </xref> obiekt, który reprezentuje pole danych należy do tabeli."
  syntax:
    content: public System.Web.DynamicData.MetaTable Table { get; }
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Obiekt, który reprezentuje pole danych należy do tabeli."
  overload: System.Web.DynamicData.MetaColumn.Table*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.ToString
  id: ToString
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: ToString()
  nameWithType: MetaColumn.ToString()
  fullName: System.Web.DynamicData.MetaColumn.ToString()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera nazwę pola danych."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Nazwa pola danych, która jest reprezentację ciągu kolumny."
  overload: System.Web.DynamicData.MetaColumn.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.TypeCode
  id: TypeCode
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: TypeCode
  nameWithType: MetaColumn.TypeCode
  fullName: System.Web.DynamicData.MetaColumn.TypeCode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera typ pola danych."
  remarks: "Wartość właściwości elementu TypeCode pochodzi od wartości <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A>Właściwości.</xref:System.Web.DynamicData.MetaColumn.ColumnType%2A>"
  syntax:
    content: public TypeCode TypeCode { get; }
    return:
      type: System.TypeCode
      description: "Typ pola danych."
  overload: System.Web.DynamicData.MetaColumn.TypeCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaColumn.UIHint
  id: UIHint
  parent: System.Web.DynamicData.MetaColumn
  langs:
  - csharp
  name: UIHint
  nameWithType: MetaColumn.UIHint
  fullName: System.Web.DynamicData.MetaColumn.UIHint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera nazwę szablonu pola określone dla pola danych."
  remarks: "Właściwość UIHint sprawdza, czy <xref:System.ComponentModel.DataAnnotations.UIHintAttribute>atrybut jest stosowany do pola danych i pobiera wartość <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=fullName>Właściwości.</xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.UIHintAttribute> Jeśli <xref:System.ComponentModel.DataAnnotations.UIHintAttribute>atrybut nie ma zastosowania do pola danych, właściwość UIHint zwraca pusty ciąg.</xref:System.ComponentModel.DataAnnotations.UIHintAttribute>"
  syntax:
    content: public virtual string UIHint { get; }
    return:
      type: System.String
      description: "Nazwa szablonu pola określone dla pola danych."
  overload: System.Web.DynamicData.MetaColumn.UIHint*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: MetaColumn(MetaTable,ColumnProvider)
  nameWithType: MetaColumn.MetaColumn(MetaTable,ColumnProvider)
  fullName: System.Web.DynamicData.MetaColumn.MetaColumn(MetaTable,ColumnProvider)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.ModelProviders.ColumnProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: ColumnProvider
  nameWithType: ColumnProvider
  fullName: System.Web.DynamicData.ModelProviders.ColumnProvider
- uid: System.Web.DynamicData.MetaColumn.AllowInitialValue
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: AllowInitialValue
  nameWithType: MetaColumn.AllowInitialValue
  fullName: System.Web.DynamicData.MetaColumn.AllowInitialValue
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: MetaColumn.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode
- uid: System.Web.DynamicData.MetaColumn.Attributes
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Attributes
  nameWithType: MetaColumn.Attributes
  fullName: System.Web.DynamicData.MetaColumn.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.Web.DynamicData.MetaColumn.BuildAttributeCollection
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: BuildAttributeCollection()
  nameWithType: MetaColumn.BuildAttributeCollection()
  fullName: System.Web.DynamicData.MetaColumn.BuildAttributeCollection()
- uid: System.Web.DynamicData.MetaColumn.ColumnType
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: ColumnType
  nameWithType: MetaColumn.ColumnType
  fullName: System.Web.DynamicData.MetaColumn.ColumnType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: MetaColumn.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.MetaColumn.DataFormatString
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: DataFormatString
  nameWithType: MetaColumn.DataFormatString
  fullName: System.Web.DynamicData.MetaColumn.DataFormatString
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaColumn.DataTypeAttribute
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: DataTypeAttribute
  nameWithType: MetaColumn.DataTypeAttribute
  fullName: System.Web.DynamicData.MetaColumn.DataTypeAttribute
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute
  parent: System.ComponentModel.DataAnnotations
  isExternal: true
  name: DataTypeAttribute
  nameWithType: DataTypeAttribute
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute
- uid: System.Web.DynamicData.MetaColumn.DefaultValue
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: DefaultValue
  nameWithType: MetaColumn.DefaultValue
  fullName: System.Web.DynamicData.MetaColumn.DefaultValue
- uid: System.Web.DynamicData.MetaColumn.Description
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Description
  nameWithType: MetaColumn.Description
  fullName: System.Web.DynamicData.MetaColumn.Description
- uid: System.Web.DynamicData.MetaColumn.DisplayName
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: DisplayName
  nameWithType: MetaColumn.DisplayName
  fullName: System.Web.DynamicData.MetaColumn.DisplayName
- uid: System.Web.DynamicData.MetaColumn.EntityTypeProperty
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: EntityTypeProperty
  nameWithType: MetaColumn.EntityTypeProperty
  fullName: System.Web.DynamicData.MetaColumn.EntityTypeProperty
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Web.DynamicData.MetaColumn.FilterUIHint
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: FilterUIHint
  nameWithType: MetaColumn.FilterUIHint
  fullName: System.Web.DynamicData.MetaColumn.FilterUIHint
- uid: System.Web.DynamicData.MetaColumn.HtmlEncode
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: HtmlEncode
  nameWithType: MetaColumn.HtmlEncode
  fullName: System.Web.DynamicData.MetaColumn.HtmlEncode
- uid: System.Web.DynamicData.MetaColumn.Initialize
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Initialize()
  nameWithType: MetaColumn.Initialize()
  fullName: System.Web.DynamicData.MetaColumn.Initialize()
- uid: System.Web.DynamicData.MetaColumn.IsBinaryData
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsBinaryData
  nameWithType: MetaColumn.IsBinaryData
  fullName: System.Web.DynamicData.MetaColumn.IsBinaryData
- uid: System.Web.DynamicData.MetaColumn.IsCustomProperty
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsCustomProperty
  nameWithType: MetaColumn.IsCustomProperty
  fullName: System.Web.DynamicData.MetaColumn.IsCustomProperty
- uid: System.Web.DynamicData.MetaColumn.IsFloatingPoint
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsFloatingPoint
  nameWithType: MetaColumn.IsFloatingPoint
  fullName: System.Web.DynamicData.MetaColumn.IsFloatingPoint
- uid: System.Web.DynamicData.MetaColumn.IsForeignKeyComponent
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsForeignKeyComponent
  nameWithType: MetaColumn.IsForeignKeyComponent
  fullName: System.Web.DynamicData.MetaColumn.IsForeignKeyComponent
- uid: System.Web.DynamicData.MetaColumn.IsGenerated
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsGenerated
  nameWithType: MetaColumn.IsGenerated
  fullName: System.Web.DynamicData.MetaColumn.IsGenerated
- uid: System.Web.DynamicData.MetaColumn.IsInteger
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsInteger
  nameWithType: MetaColumn.IsInteger
  fullName: System.Web.DynamicData.MetaColumn.IsInteger
- uid: System.Web.DynamicData.MetaColumn.IsLongString
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsLongString
  nameWithType: MetaColumn.IsLongString
  fullName: System.Web.DynamicData.MetaColumn.IsLongString
- uid: System.Web.DynamicData.MetaColumn.IsPrimaryKey
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsPrimaryKey
  nameWithType: MetaColumn.IsPrimaryKey
  fullName: System.Web.DynamicData.MetaColumn.IsPrimaryKey
- uid: System.Web.DynamicData.MetaColumn.IsReadOnly
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsReadOnly
  nameWithType: MetaColumn.IsReadOnly
  fullName: System.Web.DynamicData.MetaColumn.IsReadOnly
- uid: System.Web.DynamicData.MetaColumn.IsRequired
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsRequired
  nameWithType: MetaColumn.IsRequired
  fullName: System.Web.DynamicData.MetaColumn.IsRequired
- uid: System.Web.DynamicData.MetaColumn.IsString
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsString
  nameWithType: MetaColumn.IsString
  fullName: System.Web.DynamicData.MetaColumn.IsString
- uid: System.Web.DynamicData.MetaColumn.MaxLength
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: MaxLength
  nameWithType: MetaColumn.MaxLength
  fullName: System.Web.DynamicData.MetaColumn.MaxLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.DynamicData.MetaColumn.Model
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Model
  nameWithType: MetaColumn.Model
  fullName: System.Web.DynamicData.MetaColumn.Model
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.MetaColumn.Name
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Name
  nameWithType: MetaColumn.Name
  fullName: System.Web.DynamicData.MetaColumn.Name
- uid: System.Web.DynamicData.MetaColumn.NullDisplayText
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: NullDisplayText
  nameWithType: MetaColumn.NullDisplayText
  fullName: System.Web.DynamicData.MetaColumn.NullDisplayText
- uid: System.Web.DynamicData.MetaColumn.Prompt
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Prompt
  nameWithType: MetaColumn.Prompt
  fullName: System.Web.DynamicData.MetaColumn.Prompt
- uid: System.Web.DynamicData.MetaColumn.Provider
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Provider
  nameWithType: MetaColumn.Provider
  fullName: System.Web.DynamicData.MetaColumn.Provider
- uid: System.Web.DynamicData.MetaColumn.RequiredErrorMessage
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: RequiredErrorMessage
  nameWithType: MetaColumn.RequiredErrorMessage
  fullName: System.Web.DynamicData.MetaColumn.RequiredErrorMessage
- uid: System.Web.DynamicData.MetaColumn.ResetMetadata
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: ResetMetadata()
  nameWithType: MetaColumn.ResetMetadata()
  fullName: System.Web.DynamicData.MetaColumn.ResetMetadata()
- uid: System.Web.DynamicData.MetaColumn.Scaffold
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Scaffold
  nameWithType: MetaColumn.Scaffold
  fullName: System.Web.DynamicData.MetaColumn.Scaffold
- uid: System.Web.DynamicData.MetaColumn.ShortDisplayName
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: ShortDisplayName
  nameWithType: MetaColumn.ShortDisplayName
  fullName: System.Web.DynamicData.MetaColumn.ShortDisplayName
- uid: System.Web.DynamicData.MetaColumn.SortExpression
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: SortExpression
  nameWithType: MetaColumn.SortExpression
  fullName: System.Web.DynamicData.MetaColumn.SortExpression
- uid: System.Web.DynamicData.MetaColumn.Table
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Table
  nameWithType: MetaColumn.Table
  fullName: System.Web.DynamicData.MetaColumn.Table
- uid: System.Web.DynamicData.MetaColumn.ToString
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: ToString()
  nameWithType: MetaColumn.ToString()
  fullName: System.Web.DynamicData.MetaColumn.ToString()
- uid: System.Web.DynamicData.MetaColumn.TypeCode
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: TypeCode
  nameWithType: MetaColumn.TypeCode
  fullName: System.Web.DynamicData.MetaColumn.TypeCode
- uid: System.TypeCode
  parent: System
  isExternal: true
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.Web.DynamicData.MetaColumn.UIHint
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: UIHint
  nameWithType: MetaColumn.UIHint
  fullName: System.Web.DynamicData.MetaColumn.UIHint
- uid: System.Web.DynamicData.MetaColumn.#ctor*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn.MetaColumn
- uid: System.Web.DynamicData.MetaColumn.AllowInitialValue*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: AllowInitialValue
  nameWithType: MetaColumn.AllowInitialValue
- uid: System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: MetaColumn.ApplyFormatInEditMode
- uid: System.Web.DynamicData.MetaColumn.Attributes*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Attributes
  nameWithType: MetaColumn.Attributes
- uid: System.Web.DynamicData.MetaColumn.BuildAttributeCollection*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: BuildAttributeCollection
  nameWithType: MetaColumn.BuildAttributeCollection
- uid: System.Web.DynamicData.MetaColumn.ColumnType*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: ColumnType
  nameWithType: MetaColumn.ColumnType
- uid: System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: MetaColumn.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.MetaColumn.DataFormatString*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: DataFormatString
  nameWithType: MetaColumn.DataFormatString
- uid: System.Web.DynamicData.MetaColumn.DataTypeAttribute*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: DataTypeAttribute
  nameWithType: MetaColumn.DataTypeAttribute
- uid: System.Web.DynamicData.MetaColumn.DefaultValue*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: DefaultValue
  nameWithType: MetaColumn.DefaultValue
- uid: System.Web.DynamicData.MetaColumn.Description*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Description
  nameWithType: MetaColumn.Description
- uid: System.Web.DynamicData.MetaColumn.DisplayName*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: DisplayName
  nameWithType: MetaColumn.DisplayName
- uid: System.Web.DynamicData.MetaColumn.EntityTypeProperty*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: EntityTypeProperty
  nameWithType: MetaColumn.EntityTypeProperty
- uid: System.Web.DynamicData.MetaColumn.FilterUIHint*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: FilterUIHint
  nameWithType: MetaColumn.FilterUIHint
- uid: System.Web.DynamicData.MetaColumn.HtmlEncode*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: HtmlEncode
  nameWithType: MetaColumn.HtmlEncode
- uid: System.Web.DynamicData.MetaColumn.Initialize*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Initialize
  nameWithType: MetaColumn.Initialize
- uid: System.Web.DynamicData.MetaColumn.IsBinaryData*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsBinaryData
  nameWithType: MetaColumn.IsBinaryData
- uid: System.Web.DynamicData.MetaColumn.IsCustomProperty*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsCustomProperty
  nameWithType: MetaColumn.IsCustomProperty
- uid: System.Web.DynamicData.MetaColumn.IsFloatingPoint*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsFloatingPoint
  nameWithType: MetaColumn.IsFloatingPoint
- uid: System.Web.DynamicData.MetaColumn.IsForeignKeyComponent*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsForeignKeyComponent
  nameWithType: MetaColumn.IsForeignKeyComponent
- uid: System.Web.DynamicData.MetaColumn.IsGenerated*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsGenerated
  nameWithType: MetaColumn.IsGenerated
- uid: System.Web.DynamicData.MetaColumn.IsInteger*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsInteger
  nameWithType: MetaColumn.IsInteger
- uid: System.Web.DynamicData.MetaColumn.IsLongString*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsLongString
  nameWithType: MetaColumn.IsLongString
- uid: System.Web.DynamicData.MetaColumn.IsPrimaryKey*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsPrimaryKey
  nameWithType: MetaColumn.IsPrimaryKey
- uid: System.Web.DynamicData.MetaColumn.IsReadOnly*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsReadOnly
  nameWithType: MetaColumn.IsReadOnly
- uid: System.Web.DynamicData.MetaColumn.IsRequired*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsRequired
  nameWithType: MetaColumn.IsRequired
- uid: System.Web.DynamicData.MetaColumn.IsString*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: IsString
  nameWithType: MetaColumn.IsString
- uid: System.Web.DynamicData.MetaColumn.MaxLength*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: MaxLength
  nameWithType: MetaColumn.MaxLength
- uid: System.Web.DynamicData.MetaColumn.Model*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Model
  nameWithType: MetaColumn.Model
- uid: System.Web.DynamicData.MetaColumn.Name*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Name
  nameWithType: MetaColumn.Name
- uid: System.Web.DynamicData.MetaColumn.NullDisplayText*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: NullDisplayText
  nameWithType: MetaColumn.NullDisplayText
- uid: System.Web.DynamicData.MetaColumn.Prompt*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Prompt
  nameWithType: MetaColumn.Prompt
- uid: System.Web.DynamicData.MetaColumn.Provider*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Provider
  nameWithType: MetaColumn.Provider
- uid: System.Web.DynamicData.MetaColumn.RequiredErrorMessage*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: RequiredErrorMessage
  nameWithType: MetaColumn.RequiredErrorMessage
- uid: System.Web.DynamicData.MetaColumn.ResetMetadata*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: ResetMetadata
  nameWithType: MetaColumn.ResetMetadata
- uid: System.Web.DynamicData.MetaColumn.Scaffold*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Scaffold
  nameWithType: MetaColumn.Scaffold
- uid: System.Web.DynamicData.MetaColumn.ShortDisplayName*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: ShortDisplayName
  nameWithType: MetaColumn.ShortDisplayName
- uid: System.Web.DynamicData.MetaColumn.SortExpression*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: SortExpression
  nameWithType: MetaColumn.SortExpression
- uid: System.Web.DynamicData.MetaColumn.Table*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: Table
  nameWithType: MetaColumn.Table
- uid: System.Web.DynamicData.MetaColumn.ToString*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: ToString
  nameWithType: MetaColumn.ToString
- uid: System.Web.DynamicData.MetaColumn.TypeCode*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: TypeCode
  nameWithType: MetaColumn.TypeCode
- uid: System.Web.DynamicData.MetaColumn.UIHint*
  parent: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: UIHint
  nameWithType: MetaColumn.UIHint
