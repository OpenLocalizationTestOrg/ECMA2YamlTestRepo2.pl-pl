### YamlMime:ManagedReference
items:
- uid: System.Text.EncoderReplacementFallbackBuffer
  id: EncoderReplacementFallbackBuffer
  children:
  - System.Text.EncoderReplacementFallbackBuffer.#ctor(System.Text.EncoderReplacementFallback)
  - System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Int32)
  - System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  - System.Text.EncoderReplacementFallbackBuffer.GetNextChar
  - System.Text.EncoderReplacementFallbackBuffer.MovePrevious
  - System.Text.EncoderReplacementFallbackBuffer.Remaining
  - System.Text.EncoderReplacementFallbackBuffer.Reset
  langs:
  - csharp
  name: EncoderReplacementFallbackBuffer
  nameWithType: EncoderReplacementFallbackBuffer
  fullName: System.Text.EncoderReplacementFallbackBuffer
  type: Class
  summary: "Reprezentuje ciąg wejściowy substitute używany, gdy oryginalne znak wejściowy nie może zostać zakodowany. Ta klasa nie może być dziedziczona."
  remarks: "Nie może być można konwertować znak sekwencji równoważne zakodowanego bajtów, jeśli istnieje bez odpowiedniego kodowania. Kodowanie niepowodzenie typową przyczyną jest Jeśli operacji konwersji używa stronę kodową, która nie zawiera znaku do kodowania.       Jeśli nie można przekonwertować wprowadzany znak sekwencji bajtów wyjściowych <xref:System.Text.EncoderReplacementFallback?displayProperty=fullName>obiektu zawiera ciąg zastępczy, który zostanie zastąpiony oryginalnego znak wejściowy.</xref:System.Text.EncoderReplacementFallback?displayProperty=fullName> Ciąg zastępczy inicjuje wartość <xref:System.Text.EncoderReplacementFallback>obiektu, a wartość <xref:System.Text.EncoderReplacementFallback>obiektu inicjuje wartości obiektu EncoderReplacementFallbackBuffer.</xref:System.Text.EncoderReplacementFallback> </xref:System.Text.EncoderReplacementFallback> Wartość obiektu EncoderReplacementFallbackBuffer jest nazywany buforze rezerwowym zastąpienia. Operacja konwersji koduje buforze rezerwowym zastępczy zamiast oryginalnej znak wejściowy, a następnie kontynuuje przetwarzanie reszta danych wejściowych."
  syntax:
    content: 'public sealed class EncoderReplacementFallbackBuffer : System.Text.EncoderFallbackBuffer'
  inheritance:
  - System.Text.EncoderFallbackBuffer
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.EncoderReplacementFallbackBuffer.#ctor(System.Text.EncoderReplacementFallback)
  id: '#ctor(System.Text.EncoderReplacementFallback)'
  parent: System.Text.EncoderReplacementFallbackBuffer
  langs:
  - csharp
  name: EncoderReplacementFallbackBuffer(EncoderReplacementFallback)
  nameWithType: EncoderReplacementFallbackBuffer.EncoderReplacementFallbackBuffer(EncoderReplacementFallback)
  fullName: System.Text.EncoderReplacementFallbackBuffer.EncoderReplacementFallbackBuffer(EncoderReplacementFallback)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Text.EncoderReplacementFallbackBuffer&quot;> </xref> przy użyciu wartości <xref:System.Text.EncoderReplacementFallback>obiektu.</xref:System.Text.EncoderReplacementFallback>"
  syntax:
    content: public EncoderReplacementFallbackBuffer (System.Text.EncoderReplacementFallback fallback);
    parameters:
    - id: fallback
      type: System.Text.EncoderReplacementFallback
      description: "A <xref:System.Text.EncoderReplacementFallback>obiektu.</xref:System.Text.EncoderReplacementFallback>"
  overload: System.Text.EncoderReplacementFallbackBuffer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Int32)
  id: Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderReplacementFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Int32)
  nameWithType: EncoderReplacementFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderReplacementFallbackBuffer.Fallback(Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Przygotowuje buforze rezerwowym zastępczy do użycia bieżącego ciąg zastępczy."
  remarks: "<xref:System.Text.Encoding.GetBytes%2A>i <xref:System.Text.Encoder.Convert%2A>metody wywołania rezerwowe w przypadku napotkania nieznany znak w danych wejściowych.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> Jeśli jest zwracana wartość powrotu `true`, można wywołać metody wywołującej <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A>metodę, aby uzyskać każdego znaku w buforze rezerwowym zamiany.</xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A>"
  syntax:
    content: public override bool Fallback (char charUnknown, int index);
    parameters:
    - id: charUnknown
      type: System.Char
      description: "Znak wejściowy. Ten parametr jest ignorowany w tej operacji, o ile nie jest zgłaszany wyjątek."
    - id: index
      type: System.Int32
      description: "Indeks znaku w buforze wejściowym. Ten parametr jest ignorowany w tej operacji."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ciąg zastępczy nie jest pusty; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli ciąg zastępczy jest pusta."
  overload: System.Text.EncoderReplacementFallbackBuffer.Fallback*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ta metoda jest wywoływana ponownie przed <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar*>Metoda ma odczytu wszystkich znaków w buforze rezerwowym zamiany.</xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar*>"
  platform:
  - net462
- uid: System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  id: Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderReplacementFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderReplacementFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderReplacementFallbackBuffer.Fallback(Char,Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Wskazuje, czy ciąg zastępczy mogą być używane podczas wprowadzania surogatu, który nie może zostać zakodowany pary lub czy para zastępcza można zignorować. Parametry określają para zastępcza i indeks pary w danych wejściowych."
  remarks: "<xref:System.Text.Encoding.GetBytes%2A>i <xref:System.Text.Encoder.Convert%2A>metody wywołania rezerwowe w przypadku napotkania nieznany znak w danych wejściowych.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> Jeśli jest zwracana wartość powrotu `true`, można wywołać metody wywołującej <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A>metodę, aby uzyskać każdego znaku w buforze rezerwowym zamiany.</xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A>"
  syntax:
    content: public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);
    parameters:
    - id: charUnknownHigh
      type: System.Char
      description: "Zastępczym wysokiego poziomu wejściowego pary."
    - id: charUnknownLow
      type: System.Char
      description: "Dwuskładnikowego pary wejściowego."
    - id: index
      type: System.Int32
      description: "Indeks para zastępcza w buforze wejściowym."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ciąg zastępczy nie jest pusty; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli ciąg zastępczy jest pusta."
  overload: System.Text.EncoderReplacementFallbackBuffer.Fallback*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ta metoda jest wywoływana ponownie przed <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar*>metody zapoznał wszystkie zastąpienia znaków ciągu.</xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar*>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość <code> charUnknownHigh </code> jest mniejsza niż U + D800 lub większa niż U + D8FF.       - lub - wartość <code> charUnknownLow </code> jest mniejsza niż U + DC00 lub większa niż U + DFFF."
  platform:
  - net462
- uid: System.Text.EncoderReplacementFallbackBuffer.GetNextChar
  id: GetNextChar
  parent: System.Text.EncoderReplacementFallbackBuffer
  langs:
  - csharp
  name: GetNextChar()
  nameWithType: EncoderReplacementFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderReplacementFallbackBuffer.GetNextChar()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Pobiera następny znak w buforze rezerwowym zastąpienia."
  remarks: "<xref:System.Text.Encoding.GetBytes%2A>i <xref:System.Text.Encoder.Convert%2A>wywołania metody <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A>w momencie napotkania para zastępcza nieznany lub znak w danych wejściowych.</xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> </xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> Jeśli wartość zwracana <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A>jest `true`, metody wywołującej może wywołać GetNextChar uzyskanie każdego znaku w buforze rezerwowym zamiany.</xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A>"
  syntax:
    content: public override char GetNextChar ();
    parameters: []
    return:
      type: System.Char
      description: "Następny znak Unicode w buforze rezerwowym zastąpienia, który można zakodować aplikacji."
  overload: System.Text.EncoderReplacementFallbackBuffer.GetNextChar*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderReplacementFallbackBuffer.MovePrevious
  id: MovePrevious
  parent: System.Text.EncoderReplacementFallbackBuffer
  langs:
  - csharp
  name: MovePrevious()
  nameWithType: EncoderReplacementFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderReplacementFallbackBuffer.MovePrevious()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Powoduje, że następne wywołanie <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar*>metodę dostępu pozycja znaku w buforze rezerwowym zastępczy przed bieżącego położenia znaku.</xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar*>"
  syntax:
    content: public override bool MovePrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli operacja MovePrevious zakończyło się pomyślnie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Text.EncoderReplacementFallbackBuffer.MovePrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderReplacementFallbackBuffer.Remaining
  id: Remaining
  parent: System.Text.EncoderReplacementFallbackBuffer
  langs:
  - csharp
  name: Remaining
  nameWithType: EncoderReplacementFallbackBuffer.Remaining
  fullName: System.Text.EncoderReplacementFallbackBuffer.Remaining
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Pobiera liczbę znaków w buforze rezerwowym zastępczy dokończenia przetwarzania."
  remarks: "<xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A>Metoda zwraca `true` Jeśli właściwość pozostała jest różna od zera.</xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A>"
  syntax:
    content: public override int Remaining { get; }
    return:
      type: System.Int32
      description: "Liczba znaków w buforze rezerwowym zastąpienia, które nie zostały przetworzone."
  overload: System.Text.EncoderReplacementFallbackBuffer.Remaining*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderReplacementFallbackBuffer.Reset
  id: Reset
  parent: System.Text.EncoderReplacementFallbackBuffer
  langs:
  - csharp
  name: Reset()
  nameWithType: EncoderReplacementFallbackBuffer.Reset()
  fullName: System.Text.EncoderReplacementFallbackBuffer.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Inicjuje wszystkie informacje stan wewnętrzny i dane w tym wystąpieniu programu <xref href=&quot;System.Text.EncoderReplacementFallbackBuffer&quot;> </xref>."
  remarks: "Metoda Reset odrzuca wszystkie stanu utrwalonego informacje i dane, które będą zarządzały sposobem emitowanie ciąg zastępczy. Nieoczekiwane wyniki wystąpić, jeśli operacja kodowania znowu po wywołaniu metody resetowania."
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: System.Text.EncoderReplacementFallbackBuffer.Reset*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Text.EncoderFallbackBuffer
  isExternal: false
  name: System.Text.EncoderFallbackBuffer
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.EncoderReplacementFallbackBuffer.#ctor(System.Text.EncoderReplacementFallback)
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: EncoderReplacementFallbackBuffer(EncoderReplacementFallback)
  nameWithType: EncoderReplacementFallbackBuffer.EncoderReplacementFallbackBuffer(EncoderReplacementFallback)
  fullName: System.Text.EncoderReplacementFallbackBuffer.EncoderReplacementFallbackBuffer(EncoderReplacementFallback)
- uid: System.Text.EncoderReplacementFallback
  parent: System.Text
  isExternal: true
  name: EncoderReplacementFallback
  nameWithType: EncoderReplacementFallback
  fullName: System.Text.EncoderReplacementFallback
- uid: System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: Fallback(Char,Int32)
  nameWithType: EncoderReplacementFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderReplacementFallbackBuffer.Fallback(Char,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderReplacementFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderReplacementFallbackBuffer.Fallback(Char,Char,Int32)
- uid: System.Text.EncoderReplacementFallbackBuffer.GetNextChar
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: GetNextChar()
  nameWithType: EncoderReplacementFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderReplacementFallbackBuffer.GetNextChar()
- uid: System.Text.EncoderReplacementFallbackBuffer.MovePrevious
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: MovePrevious()
  nameWithType: EncoderReplacementFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderReplacementFallbackBuffer.MovePrevious()
- uid: System.Text.EncoderReplacementFallbackBuffer.Remaining
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderReplacementFallbackBuffer.Remaining
  fullName: System.Text.EncoderReplacementFallbackBuffer.Remaining
- uid: System.Text.EncoderReplacementFallbackBuffer.Reset
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: Reset()
  nameWithType: EncoderReplacementFallbackBuffer.Reset()
  fullName: System.Text.EncoderReplacementFallbackBuffer.Reset()
- uid: System.Text.EncoderReplacementFallbackBuffer.#ctor*
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: EncoderReplacementFallbackBuffer
  nameWithType: EncoderReplacementFallbackBuffer.EncoderReplacementFallbackBuffer
- uid: System.Text.EncoderReplacementFallbackBuffer.Fallback*
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: Fallback
  nameWithType: EncoderReplacementFallbackBuffer.Fallback
- uid: System.Text.EncoderReplacementFallbackBuffer.GetNextChar*
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: GetNextChar
  nameWithType: EncoderReplacementFallbackBuffer.GetNextChar
- uid: System.Text.EncoderReplacementFallbackBuffer.MovePrevious*
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: MovePrevious
  nameWithType: EncoderReplacementFallbackBuffer.MovePrevious
- uid: System.Text.EncoderReplacementFallbackBuffer.Remaining*
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderReplacementFallbackBuffer.Remaining
- uid: System.Text.EncoderReplacementFallbackBuffer.Reset*
  parent: System.Text.EncoderReplacementFallbackBuffer
  isExternal: false
  name: Reset
  nameWithType: EncoderReplacementFallbackBuffer.Reset
