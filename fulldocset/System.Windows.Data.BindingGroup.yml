### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingGroup
  id: BindingGroup
  children:
  - System.Windows.Data.BindingGroup.#ctor
  - System.Windows.Data.BindingGroup.BeginEdit
  - System.Windows.Data.BindingGroup.BindingExpressions
  - System.Windows.Data.BindingGroup.CancelEdit
  - System.Windows.Data.BindingGroup.CanRestoreValues
  - System.Windows.Data.BindingGroup.CommitEdit
  - System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  - System.Windows.Data.BindingGroup.HasValidationError
  - System.Windows.Data.BindingGroup.IsDirty
  - System.Windows.Data.BindingGroup.Items
  - System.Windows.Data.BindingGroup.Name
  - System.Windows.Data.BindingGroup.NotifyOnValidationError
  - System.Windows.Data.BindingGroup.Owner
  - System.Windows.Data.BindingGroup.SharesProposedValues
  - System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  - System.Windows.Data.BindingGroup.UpdateSources
  - System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  - System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  - System.Windows.Data.BindingGroup.ValidationErrors
  - System.Windows.Data.BindingGroup.ValidationRules
  langs:
  - csharp
  name: BindingGroup
  nameWithType: BindingGroup
  fullName: System.Windows.Data.BindingGroup
  type: Class
  summary: "Zawiera kolekcję powiązań i <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> obiektów, które są używane do weryfikacji obiektu."
  remarks: "BindingGroup tworzy relację między wiele powiązań, które można sprawdzić poprawności i aktualizowane jednocześnie. Na przykład załóżmy, że aplikacja monituje użytkownika o podanie adresu. Następnie aplikacja wypełnia obiekt typu `Address`, który zawiera właściwości, `Street`, `City`, `ZipCode`, i `Country`, wartościami, których użytkownik podał. Aplikacja ma panelu, który zawiera cztery <xref:System.Windows.Controls.TextBox>formantów, z których każdy jest powiązana z jedną z właściwości obiektu danych.</xref:System.Windows.Controls.TextBox> Można użyć <xref:System.Windows.Controls.ValidationRule>w BindingGroup do sprawdzania poprawności `Address` obiektu.</xref:System.Windows.Controls.ValidationRule> Jeśli powiązania uczestniczyć w tym samym BindingGroup, można upewnij się, że kod pocztowy jest prawidłowy dla kraju adresu.       Ustaw <xref:System.Windows.FrameworkElement.BindingGroup%2A>właściwości <xref:System.Windows.FrameworkElement>ani <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> </xref:System.Windows.FrameworkElement.BindingGroup%2A> Elementy podrzędne dziedziczą BindingGroup z ich elementów nadrzędnych, tak jak w przypadku innych właściwości dziedziczonych. Powiązanie na element pochodny jest dodawana do BindingGroup, jeśli wystąpi jedno z następujących sytuacji: — źródle powiązania i <xref:System.Windows.FrameworkElement.DataContext%2A>elementu, który ma BindingGroup są tego samego obiektu i <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>nie ustawiono właściwości.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.FrameworkElement.DataContext%2A>      - <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>Właściwość powiązania jest równa <xref:System.Windows.Data.BindingGroup.Name%2A>z <xref:System.Windows.FrameworkContentElement.BindingGroup%2A>i nie są one jawnie ustawiona na `null`.</xref:System.Windows.FrameworkContentElement.BindingGroup%2A> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingBase.BindingGroupName%2A>       W tym przykładzie adres Załóżmy, że <xref:System.Windows.FrameworkElement.DataContext%2A>z <xref:System.Windows.Controls.Panel>jest ustawiona na obiekt typu `Address`.</xref:System.Windows.Controls.Panel> </xref:System.Windows.FrameworkElement.DataContext%2A> Powiązanie dla każdego <xref:System.Windows.Controls.TextBox>jest dodawany do BindingGroup panelu.</xref:System.Windows.Controls.TextBox>       Możesz dodać <xref:System.Windows.Controls.ValidationRule>obiektów do BindingGroup.</xref:System.Windows.Controls.ValidationRule> BindingGroup jest przekazywana jako pierwszy parametr <xref:System.Windows.Controls.ValidationRule.Validate%2A>metody podczas <xref:System.Windows.Controls.ValidationRule>działa.</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> Można użyć <xref:System.Windows.Data.BindingGroup.TryGetValue%2A>lub <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>metody w tym BindingGroup uzyskać proponowanej wartości obiektu i <xref:System.Windows.Data.BindingGroup.Items%2A>właściwości do pobrania źródeł powiązania.</xref:System.Windows.Data.BindingGroup.Items%2A> </xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> </xref:System.Windows.Data.BindingGroup.TryGetValue%2A>       BindingGroup aktualizowany źródeł powiązania w tym samym czasie, zamiast każdego powiązania aktualizowana oddzielnie. Jeśli wywołasz jednej z metod sprawdzania poprawności danych (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, lub <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), powiązania dla każdej <xref:System.Windows.Controls.TextBox>w przykładzie jest weryfikowane i potencjalnie zaktualizować.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup.UpdateSources%2A> </xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A> Jeśli powiązanie jest częścią BindingGroup, do czasu wywołania źródle powiązania nie jest aktualizowany <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>lub <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>na BindingGroup, chyba że jawnie ustawione <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>Właściwości.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup.UpdateSources%2A>"
  example:
  - "The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires. The application displays the current information for the item below the form. The user can submit or cancel the changes.  \n  \n The application does the following to achieve this behavior.  \n  \n-   Creates a BindingGroup and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.  \n  \n The following example creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application. The root <xref:System.Windows.Controls.StackPanel> has a BindingGroup that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously. The binding objects on the `Price` property and the `OfferExpires` property become part of the BindingGroup and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values. The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the BindingGroup.  \n  \n [!code-xml[BindingGroupSnippets#WindowLayout](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#windowlayout)]  \n  \n The following example shows the event handlers for the application. When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the BindingGroup. If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction. If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction. When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the BindingGroup (in the previous example). `ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event and displays information about the validation error to the user. The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.  \n  \n [!code-cs[BindingGroupSnippets#WindowLogic](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#windowlogic)]\n [!code-vb[BindingGroupSnippets#WindowLogic](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#windowlogic)]  \n  \n The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the BindingGroup in the first example. The <xref:System.Windows.Controls.ValidationRule> uses the BindingGroup in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: 'public class BindingGroup : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.#ctor
  id: '#ctor'
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> klasy."
  syntax:
    content: public BindingGroup ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BeginEdit
  id: BeginEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Rozpoczyna się transakcji edycji źródeł w <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Jeśli źródeł w <xref:System.Windows.Data.BindingGroup>obsługuje odrzucenie oczekujących zmian, należy wywołać BeginEdit, aby rozpocząć transakcji edycji wywołać <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>Aby zapisać oczekujące zmiany, należy wywołać <xref:System.Windows.Data.BindingGroup.CancelEdit%2A>odrzucić oczekujące zmiany.</xref:System.Windows.Data.BindingGroup.CancelEdit%2A> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup>       Dla każdego obiektu <xref:System.Windows.Data.BindingGroup.Items%2A>implementującej <xref:System.ComponentModel.IEditableObject>, wywołania BeginEdit <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls BeginEdit when a window loads to begin the edit transaction.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  id: BindingExpressions
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera kolekcję <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> obiektów, które zawiera informacje dla każdego powiązania w <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "A <xref:System.Windows.Data.BindingExpression>należy <xref:System.Windows.Data.BindingGroup>Jeśli wystąpi jedno z następujących przypadków:-źródle powiązania i <xref:System.Windows.FrameworkElement.DataContext%2A>elementu, który ma <xref:System.Windows.Data.BindingGroup>są tego samego obiektu i <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>nie jest ustawiona.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingExpression>      - <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>Właściwości powiązania i <xref:System.Windows.Data.BindingGroup.Name%2A>z <xref:System.Windows.Data.BindingGroup>są ustawione na wartość inną niż null i <xref:System.Windows.Data.BindingGroup>należy do elementu nadrzędnego elementu docelowego powiązania.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingBase.BindingGroupName%2A>      -Dodaj <xref:System.Windows.Data.BindingExpression>do BindingExpressions.</xref:System.Windows.Data.BindingExpression>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase> BindingExpressions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
      description: "Kolekcja <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> obiektów, które zawiera informacje dla każdego powiązania w <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.BindingExpressions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CancelEdit
  id: CancelEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Kończy transakcji edycji i odrzuca wszystkie oczekujące zmiany."
  remarks: "Ta metoda powoduje źródła, aby odrzucić zmiany oczekujące, jeśli obiekt źródłowy jest w stanie w ten sposób i zakończyć transakcji edycji. Następnie metoda aktualizuje właściwości obiektu docelowego o wartości zapisane źródła.       Dla każdego obiektu <xref:System.Windows.Data.BindingGroup.Items%2A>implementującej <xref:System.ComponentModel.IEditableObject>, wywołania metoda CancelEdit <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CancelEdit to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#CancelEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[BindingGroupSnippets#CancelEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.CancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  id: CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera informacje, czy każde źródło powiązanie odrzucić oczekujące zmiany i przywrócić oryginalnych wartości."
  remarks: "Źródła można odrzucić oczekujące zmiany, jeśli implementuje <xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject>"
  syntax:
    content: public bool CanRestoreValues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli każdego źródła w powiązaniu można odrzucić oczekujące zmiany i przywrócić oryginalnych wartości; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.CanRestoreValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CommitEdit
  id: CommitEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Uruchamia wszystkie <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> obiekty i aktualizuje źródeł powiązania, jeśli wszystkie reguły sprawdzania poprawności powiedzie się."
  remarks: "Jeśli co <xref:System.Windows.Controls.ValidationRule>zakończy się powodzeniem, to powoduje metody, które obiekt źródła, aby zatwierdzić oczekujące zmiany i zakończyć transakcji edycji, jeśli źródło jest w stanie wykonać operacji</xref:System.Windows.Controls.ValidationRule>       Dla każdego obiektu <xref:System.Windows.Data.BindingGroup.Items%2A>implementującej <xref:System.ComponentModel.IEditableObject>, wywołania CommitEdit <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CommitEdit to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public bool CommitEdit ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli co <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> zakończy się pomyślnie i wartości są zatwierdzone do źródeł, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.CommitEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  id: GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Zwraca wartość proponowanych dla określonej właściwości i elementu."
  remarks: "Użyj tej metody w <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>metodę, aby uzyskać wartość można przesłać do źródła.</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> Typ zwracanej wartości zależy od etap, na którym <xref:System.Windows.Controls.ValidationRule>występuje.</xref:System.Windows.Controls.ValidationRule> Na przykład jeśli <xref:System.Windows.Controls.TextBox>jest powiązany z danymi na właściwość typu integer i <xref:System.Windows.Controls.ValidationRule>czy wywołania GetValue ma jego <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>ustawioną <xref:System.Windows.Controls.ValidationStep>, metoda zwraca wartość typu ciąg.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.TextBox> Jeśli <xref:System.Windows.Controls.ValidationRule>ma jego <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>ustawioną <xref:System.Windows.Controls.ValidationStep>, metoda zwraca niezależnie od typu, który jest zwracany przez konwerter powiązania.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> W tym przykładzie GetValue zwykle zwraca liczbę całkowitą."
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the GetValue method to get values that the customer entered.  \n  \n [!code-cs[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#itembindgroupvalidationrule)]\n [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#itembindgroupvalidationrule)]"
  syntax:
    content: public object GetValue (object item, string propertyName);
    parameters:
    - id: item
      type: System.Object
      description: "Obiekt, który zawiera określonej właściwości."
    - id: propertyName
      type: System.String
      description: "Właściwość którego proponowanej wartości do pobrania."
    return:
      type: System.Object
      description: "Wartość właściwości proponowanych."
  overload: System.Windows.Data.BindingGroup.GetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Powiązanie dla określonego elementu, a właściwość nie istnieje."
  - type: System.Windows.Data.ValueUnavailableException
    commentId: T:System.Windows.Data.ValueUnavailableException
    description: "Wartość określona właściwość nie jest dostępne ze względu na błąd konwersji lub z powodu wcześniejszych reguły sprawdzania poprawności nie powiodło się."
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.HasValidationError
  id: HasValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera wartość wskazującą, czy <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> ma reguły walidacji nie powiodło się."
  syntax:
    content: public bool HasValidationError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> ma reguły walidacji nie powiodło się; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.HasValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.IsDirty
  id: IsDirty
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> zawiera proponowanej wartości, które nie zostały zapisane w źródle."
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> zawiera proponowanej wartości, który nie został zapisany na źródle; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Items
  id: Items
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera źródeł, które są używane przez powiązanie obiektów w <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Każdy obiekt, który jest używany jako źródło została dodana do właściwości elementów raz, nawet wtedy, gdy obiekt jest używany jako źródło dla wiele powiązań. Często istnieje tylko jeden element w elementach, który jest obiektem <xref:System.Windows.FrameworkElement.DataContext%2A>elementu, który używa <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> Istnieje możliwość <xref:System.Windows.Data.BindingGroup>jednak mieć wiele źródeł.</xref:System.Windows.Data.BindingGroup> Na przykład, jeśli obiekty powiązań mają takie same <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>, ale za pomocą obiektów innego źródła, jest każdy obiekt, który jest używany jako źródło elementów.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A>       Może mieć wiele obiektów w elementach Jeśli ścieżka powiązania jest rozpoznawana jako właściwości zagnieżdżonej źródła. Załóżmy na przykład, <xref:System.Windows.Controls.TextBox>powiązania kontrolki jest częścią <xref:System.Windows.Data.BindingGroup>i jego <xref:System.Windows.FrameworkElement.DataContext%2A>jest `Customer` obiektu, który ma właściwość typu `Address`.</xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.TextBox> Jeśli <xref:System.Windows.Data.Binding.Path%2A>z <xref:System.Windows.Data.Binding>jest `Address.ZipCode` właściwość `Address` jest dodawany do właściwości elementów.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.Path%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>). On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`. The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public System.Collections.IList Items { get; }
    return:
      type: System.Collections.IList
      description: "Źródeł, które są używane przez powiązanie obiektów w <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Name
  id: Name
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia nazwę identyfikującą <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>, które mogą służyć do uwzględniania i wykluczania powiązanie obiektów w <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Jeśli nazwa jest `null`, powiązań, które mają źródła, które jest ten sam obiekt jako <xref:System.Windows.FrameworkElement.DataContext%2A>elementu, który ma <xref:System.Windows.Data.BindingGroup>należeć <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>       Mogą zawierać powiązań, które mają źródła, która różni się od <xref:System.Windows.FrameworkElement.DataContext%2A>elementu nadrzędnego, który ma <xref:System.Windows.Data.BindingGroup>przez ustawienie Nazwa <xref:System.Windows.Data.BindingGroup>i <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>Właściwości powiązanie z taką samą wartość.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> Można wykluczyć powiązania, które mają tego samego źródła jako <xref:System.Windows.FrameworkElement.DataContext%2A>elementu nadrzędnego, który ma <xref:System.Windows.Data.BindingGroup>przez ustawienie Nazwa <xref:System.Windows.Data.BindingGroup>i <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>Właściwości powiązania różne wartości.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.  \n  \n The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the Name of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Nazwa, która identyfikuje <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia czy &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; zdarzenie występuje, gdy stan <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> zmiany."
  remarks: "<xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>Dołączone zdarzenie występuje w elemencie, który ma <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>"
  example:
  - "The following example creates a <xref:System.Windows.Data.BindingGroup> and sets NotifyOnValidationError to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event when a <xref:System.Windows.Controls.ValidationRule> fails.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event.  \n  \n [!code-cs[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#errorhandler)]\n [!code-vb[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#errorhandler)]"
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; zdarzenie po stan <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> zmienia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Owner
  id: Owner
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera obiekt, który to <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> jest przypisany do."
  syntax:
    content: public System.Windows.DependencyObject Owner { get; }
    return:
      type: System.Windows.DependencyObject
      description: "Obiekt tego <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> jest przypisany do."
  overload: System.Windows.Data.BindingGroup.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  id: SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> powtórnych wartości, które nie zostały przekazane do źródła docelowych."
  remarks: "Proponowana wartość jest wartością, został zmieniony w celu powiązania, ale nie została przekazana do źródła. Na przykład załóżmy, że wiązanie dwukierunkowe <xref:System.Windows.Controls.TextBox>i <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>wartość właściwości jest równa <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Controls.TextBox> Jeśli użytkownik zmieni wartość <xref:System.Windows.Controls.TextBox>, proponowanych wartość jest wartością, który znajduje się w <xref:System.Windows.Controls.TextBox>przed zatwierdzeniem źródła.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>       Gdy jest SharesProposedValues `true`, <xref:System.Windows.Data.BindingGroup>używa proponowaną wartość, gdy jedno powiązanie opuści BindingGroup i innym wiązania za pomocą tego samego źródła sprzężenia BindingGroup.</xref:System.Windows.Data.BindingGroup>  Na przykład załóżmy, że aplikacja umożliwia użytkownikowi edytowanie wielu pól i aktualizowanie obiekt źródłowy przez kliknięcie przycisku. Gdy pole nie jest edytowany, aplikacja wyświetla go w <xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> Gdy użytkownik rozpocznie się do pola edycji, aplikacja zastępuje <xref:System.Windows.Controls.TextBlock>z <xref:System.Windows.Controls.TextBox>.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBlock> Gdy użytkownik zakończy edytowanie tego pola, aplikacja zastępuje <xref:System.Windows.Controls.TextBox>z <xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> </xref:System.Windows.Controls.TextBox> Ponieważ źródło nie jest aktualizowany, dopóki użytkownik kliknie przycisk, musi być sposób <xref:System.Windows.Controls.TextBlock>ma być wyświetlana wartość proponowanych.</xref:System.Windows.Controls.TextBlock> Ustawiając SharesProposedValues `true`, aplikacja wyświetli zmian wprowadzonych przez użytkownika do pola, nawet wtedy, gdy źródło nie zostały zaktualizowane."
  syntax:
    content: public bool SharesProposedValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> wartości, które nie zostały przekazane do źródła, a w przeciwnym razie docelowych powtórnych <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.SharesProposedValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  id: TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Próbuje pobrać proponowaną wartość dla określonej właściwości i elementu."
  remarks: "Zwraca TryGetValue `false` Jeśli powiązanie dla określonego elementu, a właściwość nie istnieje lub wartość określonej właściwości nie jest dostępne ze względu na błąd konwersji lub ponieważ wcześniejszych reguły sprawdzania poprawności nie powiodło się.       Użyj tej metody w <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>metodę, aby uzyskać wartość można przesłać do źródła.</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> Typ `value` zależy od etap, na którym <xref:System.Windows.Controls.ValidationRule>występuje.</xref:System.Windows.Controls.ValidationRule> Na przykład jeśli <xref:System.Windows.Controls.TextBox>dane powiązane z właściwością typu Integer `value` jest ciągiem, jeśli <xref:System.Windows.Controls.ValidationRule>czy wywołania TryGetValue ma <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>ustawioną <xref:System.Windows.Controls.ValidationStep>.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.TextBox> Jeśli <xref:System.Windows.Controls.ValidationRule>ma jego <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>ustawioną <xref:System.Windows.Controls.ValidationStep>, typ `value` jest niezależnie od typu, który jest zwracany przez konwerter powiązania.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> W tym przykładzie `value` zazwyczaj jest liczbą całkowitą."
  example:
  - "The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the TryGetValue method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form. Then the example checks that if an item is over 100 dollars, it will be available for at least seven days. This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public bool TryGetValue (object item, string propertyName, out object value);
    parameters:
    - id: item
      type: System.Object
      description: "Obiekt, który zawiera określonej właściwości."
    - id: propertyName
      type: System.String
      description: "Właściwość którego proponowanej wartości do pobrania."
    - id: value
      type: System.Object
      description: "Po powrocie z tej metody zawiera obiekt reprezentujący wartość właściwości proponowanych. Ten parametr jest przekazywany jako niezainicjowany."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość jest wartością proponowanych dla określonej właściwości; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.TryGetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.UpdateSources
  id: UpdateSources
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Uruchamia konwerter dla powiązania i <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> obiektów, które mają <xref:System.Windows.Controls.ValidationRule.ValidationStep*>ustawioną właściwość <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>, <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>, lub <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref> i zapisuje wartości docelowych obiekty źródła, w przypadku wszystkich reguł sprawdzania poprawności.</xref:System.Windows.Controls.ValidationRule.ValidationStep*>"
  remarks: "Ta metoda aktualizacji źródła, jeśli co <xref:System.Windows.Controls.ValidationRule>zakończy się powodzeniem, ale nie powoduje źródła, aby zatwierdzić oczekujące zmiany i zakończyć transakcji edycji.</xref:System.Windows.Controls.ValidationRule> Oznacza to gdy obiekt źródłowy implementuje <xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject> Wywołanie tej metody nie powoduje <xref:System.ComponentModel.IEditableObject.EndEdit%2A>do wywołania.</xref:System.ComponentModel.IEditableObject.EndEdit%2A> Użyj <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>metodę źródeł zatwierdzenia zmian oczekujących.</xref:System.Windows.Data.BindingGroup.CommitEdit%2A>"
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example calls UpdateSources to validate the bindings and save the values to the source if all the validation rules succeed.  \n  \n [!code-cs[BindingGroupSnippets#UpdateSources](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#updatesources)]\n [!code-vb[BindingGroupSnippets#UpdateSources](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#updatesources)]"
  syntax:
    content: public bool UpdateSources ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w przypadku wszystkich reguł sprawdzania poprawności; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.UpdateSources*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  id: ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy dołączać <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>."
  remarks: "Gdy jest ValidatesOnNotifyDataError `true`, powiązanie wyszukuje i raportowanie błędów, które zostały wygenerowane przez źródło danych, który implementuje <xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo>"
  syntax:
    content: public bool ValidatesOnNotifyDataError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  id: ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Uruchamia konwerter dla powiązania i <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> obiektów, które mają <xref:System.Windows.Controls.ValidationRule.ValidationStep*>ustawioną właściwość <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref> lub <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>.</xref:System.Windows.Controls.ValidationRule.ValidationStep*>"
  remarks: "Źródła nie są aktualizowane, gdy ta metoda jest wywoływana."
  syntax:
    content: public bool ValidateWithoutUpdate ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w przypadku reguł sprawdzania poprawności; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  id: ValidationErrors
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera kolekcję <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> obiektów, które spowodowały <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> jest nieprawidłowy."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError> ValidationErrors { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
      description: "Kolekcja <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> obiektów, które spowodowały <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> jest nieprawidłowy.  Wartość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , jeśli nie ma żadnych błędów."
  overload: System.Windows.Data.BindingGroup.ValidationErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera kolekcję <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> obiektów, które zweryfikować obiekty źródła <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Gdy <xref:System.Windows.Controls.ValidationRule>jest dodawany do <xref:System.Windows.Data.BindingGroup>, <xref:System.Windows.Data.BindingGroup>jest przekazywana jako pierwszy parametr <xref:System.Windows.Controls.ValidationRule.Validate%2A>metody.</xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.ValidationRule> Proponowane wartości obiektu można uzyskać za pomocą <xref:System.Windows.Data.BindingGroup.TryGetValue%2A>lub <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>metody.</xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> </xref:System.Windows.Data.BindingGroup.TryGetValue%2A> Można pobrać obiektów, które są źródeł powiązania z <xref:System.Windows.Data.BindingGroup.Items%2A>Właściwości.</xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example shows the `ValidateDateAndPrice` class. The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "Kolekcja <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> obiektów, które zweryfikować obiekty źródła <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidationRules*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.ValueUnavailableException
  parent: System.Windows.Data
  isExternal: false
  name: ValueUnavailableException
  nameWithType: ValueUnavailableException
  fullName: System.Windows.Data.ValueUnavailableException
- uid: System.Windows.Data.BindingGroup.#ctor
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
- uid: System.Windows.Data.BindingGroup.BeginEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
- uid: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<BindingExpressionBase>
  nameWithType: Collection<BindingExpressionBase>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Data.BindingExpressionBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingExpressionBase
    name: BindingExpressionBase
    nameWithType: BindingExpressionBase
    fullName: BindingExpressionBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.CancelEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.BindingGroup.CommitEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingGroup.HasValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Data.BindingGroup.Name
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
- uid: System.Windows.Data.BindingGroup.UpdateSources
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ValidationError>
  nameWithType: ReadOnlyCollection<ValidationError>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Controls.ValidationError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationError
    name: ValidationError
    nameWithType: ValidationError
    fullName: ValidationError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.ValidationRules
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.#ctor*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup
  nameWithType: BindingGroup.BindingGroup
- uid: System.Windows.Data.BindingGroup.BeginEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit
  nameWithType: BindingGroup.BeginEdit
- uid: System.Windows.Data.BindingGroup.BindingExpressions*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
- uid: System.Windows.Data.BindingGroup.CancelEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit
  nameWithType: BindingGroup.CancelEdit
- uid: System.Windows.Data.BindingGroup.CanRestoreValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
- uid: System.Windows.Data.BindingGroup.CommitEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit
  nameWithType: BindingGroup.CommitEdit
- uid: System.Windows.Data.BindingGroup.GetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue
  nameWithType: BindingGroup.GetValue
- uid: System.Windows.Data.BindingGroup.HasValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
- uid: System.Windows.Data.BindingGroup.Name*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue
  nameWithType: BindingGroup.TryGetValue
- uid: System.Windows.Data.BindingGroup.UpdateSources*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources
  nameWithType: BindingGroup.UpdateSources
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate
  nameWithType: BindingGroup.ValidateWithoutUpdate
- uid: System.Windows.Data.BindingGroup.ValidationErrors*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
- uid: System.Windows.Data.BindingGroup.ValidationRules*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
