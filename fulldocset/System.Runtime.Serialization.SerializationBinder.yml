### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SerializationBinder
  id: SerializationBinder
  children:
  - System.Runtime.Serialization.SerializationBinder.#ctor
  - System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  - System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  langs:
  - csharp
  name: SerializationBinder
  nameWithType: SerializationBinder
  fullName: System.Runtime.Serialization.SerializationBinder
  type: Class
  summary: "Umożliwia użytkownikom kontrolowanie ładowania klasy i wprowadzić klasę, aby załadować."
  remarks: "Podczas serializacji element formatujący przesyła informacje wymagane do utworzenia wystąpienia obiektu poprawnego typu i wersji. Informacje te obejmują zazwyczaj Pełna nazwa typu i nazwy zestawu obiektu. Nazwa zestawu zawiera nazwę, wersję i silnej nazwy (zobacz [zestawy Strong-Named](~/add/includes/ajax-current-ext-md.md)) skrótu zestawu. Domyślnie deserializacji używa tych informacji do utworzenia wystąpienia obiektu identyczne (z wyjątkiem zestawu ładowania ograniczona przez zasady zabezpieczeń). Niektórzy użytkownicy muszą kontroli, która klasa załadować, albo ponieważ klasa został przeniesiony między zestawów lub inna wersja tej klasy jest wymagane na serwerze i kliencie.       Można także elementu SerializationBinder zabezpieczeń. Być może niektóre lukami w zabezpieczeniach podczas próby deserializacji pewne dane z niezaufanego źródła. Obiekt wiążący daje możliwość sprawdzić, jakie typy są ładowane w domenie aplikacji. Następnie albo Obsługa listy typów zabronionych lub listy dozwolonymi typami i ograniczyć typy, które są ładowane i wystąpień. Ponadto powinien być w trosce o informacjach jest dotyczy żądanie put w sieci, może zajść potrzeba secure (Użyj transportu lub komunikat zabezpieczeń) podczas wysyłania nazwy typu lub innych danych w sieci.      > [!WARNING] > Elementu SerializationBinder należy używać tylko, jeśli jesteś pewien całkowicie informacjach jest serializowana. Typy złośliwego może spowodować nieoczekiwane zachowanie.       Jest to abstrakcyjna klasa podstawowa. Wszystkie integratorów rozszerzenia tej klasy."
  example:
  - >-
    [!code-vb[SerializationBinder Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_11_1.vb)]
     [!code-cpp[SerializationBinder Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_11_1.cpp)]
     [!code-cs[SerializationBinder Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_11_1.cs)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SerializationBinder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: SerializationBinder()
  nameWithType: SerializationBinder.SerializationBinder()
  fullName: System.Runtime.Serialization.SerializationBinder.SerializationBinder()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Runtime.Serialization.SerializationBinder&quot;> </xref> klasy."
  syntax:
    content: protected SerializationBinder ();
    parameters: []
  overload: System.Runtime.Serialization.SerializationBinder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  id: BindToName(System.Type,System.String@,System.String@)
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: BindToName(Type,String,String)
  nameWithType: SerializationBinder.BindToName(Type,String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToName(Type,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, Określa wiązanie serializacji obiektu z typem."
  syntax:
    content: public virtual void BindToName (Type serializedType, out string assemblyName, out string typeName);
    parameters:
    - id: serializedType
      type: System.Type
      description: "Typ obiektu program formatujący tworzy nowe wystąpienie klasy."
    - id: assemblyName
      type: System.String
      description: "Określa <xref:System.Reflection.Assembly>serializacji obiektu.</xref:System.Reflection.Assembly>"
    - id: typeName
      type: System.String
      description: "Określa <xref:System.Type>serializacji obiektu.</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationBinder.BindToName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  id: BindToType(System.String,System.String)
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: BindToType(String,String)
  nameWithType: SerializationBinder.BindToType(String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToType(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "W przypadku przesłonięcia w klasie pochodnej, Określa wiązanie serializacji obiektu z typem."
  remarks: ''
  example:
  - SerializationBinder Example#1
  syntax:
    content: public abstract Type BindToType (string assemblyName, string typeName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "Określa <xref:System.Reflection.Assembly>serializacji obiektu.</xref:System.Reflection.Assembly>"
    - id: typeName
      type: System.String
      description: "Określa <xref:System.Type>serializacji obiektu.</xref:System.Type>"
    return:
      type: System.Type
      description: "Typ obiektu program formatujący tworzy nowe wystąpienie klasy."
  overload: System.Runtime.Serialization.SerializationBinder.BindToType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Serialization.SerializationBinder.#ctor
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: SerializationBinder()
  nameWithType: SerializationBinder.SerializationBinder()
  fullName: System.Runtime.Serialization.SerializationBinder.SerializationBinder()
- uid: System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToName(Type,String,String)
  nameWithType: SerializationBinder.BindToName(Type,String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToName(Type,String,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToType(String,String)
  nameWithType: SerializationBinder.BindToType(String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToType(String,String)
- uid: System.Runtime.Serialization.SerializationBinder.#ctor*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: SerializationBinder
  nameWithType: SerializationBinder.SerializationBinder
- uid: System.Runtime.Serialization.SerializationBinder.BindToName*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToName
  nameWithType: SerializationBinder.BindToName
- uid: System.Runtime.Serialization.SerializationBinder.BindToType*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToType
  nameWithType: SerializationBinder.BindToType
