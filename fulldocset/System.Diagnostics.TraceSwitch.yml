### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceSwitch
  id: TraceSwitch
  children:
  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.TraceSwitch.Level
  - System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  - System.Diagnostics.TraceSwitch.OnValueChanged
  - System.Diagnostics.TraceSwitch.TraceError
  - System.Diagnostics.TraceSwitch.TraceInfo
  - System.Diagnostics.TraceSwitch.TraceVerbose
  - System.Diagnostics.TraceSwitch.TraceWarning
  langs:
  - csharp
  name: TraceSwitch
  nameWithType: TraceSwitch
  fullName: System.Diagnostics.TraceSwitch
  type: Class
  summary: "Udostępnia wielopoziomowej przełącznika śledzenia kontroli i danych wyjściowych debugowania bez konieczności ponownego kompilowania kodu."
  remarks: "Przełącznik śledzenia może zostać użyty do filtrowania wiadomości, w oparciu o ich znaczenie. Udostępnia klasy TraceSwitch <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, i <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>właściwości do testowania poziom przełącznika.</xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> <xref:System.Diagnostics.TraceSwitch.Level%2A>Właściwość pobiera lub ustawia <xref:System.Diagnostics.TraceLevel>.</xref:System.Diagnostics.TraceLevel> przełącznika</xref:System.Diagnostics.TraceSwitch.Level%2A>       Można ustawić poziomu TraceSwitch przy użyciu pliku konfiguracji aplikacji, a następnie użyj skonfigurowanego poziomu TraceSwitch w aplikacji. Alternatywnie możesz utworzyć TraceSwitch w kodzie i ustaw poziom bezpośrednio do określonej sekcji kodu Instrumentacja.       Aby skonfigurować TraceSwitch, edytować aplikacji. W tym pliku można dodać lub usunąć przełącznika, ustaw wartość przełącznika lub wyczyść wszystkie przełączniki wcześniej ustawiane przez aplikację. Plik konfiguracji powinien być sformatowany jak w następującym przykładzie: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot; />       </switches>     </system.diagnostics>   </configuration>   ``` tej sekcji konfiguracyjnej definiuje TraceSwitch z <xref:System.Diagnostics.Switch.DisplayName%2A>ustawioną `mySwitch`, a <xref:System.Diagnostics.TraceSwitch.Level%2A>wartość 1, które odpowiada wartości wyliczenia <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.Switch.DisplayName%2A>      > [!NOTE] > W programie .NET Framework w wersji 2.0, tekst można użyć do określenia wartości dla przełącznika. Na przykład `true` dla <xref:System.Diagnostics.BooleanSwitch>lub tekst reprezentujący wartość wyliczenia, takich jak `Error` dla TraceSwitch.</xref:System.Diagnostics.BooleanSwitch> Wiersz `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` jest odpowiednikiem `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`.       W aplikacji, można użyć poziomie przełącznika skonfigurowanych przez utworzenie TraceSwitch o takiej samej nazwie, jak pokazano w poniższym przykładzie: [!code-vb [klasycznego TraceSwitch.TraceError przykład&#3;](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_1.vb)][!code-cpp[klasycznego TraceSwitch.TraceError przykład&#3;](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_1.cpp)][!code-cs[klasycznego TraceSwitch.TraceError przykład&#3;](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_1.cs) ] domyślnie przełącznika <xref:System.Diagnostics.TraceSwitch.Level%2A>właściwość jest ustawiona, korzystając z wartości określonej w pliku konfiguracji.</xref:System.Diagnostics.TraceSwitch.Level%2A>     Jeśli <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>Konstruktor nie można odnaleźć przełącznika początkowego ustawienia w pliku konfiguracyjnym <xref:System.Diagnostics.TraceSwitch.Level%2A>nowych ustawień domyślnych przełącznika do <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.TraceSwitch.%23ctor%2A>       Należy włączyć śledzenie i debugowanie, aby użyć przełącznika. Następująca składnia jest określonych kompilatora. Jeśli używasz kompilatory innego niż C# lub Visual Basic, zapoznaj się z dokumentacją, dla Twojej kompilatora.      -Aby włączyć debugowanie w języku C#, Dodaj `/d:DEBUG` flagi do wiersza polecenia kompilatora podczas kompilacji kodu, lub Dodaj `#define DEBUG` na początku pliku. W języku Visual Basic, Dodaj `/d:DEBUG=True` flagi kompilatora wiersza polecenia.      — W celu włączenia śledzenia w języku C#, Dodaj `/d:TRACE` flagi do wiersza polecenia kompilatora podczas kompilacji kodu, lub Dodaj `#define TRACE` na początku pliku. W języku Visual Basic, Dodaj `/d:TRACE=True` flagi kompilatora wiersza polecenia.      > [!NOTE] > Te debugowania i śledzenia przełączniki kompilatora nie są wymagane, gdy za pomocą klasy TraceSwitch w izolacji. Są wymagane tylko w połączeniu z <xref:System.Diagnostics.Trace>lub <xref:System.Diagnostics.Debug>metod, które są warunkowo skompilowany.</xref:System.Diagnostics.Debug> </xref:System.Diagnostics.Trace>       Aby uzyskać więcej informacji o instrumentacji aplikacji zobacz <xref:System.Diagnostics.Debug>i <xref:System.Diagnostics.Trace>.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> Aby uzyskać więcej informacji o konfigurowaniu i używaniu przełączniki śledzenia, zobacz [przełączniki śledzenia](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Aby zwiększyć wydajność, należy wybrać elementy członkowskie TraceSwitch `static` w klasie."
  example:
  - "The following code example creates a new TraceSwitch and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_2.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_2.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_2.vb)]"
  syntax:
    content: >-
      [System.Diagnostics.SwitchLevel(typeof(System.Diagnostics.TraceLevel))]

      public class TraceSwitch : System.Diagnostics.Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceSwitch(String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Diagnostics.TraceSwitch&quot;> </xref> przy użyciu określonego wyświetlaną nazwę i opis."
  remarks: "Aby ustawić poziom Twojej <xref:System.Diagnostics.TraceSwitch>, edycję pliku konfiguracyjnego, który odpowiada nazwie aplikacji.</xref:System.Diagnostics.TraceSwitch> W tym pliku można dodać przełącznik i ustaw jej wartość, Usuń przełącznik lub Usuń wszystkie przełączniki wcześniej ustawiane przez aplikację. Plik konfiguracji powinien być sformatowany jak w następującym przykładzie: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot; />       </switches>     </system.diagnostics>   </configuration>   ```       >  [!NOTE] > w programie .NET Framework w wersji 2.0, tekst można użyć do określenia wartości dla przełącznika. Na przykład `true` dla <xref:System.Diagnostics.BooleanSwitch>lub tekst reprezentujący wartość wyliczenia, takich jak `Error` dla <xref:System.Diagnostics.TraceSwitch>.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.BooleanSwitch> Wiersz `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` jest odpowiednikiem `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`.       W aplikacji, można użyć poziomu przełącznika skonfigurowanych przez utworzenie <xref:System.Diagnostics.TraceSwitch>o takiej samej nazwie, jak pokazano w poniższym przykładzie: [!code-vb [klasycznego TraceSwitch.TraceError przykład&#3;](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_1.vb)][!code-cpp[klasycznego TraceSwitch.TraceError przykład&#3;](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_1.cpp)][!code-cs[klasycznego TraceSwitch.TraceError przykład&#3;](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_1.cs) ] podczas <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>konstruktora nie można odnaleźć przełącznika początkowego ustawienia w pliku konfiguracji, <xref:System.Diagnostics.TraceSwitch.Level%2A>Właściwość nowy przełącznik jest ustawiona na <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.TraceSwitch.%23ctor%2A>     </xref:System.Diagnostics.TraceSwitch>       <xref:System.Diagnostics.TraceSwitch>Klasa udostępnia <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, i <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>właściwości do testowania <xref:System.Diagnostics.TraceSwitch.Level%2A>przełącznika.</xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> </xref:System.Diagnostics.TraceSwitch> <xref:System.Diagnostics.TraceSwitch.Level%2A>Właściwość pobiera lub ustawia <xref:System.Diagnostics.TraceLevel>.</xref:System.Diagnostics.TraceLevel> przełącznika</xref:System.Diagnostics.TraceSwitch.Level%2A>      > [!NOTE] > Aby zwiększyć wydajność, możesz wprowadzić <xref:System.Diagnostics.TraceSwitch>członków `static` w Twojej klasy</xref:System.Diagnostics.TraceSwitch>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_2.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_2.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_2.vb)]"
  syntax:
    content: public TraceSwitch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "Nazwa do wyświetlenia w interfejsie użytkownika."
    - id: description
      type: System.String
      description: "Opis tego przełącznika."
  overload: System.Diagnostics.TraceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceSwitch(String,String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Diagnostics.TraceSwitch&quot;> </xref> przy użyciu określonego wyświetlana nazwa, opis i wartość domyślną dla tego przełącznika."
  remarks: "`displayName` Można określić wartość parametru <xref:System.Diagnostics.Switch.DisplayName%2A>Właściwości, `description` parametru jest służy do ustawiania wartości <xref:System.Diagnostics.Switch.Description%2A>właściwości oraz `defaultSwitchValue` parametr jest zapisywany jako pola i używany do inicjowania <xref:System.Diagnostics.Switch.Value%2A>Właściwości na pierwsze odwołanie.</xref:System.Diagnostics.Switch.Value%2A> </xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> Zobacz <xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29>Konstruktor więcej informacji i przykładowego kodu.</xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: public TraceSwitch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "Nazwa do wyświetlenia w interfejsie użytkownika."
    - id: description
      type: System.String
      description: "Opis tego przełącznika."
    - id: defaultSwitchValue
      type: System.String
      description: "Wartość domyślna parametru."
  overload: System.Diagnostics.TraceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.Level
  id: Level
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: Level
  nameWithType: TraceSwitch.Level
  fullName: System.Diagnostics.TraceSwitch.Level
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera lub ustawia poziom śledzenia, który określa wiadomości, które umożliwia przełącznika."
  remarks: "Aby ustawić poziom Twojej <xref:System.Diagnostics.TraceSwitch>, edycję pliku konfiguracyjnego, który odpowiada nazwie aplikacji.</xref:System.Diagnostics.TraceSwitch> W tym pliku można dodać przełącznik i ustaw jej wartość, Usuń przełącznik lub Usuń wszystkie przełączniki wcześniej ustawiane przez aplikację. Plik konfiguracji powinien być sformatowany jak w następującym przykładzie: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;0&quot; />         <add name=&quot;myNewSwitch&quot; value=&quot;3&quot; />         <remove name=&quot;mySwitch&quot; />         <clear/>       </switches>     </system.diagnostics>   </configuration>   ```       >  [!NOTE] > w programie .NET Framework w wersji 2.0, tekst można użyć do określenia wartości dla przełącznika. Na przykład `true` dla <xref:System.Diagnostics.BooleanSwitch>lub tekst reprezentujący wartość wyliczenia, takich jak `Error` dla <xref:System.Diagnostics.TraceSwitch>.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.BooleanSwitch> Wiersz `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` jest odpowiednikiem `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`.       Gdy <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>Konstruktor nie można odnaleźć przełącznika początkowego ustawienia w pliku konfiguracji, z poziomu właściwością nowy przełącznik ustawiono <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.%23ctor%2A>       Ustawienie tej właściwości aktualizuje <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, i <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Właściwości w celu uwzględnienia nowej wartości.</xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the Level property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the Level is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cpp[Classic TraceSwitch.Level Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_1_1.cpp)]\n [!code-cs[Classic TraceSwitch.Level Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_1_1.cs)]\n [!code-vb[Classic TraceSwitch.Level Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_1_1.vb)]"
  syntax:
    content: public System.Diagnostics.TraceLevel Level { get; set; }
    return:
      type: System.Diagnostics.TraceLevel
      description: "Jeden z <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref> wartości, które, który określa poziom komunikatów, które są dozwolone przez przełącznik."
  overload: System.Diagnostics.TraceSwitch.Level*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Poziom jest ustawiony na wartość, która nie jest jednym z <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref> wartości."
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  id: OnSwitchSettingChanged
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: OnSwitchSettingChanged()
  nameWithType: TraceSwitch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Aktualizacje i poprawia poziom dla tego przełącznika."
  remarks: "Metoda OnSwitchSettingChanged jest używana przez program .NET framework do sprawdzania poprawności i Popraw wartość przełącznika zainicjowana za pomocą pliku konfiguracji. Komunikat jest zapisywany w wszystkie obiekty nasłuchujące śledzenia, gdy wartość przełącznika określony w pliku konfiguracji nie jest zdefiniowany przez <xref:System.Diagnostics.TraceLevel>wyliczenie i przełącznik jest równa wartości zdefiniowanej.</xref:System.Diagnostics.TraceLevel>       Jeśli próba w kodzie, aby ustawić <xref:System.Diagnostics.TraceSwitch.Level%2A>Właściwości na wartość, która nie jest zdefiniowany przez <xref:System.Diagnostics.TraceLevel>wyliczenia, <xref:System.ArgumentException>wyjątku.</xref:System.ArgumentException> </xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  syntax:
    content: protected override void OnSwitchSettingChanged ();
    parameters: []
  overload: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: TraceSwitch.OnValueChanged()
  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ustawia <> </> *> właściwości odpowiednikiem całkowitą <> </> *> właściwości."
  remarks: "Ta metoda jest wywoływana wewnętrznie podczas <xref:System.Diagnostics.Switch.Value%2A>Właściwości zmiany przełącznika.</xref:System.Diagnostics.Switch.Value%2A> Metoda gwarantuje, że właściwości, odnoszące się do wartości przełącznika odzwierciedlać nową wartość."
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.TraceSwitch.OnValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceError
  id: TraceError
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceError
  nameWithType: TraceSwitch.TraceError
  fullName: System.Diagnostics.TraceSwitch.TraceError
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera wartość wskazującą, czy przełącznik zezwala wiadomości obsługi błędów."
  remarks: "Błąd śledzenia, można użyć <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, i <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Właściwości w połączeniu z <xref:System.Diagnostics.Debug>i <xref:System.Diagnostics.Trace>klasy, aby wysyłać komunikaty o określonej ważności lub większą.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> Gdy <xref:System.Diagnostics.TraceSwitch.Level%2A>właściwość jest ustawiona na najwyższym znaczenie <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, <xref:System.Diagnostics.TraceLevel>, tylko obsługi błędów komunikaty są emitowane.</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_5_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_5_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_5_1.vb)]"
  syntax:
    content: public bool TraceError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, or <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceError*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceInfo
  id: TraceInfo
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
  fullName: System.Diagnostics.TraceSwitch.TraceInfo
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera wartość wskazującą, czy przełącznik zezwala komunikaty informacyjne."
  remarks: "Można użyć <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, TraceInfo, i <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Właściwości w połączeniu z <xref:System.Diagnostics.Debug>i <xref:System.Diagnostics.Trace>klasy, aby wysyłać komunikaty o określonej ważności lub większą.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> Gdy <xref:System.Diagnostics.TraceSwitch.Level%2A>właściwość jest ustawiona na <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, komunikaty informacyjne, ostrzeżenia i komunikaty obsługi błędów są emitowane.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-vb[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_8_1.vb)]\n [!code-cs[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_8_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_8_1.cpp)]"
  syntax:
    content: public bool TraceInfo { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Diagnostics.TraceSwitch.Level*>właściwość jest ustawiona na <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref> lub <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceVerbose
  id: TraceVerbose
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
  fullName: System.Diagnostics.TraceSwitch.TraceVerbose
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera wartość wskazującą, czy przełącznik zezwala na wszystkie komunikaty."
  remarks: "Można użyć <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>i właściwości TraceVerbose w połączeniu z <xref:System.Diagnostics.Debug>i <xref:System.Diagnostics.Trace>klasy, aby wysyłać komunikaty o określonej ważności lub większą.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> Gdy <xref:System.Diagnostics.TraceSwitch.Level%2A>właściwość jest ustawiona na <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, wszystkie debugowanie i śledzenie wiadomości są przesyłane.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes both error messages when the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_4_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_4_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_4_1.vb)]"
  syntax:
    content: public bool TraceVerbose { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref:System.Diagnostics.TraceSwitch.Level*>właściwość jest ustawiona na <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceVerbose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceWarning
  id: TraceWarning
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
  fullName: System.Diagnostics.TraceSwitch.TraceWarning
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Pobiera wartość wskazującą, czy przełącznik zezwala komunikaty ostrzegawcze."
  remarks: "Można użyć <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, zarejestrowano element TraceWarning, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, i <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Właściwości w połączeniu z <xref:System.Diagnostics.Debug>i <xref:System.Diagnostics.Trace>klasy, aby wysyłać komunikaty o określonej ważności lub większą.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> Gdy <xref:System.Diagnostics.TraceSwitch.Level%2A>właściwość jest ustawiona na <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, ostrzeżenia i komunikaty obsługi błędów są emitowane.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message when the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_3_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_3_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_3_1.vb)]"
  syntax:
    content: public bool TraceWarning { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, or <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceWarning*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch(String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch(String,String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String,String)
- uid: System.Diagnostics.TraceSwitch.Level
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: Level
  nameWithType: TraceSwitch.Level
  fullName: System.Diagnostics.TraceSwitch.Level
- uid: System.Diagnostics.TraceLevel
  parent: System.Diagnostics
  isExternal: false
  name: TraceLevel
  nameWithType: TraceLevel
  fullName: System.Diagnostics.TraceLevel
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnSwitchSettingChanged()
  nameWithType: TraceSwitch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()
- uid: System.Diagnostics.TraceSwitch.OnValueChanged
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: TraceSwitch.OnValueChanged()
  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()
- uid: System.Diagnostics.TraceSwitch.TraceError
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceError
  nameWithType: TraceSwitch.TraceError
  fullName: System.Diagnostics.TraceSwitch.TraceError
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceSwitch.TraceInfo
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
  fullName: System.Diagnostics.TraceSwitch.TraceInfo
- uid: System.Diagnostics.TraceSwitch.TraceVerbose
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
  fullName: System.Diagnostics.TraceSwitch.TraceVerbose
- uid: System.Diagnostics.TraceSwitch.TraceWarning
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
  fullName: System.Diagnostics.TraceSwitch.TraceWarning
- uid: System.Diagnostics.TraceSwitch.#ctor*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch
  nameWithType: TraceSwitch.TraceSwitch
- uid: System.Diagnostics.TraceSwitch.Level*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: Level
  nameWithType: TraceSwitch.Level
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnSwitchSettingChanged
  nameWithType: TraceSwitch.OnSwitchSettingChanged
- uid: System.Diagnostics.TraceSwitch.OnValueChanged*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: TraceSwitch.OnValueChanged
- uid: System.Diagnostics.TraceSwitch.TraceError*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceError
  nameWithType: TraceSwitch.TraceError
- uid: System.Diagnostics.TraceSwitch.TraceInfo*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
- uid: System.Diagnostics.TraceSwitch.TraceVerbose*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
- uid: System.Diagnostics.TraceSwitch.TraceWarning*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
