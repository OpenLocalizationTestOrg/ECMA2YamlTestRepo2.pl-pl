### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.ControlFilterExpression
  id: ControlFilterExpression
  children:
  - System.Web.DynamicData.ControlFilterExpression.#ctor
  - System.Web.DynamicData.ControlFilterExpression.Column
  - System.Web.DynamicData.ControlFilterExpression.ControlID
  - System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)
  - System.Web.DynamicData.ControlFilterExpression.SaveViewState
  - System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.DynamicData.ControlFilterExpression.TrackViewState
  langs:
  - csharp
  name: ControlFilterExpression
  nameWithType: ControlFilterExpression
  fullName: System.Web.DynamicData.ControlFilterExpression
  type: Class
  summary: "Modyfikuje zapytania do bazy danych przy użyciu klucza danych elementu zaznaczonego w formancie powiązane z danymi."
  remarks: "Klasa ControlFilterExpression, która jest przeznaczona do użycia, gdy strona zawiera dwa formanty powiązane z danymi <xref:System.Web.UI.WebControls.GridView>kontroli i <xref:System.Web.UI.WebControls.ListView>kontroli.</xref:System.Web.UI.WebControls.ListView> </xref:System.Web.UI.WebControls.GridView> Jeden formant jest źródłem, wybranym klucz danych (wiersz). Inny formant jest element docelowy, na którym dane są wyświetlane, w oparciu o wybrany klucz danych. Dane docelowej są uzyskiwane przez formant źródła danych, która wykonuje zapytania, który jest zdefiniowany w <xref:System.Web.UI.WebControls.QueryExtender>klasy i czy jest tworzona przy użyciu klucza wybranych danych.</xref:System.Web.UI.WebControls.QueryExtender>       Aby używać klasy ControlFilterExpression na stronie, wykonaj następujące kroki:-Dodaj <xref:System.Web.UI.WebControls.QueryExtender>formantu do strony.</xref:System.Web.UI.WebControls.QueryExtender>      -Ustawienia `TargetControlID` właściwość <xref:System.Web.UI.WebControls.QueryExtender>kontroli identyfikator formantu źródła danych docelowych.</xref:System.Web.UI.WebControls.QueryExtender>      -Dodaj wystąpienia ControlFilterExpression <xref:System.Web.UI.WebControls.QueryExtender>kontroli.</xref:System.Web.UI.WebControls.QueryExtender>      -Ustawienia `ControlID` właściwość elementu ControlFilterExpression do kontroli źródła z danymi."
  example:
  - "The following example shows how to use the ControlFilterExpression class to reference a source data-bound control, where the data key is selected. The <xref:System.Web.UI.WebControls.QueryExtender> control points to a target data source control that obtains data that is filtered by using the selected data key. In the example, the source data-bound control references a parent table and the target data-bound control references a child table.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtenderID\"   \n    TargetControlID=\"TargetDataSourceID\" runat=\"server\">  \n    <asp:ControlFilterExpression ControlID=\"SourceGridViewID\" />  \n</asp:QueryExtender>  \n```"
  syntax:
    content: 'public class ControlFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: ControlFilterExpression()
  nameWithType: ControlFilterExpression.ControlFilterExpression()
  fullName: System.Web.DynamicData.ControlFilterExpression.ControlFilterExpression()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;> </xref> klasy."
  syntax:
    content: public ControlFilterExpression ();
    parameters: []
  overload: System.Web.DynamicData.ControlFilterExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.Column
  id: Column
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: Column
  nameWithType: ControlFilterExpression.Column
  fullName: System.Web.DynamicData.ControlFilterExpression.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia nazwę kolumny, na podstawie zapytania."
  remarks: "Jeśli ta właściwość jest pusta, <xref:System.Web.DynamicData.ControlFilterExpression>kontroli traktuje wybrany klucz danych jako klucz podstawowy w bieżącej tabeli.</xref:System.Web.DynamicData.ControlFilterExpression> Jest to przydatne w przypadku szczegółów listy gdzie działania źródłowego i docelowego formantów powiązanych z danymi na danych z tej samej tabeli.       Jeśli wartość przypisana do właściwości, <xref:System.Web.DynamicData.ControlFilterExpression>kontroli traktuje klucz danych jako klucz obcy.</xref:System.Web.DynamicData.ControlFilterExpression> Wartość przypisana do tej właściwości staje się nazwa kolumny, która jest wyświetlana w formancie docelowym powiązane z danymi. Jest to przydatne w przypadku scenariusza nadrzędny podrzędny, gdzie formantu powiązanego z danymi docelowego operuje na danych z tabeli podrzędnej i powiązane z danymi kontroli źródła działa na danych z tabeli nadrzędnej."
  example:
  - "The following example shows how to use the <xref:System.Web.DynamicData.ControlFilterExpression> class to set the column that the filter applies to.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtenderID\"   \n    TargetControlID=\"TargetDataSourceID\" runat=\"server\">  \n    <asp:ControlFilterExpression ControlID=\"GridViewID\" Column=\"Category\"/>  \n</asp:QueryExtender>  \n```"
  syntax:
    content: public string Column { get; set; }
    return:
      type: System.String
      description: "Nazwa kolumny, na podstawie zapytania."
  overload: System.Web.DynamicData.ControlFilterExpression.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.ControlID
  id: ControlID
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: ControlID
  nameWithType: ControlFilterExpression.ControlID
  fullName: System.Web.DynamicData.ControlFilterExpression.ControlID
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia identyfikator źródła formantu powiązanego z danymi."
  remarks: "Właściwości ControlID identyfikuje formant powiązane z danymi źródło, z którego jest wybrany klucz danych. Wybrany klucz danych jest następnie używany przez <xref:System.Web.DynamicData.ControlFilterExpression>kontroli w celu skonstruowania zapytania.</xref:System.Web.DynamicData.ControlFilterExpression>"
  example:
  - "The following example shows how to use the <xref:System.Web.DynamicData.ControlFilterExpression> class to set the ID of the source data-bound control.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtenderID\"   \n    TargetControlID=\"TargetDataSourceID\" runat=\"server\">  \n    <asp:ControlFilterExpression ControlID=\"GridViewID\" Column=\"Category\"/>  \n</asp:QueryExtender>  \n```"
  syntax:
    content: public string ControlID { get; set; }
    return:
      type: System.String
      description: "Identyfikator formantu źródła powiązane z danymi."
  overload: System.Web.DynamicData.ControlFilterExpression.ControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: ControlFilterExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.ControlFilterExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera kwerendy źródła danych, aby zmodyfikować."
  remarks: "Metoda GetQueryable modyfikuje zapytania oparte na kluczu wybranych danych z kontroli źródła z danymi."
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "Źródła danych zapytania można zmodyfikować."
    return:
      type: System.Linq.IQueryable
      description: "Obiekt, który reprezentuje zapytania źródła danych, które jest modyfikowany przez to <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;> </xref> wystąpienia."
  overload: System.Web.DynamicData.ControlFilterExpression.GetQueryable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ControlFilterExpression.LoadViewState(Object)
  fullName: System.Web.DynamicData.ControlFilterExpression.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Przywraca stan widoku wcześniej zapisany."
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Aby przywrócić stan."
  overload: System.Web.DynamicData.ControlFilterExpression.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.SaveViewState
  id: SaveViewState
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ControlFilterExpression.SaveViewState()
  fullName: System.Web.DynamicData.ControlFilterExpression.SaveViewState()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Zapisuje zmiany, aby wyświetlić stan od czasu strony zostało przesłane do serwera."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Obiekt, który zawiera zmiany, aby wyświetlić stan. Jeśli stan jest niedostępny widok skojarzony z obiektem, ta metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.ControlFilterExpression.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  id: SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicjuje wyrażenia filtru informacje o źródle danych."
  syntax:
    content: public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);
    parameters:
    - id: owner
      type: System.Web.UI.Control
      description: "Kontrolki, w którym <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;> </xref> wystąpienie znajduje się, takich jak <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> formantu."
    - id: context
      type: System.Web.HttpContext
      description: "Aplikacja do bieżącego <xref href=&quot;System.Web.HttpContext&quot;> </xref> obiektu."
    - id: dataSource
      type: System.Web.UI.WebControls.IQueryableDataSource
      description: "Źródło danych docelowych dla <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;> </xref> wystąpienia. Jeśli <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref> wystąpienie znajduje się w <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> źródła danych jest ten parametr sterowanie <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> kontroli odwołuje się do"
  overload: System.Web.DynamicData.ControlFilterExpression.SetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.ControlFilterExpression.TrackViewState
  id: TrackViewState
  parent: System.Web.DynamicData.ControlFilterExpression
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ControlFilterExpression.TrackViewState()
  fullName: System.Web.DynamicData.ControlFilterExpression.TrackViewState()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Powoduje, że <xref href=&quot;System.Web.DynamicData.ControlFilterExpression&quot;> </xref> obiekt śledzenie zmian stanu widoku, mogą być przechowywane w obiekcie stan widoku formantu i utrwalenia żądań dla tej samej stronie."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.DynamicData.ControlFilterExpression.TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.DataSourceExpression
- uid: System.Web.DynamicData.ControlFilterExpression.#ctor
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: ControlFilterExpression()
  nameWithType: ControlFilterExpression.ControlFilterExpression()
  fullName: System.Web.DynamicData.ControlFilterExpression.ControlFilterExpression()
- uid: System.Web.DynamicData.ControlFilterExpression.Column
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: Column
  nameWithType: ControlFilterExpression.Column
  fullName: System.Web.DynamicData.ControlFilterExpression.Column
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.ControlFilterExpression.ControlID
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: ControlID
  nameWithType: ControlFilterExpression.ControlID
  fullName: System.Web.DynamicData.ControlFilterExpression.ControlID
- uid: System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: ControlFilterExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.ControlFilterExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ControlFilterExpression.LoadViewState(Object)
  fullName: System.Web.DynamicData.ControlFilterExpression.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.DynamicData.ControlFilterExpression.SaveViewState
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: SaveViewState()
  nameWithType: ControlFilterExpression.SaveViewState()
  fullName: System.Web.DynamicData.ControlFilterExpression.SaveViewState()
- uid: System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.ControlFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.IQueryableDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IQueryableDataSource
  nameWithType: IQueryableDataSource
  fullName: System.Web.UI.WebControls.IQueryableDataSource
- uid: System.Web.DynamicData.ControlFilterExpression.TrackViewState
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: TrackViewState()
  nameWithType: ControlFilterExpression.TrackViewState()
  fullName: System.Web.DynamicData.ControlFilterExpression.TrackViewState()
- uid: System.Web.DynamicData.ControlFilterExpression.#ctor*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: ControlFilterExpression
  nameWithType: ControlFilterExpression.ControlFilterExpression
- uid: System.Web.DynamicData.ControlFilterExpression.Column*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: Column
  nameWithType: ControlFilterExpression.Column
- uid: System.Web.DynamicData.ControlFilterExpression.ControlID*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: ControlID
  nameWithType: ControlFilterExpression.ControlID
- uid: System.Web.DynamicData.ControlFilterExpression.GetQueryable*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: GetQueryable
  nameWithType: ControlFilterExpression.GetQueryable
- uid: System.Web.DynamicData.ControlFilterExpression.LoadViewState*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: LoadViewState
  nameWithType: ControlFilterExpression.LoadViewState
- uid: System.Web.DynamicData.ControlFilterExpression.SaveViewState*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: SaveViewState
  nameWithType: ControlFilterExpression.SaveViewState
- uid: System.Web.DynamicData.ControlFilterExpression.SetContext*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: SetContext
  nameWithType: ControlFilterExpression.SetContext
- uid: System.Web.DynamicData.ControlFilterExpression.TrackViewState*
  parent: System.Web.DynamicData.ControlFilterExpression
  isExternal: false
  name: TrackViewState
  nameWithType: ControlFilterExpression.TrackViewState
