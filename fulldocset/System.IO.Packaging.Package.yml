### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.Package
  id: Package
  children:
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  - System.IO.Packaging.Package.Close
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  - System.IO.Packaging.Package.DeletePart(System.Uri)
  - System.IO.Packaging.Package.DeletePartCore(System.Uri)
  - System.IO.Packaging.Package.DeleteRelationship(System.String)
  - System.IO.Packaging.Package.Dispose(System.Boolean)
  - System.IO.Packaging.Package.FileOpenAccess
  - System.IO.Packaging.Package.Flush
  - System.IO.Packaging.Package.FlushCore
  - System.IO.Packaging.Package.GetPart(System.Uri)
  - System.IO.Packaging.Package.GetPartCore(System.Uri)
  - System.IO.Packaging.Package.GetParts
  - System.IO.Packaging.Package.GetPartsCore
  - System.IO.Packaging.Package.GetRelationship(System.String)
  - System.IO.Packaging.Package.GetRelationships
  - System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream)
  - System.IO.Packaging.Package.Open(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.Packaging.Package.PackageProperties
  - System.IO.Packaging.Package.PartExists(System.Uri)
  - System.IO.Packaging.Package.RelationshipExists(System.String)
  - System.IO.Packaging.Package.System#IDisposable#Dispose
  langs:
  - csharp
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
  type: Class
  summary: "Reprezentuje kontener może przechowywać wiele obiektów danych."
  remarks: "Pakiet jest klasą abstrakcyjną, która może służyć do organizowanie obiektów w pojedynczej jednostki zdefiniowanej fizycznym formacie przenośność i wydajny dostęp.       Plik ZIP jest podstawowym fizycznych formatów pakietu.  Implementacje pakietu może używać innych formatów fizycznych, takich jak dokument XML, bazy danych lub usługi sieci Web.       Jak system plików elementów zawartych w pakiecie odwołuje się hierarchiczna organizacja folderów i plików.       Mimo że opakowaniu jest klasą abstrakcyjną <xref:System.IO.Packaging.ZipPackage>klasy pochodnej jest używana jako domyślna przez <xref:System.IO.Packaging.Package.Open%2A>metody.</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.Packaging.ZipPackage>       A <xref:System.IO.Packaging.PackagePart>(&quot;części&quot;) jest klasa abstrakcyjna, która reprezentuje obiekt, który jest przechowywany w pakiecie.</xref:System.IO.Packaging.PackagePart>       A <xref:System.IO.Packaging.PackageRelationship>(&quot;relacji&quot;) definiuje skojarzenia między źródłem pakietu lub <xref:System.IO.Packaging.PackagePart>i obiekt docelowy.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackageRelationship>  A <xref:System.IO.Packaging.PackageRelationship>może być jedna z dwóch typów, z których każdy może być jedną z dwóch formach:-relacji poziom pakietu (utworzony przez <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=fullName>— Metoda) dotyczy albo pakietu: — target części w pakiecie.</xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=fullName> </xref:System.IO.Packaging.PackageRelationship>          -Zasób docelowy poza pakietem.      -A część poziomie relacji (utworzony przez <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=fullName>— Metoda) odnosi się źródłem <xref:System.IO.Packaging.PackagePart>jednej: — innego target części w pakiecie.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=fullName>          -Zasób docelowy poza pakietem.       Relacja źródła pakietu lub źródło <xref:System.IO.Packaging.PackagePart>jest traktowane jako &quot;właściciela&quot; w relacji.</xref:System.IO.Packaging.PackagePart>  Po usunięciu obiektu źródłowego są także usuwane wszystkie relacje należących do obiektu źródłowego.  Proces tworzenia lub usuwania relacji nie zmienia się fizycznie źródłową lub docelową obiektów w dowolny sposób.       A <xref:System.IO.Packaging.PackageDigitalSignature>(&quot;podpis cyfrowy&quot;) jest złożeniem części i relacje reprezentujący podpisu cyfrowego dołączone do pakietu.</xref:System.IO.Packaging.PackageDigitalSignature>  Podpis cyfrowy identyfikuje inicjatorem i weryfikuje, czy podpisem części i relacje zawartych w pakiecie nie zostały zmodyfikowane.       Pakiety również obsługiwać zarządzania prawami cyfrowymi (DRM) umożliwiający elementy zawartości w pakiecie do zaszyfrowania z określone prawa dostępu przyznane dla autoryzowanych użytkowników.       Oparty na architekturze pakietu <xref:System.Windows.Xps.Packaging.XpsDocument>jest typem pakiet przeznaczony do przechowywania dokumentów opartych na otwieranie [XML Paper Specification (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761).</xref:System.Windows.Xps.Packaging.XpsDocument>       [!INCLUDE[TLA#tla_avalonwinfx](~/add/includes/tlasharptla-avalonwinfx-md.md)]używa pakietów do przechowywania zawartości, zasobów i relacje dla stron i dokumenty przy użyciu standardowego pliku ZIP domyślnie. Zgodnie z dowolnego pliku ZIP, aplikacja może używać <xref:System.IO.Packaging>klasy do przechowywania i opcjonalnie ochrony dowolnego typu lub liczby plików danych w jeden kontener wydajny dostęp.</xref:System.IO.Packaging>       Aby uzyskać więcej informacji, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows the basic steps for creating a Package.  In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.  (This is similar to the case in which an HTML file has an \\<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.  The first, a \"package-level\" relationship, defines the document part as the package's root element.  A second, \"part-level\" relationship defines the association between the document part (the \"source\" of the part-level relationship) and its use of the image part (the \"target\" of the part-level relationship).  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: 'public abstract class Package : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  id: '#ctor(System.IO.FileAccess)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Package(FileAccess)
  nameWithType: Package.Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(FileAccess)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> klasy, który używa danej <xref href=&quot;System.IO.FileAccess&quot;> </xref>."
  remarks: "Pakiet jest chroniony Konstruktor <xref:System.IO.Packaging.Package>klasy abstrakcyjnej podstawowej.</xref:System.IO.Packaging.Package> Po wywołaniu w klasie pochodnej, Konstruktor pakietu inicjuje nowe wystąpienie klasy pochodnej."
  syntax:
    content: protected Package (System.IO.FileAccess openFileAccess);
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: "Uprawnienia we/wy pliku dla pakietu."
  overload: System.IO.Packaging.Package.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość <code> openFileAccess </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  id: '#ctor(System.IO.FileAccess,System.Boolean)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Package(FileAccess,Boolean)
  nameWithType: Package.Package(FileAccess,Boolean)
  fullName: System.IO.Packaging.Package.Package(FileAccess,Boolean)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> klasy, który używa danej <xref href=&quot;System.IO.FileAccess&quot;> </xref> i przesyłania strumieniowego opcji."
  remarks: "Pakiet jest Konstruktor chroniony <xref:System.IO.Packaging.Package>abstrakcyjny podstawowej klasy abstrakcyjnej podstawowej.</xref:System.IO.Packaging.Package> Po wywołaniu w klasie pochodnej, Konstruktor pakietu inicjuje nowe wystąpienie klasy pochodnej."
  syntax:
    content: protected Package (System.IO.FileAccess openFileAccess, bool streaming);
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: "Uprawnienia we/wy pliku dla pakietu."
    - id: streaming
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby otworzyć pakiet do przesyłania strumieniowego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość <code> openFileAccess </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Close
  id: Close
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Close()
  nameWithType: Package.Close()
  fullName: System.IO.Packaging.Package.Close()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Powoduje zapisanie i zamknięcie pakietu oraz wszystkich strumieni części podstawowej."
  remarks: "Dla <xref:System.IO.Packaging.Package>klasy Zamknij i <xref:System.IO.Packaging.Package.Dispose%2A>do tej samej operacji — to nie ma powodu do wywołania <xref:System.IO.Packaging.Package.Dispose%2A>można wywołać zamknięcia lub na odwrót.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package>       Zamknij i <xref:System.IO.Packaging.Package.Dispose%2A>wewnętrznie Wywołaj <xref:System.IO.Packaging.Package.Flush%2A>.</xref:System.IO.Packaging.Package.Flush%2A> </xref:System.IO.Packaging.Package.Dispose%2A>      > [!NOTE] > `using` Instrukcji (inne niż `using` dyrektywy przestrzeni nazw) jest zalecanym sposobem Zamknij i <xref:System.IO.Packaging.Package.Dispose%2A>pakietu.</xref:System.IO.Packaging.Package.Dispose%2A>  [Pisanie przykładowy pakiet](http://go.microsoft.com/fwlink/?LinkID=160055) i [odczytywania przykładowy pakiet](http://go.microsoft.com/fwlink/?LinkID=160034) pokazują, jak zamknąć i usuwania pakietu przy użyciu `using` instrukcji."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.Packaging.Package.Close*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  id: CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePart(Uri,String)
  nameWithType: Package.CreatePart(Uri,String)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Tworzy nowy element nieskompresowanych z danego identyfikatora URI i typu zawartości."
  remarks: "Inicjuje CreatePart pusta <xref:System.IO.Stream>dla nowej części.</xref:System.IO.Stream>  <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>Metoda pozwala uzyskać odwołania do wystąpienia strumienia skojarzonego z części.</xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>       Część <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> <xref:System.IO.Packaging.CompressionOption?displayProperty=fullName>.</xref:System.IO.Packaging.CompressionOption?displayProperty=fullName> </xref:System.IO.Packaging.PackagePart.CompressionOption%2A>       Aby uzyskać dodatkowe informacje na temat części pakietów, zobacz sekcję 1.1 w specyfikacji otwarte konwencje pakietów (OPC) dostępny do pobrania w [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepart)]\n [!code-cs[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepart)]"
  syntax:
    content: public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] z nowej strony."
    - id: contentType
      type: System.String
      description: "Typ zawartości strumienia danych."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Nowe części utworzone."
  overload: System.IO.Packaging.Package.CreatePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>or <code>contentType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Element z określonym <code> partUri </code> znajduje się już w pakiecie."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do odczytu (nie można dodać nowej części)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePart(Uri,String,CompressionOption)
  nameWithType: Package.CreatePart(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String,CompressionOption)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Tworzy nowy part z danego identyfikatora URI, typu zawartości i opcję kompresji."
  remarks: "Dla domyślnej <xref:System.IO.Packaging.ZipPackage>klasy, obsługuje tylko metody CreatePart dwa `compressionOption` wartości, <xref:System.IO.Packaging.CompressionOption>lub <xref:System.IO.Packaging.CompressionOption>kompresji.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.ZipPackage>  Inne <xref:System.IO.Packaging.CompressionOption>wartości <xref:System.IO.Packaging.CompressionOption>, <xref:System.IO.Packaging.CompressionOption>, lub <xref:System.IO.Packaging.CompressionOption>Użyj <xref:System.IO.Packaging.CompressionOption>kompresji.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption>       CreatePart tworzy puste <xref:System.IO.Stream>dla nowej części.</xref:System.IO.Stream>  <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>Metoda pozwala uzyskać odwołania do wystąpienia strumienia skojarzonego z części.</xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>       Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepart)]\n [!code-cs[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepart)]"
  syntax:
    content: public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] z nowej strony."
    - id: contentType
      type: System.String
      description: "Typ zawartości strumienia danych."
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: "Opcję kompresji dla strumienia danych <xref href=&quot;System.IO.Packaging.CompressionOption&quot;> </xref> lub <xref href=&quot;System.IO.Packaging.CompressionOption&quot;> </xref> kompresji."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Nowe części utworzone."
  overload: System.IO.Packaging.Package.CreatePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>or <code>contentType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Element z określonym <code> partUri </code> znajduje się już w pakiecie."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> compressionOption </code> Wartość jest nieprawidłowa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do odczytu (nie można dodać nowej części)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePartCore(Uri,String,CompressionOption)
  nameWithType: Package.CreatePartCore(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(Uri,String,CompressionOption)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "W przypadku przesłonięcia w klasie pochodnej tworzy nowe części pakietu."
  remarks: "Metoda pochodna CreatePartCore jest wywoływana przez <xref:System.IO.Packaging.Package.CreatePart%2A>metodę w celu utworzenia części na podstawie fizycznej formatu zaimplementowana w klasie pochodnej.</xref:System.IO.Packaging.Package.CreatePart%2A>       Domyślnie <xref:System.IO.Packaging.ZipPackage>implementacji klasy abstrakcyjnej klasy pochodnej <xref:System.IO.Packaging.Package>Klasa ma być dostarczana i używane.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  W operacji domyślne <xref:System.IO.Packaging.Package.CreatePart%2A>wewnętrznie wywołuje CreatePartCore z <xref:System.IO.Packaging.ZipPackage>klasy w celu utworzenia nowej części w pliku ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.CreatePart%2A>       Dla domyślnej <xref:System.IO.Packaging.ZipPackage>klasy, obsługuje tylko metody CreatePartCore dwa `compressionOption` wartości, <xref:System.IO.Packaging.CompressionOption>lub <xref:System.IO.Packaging.CompressionOption>kompresji.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.ZipPackage>  Inne <xref:System.IO.Packaging.CompressionOption>wartości <xref:System.IO.Packaging.CompressionOption>, <xref:System.IO.Packaging.CompressionOption>, lub <xref:System.IO.Packaging.CompressionOption>Użyj <xref:System.IO.Packaging.CompressionOption>kompresji.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption>       Aby uzyskać więcej informacji na temat modelu pakietu i części pakietów, zobacz rozdział 1 specyfikacji otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Części tworzona."
    - id: contentType
      type: System.String
      description: "Typ zawartości strumienia danych."
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: "Opcję kompresji dla strumienia danych."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Część utworzony."
  overload: System.IO.Packaging.Package.CreatePartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Tworzy relację poziom pakietu z elementem z danego identyfikatora URI, tryb obiektu docelowego i typ relacji."
  remarks: "Relacja poziom pakietu definiuje skojarzenie między pakietu i skojarzone docelowy part lub zasobu.  Relacja poziom pakietu może być jedną z dwóch formach.      -Między <xref:System.IO.Packaging.Package>z elementem docelowym w pakiecie.</xref:System.IO.Packaging.Package>      -Między <xref:System.IO.Packaging.Package>do zasobu docelowego poza element package.</xref:System.IO.Packaging.Package>       W relacji pakietu pakietu jest traktowana jako &quot;właściciela&quot; w relacji.  Jeśli pakiet został usunięty, są także usuwane wszystkie relacje należących do pakietu.       CreateRelationship nie zmienia fizycznie części docelowej lub zasobu w dowolny sposób.       Element docelowy relacji nie może być w innej relacji.       Jeśli `targetMode` jest określony jako <xref:System.IO.Packaging.TargetMode>, `targetUri` musi być względnym identyfikatorem URI, który został utworzony zgodnie z [RFC 3986](http://tools.ietf.org/html/rfc3986) Specyfikacja ogólna składnia identyfikatora URI (Uniform Resource).</xref:System.IO.Packaging.TargetMode>  Wewnętrzny względnego identyfikatora URI może być albo ścieżkę bezwzględną, która rozpoczyna się od ukośnika (&quot;/&quot;) znaków takich jak &quot;/ page1.xaml&quot; lub &quot;/ images/picture4.jpg&quot;, lub ścieżką względną, takie jak &quot;... / imagespicture1.jpg &quot;rozwiązań przed katalog główny pakietu (&quot;/ &quot;) jako podstawowy identyfikator URI.       Jeśli `targetMode` jest określony jako <xref:System.IO.Packaging.TargetMode>, `targetUri` może być albo bezwzględnym lub względnym identyfikatorem URI utworzony zgodnie z [RFC 3986](http://tools.ietf.org/html/rfc3986) Specyfikacja ogólna składnia identyfikatora URI (Uniform Resource).</xref:System.IO.Packaging.TargetMode>  Przykładem bezwzględny identyfikator URI, który odwołuje się do zasobu docelowego zewnętrzne &quot;page2.xml&quot; jest &quot;http://www.microsoft.com/page2.xml&quot;.  Przykładem względnym identyfikatorem URI również odwołuje się do docelowego zewnętrznych zasobów &quot;1.jpg&quot; ale która rozwiązuje względem adresu URI pakietu jest &quot;images/picture1.jpg&quot;.       `relationshipType`musi być [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] który został utworzony zgodnie z [RFC 3986](http://tools.ietf.org/html/rfc3986) Specyfikacja ogólna składnia identyfikatora URI (Uniform Resource).  W poniższej tabeli przedstawiono poziom pakietu `relationshipType` identyfikatorów URI zdefiniowanych przez specyfikację otwarte konwencje pakietów (OPC).      | Pakiet poziomie relacji | Identyfikator URI typu relacji |   |---------------------------------|---------------------------|   | Właściwości podstawowe | http://schemas.openxmlformats.org/package/2006/relationships/meta właściwości danych/core-|   | Podpis cyfrowy | http://schemas.openxmlformats.org/package/2006/relationships/digit al podpisu/podpisu |   | Certyfikat podpisu cyfrowego | http://schemas.openxmlformats.org/package/2006/relationships/digit certyfikat al podpisu |   | Digital Signature Origin | http://schemas.openxmlformats.org/package/2006/relationships/digit źródłem al podpisu |   | Miniatur | http://schemas.openxmlformats.org/package/2006/relationships/meta danych/miniatur |       Aby uzyskać więcej informacji na temat tworzenia pakietów i relacje pakietu sekcji 1.3 specyfikacji otwarte konwencje pakietów (OPC) dostępny do pobrania w [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example illustrates how to use CreateRelationship to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackagerelationship)]\n [!code-cs[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackagerelationship)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);
    parameters:
    - id: targetUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Części docelowej."
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: "Wskazuje, czy element docelowy jest <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> lub <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> do pakietu."
    - id: relationshipType
      type: System.String
      description: "Identyfikator URI, który unikatowo definiuje roli relacji."
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "Poziom pakietu relacji z określonej części."
  overload: System.IO.Packaging.Package.CreateRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetUri</code>or <code>relationshipType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>targetUri</code> part is a <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>, or <code>targetMode</code> is <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> and <code>targetUri</code> is an absolute URI."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość <code> targetMode </code> jest nieprawidłowy."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do odczytu."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Tworzy relację poziom pakietu z elementem z danym identyfikatorem URI, tryb docelowej, typ relacji i [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)]."
  remarks: "Relacja poziom pakietu definiuje skojarzenie między pakietu i skojarzone docelowy part lub zasobu.  Relacja poziom pakietu może być jedną z dwóch formach.      -Między <xref:System.IO.Packaging.Package>z elementem docelowym w pakiecie.</xref:System.IO.Packaging.Package>      -Między <xref:System.IO.Packaging.Package>do zasobu docelowego poza element package.</xref:System.IO.Packaging.Package>       W relacji pakietu pakietu jest traktowana jako &quot;właściciela&quot; w relacji.  Jeśli pakiet został usunięty, są także usuwane wszystkie relacje należących do pakietu.       CreateRelationship nie zmienia fizycznie części docelowej lub zasobu w dowolny sposób.       Element docelowy relacji nie może być w innej relacji.       `id`musi być prawidłowym identyfikatorem XML.  `id` Typ to xsd:ID, należy wykonać opisane w części 2 schematu XML konwencje nazewnictwa: specyfikacja typy danych (zobacz [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/)).       Jeśli `id` jest określony jako `null` będą automatycznie generowane Unikatowy identyfikator.  `id` Określony przez pusty ciąg jest nieprawidłowy.       Jeśli `targetMode` jest określony jako <xref:System.IO.Packaging.TargetMode>, `targetUri` musi być względnym identyfikatorem URI, który został utworzony zgodnie z [RFC 3986](http://tools.ietf.org/html/rfc3986) Specyfikacja ogólna składnia identyfikatora URI (Uniform Resource).</xref:System.IO.Packaging.TargetMode>  Wewnętrzny względnego identyfikatora URI może być albo ścieżkę bezwzględną, która rozpoczyna się od ukośnika (&quot;/&quot;) znaków takich jak &quot;/ page1.xaml&quot; lub &quot;/ images/picture4.jpg&quot;, lub ścieżką względną, takie jak &quot;... / imagespicture1.jpg &quot;rozwiązań przed katalog główny pakietu (&quot;/ &quot;) jako podstawowy identyfikator URI.       Jeśli `targetMode` jest określony jako <xref:System.IO.Packaging.TargetMode>, `targetUri` może być albo bezwzględnym lub względnym identyfikatorem URI utworzony zgodnie z [RFC 3986](http://tools.ietf.org/html/rfc3986) Specyfikacja ogólna składnia identyfikatora URI (Uniform Resource).</xref:System.IO.Packaging.TargetMode>  Przykładem bezwzględny identyfikator URI, który odwołuje się do zasobu docelowego zewnętrzne &quot;page2.xml&quot; jest &quot;http://www.microsoft.com/page2.xml&quot;.  Przykładem względnym identyfikatorem URI również odwołuje się do docelowego zewnętrznych zasobów &quot;1.jpg&quot; ale która rozwiązuje względem adresu URI pakietu jest &quot;images/picture1.jpg&quot;.       `relationshipType`musi być identyfikatorem URI, który został utworzony zgodnie z [RFC 3986](http://tools.ietf.org/html/rfc3986) Specyfikacja ogólna składnia identyfikatora URI (Uniform Resource).  W poniższej tabeli przedstawiono poziom pakietu `relationshipType` identyfikatorów URI zdefiniowanych przez specyfikację otwarte konwencje pakietów (OPC).      | Pakiet poziomie relacji | Identyfikator URI typu relacji |   |---------------------------------|---------------------------|   | Właściwości podstawowe | http://schemas.openxmlformats.org/package/2006/relationships/meta właściwości danych/core-|   | Podpis cyfrowy | http://schemas.openxmlformats.org/package/2006/relationships/digit al podpisu/podpisu |   | Certyfikat podpisu cyfrowego | http://schemas.openxmlformats.org/package/2006/relationships/digit certyfikat al podpisu |   | Digital Signature Origin | http://schemas.openxmlformats.org/package/2006/relationships/digit źródłem al podpisu |   | Miniatur | http://schemas.openxmlformats.org/package/2006/relationships/meta danych/miniatur |       Aby uzyskać dodatkowe informacje dotyczące tworzenia pakietów i relacje pakietu, zobacz sekcję 1.3 specyfikacji otwarte konwencje pakietów (OPC) dostępny do pobrania w [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackagerelationship)]\n [!code-cs[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackagerelationship)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);
    parameters:
    - id: targetUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Części docelowej."
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: "Wskazuje, czy element docelowy jest <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> lub <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> do pakietu."
    - id: relationshipType
      type: System.String
      description: "Identyfikator URI, który unikatowo definiuje roli relacji."
    - id: id
      type: System.String
      description: "Unikatowy identyfikator XML."
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "Poziom pakietu relacji z określonej części."
  overload: System.IO.Packaging.Package.CreateRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetUri</code>or <code>relationshipType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>targetUri</code> part is a <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>, or <code>targetMode</code> is <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> and <code>targetUri</code> is an absolute URI."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość <code> targetMode </code> jest nieprawidłowy."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do odczytu."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>nie jest prawidłowy identyfikator XML; lub części z określonym <code>id</code> występuje już w pakiecie."
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  id: DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeletePart(Uri)
  nameWithType: Package.DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Usuwa element z danym identyfikatorem URI z pakietu."
  remarks: "`partUri`musi być względnym identyfikatorem URI, który składa się z ścieżką bezwzględną, która rozpoczyna się od ukośnika (&quot;/&quot;) znaków.  Ścieżka bezwzględna jest względem katalogu głównego pakietu oraz jest sformatowany zgodnie z [RFC 3986](http://tools.ietf.org/html/rfc3986) Specyfikacja ogólna składnia identyfikatora URI (Uniform Resource).  &quot;/ page1.xaml&quot; i &quot;/ images/picture4.jpg&quot; przedstawiono część prawidłowy identyfikator URI.       Nie jest wyjątek, jeśli element z określonym `partUri` nie znajduje się w pakiecie.  (Można użyć <xref:System.IO.Packaging.Package.PartExists%2A>metodę, aby określić, czy element z określonym `partUri` w pakiecie.)</xref:System.IO.Packaging.Package.PartExists%2A>       Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public void DeletePart (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] Części do usunięcia."
  overload: System.IO.Packaging.Package.DeletePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do odczytu."
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  id: DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeletePartCore(Uri)
  nameWithType: Package.DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "W przypadku przesłonięcia w klasie pochodnej usuwa element z danym identyfikatorem URI."
  remarks: "Domyślnie <xref:System.IO.Packaging.ZipPackage>implementacji klasy abstrakcyjnej klasy pochodnej <xref:System.IO.Packaging.Package>Klasa ma być dostarczana i używane.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  W operacji domyślne <xref:System.IO.Packaging.Package.DeletePart%2A>wewnętrznie wywołuje DeletePartCore z <xref:System.IO.Packaging.ZipPackage>klasy do wykonania tej operacji delete rzeczywiste na podstawie fizycznej formatu zaimplementowana w klasie pochodnej.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.DeletePart%2A>       Aby uzyskać więcej informacji na temat modelu pakietu i części pakietów, zobacz rozdział 1 specyfikacji otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract void DeletePartCore (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "<xref:System.IO.Packaging.PackagePart.Uri*>z <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> do usunięcia.</xref:System.IO.Packaging.PackagePart.Uri*>"
  overload: System.IO.Packaging.Package.DeletePartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  id: DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeleteRelationship(String)
  nameWithType: Package.DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Usuwa relacji poziom pakietu."
  remarks: "Relacja poziom pakietu definiuje skojarzenie między pakietu i skojarzone docelowy part lub zasobu.  Relacja poziom pakietu może być jedną z dwóch formach.      -Między <xref:System.IO.Packaging.Package>z elementem docelowym w pakiecie.</xref:System.IO.Packaging.Package>      -Między <xref:System.IO.Packaging.Package>do zasobu docelowego poza element package.</xref:System.IO.Packaging.Package>       W relacji pakietu pakietu jest traktowana jako &quot;właściciela&quot; w relacji.  Jeśli pakiet został usunięty, są także usuwane wszystkie relacje należących do pakietu.       Nie jest wyjątek, jeśli relacji z określonym `id` nie znajduje się w pakiecie.       DeleteRelationship nie zmienia się fizycznie element docelowy w dowolny sposób.       Aby uzyskać więcej informacji na temat relacji pakietu, zobacz sekcję 1.3 specyfikacji otwarte konwencje pakietów (OPC) dostępny do pobrania w [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public void DeleteRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.Id*>z <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> do usunięcia.</xref:System.IO.Packaging.PackageRelationship.Id*>"
  overload: System.IO.Packaging.Package.DeleteRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do odczytu."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>nie jest prawidłowym identyfikatorem XML."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Package.Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Liczba opróżnień i zapisuje zawartość wszystkich części i relacje, zamyka pakietu i zwalnia wszystkie zasoby."
  remarks: "Aby upewnić się, że wszystkie zmiany są zapisywane poprawnie, Dispose również Kończenie znajdujących się w opróżnia i zamyka wszystkie części i relacje, które są zawarte w pakiecie.       Dla <xref:System.IO.Packaging.Package>klasy Dispose i <xref:System.IO.Packaging.Package.Close%2A>do tej samej operacji — nie ma powodu do wywołania metody Dispose połączeń <xref:System.IO.Packaging.Package.Close%2A>, lub na odwrót.</xref:System.IO.Packaging.Package.Close%2A> </xref:System.IO.Packaging.Package.Close%2A> </xref:System.IO.Packaging.Package>       <xref:System.IO.Packaging.Package.Close%2A>i usuwania wewnętrznie Wywołaj <xref:System.IO.Packaging.Package.Flush%2A>.</xref:System.IO.Packaging.Package.Flush%2A></xref:System.IO.Packaging.Package.Close%2A>       Klasy pochodne, których alokacji zasobów i zarządzanie nimi z systemem innym niż pamięci powinny przesłaniać tę metodę, aby zwolnić zasoby, gdy wywoływana jest metoda Dispose. Zastąpienia klas pochodnych należy także wywołać <xref:System.IO.Packaging.Package.Flush%2A>i metodę Dispose klasy podstawowej, aby upewnić się, który Oczyszczanie klasa podstawowa jest zawsze wykonywane.</xref:System.IO.Packaging.Package.Flush%2A>      > [!NOTE] > `using` Instrukcji (inne niż `using` dyrektywy przestrzeni nazw) jest zalecanym sposobem <xref:System.IO.Packaging.Package.Close%2A>i usuwania pakietu.</xref:System.IO.Packaging.Package.Close%2A> [Pisanie przykładowy pakiet](http://go.microsoft.com/fwlink/?LinkID=160055) pokazano, jak zamknąć i usuwania pakietu przy użyciu `using` instrukcji."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.IO.Packaging.Package.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.FileOpenAccess
  id: FileOpenAccess
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Dostęp do plików pobiera ustawienie dla pakietu."
  remarks: "Właściwość FileOpenAccess nie ma wartości domyślnej.  Ustawienia dostępu do pliku jest określona w <xref:System.IO.Packaging.Package.%23ctor%2A>wywołać konstruktora, podczas tworzenia nowego pakietu, lub w <xref:System.IO.Packaging.Package.Open%2A>wywołań podczas otwierania istniejącego pakietu.</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.Packaging.Package.%23ctor%2A>"
  syntax:
    content: public System.IO.FileAccess FileOpenAccess { get; }
    return:
      type: System.IO.FileAccess
      description: 'One of the <xref href=&quot;System.IO.FileAccess&quot;></xref> values: <xref href=&quot;System.IO.FileAccess&quot;></xref>, <xref href=&quot;System.IO.FileAccess&quot;></xref>, or <xref href=&quot;System.IO.FileAccess&quot;></xref>.'
  overload: System.IO.Packaging.Package.FileOpenAccess*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Flush
  id: Flush
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Flush()
  nameWithType: Package.Flush()
  fullName: System.IO.Packaging.Package.Flush()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Zapisuje zawartość wszystkich części i relacje, które są zawarte w pakiecie."
  remarks: "Opróżnić wewnętrznie wywołuje klasy pochodnej <xref:System.IO.Packaging.Package.FlushCore%2A>Jawna implementacja do wykonania bieżącej operacji opróżniania specyficzne dla formatu.</xref:System.IO.Packaging.Package.FlushCore%2A>  Klasy pochodne <xref:System.IO.Packaging.Package.FlushCore%2A>Metoda jest odpowiedzialna za faktycznie zapisywania zawartości części i relacji do wykonania określonej fizycznych klasy pochodnej.</xref:System.IO.Packaging.Package.FlushCore%2A>       Domyślnie <xref:System.IO.Packaging.ZipPackage>pochodnych implementacji klasy abstrakcyjnej <xref:System.IO.Packaging.Package>ma być dostarczana i używane przez klasę podstawową.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage> W operacji domyślne opróżnić wewnętrznie wywołania <xref:System.IO.Packaging.Package.FlushCore%2A>można zapisać części i relacje w pakiecie pliku ZIP.</xref:System.IO.Packaging.Package.FlushCore%2A>       Flush jest wywoływana automatycznie przez <xref:System.IO.Packaging.Package.Close%2A>i <xref:System.IO.Packaging.Package.Dispose%2A>metody.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Close%2A>  Gdy <xref:System.IO.Packaging.Package.Close%2A>lub <xref:System.IO.Packaging.Package.Dispose%2A>jest nazywany nie trzeba wywołać opróżnić oddzielnie.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Close%2A>"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.IO.Packaging.Package.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do odczytu i nie może być modyfikowany."
  platform:
  - net462
- uid: System.IO.Packaging.Package.FlushCore
  id: FlushCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: FlushCore()
  nameWithType: Package.FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "W przypadku przesłonięcia w klasie pochodnej, zapisuje zawartość wszystkich części i relacji w magazynie klasy pochodnej."
  remarks: "FlushCore jest wywoływana przez <xref:System.IO.Packaging.Package.Flush%2A>metodę, aby wykonać bieżącej operacji opróżniania na podstawie fizycznej formatu zaimplementowana w klasie pochodnej.</xref:System.IO.Packaging.Package.Flush%2A>"
  syntax:
    content: protected abstract void FlushCore ();
    parameters: []
  overload: System.IO.Packaging.Package.FlushCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  id: GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPart(Uri)
  nameWithType: Package.GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Zwraca część z danym identyfikatorem URI."
  remarks: "<xref:System.InvalidOperationException>Jest generowany, jeśli element z określonym `partUri` nie istnieje.</xref:System.InvalidOperationException>       <xref:System.IO.Packaging.Package.PartExists%2A>Metoda może służyć do określenia czy `partUri` odwołuje się do istniejącej części.</xref:System.IO.Packaging.Package.PartExists%2A>       Domyślnie <xref:System.IO.Packaging.ZipPackage>pochodnych implementacji klasy abstrakcyjnej <xref:System.IO.Packaging.Package>ma być dostarczana i używane przez klasę podstawową.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  W operacji domyślne wewnętrznie wywołuje GetPart <xref:System.IO.Packaging.Package.GetPartCore%2A>z <xref:System.IO.Packaging.ZipPackage>klasy, aby zwrócić żądanej części z pliku ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartCore%2A>       Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to locate, retrieve, and read parts that are contained in a package.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public System.IO.Packaging.PackagePart GetPart (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Części do zwrócenia."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Element z określonym <code> partUri </code>."
  overload: System.IO.Packaging.Package.GetPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Element z określonym <code> partUri </code> nie znajduje się w pakiecie."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do zapisu."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  id: GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPartCore(Uri)
  nameWithType: Package.GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "W przypadku przesłonięcia w klasie pochodnej zwraca część dotyczy danego identyfikatora URI."
  remarks: "Domyślnie <xref:System.IO.Packaging.ZipPackage>pochodnych implementacji klasy abstrakcyjnej <xref:System.IO.Packaging.Package>Klasa ma być dostarczana i używane.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  W operacji domyślne <xref:System.IO.Packaging.Package.GetPart%2A>wewnętrznie wywołuje GetPartCore z <xref:System.IO.Packaging.ZipPackage>klasy można pobrać części z pliku ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPart%2A>       Aby uzyskać więcej informacji na temat modelu pakietu i części pakietów, zobacz rozdział 1 specyfikacji otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Części do pobrania."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Żądanej części; lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, jeśli element z określonym <code> partUri </code> nie znajduje się w pakiecie."
  overload: System.IO.Packaging.Package.GetPartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetParts
  id: GetParts
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetParts()
  nameWithType: Package.GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Zwraca kolekcję wszystkich części pakietu."
  remarks: "GetParts zwraca kolekcję wszystkich części, które są zawarte w tym pakiecie <xref:System.IO.Packaging.PackageRelationship>części.</xref:System.IO.Packaging.PackageRelationship>       Nigdy nie zwróci GetParts `null`; jednak zwracana kolekcja będzie zawierać żadnego elementu, jeśli pakiet nie zawiera żadnych części.       Domyślnie <xref:System.IO.Packaging.ZipPackage>pochodnych implementacji klasy abstrakcyjnej <xref:System.IO.Packaging.Package>ma być dostarczana i używane przez klasę podstawową.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  W operacji domyślne wywołuje GetParts <xref:System.IO.Packaging.Package.GetPartsCore%2A>metody <xref:System.IO.Packaging.ZipPackage>służącą do zwracania części z pliku ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartsCore%2A>       Aby uzyskać więcej informacji o pakietach i części pakietów, zobacz sekcję 1.1 specyfikacji otwarte konwencje pakietów (OPC) dostępny do pobrania w [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to use the GetParts method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.  For the complete program source code, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.IO.Packaging.PackagePartCollection GetParts ();
    parameters: []
    return:
      type: System.IO.Packaging.PackagePartCollection
      description: "Kolekcja wszystkich <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> elementy, które są zawarte w pakiecie."
  overload: System.IO.Packaging.Package.GetParts*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do zapisu."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPartsCore
  id: GetPartsCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPartsCore()
  nameWithType: Package.GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "W przypadku przesłonięcia w klasie pochodnej zwraca tablicę wszystkich części pakietu."
  remarks: "Implementacja klasy pochodnej GetPartsCore jest wywoływana przez <xref:System.IO.Packaging.Package.GetParts%2A>metodę dostępu i zwraca tablicę części w oparciu o fizycznym formacie zaimplementowana w klasie pochodnej.</xref:System.IO.Packaging.Package.GetParts%2A>       Domyślnie <xref:System.IO.Packaging.ZipPackage>pochodnych implementacji klasy abstrakcyjnej <xref:System.IO.Packaging.Package>Klasa ma być dostarczana i używane.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  W operacji domyślne <xref:System.IO.Packaging.Package.GetParts%2A>wewnętrznie wywołuje <xref:System.IO.Packaging.Package.GetPartCore%2A>z <xref:System.IO.Packaging.ZipPackage>klasy można pobrać części z pliku ZIP.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartCore%2A> </xref:System.IO.Packaging.Package.GetParts%2A>       Aby uzyskać więcej informacji na temat modelu pakietu i części pakietów, zobacz rozdział 1 specyfikacji otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();
    parameters: []
    return:
      type: System.IO.Packaging.PackagePart[]
      description: "Tablica części, które są zawarte w pakiecie."
  overload: System.IO.Packaging.Package.GetPartsCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  id: GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationship(String)
  nameWithType: Package.GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Zwraca poziom pakietu relację z danym identyfikatorem."
  remarks: "`id`musi być prawidłowym identyfikatorem XML.  `id` Typ to xsd:ID, należy wykonać opisane w części 2 schematu XML konwencje nazewnictwa: specyfikacja typy danych (zobacz [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/#ID)).       Aby uzyskać dodatkowe informacje dotyczące tworzenia pakietów i relacje pakietu, zobacz sekcję 1.3 specyfikacji otwarte konwencje pakietów (OPC) dostępny do pobrania w [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageRelationship GetRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.Id*>Relacji do zwrócenia.</xref:System.IO.Packaging.PackageRelationship.Id*>"
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "Poziom pakietu relacji z określonym <code> id </code>."
  overload: System.IO.Packaging.Package.GetRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>nie jest prawidłowym identyfikatorem XML."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Relacja z określonym <code> id </code> nie znajduje się w pakiecie."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do zapisu."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationships
  id: GetRelationships
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationships()
  nameWithType: Package.GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Zwraca kolekcję wszystkie relacje poziom pakietu."
  remarks: "Nigdy nie zwróci GetRelationships `null`; jednak zwracana Kolekcja może zawierać żadnego elementu, jeśli pakiet nie zawiera żadnych relacji poziom pakietu.       Relacja poziom pakietu definiuje skojarzenie między pakietu i skojarzone docelowy part lub zasobu.  Relacja poziom pakietu może być jedną z dwóch formach.      -Między <xref:System.IO.Packaging.Package>z elementem docelowym w pakiecie.</xref:System.IO.Packaging.Package>      -Między <xref:System.IO.Packaging.Package>do zasobu docelowego poza element package.</xref:System.IO.Packaging.Package>       W relacji pakietu pakietu jest traktowana jako &quot;właściciela&quot; w relacji.  Jeśli pakiet został usunięty, są także usuwane wszystkie relacje należących do pakietu.  Proces tworzenia lub usuwania relacji nie zmienia fizycznie części docelowej lub zasobu w dowolny sposób.       Aby uzyskać dodatkowe informacje dotyczące tworzenia pakietów i relacje pakietu, zobacz sekcję 1.3 specyfikacji otwarte konwencje pakietów (OPC) dostępny do pobrania w [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();
    parameters: []
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: "Kolekcja wszystkie relacje poziomie pakietu, które są zawarte w pakiecie."
  overload: System.IO.Packaging.Package.GetRelationships*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do zapisu."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  id: GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationshipsByType(String)
  nameWithType: Package.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Zwraca kolekcję wszystkie relacje poziomie pakietu, które odpowiada danym <xref:System.IO.Packaging.PackageRelationship.RelationshipType*>.</xref:System.IO.Packaging.PackageRelationship.RelationshipType*>"
  remarks: "<xref:System.IO.Packaging.Package.GetRelationships%2A>nigdy nie zwróci `null`; jednak jeśli żadnych relacji poziomie pakietu, które pasują do określonego zwrócona Kolekcja może zawierać żadnego elementu `relationshipType`.</xref:System.IO.Packaging.Package.GetRelationships%2A>       W poniższej tabeli przedstawiono poziom pakietu `relationshipType` identyfikatorów URI zdefiniowanych przez specyfikację otwarte konwencje pakietów (OPC).      | Pakiet poziomie relacji | Identyfikator URI typu relacji |   |---------------------------------|---------------------------|   | Właściwości podstawowe | http://schemas.openxmlformats.org/package/2006/relationships/meta właściwości danych/core-|   | Podpis cyfrowy | http://schemas.openxmlformats.org/package/2006/relationships/digit al podpisu/podpisu |   | Certyfikat podpisu cyfrowego | http://schemas.openxmlformats.org/package/2006/relationships/digit certyfikat al podpisu |   | Digital Signature Origin | http://schemas.openxmlformats.org/package/2006/relationships/digit źródłem al podpisu |   | Miniatur | http://schemas.openxmlformats.org/package/2006/relationships/meta danych/miniatur |       Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to retrieve the relationships that have been defined for the package.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);
    parameters:
    - id: relationshipType
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.RelationshipType*>Umożliwia dopasowanie i zwracany w kolekcji.</xref:System.IO.Packaging.PackageRelationship.RelationshipType*>"
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: "Kolekcja relacji poziomie pakietu, które pasują do określonego <code> relationshipType </code>."
  overload: System.IO.Packaging.Package.GetRelationshipsByType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relationshipType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relationshipType</code>jest pustym ciągiem."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do zapisu."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  id: Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream)
  nameWithType: Package.Open(Stream)
  fullName: System.IO.Packaging.Package.Open(Stream)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Otwiera pakiet na dany strumień we/wy."
  remarks: "<xref:System.IO.Packaging.ZipPackage>jest to domyślny typ pakietu, który jest używany przez metodę Open.</xref:System.IO.Packaging.ZipPackage>       Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Strumień we/wy, na której można otworzyć pakietu."
    return:
      type: System.IO.Packaging.Package
      description: "Otwarty pakiet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wymaga pakietu, aby otworzyć do odczytu lub odczytu/zapisu, uprawnienia i określonego <code> stream </code> jest tylko do zapisu; lub pakiet, aby otworzyć wymaga zapisu lub uprawnienia odczytu/zapisu i określonego <code> stream </code> jest tylko do odczytu."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String)
  id: Open(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String)
  nameWithType: Package.Open(String)
  fullName: System.IO.Packaging.Package.Open(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Otwiera pakietu w danym ścieżkę i nazwę."
  remarks: "<xref:System.IO.Packaging.ZipPackage>jest to domyślny typ pakietu, który jest używany przez metodę Open.</xref:System.IO.Packaging.ZipPackage>       To <xref:System.IO.Packaging.Package.Open%2A>Metoda otwiera pakiet z domyślnymi atrybutami <xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, i <xref:System.IO.FileShare>(Aby określić różnych atrybutów, użyj jednej z inne przeciążenia metody Open).</xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.Packaging.Package.Open%2A>       Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path);
    parameters:
    - id: path
      type: System.String
      description: "Nazwa i ścieżka pliku pakietu."
    return:
      type: System.IO.Packaging.Package
      description: "Otwarty pakiet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  id: Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream,FileMode)
  nameWithType: Package.Open(Stream,FileMode)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Otwiera pakiet z danym trybem strumienia i plik we/wy."
  remarks: "<xref:System.IO.Packaging.ZipPackage>jest to domyślny typ pakietu, który jest używany przez metodę Open.</xref:System.IO.Packaging.ZipPackage>       Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Strumień we/wy, na której można otworzyć pakietu."
    - id: packageMode
      type: System.IO.FileMode
      description: "Tryb pliku, w którym można otworzyć pakietu."
    return:
      type: System.IO.Packaging.Package
      description: "Otwarty pakiet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>packageMode</code>wartość jest nieprawidłowa."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wymaga pakietu, aby otworzyć do odczytu lub odczytu/zapisu, uprawnienia i określonego <code> stream </code> jest tylko do zapisu; lub pakiet, aby otworzyć wymaga zapisu lub uprawnienia odczytu/zapisu i określonego <code> stream </code> jest tylko do odczytu."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode)
  nameWithType: Package.Open(String,FileMode)
  fullName: System.IO.Packaging.Package.Open(String,FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Otwiera pakietu w podanej ścieżce przy użyciu trybu danego pliku."
  remarks: "<xref:System.IO.Packaging.ZipPackage>jest to domyślny typ pakietu, który jest używany przez metodę Open.</xref:System.IO.Packaging.ZipPackage>       Ta metoda Otwórz Otwiera pakiet z domyślnymi atrybutami <xref:System.IO.FileAccess>i <xref:System.IO.FileShare>(Aby określić różnych atrybutów, użyj jednej z inne przeciążenia metody Open).</xref:System.IO.FileShare> </xref:System.IO.FileAccess>       Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);
    parameters:
    - id: path
      type: System.String
      description: "Nazwa i ścieżka pliku pakietu."
    - id: packageMode
      type: System.IO.FileMode
      description: "Tryb pliku, w którym można otworzyć pakietu."
    return:
      type: System.IO.Packaging.Package
      description: "Otwarty pakiet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość <code> packageMode </code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream,FileMode,FileAccess)
  nameWithType: Package.Open(Stream,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Zostanie otwarta pakietu z danego strumienia we/wy, tryb pliku i ustawienia dostępu do pliku."
  remarks: "<xref:System.IO.Packaging.ZipPackage>jest to domyślny typ pakietu, który jest używany przez metodę Open.</xref:System.IO.Packaging.ZipPackage>       Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Strumień we/wy, na której można otworzyć pakietu."
    - id: packageMode
      type: System.IO.FileMode
      description: "Tryb pliku, w którym można otworzyć pakietu."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "Dostęp do plików do otwarcia pakietu."
    return:
      type: System.IO.Packaging.Package
      description: "Otwarty pakiet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value for <code>packageMode</code> or <code>packageAccess</code> is not valid."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wymaga pakietu, aby otworzyć do odczytu lub odczytu/zapisu, uprawnienia i określonego <code> stream </code> jest tylko do zapisu; lub pakiet, aby otworzyć wymaga zapisu lub uprawnienia odczytu/zapisu i określonego <code> stream </code> jest tylko do odczytu."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess)
  nameWithType: Package.Open(String,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Otwiera pakietu w podanej ścieżce przy użyciu danego pliku tryb i ustawienia dostępu do pliku."
  remarks: "<xref:System.IO.Packaging.ZipPackage>jest to domyślny typ pakietu, który jest używany przez metodę Open.</xref:System.IO.Packaging.ZipPackage>       Ta metoda Otwórz Otwiera pakiet z domyślną <xref:System.IO.FileShare>atrybutu (Aby określić inny atrybut, użyj <xref:System.IO.Packaging.Package.Open%2A>przeciążenie metody).</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.FileShare>       Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);
    parameters:
    - id: path
      type: System.String
      description: "Nazwa i ścieżka pliku pakietu."
    - id: packageMode
      type: System.IO.FileMode
      description: "Tryb pliku, w którym można otworzyć pakietu."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "Dostęp do plików do otwarcia pakietu."
    return:
      type: System.IO.Packaging.Package
      description: "Otwarty pakiet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Value for <code>packageMode</code> or <code>packageAccess</code> is not valid."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: Package.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Otwiera pakietu w podanej ścieżce przy użyciu trybu danego pliku, dostęp do plików i udziału plików ustawienie."
  remarks: "<xref:System.IO.Packaging.ZipPackage>jest to domyślny typ pakietu, który jest używany przez metodę Open.</xref:System.IO.Packaging.ZipPackage>       Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);
    parameters:
    - id: path
      type: System.String
      description: "Nazwa i ścieżka pliku pakietu."
    - id: packageMode
      type: System.IO.FileMode
      description: "Tryb pliku, w którym można otworzyć pakietu."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "Dostęp do plików do otwarcia pakietu."
    - id: packageShare
      type: System.IO.FileShare
      description: "Tryb, w którym można otworzyć pakietu udostępniania plików."
    return:
      type: System.IO.Packaging.Package
      description: "Otwarty pakiet."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value for <code>packageMode</code>, <code>packageAccess</code>, or <code>packageShare</code> is not valid."
  platform:
  - net462
- uid: System.IO.Packaging.Package.PackageProperties
  id: PackageProperties
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: PackageProperties
  nameWithType: Package.PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Pobiera właściwości core pakietu."
  remarks: "Aby uzyskać dodatkowe informacje o podstawowych właściwości pakietu, zobacz sekcję 3.1 w specyfikacji otwarte konwencje pakietów (OPC) dostępny do pobrania w [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageProperties PackageProperties { get; }
    return:
      type: System.IO.Packaging.PackageProperties
      description: "Właściwości podstawowe pakietu."
  overload: System.IO.Packaging.Package.PackageProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  id: PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: PartExists(Uri)
  nameWithType: Package.PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Wskazuje, czy części o danym identyfikatorze URI znajduje się w pakiecie."
  remarks: "`partUri` Powinien zaczynać się od ukośnika do przodu &quot;/&quot; i być bezwzględna z głównym pakietu.       Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public virtual bool PartExists (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "<xref:System.Uri>Części, aby sprawdzić for.</xref:System.Uri>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli część z określonym <code> partUri </code> znajduje się w pakiecie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.PartExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do zapisu (nie można odczytać informacji)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  id: RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: RelationshipExists(String)
  nameWithType: Package.RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Wskazuje, czy relacja poziom pakietu z podanym Identyfikatorem znajduje się w pakiecie."
  remarks: "Aby uzyskać dodatkowe informacje, zobacz specyfikację otwarte konwencje pakietów (OPC) można pobrać [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public bool RelationshipExists (string id);
    parameters:
    - id: id
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.Id*>Relacji, aby sprawdzić for.</xref:System.IO.Packaging.PackageRelationship.Id*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli pakiet poziom relacji z określonym <code> id </code> znajduje się w pakiecie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.RelationshipExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>nie jest prawidłowym identyfikatorem XML."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Pakiet nie jest otwarty (<>*> lub <> </> *> została wywołana)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Pakiet jest tylko do zapisu."
  platform:
  - net462
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: Package.System.IDisposable.Dispose()
  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Ten element członkowski obsługuje [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastrukturę i nie jest przeznaczona do użytku w aplikacji.  Użyj typu palety <xref:System.IO.Packaging.Package.Dispose*>metody zamiast.</xref:System.IO.Packaging.Package.Dispose*>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.IO.Packaging.Package.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package(FileAccess)
  nameWithType: Package.Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package(FileAccess,Boolean)
  nameWithType: Package.Package(FileAccess,Boolean)
  fullName: System.IO.Packaging.Package.Package(FileAccess,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.Package.Close
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Close()
  nameWithType: Package.Close()
  fullName: System.IO.Packaging.Package.Close()
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart(Uri,String)
  nameWithType: Package.CreatePart(Uri,String)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String)
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart(Uri,String,CompressionOption)
  nameWithType: Package.CreatePart(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String,CompressionOption)
- uid: System.IO.Packaging.CompressionOption
  parent: System.IO.Packaging
  isExternal: false
  name: CompressionOption
  nameWithType: CompressionOption
  fullName: System.IO.Packaging.CompressionOption
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePartCore(Uri,String,CompressionOption)
  nameWithType: Package.CreatePartCore(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(Uri,String,CompressionOption)
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String)
- uid: System.IO.Packaging.PackageRelationship
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationship
  nameWithType: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  nameWithType: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String,String)
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePart(Uri)
  nameWithType: Package.DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(Uri)
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePartCore(Uri)
  nameWithType: Package.DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(Uri)
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeleteRelationship(String)
  nameWithType: Package.DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(String)
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Package.Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(Boolean)
- uid: System.IO.Packaging.Package.FileOpenAccess
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
- uid: System.IO.Packaging.Package.Flush
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Flush()
  nameWithType: Package.Flush()
  fullName: System.IO.Packaging.Package.Flush()
- uid: System.IO.Packaging.Package.FlushCore
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FlushCore()
  nameWithType: Package.FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPart(Uri)
  nameWithType: Package.GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(Uri)
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartCore(Uri)
  nameWithType: Package.GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(Uri)
- uid: System.IO.Packaging.Package.GetParts
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetParts()
  nameWithType: Package.GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
- uid: System.IO.Packaging.PackagePartCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePartCollection
  nameWithType: PackagePartCollection
  fullName: System.IO.Packaging.PackagePartCollection
- uid: System.IO.Packaging.Package.GetPartsCore
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartsCore()
  nameWithType: Package.GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
- uid: System.IO.Packaging.PackagePart[]
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart[]
  spec.csharp:
  - uid: System.IO.Packaging.PackagePart
    name: PackagePart
    nameWithType: PackagePart
    fullName: PackagePart[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationship(String)
  nameWithType: Package.GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(String)
- uid: System.IO.Packaging.Package.GetRelationships
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationships()
  nameWithType: Package.GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
- uid: System.IO.Packaging.PackageRelationshipCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationshipCollection
  nameWithType: PackageRelationshipCollection
  fullName: System.IO.Packaging.PackageRelationshipCollection
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationshipsByType(String)
  nameWithType: Package.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(String)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream)
  nameWithType: Package.Open(Stream)
  fullName: System.IO.Packaging.Package.Open(Stream)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Packaging.Package.Open(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String)
  nameWithType: Package.Open(String)
  fullName: System.IO.Packaging.Package.Open(String)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream,FileMode)
  nameWithType: Package.Open(Stream,FileMode)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode)
  nameWithType: Package.Open(String,FileMode)
  fullName: System.IO.Packaging.Package.Open(String,FileMode)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream,FileMode,FileAccess)
  nameWithType: Package.Open(Stream,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode,FileAccess)
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode,FileAccess)
  nameWithType: Package.Open(String,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess)
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: Package.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.Packaging.Package.PackageProperties
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PackageProperties
  nameWithType: Package.PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
- uid: System.IO.Packaging.PackageProperties
  parent: System.IO.Packaging
  isExternal: false
  name: PackageProperties
  nameWithType: PackageProperties
  fullName: System.IO.Packaging.PackageProperties
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PartExists(Uri)
  nameWithType: Package.PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(Uri)
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: RelationshipExists(String)
  nameWithType: Package.RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(String)
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose
  parent: System.IO.Packaging.Package
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: Package.System.IDisposable.Dispose()
  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()
- uid: System.IO.Packaging.Package.#ctor*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package
  nameWithType: Package.Package
- uid: System.IO.Packaging.Package.Close*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Close
  nameWithType: Package.Close
- uid: System.IO.Packaging.Package.CreatePart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart
  nameWithType: Package.CreatePart
- uid: System.IO.Packaging.Package.CreatePartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePartCore
  nameWithType: Package.CreatePartCore
- uid: System.IO.Packaging.Package.CreateRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship
  nameWithType: Package.CreateRelationship
- uid: System.IO.Packaging.Package.DeletePart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePart
  nameWithType: Package.DeletePart
- uid: System.IO.Packaging.Package.DeletePartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePartCore
  nameWithType: Package.DeletePartCore
- uid: System.IO.Packaging.Package.DeleteRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeleteRelationship
  nameWithType: Package.DeleteRelationship
- uid: System.IO.Packaging.Package.Dispose*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Dispose
  nameWithType: Package.Dispose
- uid: System.IO.Packaging.Package.FileOpenAccess*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
- uid: System.IO.Packaging.Package.Flush*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Flush
  nameWithType: Package.Flush
- uid: System.IO.Packaging.Package.FlushCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FlushCore
  nameWithType: Package.FlushCore
- uid: System.IO.Packaging.Package.GetPart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPart
  nameWithType: Package.GetPart
- uid: System.IO.Packaging.Package.GetPartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartCore
  nameWithType: Package.GetPartCore
- uid: System.IO.Packaging.Package.GetParts*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetParts
  nameWithType: Package.GetParts
- uid: System.IO.Packaging.Package.GetPartsCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartsCore
  nameWithType: Package.GetPartsCore
- uid: System.IO.Packaging.Package.GetRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationship
  nameWithType: Package.GetRelationship
- uid: System.IO.Packaging.Package.GetRelationships*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationships
  nameWithType: Package.GetRelationships
- uid: System.IO.Packaging.Package.GetRelationshipsByType*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationshipsByType
  nameWithType: Package.GetRelationshipsByType
- uid: System.IO.Packaging.Package.Open*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open
  nameWithType: Package.Open
- uid: System.IO.Packaging.Package.PackageProperties*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PackageProperties
  nameWithType: Package.PackageProperties
- uid: System.IO.Packaging.Package.PartExists*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PartExists
  nameWithType: Package.PartExists
- uid: System.IO.Packaging.Package.RelationshipExists*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: RelationshipExists
  nameWithType: Package.RelationshipExists
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: Package.System.IDisposable.Dispose
