### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ScriptReference
  id: ScriptReference
  children:
  - System.Web.UI.ScriptReference.#ctor
  - System.Web.UI.ScriptReference.#ctor(System.String)
  - System.Web.UI.ScriptReference.#ctor(System.String,System.String)
  - System.Web.UI.ScriptReference.Assembly
  - System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)
  - System.Web.UI.ScriptReference.IgnoreScriptPath
  - System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)
  - System.Web.UI.ScriptReference.IsFromSystemWebExtensions
  - System.Web.UI.ScriptReference.Name
  - System.Web.UI.ScriptReference.ToString
  langs:
  - csharp
  name: ScriptReference
  nameWithType: ScriptReference
  fullName: System.Web.UI.ScriptReference
  type: Class
  summary: "Rejestruje plik ECMAScript (JavaScript) do użycia na stronie sieci Web ASP.NET."
  remarks: "Rejestrując ją za pomocą obiektów ScriptReference można dołączyć plik JavaScript na stronie sieci Web ASP.NET. Możesz zarejestrować plik skryptu, który znajduje się w pliku js (plik statyczny skryptu) w witrynie sieci Web. Można również zarejestrować plik skryptu, który jest osadzony jako zasób w zestawie. Po zarejestrowaniu w pliku skryptu, można użyć jej funkcji w skrypcie klienta na stronie sieci Web.       Aby zarejestrować plik skryptu statycznych, ustaw <xref:System.Web.UI.ScriptReferenceBase.Path%2A>Właściwości obiektów ScriptReference względną lokalizację pliku.</xref:System.Web.UI.ScriptReferenceBase.Path%2A>       Aby zarejestrować plik skryptu, który jest osadzony jako zasób w zestawie, ustaw <xref:System.Web.UI.ScriptReference.Assembly%2A>właściwość na nazwę zestawu, który zawiera plik.</xref:System.Web.UI.ScriptReference.Assembly%2A> Następnie ustaw <xref:System.Web.UI.ScriptReference.Name%2A>właściwości do nazwy pliku js, który jest osadzony w zestawie.</xref:System.Web.UI.ScriptReference.Name%2A> W takim przypadku plik skryptu musi być osadzony, nie jest połączony.       Ustaw <xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A>właściwość, aby wskazać, czy użyć debugowania lub wersja skrypt.</xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A>       <xref:System.Web.UI.ScriptMode>Wartości daje różne wyniki, w zależności od tego, czy odwołuje się do autonomicznego pliku skryptu lub pliku skryptu, który jest osadzony jako zasób w zestawie.</xref:System.Web.UI.ScriptMode> Autonomiczny plik skryptu jest zdefiniowana z <xref:System.Web.UI.ScriptReferenceBase.Path%2A>Właściwości.</xref:System.Web.UI.ScriptReferenceBase.Path%2A> Odwołanie do zestawu muszą być dostępne za pośrednictwem <xref:System.Web.UI.ScriptReference.Name%2A>i <xref:System.Web.UI.ScriptReference.Assembly%2A>Właściwości.</xref:System.Web.UI.ScriptReference.Assembly%2A> </xref:System.Web.UI.ScriptReference.Name%2A> Wyniki dla <xref:System.Web.UI.ScriptMode>wartości są następujące: - po zastosowaniu do autonomicznego pliku skryptu gdzie <xref:System.Web.UI.ScriptReferenceBase.Path%2A>określono właściwości <xref:System.Web.UI.ScriptMode>wartość odpowiada <xref:System.Web.UI.ScriptMode>.</xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptReferenceBase.Path%2A> </xref:System.Web.UI.ScriptMode>      -Gdy jest on stosowany do odwołania do skryptu w zestawie <xref:System.Web.UI.ScriptMode>jest odpowiednikiem <xref:System.Web.UI.ScriptMode>.</xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptMode> Gdy tylko <xref:System.Web.UI.ScriptReference.Name%2A>zostanie określony, jest używany do odwołania skrypt.</xref:System.Web.UI.ScriptReference.Name%2A> Podczas <xref:System.Web.UI.ScriptReference.Name%2A>i <xref:System.Web.UI.ScriptReferenceBase.Path%2A>Właściwości są określone oba, <xref:System.Web.UI.ScriptReferenceBase.Path%2A>właściwość jest używana zamiast <xref:System.Web.UI.ScriptReference.Name%2A>, ale <xref:System.Web.UI.ScriptMode>wartość odpowiada nadal <xref:System.Web.UI.ScriptMode>.</xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptReference.Name%2A> </xref:System.Web.UI.ScriptReferenceBase.Path%2A> </xref:System.Web.UI.ScriptReferenceBase.Path%2A> </xref:System.Web.UI.ScriptReference.Name%2A>"
  example:
  - "The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly. The assembly is assumed to be in the Bin folder of the Web site. The custom control animates <xref:System.Web.UI.UpdatePanel> controls. The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js. You register the embedded JavaScript file by using the <xref:System.Web.UI.ScriptReference.Assembly%2A> and <xref:System.Web.UI.ScriptReference.Name%2A> properties.  \n  \n To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control. Put the resulting assembly into the Bin folder of the Web site. For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](~/add/includes/ajax-current-ext-md.md).  \n  \n The following example shows a page that uses the custom control.  \n  \n [!code-cs[System.Web.UI.ScriptReference#1](~/add/codesnippet/csharp/t-system.web.ui.scriptre_0_1.aspx)]\n [!code-vb[System.Web.UI.ScriptReference#1](~/add/codesnippet/visualbasic/t-system.web.ui.scriptre_0_1.aspx)]  \n  \n The following example shows the custom control class definition.  \n  \n [!code-cs[System.Web.UI.ScriptReference#2](~/add/codesnippet/csharp/t-system.web.ui.scriptre_0_2.cs)]\n [!code-vb[System.Web.UI.ScriptReference#2](~/add/codesnippet/visualbasic/t-system.web.ui.scriptre_0_2.vb)]  \n  \n The following example shows the supporting JavaScript file.  \n  \n [!code-javascript[System.Web.UI.ScriptReference#3](~/add/codesnippet/javascript/t-system.web.ui.scriptre_0_3.js)]  \n  \n The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.  \n  \n [!code-cs[System.Web.UI.ScriptReference#4](~/add/codesnippet/csharp/t-system.web.ui.scriptre_0_4.cs)]\n [!code-vb[System.Web.UI.ScriptReference#4](~/add/codesnippet/visualbasic/t-system.web.ui.scriptre_0_4.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      public class ScriptReference : System.Web.UI.ScriptReferenceBase
  inheritance:
  - System.Object
  - System.Web.UI.ScriptReferenceBase
  implements: []
  inheritedMembers:
  - System.Web.UI.ScriptReferenceBase.NotifyScriptLoaded
  - System.Web.UI.ScriptReferenceBase.Path
  - System.Web.UI.ScriptReferenceBase.ReplaceExtension(System.String)
  - System.Web.UI.ScriptReferenceBase.ResourceUICultures
  - System.Web.UI.ScriptReferenceBase.ScriptMode
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.#ctor
  id: '#ctor'
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: ScriptReference()
  nameWithType: ScriptReference.ScriptReference()
  fullName: System.Web.UI.ScriptReference.ScriptReference()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref> klasy."
  syntax:
    content: public ScriptReference ();
    parameters: []
  overload: System.Web.UI.ScriptReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: ScriptReference(String)
  nameWithType: ScriptReference.ScriptReference(String)
  fullName: System.Web.UI.ScriptReference.ScriptReference(String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref> przy użyciu określonej ścieżki."
  syntax:
    content: public ScriptReference (string path);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka pliku skryptu klienta względem strony sieci Web."
  overload: System.Web.UI.ScriptReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: ScriptReference(String,String)
  nameWithType: ScriptReference.ScriptReference(String,String)
  fullName: System.Web.UI.ScriptReference.ScriptReference(String,String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref> przy użyciu określonej nazwy i zestawu."
  syntax:
    content: public ScriptReference (string name, string assembly);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa pliku skryptu, który jest osadzony w zestawie."
    - id: assembly
      type: System.String
      description: "Nazwa zestawu, który zawiera plik skryptu klienta jako osadzony zasób."
  overload: System.Web.UI.ScriptReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.Assembly
  id: Assembly
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: Assembly
  nameWithType: ScriptReference.Assembly
  fullName: System.Web.UI.ScriptReference.Assembly
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Pobiera lub ustawia nazwę zestawu, który zawiera plik skryptu klienta jako osadzony zasób."
  remarks: "Właściwość zestawu jest ustawiany podczas odwołać plik skryptu klienta, który jest uwzględniona jako osadzonego zasobu w zestawie. Wartość nazwy zestawu w pełni kwalifikowaną lub częściowo kwalifikowanej zestawu. Nazwa zestawu w pełni kwalifikowaną zawiera nazwę, kultury, klucz publiczny i numer wersji. Częściowo kwalifikowanej nazwy zestawu obejmuje tylko nazwę.       Określ wartość dla zestawu, należy również określić, Nazwa osadzonego zasobu w <xref:System.Web.UI.ScriptReference.Name%2A>Właściwości.</xref:System.Web.UI.ScriptReference.Name%2A> W przeciwnym razie <xref:System.InvalidOperationException>będą zgłaszane.</xref:System.InvalidOperationException>       Jest odwołanie do zestawu musi być znajduje się w folderze Bin witryny sieci Web lub w globalnej pamięci podręcznej zestawów."
  example:
  - "The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly. The assembly is assumed to be in the Bin folder of the Web site. The custom control animates <xref:System.Web.UI.UpdatePanel> controls. The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js. You register the embedded JavaScript file by using the Assembly and <xref:System.Web.UI.ScriptReference.Name%2A> properties.  \n  \n To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control. Put the resulting assembly into the Bin folder of the Web site. For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](~/add/includes/ajax-current-ext-md.md).  \n  \n The following example shows a page that uses the custom control.  \n  \n [!code-cs[System.Web.UI.ScriptReference#1](~/add/codesnippet/csharp/p-system.web.ui.scriptre_1_1.aspx)]\n [!code-vb[System.Web.UI.ScriptReference#1](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_1_1.aspx)]  \n  \n The following example shows the custom control class definition.  \n  \n [!code-cs[System.Web.UI.ScriptReference#2](~/add/codesnippet/csharp/p-system.web.ui.scriptre_1_2.cs)]\n [!code-vb[System.Web.UI.ScriptReference#2](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_1_2.vb)]  \n  \n The following example shows the supporting JavaScript file.  \n  \n [!code-javascript[System.Web.UI.ScriptReference#3](~/add/codesnippet/javascript/p-system.web.ui.scriptre_1_3.js)]  \n  \n The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.  \n  \n [!code-cs[System.Web.UI.ScriptReference#4](~/add/codesnippet/csharp/p-system.web.ui.scriptre_1_4.cs)]\n [!code-vb[System.Web.UI.ScriptReference#4](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_1_4.vb)]"
  syntax:
    content: public string Assembly { get; set; }
    return:
      type: System.String
      description: "Nazwa FQDN lub częściowo kwalifikowanej zestawu, który zawiera plik skryptu klienta jako osadzony zasób."
  overload: System.Web.UI.ScriptReference.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)
  id: GetUrl(System.Web.UI.ScriptManager,System.Boolean)
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: GetUrl(ScriptManager,Boolean)
  nameWithType: ScriptReference.GetUrl(ScriptManager,Boolean)
  fullName: System.Web.UI.ScriptReference.GetUrl(ScriptManager,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Pobiera adres URL, który jest renderowany jako wartość <xref uid=&quot;langword_csharp_src&quot; name=&quot;src&quot; href=&quot;&quot;> </xref> atrybutu <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elementu."
  syntax:
    content: protected override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "<xref uid=&quot;langword_csharp_ScriptManager&quot; name=&quot;ScriptManager&quot; href=&quot;&quot;> </xref> Kontrolki na stronie sieci Web docelowej."
    - id: zip
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli skrypt powinien być kompresowane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Ciąg znaków zawierający adres URL, który jest renderowany jako wartość <xref uid=&quot;langword_csharp_src&quot; name=&quot;src&quot; href=&quot;&quot;> </xref> atrybutu <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elementu."
  overload: System.Web.UI.ScriptReference.GetUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.IgnoreScriptPath
  id: IgnoreScriptPath
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: IgnoreScriptPath
  nameWithType: ScriptReference.IgnoreScriptPath
  fullName: System.Web.UI.ScriptReference.IgnoreScriptPath
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Pobiera lub ustawia wartość wskazującą, czy <xref:System.Web.UI.ScriptManager.ScriptPath*>podczas rejestrowania klienta pliku skryptu od zasobu właściwości znajduje się w adresie URL.</xref:System.Web.UI.ScriptManager.ScriptPath*>"
  remarks: "Ustaw IgnoreScriptPath `true` Jeśli chcesz zarejestrować plik skryptu klienta bez uwzględniania <xref:System.Web.UI.ScriptManager.ScriptPath%2A>wartość w adresie URL w pliku skryptu.</xref:System.Web.UI.ScriptManager.ScriptPath%2A>"
  syntax:
    content: public bool IgnoreScriptPath { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ścieżka skryptu nie jest używany podczas rejestrowania skrypt po stronie klienta; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ScriptReference.IgnoreScriptPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)
  id: IsAjaxFrameworkScript(System.Web.UI.ScriptManager)
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: IsAjaxFrameworkScript(ScriptManager)
  nameWithType: ScriptReference.IsAjaxFrameworkScript(ScriptManager)
  fullName: System.Web.UI.ScriptReference.IsAjaxFrameworkScript(ScriptManager)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Określa, czy odwołanie do skryptu jest skrypt AJAX."
  syntax:
    content: protected override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "A <xref href=&quot;System.Web.UI.ScriptManager&quot;></xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli odniesienie skryptu jest skrypt AJAX; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ScriptReference.IsAjaxFrameworkScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.IsFromSystemWebExtensions
  id: IsFromSystemWebExtensions
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: IsFromSystemWebExtensions()
  nameWithType: ScriptReference.IsFromSystemWebExtensions()
  fullName: System.Web.UI.ScriptReference.IsFromSystemWebExtensions()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Wskazuje, czy złożonego skryptu zawiera odwołanie do skryptu programu ASP.NET AJAX framework."
  syntax:
    content: protected override bool IsFromSystemWebExtensions ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli skrypt złożonego zawiera odwołanie do skryptu programu ASP.NET AJAX framework; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ScriptReference.IsFromSystemWebExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.Name
  id: Name
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: Name
  nameWithType: ScriptReference.Name
  fullName: System.Web.UI.ScriptReference.Name
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Pobiera lub ustawia nazwę osadzonego zasobu, który zawiera plik skryptu klienta."
  remarks: "Należy ustawić właściwość Name, aby odwołać plik skryptu klienta, który jest osadzony jako zasób w zestawie.       W przypadku definiowania wartości dla obu <xref:System.Web.UI.ScriptReferenceBase.Path%2A>i nazwa właściwości w odwołanie do tego samego skryptu, <xref:System.Web.UI.ScriptReferenceBase.Path%2A>właściwości ma pierwszeństwo przed.</xref:System.Web.UI.ScriptReferenceBase.Path%2A> </xref:System.Web.UI.ScriptReferenceBase.Path%2A>"
  example:
  - "The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly. The assembly is assumed to be in the Bin folder of the Web site. The custom control animates <xref:System.Web.UI.UpdatePanel> controls. The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js. You register the embedded JavaScript file by using the <xref:System.Web.UI.ScriptReference.Assembly%2A> and Name properties.  \n  \n To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control. Put the resulting assembly into the Bin folder of the Web site. For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](~/add/includes/ajax-current-ext-md.md).  \n  \n The following example shows a page that uses the custom control.  \n  \n [!code-cs[System.Web.UI.ScriptReference#1](~/add/codesnippet/csharp/p-system.web.ui.scriptre_4_1.aspx)]\n [!code-vb[System.Web.UI.ScriptReference#1](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_4_1.aspx)]  \n  \n The following example shows the custom control class definition.  \n  \n [!code-cs[System.Web.UI.ScriptReference#2](~/add/codesnippet/csharp/p-system.web.ui.scriptre_4_2.cs)]\n [!code-vb[System.Web.UI.ScriptReference#2](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_4_2.vb)]  \n  \n The following example shows the supporting JavaScript file.  \n  \n [!code-javascript[System.Web.UI.ScriptReference#3](~/add/codesnippet/javascript/p-system.web.ui.scriptre_4_3.js)]  \n  \n The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.  \n  \n [!code-cs[System.Web.UI.ScriptReference#4](~/add/codesnippet/csharp/p-system.web.ui.scriptre_4_4.cs)]\n [!code-vb[System.Web.UI.ScriptReference#4](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_4_4.vb)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Nazwa pliku skryptu klienta, który jest osadzony jako zasób w zestawie."
  overload: System.Web.UI.ScriptReference.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.ToString
  id: ToString
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: ToString()
  nameWithType: ScriptReference.ToString()
  fullName: System.Web.UI.ScriptReference.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Zwraca ciąg reprezentujący wartość <> </> *> właściwość <> </> *> właściwości lub nazwa typu."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Wartość <> </> *> właściwość, o ile jest on zdefiniowany lub wartość <> </> *> właściwości, jeśli jest zdefiniowana; w przeciwnym razie, wartość <xref:System.Reflection.MemberInfo.Name*>Właściwości.</xref:System.Reflection.MemberInfo.Name*>"
  overload: System.Web.UI.ScriptReference.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.ScriptReferenceBase
  isExternal: false
  name: System.Web.UI.ScriptReferenceBase
- uid: System.Web.UI.ScriptReference.#ctor
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ScriptReference()
  nameWithType: ScriptReference.ScriptReference()
  fullName: System.Web.UI.ScriptReference.ScriptReference()
- uid: System.Web.UI.ScriptReference.#ctor(System.String)
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ScriptReference(String)
  nameWithType: ScriptReference.ScriptReference(String)
  fullName: System.Web.UI.ScriptReference.ScriptReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ScriptReference.#ctor(System.String,System.String)
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ScriptReference(String,String)
  nameWithType: ScriptReference.ScriptReference(String,String)
  fullName: System.Web.UI.ScriptReference.ScriptReference(String,String)
- uid: System.Web.UI.ScriptReference.Assembly
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: Assembly
  nameWithType: ScriptReference.Assembly
  fullName: System.Web.UI.ScriptReference.Assembly
- uid: System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: GetUrl(ScriptManager,Boolean)
  nameWithType: ScriptReference.GetUrl(ScriptManager,Boolean)
  fullName: System.Web.UI.ScriptReference.GetUrl(ScriptManager,Boolean)
- uid: System.Web.UI.ScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ScriptManager
  nameWithType: ScriptManager
  fullName: System.Web.UI.ScriptManager
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ScriptReference.IgnoreScriptPath
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IgnoreScriptPath
  nameWithType: ScriptReference.IgnoreScriptPath
  fullName: System.Web.UI.ScriptReference.IgnoreScriptPath
- uid: System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IsAjaxFrameworkScript(ScriptManager)
  nameWithType: ScriptReference.IsAjaxFrameworkScript(ScriptManager)
  fullName: System.Web.UI.ScriptReference.IsAjaxFrameworkScript(ScriptManager)
- uid: System.Web.UI.ScriptReference.IsFromSystemWebExtensions
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IsFromSystemWebExtensions()
  nameWithType: ScriptReference.IsFromSystemWebExtensions()
  fullName: System.Web.UI.ScriptReference.IsFromSystemWebExtensions()
- uid: System.Web.UI.ScriptReference.Name
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: Name
  nameWithType: ScriptReference.Name
  fullName: System.Web.UI.ScriptReference.Name
- uid: System.Web.UI.ScriptReference.ToString
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ToString()
  nameWithType: ScriptReference.ToString()
  fullName: System.Web.UI.ScriptReference.ToString()
- uid: System.Web.UI.ScriptReference.#ctor*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ScriptReference
  nameWithType: ScriptReference.ScriptReference
- uid: System.Web.UI.ScriptReference.Assembly*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: Assembly
  nameWithType: ScriptReference.Assembly
- uid: System.Web.UI.ScriptReference.GetUrl*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: GetUrl
  nameWithType: ScriptReference.GetUrl
- uid: System.Web.UI.ScriptReference.IgnoreScriptPath*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IgnoreScriptPath
  nameWithType: ScriptReference.IgnoreScriptPath
- uid: System.Web.UI.ScriptReference.IsAjaxFrameworkScript*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IsAjaxFrameworkScript
  nameWithType: ScriptReference.IsAjaxFrameworkScript
- uid: System.Web.UI.ScriptReference.IsFromSystemWebExtensions*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IsFromSystemWebExtensions
  nameWithType: ScriptReference.IsFromSystemWebExtensions
- uid: System.Web.UI.ScriptReference.Name*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: Name
  nameWithType: ScriptReference.Name
- uid: System.Web.UI.ScriptReference.ToString*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ToString
  nameWithType: ScriptReference.ToString
