### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.License
  id: License
  children:
  - System.ComponentModel.License.#ctor
  - System.ComponentModel.License.Dispose
  - System.ComponentModel.License.LicenseKey
  langs:
  - csharp
  name: License
  nameWithType: License
  fullName: System.ComponentModel.License
  type: Class
  summary: "Udostępnia <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> klasę podstawową dla wszystkich licencji. Licencja otrzymuje określonego wystąpienia składnika."
  remarks: "Wszystkie składniki należy wywołać <xref:System.ComponentModel.License.Dispose%2A>licencje przyznają podczas obliczania składnik jest usunięty lub sfinalizowany.</xref:System.ComponentModel.License.Dispose%2A>"
  syntax:
    content: 'public abstract class License : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.License.#ctor
  id: '#ctor'
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: License()
  nameWithType: License.License()
  fullName: System.ComponentModel.License.License()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.License&quot;> </xref> klasy."
  syntax:
    content: protected License ();
    parameters: []
  overload: System.ComponentModel.License.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.License.Dispose
  id: Dispose
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: Dispose()
  nameWithType: License.Dispose()
  fullName: System.ComponentModel.License.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "W przypadku przesłonięcia w klasie pochodnej usuwa zasoby używane przez licencji."
  remarks: "Wszystkie składniki należy wywołać metodę Dispose dla licencji, które udzielają, gdy składnik jest usuwane lub sfinalizowany.       A <xref:System.ComponentModel.LicenseProvider>można użyć licencji, domyślnie przyzna śledzić jego użycie.</xref:System.ComponentModel.LicenseProvider>       Wywołaj metodę Dispose po zakończeniu przy użyciu <xref:System.ComponentModel.License>.</xref:System.ComponentModel.License> Metoda Dispose pozostawia <xref:System.ComponentModel.License>w stanie uniemożliwiającym jego używanie.</xref:System.ComponentModel.License> Po wywołaniu metody Dispose, konieczne jest zwolnienie wszystkich odwołań do <xref:System.ComponentModel.License>, można odzyskać pamięci, jej klasy przez wyrzucanie elementów bezużytecznych.</xref:System.ComponentModel.License>      > [!NOTE] > Wywołania zawsze dysponować przed zwolnieniem ostatniego odwołania do <xref:System.ComponentModel.License>.</xref:System.ComponentModel.License> W przeciwnym razie zasoby <xref:System.ComponentModel.License>jest przy użyciu nie zostanie zwolniona, dopóki wywołania kolekcji pamięci <xref:System.ComponentModel.License>obiektu destruktora.</xref:System.ComponentModel.License> </xref:System.ComponentModel.License>"
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.ComponentModel.License.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.License.LicenseKey
  id: LicenseKey
  parent: System.ComponentModel.License
  langs:
  - csharp
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: System.ComponentModel.License.LicenseKey
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "W przypadku przesłonięcia w klasie pochodnej pobiera klucz licencji przyznane dla tego składnika."
  remarks: "A <xref:System.ComponentModel.LicenseProvider>można użyć dowolnego ciągu znaków Unicode jako klucza licencji.</xref:System.ComponentModel.LicenseProvider> Element LicenseKey powinien być traktowany jako nieprzezroczyste pliku cookie, oznacza to, pliku cookie z celowo ukryte struktury wewnętrznej."
  syntax:
    content: public abstract string LicenseKey { get; }
    return:
      type: System.String
      description: "Klucz licencji przyznane dla tego składnika."
  overload: System.ComponentModel.License.LicenseKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.License.#ctor
  parent: System.ComponentModel.License
  isExternal: false
  name: License()
  nameWithType: License.License()
  fullName: System.ComponentModel.License.License()
- uid: System.ComponentModel.License.Dispose
  parent: System.ComponentModel.License
  isExternal: false
  name: Dispose()
  nameWithType: License.Dispose()
  fullName: System.ComponentModel.License.Dispose()
- uid: System.ComponentModel.License.LicenseKey
  parent: System.ComponentModel.License
  isExternal: false
  name: LicenseKey
  nameWithType: License.LicenseKey
  fullName: System.ComponentModel.License.LicenseKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.License.#ctor*
  parent: System.ComponentModel.License
  isExternal: false
  name: License
  nameWithType: License.License
- uid: System.ComponentModel.License.Dispose*
  parent: System.ComponentModel.License
  isExternal: false
  name: Dispose
  nameWithType: License.Dispose
- uid: System.ComponentModel.License.LicenseKey*
  parent: System.ComponentModel.License
  isExternal: false
  name: LicenseKey
  nameWithType: License.LicenseKey
