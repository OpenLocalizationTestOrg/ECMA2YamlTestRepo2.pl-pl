### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleBFile
  id: OracleBFile
  children:
  - System.Data.OracleClient.OracleBFile.CanRead
  - System.Data.OracleClient.OracleBFile.CanSeek
  - System.Data.OracleClient.OracleBFile.CanWrite
  - System.Data.OracleClient.OracleBFile.Clone
  - System.Data.OracleClient.OracleBFile.Connection
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleBFile.DirectoryName
  - System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleBFile.FileExists
  - System.Data.OracleClient.OracleBFile.FileName
  - System.Data.OracleClient.OracleBFile.Flush
  - System.Data.OracleClient.OracleBFile.IsNull
  - System.Data.OracleClient.OracleBFile.Length
  - System.Data.OracleClient.OracleBFile.Null
  - System.Data.OracleClient.OracleBFile.Position
  - System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  - System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  - System.Data.OracleClient.OracleBFile.Value
  - System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
  type: Class
  summary: "Reprezentuje obiekt zarządzany OracleBFile przeznaczona do pracy z bazą danych Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> typu danych. Ta klasa nie może być dziedziczona."
  remarks: "Oracle `BFILE` ma typ danych Oracle `LOB` typ danych, który zawiera odwołanie do danych binarnych o maksymalnym rozmiarze 4 gigabajty. Oracle `BFILE` różni się od innych Oracle `LOB` typy danych, ponieważ jego dane są przechowywane w pliku fizycznego w systemie operacyjnym, a nie na serwerze. Należy pamiętać, że `BFILE` — typ danych zapewnia dostęp do danych tylko do odczytu. W związku z tym zorientowane na zapis metody odziedziczone <xref:System.IO.Stream>klasy nie są obsługiwane.</xref:System.IO.Stream>       Inne właściwości `BFILE` typ danych, który odróżniający go od `LOB` — typ danych są jego:-zawiera dane bez struktury.      — Obsługuje podziału po stronie serwera.      -Używa odwoływać się do kopiowania semantyki. Na przykład, jeśli operacja kopiowania na `BFILE`, tylko `BFILE` jest kopiowany Lokalizator (która jest odwołanie do pliku). Dane w pliku nie zostaną skopiowane.       `BFILE` Typ danych powinien być używany dla przywołującego `LOB`ma duże i w związku z tym praktycznych nie mają być przechowywane w bazie danych. Brak obciążenie klienta, serwera i komunikacji przy użyciu `BFILE` — typ danych w porównaniu do `LOB` — typ danych. Bardziej wydajny dostęp do `BFILE` Jeśli należy uzyskać niewielką ilość danych. Jest bardziej wydajne do dostępu do bazy danych rezydentne `LOB`s, jeśli trzeba uzyskać całego obiektu.       Każdy obiekt z systemem innym niż - NULL OracleBFile jest skojarzona z dwoma obiektami, które określają lokalizację pliku fizycznego:-DIRECTORY Oracle obiektu, który jest alias bazy danych dla katalogu w systemie plików i — nazwa pliku źródłowego pliku fizycznego znajduje się w katalogu skojarzony z obiektem katalogu.       Po `BFILE` jest utworzony, można pobrać jego lokalizatora w postaci obiektu OracleBFile przy użyciu <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>lub <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>metody.</xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       Aby uzyskać obiekt OracleBFile, należy wywołać <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>metody.</xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>       Skojarzonego obiektu OracleBFile z pliku fizycznego nie musi istnieć do momentu próba do niego dostęp. Aplikację można powiązać OracleBFile nieistniejący plik, utworzenia pliku fizycznego w oczekiwanej lokalizacji, a następnie wywołać <xref:System.Data.OracleClient.OracleBFile.Read%2A>.</xref:System.Data.OracleClient.OracleBFile.Read%2A>       Próby dostępu zamkniętej przy użyciu OracleBFile <xref:System.Data.OracleClient.OracleBFile.Read%2A>lub <xref:System.Data.OracleClient.OracleBFile.Seek%2A>metody ponownie automatycznie otwiera strumienia OracleBFile.</xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile.Read%2A>       W poniższym przykładzie C# pokazano, jak utworzyć `BFILE` w oprogramowaniu Oracle tabeli, a następnie pobrać go w formie obiektu OracleBFile. W przykładzie pokazano użycie <xref:System.Data.OracleClient.OracleDataReader>obiekt i OracleBFile<xref:System.Data.OracleClient.OracleBFile.Seek%2A> i <xref:System.Data.OracleClient.OracleBFile.Read%2A>metody.</xref:System.Data.OracleClient.OracleBFile.Read%2A> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleDataReader>       [!code-cs[DataWorks OracleClient.BFile#1](~/add/codesnippet/csharp/t-system.data.oracleclie_3_1.cs) ] Aby uzyskać więcej informacji na temat tworzenia i używania programu Oracle `BFILE`, zobacz odpowiedni temat w dokumentacji programu Oracle.      > [!NOTE] > `BeginWrite`, `EndWrite`, I `WriteByte` metody, które są dziedziczone z `System.IO.Stream` klasa, nie są obsługiwane, ponieważ `BFILE` — typ danych jest tylko do odczytu."
  syntax:
    content: 'public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera wartość wskazującą czy <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> można odczytać strumienia."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Jeśli <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> jest zamknięty lub usunięty; w przeciwnym <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera wartość wskazującą czy wyszukiwania do przodu i do tyłu — wyszukiwanie działań mogą być wykonywane."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Jeśli <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> jest zamknięty lub usunięty; w przeciwnym <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera wartość wskazującą, czy obiekt obsługuje zapisu."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "Zawsze zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> ponieważ programu Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> — typ danych jest tylko do odczytu."
  overload: System.Data.OracleClient.OracleBFile.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Tworzy kopię tego <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> obiekt skojarzony z tego samego pliku fizycznego co oryginalny."
  remarks: "Właściwości nowego <xref:System.Data.OracleClient.OracleBFile>obiekt początkowo ma takie same wartości jak oryginalny obiekt.</xref:System.Data.OracleClient.OracleBFile> Jednak po klonowania zostanie zakończone, każdy <xref:System.Data.OracleClient.OracleBFile>obiekt jest niezależna od innych.</xref:System.Data.OracleClient.OracleBFile> Na przykład zmiana wartości <xref:System.Data.OracleClient.OracleBFile.Position%2A>Właściwości w pierwotnej <xref:System.Data.OracleClient.OracleBFile>nie zmienia wartości <xref:System.Data.OracleClient.OracleBFile.Position%2A>na kopii.</xref:System.Data.OracleClient.OracleBFile.Position%2A> </xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Position%2A>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Nowy <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> obiekt skojarzony z tego samego pliku fizycznego jak oryginał <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> obiektu."
  overload: System.Data.OracleClient.OracleBFile.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> używane przez to wystąpienie <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "Połączenie ze źródłem danych. Wartość domyślna to wartość null."
  overload: System.Data.OracleClient.OracleBFile.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kopiuje całą zawartość <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> na początku miejsca docelowego <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Podstawowe typy danych źródła <xref:System.Data.OracleClient.OracleBFile>i miejsce docelowe <xref:System.Data.OracleClient.OracleLob>muszą być zgodne.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Na przykład nie można skopiować dane binarne do miejsca docelowego <xref:System.Data.OracleClient.OracleLob>mający typ danych znakowych.</xref:System.Data.OracleClient.OracleLob>       Masz dostęp do zapisu do tego miejsca docelowego <xref:System.Data.OracleClient.OracleLob>na poprawnego wykonania operacji CopyTo.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "Miejsce docelowe<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    return:
      type: System.Int64
      description: "Liczba bajtów skopiowanych."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Miejsce docelowe <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> jest odwołaniem do obiektu o wartości null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Obiekt docelowy ma wartość null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       - lub - połączenia, z której ta <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> skojarzony jest zamknięty."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> Obiekt jest zamknięty lub usunięty."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kopiuje całą zawartość <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> do miejsca docelowego <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> od wskazanego przesunięcia."
  remarks: "Podstawowe typy danych źródła <xref:System.Data.OracleClient.OracleBFile>i miejsce docelowe <xref:System.Data.OracleClient.OracleLob>muszą być zgodne.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Na przykład nie można skopiować dane binarne do miejsca docelowego <xref:System.Data.OracleClient.OracleLob>mający typ danych znakowych.</xref:System.Data.OracleClient.OracleLob>       Masz dostęp do zapisu do tego miejsca docelowego <xref:System.Data.OracleClient.OracleLob>dla <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>poprawnie wykonanie operacji.</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "Miejsce docelowe <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    - id: destinationOffset
      type: System.Int64
      description: "Przesunięcie, do którego zostaną skopiowane."
    return:
      type: System.Int64
      description: "Liczba bajtów skopiowanych."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Miejsce docelowe <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> jest odwołaniem do obiektu o wartości null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Obiekt docelowy ma wartość null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       - lub - połączenia, z której ta <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> skojarzony jest zamknięty."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> Obiekt jest zamknięty lub usunięty."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kopie z tej <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> do miejsca docelowego <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> z określoną ilością danych, przesunięcie źródła i Przesunięcie docelowe."
  remarks: "Podstawowe typy danych źródła <xref:System.Data.OracleClient.OracleBFile>i miejsce docelowe <xref:System.Data.OracleClient.OracleLob>muszą być zgodne.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Na przykład nie można skopiować dane binarne do miejsca docelowego <xref:System.Data.OracleClient.OracleLob>mający typ danych znakowych.</xref:System.Data.OracleClient.OracleLob>       Masz dostęp do zapisu do tego miejsca docelowego <xref:System.Data.OracleClient.OracleLob>dla <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>poprawnie wykonanie operacji.</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "Przesunięcie do skopiowania."
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "Miejsce docelowe <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    - id: destinationOffset
      type: System.Int64
      description: "Przesunięcie, do którego zostaną skopiowane."
    - id: amount
      type: System.Int64
      description: "Ilość danych w bajtach, aby skopiować."
    return:
      type: System.Int64
      description: "Liczba bajtów skopiowanych."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość parametru kwota jest mniejsza niż zero lub większa niż 4 GB."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Miejsce docelowe <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> jest odwołaniem do obiektu o wartości null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Obiekt docelowy ma wartość null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       - lub - połączenia, z której ta <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> skojarzony jest zamknięty."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> Obiekt jest zamknięty lub usunięty."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  id: DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera nazwę obiektu katalogu, z którym <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> obiekt jest skojarzony."
  remarks: "Każdy z systemem innym niż NULL <xref:System.Data.OracleClient.OracleBFile>obiekt jest skojarzony z dwoma obiektami definiujące lokalizacji podstawowego pliku fizycznego:-katalogu Oracle obiektu, który jest alias bazy danych dla katalogu w systemie plików i — nazwa pliku źródłowego pliku fizycznego znajduje się w katalogu skojarzony z obiektem katalogu.</xref:System.Data.OracleClient.OracleBFile>       Właściwość DirectoryName zwraca nazwę obiektu katalogu z bazy danych programu Oracle.       Aby uzyskać więcej informacji na temat tworzenia i używania programu Oracle `BFILE`, zobacz odpowiedni temat w dokumentacji programu Oracle."
  syntax:
    content: public string DirectoryName { get; }
    return:
      type: System.String
      description: "Nazwa obiektu katalogu."
  overload: System.Data.OracleClient.OracleBFile.DirectoryName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Nastąpiła próba wywołania <xref uid=&quot;langword_csharp_DirectoryName&quot; name=&quot;DirectoryName&quot; href=&quot;&quot;> </xref> na zamknięty lub usunięty <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> obiektu."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Do dodania."
  overload: System.Data.OracleClient.OracleBFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileExists
  id: FileExists
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera wartość wskazującą, czy fizycznego pliku zawierającego <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> danych istnieje w systemie operacyjnym."
  syntax:
    content: public bool FileExists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli fizycznego pliku zawierającego <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> danych istnieje; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleBFile.FileExists*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> Obiekt jest zamknięty lub usunięty."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Połączenia, z którym <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> skojarzony jest zamknięty."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileName
  id: FileName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera nazwę <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> bez ścieżki."
  remarks: "Aby uzyskać <xref:System.Data.OracleClient.OracleBFile.Null>, zwracany jest pustym ciągiem.</xref:System.Data.OracleClient.OracleBFile.Null>"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "Nazwa BPLIK."
  overload: System.Data.OracleClient.OracleBFile.FileName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> Obiekt jest zamknięty lub usunięty."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Nie są obecnie obsługiwane."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleBFile.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera wartość wskazującą, czy <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> jest <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref> strumienia."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Length
  id: Length
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera wartość, która zwraca długość w bajtach pliku fizycznego, z którym <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> obiekt jest skojarzony."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "Wartość typu long reprezentujący długość fizycznego pliku w bajtach."
  overload: System.Data.OracleClient.OracleBFile.Length*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metody wywołane po strumień został zamknięty lub usunięty."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Reprezentuje wartość null <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> obiekt, który nie jest powiązany z pliku fizycznego."
  remarks: "Wartość null mogą być przydatne, jeśli chcesz wykonać operacji porównywania w <xref:System.Data.OracleClient.OracleBFile>ustalenie dopuszczania wartości null.</xref:System.Data.OracleClient.OracleBFile>       Próba wykonania operacji odczytu dla obiektu Null zakończy się pomyślnie, ale nie zwrócił żadnych danych. Próba wykonania operacji zapisu dla obiektu Null generuje wyjątek. Wybieranie `BFILE` kolumny, która zawiera wartość null, zwraca wartość Null."
  syntax:
    content: public static readonly System.Data.OracleClient.OracleBFile Null;
    return:
      type: System.Data.OracleClient.OracleBFile
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Position
  id: Position
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera bieżący odczytu pozycja w <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> strumienia."
  remarks: "Wyszukiwanie w dowolne miejsce powyżej długość strumienia nie jest obsługiwane.       `Position` Właściwości nie zachować śledzić liczbę bajtów ze strumienia, który zostały wykorzystane, zostało pominięte, lub obie."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "Bieżąca pozycja w <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> strumienia."
  overload: System.Data.OracleClient.OracleBFile.Position*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Podjęto próbę ustawienia pozycji z wartością ujemną lub większą niż długość strumienia."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metody wywołane po strumień został zamknięty lub usunięty."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Odczytuje sekwencję bajtów z bieżącego <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> strumienia i poprawę pozycji w strumieniu przez liczbę bajtów do odczytu."
  remarks: "Metody Read odczytu maksymalnie `count` bajtów z bieżącego strumienia i przechowywać je w `buffer` począwszy od `offset`. Bieżącą pozycję w strumieniu jest zaawansowane przez liczbę bajtów odczytanych; Jednak jeśli wystąpi wyjątek, bieżącą pozycję w strumieniu nie jest zmieniany. Odczyt zwraca liczbę bajtów do odczytu. Zwracana wartość wynosi zero, tylko wtedy, gdy pozycja jest obecnie na koniec strumienia. Odczyt zablokuje dopóki co najmniej jednego bajtu danych mogą być odczytywane; w przypadku, gdy nie są dostępne żadne dane. Przeczytaj zwraca wartość 0, tylko wtedy, gdy zostanie osiągnięty koniec pliku. Odczyt jest bezpłatna do zwrócenia mniej bajtów niż żądana, nawet jeżeli nie osiągnięto koniec strumienia.       Próby uzyskania dostępu do zamkniętej <xref:System.Data.OracleClient.OracleBFile>przy użyciu odczytu lub <xref:System.Data.OracleClient.OracleBFile.Seek%2A>ponownie otwierane metody <xref:System.Data.OracleClient.OracleBFile>automatycznie strumienia.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile>       W poniższym przykładzie C# zakłada ten schemat tabeli Oracle: ```   (col1 number, col2 BFILE)   ``` w przykładzie pokazano, za pomocą do odczytu i <xref:System.Data.OracleClient.OracleBFile.Seek%2A>metod dostępu do <xref:System.Data.OracleClient.OracleBFile>obiektu.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Tablica bajtów. Po powrocie z tej metody bufor zawiera określonej tablicy bajtów z wartością pomiędzy `offset` i (`offset` + `count`) zastępuje Bajty odczytane z bieżącego źródła."
    - id: offset
      type: System.Int32
      description: "Zerze przesunięcie w `buffer` rozpoczęcia przechowywania danych przeczytanie z bieżącego strumienia."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba bajtów, które mają być odczytane z bieżącego strumienia."
    return:
      type: System.Int32
      description: "Całkowita liczba bajtów odczytanych w buforze. To może być mniejsza niż żądana liczba bajtów Jeśli czy wiele bajtów nie są obecnie dostępne, lub zero, jeśli został osiągnięty koniec pliku."
  overload: System.Data.OracleClient.OracleBFile.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Suma <code> offset </code> i <code> count </code> jest większa niż długość buforu."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>to odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>lub <code>count</code> jest ujemna."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Połączenia, z którym <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> skojarzony jest zamknięty."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metody wywołane po strumień został zamknięty lub usunięty."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ustawia położenie na bieżącej <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> strumienia."
  remarks: "Jeśli `offset` jest ujemna, nowe miejsce wymagane do poprzedzać pozycja określona przez `origin` przez liczbę bajtów określona przez `offset`. Jeśli `offset` wynosi zero, nowe położenie jest musi być pozycja określona przez `origin`. Jeśli `offset` jest dodatnia, nowe położenie jest wymagana do wykonania pozycja określona przez `origin` przez liczbę bajtów określona przez `offset`.       Wyszukiwanie w dowolne miejsce powyżej długość strumienia nie jest obsługiwane.       Próby uzyskania dostępu do zamkniętej <xref:System.Data.OracleClient.OracleBFile>przy użyciu <xref:System.Data.OracleClient.OracleBFile.Read%2A>lub wyszukiwanie ponownie otwierane metody <xref:System.Data.OracleClient.OracleBFile>automatycznie strumienia.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Read%2A> </xref:System.Data.OracleClient.OracleBFile>       W poniższym przykładzie C# zakłada ten schemat tabeli Oracle: ```   (col1 number, col2 BFILE)   ``` w przykładzie pokazano, przy użyciu <xref:System.Data.OracleClient.OracleBFile.Read%2A>i wyszukiwania w metodach dostępu <xref:System.Data.OracleClient.OracleBFile>obiektu.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Read%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Przesunięcie bajtów, względem źródła. Jeśli `offset` jest ujemna, Nowa pozycja jest poprzedzony pozycja określona przez `origin` przez liczbę bajtów określona przez `offset`. Jeśli `offset` wynosi zero, nowe miejsce będzie pozycja określona przez `origin`. Jeśli `offset` jest dodatnia, nowe położenie zastosują się pozycja określona przez `origin` przez liczbę bajtów określona przez `offset`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Wartości typu <xref uid=&quot;langword_csharp_System.IO.SeekOrigin&quot; name=&quot;System.IO.SeekOrigin&quot; href=&quot;&quot;> </xref> wskazujący punkt odniesienia używany do uzyskania nowego położenia."
    return:
      type: System.Int64
      description: "Nowa pozycja w ramach bieżącego strumienia."
  overload: System.Data.OracleClient.OracleBFile.Seek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Podjęto próbę ustawienia pozycji z wartością ujemną lub większą niż długość strumienia."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Metody wywołane po strumień został zamknięty lub usunięty."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  id: SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Wiąże <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> obiektu do innego pliku w systemie operacyjnym."
  remarks: "Operacja SetFileName musi znajdować się w obrębie transakcji powiodło się. Po prostu wywoływanie SetFileName `BFILE` kojarzy <xref:System.Data.OracleClient.OracleBFile>obiektu przy użyciu innego pliku, ale nie została zaktualizowana w tabeli programu Oracle.</xref:System.Data.OracleClient.OracleBFile> Aby zaktualizować tabeli Oracle po wywołaniu metody SetFileName, należy wywołać `Update` metody <xref:System.Data.OracleClient.OracleDataAdapter>, a następnie zatwierdzić transakcji.</xref:System.Data.OracleClient.OracleDataAdapter>       Po pobraniu <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>lub <xref:System.Data.OracleClient.OracleBFile.FileName%2A>Właściwości, są one buforowane w <xref:System.Data.OracleClient.OracleBFile>obiektu i nie podlegają żadnego sklonować <xref:System.Data.OracleClient.OracleBFile>obiektów wywołania do SetFileName lub zmiany `BFILE` w bazie danych.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.FileName%2A> </xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> Innymi słowy, może nie reprezentują rzeczywiste wartości `BFILE` obiektu na serwerze.       Ponadto podczas pobierania właściwości albo (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> lub <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) powoduje, że obie wartości właściwości do pobrania z serwera i w pamięci podręcznej <xref:System.Data.OracleClient.OracleBFile>obiektu.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.FileName%2A> </xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>       W poniższym przykładzie C# zakłada ten schemat tabeli Oracle: ```   (col1 number, col2 BFILE)   ``` w przykładzie pokazano, za pomocą SetFileName, <xref:System.Data.OracleClient.OracleBFile.Read%2A>i <xref:System.Data.OracleClient.OracleBFile.Seek%2A>metod dostępu do <xref:System.Data.OracleClient.OracleBFile>obiektu.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile.Read%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {           OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);               command.Transaction = connection.BeginTransaction();               BFile.SetFileName(&quot;TESTDIR&quot;, &quot;File1.jpg&quot;);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public void SetFileName (string directory, string file);
    parameters:
    - id: directory
      type: System.String
      description: "Alias obiektu katalogu, który zawiera plik fizyczny."
    - id: file
      type: System.String
      description: "Nazwa pliku w systemie operacyjnym."
  overload: System.Data.OracleClient.OracleBFile.SetFileName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Operacja musi znajdować się w obrębie transakcji."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Nie są obecnie obsługiwane."
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Nie są obecnie obsługiwane."
  overload: System.Data.OracleClient.OracleBFile.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Wyjątek zgłaszany, gdy jest wywoływana metoda nie jest obsługiwany lub jest próba odczytu, wyszukiwanie lub zapisać do strumienia, który nie obsługuje wywołanej funkcji."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Value
  id: Value
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Pobiera <xref:System.Array>typu <xref:System.Byte>zawierający <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> danych.</xref:System.Byte> </xref:System.Array>"
  remarks: "Wartość właściwości odczytuje całą `BFILE` w tym samym czasie.      > [!NOTE] > Zaletą używania `BFILE`s jest możliwość pobierania dużych ilości danych w fragmentów po stronie klienta. Jednak gdy używasz wartość można uzyskać wszystkie dane dla kolumny BPLIK jako jednym fragmencie ciągłym, która może znacznie zwiększyć obciążenie aplikacji."
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "<xref:System.Array>Typu <xref:System.Byte>zawierający <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> danych.</xref:System.Byte> </xref:System.Array>"
  overload: System.Data.OracleClient.OracleBFile.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Nie są obecnie obsługiwane."
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Nie są obecnie obsługiwane."
    - id: offset
      type: System.Int32
      description: "Nie są obecnie obsługiwane."
    - id: count
      type: System.Int32
      description: "Nie są obecnie obsługiwane."
  overload: System.Data.OracleClient.OracleBFile.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Wyjątek zgłaszany, gdy jest wywoływana metoda nie jest obsługiwany lub jest próba odczytu, wyszukiwanie lub zapisać do strumienia, który nie obsługuje wywołanej funkcji."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.OracleClient.OracleBFile.CanRead
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleBFile.Connection
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleBFile.FileExists
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
- uid: System.Data.OracleClient.OracleBFile.IsNull
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Null
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
- uid: System.Data.OracleClient.OracleBFile
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
- uid: System.Data.OracleClient.OracleBFile.Position
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
- uid: System.Data.OracleClient.OracleBFile.Value
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleBFile.CanRead*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
- uid: System.Data.OracleClient.OracleBFile.CanSeek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone
  nameWithType: OracleBFile.Clone
- uid: System.Data.OracleClient.OracleBFile.Connection*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
- uid: System.Data.OracleClient.OracleBFile.CopyTo*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo
  nameWithType: OracleBFile.CopyTo
- uid: System.Data.OracleClient.OracleBFile.DirectoryName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
- uid: System.Data.OracleClient.OracleBFile.Dispose*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose
  nameWithType: OracleBFile.Dispose
- uid: System.Data.OracleClient.OracleBFile.FileExists*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush
  nameWithType: OracleBFile.Flush
- uid: System.Data.OracleClient.OracleBFile.IsNull*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Position*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read
  nameWithType: OracleBFile.Read
- uid: System.Data.OracleClient.OracleBFile.Seek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek
  nameWithType: OracleBFile.Seek
- uid: System.Data.OracleClient.OracleBFile.SetFileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName
  nameWithType: OracleBFile.SetFileName
- uid: System.Data.OracleClient.OracleBFile.SetLength*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength
  nameWithType: OracleBFile.SetLength
- uid: System.Data.OracleClient.OracleBFile.Value*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write
  nameWithType: OracleBFile.Write
