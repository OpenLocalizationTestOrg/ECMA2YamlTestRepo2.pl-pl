### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.Rules.RuleAnalysis
  id: RuleAnalysis
  children:
  - System.Workflow.Activities.Rules.RuleAnalysis.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)
  - System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol(System.String)
  - System.Workflow.Activities.Rules.RuleAnalysis.ForWrites
  - System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols
  langs:
  - csharp
  name: RuleAnalysis
  nameWithType: RuleAnalysis
  fullName: System.Workflow.Activities.Rules.RuleAnalysis
  type: Class
  summary: "Przechowuje pola i właściwości odczytu warunku lub zapisywana przez akcję."
  remarks: "Informacje przechowywane w RuleAnalysis jest ważne, ponieważ określa on zależności i efekty uboczne reguły w zestawie reguł. Te zależności i efekty uboczne stacji CBC zachowanie."
  syntax:
    content: public class RuleAnalysis
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleAnalysis.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)
  id: '#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)'
  parent: System.Workflow.Activities.Rules.RuleAnalysis
  langs:
  - csharp
  name: RuleAnalysis(RuleValidation,Boolean)
  nameWithType: RuleAnalysis.RuleAnalysis(RuleValidation,Boolean)
  fullName: System.Workflow.Activities.Rules.RuleAnalysis.RuleAnalysis(RuleValidation,Boolean)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Workflow.Activities.Rules.RuleAnalysis&quot;> </xref> klasy."
  syntax:
    content: public RuleAnalysis (System.Workflow.Activities.Rules.RuleValidation validation, bool forWrites);
    parameters:
    - id: validation
      type: System.Workflow.Activities.Rules.RuleValidation
      description: "<xref href=&quot;System.Workflow.Activities.Rules.RuleValidation&quot;> </xref> Do zarządzania procesem weryfikacji."
    - id: forWrites
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> wartość, która wskazuje, czy analiza jest wykonywana w przypadku zapisów (w odniesieniu <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> obiektów) lub odczytuje (w przypadku liczby <xref href=&quot;System.Workflow.Activities.Rules.RuleCondition&quot;> </xref> obiektów)."
  overload: System.Workflow.Activities.Rules.RuleAnalysis.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol(System.String)
  id: AddSymbol(System.String)
  parent: System.Workflow.Activities.Rules.RuleAnalysis
  langs:
  - csharp
  name: AddSymbol(String)
  nameWithType: RuleAnalysis.AddSymbol(String)
  fullName: System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol(String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Dodaje pola i właściwości używanych przez wyrażenie jako symbole <xref href=&quot;System.Workflow.Activities.Rules.RuleAnalysis&quot;> </xref> wystąpienia."
  remarks: "Metoda AddSymbol umożliwia dodawanie pól i właściwości używanych przez wyrażenie do listy symboli dla <xref:System.Workflow.Activities.Rules.RuleAnalysis>wystąpienia.</xref:System.Workflow.Activities.Rules.RuleAnalysis>"
  syntax:
    content: public void AddSymbol (string symbol);
    parameters:
    - id: symbol
      type: System.String
      description: "Ciąg, który reprezentuje ścieżkę do pola lub właściwości."
  overload: System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleAnalysis.ForWrites
  id: ForWrites
  parent: System.Workflow.Activities.Rules.RuleAnalysis
  langs:
  - csharp
  name: ForWrites
  nameWithType: RuleAnalysis.ForWrites
  fullName: System.Workflow.Activities.Rules.RuleAnalysis.ForWrites
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Pobiera wartość wskazującą, czy analiza jest wykonywana w ramach zapisuje lub odczytuje."
  syntax:
    content: public bool ForWrites { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli analiza jest wykonywana w przypadku zapisów (w odniesieniu <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> obiektów); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli analiza jest wykonywana w ramach operacji odczytu (w przypadku liczby <xref href=&quot;System.Workflow.Activities.Rules.RuleCondition&quot;> </xref> obiektów)."
  overload: System.Workflow.Activities.Rules.RuleAnalysis.ForWrites*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols
  id: GetSymbols
  parent: System.Workflow.Activities.Rules.RuleAnalysis
  langs:
  - csharp
  name: GetSymbols()
  nameWithType: RuleAnalysis.GetSymbols()
  fullName: System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Zwraca listę symboli z <xref href=&quot;System.Workflow.Activities.Rules.RuleAnalysis&quot;> </xref> wystąpienia."
  syntax:
    content: public System.Collections.Generic.ICollection<string> GetSymbols ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Lista symboli dla <xref href=&quot;System.Workflow.Activities.Rules.RuleAnalysis&quot;> </xref> wystąpienia."
  overload: System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Workflow.Activities.Rules.RuleAnalysis.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)
  parent: System.Workflow.Activities.Rules.RuleAnalysis
  isExternal: false
  name: RuleAnalysis(RuleValidation,Boolean)
  nameWithType: RuleAnalysis.RuleAnalysis(RuleValidation,Boolean)
  fullName: System.Workflow.Activities.Rules.RuleAnalysis.RuleAnalysis(RuleValidation,Boolean)
- uid: System.Workflow.Activities.Rules.RuleValidation
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleValidation
  nameWithType: RuleValidation
  fullName: System.Workflow.Activities.Rules.RuleValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol(System.String)
  parent: System.Workflow.Activities.Rules.RuleAnalysis
  isExternal: false
  name: AddSymbol(String)
  nameWithType: RuleAnalysis.AddSymbol(String)
  fullName: System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.Rules.RuleAnalysis.ForWrites
  parent: System.Workflow.Activities.Rules.RuleAnalysis
  isExternal: false
  name: ForWrites
  nameWithType: RuleAnalysis.ForWrites
  fullName: System.Workflow.Activities.Rules.RuleAnalysis.ForWrites
- uid: System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols
  parent: System.Workflow.Activities.Rules.RuleAnalysis
  isExternal: false
  name: GetSymbols()
  nameWithType: RuleAnalysis.GetSymbols()
  fullName: System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols()
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.Rules.RuleAnalysis.#ctor*
  parent: System.Workflow.Activities.Rules.RuleAnalysis
  isExternal: false
  name: RuleAnalysis
  nameWithType: RuleAnalysis.RuleAnalysis
- uid: System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol*
  parent: System.Workflow.Activities.Rules.RuleAnalysis
  isExternal: false
  name: AddSymbol
  nameWithType: RuleAnalysis.AddSymbol
- uid: System.Workflow.Activities.Rules.RuleAnalysis.ForWrites*
  parent: System.Workflow.Activities.Rules.RuleAnalysis
  isExternal: false
  name: ForWrites
  nameWithType: RuleAnalysis.ForWrites
- uid: System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols*
  parent: System.Workflow.Activities.Rules.RuleAnalysis
  isExternal: false
  name: GetSymbols
  nameWithType: RuleAnalysis.GetSymbols
