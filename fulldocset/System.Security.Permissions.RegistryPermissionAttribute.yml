### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.RegistryPermissionAttribute
  id: RegistryPermissionAttribute
  children:
  - System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.RegistryPermissionAttribute.All
  - System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl
  - System.Security.Permissions.RegistryPermissionAttribute.Create
  - System.Security.Permissions.RegistryPermissionAttribute.CreatePermission
  - System.Security.Permissions.RegistryPermissionAttribute.Read
  - System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl
  - System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify
  - System.Security.Permissions.RegistryPermissionAttribute.Write
  langs:
  - csharp
  name: RegistryPermissionAttribute
  nameWithType: RegistryPermissionAttribute
  fullName: System.Security.Permissions.RegistryPermissionAttribute
  type: Class
  summary: "Zezwala na akcje zabezpieczeń dla <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> ma zostać zastosowany do kodu przy użyciu zabezpieczeń deklaratywnych. Ta klasa nie może być dziedziczona."
  remarks: "Zależy od zakresu deklaracji, która jest dozwolona <xref:System.Security.Permissions.SecurityAction>używany.</xref:System.Security.Permissions.SecurityAction>       Informacji o zabezpieczeniach deklaruje atrybutu zabezpieczeń są przechowywane w metadanych elementu docelowego atrybutu i jest dostępny przez system w czasie wykonywania. Atrybuty zabezpieczeń są używane tylko w przypadku zabezpieczenia deklaratywne. Zabezpieczenia imperatywne można użyć w klasie odpowiednie uprawnienia."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RegistryPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: RegistryPermissionAttribute(SecurityAction)
  nameWithType: RegistryPermissionAttribute.RegistryPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.RegistryPermissionAttribute.RegistryPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Permissions.RegistryPermissionAttribute&quot;> </xref> klasy z określonym <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>."
  syntax:
    content: public RegistryPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "Jeden z <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> wartości."
  overload: System.Security.Permissions.RegistryPermissionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> action </code> Parametru nie jest prawidłową <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.All
  id: All
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: All
  nameWithType: RegistryPermissionAttribute.All
  fullName: System.Security.Permissions.RegistryPermissionAttribute.All
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia pełny dostęp do kluczy rejestru określony."
  remarks: "Dostęp do klucza oznacza dostęp do wszystkich jego podkluczy i wartości wszystkie."
  syntax:
    content: public string All { get; set; }
    return:
      type: System.String
      description: "Rozdzielana średnikami lista ścieżki klucza rejestru, do pełnego dostępu."
  overload: System.Security.Permissions.RegistryPermissionAttribute.All*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Wywoływana jest metoda dostępu get; jest dostępna wyłącznie dla zgodności kompilatora C#."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl
  id: ChangeAccessControl
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: ChangeAccessControl
  nameWithType: RegistryPermissionAttribute.ChangeAccessControl
  fullName: System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia zmiany kontroli dostępu dla kluczy rejestru określony."
  remarks: "Dostęp do klucza oznacza dostęp do wszystkich wartości, które zawiera i wszystkie zmienne w nim.      > [!IMPORTANT] > Listy kontroli dostępu (ACL) w tym artykule opisano osoby lub grupy, którzy lub nie ma praw do określonych akcji dla kluczy rejestru danego.  Możliwość zmiany listy ACL jest ważne uprawnień i może być przyznany należy z rozwagą."
  syntax:
    content: public string ChangeAccessControl { get; set; }
    return:
      type: System.String
      description: "Rozdzielana średnikami lista ścieżki klucza rejestru, zmiana kontroli dostępu. ."
  overload: System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.Create
  id: Create
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: Create
  nameWithType: RegistryPermissionAttribute.Create
  fullName: System.Security.Permissions.RegistryPermissionAttribute.Create
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia dostęp na poziomie tworzenia kluczy rejestru określony."
  remarks: "Dostęp do klucza oznacza dostęp do wszystkich wartości, które zawiera i wszystkie zmienne w nim."
  syntax:
    content: public string Create { get; set; }
    return:
      type: System.String
      description: "Rozdzielana średnikami lista ścieżki klucza rejestru, Utwórz poziom dostępu."
  overload: System.Security.Permissions.RegistryPermissionAttribute.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: RegistryPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.RegistryPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Tworzy i zwraca nowy <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref>."
  remarks: "Ta metoda powinna można wywołać tylko przez system zabezpieczeń nigdy przez kod aplikacji.       W czasie kompilacji atrybuty przekonwertować deklaracje zabezpieczeń do serializacji formularza w metadanych. Zabezpieczenia deklaracyjne danych w metadanych jest tworzona na podstawie ta metoda zwraca odpowiadającego atrybutowi uprawnień."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> , który odpowiada temu atrybutowi."
  overload: System.Security.Permissions.RegistryPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.Read
  id: Read
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: Read
  nameWithType: RegistryPermissionAttribute.Read
  fullName: System.Security.Permissions.RegistryPermissionAttribute.Read
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia dostęp do odczytu dla kluczy rejestru określony."
  remarks: "Dostęp do klucza oznacza dostęp do wszystkich wartości, które zawiera i wszystkie zmienne w nim."
  syntax:
    content: public string Read { get; set; }
    return:
      type: System.String
      description: "Rozdzielana średnikami lista ścieżki klucza rejestru, aby uzyskać dostęp do odczytu."
  overload: System.Security.Permissions.RegistryPermissionAttribute.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl
  id: ViewAccessControl
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: ViewAccessControl
  nameWithType: RegistryPermissionAttribute.ViewAccessControl
  fullName: System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia widok kontroli dostępu dla kluczy rejestru określony."
  remarks: "Dostęp do klucza oznacza dostęp do wszystkich wartości, które zawiera i wszystkie zmienne w nim.      > [!IMPORTANT] > Listy kontroli dostępu (ACL) w tym artykule opisano osoby lub grupy, którzy lub nie ma praw do określonych akcji dla kluczy rejestru danego.  Możliwość wyświetlania listy ACL jest ważne uprawnień i może być przyznany należy z rozwagą."
  syntax:
    content: public string ViewAccessControl { get; set; }
    return:
      type: System.String
      description: "Rozdzielana średnikami lista ścieżki klucza rejestru, kontroli dostępu w widoku."
  overload: System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify
  id: ViewAndModify
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: ViewAndModify
  nameWithType: RegistryPermissionAttribute.ViewAndModify
  fullName: System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia określony zestaw kluczy rejestru, które można wyświetlać i modyfikować."
  remarks: "Dostęp do klucza oznacza dostęp do wszystkich wartości, które zawiera i wszystkie zmienne w nim.       Ta właściwość określa <xref:System.Security.Permissions.RegistryPermissionAttribute.Create%2A>, <xref:System.Security.Permissions.RegistryPermissionAttribute.Read%2A>, i <xref:System.Security.Permissions.RegistryPermissionAttribute.Write%2A>prawa dostępu do określonych kluczy i ich wartości.</xref:System.Security.Permissions.RegistryPermissionAttribute.Write%2A> </xref:System.Security.Permissions.RegistryPermissionAttribute.Read%2A> </xref:System.Security.Permissions.RegistryPermissionAttribute.Create%2A> Prawa dostępu są danych rejestru. obejmują one dostęp do sterowania praw <xref:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl%2A>lub <xref:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl%2A>.</xref:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl%2A> </xref:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl%2A>      > [!NOTE] > Metody dostępu get zapewnia zgodność kompilatora C#. Kompilator języka C# wymaga właściwości atrybutów, aby zezwalać na odczyt i zapis."
  syntax:
    content: public string ViewAndModify { get; set; }
    return:
      type: System.String
      description: "Rozdzielana średnikami lista ścieżki klucza rejestru, tworzenia, odczytu i zapisu."
  overload: System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Wywoływana jest metoda dostępu get; jest dostępna wyłącznie dla zgodności kompilatora C#."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermissionAttribute.Write
  id: Write
  parent: System.Security.Permissions.RegistryPermissionAttribute
  langs:
  - csharp
  name: Write
  nameWithType: RegistryPermissionAttribute.Write
  fullName: System.Security.Permissions.RegistryPermissionAttribute.Write
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia dostęp do zapisu dla kluczy rejestru określony."
  remarks: "Dostęp do klucza oznacza dostęp do wszystkich wartości, które zawiera i wszystkie zmienne w nim."
  syntax:
    content: public string Write { get; set; }
    return:
      type: System.String
      description: "Rozdzielana średnikami lista ścieżki klucza rejestru, aby uzyskać dostęp do zapisu."
  overload: System.Security.Permissions.RegistryPermissionAttribute.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: RegistryPermissionAttribute(SecurityAction)
  nameWithType: RegistryPermissionAttribute.RegistryPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.RegistryPermissionAttribute.RegistryPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.RegistryPermissionAttribute.All
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: All
  nameWithType: RegistryPermissionAttribute.All
  fullName: System.Security.Permissions.RegistryPermissionAttribute.All
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: ChangeAccessControl
  nameWithType: RegistryPermissionAttribute.ChangeAccessControl
  fullName: System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl
- uid: System.Security.Permissions.RegistryPermissionAttribute.Create
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: Create
  nameWithType: RegistryPermissionAttribute.Create
  fullName: System.Security.Permissions.RegistryPermissionAttribute.Create
- uid: System.Security.Permissions.RegistryPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: RegistryPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.RegistryPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.RegistryPermissionAttribute.Read
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: Read
  nameWithType: RegistryPermissionAttribute.Read
  fullName: System.Security.Permissions.RegistryPermissionAttribute.Read
- uid: System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: ViewAccessControl
  nameWithType: RegistryPermissionAttribute.ViewAccessControl
  fullName: System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl
- uid: System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: ViewAndModify
  nameWithType: RegistryPermissionAttribute.ViewAndModify
  fullName: System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify
- uid: System.Security.Permissions.RegistryPermissionAttribute.Write
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: Write
  nameWithType: RegistryPermissionAttribute.Write
  fullName: System.Security.Permissions.RegistryPermissionAttribute.Write
- uid: System.Security.Permissions.RegistryPermissionAttribute.#ctor*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: RegistryPermissionAttribute
  nameWithType: RegistryPermissionAttribute.RegistryPermissionAttribute
- uid: System.Security.Permissions.RegistryPermissionAttribute.All*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: All
  nameWithType: RegistryPermissionAttribute.All
- uid: System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: ChangeAccessControl
  nameWithType: RegistryPermissionAttribute.ChangeAccessControl
- uid: System.Security.Permissions.RegistryPermissionAttribute.Create*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: Create
  nameWithType: RegistryPermissionAttribute.Create
- uid: System.Security.Permissions.RegistryPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: RegistryPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.RegistryPermissionAttribute.Read*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: Read
  nameWithType: RegistryPermissionAttribute.Read
- uid: System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: ViewAccessControl
  nameWithType: RegistryPermissionAttribute.ViewAccessControl
- uid: System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: ViewAndModify
  nameWithType: RegistryPermissionAttribute.ViewAndModify
- uid: System.Security.Permissions.RegistryPermissionAttribute.Write*
  parent: System.Security.Permissions.RegistryPermissionAttribute
  isExternal: false
  name: Write
  nameWithType: RegistryPermissionAttribute.Write
