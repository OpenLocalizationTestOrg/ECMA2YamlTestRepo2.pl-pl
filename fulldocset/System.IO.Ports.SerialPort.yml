### YamlMime:ManagedReference
items:
- uid: System.IO.Ports.SerialPort
  id: SerialPort
  children:
  - System.IO.Ports.SerialPort.#ctor
  - System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  - System.IO.Ports.SerialPort.#ctor(System.String)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  - System.IO.Ports.SerialPort.BaseStream
  - System.IO.Ports.SerialPort.BaudRate
  - System.IO.Ports.SerialPort.BreakState
  - System.IO.Ports.SerialPort.BytesToRead
  - System.IO.Ports.SerialPort.BytesToWrite
  - System.IO.Ports.SerialPort.CDHolding
  - System.IO.Ports.SerialPort.Close
  - System.IO.Ports.SerialPort.CtsHolding
  - System.IO.Ports.SerialPort.DataBits
  - System.IO.Ports.SerialPort.DataReceived
  - System.IO.Ports.SerialPort.DiscardInBuffer
  - System.IO.Ports.SerialPort.DiscardNull
  - System.IO.Ports.SerialPort.DiscardOutBuffer
  - System.IO.Ports.SerialPort.Dispose(System.Boolean)
  - System.IO.Ports.SerialPort.DsrHolding
  - System.IO.Ports.SerialPort.DtrEnable
  - System.IO.Ports.SerialPort.Encoding
  - System.IO.Ports.SerialPort.ErrorReceived
  - System.IO.Ports.SerialPort.GetPortNames
  - System.IO.Ports.SerialPort.Handshake
  - System.IO.Ports.SerialPort.InfiniteTimeout
  - System.IO.Ports.SerialPort.IsOpen
  - System.IO.Ports.SerialPort.NewLine
  - System.IO.Ports.SerialPort.Open
  - System.IO.Ports.SerialPort.Parity
  - System.IO.Ports.SerialPort.ParityReplace
  - System.IO.Ports.SerialPort.PinChanged
  - System.IO.Ports.SerialPort.PortName
  - System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.ReadBufferSize
  - System.IO.Ports.SerialPort.ReadByte
  - System.IO.Ports.SerialPort.ReadChar
  - System.IO.Ports.SerialPort.ReadExisting
  - System.IO.Ports.SerialPort.ReadLine
  - System.IO.Ports.SerialPort.ReadTimeout
  - System.IO.Ports.SerialPort.ReadTo(System.String)
  - System.IO.Ports.SerialPort.ReceivedBytesThreshold
  - System.IO.Ports.SerialPort.RtsEnable
  - System.IO.Ports.SerialPort.StopBits
  - System.IO.Ports.SerialPort.Write(System.String)
  - System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.WriteBufferSize
  - System.IO.Ports.SerialPort.WriteLine(System.String)
  - System.IO.Ports.SerialPort.WriteTimeout
  langs:
  - csharp
  name: SerialPort
  nameWithType: SerialPort
  fullName: System.IO.Ports.SerialPort
  type: Class
  summary: "Oznacza zasób portu szeregowego.       Aby przejrzeć kod źródłowy .NET Framework dla tego typu, zobacz [źródło odwołania](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe)."
  remarks: "> [!NOTE]> Tak, aby wyświetlić kod źródłowy .NET Framework dla tego typu, zobacz [źródło odwołania](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe). Można przejrzeć kod źródłowy w tryb online, Pobierz odwołanie do wyświetlenia w trybie offline i kroków opisanych źródeł (w tym poprawek i aktualizacji) podczas debugowania. zobacz [instrukcje](http://referencesource.microsoft.com/).       Klasa używana do sterowania zasób portu szeregowego pliku. Ta klasa udostępnia synchroniczne i sterowane zdarzeniami we/wy, dostępu do numeru pin i podział stanów i dostęp do właściwości szeregowego sterownika. Ponadto można ich opakować funkcjonalność tej klasy w wewnętrznego <xref:System.IO.Stream>obiektu dostępny za pośrednictwem <xref:System.IO.Ports.SerialPort.BaseStream%2A>Właściwości i przekazywane do klasy, które być zawijany, albo użyć strumieni.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream>       Klasa portu SerialPort obsługuje następujące rodzaje kodowania: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>i kodowanie zdefiniowane w pliku mscorlib.dll, gdy strona kodowa jest mniejsza niż 50000 lub strona kodowa jest 54936.</xref:System.Text.UTF32Encoding> </xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF8Encoding> </xref:System.Text.ASCIIEncoding>  Można użyć alternatywnej kodowania, ale muszą używać <xref:System.IO.Ports.SerialPort.ReadByte%2A>lub <xref:System.IO.Ports.SerialPort.Write%2A>— Metoda i wykonywać samodzielnie kodowania.</xref:System.IO.Ports.SerialPort.Write%2A> </xref:System.IO.Ports.SerialPort.ReadByte%2A>       Możesz użyć <xref:System.IO.Ports.SerialPort.GetPortNames%2A>Metoda pobierania prawidłowe porty dla bieżącego komputera.</xref:System.IO.Ports.SerialPort.GetPortNames%2A>       Jeśli obiekt portu SerialPort zostanie zablokowane podczas operacji odczytu, nie przerwać wątek. Zamiast tego należy albo zamknij podstawowym strumienia lub usunięcia obiektu portu SerialPort."
  example:
  - "The following code example demonstrates the use of the SerialPort class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. Both computers must be executing the program to achieve full functionality of this example.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#10](~/add/codesnippet/cpp/t-system.io.ports.serial_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#10](~/add/codesnippet/csharp/t-system.io.ports.serial_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#10](~/add/codesnippet/visualbasic/t-system.io.ports.serial_1.vb)]"
  syntax:
    content: >-
      [System.Diagnostics.MonitoringDescription("SerialPortDesc")]

      public class SerialPort : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor
  id: '#ctor'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort()
  nameWithType: SerialPort.SerialPort()
  fullName: System.IO.Ports.SerialPort.SerialPort()
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> klasy."
  remarks: "Ten konstruktor używa domyślnych wartości właściwości, gdy nie jest określona. Na przykład <xref:System.IO.Ports.SerialPort.DataBits%2A>wartość domyślna właściwości to 8 <xref:System.IO.Ports.SerialPort.Parity%2A>wartością domyślną właściwości `None` wartość wyliczenia <xref:System.IO.Ports.SerialPort.StopBits%2A>wartość domyślna właściwości to 1 i domyślną nazwę portu COM1.</xref:System.IO.Ports.SerialPort.StopBits%2A> </xref:System.IO.Ports.SerialPort.Parity%2A> </xref:System.IO.Ports.SerialPort.DataBits%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_4_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_4_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_4_1.vb)]"
  syntax:
    content: public SerialPort ();
    parameters: []
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(IContainer)
  nameWithType: SerialPort.SerialPort(IContainer)
  fullName: System.IO.Ports.SerialPort.SerialPort(IContainer)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> przy użyciu określonego <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> obiektu."
  remarks: "Ten konstruktor używa domyślnych wartości właściwości, gdy nie jest określona. Na przykład <xref:System.IO.Ports.SerialPort.DataBits%2A>wartość domyślna właściwości to 8 <xref:System.IO.Ports.SerialPort.Parity%2A>wartością domyślną właściwości `None` wartość wyliczenia <xref:System.IO.Ports.SerialPort.StopBits%2A>wartość domyślna właściwości to 1 i domyślną nazwę portu COM1.</xref:System.IO.Ports.SerialPort.StopBits%2A> </xref:System.IO.Ports.SerialPort.Parity%2A> </xref:System.IO.Ports.SerialPort.DataBits%2A>"
  syntax:
    content: public SerialPort (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: "Interfejs do kontenera."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Nie można znaleźć lub otworzyć określonego portu."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String)
  nameWithType: SerialPort.SerialPort(String)
  fullName: System.IO.Ports.SerialPort.SerialPort(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> przy użyciu nazwy określonego portu."
  remarks: "Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.IO.Ports.SerialPort>klasy, jeśli chcesz określić nazwę portu.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName);
    parameters:
    - id: portName
      type: System.String
      description: "Port do użycia (np. COM1)."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Nie można znaleźć lub otworzyć określonego portu."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> przy użyciu określonego portu nazwy i szybkość transmisji."
  remarks: "Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.IO.Ports.SerialPort>klasy, jeśli chcesz określić nazwę portu i szybkość transmisji.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate);
    parameters:
    - id: portName
      type: System.String
      description: "Port do użycia (np. COM1)."
    - id: baudRate
      type: System.Int32
      description: "Szybkość transmisji."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Nie można znaleźć lub otworzyć określonego portu."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> przy użyciu podana nazwa portu, szybkość transmisji i bit parzystości."
  remarks: "Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.IO.Ports.SerialPort>klasy, jeśli chcesz określić nazwę portu, szybkość transmisji i bit parzystości.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);
    parameters:
    - id: portName
      type: System.String
      description: "Port do użycia (np. COM1)."
    - id: baudRate
      type: System.Int32
      description: "Szybkość transmisji."
    - id: parity
      type: System.IO.Ports.Parity
      description: "Jeden z <xref:System.IO.Ports.SerialPort.Parity*>wartości.</xref:System.IO.Ports.SerialPort.Parity*>"
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Nie można znaleźć lub otworzyć określonego portu."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> przy użyciu podana nazwa portu, szybkość transmisji, bit parzystości i bitów danych."
  remarks: "Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.IO.Ports.SerialPort>klasy, jeśli chcesz określić nazwę portu, szybkość transmisji, bit parzystości i bitów danych.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);
    parameters:
    - id: portName
      type: System.String
      description: "Port do użycia (np. COM1)."
    - id: baudRate
      type: System.Int32
      description: "Szybkość transmisji."
    - id: parity
      type: System.IO.Ports.Parity
      description: "Jeden z <xref:System.IO.Ports.SerialPort.Parity*>wartości.</xref:System.IO.Ports.SerialPort.Parity*>"
    - id: dataBits
      type: System.Int32
      description: "Wartość danych usługi bits."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Nie można znaleźć lub otworzyć określonego portu."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> przy użyciu podana nazwa portu, szybkość transmisji, bit parzystości, bitów danych i bity stopu."
  remarks: "Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.IO.Ports.SerialPort>klasy, aby określić nazwę portu, szybkość transmisji, bit parzystości, bitów danych i bity stopu.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);
    parameters:
    - id: portName
      type: System.String
      description: "Port do użycia (np. COM1)."
    - id: baudRate
      type: System.Int32
      description: "Szybkość transmisji."
    - id: parity
      type: System.IO.Ports.Parity
      description: "Jeden z <xref:System.IO.Ports.SerialPort.Parity*>wartości.</xref:System.IO.Ports.SerialPort.Parity*>"
    - id: dataBits
      type: System.Int32
      description: "Wartość danych usługi bits."
    - id: stopBits
      type: System.IO.Ports.StopBits
      description: "Jeden z <xref:System.IO.Ports.SerialPort.StopBits*>wartości.</xref:System.IO.Ports.SerialPort.StopBits*>"
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Nie można znaleźć lub otworzyć określonego portu."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BaseStream
  id: BaseStream
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BaseStream
  nameWithType: SerialPort.BaseStream
  fullName: System.IO.Ports.SerialPort.BaseStream
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera odpowiadającego <xref:System.IO.Stream>obiekt do <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> obiektu.</xref:System.IO.Stream>"
  remarks: "Tej właściwości należy użyć jawnego asynchronicznej operacji We/Wy lub do przekazania <xref:System.IO.Ports.SerialPort>obiektu do <xref:System.IO.Stream>klasy otoki, takich jak <xref:System.IO.StreamWriter>.</xref:System.IO.StreamWriter> </xref:System.IO.Stream> </xref:System.IO.Ports.SerialPort>       Otwórz dowolne portu szeregowego BaseStream właściwość zwraca obiekt, który pochodzi z klasy abstrakcyjnej <xref:System.IO.Stream>klasy i implementuje odczytu i zapisu przy użyciu prototypy dziedziczone z metody <xref:System.IO.Stream>klasy: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>i <xref:System.IO.Stream.WriteByte%2A>.</xref:System.IO.Stream.WriteByte%2A> </xref:System.IO.Stream.Write%2A> </xref:System.IO.Stream.ReadByte%2A> </xref:System.IO.Stream.Read%2A> </xref:System.IO.Stream.BeginWrite%2A> </xref:System.IO.Stream.BeginRead%2A> </xref:System.IO.Stream> </xref:System.IO.Stream> Te metody mogą być przydatne podczas przekazywania opakowana zasobów szeregowy do <xref:System.IO.Stream>klasy otoki.</xref:System.IO.Stream>       Z powodu inaccessibility dojścia do pliku zawinięty <xref:System.IO.Stream.Length%2A>i <xref:System.IO.Stream.Position%2A>Właściwości nie są obsługiwane oraz <xref:System.IO.Stream.Seek%2A>i <xref:System.IO.Stream.SetLength%2A>metody nie są obsługiwane.</xref:System.IO.Stream.SetLength%2A> </xref:System.IO.Stream.Seek%2A> </xref:System.IO.Stream.Position%2A> </xref:System.IO.Stream.Length%2A>"
  syntax:
    content: public System.IO.Stream BaseStream { get; }
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>obiektu.</xref:System.IO.Stream>"
  overload: System.IO.Ports.SerialPort.BaseStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <> </> *> nie wywołano metody lub <> </> *> została wywołana metoda."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Strumień jest w aplikacji .NET Compact Framework i jednego z następujących metod została wywołana: <> </> *> <> </> *> <> </> *> <> </> *>.NET Compact Framework nie obsługuje asynchroniczne modelu podstawowej strumieni."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BaudRate
  id: BaudRate
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BaudRate
  nameWithType: SerialPort.BaudRate
  fullName: System.IO.Ports.SerialPort.BaudRate
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia szybkość transmisji szeregowej."
  remarks: "Szybkość transmisji musi być obsługiwana przez sterownik szeregowy użytkownika. Wartość domyślna to 9600 bitów na sekundę (b/s)."
  example:
  - "The following example shows how to set the BaudRate property to `9600`.  \n  \n [!code-cs[System.IO.Ports.SerialPort#20](~/add/codesnippet/csharp/p-system.io.ports.serial_3_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#20](~/add/codesnippet/cpp/p-system.io.ports.serial_3_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#20](~/add/codesnippet/visualbasic/p-system.io.ports.serial_3_1.vb)]  \n  \n The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_3_2.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_3_2.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_3_2.vb)]"
  syntax:
    content: public int BaudRate { get; set; }
    return:
      type: System.Int32
      description: "Szybkość transmisji."
  overload: System.IO.Ports.SerialPort.BaudRate*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Określona szybkość transmisji jest mniejsza niż lub równa zero lub jest większa niż maksymalna dopuszczalna szybkość transmisji urządzenia."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BreakState
  id: BreakState
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BreakState
  nameWithType: SerialPort.BreakState
  fullName: System.IO.Ports.SerialPort.BreakState
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia stan sygnał przerwania."
  remarks: "Stanie sygnał przerwania występuje podczas transmisji jest wstrzymana i wiersz znajduje się w stanie przerwania (wszystkie niski, bit nie zatrzymania) do czasu zwolnienia. Aby wprowadzić stanie przerwania, należy ustawić tę właściwość na `true`. Jeśli port jest już w stanie przerwania, ustawienie dla tej właściwości ponownie `true` nie powoduje wyjątek. Nie jest możliwe do zapisu <xref:System.IO.Ports.SerialPort>obiektu, gdy jest BreakState `true`.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public bool BreakState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli port jest w stanie przerwania; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.BreakState*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <> </> *> nie wywołano metody lub <> </> *> została wywołana metoda."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BytesToRead
  id: BytesToRead
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
  fullName: System.IO.Ports.SerialPort.BytesToRead
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera liczbę bajtów danych w buforze receive."
  remarks: "Bufor odbioru obejmuje sterownik szeregowy buforu, a także wewnętrznego buforowania w <xref:System.IO.Ports.SerialPort>samego obiektu.</xref:System.IO.Ports.SerialPort>       Ponieważ właściwość BytesToRead reprezentuje zarówno <xref:System.IO.Ports.SerialPort>buforu i buforu utworzone systemu Windows, może on zwrócić wartość większą niż <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>właściwość, która reprezentuje tylko utworzyć Windows buforu.</xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> </xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public int BytesToRead { get; }
    return:
      type: System.Int32
      description: "Liczba bajtów danych w buforze receive."
  overload: System.IO.Ports.SerialPort.BytesToRead*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Port nie jest otwarty."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BytesToWrite
  id: BytesToWrite
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
  fullName: System.IO.Ports.SerialPort.BytesToWrite
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera liczbę bajtów danych w buforze wysyłania."
  remarks: "Bufor wysyłania obejmuje sterownik szeregowy bufor wysyłania jak i buforowanie wewnętrznego w <xref:System.IO.Ports.SerialPort>samego obiektu.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public int BytesToWrite { get; }
    return:
      type: System.Int32
      description: "Liczba bajtów danych w buforze wysyłania."
  overload: System.IO.Ports.SerialPort.BytesToWrite*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Port jest w nieprawidłowym stanie."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <> </> *> nie wywołano metody lub <> </> *> została wywołana metoda."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.CDHolding
  id: CDHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: CDHolding
  nameWithType: SerialPort.CDHolding
  fullName: System.IO.Ports.SerialPort.CDHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera stan wiersza, wykrywanie nośnej portu."
  remarks: "Ta właściwość może służyć do monitorowania stanu linii wykrywania nośnika portu. Nie operatora zwykle wskazuje, że odbiornika zawiesił, jak i operatora został porzucony."
  syntax:
    content: public bool CDHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w przypadku wykrycia operatora; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.CDHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <> </> *> nie wywołano metody lub <> </> *> została wywołana metoda."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Close
  id: Close
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Close()
  nameWithType: SerialPort.Close()
  fullName: System.IO.Ports.SerialPort.Close()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Zamyka połączenie portu, ustawia <xref:System.IO.Ports.SerialPort.IsOpen*>właściwości <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>i usuwa wewnętrznego <xref:System.IO.Stream>obiektu.</xref:System.IO.Stream> </xref:System.IO.Ports.SerialPort.IsOpen*>"
  remarks: "Wywołanie tej metody zamyka <xref:System.IO.Ports.SerialPort>obiektu i wyczyszczenie obu receive i bufory transmisji.</xref:System.IO.Ports.SerialPort> Ta metoda wywołuje <xref:System.ComponentModel.Component.Dispose?displayProperty=fullName>metodę, która wywołuje chronioną metodę <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName>metody z `disposing` ustawiona `true`.</xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName> </xref:System.ComponentModel.Component.Dispose?displayProperty=fullName>       Najlepszym rozwiązaniem dla dowolnej aplikacji jest oczekiwania niektórych ilość czasu po wywołaniu metody Close przed podjęciem ponownej próby wywołania <xref:System.IO.Ports.SerialPort.Open%2A>metody, jako port mogą nie być zamknięte natychmiast.</xref:System.IO.Ports.SerialPort.Open%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_5_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_5_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_5_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.Ports.SerialPort.Close*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.CtsHolding
  id: CtsHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
  fullName: System.IO.Ports.SerialPort.CtsHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera stan wiersza wyczyść do wysłania."
  remarks: "Wiersz wyczyść do wysłania (CTS) jest używana w żądaniu do wysyłania/wyczyść do wysłania (RTS/CTS) uzgadnianie sprzętu. Linia CTS jest poddawany kwerendzie przez port przed wysłaniem danych."
  syntax:
    content: public bool CtsHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>w przypadku wykrycia wiersza wyczyść do wysyłania; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.CtsHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <> </> *> nie wywołano metody lub <> </> *> została wywołana metoda."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DataBits
  id: DataBits
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DataBits
  nameWithType: SerialPort.DataBits
  fullName: System.IO.Ports.SerialPort.DataBits
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia długość standardowe bitów danych na bajt."
  remarks: "Zakres wartości dla tej właściwości jest od 5 do 8. Wartość domyślna to 8."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_7_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_7_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_7_1.vb)]"
  syntax:
    content: public int DataBits { get; set; }
    return:
      type: System.Int32
      description: "Długość danych usługi bits."
  overload: System.IO.Ports.SerialPort.DataBits*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość bitów danych jest mniejsza niż 5 lub więcej niż 8."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DataReceived
  id: DataReceived
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DataReceived
  nameWithType: SerialPort.DataReceived
  fullName: System.IO.Ports.SerialPort.DataReceived
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Wskazuje, że dane zostały odebrane przez port reprezentowany przez <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> obiektu."
  remarks: "Dane zdarzenia może być spowodowana przez każdy z elementów w <xref:System.IO.Ports.SerialData>wyliczenie.</xref:System.IO.Ports.SerialData> Ponieważ system operacyjny Określa, czy zgłosić to zdarzenie lub nie, nie wszystkie błędy parzystości może być zgłaszane.       Zdarzenie DataReceived również jest wywoływane, jeśli znak Eof nie zostanie odebrana, niezależnie od tego, czy liczba bajtów w buforze wejściowym, wewnętrzny i wartość <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A>Właściwości.</xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A>       <xref:System.IO.Ports.SerialPort.PinChanged>, DataReceived, i <xref:System.IO.Ports.SerialPort.ErrorReceived>zdarzeń może zostać wywołana poza kolejnością i może być niewielkie opóźnienie między po zasadniczy strumień zgłasza błąd, a po wykonaniu procedury obsługi zdarzeń.</xref:System.IO.Ports.SerialPort.ErrorReceived></xref:System.IO.Ports.SerialPort.PinChanged> Tylko jedna procedura obsługi zdarzeń można wykonywać w czasie.       Zdarzenie DataReceived nie gwarantuje wygenerowany dla każdego bajtu odebrane. Użyj <xref:System.IO.Ports.SerialPort.BytesToRead%2A>Właściwości w celu określenia, ile danych pozostało do odczytu w buforze.</xref:System.IO.Ports.SerialPort.BytesToRead%2A>       DataReceived zdarzenie jest zgłaszane w wątku dodatkowej dane są odebrane z <xref:System.IO.Ports.SerialPort>obiektu.</xref:System.IO.Ports.SerialPort> Ponieważ to zdarzenie jest wywoływane w wątku dodatkowej, a nie głównego wątku, próba zmodyfikowania niektóre elementy w głównym wątku, takich jak elementy interfejsu użytkownika mogą budzić wątkowości wyjątku. W razie potrzeby można zmodyfikować elementów w głównym <xref:System.Windows.Forms.Form>lub <xref:System.Windows.Forms.Control>, przy użyciu żądania zmiany post <xref:System.Windows.Forms.Control.Invoke%2A>, które wykona pracę w odpowiednich wątku.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [zdarzenia](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example adds a <xref:System.IO.Ports.SerialDataReceivedEventHandler> to DataReceived to read all the available data received on the COM1 port. Note that to test this code it is necessary to have hardware attached to COM1 that will send data.  \n  \n [!code-cs[System.IO.Ports.SerialPort#06](~/add/codesnippet/csharp/e-system.io.ports.serial_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#06](~/add/codesnippet/cpp/e-system.io.ports.serial_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#06](~/add/codesnippet/visualbasic/e-system.io.ports.serial_1.vb)]"
  syntax:
    content: public event System.IO.Ports.SerialDataReceivedEventHandler DataReceived;
    return:
      type: System.IO.Ports.SerialDataReceivedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardInBuffer
  id: DiscardInBuffer
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardInBuffer()
  nameWithType: SerialPort.DiscardInBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardInBuffer()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Bufor odbioru odrzucenia danych ze sterownika szeregowego."
  remarks: 'Ta metoda jest odpowiednikiem następującego kodu języka Visual Basic: `MSComm1.InBufferCount = 0`. Usuwa bufor odbioru, ale nie ma wpływu na buforu transmisji.'
  syntax:
    content: public void DiscardInBuffer ();
    parameters: []
  overload: System.IO.Ports.SerialPort.DiscardInBuffer*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <> </> *> nie wywołano metody lub <> </> *> została wywołana metoda."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardNull
  id: DiscardNull
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
  fullName: System.IO.Ports.SerialPort.DiscardNull
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia wartość wskazującą, czy bajty zerowe są ignorowane w przypadku przesyłane między port i bufor odbioru."
  remarks: "Ta wartość powinien zwykle mieć ustawioną `false`, szczególnie dla binarnego transmisji.  Ustawienie tej właściwości na `true` może spowodować nieoczekiwane wyniki dla zakodowane UTF32 i UTF16 bajtów."
  syntax:
    content: public bool DiscardNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bajty zerowe są ignorowane. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.DiscardNull*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <> </> *> nie wywołano metody lub <> </> *> została wywołana metoda."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer
  id: DiscardOutBuffer
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardOutBuffer()
  nameWithType: SerialPort.DiscardOutBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardOutBuffer()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Bufor transmisji danych odrzucenia szeregowego sterownika."
  remarks: 'Ta metoda jest odpowiednikiem następującego kodu języka Visual Basic: `MSComm1.OutBufferCount = 0`. Czyści buforu transmisji, ale nie ma wpływu na bufor odbioru.'
  syntax:
    content: public void DiscardOutBuffer ();
    parameters: []
  overload: System.IO.Ports.SerialPort.DiscardOutBuffer*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <> </> *> nie wywołano metody lub <> </> *> została wywołana metoda."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SerialPort.Dispose(Boolean)
  fullName: System.IO.Ports.SerialPort.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Zwalnia zasoby niezarządzane używane przez <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> i opcjonalnie zwalnia zasoby zarządzane."
  remarks: "Ta metoda jest wywoływana przez metodę publiczną <xref:System.ComponentModel.Component.Dispose%2A>— Metoda i <xref:System.Object.Finalize%2A>metody.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> <xref:System.ComponentModel.Component.Dispose%2A>wywołuje metodę Dispose chronionego z `disposing` ustawiona `true`.</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>wywołuje metodę Dispose z `disposing` ustawioną `false`.</xref:System.Object.Finalize%2A>       Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.IO.Ports.SerialPort>odwołań.</xref:System.IO.Ports.SerialPort> Ta metoda wywołuje <xref:System.ComponentModel.Component.Dispose%2A>metody każdego odwołuje się do obiektu.</xref:System.ComponentModel.Component.Dispose%2A>       Ta metoda opróżnia i zamyka obiektu strumienia <xref:System.IO.Ports.SerialPort.BaseStream%2A>Właściwości.</xref:System.IO.Ports.SerialPort.BaseStream%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.IO.Ports.SerialPort.Dispose*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DsrHolding
  id: DsrHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
  fullName: System.IO.Ports.SerialPort.DsrHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera sygnał danych gotowe DSR (Set)."
  remarks: "Ta właściwość jest używana w uzgadnianie zestawu danych gotowe/Data Terminal Ready (DSR/DTR). Sygnał danych gotowe DSR (Set) jest zwykle wysyłane przez modem do portu wskazująca, że jest gotowa do transmisji danych i odbierania danych."
  syntax:
    content: public bool DsrHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zestaw danych gotowe sygnału zostało wysłane do portu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.DsrHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <> </> *> nie wywołano metody lub <> </> *> została wywołana metoda."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DtrEnable
  id: DtrEnable
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
  fullName: System.IO.Ports.SerialPort.DtrEnable
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia wartość, która umożliwia sygnału Data Terminal Ready (DTR) podczas komunikacji szeregowego."
  remarks: "Data Terminal Ready (DTR) są zazwyczaj włączane podczas uzgadniania oprogramowania XON/XOFF i żądania do wysyłania/wyczyść wysyłać uzgadnianie sprzętu (RTS/CTS) i komunikacji modemu."
  syntax:
    content: public bool DtrEnable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby włączyć Data Terminal Ready (DTR); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.DtrEnable*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Encoding
  id: Encoding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Encoding
  nameWithType: SerialPort.Encoding
  fullName: System.IO.Ports.SerialPort.Encoding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia kodowanie bajtów przed i po transmisji konwersji tekstu."
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>Obiektu.</xref:System.Text.Encoding> Wartość domyślna to <xref:System.Text.ASCIIEncoding>.</xref:System.Text.ASCIIEncoding>"
  overload: System.IO.Ports.SerialPort.Encoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ustawiono właściwość kodowanie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Właściwość kodowanie ustawiono kodowania, która nie jest <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, <xref:System.Text.UnicodeEncoding>, jednego kodowania jednobajtowych systemu Windows lub kodowania dwubajtowych systemu Windows.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.Text.ASCIIEncoding>"
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ErrorReceived
  id: ErrorReceived
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ErrorReceived
  nameWithType: SerialPort.ErrorReceived
  fullName: System.IO.Ports.SerialPort.ErrorReceived
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Wskazuje, wystąpił błąd z portem reprezentowany przez <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> obiektu."
  remarks: "Zdarzenia błędu może być spowodowana przez każdy z elementów w <xref:System.IO.Ports.SerialError>wyliczenie.</xref:System.IO.Ports.SerialError> Ponieważ system operacyjny Określa, czy zgłosić to zdarzenie lub nie, nie wszystkie błędy parzystości może być zgłaszane.       <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, ErrorReceived zdarzeń może zostać wywołana poza kolejnością i może wystąpić niewielkie opóźnienie między po zasadniczy strumień zgłasza błąd, a kiedy kodu można podczas wykonywania programu obsługi zdarzeń.</xref:System.IO.Ports.SerialPort.DataReceived></xref:System.IO.Ports.SerialPort.PinChanged> Tylko jedna procedura obsługi zdarzeń można wykonywać w czasie.       Jeśli wystąpi błąd parzystości na końcu bajtów strumienia, dodatkowy bajt zostanie dodany do bufor wejściowy o wartości 126.       ErrorReceived zdarzenie jest zgłaszane w wątku dodatkowej zostanie odebrany błąd z <xref:System.IO.Ports.SerialPort>obiektu.</xref:System.IO.Ports.SerialPort> Ponieważ to zdarzenie jest wywoływane w wątku dodatkowej, a nie głównego wątku, próba zmodyfikowania niektóre elementy w głównym wątku, takich jak elementy interfejsu użytkownika mogą budzić wątkowości wyjątku. W razie potrzeby można zmodyfikować elementów w głównym <xref:System.Windows.Forms.Form>lub <xref:System.Windows.Forms.Control>, przy użyciu żądania zmiany post <xref:System.Windows.Forms.Control.Invoke%2A>, które wykona pracę w odpowiednich wątku.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [zdarzenia](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived;
    return:
      type: System.IO.Ports.SerialErrorReceivedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.GetPortNames
  id: GetPortNames
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: GetPortNames()
  nameWithType: SerialPort.GetPortNames()
  fullName: System.IO.Ports.SerialPort.GetPortNames()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera tablicę nazw portów seryjnych dla bieżącego komputera."
  remarks: "The order of port names returned from GetPortNames is not specified.  \n  \n Use the GetPortNames method to query the current computer for a list of valid serial port names. For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.  \n  \n The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\SERIALCOMM). If the registry contains stale or otherwise incorrect data then the GetPortNames method will return incorrect data."
  example:
  - "The following code example uses the GetPortNames method to display serial port names to the console.  \n  \n [!code-cs[IO.Ports.GetPortNames#1](~/add/codesnippet/csharp/m-system.io.ports.serial_3_1.cs)]\n [!code-cpp[IO.Ports.GetPortNames#1](~/add/codesnippet/cpp/m-system.io.ports.serial_3_1.cpp)]\n [!code-vb[IO.Ports.GetPortNames#1](~/add/codesnippet/visualbasic/m-system.io.ports.serial_3_1.vb)]"
  syntax:
    content: public static string[] GetPortNames ();
    parameters: []
    return:
      type: System.String[]
      description: "Tablica nazw portów seryjnych dla bieżącego komputera."
  overload: System.IO.Ports.SerialPort.GetPortNames*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Nie można zbadać nazwy portu szeregowego."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Handshake
  id: Handshake
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Handshake
  nameWithType: SerialPort.Handshake
  fullName: System.IO.Ports.SerialPort.Handshake
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia protokół uzgadniania do portu szeregowego przekazywania danych przy użyciu wartości z <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref>."
  remarks: "W przypadku uzgadnianie urządzenie podłączone do <xref:System.IO.Ports.SerialPort>obiektu jest instrukcją zatrzymać wysyłanie danych, gdy co najmniej (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) bajtów w buforze.</xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> </xref:System.IO.Ports.SerialPort> Urządzenie jest instrukcją można uruchomić ponownie wysłać danych, gdy istnieją 1024 lub mniejszą liczbę bajtów w buforze. Jeśli urządzenie wysyła dane w blokach, które są większe niż 1024 bajty, może to spowodować przepełnienie buforu.       Jeśli ustawiono właściwość uzgadniania <xref:System.IO.Ports.Handshake>i <xref:System.IO.Ports.SerialPort.CtsHolding%2A>ma ustawioną wartość `false`, nie zostaną wysłane znaku XOff.</xref:System.IO.Ports.SerialPort.CtsHolding%2A> </xref:System.IO.Ports.Handshake> Jeśli <xref:System.IO.Ports.SerialPort.CtsHolding%2A>następnie ustawiono `true`, muszą być wysyłane większej ilości danych, przed wysyłany jest znak XOff.</xref:System.IO.Ports.SerialPort.CtsHolding%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_0_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_0_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_0_1.vb)]"
  syntax:
    content: public System.IO.Ports.Handshake Handshake { get; set; }
    return:
      type: System.IO.Ports.Handshake
      description: "Jeden z <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> wartości. Wartość domyślna to <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.Handshake*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość nie jest prawidłową wartością w <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> wyliczenia."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.InfiniteTimeout
  id: InfiniteTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: InfiniteTimeout
  nameWithType: SerialPort.InfiniteTimeout
  fullName: System.IO.Ports.SerialPort.InfiniteTimeout
  type: Field
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Wskazuje, że nie ma limitu powinny występować."
  remarks: "Ta wartość jest używana z <xref:System.IO.Ports.SerialPort.ReadTimeout%2A>i <xref:System.IO.Ports.SerialPort.WriteTimeout%2A>Właściwości.</xref:System.IO.Ports.SerialPort.WriteTimeout%2A> </xref:System.IO.Ports.SerialPort.ReadTimeout%2A>"
  syntax:
    content: public const int InfiniteTimeout = -1;
    return:
      type: System.Int32
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.IsOpen
  id: IsOpen
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: IsOpen
  nameWithType: SerialPort.IsOpen
  fullName: System.IO.Ports.SerialPort.IsOpen
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera wartość wskazującą, stan open lub closed <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> obiektu."
  remarks: "Wartości właściwości IsOpen śledzi, czy port jest otwarty do użytku przez obiekt wywołujący, nie określa, czy port jest otwarty przez dowolną aplikację na tym komputerze."
  syntax:
    content: public bool IsOpen { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli port szeregowy jest otwarte. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.IsOpen*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Przekazana wartość IsOpen jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Przekazana wartość IsOpen jest pustym ciągiem (&quot;&quot;)."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.NewLine
  id: NewLine
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: NewLine
  nameWithType: SerialPort.NewLine
  fullName: System.IO.Ports.SerialPort.NewLine
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia wartość sposób interpretowania koniec wywołania <> </> *> i <> </> *> metody."
  remarks: "Ta właściwość określa, jakie korzyści (bajty) definiuje końca wiersza dla <xref:System.IO.Ports.SerialPort.ReadLine%2A>i <xref:System.IO.Ports.SerialPort.WriteLine%2A>metody.</xref:System.IO.Ports.SerialPort.WriteLine%2A> </xref:System.IO.Ports.SerialPort.ReadLine%2A> Domyślnie wartość końca wiersza jest <xref:System.Environment.NewLine%2A>.</xref:System.Environment.NewLine%2A> Zmienią to innej wartości Jeśli korzysta z określonego urządzenia szeregowe, którym pracujesz z inną wartość w tym samym celu."
  syntax:
    content: public string NewLine { get; set; }
    return:
      type: System.String
      description: "Wartość reprezentującą koniec wiersza. Wartość domyślna to wiersz źródła danych, <xref:System.Environment.NewLine*>.</xref:System.Environment.NewLine*>"
  overload: System.IO.Ports.SerialPort.NewLine*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wartość właściwości jest pusta."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość właściwości jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Open
  id: Open
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Open()
  nameWithType: SerialPort.Open()
  fullName: System.IO.Ports.SerialPort.Open()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Otwiera nowe połączenie portu szeregowego."
  remarks: "Może istnieć tylko jedno połączenie otwarte <xref:System.IO.Ports.SerialPort>obiektu.</xref:System.IO.Ports.SerialPort>       Najlepszym rozwiązaniem dla dowolnej aplikacji jest oczekiwania niektórych ilość czasu po wywołaniu <xref:System.IO.Ports.SerialPort.Close%2A>Metoda przed podjęciem próby wywołać metodę Open port może nie natychmiast zamknięty.</xref:System.IO.Ports.SerialPort.Close%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_2_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_2_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_2_1.vb)]"
  syntax:
    content: public void Open ();
    parameters: []
  overload: System.IO.Ports.SerialPort.Open*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Access is denied to the port.  \n  \n \\- or -  \n  \n The current process, or another process on the system, already has the specified COM port open either by a <xref href=\"System.IO.Ports.SerialPort\"></xref> instance or in unmanaged code."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Przynajmniej jedna z właściwości dla tego wystąpienia są nieprawidłowe. Na przykład <> </> *>, <> </> *>, lub <> </> *> właściwości nie są prawidłowymi wartościami; <> </> *> jest mniejsza lub równa zero; <> </> *> lub <> </> *> właściwości jest mniejsza od zera i nie jest <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The port name does not begin with \"COM\".  \n  \n \\- or -  \n  \n The file type of the port is not supported."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port na bieżące wystąpienie klasy <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> jest już otwarty."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Parity
  id: Parity
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Parity
  nameWithType: SerialPort.Parity
  fullName: System.IO.Ports.SerialPort.Parity
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia protokół sprawdzanie parzystości."
  remarks: "Parzystość jest procedury sprawdzania błędów, w którym liczba 1s muszą być takie same — nawet lub nieparzysta — dla każdej grupy bitów przesyłane bez błędów. W przypadku komunikacji modem-modem parzystości jest często jeden z parametrów, które musi zostać uzgodnione przez strony wysyłania i odbierania umieścić strony, aby można było korzystać z transmisji.       Jeśli wystąpi błąd parzystości na końcu bajtów strumienia, dodatkowy bajt zostanie dodany do bufor wejściowy o wartości 126."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_6_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_6_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_6_1.vb)]"
  syntax:
    content: public System.IO.Ports.Parity Parity { get; set; }
    return:
      type: System.IO.Ports.Parity
      description: "Jedna z wartości wyliczenia, które reprezentuje protokół sprawdzanie parzystości. Wartość domyślna to <xref href=&quot;System.IO.Ports.Parity&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.Parity*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Typ przekazanej wartości parzystości nie jest prawidłową wartością w <xref href=&quot;System.IO.Ports.Parity&quot;> </xref> wyliczenia."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ParityReplace
  id: ParityReplace
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
  fullName: System.IO.Ports.SerialPort.ParityReplace
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia bajtów, który zastępuje nieprawidłowe bajty w strumieniu danych, gdy wystąpi błąd parzystości."
  remarks: "Jeśli wartość jest ustawiona na znak null, zastąpienie parzystości jest wyłączone."
  syntax:
    content: public byte ParityReplace { get; set; }
    return:
      type: System.Byte
      description: "Bajt, który zastępuje nieprawidłowe bajty."
  overload: System.IO.Ports.SerialPort.ParityReplace*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.PinChanged
  id: PinChanged
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: PinChanged
  nameWithType: SerialPort.PinChanged
  fullName: System.IO.Ports.SerialPort.PinChanged
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Wskazuje, że zdarzenie sygnału bez danych wystąpił na porcie reprezentowany przez <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> obiektu."
  remarks: "Zmiany kodu pin Serial zdarzeń może być spowodowana przez każdy z elementów w <xref:System.IO.Ports.SerialPinChange>wyliczenie.</xref:System.IO.Ports.SerialPinChange> Ponieważ system operacyjny Określa, czy zgłosić to zdarzenie lub nie, nie wszystkie błędy parzystości może być zgłaszane. W ramach zdarzenia nowy numer pin jest wartość.       PinChanged zdarzenie jest wywoływane podczas <xref:System.IO.Ports.SerialPort>wprowadza obiektu <xref:System.IO.Ports.SerialPort.BreakState%2A>, ale nie, jeśli port opuszcza <xref:System.IO.Ports.SerialPort.BreakState%2A>.</xref:System.IO.Ports.SerialPort.BreakState%2A> </xref:System.IO.Ports.SerialPort.BreakState%2A> </xref:System.IO.Ports.SerialPort> To zachowanie nie dotyczy innych wartości <xref:System.IO.Ports.SerialPinChange>wyliczenie.</xref:System.IO.Ports.SerialPinChange>       PinChanged, <xref:System.IO.Ports.SerialPort.DataReceived>, i <xref:System.IO.Ports.SerialPort.ErrorReceived>zdarzeń może zostać wywołana poza kolejnością i może być niewielkie opóźnienie między po zasadniczy strumień zgłasza błąd, a po wykonaniu procedury obsługi zdarzeń.</xref:System.IO.Ports.SerialPort.ErrorReceived> </xref:System.IO.Ports.SerialPort.DataReceived> Tylko jedna procedura obsługi zdarzeń można wykonywać w czasie.       Zdarzenie PinChanged jest wywoływane w wątku dodatkowej. Ponieważ to zdarzenie jest wywoływane w wątku dodatkowej, a nie głównego wątku, próba zmodyfikowania niektóre elementy w głównym wątku, takich jak elementy interfejsu użytkownika mogą budzić wątkowości wyjątku. W razie potrzeby można zmodyfikować elementów w głównym <xref:System.Windows.Forms.Form>lub <xref:System.Windows.Forms.Control>, przy użyciu żądania zmiany post <xref:System.Windows.Forms.Control.Invoke%2A>, które wykona pracę w odpowiednich wątku.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [zdarzenia](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.IO.Ports.SerialPinChangedEventHandler PinChanged;
    return:
      type: System.IO.Ports.SerialPinChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.PortName
  id: PortName
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: PortName
  nameWithType: SerialPort.PortName
  fullName: System.IO.Ports.SerialPort.PortName
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia port komunikacji, w tym między innymi wszystkie dostępne porty COM."
  remarks: "Lista nazw prawidłowy port można uzyskać za pomocą <xref:System.IO.Ports.SerialPort.GetPortNames%2A>metody.</xref:System.IO.Ports.SerialPort.GetPortNames%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_4_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_4_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_4_1.vb)]"
  syntax:
    content: public string PortName { get; set; }
    return:
      type: System.String
      description: "Port komunikacyjny. Wartość domyślna to COM1."
  overload: System.IO.Ports.SerialPort.PortName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The PortName property was set to a value with a length of zero.  \n  \n -or-  \n  \n The PortName property was set to a value that starts with \"\\\\\\\\\".  \n  \n -or-  \n  \n The port name was not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ustawiono właściwość Element PortName <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port jest otwarty."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SerialPort.Read(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Liczba bajtów z odczytuje <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> buforu wejściowego i zapisuje te bajtów do tablicy typu byte, od wskazanego przesunięcia."
  remarks: "Jeśli zachodzi konieczność przełączania się między odczytywanie tekstu i odczytywania ze strumienia danych binarnych, wybierz protokół, który definiuje dokładnie granicę między tekstem a danych binarnych, takich jak ręcznie odczytywania bajtów i dekodowania danych.       Ponieważ <xref:System.IO.Ports.SerialPort>klasy buforów danych, a strumień zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>nie ma właściwości, dwa może powodować konflikt, o ile liczba dostępnych bajtów do odczytania.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  <xref:System.IO.Ports.SerialPort.BytesToRead%2A>Właściwość może wskazywać na brak bajtów do odczytania, że te bajtów nie może być dostępna dla strumienia zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>Właściwości, ponieważ ma zostać buforowane do <xref:System.IO.Ports.SerialPort>klasy.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Metody Read nie blokuje innych operacji, gdy liczba bajtów odczytanych equals `count` , ale na porcie szeregowym są dostępne nadal nieprzeczytana bajtów."
  syntax:
    content: public int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Tablica bajtów do zapisania w danych wejściowych."
    - id: offset
      type: System.Int32
      description: "Przesunięcie w `buffer` jaką można zapisać bajty."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba bajtów do odczytania. Mniej bajtów są odczytywane, jeśli `count` jest większa niż liczba bajtów w buforze wejściowym."
    return:
      type: System.Int32
      description: "Liczba bajtów odczytanych."
  overload: System.IO.Ports.SerialPort.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Bufor przekazany jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port nie jest otwarty."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code> Lub <code> count </code> parametry są poza prawidłową obszaru <code> buffer </code> przekazywany. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>plus <code>count</code> jest większa niż długość <code>buffer</code>."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Bajty nie były dostępne do odczytu."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  id: Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Read(Char[],Int32,Int32)
  nameWithType: SerialPort.Read(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Odczytuje liczbę znaków od <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> buforu wejściowego i zapisuje je w tablicy znaków od danego przesunięcia."
  remarks: "Ta metoda służy do odczytywania znaków z portu szeregowego.       Jeśli zachodzi konieczność przełączania się między odczytywanie tekstu i odczytywania ze strumienia danych binarnych, wybierz protokół, który definiuje dokładnie granicę między tekstem a danych binarnych, takich jak ręcznie odczytywania bajtów i dekodowania danych.       Ponieważ <xref:System.IO.Ports.SerialPort>klasy buforów danych, a strumień zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>nie ma właściwości, dwa może powodować konflikt, o ile znaków są dostępne do odczytu.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  <xref:System.IO.Ports.SerialPort.BytesToRead%2A>Właściwość może wskazywać na brak znaków do odczytania, że te znaki mogą być niedostępne w strumieniu zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>Właściwości, ponieważ ma zostać buforowane do <xref:System.IO.Ports.SerialPort>klasy.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Metody Read nie blokuje innych operacji, gdy liczba bajtów odczytanych equals `count` , ale na porcie szeregowym są dostępne nadal nieprzeczytana bajtów."
  syntax:
    content: public int Read (char[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tablica znaków do zapisu w danych wejściowych."
    - id: offset
      type: System.Int32
      description: "Przesunięcie w `buffer` jaką można zapisać znaki."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba znaków do odczytania. Mniej znaków są odczytywane, jeśli `count` jest większa niż liczba znaków w buforze wejściowym."
    return:
      type: System.Int32
      description: "Liczba znaków do odczytu."
  overload: System.IO.Ports.SerialPort.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code> plus <code>count</code> is greater than the length of the buffer.  \n  \n \\- or -  \n  \n <code>count</code> is 1 and there is a surrogate character in the buffer."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code> Lub <code> count </code> parametry są poza prawidłową obszaru <code> buffer </code> przekazywany. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port nie jest otwarty."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Żadne znaki nie były dostępne do odczytu."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadBufferSize
  id: ReadBufferSize
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
  fullName: System.IO.Ports.SerialPort.ReadBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia rozmiar <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> buforu wejściowego."
  remarks: "Właściwość ReadBufferSize ignoruje wszystkie wartość mniejszą niż 4096.       Ponieważ właściwość ReadBufferSize reprezentuje tylko buforu utworzone systemu Windows, może on zwrócić wartość mniejszą niż <xref:System.IO.Ports.SerialPort.BytesToRead%2A>właściwość, która reprezentuje zarówno <xref:System.IO.Ports.SerialPort>buforu i buforu utworzone systemu Windows.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Rozmiar buforu w bajtach. Wartość domyślna to 4096; wartość maksymalna jest dodatnią int lub 2147483647."
  overload: System.IO.Ports.SerialPort.ReadBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Podana wartość ReadBufferSize jest mniejsza niż lub równa zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Właściwość ReadBufferSize została ustawiona, gdy strumień jest otwarty."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Właściwość ReadBufferSize została ustawiona na wartość całkowitą nieparzysta."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadByte
  id: ReadByte
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadByte()
  nameWithType: SerialPort.ReadByte()
  fullName: System.IO.Ports.SerialPort.ReadByte()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Odczytuje synchronicznie jednego bajtu z <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> buforu wejściowego."
  remarks: "Ta metoda odczytuje jednego bajtu.       Należy zachować ostrożność przy użyciu ReadByte i <xref:System.IO.Ports.SerialPort.ReadChar%2A>ze sobą.</xref:System.IO.Ports.SerialPort.ReadChar%2A> Przełączanie między odczytywania bajtów i odczytywanie znaków może spowodować dodatkowe dane do odczytu i/lub innych niezamierzone zachowanie. Jeśli zachodzi konieczność przełączania się między odczytywanie tekstu i odczytywania ze strumienia danych binarnych, wybierz protokół, który definiuje dokładnie granicę między tekstem a danych binarnych, takich jak ręcznie odczytywania bajtów i dekodowania danych.      > [!NOTE] > Ponieważ <xref:System.IO.Ports.SerialPort>klasy buforów danych, a strumień zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>nie ma właściwości, dwa może powodować konflikt, o ile liczba dostępnych bajtów do odczytania.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  <xref:System.IO.Ports.SerialPort.BytesToRead%2A>Właściwość może wskazywać na brak bajtów do odczytania, że te bajtów nie może być dostępna dla strumienia zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>Właściwości, ponieważ ma zostać buforowane do <xref:System.IO.Ports.SerialPort>klasy.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "Byte, rzutować <xref:System.Int32>, lub wartość -1, jeśli został odczytany koniec strumienia.</xref:System.Int32>"
  overload: System.IO.Ports.SerialPort.ReadByte*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port nie jest otwarty."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No byte was read."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadChar
  id: ReadChar
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadChar()
  nameWithType: SerialPort.ReadChar()
  fullName: System.IO.Ports.SerialPort.ReadChar()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Odczytuje synchronicznie jeden znak z <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> buforu wejściowego."
  remarks: "Ta metoda odczytuje kodowania w oparciu o jeden znak ukończone.       Należy zachować ostrożność przy użyciu <xref:System.IO.Ports.SerialPort.ReadByte%2A>i ReadChar razem.</xref:System.IO.Ports.SerialPort.ReadByte%2A> Przełączanie między odczytywania bajtów i odczytywanie znaków może spowodować dodatkowe dane do odczytu i/lub innych niezamierzone zachowanie. Jeśli zachodzi konieczność przełączania się między odczytywanie tekstu i odczytywania ze strumienia danych binarnych, wybierz protokół, który definiuje dokładnie granicę między tekstem a danych binarnych, takich jak ręcznie odczytywania bajtów i dekodowania danych.      > [!NOTE] > Ponieważ <xref:System.IO.Ports.SerialPort>klasy buforów danych, a strumień zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>nie ma właściwości, dwa może powodować konflikt, o ile liczba dostępnych bajtów do odczytania.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  <xref:System.IO.Ports.SerialPort.BytesToRead%2A>Właściwość może wskazywać na brak bajtów do odczytania, że te bajtów nie może być dostępna dla strumienia zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>Właściwości, ponieważ ma zostać buforowane do <xref:System.IO.Ports.SerialPort>klasy.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadChar ();
    parameters: []
    return:
      type: System.Int32
      description: "Znak, który został odczytany."
  overload: System.IO.Ports.SerialPort.ReadChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port nie jest otwarty."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No character was available in the allotted time-out period."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadExisting
  id: ReadExisting
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadExisting()
  nameWithType: SerialPort.ReadExisting()
  fullName: System.IO.Ports.SerialPort.ReadExisting()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Odczytuje wszystkie bajty natychmiast dostępna, oparte na kodowania, zarówno w strumieniu, jak i buforu wejściowego z <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> obiektu."
  remarks: "Ta metoda zwraca zawartość strumienia i wewnętrznego buforu elementu <xref:System.IO.Ports.SerialPort>obiekt jako ciąg.</xref:System.IO.Ports.SerialPort> Ta metoda nie korzysta z limit czasu. Należy pamiętać, że ta metoda może narazić końcowe realizacji bajtów w buforze wewnętrznego, dzięki czemu <xref:System.IO.Ports.SerialPort.BytesToRead%2A>wartość większą niż zero.</xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Jeśli zachodzi konieczność przełączania się między odczytywanie tekstu i odczytywania ze strumienia danych binarnych, wybierz protokół, który definiuje dokładnie granicę między tekstem a danych binarnych, takich jak ręcznie odczytywania bajtów i dekodowania danych.      > [!NOTE] > <xref:System.IO.Ports.SerialPort>Klasy buforów danych, ale obiekt strumienia zawarty w <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName>nie obsługuje właściwości.</xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName> </xref:System.IO.Ports.SerialPort> W związku z tym <xref:System.IO.Ports.SerialPort>obiektu i obiekt strumienia mogą różnić się od liczby bajtów, które są dostępne do odczytu.</xref:System.IO.Ports.SerialPort> Gdy bajtów są buforowane na <xref:System.IO.Ports.SerialPort>obiektu <xref:System.IO.Ports.SerialPort.BytesToRead%2A>Właściwości obejmuje tych bajtów wartość; jednak tych bajtów nie może być dostępna dla strumienia zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>Właściwości.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A> </xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public string ReadExisting ();
    parameters: []
    return:
      type: System.String
      description: "Zawartość strumienia i buforu wejściowego z <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> obiektu."
  overload: System.IO.Ports.SerialPort.ReadExisting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port nie jest otwarty."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadLine
  id: ReadLine
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadLine()
  nameWithType: SerialPort.ReadLine()
  fullName: System.IO.Ports.SerialPort.ReadLine()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Odczytuje do <xref:System.IO.Ports.SerialPort.NewLine*>wartość w buforze wejściowym.</xref:System.IO.Ports.SerialPort.NewLine*>"
  remarks: "Należy pamiętać, że gdy ta metoda nie może zwracać <xref:System.IO.Ports.SerialPort.NewLine%2A>wartość <xref:System.IO.Ports.SerialPort.NewLine%2A>wartość zostanie usunięte z buforu wejściowego.</xref:System.IO.Ports.SerialPort.NewLine%2A> </xref:System.IO.Ports.SerialPort.NewLine%2A>       Domyślnie ReadLine — metoda zablokuje do momentu otrzymania wiersza. Jeśli to zachowanie jest niepożądane, ustaw <xref:System.IO.Ports.SerialPort.ReadTimeout%2A>Właściwość wartość niezerową wymuszenie ReadLine — metoda ma zostać zgłoszony, <xref:System.TimeoutException>Jeśli wiersz jest niedostępna na porcie.</xref:System.TimeoutException> </xref:System.IO.Ports.SerialPort.ReadTimeout%2A>       Jeśli zachodzi konieczność przełączania się między odczytywanie tekstu i odczytywania ze strumienia danych binarnych, wybierz protokół, który definiuje dokładnie granicę między tekstem a danych binarnych, takich jak ręcznie odczytywania bajtów i dekodowania danych.      > [!NOTE] > Ponieważ <xref:System.IO.Ports.SerialPort>klasy buforów danych, a strumień zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>nie ma właściwości, dwa może powodować konflikt, o ile liczba dostępnych bajtów do odczytania.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  <xref:System.IO.Ports.SerialPort.BytesToRead%2A>Właściwość może wskazywać na brak bajtów do odczytania, że te bajtów nie może być dostępna dla strumienia zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>Właściwości, ponieważ ma zostać buforowane do <xref:System.IO.Ports.SerialPort>klasy.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_0_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_0_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_0_1.vb)]"
  syntax:
    content: public string ReadLine ();
    parameters: []
    return:
      type: System.String
      description: "Zawartość buforu wejściowego do pierwszego wystąpienia <xref:System.IO.Ports.SerialPort.NewLine*>wartość.</xref:System.IO.Ports.SerialPort.NewLine*>"
  overload: System.IO.Ports.SerialPort.ReadLine*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port nie jest otwarty."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No bytes were read."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadTimeout
  id: ReadTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
  fullName: System.IO.Ports.SerialPort.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia liczbę milisekund, zanim upłynie limit czasu podczas operacji odczytu nie zakończy się."
  remarks: "Wartość limitu czasu odczytu pierwotnie została ustawiona podczas 500 milisekund w interfejsie API Win32 komunikacji. Ta właściwość umożliwia ustawienie tej wartości. Limit czasu można ustawić na wartość większą niż zero, lub wartość <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, w którym to przypadku limit czasu nie występuje.</xref:System.IO.Ports.SerialPort.InfiniteTimeout> <xref:System.IO.Ports.SerialPort.InfiniteTimeout>jest ustawieniem domyślnym.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>      > [!NOTE] > Użytkowników niezarządzanej `COMMTIMEOUTS` struktury oczekiwać, ustaw wartość limitu czasu na zero, aby pominąć przekroczeń limitu czasu. Aby pominąć limity czasu razem z właściwością ReadTimeout, jednak należy określić <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>       Ta właściwość nie ma wpływu na <xref:System.IO.Stream.BeginRead%2A>Strumień zwrócony przez metodę <xref:System.IO.Ports.SerialPort.BaseStream%2A>Właściwości.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream.BeginRead%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_1_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_1_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_1_1.vb)]"
  syntax:
    content: public int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "Wyrażony w milisekundach czas, zanim upłynie limit czasu podczas operacji odczytu nie zakończy się."
  overload: System.IO.Ports.SerialPort.ReadTimeout*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość limitu czasu odczytu jest mniejsza od zera i nie jest równa <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadTo(System.String)
  id: ReadTo(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadTo(String)
  nameWithType: SerialPort.ReadTo(String)
  fullName: System.IO.Ports.SerialPort.ReadTo(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Odczytuje ciąg do określonej <code> value </code> w buforze wejściowym."
  remarks: "Ta metoda odczytuje ciąg do określonej `value`. Gdy nie ma zwracany ciąg `value`, `value` zostanie usunięte z buforu wejściowego.       Jeśli zachodzi konieczność przełączania się między odczytywanie tekstu i odczytywania ze strumienia danych binarnych, wybierz protokół, który definiuje dokładnie granicę między tekstem a danych binarnych, takich jak ręcznie odczytywania bajtów i dekodowania danych.      > [!NOTE] > Ponieważ <xref:System.IO.Ports.SerialPort>klasy buforów danych, a strumień zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>nie ma właściwości, dwa może powodować konflikt, o ile liczba dostępnych bajtów do odczytania.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  <xref:System.IO.Ports.SerialPort.BytesToRead%2A>Właściwość może wskazywać na brak bajtów do odczytania, że te bajtów nie może być dostępna dla strumienia zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A>Właściwości, ponieważ ma zostać buforowane do <xref:System.IO.Ports.SerialPort>klasy.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public string ReadTo (string value);
    parameters:
    - id: value
      type: System.String
      description: "Wartość, która wskazuje, gdzie zatrzymuje operacji odczytu."
    return:
      type: System.String
      description: "Bufor wejściowy do określonej zawartości <code> value </code>."
  overload: System.IO.Ports.SerialPort.ReadTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Długość <code> value </code> parametru jest 0."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port nie jest otwarty."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Operacja nie została ukończona przed upłynął limit czasu."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  id: ReceivedBytesThreshold
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
  fullName: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia liczbę bajtów w buforze wejściowym wewnętrzny przed <xref href=&quot;System.IO.Ports.SerialPort.DataReceived&quot;> </xref> zdarzenie."
  remarks: "<xref:System.IO.Ports.SerialPort.DataReceived>Również zdarzenia Jeśli <xref:System.IO.Ports.SerialData>znak zostanie odebrana, niezależnie od tego, czy liczba bajtów w buforze wejściowym, wewnętrzny i wartość właściwości ReceivedBytesThreshold.</xref:System.IO.Ports.SerialData> </xref:System.IO.Ports.SerialPort.DataReceived>"
  syntax:
    content: public int ReceivedBytesThreshold { get; set; }
    return:
      type: System.Int32
      description: "Liczba bajtów w buforze wejściowym wewnętrzny przed <xref href=&quot;System.IO.Ports.SerialPort.DataReceived&quot;> </xref> zdarzenie jest wywoływane. Wartość domyślna to 1."
  overload: System.IO.Ports.SerialPort.ReceivedBytesThreshold*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość ReceivedBytesThreshold jest mniejsza lub równa zero."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.RtsEnable
  id: RtsEnable
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
  fullName: System.IO.Ports.SerialPort.RtsEnable
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia wartość wskazującą, czy podczas komunikacji szeregowej włączono żądań wysłania (RTS) sygnału."
  remarks: "Żądanie sygnał transmisji (RTS) jest zwykle stosowane w żądanie do wysyłania/wyczyść do wysłania (RTS/CTS) uzgadnianie sprzętu."
  syntax:
    content: public bool RtsEnable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby włączyć żądania do przesłania (RTS); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.RtsEnable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wartość właściwości dostęp został ustawić lub pobrać podczas <xref:System.IO.Ports.SerialPort.Handshake*>właściwość jest ustawiona na <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> wartość lub <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> wartość.</xref:System.IO.Ports.SerialPort.Handshake*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.StopBits
  id: StopBits
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: StopBits
  nameWithType: SerialPort.StopBits
  fullName: System.IO.Ports.SerialPort.StopBits
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia liczbę stopbits na bajt."
  remarks: "Wartość domyślna dla StopBits to <xref:System.IO.Ports.StopBits>.</xref:System.IO.Ports.StopBits>       <xref:System.IO.Ports.StopBits?displayProperty=fullName>Wartość nie jest obsługiwana.</xref:System.IO.Ports.StopBits?displayProperty=fullName>"
  example:
  - "The following example shows how to set the StopBits property to `One`.  \n  \n [!code-cs[System.IO.Ports.SerialPort#20](~/add/codesnippet/csharp/p-system.io.ports.serial_2_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#20](~/add/codesnippet/cpp/p-system.io.ports.serial_2_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#20](~/add/codesnippet/visualbasic/p-system.io.ports.serial_2_1.vb)]  \n  \n The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_2_2.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_2_2.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_2_2.vb)]"
  syntax:
    content: public System.IO.Ports.StopBits StopBits { get; set; }
    return:
      type: System.IO.Ports.StopBits
      description: "Jeden z <xref href=&quot;System.IO.Ports.StopBits&quot;> </xref> wartości."
  overload: System.IO.Ports.SerialPort.StopBits*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość StopBits jest <xref href=&quot;System.IO.Ports.StopBits&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.String)
  id: Write(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(String)
  nameWithType: SerialPort.Write(String)
  fullName: System.IO.Ports.SerialPort.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Zapisuje określony ciąg do portu szeregowego."
  remarks: "Użyj tej metody, jeśli chcesz zapisać ciąg jako dane wyjściowe do portu szeregowego.       Jeśli istnieje za dużo bajtów w buforze danych wyjściowych i <xref:System.IO.Ports.SerialPort.Handshake%2A>ma ustawioną wartość <xref:System.IO.Ports.Handshake>, a następnie <xref:System.IO.Ports.SerialPort>obiektu mogą zgłaszać <xref:System.ServiceProcess.TimeoutException>podczas oczekiwania urządzenie będzie gotowa do akceptacji większej ilości danych.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Domyślnie <xref:System.IO.Ports.SerialPort>używa <xref:System.Text.ASCIIEncoding>do kodowania znaków.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>koduje znaki większej niż 127 jako (char) 63 lub &quot;?&quot;.</xref:System.Text.ASCIIEncoding> Do obsługi dodatkowych znaków w tym zakresie, ustaw <xref:System.IO.Ports.SerialPort.Encoding%2A>do <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, lub <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (string text);
    parameters:
    - id: text
      type: System.String
      description: "Ciąg dla danych wyjściowych."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port nie jest otwarty."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>str</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "Operacja nie została ukończona przed upłynął limit czasu."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SerialPort.Write(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Zapisuje określoną liczbę bajtów do portu szeregowego przy użyciu danych z bufora."
  remarks: "Użyj tej metody, jeśli chcesz zapisywać w buforze bajtów, aby utworzyć dane wyjściowe do portu szeregowego.       Jeśli istnieje za dużo bajtów w buforze danych wyjściowych i <xref:System.IO.Ports.SerialPort.Handshake%2A>ma ustawioną wartość <xref:System.IO.Ports.Handshake>, a następnie <xref:System.IO.Ports.SerialPort>obiektu mogą zgłaszać <xref:System.ServiceProcess.TimeoutException>podczas oczekiwania urządzenie będzie gotowa do akceptacji większej ilości danych.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Domyślnie <xref:System.IO.Ports.SerialPort>używa <xref:System.Text.ASCIIEncoding>do kodowania znaków.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>koduje znaki większej niż 127 jako (char) 63 lub &quot;?&quot;.</xref:System.Text.ASCIIEncoding> Do obsługi dodatkowych znaków w tym zakresie, ustaw <xref:System.IO.Ports.SerialPort.Encoding%2A>do <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, lub <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Tablica bajtów, który zawiera dane do zapisania do portu."
    - id: offset
      type: System.Int32
      description: "Zerze przesunięcie w `buffer` parametru, od którego należy zacząć kopiowanie bajtów do portu."
    - id: count
      type: System.Int32
      description: "Liczba bajtów do zapisania."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port nie jest otwarty."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code> Lub <code> count </code> parametry są poza prawidłową obszaru <code> buffer </code> przekazywany. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>plus <code>count</code> jest większa niż długość <code>buffer</code>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "Operacja nie została ukończona przed upłynął limit czasu."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: SerialPort.Write(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Zapisuje określoną liczbę znaków do portu szeregowego przy użyciu danych z bufora."
  remarks: "Użyj tej metody, jeśli chcesz zapisywać w buforze znaków, aby utworzyć dane wyjściowe do portu szeregowego.       Jeśli istnieje za dużo bajtów w buforze danych wyjściowych i <xref:System.IO.Ports.SerialPort.Handshake%2A>ma ustawioną wartość <xref:System.IO.Ports.Handshake>, a następnie <xref:System.IO.Ports.SerialPort>obiektu mogą zgłaszać <xref:System.ServiceProcess.TimeoutException>podczas oczekiwania urządzenie będzie gotowa do akceptacji większej ilości danych.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Domyślnie <xref:System.IO.Ports.SerialPort>używa <xref:System.Text.ASCIIEncoding>do kodowania znaków.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>koduje znaki większej niż 127 jako (char) 63 lub &quot;?&quot;.</xref:System.Text.ASCIIEncoding> Do obsługi dodatkowych znaków w tym zakresie, ustaw <xref:System.IO.Ports.SerialPort.Encoding%2A>do <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, lub <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (char[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Tablica znaków, która zawiera dane do zapisania do portu."
    - id: offset
      type: System.Int32
      description: "Zerze przesunięcie w `buffer` parametru, od którego należy zacząć kopiowanie bajtów do portu."
    - id: count
      type: System.Int32
      description: "Liczba znaków do zapisu."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port nie jest otwarty."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> offset </code> Lub <code> count </code> parametry są poza prawidłową obszaru <code> buffer </code> przekazywany. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>plus <code>count</code> jest większa niż długość <code>buffer</code>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "Operacja nie została ukończona przed upłynął limit czasu."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteBufferSize
  id: WriteBufferSize
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
  fullName: System.IO.Ports.SerialPort.WriteBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia rozmiar buforu wyjściowego portu szeregowego."
  remarks: "Właściwość WriteBufferSize ignoruje wszystkie wartość mniejszą niż 2048."
  syntax:
    content: public int WriteBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Rozmiar buforu wyjściowego. Wartość domyślna to 2048."
  overload: System.IO.Ports.SerialPort.WriteBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość WriteBufferSize jest mniejsza lub równa zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Właściwość WriteBufferSize została ustawiona, gdy strumień jest otwarty."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Właściwość WriteBufferSize została ustawiona na wartość całkowitą nieparzysta."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: SerialPort.WriteLine(String)
  fullName: System.IO.Ports.SerialPort.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Zapisuje określony ciąg i <xref:System.IO.Ports.SerialPort.NewLine*>wartość do buforu wyjściowego.</xref:System.IO.Ports.SerialPort.NewLine*>"
  remarks: "Jeśli istnieje za dużo bajtów w buforze wejściowym i <xref:System.IO.Ports.SerialPort.Handshake%2A>ma ustawioną wartość <xref:System.IO.Ports.Handshake>, a następnie <xref:System.IO.Ports.SerialPort>obiektu mogą zgłaszać <xref:System.ServiceProcess.TimeoutException>podczas oczekiwania urządzenie będzie gotowa do akceptacji większej ilości danych.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Zapisywane dane wyjściowe obejmują <xref:System.IO.Ports.SerialPort.NewLine%2A>ciągu.</xref:System.IO.Ports.SerialPort.NewLine%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_1_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_1_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_1_1.vb)]"
  syntax:
    content: public void WriteLine (string text);
    parameters:
    - id: text
      type: System.String
      description: "Ciąg, który można zapisać w buforze danych wyjściowych."
  overload: System.IO.Ports.SerialPort.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>str</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony port nie jest otwarty."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Metoda WriteLine nie można zapisać do strumienia."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteTimeout
  id: WriteTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
  fullName: System.IO.Ports.SerialPort.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Pobiera lub ustawia liczbę milisekund, zanim upłynie limit czasu podczas operacji zapisu nie zakończy się."
  remarks: "Wartość limitu czasu zapisu pierwotnie została ustawiona podczas 500 milisekund w interfejsie API Win32 komunikacji. Ta właściwość umożliwia ustawienie tej wartości. Limit czasu można ustawić na wartość większą niż zero, lub wartość <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, w którym to przypadku limit czasu nie występuje.</xref:System.IO.Ports.SerialPort.InfiniteTimeout> <xref:System.IO.Ports.SerialPort.InfiniteTimeout>jest ustawieniem domyślnym.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>      > [!NOTE] > Użytkowników niezarządzanej `COMMTIMEOUTS` struktury oczekiwać, ustaw wartość limitu czasu na zero, aby pominąć przekroczeń limitu czasu. Aby pominąć limity czasu razem z właściwością WriteTimeout, jednak należy określić <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>       Ta właściwość nie ma wpływu na <xref:System.IO.Stream.BeginWrite%2A>Strumień zwrócony przez metodę <xref:System.IO.Ports.SerialPort.BaseStream%2A>Właściwości.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream.BeginWrite%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_5_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_5_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_5_1.vb)]"
  syntax:
    content: public int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Wyrażony w milisekundach czas, zanim upłynie limit czasu. Wartość domyślna to <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.WriteTimeout*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość WriteTimeout jest mniejsza od zera i nie jest równa <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.TimeoutException
  isExternal: true
  name: System.TimeoutException
- uid: System.ServiceProcess.TimeoutException
  parent: System.ServiceProcess
  isExternal: false
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: System.ServiceProcess.TimeoutException
- uid: System.IO.Ports.SerialPort.#ctor
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort()
  nameWithType: SerialPort.SerialPort()
  fullName: System.IO.Ports.SerialPort.SerialPort()
- uid: System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(IContainer)
  nameWithType: SerialPort.SerialPort(IContainer)
  fullName: System.IO.Ports.SerialPort.SerialPort(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.IO.Ports.SerialPort.#ctor(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String)
  nameWithType: SerialPort.SerialPort(String)
  fullName: System.IO.Ports.SerialPort.SerialPort(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity)
- uid: System.IO.Ports.Parity
  parent: System.IO.Ports
  isExternal: false
  name: Parity
  nameWithType: Parity
  fullName: System.IO.Ports.Parity
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32)
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
- uid: System.IO.Ports.StopBits
  parent: System.IO.Ports
  isExternal: false
  name: StopBits
  nameWithType: StopBits
  fullName: System.IO.Ports.StopBits
- uid: System.IO.Ports.SerialPort.BaseStream
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaseStream
  nameWithType: SerialPort.BaseStream
  fullName: System.IO.Ports.SerialPort.BaseStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Ports.SerialPort.BaudRate
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaudRate
  nameWithType: SerialPort.BaudRate
  fullName: System.IO.Ports.SerialPort.BaudRate
- uid: System.IO.Ports.SerialPort.BreakState
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BreakState
  nameWithType: SerialPort.BreakState
  fullName: System.IO.Ports.SerialPort.BreakState
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Ports.SerialPort.BytesToRead
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
  fullName: System.IO.Ports.SerialPort.BytesToRead
- uid: System.IO.Ports.SerialPort.BytesToWrite
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
  fullName: System.IO.Ports.SerialPort.BytesToWrite
- uid: System.IO.Ports.SerialPort.CDHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CDHolding
  nameWithType: SerialPort.CDHolding
  fullName: System.IO.Ports.SerialPort.CDHolding
- uid: System.IO.Ports.SerialPort.Close
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Close()
  nameWithType: SerialPort.Close()
  fullName: System.IO.Ports.SerialPort.Close()
- uid: System.IO.Ports.SerialPort.CtsHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
  fullName: System.IO.Ports.SerialPort.CtsHolding
- uid: System.IO.Ports.SerialPort.DataBits
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataBits
  nameWithType: SerialPort.DataBits
  fullName: System.IO.Ports.SerialPort.DataBits
- uid: System.IO.Ports.SerialPort.DataReceived
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataReceived
  nameWithType: SerialPort.DataReceived
  fullName: System.IO.Ports.SerialPort.DataReceived
- uid: System.IO.Ports.SerialDataReceivedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialDataReceivedEventHandler
  nameWithType: SerialDataReceivedEventHandler
  fullName: System.IO.Ports.SerialDataReceivedEventHandler
- uid: System.IO.Ports.SerialPort.DiscardInBuffer
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardInBuffer()
  nameWithType: SerialPort.DiscardInBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardInBuffer()
- uid: System.IO.Ports.SerialPort.DiscardNull
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
  fullName: System.IO.Ports.SerialPort.DiscardNull
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardOutBuffer()
  nameWithType: SerialPort.DiscardOutBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardOutBuffer()
- uid: System.IO.Ports.SerialPort.Dispose(System.Boolean)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SerialPort.Dispose(Boolean)
  fullName: System.IO.Ports.SerialPort.Dispose(Boolean)
- uid: System.IO.Ports.SerialPort.DsrHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
  fullName: System.IO.Ports.SerialPort.DsrHolding
- uid: System.IO.Ports.SerialPort.DtrEnable
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
  fullName: System.IO.Ports.SerialPort.DtrEnable
- uid: System.IO.Ports.SerialPort.Encoding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Encoding
  nameWithType: SerialPort.Encoding
  fullName: System.IO.Ports.SerialPort.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Ports.SerialPort.ErrorReceived
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ErrorReceived
  nameWithType: SerialPort.ErrorReceived
  fullName: System.IO.Ports.SerialPort.ErrorReceived
- uid: System.IO.Ports.SerialErrorReceivedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialErrorReceivedEventHandler
  nameWithType: SerialErrorReceivedEventHandler
  fullName: System.IO.Ports.SerialErrorReceivedEventHandler
- uid: System.IO.Ports.SerialPort.GetPortNames
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: GetPortNames()
  nameWithType: SerialPort.GetPortNames()
  fullName: System.IO.Ports.SerialPort.GetPortNames()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.Handshake
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Handshake
  nameWithType: SerialPort.Handshake
  fullName: System.IO.Ports.SerialPort.Handshake
- uid: System.IO.Ports.Handshake
  parent: System.IO.Ports
  isExternal: false
  name: Handshake
  nameWithType: Handshake
  fullName: System.IO.Ports.Handshake
- uid: System.IO.Ports.SerialPort.InfiniteTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: InfiniteTimeout
  nameWithType: SerialPort.InfiniteTimeout
  fullName: System.IO.Ports.SerialPort.InfiniteTimeout
- uid: System.IO.Ports.SerialPort.IsOpen
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: IsOpen
  nameWithType: SerialPort.IsOpen
  fullName: System.IO.Ports.SerialPort.IsOpen
- uid: System.IO.Ports.SerialPort.NewLine
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: NewLine
  nameWithType: SerialPort.NewLine
  fullName: System.IO.Ports.SerialPort.NewLine
- uid: System.IO.Ports.SerialPort.Open
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Open()
  nameWithType: SerialPort.Open()
  fullName: System.IO.Ports.SerialPort.Open()
- uid: System.IO.Ports.SerialPort.Parity
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Parity
  nameWithType: SerialPort.Parity
  fullName: System.IO.Ports.SerialPort.Parity
- uid: System.IO.Ports.SerialPort.ParityReplace
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
  fullName: System.IO.Ports.SerialPort.ParityReplace
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Ports.SerialPort.PinChanged
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PinChanged
  nameWithType: SerialPort.PinChanged
  fullName: System.IO.Ports.SerialPort.PinChanged
- uid: System.IO.Ports.SerialPinChangedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialPinChangedEventHandler
  nameWithType: SerialPinChangedEventHandler
  fullName: System.IO.Ports.SerialPinChangedEventHandler
- uid: System.IO.Ports.SerialPort.PortName
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PortName
  nameWithType: SerialPort.PortName
  fullName: System.IO.Ports.SerialPort.PortName
- uid: System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SerialPort.Read(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read(Char[],Int32,Int32)
  nameWithType: SerialPort.Read(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.ReadBufferSize
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
  fullName: System.IO.Ports.SerialPort.ReadBufferSize
- uid: System.IO.Ports.SerialPort.ReadByte
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadByte()
  nameWithType: SerialPort.ReadByte()
  fullName: System.IO.Ports.SerialPort.ReadByte()
- uid: System.IO.Ports.SerialPort.ReadChar
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadChar()
  nameWithType: SerialPort.ReadChar()
  fullName: System.IO.Ports.SerialPort.ReadChar()
- uid: System.IO.Ports.SerialPort.ReadExisting
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadExisting()
  nameWithType: SerialPort.ReadExisting()
  fullName: System.IO.Ports.SerialPort.ReadExisting()
- uid: System.IO.Ports.SerialPort.ReadLine
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadLine()
  nameWithType: SerialPort.ReadLine()
  fullName: System.IO.Ports.SerialPort.ReadLine()
- uid: System.IO.Ports.SerialPort.ReadTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
  fullName: System.IO.Ports.SerialPort.ReadTimeout
- uid: System.IO.Ports.SerialPort.ReadTo(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTo(String)
  nameWithType: SerialPort.ReadTo(String)
  fullName: System.IO.Ports.SerialPort.ReadTo(String)
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
  fullName: System.IO.Ports.SerialPort.ReceivedBytesThreshold
- uid: System.IO.Ports.SerialPort.RtsEnable
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
  fullName: System.IO.Ports.SerialPort.RtsEnable
- uid: System.IO.Ports.SerialPort.StopBits
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: StopBits
  nameWithType: SerialPort.StopBits
  fullName: System.IO.Ports.SerialPort.StopBits
- uid: System.IO.Ports.SerialPort.Write(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(String)
  nameWithType: SerialPort.Write(String)
  fullName: System.IO.Ports.SerialPort.Write(String)
- uid: System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SerialPort.Write(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Byte[],Int32,Int32)
- uid: System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: SerialPort.Write(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Char[],Int32,Int32)
- uid: System.IO.Ports.SerialPort.WriteBufferSize
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
  fullName: System.IO.Ports.SerialPort.WriteBufferSize
- uid: System.IO.Ports.SerialPort.WriteLine(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteLine(String)
  nameWithType: SerialPort.WriteLine(String)
  fullName: System.IO.Ports.SerialPort.WriteLine(String)
- uid: System.IO.Ports.SerialPort.WriteTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
  fullName: System.IO.Ports.SerialPort.WriteTimeout
- uid: System.IO.Ports.SerialPort.#ctor*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort
  nameWithType: SerialPort.SerialPort
- uid: System.IO.Ports.SerialPort.BaseStream*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaseStream
  nameWithType: SerialPort.BaseStream
- uid: System.IO.Ports.SerialPort.BaudRate*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaudRate
  nameWithType: SerialPort.BaudRate
- uid: System.IO.Ports.SerialPort.BreakState*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BreakState
  nameWithType: SerialPort.BreakState
- uid: System.IO.Ports.SerialPort.BytesToRead*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
- uid: System.IO.Ports.SerialPort.BytesToWrite*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
- uid: System.IO.Ports.SerialPort.CDHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CDHolding
  nameWithType: SerialPort.CDHolding
- uid: System.IO.Ports.SerialPort.Close*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Close
  nameWithType: SerialPort.Close
- uid: System.IO.Ports.SerialPort.CtsHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
- uid: System.IO.Ports.SerialPort.DataBits*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataBits
  nameWithType: SerialPort.DataBits
- uid: System.IO.Ports.SerialPort.DiscardInBuffer*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardInBuffer
  nameWithType: SerialPort.DiscardInBuffer
- uid: System.IO.Ports.SerialPort.DiscardNull*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardOutBuffer
  nameWithType: SerialPort.DiscardOutBuffer
- uid: System.IO.Ports.SerialPort.Dispose*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Dispose
  nameWithType: SerialPort.Dispose
- uid: System.IO.Ports.SerialPort.DsrHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
- uid: System.IO.Ports.SerialPort.DtrEnable*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
- uid: System.IO.Ports.SerialPort.Encoding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Encoding
  nameWithType: SerialPort.Encoding
- uid: System.IO.Ports.SerialPort.GetPortNames*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: GetPortNames
  nameWithType: SerialPort.GetPortNames
- uid: System.IO.Ports.SerialPort.Handshake*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Handshake
  nameWithType: SerialPort.Handshake
- uid: System.IO.Ports.SerialPort.IsOpen*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: IsOpen
  nameWithType: SerialPort.IsOpen
- uid: System.IO.Ports.SerialPort.NewLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: NewLine
  nameWithType: SerialPort.NewLine
- uid: System.IO.Ports.SerialPort.Open*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Open
  nameWithType: SerialPort.Open
- uid: System.IO.Ports.SerialPort.Parity*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Parity
  nameWithType: SerialPort.Parity
- uid: System.IO.Ports.SerialPort.ParityReplace*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
- uid: System.IO.Ports.SerialPort.PortName*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PortName
  nameWithType: SerialPort.PortName
- uid: System.IO.Ports.SerialPort.Read*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read
  nameWithType: SerialPort.Read
- uid: System.IO.Ports.SerialPort.ReadBufferSize*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
- uid: System.IO.Ports.SerialPort.ReadByte*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadByte
  nameWithType: SerialPort.ReadByte
- uid: System.IO.Ports.SerialPort.ReadChar*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadChar
  nameWithType: SerialPort.ReadChar
- uid: System.IO.Ports.SerialPort.ReadExisting*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadExisting
  nameWithType: SerialPort.ReadExisting
- uid: System.IO.Ports.SerialPort.ReadLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadLine
  nameWithType: SerialPort.ReadLine
- uid: System.IO.Ports.SerialPort.ReadTimeout*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
- uid: System.IO.Ports.SerialPort.ReadTo*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTo
  nameWithType: SerialPort.ReadTo
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
- uid: System.IO.Ports.SerialPort.RtsEnable*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
- uid: System.IO.Ports.SerialPort.StopBits*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: StopBits
  nameWithType: SerialPort.StopBits
- uid: System.IO.Ports.SerialPort.Write*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write
  nameWithType: SerialPort.Write
- uid: System.IO.Ports.SerialPort.WriteBufferSize*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
- uid: System.IO.Ports.SerialPort.WriteLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteLine
  nameWithType: SerialPort.WriteLine
- uid: System.IO.Ports.SerialPort.WriteTimeout*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
