### YamlMime:ManagedReference
items:
- uid: System.Web.UI.RoleServiceManager
  id: RoleServiceManager
  children:
  - System.Web.UI.RoleServiceManager.#ctor
  - System.Web.UI.RoleServiceManager.LoadRoles
  - System.Web.UI.RoleServiceManager.Path
  langs:
  - csharp
  name: RoleServiceManager
  nameWithType: RoleServiceManager
  fullName: System.Web.UI.RoleServiceManager
  type: Class
  summary: "Określa lokalizację niestandardowych implementacji usługi roli."
  remarks: "Klasa RoleServiceManager odpowiada <xref:System.Web.UI.ScriptManager.RoleService%2A>Właściwość <xref:System.Web.UI.ScriptManager>lub <xref:System.Web.UI.ScriptManagerProxy>kontroli.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RoleService%2A>       Rola usługi sieci Web jest używany przez aplikacje z włączoną obsługą technologii AJAX można pobrać informacji o roli dla bieżącego użytkownika uwierzytelnionego przy użyciu asynchroniczne wywołanie usługi sieci Web. RoleServiceManager służy do nadania ścieżkę alternatywną implementację roli usługi sieci Web zamiast wbudowanej usługi sieci Web.       Do korzystania z usługi roli w aplikacji, należy ją włączyć w pliku konfiguracji i Zadeklaruj ją na stronie. Jeśli używasz wbudowanej roli usługi sieci Web musi zostać włączony, ale nie trzeba jawnie deklarować roli programu service manager na stronie.       Aby utworzyć usługę niestandardowej roli zabezpieczeń, musisz zaimplementować usługi sieci Web, która ma dwie metody: `GetRolesForCurrentUser` i `IsCurrentUserInRole`. Te metody muszą mieć taką samą sygnaturę jak odpowiednich metod wbudowanych roli usługi sieci Web.       Poniższy przykład przedstawia struktura klasy podstawowej, która musi zostać wdrożona w niestandardowej roli zabezpieczeń klasy usługi sieci Web.       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] Aby użyć niestandardowej roli usługi sieci Web, można dodać usługi deklaratywnie w znacznikach ustawiając `RoleService` element wewnątrz <xref:System.Web.UI.ScriptManager>kontroli, jak pokazano w poniższym przykładzie.</xref:System.Web.UI.ScriptManager>      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <RoleService Path=&quot;MyRoleService.asmx&quot; LoadRoles=&quot;true&quot; />   </asp:ScriptManager>   ```Można również programowane Ustawianie <xref:System.Web.UI.RoleServiceManager.Path%2A>Właściwości, aby użyć niestandardowej roli usługi sieci Web.</xref:System.Web.UI.RoleServiceManager.Path%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class RoleServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.RoleServiceManager&quot;> </xref> klasy."
  syntax:
    content: public RoleServiceManager ();
    parameters: []
  overload: System.Web.UI.RoleServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  id: LoadRoles
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Pobiera lub ustawia wartość wskazującą, czy można pobierać listę ról dla obecnie zalogowanego użytkownika."
  remarks: "Jeśli ustawiono właściwość LoadRoles `true`, listę ról są pobierane przez <xref:System.Web.UI.RoleServiceManager>przy użyciu <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName>metody.</xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> </xref:System.Web.UI.RoleServiceManager> Lista jest następnie serializowany w znaczniku strony.      > [!NOTE] > Jest LoadRoles po `true`, wszystkie role, które należy bieżący użytkownik uwierzytelniony są wysyłane do przeglądarki. Ponieważ użytkownicy mogą potencjalnie wyświetlać informacje o rolach, może to być problem z zabezpieczeniami.       Właściwość LoadRoles może zostać określona w <xref:System.Web.UI.ScriptManager>kontroli lub skojarzony <xref:System.Web.UI.ScriptManagerProxy>kontroli.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Jeśli ustawiono LoadRoles `true` dla wystąpienia serwera proxy, listę ról jest pobierany i dodany do strony. Jeśli jest LoadRoles `false`, role nie są dodawane do znaczników. W takim przypadku metoda służy do przechowywania informacji o roli w pamięci w przeglądarce."
  syntax:
    content: public bool LoadRoles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli musi zostać pobrana lista ról; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.RoleServiceManager.LoadRoles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.Path
  id: Path
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Pobiera lub ustawia ścieżkę usługi roli."
  remarks: "Jeśli nie ustawiono właściwości Path, zwracana wartość jest <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName> W takim przypadku program ASP.NET używa wbudowanego uwierzytelniania usługi sieci Web, która odnosi się do następującej ścieżki wewnętrznego ustawienia domyślnego: ~ / RolesService.svc. Takie samo zachowanie występuje, gdy można ustawić ścieżkę do ciągu pustego lub do `null`.       Można określić ścieżkę w <xref:System.Web.UI.ScriptManager>kontroli lub skojarzony <xref:System.Web.UI.ScriptManagerProxy>kontroli.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Jeśli ścieżka jest ustawiona na <xref:System.Web.UI.ScriptManagerProxy>poziomu, są spełnione następujące warunki:-w przypadku wielu obiektów pośredniczących w hierarchii kontroli, ścieżki nie ma zostać ustawione dla każdego wystąpienia serwera proxy.</xref:System.Web.UI.ScriptManagerProxy>      — Jeśli ścieżka jest jawnie ustawiona dla obiekt serwera proxy, wartość musi być taka sama dla wszystkich innych obiektów serwera proxy, które ta właściwość jest ustawiona dla. Jeśli ustawisz różne ścieżki dla innego serwera proxy obiektów w hierarchii kontroli <xref:System.ArgumentException>wyjątku.</xref:System.ArgumentException>"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "Ścieżka niestandardowej roli usługi sieci Web."
  overload: System.Web.UI.RoleServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Więcej niż jednej unikatowej ścieżki została ustawiona w hierarchii formantu."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.RoleServiceManager.#ctor
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.RoleServiceManager.Path
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.RoleServiceManager.#ctor*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager
  nameWithType: RoleServiceManager.RoleServiceManager
- uid: System.Web.UI.RoleServiceManager.LoadRoles*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
- uid: System.Web.UI.RoleServiceManager.Path*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
