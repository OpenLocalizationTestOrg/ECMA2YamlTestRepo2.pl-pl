### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  id: SqlUserDefinedTypeAttribute
  children:
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  langs:
  - csharp
  name: SqlUserDefinedTypeAttribute
  nameWithType: SqlUserDefinedTypeAttribute
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  type: Class
  summary: "Używany do oznaczania definicja typu w zestawie jako typ zdefiniowany przez użytkownika (UDT) w programie SQL Server. Właściwości w ustawieniach atrybutu odzwierciedlają charakterystyki fizycznej używany, gdy typ jest zarejestrowany na serwerze SQL. Ta klasa nie może być dziedziczona."
  remarks: "Program SQL Server tworzy typu zdefiniowane przez użytkownika, który jest powiązany z definicji typu, który ma atrybut niestandardowy SqlUserDefinedTypeAttribute. Każdy UDT musi być adnotowany przy tego atrybutu. Zobacz [typy CLR User-Defined](http://go.microsoft.com/fwlink/?LinkId=128028) uzyskać więcej informacji na temat typów, w tym przykładzie UDT."
  example:
  - "The following example shows the `UserDefinedType` attribute of the Point UDT.  The UDT is byte-ordered, is named \"Point\", has a validation method named \"ValidatePoint\", and uses the native serialization format.  \n  \n [!code-cs[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_4_1.cs)]\n [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_4_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)]

      public sealed class SqlUserDefinedTypeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)
  id: '#ctor(Microsoft.SqlServer.Server.Format)'
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: SqlUserDefinedTypeAttribute(Format)
  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
  type: Constructor
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Wymaganego atrybutu w typie zdefiniowane przez użytkownika (UDT) używane do upewnij się, że podany typ jest UDT i oznaczać format przechowywania typu."
  remarks: "Poniższy przykład określa, że `Format` typ zdefiniowany przez użytkownika jest `SerializedDataWithMetadata`i`MaxByteSize` jest 8000 bajtów."
  example:
  - >-
    [!code-cs[VbRaddataSQLObjects#12](~/add/codesnippet/csharp/CS/Type1.cs#12)]
     [!code-vb[VbRaddataSQLObjects#12](~/add/codesnippet/visualbasic/VB/Type1.vb#12)]
  syntax:
    content: public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);
    parameters:
    - id: format
      type: Microsoft.SqlServer.Server.Format
      description: "Jeden z <xref href=&quot;Microsoft.SqlServer.Server.Format&quot;> </xref> reprezentujący format serializacji typu wartości."
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  id: Format
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: Format
  nameWithType: SqlUserDefinedTypeAttribute.Format
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Format serializacji jako <xref href=&quot;Microsoft.SqlServer.Server.Format&quot;> </xref>."
  syntax:
    content: public Microsoft.SqlServer.Server.Format Format { get; }
    return:
      type: Microsoft.SqlServer.Server.Format
      description: "A <xref href=&quot;Microsoft.SqlServer.Server.Format&quot;> </xref> wartość reprezentującą format serializacji."
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  id: IsByteOrdered
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: IsByteOrdered
  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Wskazuje, czy typ zdefiniowany przez użytkownika jest uporządkowany bajtów."
  remarks: "When set to `true`, the IsByteOrdered property in effect guarantees that the serialized binary data can be used for semantic ordering of the information. Thus, each instance of a byte-ordered UDT object can only have one serialized representation. When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code..  \n  \n The following features are supported when IsByteOrdered is set to `true`:  \n  \n-   The ability to create indexes on columns of this type.  \n  \n-   The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.  \n  \n-   The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses. In these cases, the binary representation of the type is used to determine the order.  \n  \n-   The ability to use comparison operators in Transact-SQL statements.  \n  \n-   The ability to persist computed columns of this type.  \n  \n Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when IsByteOrdered is set to `true`:  \n  \n-   Equal to (=)  \n  \n-   Not equal to (!=)  \n  \n-   Greater than (>)  \n  \n-   Less than (\\<)  \n  \n-   Greater than or equal to (>=)  \n  \n-   Less than or equal to (<=)"
  syntax:
    content: public bool IsByteOrdered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli typ zdefiniowany przez użytkownika jest bajtów uporządkowane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  id: IsFixedLength
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: IsFixedLength
  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Wskazuje, czy wszystkie wystąpienia tego typu użytkownika mają taką samą długość."
  remarks: "Jeśli ustawiono `true`, wszystkich wystąpień typów odpowiadający to wspólny typ środowiska uruchomieniowego (języka wspólnego CLR) języka musi mieć długość w bajtach dokładnie takie same <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> Ten atrybut ma zastosowanie tylko dla typów z `UserDefined` szeregowanie <xref:Microsoft.SqlServer.Server.Format>.</xref:Microsoft.SqlServer.Server.Format>"
  syntax:
    content: public bool IsFixedLength { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wszystkie wystąpienia tego typu są taką samą długość; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  id: MaxByteSize
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: MaxByteSize
  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Maksymalny rozmiar w bajtach wystąpienia."
  remarks: "Należy określić właściwość MaxByteSize z `UserDefined` szeregowanie <xref:Microsoft.SqlServer.Server.Format>.</xref:Microsoft.SqlServer.Server.Format>       Podczas nawiązywania połączenia do programu SQL Server 2005 lub wcześniej, MaxByteSize musi być od 1 do 8000.       Podczas nawiązywania połączenia do programu SQL Server 2008 lub nowszego, należy ustawić dla właściwości MaxByteSize od 1 do 8000, dla typu, których wystąpienia są zawsze 8000 bajtów lub mniej. Dla typów, które mogą mieć większe niż 8000 wystąpień Określ wartość -1.       W UDT serializacji zdefiniowanej przez użytkownika określona właściwości MaxByteSize dotyczy całkowity rozmiar UDT w postaci serializacji zdefiniowanej przez użytkownika. Należy wziąć pod uwagę UDT z właściwością w ciągu 10 znaków (<xref:System.Char>).</xref:System.Char> Gdy UDT jest zserializowanym przy użyciu <xref:System.IO.BinaryWriter>, całkowity rozmiar serializowanego ciągu jest 22 bajtów: 2 bajtów na znak Unicode UTF-16, pomnożona przez maksymalną liczbę znaków, a także 2 kontrolka bajtów koszty związane z serializacji strumienia binarnego.</xref:System.IO.BinaryWriter> Tak, określając wartość właściwości MaxByteSize, łączny rozmiar serializowanego UDT muszą być traktowane jako: rozmiar danych zserializowanym w formacie binarnym plus koszty poniesionych przez serializacji.       Ta właściwość nie powinien być używany z `Native` szeregowanie <xref:Microsoft.SqlServer.Server.Format>.</xref:Microsoft.SqlServer.Server.Format>"
  syntax:
    content: public int MaxByteSize { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Wartość reprezentującą maksymalny rozmiar wystąpienia.</xref:System.Int32>"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  id: Name
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: Name
  nameWithType: SqlUserDefinedTypeAttribute.Name
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Nazwa programu SQL Server typu zdefiniowanego przez użytkownika."
  remarks: "Właściwość Name nie jest używany w programie SQL Server, ale jest używany przez program Microsoft Visual Studio .NET Development środowiska IDE (Integrated)."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>wartość reprezentującą nazwę serwera SQL typu zdefiniowanego przez użytkownika.</xref:System.String>"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  id: ValidationMethodName
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: ValidationMethodName
  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Nazwa metody używany w celu zweryfikowania wystąpienia typu zdefiniowanego przez użytkownika."
  remarks: "Z metodą określoną przez atrybut weryfikuje wystąpienia typu podczas UDT ma zostały przeprowadzić deserializacji wartości binarnej, który nie jest zaufany."
  syntax:
    content: public string ValidationMethodName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>reprezentujący nazwę metody używany w celu zweryfikowania wystąpienia typu zdefiniowanego przez użytkownika.</xref:System.String>"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: SqlUserDefinedTypeAttribute(Format)
  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
- uid: Microsoft.SqlServer.Server.Format
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: Format
  nameWithType: Format
  fullName: Microsoft.SqlServer.Server.Format
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Format
  nameWithType: SqlUserDefinedTypeAttribute.Format
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsByteOrdered
  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsFixedLength
  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: MaxByteSize
  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Name
  nameWithType: SqlUserDefinedTypeAttribute.Name
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: ValidationMethodName
  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: SqlUserDefinedTypeAttribute
  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Format
  nameWithType: SqlUserDefinedTypeAttribute.Format
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsByteOrdered
  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsFixedLength
  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: MaxByteSize
  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Name
  nameWithType: SqlUserDefinedTypeAttribute.Name
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: ValidationMethodName
  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName
