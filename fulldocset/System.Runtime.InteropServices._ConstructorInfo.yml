### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._ConstructorInfo
  id: _ConstructorInfo
  children:
  - System.Runtime.InteropServices._ConstructorInfo.Attributes
  - System.Runtime.InteropServices._ConstructorInfo.CallingConvention
  - System.Runtime.InteropServices._ConstructorInfo.DeclaringType
  - System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)
  - System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._ConstructorInfo.GetHashCode
  - System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags
  - System.Runtime.InteropServices._ConstructorInfo.GetParameters
  - System.Runtime.InteropServices._ConstructorInfo.GetType
  - System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])
  - System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])
  - System.Runtime.InteropServices._ConstructorInfo.IsAbstract
  - System.Runtime.InteropServices._ConstructorInfo.IsAssembly
  - System.Runtime.InteropServices._ConstructorInfo.IsConstructor
  - System.Runtime.InteropServices._ConstructorInfo.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._ConstructorInfo.IsFamily
  - System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly
  - System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly
  - System.Runtime.InteropServices._ConstructorInfo.IsFinal
  - System.Runtime.InteropServices._ConstructorInfo.IsHideBySig
  - System.Runtime.InteropServices._ConstructorInfo.IsPrivate
  - System.Runtime.InteropServices._ConstructorInfo.IsPublic
  - System.Runtime.InteropServices._ConstructorInfo.IsSpecialName
  - System.Runtime.InteropServices._ConstructorInfo.IsStatic
  - System.Runtime.InteropServices._ConstructorInfo.IsVirtual
  - System.Runtime.InteropServices._ConstructorInfo.MemberType
  - System.Runtime.InteropServices._ConstructorInfo.MethodHandle
  - System.Runtime.InteropServices._ConstructorInfo.Name
  - System.Runtime.InteropServices._ConstructorInfo.ReflectedType
  - System.Runtime.InteropServices._ConstructorInfo.ToString
  langs:
  - csharp
  name: _ConstructorInfo
  nameWithType: _ConstructorInfo
  fullName: System.Runtime.InteropServices._ConstructorInfo
  type: Interface
  summary: "Udostępnia publiczne elementy członkowskie &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt; klasy do kodu niezarządzanego."
  remarks: "Ten interfejs jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.ConstructorInfo?displayProperty=fullName>Klasa umożliwia odnalezienie atrybuty konstruktora klasy i zapewnia dostęp do metadanych konstruktora.</xref:System.Reflection.ConstructorInfo?displayProperty=fullName>       Interfejs _ConstructorInfo zachowuje kolejność vtable <xref:System.Reflection.ConstructorInfo?displayProperty=fullName>klasy elementów członkowskich, które mogą być udostępniane przez niezarządzane obiekty COM.</xref:System.Reflection.ConstructorInfo?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("E9A19478-9646-3679-9B10-8411AE1FD57D")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.ConstructorInfo))]

      public interface _ConstructorInfo
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: _ConstructorInfo.Attributes
  fullName: System.Runtime.InteropServices._ConstructorInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.Attributes*>Właściwości.</xref:System.Reflection.MethodBase.Attributes*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.Attributes%2A>Właściwość pobiera atrybuty skojarzone z tą metodą.</xref:System.Reflection.MethodBase.Attributes%2A>"
  syntax:
    content: public System.Reflection.MethodAttributes Attributes { get; }
    return:
      type: System.Reflection.MethodAttributes
      description: "Jeden z <xref:System.Reflection.MethodAttributes>wartości.</xref:System.Reflection.MethodAttributes>"
  overload: System.Runtime.InteropServices._ConstructorInfo.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.CallingConvention
  id: CallingConvention
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: CallingConvention
  nameWithType: _ConstructorInfo.CallingConvention
  fullName: System.Runtime.InteropServices._ConstructorInfo.CallingConvention
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.CallingConvention*>Właściwości.</xref:System.Reflection.MethodBase.CallingConvention*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.CallingConvention%2A>Właściwość pobiera wartość wskazującą konwencji wywoływania tej metody.</xref:System.Reflection.MethodBase.CallingConvention%2A>"
  syntax:
    content: public System.Reflection.CallingConventions CallingConvention { get; }
    return:
      type: System.Reflection.CallingConventions
      description: "<xref:System.Reflection.CallingConventions>Dla tej metody.</xref:System.Reflection.CallingConventions>"
  overload: System.Runtime.InteropServices._ConstructorInfo.CallingConvention*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _ConstructorInfo.DeclaringType
  fullName: System.Runtime.InteropServices._ConstructorInfo.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MemberInfo.DeclaringType*>Właściwości.</xref:System.Reflection.MemberInfo.DeclaringType*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.DeclaringType%2A>Właściwość pobiera klasy, która deklaruje tego elementu członkowskiego.</xref:System.Reflection.MemberInfo.DeclaringType%2A>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Obiektu klasy, która deklaruje tego elementu członkowskiego.</xref:System.Type>"
  overload: System.Runtime.InteropServices._ConstructorInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _ConstructorInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Object.Equals*>metody.</xref:System.Object.Equals*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Object.Equals%2A>Metoda określa, czy określony <xref:System.Object>jest taki sam, jak bieżący <xref:System.Object>.</xref:System.Object> </xref:System.Object> </xref:System.Object.Equals%2A>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>Do porównania z bieżącym <xref:System.Object>.</xref:System.Object> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określony <xref:System.Object>jest taki sam, jak bieżący <xref:System.Object>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object> </xref:System.Object>"
  overload: System.Runtime.InteropServices._ConstructorInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _ConstructorInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.MemberInfo.GetCustomAttributes*>metody.</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>Metoda zwraca tablicę zawierającą wszystkie atrybuty niestandardowe.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "Określa, czy przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów."
    return:
      type: System.Object[]
      description: "Tablica zawierająca wszystkie atrybuty niestandardowe lub tablica nie zawierająca żadnego elementu, jeśli zostały zdefiniowane żadne atrybuty."
  overload: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _ConstructorInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*>metody.</xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>Metoda zwraca tablicę atrybutów niestandardowych, zidentyfikowane przez <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "Typ atrybutu do szukania. Zwracane są tylko atrybuty, które są przypisane do tego typu."
    - id: inherit
      type: System.Boolean
      description: "Określa, czy przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów."
    return:
      type: System.Object[]
      description: "Tablica atrybutów niestandardowych zastosowanych do tego elementu członkowskiego lub tablica nie zawierająca żadnego elementu (0), jeśli atrybuty nie zostały zastosowane."
  overload: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _ConstructorInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Object.GetHashCode*>metody.</xref:System.Object.GetHashCode*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Object.GetHashCode%2A>Metody służy jako funkcji wyznaczania wartości skrótu dla określonego typu.</xref:System.Object.GetHashCode%2A> <xref:System.Object.GetHashCode%2A>nadaje się do użytku w mieszania struktury algorytmów i danych, takich jak tablicy skrótów.</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu dla bieżącego wystąpienia."
  overload: System.Runtime.InteropServices._ConstructorInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _ConstructorInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Zestaw nazw jest mapowany na odpowiedni zestaw identyfikatorów wysyłania."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::GetIDsOfNames`, zobacz bibliotece MSDN."
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Zarezerwowane do użytku w przyszłości. Musi być ma wartości IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "Tablica przekazany nazw można mapować."
    - id: cNames
      type: System.UInt32
      description: "Liczba nazw można mapować."
    - id: lcid
      type: System.UInt32
      description: "Kontekst ustawień regionalnych, w którym zinterpretować nazwy."
    - id: rgDispId
      type: System.IntPtr
      description: "Tablica przydzielone przez obiekt wywołujący, która odbiera identyfikatory, odpowiadających nazwy."
  overload: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags
  id: GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetMethodImplementationFlags()
  nameWithType: _ConstructorInfo.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>elementu członkowskiego.</xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>Zwraca element członkowski <xref:System.Reflection.MethodImplAttributes>flagi.</xref:System.Reflection.MethodImplAttributes> </xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>"
  syntax:
    content: public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();
    parameters: []
    return:
      type: System.Reflection.MethodImplAttributes
      description: "<xref:System.Reflection.MethodImplAttributes>Flagi.</xref:System.Reflection.MethodImplAttributes>"
  overload: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetParameters
  id: GetParameters
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetParameters()
  nameWithType: _ConstructorInfo.GetParameters()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.MethodBase.GetParameters*>metody.</xref:System.Reflection.MethodBase.GetParameters*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.GetParameters%2A>Metoda pobiera parametry określonej metody lub konstruktora.</xref:System.Reflection.MethodBase.GetParameters%2A>"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "Tablica typu <xref:System.Reflection.ParameterInfo>zawierających informacje o pasującego podpisu — metoda (lub konstruktora) dostarczanej przez to wystąpienie.</xref:System.Reflection.ParameterInfo>"
  overload: System.Runtime.InteropServices._ConstructorInfo.GetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetType
  id: GetType
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetType()
  nameWithType: _ConstructorInfo.GetType()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Object.GetType*>metody.</xref:System.Object.GetType*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Object.GetType%2A>Metoda pobiera typ bieżącego wystąpienia.</xref:System.Object.GetType%2A>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "A <xref:System.Type>obiektu.</xref:System.Type>"
  overload: System.Runtime.InteropServices._ConstructorInfo.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _ConstructorInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Pobiera informacje o typie dla obiekt, który można pobrać informacji o typie dla interfejsu."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfo`, zobacz bibliotece MSDN."
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "Informacje o typie do zwrócenia."
    - id: lcid
      type: System.UInt32
      description: "Identyfikator ustawień regionalnych dla informacji o typie."
    - id: ppTInfo
      type: System.IntPtr
      description: "Uzyskuje wskaźnik do obiektu informacji żądanego typu."
  overload: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _ConstructorInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Pobiera numer typu informacji interfejsów, że obiekt zawiera (0 lub 1)."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::GetTypeInfoCount`, zobacz bibliotece MSDN."
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "Wskazuje lokalizację, która odbiera liczba interfejsów informacji typu dostarczanych przez obiekt."
  overload: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _ConstructorInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Zapewnia dostęp do właściwości i metody ujawnione przez obiekt."
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego. Aby uzyskać więcej informacji na temat `IDispatch::Invoke`, zobacz bibliotece MSDN."
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Identyfikuje element członkowski."
    - id: riid
      type: System.Guid
      description: "Zarezerwowane do użytku w przyszłości. Musi być ma wartości IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "Kontekst ustawień regionalnych, w którym interpretować argumentów."
    - id: wFlags
      type: System.Int16
      description: "Flagi opisujące kontekstu wywołania."
    - id: pDispParams
      type: System.IntPtr
      description: "Wskaźnik do struktury zawierający tablicę argumentów tablicy argumentu identyfikator DISPID dla argumentów nazwanych i liczbie liczba elementów w tablicach."
    - id: pVarResult
      type: System.IntPtr
      description: "Wskaźnik do lokalizacji, w którym ma być przechowywany wynik."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Wskaźnik do struktury, która zawiera informacje o wyjątku."
    - id: puArgErr
      type: System.IntPtr
      description: "Indeks pierwszego argumentu, który zawiera błąd."
  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _ConstructorInfo.Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.MethodBase.Invoke*>metody.</xref:System.Reflection.MethodBase.Invoke*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.Invoke%2A>Metoda wywołuje konstruktor uwzględnione w tym <xref:System.Reflection.ConstructorInfo>z określonymi argumentami, zgodnie z ograniczeniami określony <xref:System.Reflection.Binder>.</xref:System.Reflection.Binder> </xref:System.Reflection.ConstructorInfo> </xref:System.Reflection.MethodBase.Invoke%2A>"
  syntax:
    content: public object Invoke_2 (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "Ta metoda utworzone wystąpienie."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Jeden z <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref> wartości, które określa typ powiązania."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref uid=&quot;langword_csharp_Binder&quot; name=&quot;Binder&quot; href=&quot;&quot;> </xref> który definiuje zestaw właściwości i umożliwia powiązanie koercja typy argumentów i wywoływania elementów członkowskich za pomocą odbicia. If `binder` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, then <xref uid=&quot;langword_csharp_Binder.DefaultBinding&quot; name=&quot;Binder.DefaultBinding&quot; href=&quot;&quot;></xref> is used."
    - id: parameters
      type: System.Object[]
      description: "Tablica typu <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> służy do dopasowania liczby, kolejności i typy parametrów dla tego konstruktora, zgodnie z ograniczeniami `binder`. Jeśli ten konstruktor nie wymaga parametrów, Przekaż tablica nie zawierająca żadnego elementu, tak jak obiekt [] Parametry = nowy obiekt [0]. Dowolny obiekt tej tablicy, która nie jest jawnie zainicjowany z wartością będzie zawierał wartość domyślną dla tego typu obiektu. Elementy typu odwołania, ta wartość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Typ wartości elementów, ta wartość jest równa 0, 0.0, lub <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>w zależności od typu określonego elementu."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>używane do sterowania koercja typów.</xref:System.Globalization.CultureInfo> Jeśli jest to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Globalization.CultureInfo>służy bieżącego wątku.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Wystąpienie skojarzonej z konstruktora klasy."
  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke_2*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])
  id: Invoke_3(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Invoke_3(Object,Object[])
  nameWithType: _ConstructorInfo.Invoke_3(Object,Object[])
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_3(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.MethodBase.Invoke*>metody.</xref:System.Reflection.MethodBase.Invoke*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.Invoke%2A>Metoda wywołuje metodę lub konstruktora reprezentowany przez ten obiekt przy użyciu określonych parametrów.</xref:System.Reflection.MethodBase.Invoke%2A>"
  syntax:
    content: public object Invoke_3 (object obj, object[] parameters);
    parameters:
    - id: obj
      type: System.Object
      description: "Ta metoda utworzone wystąpienie."
    - id: parameters
      type: System.Object[]
      description: "Lista argumentów dla wywołanej metody lub konstruktora. To jest Tablica obiektów numer, kolejność i typ jako parametry metody lub konstruktora do wywołania. Jeśli nie ma żadnych parametrów `parameters` powinien być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       Jeśli ta metoda lub konstruktora reprezentowany przez to wystąpienie ma <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> parametr (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> w języku Visual Basic), nie specjalne atrybut jest wymagany dla tego parametru w celu wywołania metody lub konstruktora przy użyciu tej funkcji. Dowolny obiekt tej tablicy, która nie jest jawnie zainicjowany z wartością będzie zawierał wartość domyślną dla tego typu obiektu. Elementy typu odwołania, ta wartość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Typ wartości elementów, ta wartość jest równa 0, 0.0, lub <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>w zależności od typu określonego elementu."
    return:
      type: System.Object
      description: "Wystąpienie skojarzonej z konstruktora klasy."
  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke_3*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Invoke_4(BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _ConstructorInfo.Invoke_4(BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_4(BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.ConstructorInfo.Invoke*>metody.</xref:System.Reflection.ConstructorInfo.Invoke*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.ConstructorInfo.Invoke%2A>Metoda wywołuje konstruktor odzwierciedlone to <xref:System.Reflection.ConstructorInfo>obiektu z określonymi argumentami, zgodnie z ograniczeniami określonego <xref:System.Reflection.Binder>obiektu.</xref:System.Reflection.Binder> </xref:System.Reflection.ConstructorInfo> </xref:System.Reflection.ConstructorInfo.Invoke%2A>"
  syntax:
    content: public object Invoke_4 (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Jeden z <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref> wartości, które określa typ powiązania."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref uid=&quot;langword_csharp_Binder&quot; name=&quot;Binder&quot; href=&quot;&quot;> </xref> który definiuje zestaw właściwości i umożliwia powiązanie koercja typy argumentów i wywoływania elementów członkowskich za pomocą odbicia. If `binder` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, then <xref uid=&quot;langword_csharp_Binder.DefaultBinding&quot; name=&quot;Binder.DefaultBinding&quot; href=&quot;&quot;></xref> is used."
    - id: parameters
      type: System.Object[]
      description: "Tablica typu <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> służy do dopasowania liczby, kolejności i typy parametrów dla tego konstruktora, zgodnie z ograniczeniami `binder`. Jeśli ten konstruktor nie wymaga parametrów, Przekaż tablica nie zawierająca żadnego elementu, tak jak obiekt [] Parametry = nowy obiekt [0]. Dowolny obiekt tej tablicy, która nie jest jawnie zainicjowany z wartością będzie zawierał wartość domyślną dla tego typu obiektu. Elementy typu odwołania, ta wartość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Typ wartości elementów, ta wartość jest równa 0, 0.0, lub <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>w zależności od typu określonego elementu."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>używane do sterowania koercja typów.</xref:System.Globalization.CultureInfo> Jeśli jest to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Globalization.CultureInfo>służy bieżącego wątku.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Wystąpienie skojarzonej z konstruktora klasy."
  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke_4*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])
  id: Invoke_5(System.Object[])
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Invoke_5(Object[])
  nameWithType: _ConstructorInfo.Invoke_5(Object[])
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_5(Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.ConstructorInfo.Invoke*>metody.</xref:System.Reflection.ConstructorInfo.Invoke*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.ConstructorInfo.Invoke%2A>Metoda wywołuje konstruktor wystąpienia, które ma określonych parametrów, podając wartości domyślne parametry nie są powszechnie używane, sprawdzając.</xref:System.Reflection.ConstructorInfo.Invoke%2A>"
  syntax:
    content: public object Invoke_5 (object[] parameters);
    parameters:
    - id: parameters
      type: System.Object[]
      description: "Tablica wartości zgodny z liczbą, kolejność i typ (w obszarze ograniczenia domyślnego integratora) parametrów dla tego konstruktora. Jeśli ten konstruktor nie przyjmuje żadnych parametrów, należy użyć albo tablica zawierająca żadnego elementu lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>w obiekt [] Parametry = nowy obiekt [0]. Dowolny obiekt tej tablicy, która nie jest jawnie zainicjowany z wartością będzie zawierał wartość domyślną dla tego typu obiektu. Elementy typu odwołania, ta wartość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Typ wartości elementów, ta wartość jest równa 0, 0.0, lub <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>w zależności od typu określonego elementu."
    return:
      type: System.Object
      description: "Wystąpienie skojarzonej z konstruktora klasy."
  overload: System.Runtime.InteropServices._ConstructorInfo.Invoke_5*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _ConstructorInfo.IsAbstract
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsAbstract*>Właściwości.</xref:System.Reflection.MethodBase.IsAbstract*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsAbstract%2A>Właściwość pobiera wartość wskazującą, czy metoda jest abstrakcyjna.</xref:System.Reflection.MethodBase.IsAbstract%2A>"
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli metoda jest abstrakcyjna; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsAssembly
  id: IsAssembly
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsAssembly
  nameWithType: _ConstructorInfo.IsAssembly
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsAssembly*>Właściwości.</xref:System.Reflection.MethodBase.IsAssembly*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsAssembly%2A>Właściwość pobiera wartość wskazującą, czy ta metoda może być wywoływany przez inne klasy w tym samym zestawie.</xref:System.Reflection.MethodBase.IsAssembly%2A>"
  syntax:
    content: public bool IsAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta metoda może być wywoływany przez inne klasy w tym samym zestawie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsConstructor
  id: IsConstructor
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsConstructor
  nameWithType: _ConstructorInfo.IsConstructor
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsConstructor
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsConstructor*>Właściwości.</xref:System.Reflection.MethodBase.IsConstructor*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsConstructor%2A>Właściwość pobiera wartość wskazującą, czy metoda jest konstruktorem.</xref:System.Reflection.MethodBase.IsConstructor%2A>"
  syntax:
    content: public bool IsConstructor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta metoda jest konstruktorem; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _ConstructorInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Reflection.MemberInfo.IsDefined*>elementu członkowskiego.</xref:System.Reflection.MemberInfo.IsDefined*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.IsDefined%2A>Elementu członkowskiego wskazuje, czy jednego lub więcej wystąpień `attributeType` jest stosowany do tego elementu członkowskiego.</xref:System.Reflection.MemberInfo.IsDefined%2A>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> Obiektów, dla których są stosowane atrybuty niestandardowe."
    - id: inherit
      type: System.Boolean
      description: "Określa, czy przeszukać łańcuch dziedziczenia tego elementu członkowskiego w celu znalezienia atrybutów."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli jeden lub więcej wystąpień <code> attributeType </code> zastosowanych do tego elementu członkowskiego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamily
  id: IsFamily
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsFamily
  nameWithType: _ConstructorInfo.IsFamily
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsFamily*>Właściwości.</xref:System.Reflection.MethodBase.IsFamily*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsFamily%2A>Właściwość pobiera wartość wskazującą, czy dostęp do tej metody jest ograniczony do członków klasy i elementów członkowskich z jej klas pochodnych.</xref:System.Reflection.MethodBase.IsFamily%2A>"
  syntax:
    content: public bool IsFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostęp do tej klasy jest ograniczony do członków samej klasy oraz do elementów członkowskich z jej klas pochodnych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly
  id: IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsFamilyAndAssembly
  nameWithType: _ConstructorInfo.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>Właściwości.</xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>Właściwość pobiera wartość wskazującą, czy ta metoda może być wywoływany przez klas pochodnych, jeśli są w tym samym zestawie.</xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>"
  syntax:
    content: public bool IsFamilyAndAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostęp do tej metody jest ograniczony do członków samej klasy oraz do elementów członkowskich klas pochodnych, które znajdują się w tym samym zestawie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly
  id: IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsFamilyOrAssembly
  nameWithType: _ConstructorInfo.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>Właściwości.</xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>Właściwość pobiera wartość wskazującą, czy ta metoda może być wywoływany przez klas pochodnych wszędzie tam, gdzie są one, a także wszystkie klasy w tym samym zestawie.</xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>"
  syntax:
    content: public bool IsFamilyOrAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostęp do tej metody jest ograniczony do członków samej klasy, członkowie klas pochodnych wszędzie tam, gdzie znajdują się i członków innych klas w tym samym zestawie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFinal
  id: IsFinal
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsFinal
  nameWithType: _ConstructorInfo.IsFinal
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFinal
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsFinal*>Właściwości.</xref:System.Reflection.MethodBase.IsFinal*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsFinal%2A>Właściwość pobiera wartość wskazującą, czy ta metoda jest `final`.</xref:System.Reflection.MethodBase.IsFinal%2A>"
  syntax:
    content: public bool IsFinal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta metoda jest <xref uid=&quot;langword_csharp_final&quot; name=&quot;final&quot; href=&quot;&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig
  id: IsHideBySig
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsHideBySig
  nameWithType: _ConstructorInfo.IsHideBySig
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsHideBySig*>Właściwości.</xref:System.Reflection.MethodBase.IsHideBySig*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsHideBySig%2A>Właściwość pobiera wartość wskazującą, czy tylko element członkowski o tej samej sygnaturze tego rodzaju jest ukryty w klasie pochodnej.</xref:System.Reflection.MethodBase.IsHideBySig%2A>"
  syntax:
    content: public bool IsHideBySig { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli element członkowski jest ukryty przez podpis. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsPrivate
  id: IsPrivate
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsPrivate
  nameWithType: _ConstructorInfo.IsPrivate
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsPrivate*>Właściwości.</xref:System.Reflection.MethodBase.IsPrivate*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsPrivate%2A>Właściwość pobiera wartość wskazującą, czy ten element członkowski jest prywatne.</xref:System.Reflection.MethodBase.IsPrivate%2A>"
  syntax:
    content: public bool IsPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostęp do tej metody jest ograniczony do innych członków klasy. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsPublic
  nameWithType: _ConstructorInfo.IsPublic
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsPublic*>Właściwości.</xref:System.Reflection.MethodBase.IsPublic*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsPublic%2A>Właściwość pobiera wartość wskazującą, czy jest to metoda publiczna.</xref:System.Reflection.MethodBase.IsPublic%2A>"
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta metoda jest publiczna; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _ConstructorInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsSpecialName*>Właściwości.</xref:System.Reflection.MethodBase.IsSpecialName*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsSpecialName%2A>Właściwość pobiera wartość wskazującą, czy ta metoda ma specjalną nazwą.</xref:System.Reflection.MethodBase.IsSpecialName%2A>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta metoda ma specjalną nazwą; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsStatic
  id: IsStatic
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsStatic
  nameWithType: _ConstructorInfo.IsStatic
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsStatic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsStatic*>Właściwości.</xref:System.Reflection.MethodBase.IsStatic*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsStatic%2A>Właściwość pobiera wartość wskazującą, czy metoda jest `static`.</xref:System.Reflection.MethodBase.IsStatic%2A>"
  syntax:
    content: public bool IsStatic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta metoda jest <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsStatic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.IsVirtual
  id: IsVirtual
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: IsVirtual
  nameWithType: _ConstructorInfo.IsVirtual
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsVirtual
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.IsVirtual*>Właściwości.</xref:System.Reflection.MethodBase.IsVirtual*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.IsVirtual%2A>Właściwość pobiera wartość wskazującą, czy metoda jest `virtual`.</xref:System.Reflection.MethodBase.IsVirtual%2A>"
  syntax:
    content: public bool IsVirtual { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ta metoda jest <xref uid=&quot;langword_csharp_virtual&quot; name=&quot;virtual&quot; href=&quot;&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._ConstructorInfo.IsVirtual*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: _ConstructorInfo.MemberType
  fullName: System.Runtime.InteropServices._ConstructorInfo.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.ConstructorInfo.MemberType*>Właściwości.</xref:System.Reflection.ConstructorInfo.MemberType*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.ConstructorInfo.MemberType%2A>Pobiera właściwość <xref:System.Reflection.MemberTypes>wartość wskazujący typ elementu członkowskiego — metoda, konstruktora, zdarzeń i tak dalej.</xref:System.Reflection.MemberTypes> </xref:System.Reflection.ConstructorInfo.MemberType%2A>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "A <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> wskazujące typ elementu członkowskiego."
  overload: System.Runtime.InteropServices._ConstructorInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.MethodHandle
  id: MethodHandle
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: MethodHandle
  nameWithType: _ConstructorInfo.MethodHandle
  fullName: System.Runtime.InteropServices._ConstructorInfo.MethodHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MethodBase.MethodHandle*>Właściwości.</xref:System.Reflection.MethodBase.MethodHandle*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MethodBase.MethodHandle%2A>Właściwość pobiera dojścia do reprezentacji wewnętrznej metadanych metody.</xref:System.Reflection.MethodBase.MethodHandle%2A>"
  syntax:
    content: public RuntimeMethodHandle MethodHandle { get; }
    return:
      type: System.RuntimeMethodHandle
      description: "A <xref:System.RuntimeMethodHandle>obiektu.</xref:System.RuntimeMethodHandle>"
  overload: System.Runtime.InteropServices._ConstructorInfo.MethodHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.Name
  id: Name
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: Name
  nameWithType: _ConstructorInfo.Name
  fullName: System.Runtime.InteropServices._ConstructorInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MemberInfo.Name*>Właściwości.</xref:System.Reflection.MemberInfo.Name*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.Name%2A>Właściwość pobiera nazwę bieżącego elementu członkowskiego.</xref:System.Reflection.MemberInfo.Name%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A <xref:System.String>zawierającego nazwę tego elementu członkowskiego.</xref:System.String>"
  overload: System.Runtime.InteropServices._ConstructorInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _ConstructorInfo.ReflectedType
  fullName: System.Runtime.InteropServices._ConstructorInfo.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia obiekty COM niezależny od wersji dostęp do <xref:System.Reflection.MemberInfo.ReflectedType*>Właściwości.</xref:System.Reflection.MemberInfo.ReflectedType*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego.       <xref:System.Reflection.MemberInfo.ReflectedType%2A>Właściwość pobiera obiekt klasy, które zostało użyte do uzyskania tego wystąpienia <xref:System.Reflection.MemberInfo>.</xref:System.Reflection.MemberInfo> </xref:System.Reflection.MemberInfo.ReflectedType%2A>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "<xref:System.Type>Obiektu, do której ta <xref:System.Reflection.MemberInfo>obiekt został uzyskany.</xref:System.Reflection.MemberInfo> </xref:System.Type>"
  overload: System.Runtime.InteropServices._ConstructorInfo.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._ConstructorInfo.ToString
  id: ToString
  parent: System.Runtime.InteropServices._ConstructorInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: _ConstructorInfo.ToString()
  fullName: System.Runtime.InteropServices._ConstructorInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Udostępnia niezależny od wersji dostęp do obiektów COM <xref:System.Object.ToString*>metody.</xref:System.Object.ToString*>"
  remarks: "Ta metoda jest dostęp do zarządzanych klas z kodem niezarządzanym i nie powinna być wywoływana z kodu zarządzanego."
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Ciąg reprezentujący bieżące <xref:System.Object>.</xref:System.Object>"
  overload: System.Runtime.InteropServices._ConstructorInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._ConstructorInfo.Attributes
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Attributes
  nameWithType: _ConstructorInfo.Attributes
  fullName: System.Runtime.InteropServices._ConstructorInfo.Attributes
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Runtime.InteropServices._ConstructorInfo.CallingConvention
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: CallingConvention
  nameWithType: _ConstructorInfo.CallingConvention
  fullName: System.Runtime.InteropServices._ConstructorInfo.CallingConvention
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._ConstructorInfo.DeclaringType
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _ConstructorInfo.DeclaringType
  fullName: System.Runtime.InteropServices._ConstructorInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._ConstructorInfo.Equals(System.Object)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: _ConstructorInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _ConstructorInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _ConstructorInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._ConstructorInfo.GetHashCode
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: _ConstructorInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _ConstructorInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetMethodImplementationFlags()
  nameWithType: _ConstructorInfo.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags()
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Runtime.InteropServices._ConstructorInfo.GetParameters
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetParameters()
  nameWithType: _ConstructorInfo.GetParameters()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._ConstructorInfo.GetType
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetType()
  nameWithType: _ConstructorInfo.GetType()
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetType()
- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _ConstructorInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _ConstructorInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _ConstructorInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _ConstructorInfo.Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_2(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_3(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_3(Object,Object[])
  nameWithType: _ConstructorInfo.Invoke_3(Object,Object[])
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_3(Object,Object[])
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_4(BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _ConstructorInfo.Invoke_4(BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_4(BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_5(System.Object[])
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_5(Object[])
  nameWithType: _ConstructorInfo.Invoke_5(Object[])
  fullName: System.Runtime.InteropServices._ConstructorInfo.Invoke_5(Object[])
- uid: System.Runtime.InteropServices._ConstructorInfo.IsAbstract
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsAbstract
  nameWithType: _ConstructorInfo.IsAbstract
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsAbstract
- uid: System.Runtime.InteropServices._ConstructorInfo.IsAssembly
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsAssembly
  nameWithType: _ConstructorInfo.IsAssembly
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsAssembly
- uid: System.Runtime.InteropServices._ConstructorInfo.IsConstructor
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsConstructor
  nameWithType: _ConstructorInfo.IsConstructor
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsConstructor
- uid: System.Runtime.InteropServices._ConstructorInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _ConstructorInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamily
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFamily
  nameWithType: _ConstructorInfo.IsFamily
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamily
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _ConstructorInfo.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _ConstructorInfo.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFinal
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFinal
  nameWithType: _ConstructorInfo.IsFinal
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsFinal
- uid: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsHideBySig
  nameWithType: _ConstructorInfo.IsHideBySig
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig
- uid: System.Runtime.InteropServices._ConstructorInfo.IsPrivate
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsPrivate
  nameWithType: _ConstructorInfo.IsPrivate
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsPrivate
- uid: System.Runtime.InteropServices._ConstructorInfo.IsPublic
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsPublic
  nameWithType: _ConstructorInfo.IsPublic
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsPublic
- uid: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _ConstructorInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName
- uid: System.Runtime.InteropServices._ConstructorInfo.IsStatic
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsStatic
  nameWithType: _ConstructorInfo.IsStatic
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsStatic
- uid: System.Runtime.InteropServices._ConstructorInfo.IsVirtual
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsVirtual
  nameWithType: _ConstructorInfo.IsVirtual
  fullName: System.Runtime.InteropServices._ConstructorInfo.IsVirtual
- uid: System.Runtime.InteropServices._ConstructorInfo.MemberType
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: MemberType
  nameWithType: _ConstructorInfo.MemberType
  fullName: System.Runtime.InteropServices._ConstructorInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._ConstructorInfo.MethodHandle
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: MethodHandle
  nameWithType: _ConstructorInfo.MethodHandle
  fullName: System.Runtime.InteropServices._ConstructorInfo.MethodHandle
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: true
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
- uid: System.Runtime.InteropServices._ConstructorInfo.Name
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Name
  nameWithType: _ConstructorInfo.Name
  fullName: System.Runtime.InteropServices._ConstructorInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._ConstructorInfo.ReflectedType
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _ConstructorInfo.ReflectedType
  fullName: System.Runtime.InteropServices._ConstructorInfo.ReflectedType
- uid: System.Runtime.InteropServices._ConstructorInfo.ToString
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: ToString()
  nameWithType: _ConstructorInfo.ToString()
  fullName: System.Runtime.InteropServices._ConstructorInfo.ToString()
- uid: System.Runtime.InteropServices._ConstructorInfo.Attributes*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Attributes
  nameWithType: _ConstructorInfo.Attributes
- uid: System.Runtime.InteropServices._ConstructorInfo.CallingConvention*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: CallingConvention
  nameWithType: _ConstructorInfo.CallingConvention
- uid: System.Runtime.InteropServices._ConstructorInfo.DeclaringType*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _ConstructorInfo.DeclaringType
- uid: System.Runtime.InteropServices._ConstructorInfo.Equals*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Equals
  nameWithType: _ConstructorInfo.Equals
- uid: System.Runtime.InteropServices._ConstructorInfo.GetCustomAttributes*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _ConstructorInfo.GetCustomAttributes
- uid: System.Runtime.InteropServices._ConstructorInfo.GetHashCode*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetHashCode
  nameWithType: _ConstructorInfo.GetHashCode
- uid: System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _ConstructorInfo.GetIDsOfNames
- uid: System.Runtime.InteropServices._ConstructorInfo.GetMethodImplementationFlags*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetMethodImplementationFlags
  nameWithType: _ConstructorInfo.GetMethodImplementationFlags
- uid: System.Runtime.InteropServices._ConstructorInfo.GetParameters*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetParameters
  nameWithType: _ConstructorInfo.GetParameters
- uid: System.Runtime.InteropServices._ConstructorInfo.GetType*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetType
  nameWithType: _ConstructorInfo.GetType
- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetTypeInfo
  nameWithType: _ConstructorInfo.GetTypeInfo
- uid: System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _ConstructorInfo.GetTypeInfoCount
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke
  nameWithType: _ConstructorInfo.Invoke
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_2*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_2
  nameWithType: _ConstructorInfo.Invoke_2
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_3*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_3
  nameWithType: _ConstructorInfo.Invoke_3
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_4*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_4
  nameWithType: _ConstructorInfo.Invoke_4
- uid: System.Runtime.InteropServices._ConstructorInfo.Invoke_5*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Invoke_5
  nameWithType: _ConstructorInfo.Invoke_5
- uid: System.Runtime.InteropServices._ConstructorInfo.IsAbstract*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsAbstract
  nameWithType: _ConstructorInfo.IsAbstract
- uid: System.Runtime.InteropServices._ConstructorInfo.IsAssembly*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsAssembly
  nameWithType: _ConstructorInfo.IsAssembly
- uid: System.Runtime.InteropServices._ConstructorInfo.IsConstructor*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsConstructor
  nameWithType: _ConstructorInfo.IsConstructor
- uid: System.Runtime.InteropServices._ConstructorInfo.IsDefined*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsDefined
  nameWithType: _ConstructorInfo.IsDefined
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamily*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFamily
  nameWithType: _ConstructorInfo.IsFamily
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyAndAssembly*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _ConstructorInfo.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFamilyOrAssembly*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _ConstructorInfo.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._ConstructorInfo.IsFinal*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsFinal
  nameWithType: _ConstructorInfo.IsFinal
- uid: System.Runtime.InteropServices._ConstructorInfo.IsHideBySig*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsHideBySig
  nameWithType: _ConstructorInfo.IsHideBySig
- uid: System.Runtime.InteropServices._ConstructorInfo.IsPrivate*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsPrivate
  nameWithType: _ConstructorInfo.IsPrivate
- uid: System.Runtime.InteropServices._ConstructorInfo.IsPublic*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsPublic
  nameWithType: _ConstructorInfo.IsPublic
- uid: System.Runtime.InteropServices._ConstructorInfo.IsSpecialName*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _ConstructorInfo.IsSpecialName
- uid: System.Runtime.InteropServices._ConstructorInfo.IsStatic*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsStatic
  nameWithType: _ConstructorInfo.IsStatic
- uid: System.Runtime.InteropServices._ConstructorInfo.IsVirtual*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: IsVirtual
  nameWithType: _ConstructorInfo.IsVirtual
- uid: System.Runtime.InteropServices._ConstructorInfo.MemberType*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: MemberType
  nameWithType: _ConstructorInfo.MemberType
- uid: System.Runtime.InteropServices._ConstructorInfo.MethodHandle*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: MethodHandle
  nameWithType: _ConstructorInfo.MethodHandle
- uid: System.Runtime.InteropServices._ConstructorInfo.Name*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: Name
  nameWithType: _ConstructorInfo.Name
- uid: System.Runtime.InteropServices._ConstructorInfo.ReflectedType*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _ConstructorInfo.ReflectedType
- uid: System.Runtime.InteropServices._ConstructorInfo.ToString*
  parent: System.Runtime.InteropServices._ConstructorInfo
  isExternal: false
  name: ToString
  nameWithType: _ConstructorInfo.ToString
