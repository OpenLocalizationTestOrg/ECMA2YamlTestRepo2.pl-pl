### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenManager
  id: SecurityTokenManager
  children:
  - System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  langs:
  - csharp
  name: SecurityTokenManager
  nameWithType: SecurityTokenManager
  fullName: System.IdentityModel.Selectors.SecurityTokenManager
  type: Class
  summary: "Reprezentuje Menedżer tokenów zabezpieczających, określający, jak tokeny zabezpieczające są dostarczane, uwierzytelniony i serializacji."
  remarks: "Jeśli potrzebujesz tokenu zabezpieczającego niestandardowych, wystawcę uwierzytelnienia tokenów zabezpieczających lub dostawcę tokenów zabezpieczających, należy użyć klasy SecurityTokenManager. Użyj tokenu zabezpieczającego niestandardowego do obsługi poświadczenia, które [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] nie obsługuje. Użyj wystawcy uwierzytelnienia tokenu zabezpieczeń niestandardowych podczas metod uwierzytelniania [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] zapewnia nie są wystarczające. Klasa SecurityTokenManager zwraca wystawcę uwierzytelnienia tokenów zabezpieczających w <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>metody.</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29> Dostawcy tokenów zabezpieczających oferuje tokeny zabezpieczające dla wychodzących wiadomości protokołu SOAP. Klasa SecurityTokenManager zwraca dostawcę tokenu zabezpieczającego w <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>metody.</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]za pomocą wystawcy uwierzytelnienia tokenu zabezpieczeń niestandardowych i dostawcy tokenów zabezpieczeń, zobacz [niestandardowe poświadczenia i weryfikacja poświadczeń](~/add/includes/ajax-current-ext-md.md). [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Tworzenie tokenu zabezpieczającego niestandardowych, zobacz [porady: Tworzenie niestandardowego tokenu](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public abstract class SecurityTokenManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: SecurityTokenManager()
  nameWithType: SecurityTokenManager.SecurityTokenManager()
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.SecurityTokenManager()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenManager&quot;> </xref> klasy."
  syntax:
    content: protected SecurityTokenManager ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  id: CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Pobiera wystawcę uwierzytelnienia tokenów zabezpieczających spełniający wymagania tokenu zabezpieczeń określony."
  remarks: "A <xref:System.IdentityModel.Selectors.SecurityTokenManager>klasy zawiera typy, które zapewnienia tokenów zabezpieczających dla wychodzących wiadomości SOAP i uwierzytelnienia tokenów zabezpieczających w komunikatach przychodzących SOAP.</xref:System.IdentityModel.Selectors.SecurityTokenManager> Metoda CreateSecurityTokenAuthenticator zwraca klasę, która może uwierzytelnić tokeny zabezpieczające, które spełniają kryteria określone w `tokenRequirement` parametru."
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> , który określa wymagania tokenu zabezpieczeń."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> spełniającym wymagania tokenu zabezpieczeń określony token zabezpieczający, który określa."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref> który uwierzytelnia tokenów zabezpieczających w wiadomości SOAP przychodzących, które spełniają określone wymagania."
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Pobiera dostawcę tokenu zabezpieczającego, który spełnia wymagania tokenu zabezpieczeń określony."
  remarks: "A <xref:System.IdentityModel.Selectors.SecurityTokenManager>klasy zawiera typy, które zapewnienia tokenów zabezpieczających dla wychodzących wiadomości SOAP i uwierzytelnienia tokenów zabezpieczających w komunikatach przychodzących SOAP.</xref:System.IdentityModel.Selectors.SecurityTokenManager> Metoda CreateSecurityTokenProvider zwraca klasę, która może uwierzytelnić tokeny zabezpieczające, które zapewniają tokeny zabezpieczające, które spełniają kryteria określone w `tokenRequirement` parametru."
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> , który określa wymagania tokenu zabezpieczeń."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenProvider
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenProvider&quot;> </xref> zapewnia tokeny zabezpieczające, które spełniają określone wymagania wysyłanych wiadomości protokołu SOAP."
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  id: CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Pobiera element serializujący XML, który może wykonać serializację tokenów zabezpieczających w określonej wersji WS-* specyfikacji."
  remarks: "Aby dodać obsługę serializacji niestandardowy token, klasa wyprowadzona z <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>i zwrócić wystąpienia tej klasy dla metody CreateSecurityTokenSerializer.</xref:System.ServiceModel.Security.WSSecurityTokenSerializer> <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>Klasy, która jest pochodną <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>Klasa, jest w stanie serializację i deserializację tokeny zabezpieczające, które są dostarczane z [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)].</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> </xref:System.ServiceModel.Security.WSSecurityTokenSerializer> W związku z tym, aby dodać obsługę niestandardowy token do serializatora, Zastąp metody wirtualne w <xref:System.ServiceModel.Security.WSSecurityTokenSerializer>klasy, Dodaj kod, że kontroli informację, czy token zabezpieczający żądany niestandardowy token, a jeśli nie, wywołaj metodę klasy podstawowej.</xref:System.ServiceModel.Security.WSSecurityTokenSerializer>"
  syntax:
    content: public abstract System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);
    parameters:
    - id: version
      type: System.IdentityModel.Selectors.SecurityTokenVersion
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenVersion&quot;> </xref> , który określa WS-* wersje specyfikacji tokenów zabezpieczających jest zgodna."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> do serializacji tokenów zabezpieczających."
  overload: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: SecurityTokenManager()
  nameWithType: SecurityTokenManager.SecurityTokenManager()
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.SecurityTokenManager()
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenVersion
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenVersion
  nameWithType: SecurityTokenVersion
  fullName: System.IdentityModel.Selectors.SecurityTokenVersion
- uid: System.IdentityModel.Selectors.SecurityTokenManager.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: SecurityTokenManager
  nameWithType: SecurityTokenManager.SecurityTokenManager
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenAuthenticator*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator
  nameWithType: SecurityTokenManager.CreateSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider
  nameWithType: SecurityTokenManager.CreateSecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenSerializer*
  parent: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer
  nameWithType: SecurityTokenManager.CreateSecurityTokenSerializer
