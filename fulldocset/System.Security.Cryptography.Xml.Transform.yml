### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.Transform
  id: Transform
  children:
  - System.Security.Cryptography.Xml.Transform.#ctor
  - System.Security.Cryptography.Xml.Transform.Algorithm
  - System.Security.Cryptography.Xml.Transform.Context
  - System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  - System.Security.Cryptography.Xml.Transform.GetInnerXml
  - System.Security.Cryptography.Xml.Transform.GetOutput
  - System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)
  - System.Security.Cryptography.Xml.Transform.GetXml
  - System.Security.Cryptography.Xml.Transform.InputTypes
  - System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)
  - System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)
  - System.Security.Cryptography.Xml.Transform.OutputTypes
  - System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  - System.Security.Cryptography.Xml.Transform.Resolver
  langs:
  - csharp
  name: Transform
  nameWithType: Transform
  fullName: System.Security.Cryptography.Xml.Transform
  type: Class
  summary: "Reprezentuje abstrakcyjna klasa podstawowa z wszystkie <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> pochodzi elementów, które mogą być używane w XML podpisu cyfrowego."
  remarks: "Podczas wykonywania podpisywanie XML i weryfikacji, `Transform`> element w tym artykule opisano sposób osoby podpisującej przekształcony obiekt danych, który został podpisany.  Następnie używa weryfikatora dokumentu `Transform`> element do przekształcania podpisanych danych w taki sam sposób.  Jeśli kontroler nie można przekształcić podpisanych danych w taki sam sposób, nie można zweryfikować dokumentu.       Użyj klasy, która pochodzi z klasy transformacji zawsze, gdy należy dodać co najmniej jeden obiekt przekształcenia zaszyfrowanego dokumentu XML lub podpisanego dokumentu XML.       Aby uzyskać więcej informacji na temat `<Transform>` elementu, zobacz specyfikację XMLDSIG, który jest dostępny w sieci World Wide Web konsorcjum (W3C) w www.w3.org/TR/xmldsig-core/, lub specyfikacji szyfrowania XML, który jest dostępny z W3C w www.w3.org/TR/xmlenc-core/."
  syntax:
    content: public abstract class Transform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Transform()
  nameWithType: Transform.Transform()
  fullName: System.Security.Cryptography.Xml.Transform.Transform()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> klasy."
  syntax:
    content: protected Transform ();
    parameters: []
  overload: System.Security.Cryptography.Xml.Transform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Algorithm
  nameWithType: Transform.Algorithm
  fullName: System.Security.Cryptography.Xml.Transform.Algorithm
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia URI Uniform Resource Identifier () określający algorytm wykonywane przez bieżący transformacji."
  remarks: "Ta właściwość odnosi się do atrybutu algorytmu `<Transform>` element w podpisie XMLDSIG. Na przykład identyfikator URI algorytm przekształcenia dekodowania Base64 jest zdefiniowany jako http://www.w3.org/2000/09/xmldsig#base64 w specyfikacji XMLDSIG (sekcja 6.6.2).       Możesz łatwo tę wartość można ustawić przy użyciu jednej z pola statyczne skojarzone z <xref:System.Security.Cryptography.Xml.SignedXml>klasy.</xref:System.Security.Cryptography.Xml.SignedXml>"
  syntax:
    content: public string Algorithm { get; set; }
    return:
      type: System.String
      description: "Identyfikator URI, który identyfikuje algorytm wykonywane przez bieżący <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.Transform.Algorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.Context
  id: Context
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Context
  nameWithType: Transform.Context
  fullName: System.Security.Cryptography.Xml.Transform.Context
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia <xref href=&quot;System.Xml.XmlElement&quot;> </xref> obiekt, który reprezentuje kontekst dokumentu, w którym bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu jest uruchomiona."
  remarks: "Podczas podpisywania dokumentu, właściwości kontekstu reprezentuje wartość przekazana do <xref:System.Security.Cryptography.Xml.SignedXml>konstruktora.</xref:System.Security.Cryptography.Xml.SignedXml>  Podczas weryfikowania dokument, właściwości kontekstu reprezentuje <xref:System.Security.Cryptography.Xml.Signature>obiektu.</xref:System.Security.Cryptography.Xml.Signature>       Właściwości kontekstu jest ustawiana automatycznie podczas obliczania sygnatury i sprawdzania, ale przed wywołaniem transformacji."
  syntax:
    content: public System.Xml.XmlElement Context { get; set; }
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref> Obiekt, który reprezentuje kontekst dokumentu, w którym bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu jest uruchomiona."
  overload: System.Security.Cryptography.Xml.Transform.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  id: GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetDigestedOutput(HashAlgorithm)
  nameWithType: Transform.GetDigestedOutput(HashAlgorithm)
  fullName: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(HashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "W przypadku przesłonięcia w klasie pochodnej zwraca wartość skrótu skojarzony z <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu."
  syntax:
    content: public virtual byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);
    parameters:
    - id: hash
      type: System.Security.Cryptography.HashAlgorithm
      description: "<xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> Obiekt używany do tworzenia skrótu."
    return:
      type: System.Byte[]
      description: "Skrót skojarzony z <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.Transform.GetDigestedOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetInnerXml
  id: GetInnerXml
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetInnerXml()
  nameWithType: Transform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetInnerXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Po przesłonięciu w klasie pochodnej zwraca reprezentację XML parametry <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektów, które są odpowiednie do uwzględnienia jako podelementy XMLDSIG <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> elementu."
  remarks: ''
  example:
  - "If a <xref:System.Security.Cryptography.Xml.Transform> object represents an XPath transform using the XPath expression `self::text()`,a call to GetInnerXml results in an <xref:System.Xml.XmlNodeList> object that represents the following XML element:  \n  \n```  \n<XPath>   \n  self::text()   \n</XPath>  \n```  \n  \n This element corresponds to the transform-specific content of the `<Transform>` element as defined in Section 4.3.3.4 of the XMLDSIG specification. For the above XPath transform, the entire `<Transform>` element is as follows:  \n  \n```  \n<Transform Algorithm=\"http://www.w3.org/TR/1999/REC-xpath-19991116\">   \n  <XPath>   \n    self::text()   \n  </XPath>   \n</Transform>  \n```"
  syntax:
    content: protected abstract System.Xml.XmlNodeList GetInnerXml ();
    parameters: []
    return:
      type: System.Xml.XmlNodeList
      description: "Lista węzłów XML, reprezentujących zawartość specyficzne dla transformacji niezbędnej do opisania bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu w XMLDSIG <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> elementu."
  overload: System.Security.Cryptography.Xml.Transform.GetInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetOutput
  id: GetOutput
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetOutput()
  nameWithType: Transform.GetOutput()
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "W przypadku przesłonięcia w klasie pochodnej zwraca dane wyjściowe bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu."
  syntax:
    content: public abstract object GetOutput ();
    parameters: []
    return:
      type: System.Object
      description: "Dane wyjściowe bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.Transform.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)
  id: GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetOutput(Type)
  nameWithType: Transform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput(Type)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "W przypadku przesłonięcia w klasie pochodnej zwraca dane wyjściowe bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu określonego typu."
  remarks: "Metoda GetOutput zwraca dane wyjściowe bieżącego transformacji po uruchomieniu na wartość ustawioną wcześniej przez wywołanie do <xref:System.Security.Cryptography.Xml.Transform.LoadInput%2A>metody.</xref:System.Security.Cryptography.Xml.Transform.LoadInput%2A>       Typ zwracany obiekt musi być jednym z obiektów typu w <xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A>Właściwości.</xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A>"
  syntax:
    content: public abstract object GetOutput (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Typ danych wyjściowych do zwrócenia. Musi to być jeden z typów w <xref:System.Security.Cryptography.Xml.Transform.OutputTypes*>Właściwości.</xref:System.Security.Cryptography.Xml.Transform.OutputTypes*>"
    return:
      type: System.Object
      description: "Dane wyjściowe bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu jako obiektu określonego typu."
  overload: System.Security.Cryptography.Xml.Transform.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: GetXml()
  nameWithType: Transform.GetXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Zwraca reprezentację XML bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu."
  remarks: "<xref:System.Xml.XmlElement>Obiektu zwróconego przez tę metodę odpowiada schematu XML dla `<Transform>` elementu zdefiniowanego w sekcji 4.3.3.4 specyfikacji XMLDSIG.</xref:System.Xml.XmlElement>"
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "Reprezentacja XML bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.Transform.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.InputTypes
  id: InputTypes
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: InputTypes
  nameWithType: Transform.InputTypes
  fullName: System.Security.Cryptography.Xml.Transform.InputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "W przypadku przesłonięcia w klasie pochodnej pobiera tablicę typów, które są prawidłowe wartości wejściowe do <xref:System.Security.Cryptography.Xml.Transform.LoadInput*>metody bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu.</xref:System.Security.Cryptography.Xml.Transform.LoadInput*>"
  remarks: "Tablica zwrócona przez właściwość InputTypes musi zawierać co najmniej jeden element, ponieważ każdy <xref:System.Security.Cryptography.Xml.Transform>obiektu musi być co najmniej jeden typ jako prawidłowe wartości wejściowe.</xref:System.Security.Cryptography.Xml.Transform>       A <xref:System.Security.Cryptography.Xml.Transform>obiektu akceptuje zazwyczaj co najmniej jeden z następujących typów jako dane wejściowe: <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, lub <xref:System.Xml.XmlNodeList>.</xref:System.Xml.XmlNodeList> </xref:System.Xml.XmlDocument> </xref:System.IO.Stream> </xref:System.Security.Cryptography.Xml.Transform>"
  syntax:
    content: public abstract Type[] InputTypes { get; }
    return:
      type: System.Type[]
      description: "Tablica prawidłowe typy wejściowe dla bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiekt; można przekazać tylko obiekty jednego z tych typów do <xref:System.Security.Cryptography.Xml.Transform.LoadInput*>metody bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu.</xref:System.Security.Cryptography.Xml.Transform.LoadInput*>"
  overload: System.Security.Cryptography.Xml.Transform.InputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)
  id: LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: LoadInnerXml(XmlNodeList)
  nameWithType: Transform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInnerXml(XmlNodeList)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "W przypadku przesłonięcia w klasie pochodnej, analizuje określony <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> obiektu jako zawartość specyficzne dla transformacji <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> element i konfiguruje stan wewnętrzny bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu odpowiadające <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;> </xref> elementu."
  remarks: "Ta metoda służy do przetwarzania podelementy z `<Transform>` elementu."
  syntax:
    content: public abstract void LoadInnerXml (System.Xml.XmlNodeList nodeList);
    parameters:
    - id: nodeList
      type: System.Xml.XmlNodeList
      description: "<xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> Obiekt, który określa zawartości określonego transformacji dla bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.Transform.LoadInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)
  id: LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: LoadInput(Object)
  nameWithType: Transform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInput(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "W przypadku przesłonięcia w klasie pochodnej, ładuje określone dane wejściowe do bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu."
  remarks: "Typ wprowadzanego obiektu musi być jednego z typów w <xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A>Właściwości.</xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A>"
  syntax:
    content: public abstract void LoadInput (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Dane wejściowe do załadowania do bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.Transform.LoadInput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.OutputTypes
  id: OutputTypes
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: OutputTypes
  nameWithType: Transform.OutputTypes
  fullName: System.Security.Cryptography.Xml.Transform.OutputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "W przypadku przesłonięcia w klasie pochodnej pobiera tablicę typów, które są możliwe dane wyjściowe z <xref:System.Security.Cryptography.Xml.Transform.GetOutput*>metody bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu.</xref:System.Security.Cryptography.Xml.Transform.GetOutput*>"
  remarks: "Tablica zwrócona przez właściwość OutputTypes musi zawierać co najmniej jeden element, ponieważ każdy przekształcenia należy wygenerować co najmniej jeden typ jako dane wyjściowe."
  syntax:
    content: public abstract Type[] OutputTypes { get; }
    return:
      type: System.Type[]
      description: "Tablicę typów prawidłowego wyjścia dla bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiekt; obiekty tylko jednego z tych typów są zwracane z <xref:System.Security.Cryptography.Xml.Transform.GetOutput*>metody bieżącego <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref> obiektu.</xref:System.Security.Cryptography.Xml.Transform.GetOutput*>"
  overload: System.Security.Cryptography.Xml.Transform.OutputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  id: PropagatedNamespaces
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: PropagatedNamespaces
  nameWithType: Transform.PropagatedNamespaces
  fullName: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Pobiera lub ustawia <xref href=&quot;System.Collections.Hashtable&quot;> </xref> obiekt, który zawiera przestrzenie nazw, które są przenoszone na podpis."
  remarks: "Przestrzenie nazw XML są używane do odróżnienia różnych elementów w dokumencie, które mają taką samą nazwę.       <xref:System.Collections.Hashtable>Prefiksy przestrzeni nazw są klucze właściwości PropagatedNamespaces i <xref:System.Collections.Hashtable>wartości są przestrzeni nazw Uniform Resource Identifier (URI).</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable>       Właściwość PropagatedNamespaces ustawiono automatycznie podczas obliczania sygnatury i sprawdzania, ale przed wywołaniem transformacji."
  syntax:
    content: public System.Collections.Hashtable PropagatedNamespaces { get; }
    return:
      type: System.Collections.Hashtable
      description: "A <xref href=&quot;System.Collections.Hashtable&quot;> </xref> obiekt, który zawiera przestrzenie nazw, które są przenoszone na podpis."
  overload: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ustawiono właściwość PropagatedNamespaces <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Transform.Resolver
  id: Resolver
  parent: System.Security.Cryptography.Xml.Transform
  langs:
  - csharp
  name: Resolver
  nameWithType: Transform.Resolver
  fullName: System.Security.Cryptography.Xml.Transform.Resolver
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ustawia bieżący <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> obiektu."
  remarks: "<xref:System.Xml.XmlResolver>Klasy rozpoznaje zasobów zewnętrznych XML o nazwie przez zasób identyfikator URI (Uniform).</xref:System.Xml.XmlResolver> Jeśli nie ufasz źródłu pliku XML, możesz nie zezwala na dostęp do zasobów komputera o nazwie przez identyfikator URI pliku XML. Właściwość programu rozpoznawania nazw pozwala kontrolować poziom dostępu pliki XML do zasobów komputera, określając inną <xref:System.Xml.XmlResolver>obiektów.</xref:System.Xml.XmlResolver> Jeśli nie chcesz zezwolić na dostęp, można ustawić tę właściwość `null` (`Nothing` w języku Visual Basic)."
  syntax:
    content: public System.Xml.XmlResolver Resolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Bieżący <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> obiektu. Domyślnie ta właściwość <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> obiektu."
  overload: System.Security.Cryptography.Xml.Transform.Resolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.Transform.#ctor
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Transform()
  nameWithType: Transform.Transform()
  fullName: System.Security.Cryptography.Xml.Transform.Transform()
- uid: System.Security.Cryptography.Xml.Transform.Algorithm
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Algorithm
  nameWithType: Transform.Algorithm
  fullName: System.Security.Cryptography.Xml.Transform.Algorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.Transform.Context
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Context
  nameWithType: Transform.Context
  fullName: System.Security.Cryptography.Xml.Transform.Context
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetDigestedOutput(HashAlgorithm)
  nameWithType: Transform.GetDigestedOutput(HashAlgorithm)
  fullName: System.Security.Cryptography.Xml.Transform.GetDigestedOutput(HashAlgorithm)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.Xml.Transform.GetInnerXml
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetInnerXml()
  nameWithType: Transform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetInnerXml()
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Cryptography.Xml.Transform.GetOutput
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetOutput()
  nameWithType: Transform.GetOutput()
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput()
- uid: System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetOutput(Type)
  nameWithType: Transform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.Transform.GetOutput(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Cryptography.Xml.Transform.GetXml
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetXml()
  nameWithType: Transform.GetXml()
  fullName: System.Security.Cryptography.Xml.Transform.GetXml()
- uid: System.Security.Cryptography.Xml.Transform.InputTypes
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: InputTypes
  nameWithType: Transform.InputTypes
  fullName: System.Security.Cryptography.Xml.Transform.InputTypes
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInnerXml(XmlNodeList)
  nameWithType: Transform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInnerXml(XmlNodeList)
- uid: System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInput(Object)
  nameWithType: Transform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.Transform.LoadInput(Object)
- uid: System.Security.Cryptography.Xml.Transform.OutputTypes
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: OutputTypes
  nameWithType: Transform.OutputTypes
  fullName: System.Security.Cryptography.Xml.Transform.OutputTypes
- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: PropagatedNamespaces
  nameWithType: Transform.PropagatedNamespaces
  fullName: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Security.Cryptography.Xml.Transform.Resolver
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Resolver
  nameWithType: Transform.Resolver
  fullName: System.Security.Cryptography.Xml.Transform.Resolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Security.Cryptography.Xml.Transform.#ctor*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Transform
  nameWithType: Transform.Transform
- uid: System.Security.Cryptography.Xml.Transform.Algorithm*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Algorithm
  nameWithType: Transform.Algorithm
- uid: System.Security.Cryptography.Xml.Transform.Context*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Context
  nameWithType: Transform.Context
- uid: System.Security.Cryptography.Xml.Transform.GetDigestedOutput*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetDigestedOutput
  nameWithType: Transform.GetDigestedOutput
- uid: System.Security.Cryptography.Xml.Transform.GetInnerXml*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetInnerXml
  nameWithType: Transform.GetInnerXml
- uid: System.Security.Cryptography.Xml.Transform.GetOutput*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetOutput
  nameWithType: Transform.GetOutput
- uid: System.Security.Cryptography.Xml.Transform.GetXml*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: GetXml
  nameWithType: Transform.GetXml
- uid: System.Security.Cryptography.Xml.Transform.InputTypes*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: InputTypes
  nameWithType: Transform.InputTypes
- uid: System.Security.Cryptography.Xml.Transform.LoadInnerXml*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInnerXml
  nameWithType: Transform.LoadInnerXml
- uid: System.Security.Cryptography.Xml.Transform.LoadInput*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: LoadInput
  nameWithType: Transform.LoadInput
- uid: System.Security.Cryptography.Xml.Transform.OutputTypes*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: OutputTypes
  nameWithType: Transform.OutputTypes
- uid: System.Security.Cryptography.Xml.Transform.PropagatedNamespaces*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: PropagatedNamespaces
  nameWithType: Transform.PropagatedNamespaces
- uid: System.Security.Cryptography.Xml.Transform.Resolver*
  parent: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: Resolver
  nameWithType: Transform.Resolver
