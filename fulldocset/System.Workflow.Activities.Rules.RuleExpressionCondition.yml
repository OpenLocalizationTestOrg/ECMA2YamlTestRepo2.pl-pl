### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition
  id: RuleExpressionCondition
  children:
  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor
  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Clone
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
  - System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)
  - System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Name
  - System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized
  - System.Workflow.Activities.Rules.RuleExpressionCondition.ToString
  - System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)
  langs:
  - csharp
  name: RuleExpressionCondition
  nameWithType: RuleExpressionCondition
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition
  type: Class
  summary: "Definiuje definicji warunku za <xref href=&quot;System.Workflow.Activities.Rules.RuleConditionReference&quot;> </xref>. Ta klasa nie może być dziedziczona."
  remarks: "Klasa RuleExpressionCondition definiuje podstawowym obliczone warunki, kiedy <xref:System.Workflow.Activities.Rules.RuleSet>jest wykonywany.</xref:System.Workflow.Activities.Rules.RuleSet>       Ten typ warunku jest modelowana z typami CodeDom. Aby uzyskać więcej informacji na temat typów CodeDom zobacz [CodeDOM typy obsługiwane przez program Windows Workflow Foundation](http://msdn.microsoft.com/en-us/0381740f-0a29-43ae-96e2-17e14e832083)."
  syntax:
    content: 'public sealed class RuleExpressionCondition : System.Workflow.Activities.Rules.RuleCondition'
  inheritance:
  - System.Object
  - System.Workflow.Activities.Rules.RuleCondition
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: RuleExpressionCondition()
  nameWithType: RuleExpressionCondition.RuleExpressionCondition()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> klasy."
  syntax:
    content: public RuleExpressionCondition ();
    parameters: []
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)
  id: '#ctor(System.CodeDom.CodeExpression)'
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: RuleExpressionCondition(CodeExpression)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(CodeExpression)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> klasy przy użyciu wyrażenia określony kod."
  syntax:
    content: public RuleExpressionCondition (System.CodeDom.CodeExpression expression);
    parameters:
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> Zainicjować <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> z."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: RuleExpressionCondition(String)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> przy użyciu określonej nazwy."
  syntax:
    content: public RuleExpressionCondition (string conditionName);
    parameters:
    - id: conditionName
      type: System.String
      description: "Nazwa stanu do oceny."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>conditionName</code>to odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)
  id: '#ctor(System.String,System.CodeDom.CodeExpression)'
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: RuleExpressionCondition(String,CodeExpression)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> przy użyciu nazwy i kodu z określonym wyrażeniem."
  syntax:
    content: public RuleExpressionCondition (string conditionName, System.CodeDom.CodeExpression expression);
    parameters:
    - id: conditionName
      type: System.String
      description: "Nazwa stanu do oceny."
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "<xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> Zainicjować <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> z."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone
  id: Clone
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Clone()
  nameWithType: RuleExpressionCondition.Clone()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Tworzy głęboką kopię bieżącego <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref>."
  syntax:
    content: public override System.Workflow.Activities.Rules.RuleCondition Clone ();
    parameters: []
    return:
      type: System.Workflow.Activities.Rules.RuleCondition
      description: "A <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> jest taki sam jak to wystąpienie."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: RuleExpressionCondition.Equals(Object)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(Object)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Określa, czy dwa wystąpienia obiektu są takie same."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>Do porównania z bieżącym obiektem.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wystąpienia obiektu są równe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)
  id: Evaluate(System.Workflow.Activities.Rules.RuleExecution)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Evaluate(RuleExecution)
  nameWithType: RuleExpressionCondition.Evaluate(RuleExecution)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(RuleExecution)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Oblicza wyrażenie."
  syntax:
    content: public override bool Evaluate (System.Workflow.Activities.Rules.RuleExecution execution);
    parameters:
    - id: execution
      type: System.Workflow.Activities.Rules.RuleExecution
      description: "Wystąpienie kontekstu środowiska uruchomieniowego który <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref> działa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wyrażenie ma wartość PRAWDA; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
  id: Expression
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Expression
  nameWithType: RuleExpressionCondition.Expression
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Pobiera lub ustawia warunku wyrażenia do oceny."
  syntax:
    content: public System.CodeDom.CodeExpression Expression { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "Warunku wyrażenia do oceny."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression*
  exceptions:
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "Działanie systemem <xref href=&quot;System.Workflow.Activities.Rules.RuleSet&quot;> </xref> środowiska wykonawczego został zainicjowany."
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)
  id: GetDependencies(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: GetDependencies(RuleValidation)
  nameWithType: RuleExpressionCondition.GetDependencies(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(RuleValidation)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Pobiera zależności dla <xref href=&quot;System.Workflow.Activities.Rules.RuleExpressionCondition&quot;> </xref>."
  syntax:
    content: public override System.Collections.Generic.ICollection<string> GetDependencies (System.Workflow.Activities.Rules.RuleValidation validation);
    parameters:
    - id: validation
      type: System.Workflow.Activities.Rules.RuleValidation
      description: "<xref href=&quot;System.Workflow.Activities.Rules.RuleValidation&quot;> </xref> Do zarządzania procesem weryfikacji."
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Lista zależności."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode
  id: GetHashCode
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: RuleExpressionCondition.GetHashCode()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Zwraca wartość skrótu dla tego wystąpienia."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu dla tego wystąpienia."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Name
  id: Name
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Name
  nameWithType: RuleExpressionCondition.Name
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Name
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Pobiera lub ustawia nazwę warunku do oceny."
  syntax:
    content: public override string Name { get; set; }
    return:
      type: System.String
      description: "Nazwa stanu do oceny."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Name*
  exceptions:
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "Działanie systemem <xref href=&quot;System.Workflow.Activities.Rules.RuleSet&quot;> </xref> środowiska wykonawczego został zainicjowany."
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized
  id: OnRuntimeInitialized
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: OnRuntimeInitialized()
  nameWithType: RuleExpressionCondition.OnRuntimeInitialized()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Wywoływane, gdy wszystkie właściwości zostały przypisane wartości."
  remarks: "Po tym wywołaniu właściwości nie może być modyfikowany."
  syntax:
    content: public override void OnRuntimeInitialized ();
    parameters: []
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString
  id: ToString
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: ToString()
  nameWithType: RuleExpressionCondition.ToString()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Zwraca wartość ciągu warunku wyrażenia."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Wartość ciągu warunku wyrażenia. Pusty ciąg, jeśli wyrażenie warunku jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)
  id: Validate(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  langs:
  - csharp
  name: Validate(RuleValidation)
  nameWithType: RuleExpressionCondition.Validate(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(RuleValidation)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Sprawdza, czy wyrażenie jest poprawnie skonfigurowany i nie zawiera błędów."
  remarks: "Jeśli <xref:System.Workflow.Activities.Rules.RuleExpressionCondition>zawiera błędy ( `Validate` metoda zwraca `false`), następnie <xref:System.Workflow.Activities.Rules.RuleValidation.Errors%2A?displayProperty=fullName>będzie zawierać listę napotkano błędy.</xref:System.Workflow.Activities.Rules.RuleValidation.Errors%2A?displayProperty=fullName> </xref:System.Workflow.Activities.Rules.RuleExpressionCondition>"
  syntax:
    content: public override bool Validate (System.Workflow.Activities.Rules.RuleValidation validation);
    parameters:
    - id: validation
      type: System.Workflow.Activities.Rules.RuleValidation
      description: "<xref href=&quot;System.Workflow.Activities.Rules.RuleValidation&quot;> </xref> Do zarządzania procesem weryfikacji."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wyrażenie nie zawiera błędów; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>validator</code>to odwołanie o wartości null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic)."
  platform:
  - net462
references:
- uid: System.Workflow.Activities.Rules.RuleCondition
  isExternal: false
  name: System.Workflow.Activities.Rules.RuleCondition
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition()
  nameWithType: RuleExpressionCondition.RuleExpressionCondition()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition()
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition(CodeExpression)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(CodeExpression)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition(String)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition(String,CodeExpression)
  nameWithType: RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.RuleExpressionCondition(String,CodeExpression)
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Clone()
  nameWithType: RuleExpressionCondition.Clone()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone()
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Equals(Object)
  nameWithType: RuleExpressionCondition.Equals(Object)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Evaluate(RuleExecution)
  nameWithType: RuleExpressionCondition.Evaluate(RuleExecution)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(RuleExecution)
- uid: System.Workflow.Activities.Rules.RuleExecution
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleExecution
  nameWithType: RuleExecution
  fullName: System.Workflow.Activities.Rules.RuleExecution
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Expression
  nameWithType: RuleExpressionCondition.Expression
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: GetDependencies(RuleValidation)
  nameWithType: RuleExpressionCondition.GetDependencies(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(RuleValidation)
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.Rules.RuleValidation
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleValidation
  nameWithType: RuleValidation
  fullName: System.Workflow.Activities.Rules.RuleValidation
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: GetHashCode()
  nameWithType: RuleExpressionCondition.GetHashCode()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Name
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Name
  nameWithType: RuleExpressionCondition.Name
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Name
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: OnRuntimeInitialized()
  nameWithType: RuleExpressionCondition.OnRuntimeInitialized()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized()
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: ToString()
  nameWithType: RuleExpressionCondition.ToString()
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString()
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Validate(RuleValidation)
  nameWithType: RuleExpressionCondition.Validate(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(RuleValidation)
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: RuleExpressionCondition
  nameWithType: RuleExpressionCondition.RuleExpressionCondition
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Clone*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Clone
  nameWithType: RuleExpressionCondition.Clone
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Equals*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Equals
  nameWithType: RuleExpressionCondition.Equals
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Evaluate
  nameWithType: RuleExpressionCondition.Evaluate
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Expression*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Expression
  nameWithType: RuleExpressionCondition.Expression
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: GetDependencies
  nameWithType: RuleExpressionCondition.GetDependencies
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: GetHashCode
  nameWithType: RuleExpressionCondition.GetHashCode
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Name*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Name
  nameWithType: RuleExpressionCondition.Name
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: OnRuntimeInitialized
  nameWithType: RuleExpressionCondition.OnRuntimeInitialized
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.ToString*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: ToString
  nameWithType: RuleExpressionCondition.ToString
- uid: System.Workflow.Activities.Rules.RuleExpressionCondition.Validate*
  parent: System.Workflow.Activities.Rules.RuleExpressionCondition
  isExternal: false
  name: Validate
  nameWithType: RuleExpressionCondition.Validate
