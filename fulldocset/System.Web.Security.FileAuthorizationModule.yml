### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FileAuthorizationModule
  id: FileAuthorizationModule
  children:
  - System.Web.Security.FileAuthorizationModule.#ctor
  - System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  - System.Web.Security.FileAuthorizationModule.Dispose
  - System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: FileAuthorizationModule
  nameWithType: FileAuthorizationModule
  fullName: System.Web.Security.FileAuthorizationModule
  type: Class
  summary: "Sprawdza, czy użytkownik ma uprawnienia dostępu do żądanego pliku. Ta klasa nie może być dziedziczona."
  remarks: "Ten moduł dostarcza autoryzacji usług systemu plików list kontroli dostępu (ACL). Gdy `mode` atrybutu [uwierzytelniania — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2) element konfiguracji ma ustawioną wartość `Windows` , aby <xref:System.Web.Security.WindowsAuthenticationModule>jest używany dla aplikacji, FileAuthorizationModule modułu gwarantuje, że użytkownik zgłaszający żądanie może odczytać lub zapisać dostępu do zasobów, w zależności od zlecenie żądania przed wykonaniem żądania.</xref:System.Web.Security.WindowsAuthenticationModule> Aby uzyskać więcej informacji, zobacz <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A>metody.</xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A>"
  syntax:
    content: 'public sealed class FileAuthorizationModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: FileAuthorizationModule()
  nameWithType: FileAuthorizationModule.FileAuthorizationModule()
  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Tworzy wystąpienie <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref> klasy."
  remarks: "Ten konstruktor nie jest przeznaczony do wywoływania z kodu aplikacji.       ASP.NET wywołuje ten konstruktor można utworzyć wystąpienia <xref:System.Web.Security.FileAuthorizationModule>klasy.</xref:System.Web.Security.FileAuthorizationModule> Po wywołaniu metody konstruktora, wywołuje <xref:System.Web.Security.FileAuthorizationModule.Init%2A>metodę, aby zainicjować nowe <xref:System.Web.Security.FileAuthorizationModule>obiektu.</xref:System.Web.Security.FileAuthorizationModule> </xref:System.Web.Security.FileAuthorizationModule.Init%2A>"
  syntax:
    content: public FileAuthorizationModule ();
    parameters: []
  overload: System.Web.Security.FileAuthorizationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  id: CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: CheckFileAccessForUser(String,IntPtr,String)
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Określa, czy użytkownik ma dostęp do żądanego pliku."
  remarks: "Metoda CheckFileAccessForUser sprawdza, czy bieżący użytkownik reprezentowany przez token dostępu systemu Windows, ma dostęp do żądanego pliku w systemie plików list kontroli dostępu (ACL). Ścieżka wirtualna jest zamapowany na ścieżkę fizycznego systemu plików, przed dokonaniem wyboru.       Jeśli zlecenie HTTP użyte do wysłania żądania jest `GET`, `POST`, lub `HEAD`, metoda CheckFileAccessForUser sprawdza, czy dostęp do odczytu do pliku. Użycie innych zlecenie metoda CheckFileAccessForUser sprawdza uprawnienia odczytu/zapisu do pliku.       **Uwaga dotycząca zabezpieczeń** Jeśli <xref:System.Web.Security.FileAuthorizationModule>modułu nie jest zdefiniowany w `httpModules` sekcji konfiguracji dla aplikacji, <xref:System.Web.Security.FileAuthorizationModule>moduł zawsze zwraca `true`.</xref:System.Web.Security.FileAuthorizationModule> </xref:System.Web.Security.FileAuthorizationModule>"
  syntax:
    content: public static bool CheckFileAccessForUser (string virtualPath, IntPtr token, string verb);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Ścieżka wirtualna do pliku."
    - id: token
      type: System.IntPtr
      description: "Token dostępu systemu Windows, reprezentujący użytkownika."
    - id: verb
      type: System.String
      description: "Zlecenie HTTP użyte do wysłania żądania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący użytkownik systemu Windows jest reprezentowany przez <code> token </code> ma dostęp do pliku przy użyciu określone zlecenie HTTP lub, jeśli <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref> moduł nie jest zdefiniowana w pliku konfiguracyjnym aplikacji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>token</code> is <xref:System.IntPtr.Zero>.       -or-       <code>verb</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>nie jest w strukturze katalogów aplikacji w aplikacji sieci Web."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Plik określony przez <code> virtualPath </code> nie istnieje."
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.Dispose
  id: Dispose
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: FileAuthorizationModule.Dispose()
  fullName: System.Web.Security.FileAuthorizationModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Zwalnia wszystkie zasoby, innego niż pamięci używanej przez <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref>."
  remarks: "Ta metoda nie jest przeznaczona do wywoływania z kodu aplikacji."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.FileAuthorizationModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: FileAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicjuje <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref> obiektu."
  remarks: "Ta metoda nie jest przeznaczona do wywoływania z kodu aplikacji.       Init — metoda gwarantuje, że <xref:System.Web.Security.FileAuthorizationModule>jest uwzględniona w przetwarzania <xref:System.Web.HttpApplication.AuthorizeRequest>zdarzeń.</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.Security.FileAuthorizationModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "Bieżący <xref href=&quot;System.Web.HttpApplication&quot;> </xref> wystąpienia."
  overload: System.Web.Security.FileAuthorizationModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Web.Security.FileAuthorizationModule.#ctor
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: FileAuthorizationModule()
  nameWithType: FileAuthorizationModule.FileAuthorizationModule()
  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: CheckFileAccessForUser(String,IntPtr,String)
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.Security.FileAuthorizationModule.Dispose
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Dispose()
  nameWithType: FileAuthorizationModule.Dispose()
  fullName: System.Web.Security.FileAuthorizationModule.Dispose()
- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: FileAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.FileAuthorizationModule.#ctor*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: FileAuthorizationModule
  nameWithType: FileAuthorizationModule.FileAuthorizationModule
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: CheckFileAccessForUser
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser
- uid: System.Web.Security.FileAuthorizationModule.Dispose*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Dispose
  nameWithType: FileAuthorizationModule.Dispose
- uid: System.Web.Security.FileAuthorizationModule.Init*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Init
  nameWithType: FileAuthorizationModule.Init
