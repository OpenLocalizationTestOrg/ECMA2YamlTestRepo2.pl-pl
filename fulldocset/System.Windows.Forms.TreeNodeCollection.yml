### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.TreeNodeCollection
  id: TreeNodeCollection
  children:
  - System.Windows.Forms.TreeNodeCollection.Add(System.String)
  - System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])
  - System.Windows.Forms.TreeNodeCollection.Clear
  - System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)
  - System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Count
  - System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)
  - System.Windows.Forms.TreeNodeCollection.GetEnumerator
  - System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.IsReadOnly
  - System.Windows.Forms.TreeNodeCollection.Item(System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Item(System.String)
  - System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)
  - System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Windows.Forms.TreeNodeCollection
  type: Class
  summary: "Reprezentuje kolekcję <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> obiektów."
  remarks: "<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, I <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>metody umożliwiają dodawanie i usuwanie z kolekcji węzły drzewa poszczególnych.</xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A>      > [!NOTE] > Kolekcji wyliczania i usuwania węzłów nie jest obsługiwane.       Można również użyć <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metody do dodawania lub usuwania wszystkich węzłów w drzewie z kolekcji.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>       Klas nie może dziedziczyć po klasie TreeNodeCollection."
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/t-system.windows.forms.t_6_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/t-system.windows.forms.t_6_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/t-system.windows.forms.t_6_1.cpp)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      public class TreeNodeCollection : System.Collections.IList
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: TreeNodeCollection.Add(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Dodaje nowy węzeł drzewa tekst etykiety w celu bieżącej kolekcji węzła drzewa."
  remarks: "Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       Aby usunąć <xref:System.Windows.Forms.TreeNode>wcześniej dodaną, użyj <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, lub <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_56_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/m-system.windows.forms.t_56_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/m-system.windows.forms.t_56_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string text);
    parameters:
    - id: text
      type: System.String
      description: "Tekst etykiety wyświetlany przez <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
    return:
      type: System.Windows.Forms.TreeNode
      description: "A <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> reprezentujący dodawany do kolekcji węzła drzewa."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)
  id: Add(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Dodaje węzeł drzewa wcześniej utworzonej na końcu kolekcji węzła drzewa."
  remarks: "Ta wersja <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>Metoda pozwala na dodawanie wcześniej utworzony <xref:System.Windows.Forms.TreeNode>obiekty do końca kolekcji węzła drzewa.</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A>       Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       Aby usunąć <xref:System.Windows.Forms.TreeNode>wcześniej dodaną, użyj <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, lub <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>      > [!NOTE] > A <xref:System.Windows.Forms.TreeNode>można przypisać do tylko jednej <xref:System.Windows.Forms.TreeView>formantu w czasie.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode> Aby dodać węzeł drzewa z formantem widoku drzewa, należy usunąć go z widoku drzewa najpierw lub sklonować go."
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_22_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/m-system.windows.forms.t_22_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/m-system.windows.forms.t_22_1.cpp)]"
  syntax:
    content: public virtual int Add (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Do dodania do kolekcji."
    return:
      type: System.Int32
      description: "Wartość indeksu <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> dodany do kolekcji węzła drzewa."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> node </code> Jest aktualnie przypisana do innego <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: TreeNodeCollection.Add(String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tworzy nowy węzeł drzewa z określonym kluczem i tekst i dodaje go do kolekcji."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text);
    parameters:
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa."
    - id: text
      type: System.String
      description: "Tekst wyświetlany w węźle drzewa."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Który został dodany do kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)
  id: Add(System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tworzy węzeł drzewa z określonym kluczem, tekst i obraz i dodaje go do kolekcji."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       `imageIndex` Parametr odnosi się do obrazu we <xref:System.Windows.Forms.TreeView.ImageList%2A>Właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>       Węzeł drzewa jest dodawany do końca kolekcji. Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex);
    parameters:
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa."
    - id: text
      type: System.String
      description: "Tekst wyświetlany w węźle drzewa."
    - id: imageIndex
      type: System.Int32
      description: "Indeks obrazu do wyświetlenia w węźle drzewa."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Który został dodany do kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)
  id: Add(System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tworzy węzeł drzewa z określonym kluczem, tekst i obraz i dodaje go do kolekcji."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Węzeł drzewa jest dodawany do końca kolekcji. Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       `imageKey` Parametr odnosi się do obrazu we <xref:System.Windows.Forms.TreeView.ImageList%2A>Właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey);
    parameters:
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa."
    - id: text
      type: System.String
      description: "Tekst wyświetlany w węźle drzewa."
    - id: imageKey
      type: System.String
      description: "Obraz wyświetlany w węźle drzewa."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Który został dodany do kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)
  id: Add(System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tworzy węzeł drzewa z określonym kluczem, tekst i obrazy i dodaje go do kolekcji."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Węzeł drzewa jest dodawany do końca kolekcji. Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       `imageIndex` Parametr odnosi się do obrazu we <xref:System.Windows.Forms.TreeView.ImageList%2A>Właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>       `selectedImageIndex` Parametr odnosi się do obrazu we <xref:System.Windows.Forms.TreeView.StateImageList%2A>Właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.StateImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex, int selectedImageIndex);
    parameters:
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa."
    - id: text
      type: System.String
      description: "Tekst wyświetlany w węźle drzewa."
    - id: imageIndex
      type: System.Int32
      description: "Indeks obrazu do wyświetlenia w węźle drzewa."
    - id: selectedImageIndex
      type: System.Int32
      description: "Indeks obrazu do wyświetlenia w węźle drzewa, gdy jest on w stanie zaznaczenia."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Węzeł drzewa, który został dodany do kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)
  id: Add(System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tworzy węzeł drzewa z określonym kluczem, tekst i obrazy i dodaje go do kolekcji."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Węzeł drzewa jest dodawany do końca kolekcji. Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       `imageKey` Parametr odnosi się do obrazu we <xref:System.Windows.Forms.TreeView.ImageList%2A>Właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>       `selectedImageKey` Parametr odnosi się do obrazu we <xref:System.Windows.Forms.TreeView.StateImageList%2A>Właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.StateImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey, string selectedImageKey);
    parameters:
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa."
    - id: text
      type: System.String
      description: "Tekst wyświetlany w węźle drzewa."
    - id: imageKey
      type: System.String
      description: "Klucz obraz wyświetlany w węźle drzewa."
    - id: selectedImageKey
      type: System.String
      description: "Klucz obraz wyświetlany, gdy węzeł jest w stanie zaznaczenia."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Który został dodany do kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])
  id: AddRange(System.Windows.Forms.TreeNode[])
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: AddRange(TreeNode[])
  nameWithType: TreeNodeCollection.AddRange(TreeNode[])
  fullName: System.Windows.Forms.TreeNodeCollection.AddRange(TreeNode[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Dodaje tablicę węzły drzewa utworzonej wcześniej do kolekcji."
  remarks: "<xref:System.Windows.Forms.TreeNode>Obiektów zawartych w `nodes` tablicy są dołączane do końca kolekcji.</xref:System.Windows.Forms.TreeNode>       Umożliwia metody AddRange szybko dodać grupę utworzoną wcześniej <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji, zamiast ręcznie dodać każdego <xref:System.Windows.Forms.TreeNode>do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode>       Aby usunąć <xref:System.Windows.Forms.TreeNode>wcześniej dodaną, użyj <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, lub <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example copies the <xref:System.Windows.Forms.TreeNodeCollection> from a <xref:System.Windows.Forms.TreeView> to a temporary <xref:System.Array>, and then adds the contents of the array to another <xref:System.Windows.Forms.TreeView> using the AddRange method. The <xref:System.Windows.Forms.TreeNodeCollection> from the source <xref:System.Windows.Forms.TreeView> is cleared using the <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> method. This example requires that you have two <xref:System.Windows.Forms.TreeView> controls, one with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \n  \n [!code-cpp[TreeNodeCollection_Clear#1](~/add/codesnippet/cpp/ef635824-b7a0-4e6a-bbd4-_1.cpp)]\n [!code-vb[TreeNodeCollection_Clear#1](~/add/codesnippet/visualbasic/ef635824-b7a0-4e6a-bbd4-_1.vb)]\n [!code-cs[TreeNodeCollection_Clear#1](~/add/codesnippet/csharp/ef635824-b7a0-4e6a-bbd4-_1.cs)]"
  syntax:
    content: public virtual void AddRange (System.Windows.Forms.TreeNode[] nodes);
    parameters:
    - id: nodes
      type: System.Windows.Forms.TreeNode[]
      description: "Tablica <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> obiekty reprezentujące węzły drzewa w celu dodania do kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nodes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>nodes</code>jest elementem podrzędnym innego <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Clear
  id: Clear
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Windows.Forms.TreeNodeCollection.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Usuwa wszystkie węzły drzewa z kolekcji."
  remarks: "Ta metoda umożliwia wyczyść całą kolekcję węzły drzewa w widoku drzewa.       Aby usunąć węzeł drzewa poszczególnych z kolekcji, użyj <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>       Aby dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji, użyj <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>, lub <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example copies the <xref:System.Windows.Forms.TreeNodeCollection> from a <xref:System.Windows.Forms.TreeView> to a temporary <xref:System.Array>, and then adds the contents of the array to another <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> method. The <xref:System.Windows.Forms.TreeNodeCollection> from the source <xref:System.Windows.Forms.TreeView> is cleared using the Clear method. This example requires that you have two <xref:System.Windows.Forms.TreeView> controls, one with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \n  \n [!code-cpp[TreeNodeCollection_Clear#1](~/add/codesnippet/cpp/m-system.windows.forms.t_20_1.cpp)]\n [!code-vb[TreeNodeCollection_Clear#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_20_1.vb)]\n [!code-cs[TreeNodeCollection_Clear#1](~/add/codesnippet/csharp/m-system.windows.forms.t_20_1.cs)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Windows.Forms.TreeNodeCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)
  id: Contains(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Contains(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Określa, czy węzeł drzewa jest członkiem kolekcji."
  remarks: "Ta metoda umożliwia określenie, czy <xref:System.Windows.Forms.TreeNode>jest członkiem kolekcji przed podjęciem próby wykonania operacji na <xref:System.Windows.Forms.TreeNode>.</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode> Ta metoda umożliwia upewnij się, że <xref:System.Windows.Forms.TreeNode>został dodany do lub nadal jest członkiem kolekcji.</xref:System.Windows.Forms.TreeNode>       Ilość czasu, którego ta metoda przyjmuje jest proporcjonalny do rozmiaru kolekcji węzła, więc możesz uniknąć używania go z dużych kolekcjach.       Ta metoda sprawdza, czy tylko równości odwołań. Nie możesz użyć do ustalenia, czy równoważne, ale inny węzeł jest w kolekcji.      > [!NOTE] > Jeden możliwa wymogu równości odwołań jest, że nie możesz dostosować zachowanie tej metody w przypadku pochodnych <xref:System.Windows.Forms.TreeNode>typów przez zastąpienie <xref:System.Object.Equals%2A>metody <xref:System.Windows.Forms.TreeNode>klasy.</xref:System.Windows.Forms.TreeNode> </xref:System.Object.Equals%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example determines if a specified <xref:System.Windows.Forms.TreeNode> is within a <xref:System.Windows.Forms.TreeNodeCollection>, and then enumerates the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains a <xref:System.Windows.Forms.TreeNode> named `myTreeNode2`.  \n  \n [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/cpp/049b6658-8822-4453-9f89-_1.cpp)]\n [!code-cs[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/csharp/049b6658-8822-4453-9f89-_1.cs)]\n [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/visualbasic/049b6658-8822-4453-9f89-_1.vb)]"
  syntax:
    content: public bool Contains (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Do zlokalizowania w kolekcji."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> jest członkiem kolekcji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: TreeNodeCollection.ContainsKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.ContainsKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Określa, czy kolekcja zawiera węzeł drzewa z określonym kluczem."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Porównanie kluczy nie jest rozróżniana wielkość liter. Jeśli `key` parametr jest `null` lub ciąg pusty <xref:System.Windows.Forms.TreeNodeCollection.Item%2A>zwraca `false`.</xref:System.Windows.Forms.TreeNodeCollection.Item%2A>"
  syntax:
    content: public virtual bool ContainsKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "Nazwa <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> do wyszukania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać kolekcji zawiera <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> z określonym kluczem, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.ContainsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Kopiuje całą kolekcję do istniejącej tablicy w określonej lokalizacji w tablicy."
  remarks: ''
  example:
  - "The following code example displays the number of <xref:System.Windows.Forms.TreeNode> objects in a <xref:System.Windows.Forms.TreeNodeCollection>, copies the contents of the collection to an <xref:System.Object> array, and displays a list of the tree nodes in a <xref:System.Windows.Forms.Label> control. This example requires that you have a <xref:System.Windows.Forms.TreeView> with at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeNodeCollection>, and a <xref:System.Windows.Forms.Label> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cs[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/csharp/m-system.windows.forms.t_31_1.cs)]\n [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_31_1.vb)]\n [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/cpp/m-system.windows.forms.t_31_1.cpp)]"
  syntax:
    content: public void CopyTo (Array dest, int index);
    parameters:
    - id: dest
      type: System.Array
      description: "Tablica docelowa."
    - id: index
      type: System.Int32
      description: "Indeks w tablicy docelowej, w których przechowywanie rozpoczyna się."
  overload: System.Windows.Forms.TreeNodeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Count
  id: Count
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Windows.Forms.TreeNodeCollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera całkowitą liczbę <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> obiektów w kolekcji."
  remarks: "Właściwość Count przechowuje numer <xref:System.Windows.Forms.TreeNode>przypisane do kolekcji obiektów.</xref:System.Windows.Forms.TreeNode> Wartość właściwości Liczba jako górne granice pętli służy do iterowania po kolekcji.      > [!NOTE] > Wartość indeks kolekcji jest liczony od zera indeks, musi odjąć jedną ze zmiennej pętli. Jeśli to nie jest objęty, przekroczy górną granicą kolekcji i throw <xref:System.IndexOutOfRangeException>wyjątek.</xref:System.IndexOutOfRangeException>"
  example:
  - "The following code example displays the number of <xref:System.Windows.Forms.TreeNode> objects in a <xref:System.Windows.Forms.TreeNodeCollection>, copies the contents of the collection to an <xref:System.Object> array, and displays a list of the tree nodes in a <xref:System.Windows.Forms.Label> control. This example requires that you have a <xref:System.Windows.Forms.TreeView> with at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeNodeCollection>, and a <xref:System.Windows.Forms.Label> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cs[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/csharp/p-system.windows.forms.t_28_1.cs)]\n [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_28_1.vb)]\n [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/cpp/p-system.windows.forms.t_28_1.cpp)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Całkowita liczba <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> obiektów w kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)
  id: Find(System.String,System.Boolean)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Find(String,Boolean)
  nameWithType: TreeNodeCollection.Find(String,Boolean)
  fullName: System.Windows.Forms.TreeNodeCollection.Find(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Znajduje węzły drzewa z określonym kluczem, opcjonalnie wyszukiwanie węzły podrzędne."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Porównanie kluczy nie jest rozróżniana wielkość liter. Jeśli `key` parametr jest `null` lub ciąg pusty lub nie ma żadnych dopasowań <xref:System.Windows.Forms.TreeNodeCollection.Item%2A>właściwość zwraca pustą tablicę`.` </xref:System.Windows.Forms.TreeNodeCollection.Item%2A>"
  syntax:
    content: public System.Windows.Forms.TreeNode[] Find (string key, bool searchAllChildren);
    parameters:
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa do wyszukania."
    - id: searchAllChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wyszukać węzłów podrzędnych węzłów drzewa; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Forms.TreeNode[]
      description: "Tablica <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> obiekty, których <xref:System.Windows.Forms.TreeNode.Name*>Właściwość odpowiada określonym kluczem.</xref:System.Windows.Forms.TreeNode.Name*>"
  overload: System.Windows.Forms.TreeNodeCollection.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Windows.Forms.TreeNodeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Zwraca moduł wyliczający, który może służyć do iterowania po kolekcji węzła drzewa."
  remarks: ''
  example:
  - "The following code example determines if a specified <xref:System.Windows.Forms.TreeNode> is within a <xref:System.Windows.Forms.TreeNodeCollection>, and then enumerates the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains a <xref:System.Windows.Forms.TreeNode> named `myTreeNode2`.  \n  \n [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/cpp/m-system.windows.forms.t_51_1.cpp)]\n [!code-cs[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/csharp/m-system.windows.forms.t_51_1.cs)]\n [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_51_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Reprezentujący kolekcji węzła drzewa.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Forms.TreeNodeCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)
  id: IndexOf(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOf(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Zwraca indeks węzła drzewa w kolekcji."
  remarks: "Ilość czasu, którego ta metoda przyjmuje jest proporcjonalny do rozmiaru kolekcji węzła, więc możesz uniknąć używania go z dużych kolekcjach.       Ta metoda sprawdza, czy tylko równości odwołań. Nie możesz użyć do pobierania indeks równoważne, ale inny węzeł w kolekcji.      > [!NOTE] > Jeden możliwa wymogu równości odwołań jest, że nie możesz dostosować zachowanie tej metody w przypadku pochodnych <xref:System.Windows.Forms.TreeNode>typów przez zastąpienie <xref:System.Object.Equals%2A>metody <xref:System.Windows.Forms.TreeNode>klasy.</xref:System.Windows.Forms.TreeNode> </xref:System.Object.Equals%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example determines if a specified <xref:System.Windows.Forms.TreeNode> is within a <xref:System.Windows.Forms.TreeNodeCollection>, and then enumerates the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains a <xref:System.Windows.Forms.TreeNode> named `myTreeNode2`.  \n  \n [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#2](~/add/codesnippet/cpp/m-system.windows.forms.t_27_1.cpp)]\n [!code-cs[TreeNodeCollection_Contains_GetEnumerator#2](~/add/codesnippet/csharp/m-system.windows.forms.t_27_1.cs)]\n [!code-vb[TreeNodeCollection_Contains_GetEnumerator#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_27_1.vb)]"
  syntax:
    content: public int IndexOf (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Do zlokalizowania w kolekcji."
    return:
      type: System.Int32
      description: "Liczony od zera indeks elementu w kolekcji węzła drzewa; w przeciwnym razie wartość -1."
  overload: System.Windows.Forms.TreeNodeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)
  id: IndexOfKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: IndexOfKey(String)
  nameWithType: TreeNodeCollection.IndexOfKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOfKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Zwraca indeks pierwszego wystąpienia węzła drzewa z określonym kluczem."
  remarks: "Jeśli IndexOfKey po wywołaniu kolejno ostatni zwrócony indeksu będzie sprawdzana pod kątem dopasowania klucza najpierw, a jeśli nie są niezgodne, wyszukiwanie rozpoczyna się na początku kolekcji.       <xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Porównanie kluczy nie jest rozróżniana wielkość liter. Jeśli `key` jest `null` lub ciąg pusty <xref:System.Windows.Forms.TreeNodeCollection.Item%2A>właściwość zwraca wartość -1.</xref:System.Windows.Forms.TreeNodeCollection.Item%2A>"
  syntax:
    content: public virtual int IndexOfKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa do wyszukania."
    return:
      type: System.Int32
      description: "Liczony od zera indeks pierwszego wystąpienia węzła drzewa z określonym kluczem, jeśli znaleziono; w przeciwnym razie wartość -1."
  overload: System.Windows.Forms.TreeNodeCollection.IndexOfKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tworzy węzeł drzewa określonym tekstem i wstawia go pod określonym indeksem."
  remarks: "Jeśli <xref:System.Windows.Forms.TreeView.Sorted%2A>właściwość jest ustawiona na `true`, `index` wartość parametru jest ignorowana.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Znajduje się w widoku drzewa i <xref:System.Windows.Forms.TreeView>jest ponownie sortowane.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string text);
    parameters:
    - id: index
      type: System.Int32
      description: "Lokalizacja, w kolekcji można wstawić węzła."
    - id: text
      type: System.String
      description: "Tekst wyświetlany w węźle drzewa."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Który została umieszczona w kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)
  id: Insert(System.Int32,System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,TreeNode)
  nameWithType: TreeNodeCollection.Insert(Int32,TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Wstawia istniejący węzeł drzewa w kolekcji węzła drzewa w określonej lokalizacji."
  remarks: "Jeśli <xref:System.Windows.Forms.TreeView.Sorted%2A?displayProperty=fullName>właściwość jest ustawiona na `true`, `index` wartość parametru jest ignorowana.</xref:System.Windows.Forms.TreeView.Sorted%2A?displayProperty=fullName> <xref:System.Windows.Forms.TreeNode>Znajduje się w widoku drzewa i <xref:System.Windows.Forms.TreeView>ponownie sortowane.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       Aby usunąć <xref:System.Windows.Forms.TreeNode>wcześniej dodaną, użyj <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, lub <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>      > [!NOTE] > A <xref:System.Windows.Forms.TreeNode>można przypisać do tylko jednej <xref:System.Windows.Forms.TreeView>formantu w czasie.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode> Aby dodać węzeł drzewa z formantem widoku drzewa, należy usunąć go z widoku drzewa najpierw lub sklonować go."
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property is deleted from one <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> method and added to the other <xref:System.Windows.Forms.TreeView> using the Insert method. This example requires that you have a <xref:System.Windows.Forms.Form> that contains two <xref:System.Windows.Forms.TreeView> controls and a <xref:System.Windows.Forms.Button>. The <xref:System.Windows.Forms.TreeView> controls should be named `treeView1` and `treeView2`.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/13281f08-0181-4942-9ff8-_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/13281f08-0181-4942-9ff8-_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/13281f08-0181-4942-9ff8-_1.cs)]"
  syntax:
    content: public virtual void Insert (int index, System.Windows.Forms.TreeNode node);
    parameters:
    - id: index
      type: System.Int32
      description: "Indeksowanej lokalizacji w kolekcji można wstawić węzła drzewa."
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Do wstawienia do kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> node </code> Jest aktualnie przypisana do innego <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)
  id: Insert(System.Int32,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tworzy węzeł drzewa z określony tekst i kluczem i wstawia go do kolekcji."
  remarks: "Jeśli <xref:System.Windows.Forms.TreeView.Sorted%2A>właściwość jest ustawiona na `true`, `index` wartość parametru jest ignorowana.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Znajduje się w widoku drzewa i <xref:System.Windows.Forms.TreeView>jest ponownie sortowane.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text);
    parameters:
    - id: index
      type: System.Int32
      description: "Lokalizacja, w kolekcji można wstawić węzła."
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa."
    - id: text
      type: System.String
      description: "Tekst wyświetlany w węźle drzewa."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Który została umieszczona w kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)
  id: Insert(System.Int32,System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tworzy węzeł drzewa z określonym kluczem, tekstowych i obrazów i wstawia go do kolekcji pod określonym indeksem."
  remarks: "Jeśli <xref:System.Windows.Forms.TreeView.Sorted%2A>właściwość jest ustawiona na `true`, `index` wartość parametru jest ignorowana.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Znajduje się w widoku drzewa i <xref:System.Windows.Forms.TreeView>jest ponownie sortowane.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       `imageIndex` Parametr odnosi się do obrazu we <xref:System.Windows.Forms.TreeView.ImageList%2A>Właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex);
    parameters:
    - id: index
      type: System.Int32
      description: "Lokalizacja, w kolekcji można wstawić węzła."
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa."
    - id: text
      type: System.String
      description: "Tekst wyświetlany w węźle drzewa."
    - id: imageIndex
      type: System.Int32
      description: "Indeks obrazu do wyświetlenia w węźle drzewa."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Który została umieszczona w kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)
  id: Insert(System.Int32,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tworzy węzeł drzewa z określonym kluczem, tekstowych i obrazów i wstawia go do kolekcji pod określonym indeksem."
  remarks: "Jeśli <xref:System.Windows.Forms.TreeView.Sorted%2A>właściwość jest ustawiona na `true`, `index` wartość parametru jest ignorowana.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Znajduje się w widoku drzewa i <xref:System.Windows.Forms.TreeView>jest ponownie sortowane.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       `imageKey` Parametr odnosi się do obrazu we <xref:System.Windows.Forms.TreeView.ImageList%2A>Właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey);
    parameters:
    - id: index
      type: System.Int32
      description: "Lokalizacja, w kolekcji można wstawić węzła."
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa."
    - id: text
      type: System.String
      description: "Tekst wyświetlany w węźle drzewa."
    - id: imageKey
      type: System.String
      description: "Klucz obraz wyświetlany w węźle drzewa."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Który została umieszczona w kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  id: Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tworzy węzeł drzewa z określonym kluczem, tekst i obrazy i wstawia go do kolekcji pod określonym indeksem."
  remarks: "Jeśli <xref:System.Windows.Forms.TreeView.Sorted%2A>właściwość jest ustawiona na `true`, `index` wartość parametru jest ignorowana.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Znajduje się w widoku drzewa i <xref:System.Windows.Forms.TreeView>jest ponownie sortowane.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       `imageIndex` Parametr odnosi się do obrazu we <xref:System.Windows.Forms.TreeView.ImageList%2A>Właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>       `selectedimageIndex` Parametr odnosi się do obrazu we <xref:System.Windows.Forms.TreeView.StateImageList%2A>Właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.StateImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex, int selectedImageIndex);
    parameters:
    - id: index
      type: System.Int32
      description: "Lokalizacja, w kolekcji można wstawić węzła."
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa."
    - id: text
      type: System.String
      description: "Tekst wyświetlany w węźle drzewa."
    - id: imageIndex
      type: System.Int32
      description: "Indeks obrazu do wyświetlenia w węźle drzewa."
    - id: selectedImageIndex
      type: System.Int32
      description: "Indeks obrazu do wyświetlenia w węźle drzewa, gdy jest on w stanie zaznaczenia."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Który została umieszczona w kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)
  id: Insert(System.Int32,System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Tworzy węzeł drzewa z określonym kluczem, tekst i obrazy i wstawia go do kolekcji pod określonym indeksem."
  remarks: "Jeśli <xref:System.Windows.Forms.TreeView.Sorted%2A>właściwość jest ustawiona na `true`, `index` wartość parametru jest ignorowana.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Znajduje się w widoku drzewa i <xref:System.Windows.Forms.TreeView>jest ponownie sortowane.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Można także dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       `imageKey` Parametr odnosi się do obrazu we <xref:System.Windows.Forms.TreeView.ImageList%2A>Właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.ImageList%2A>       `selectedimageKey` Parametr odnosi się do obrazu we <xref:System.Windows.Forms.TreeView.StateImageList%2A>Właściwości elementu nadrzędnego <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.StateImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey, string selectedImageKey);
    parameters:
    - id: index
      type: System.Int32
      description: "Lokalizacja, w kolekcji można wstawić węzła."
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa."
    - id: text
      type: System.String
      description: "Tekst wyświetlany w węźle drzewa."
    - id: imageKey
      type: System.String
      description: "Klucz obraz wyświetlany w węźle drzewa."
    - id: selectedImageKey
      type: System.String
      description: "Klucz obraz do wyświetlenia w węźle drzewa, gdy jest on w stanie zaznaczenia."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Który została umieszczona w kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: TreeNodeCollection.IsReadOnly
  fullName: System.Windows.Forms.TreeNodeCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu."
  remarks: ''
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property is deleted from one <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> method and added to the other <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> that contains two <xref:System.Windows.Forms.TreeView> controls and a <xref:System.Windows.Forms.Button>. The <xref:System.Windows.Forms.TreeView> controls should be named `treeView1` and `treeView2`.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_284_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/p-system.windows.forms.t_284_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/p-system.windows.forms.t_284_1.cs)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli kolekcja jest tylko do odczytu. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera lub ustawia <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> w określonym indeksowane lokalizacji w kolekcji."
  remarks: "Aby przypisać <xref:System.Windows.Forms.TreeNode>obiektów do określonej lokalizacji lub pobrać je z <xref:System.Windows.Forms.TreeNodeCollection>, możesz odwoływać się do obiektu kolekcji o wartości określonego indeksu.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> Wartość indeksu <xref:System.Windows.Forms.TreeNodeCollection>jest liczony od zera indeks.</xref:System.Windows.Forms.TreeNodeCollection>"
  example:
  - "The following code example removes the first <xref:System.Windows.Forms.TreeNode> from a <xref:System.Windows.Forms.TreeView> if its <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=fullName> property is set to \"Node0\". When a <xref:System.Windows.Forms.Button> is clicked, the first <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeView> is deleted using the <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> method. This example requires that you have created a <xref:System.Windows.Forms.TreeView> and a <xref:System.Windows.Forms.Button> on a <xref:System.Windows.Forms.Form>. The first <xref:System.Windows.Forms.TreeNode> in your <xref:System.Windows.Forms.TreeView> should have a text property of \"Node0.\"  \n  \n [!code-vb[TreeNodeCollection#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_118_1.vb)]\n [!code-cpp[TreeNodeCollection#2](~/add/codesnippet/cpp/p-system.windows.forms.t_118_1.cpp)]\n [!code-cs[TreeNodeCollection#2](~/add/codesnippet/csharp/p-system.windows.forms.t_118_1.cs)]"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Lokalizacja indeksowanego <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> w kolekcji."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> w określonym indeksowane lokalizacji w kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code> Wartość jest mniejsza od 0 albo jest większa niż liczba węzłów drzewa w kolekcji."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: TreeNodeCollection.Item(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(String)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera węzeł drzewa z określonym kluczem z kolekcji."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Porównanie kluczy nie jest rozróżniana wielkość liter. Jeśli `key` parametr jest `null` lub pusty ciąg, właściwość elementu zwraca `null`."
  syntax:
    content: public virtual System.Windows.Forms.TreeNode this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "Nazwa <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> można pobrać z kolekcji."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> z określonym kluczem."
  overload: System.Windows.Forms.TreeNodeCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)
  id: Remove(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Remove(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Usuwa węzła drzewa w kolekcji węzła drzewa."
  remarks: "Gdy <xref:System.Windows.Forms.TreeNode>zostanie usunięty z kolekcji węzła drzewa, wszystkie kolejne drzew węzły są przenieść w górę o jedną pozycję w kolekcji.</xref:System.Windows.Forms.TreeNode>       Można również usunąć <xref:System.Windows.Forms.TreeNode>dodanego wcześniej przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNode>      > [!NOTE] > Kolekcji wyliczania i usuwania węzłów nie jest obsługiwane.       Aby dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji, użyj <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>, lub <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property is deleted from one <xref:System.Windows.Forms.TreeView> using the Remove method and added to the other <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> that contains two <xref:System.Windows.Forms.TreeView> controls and a <xref:System.Windows.Forms.Button>. The <xref:System.Windows.Forms.TreeView> controls should be named `treeView1` and `treeView2`.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_35_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/m-system.windows.forms.t_35_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/m-system.windows.forms.t_35_1.cs)]"
  syntax:
    content: public void Remove (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Do usunięcia."
  overload: System.Windows.Forms.TreeNodeCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Usuwa węzła drzewa w kolekcji węzła drzewa od określonego indeksu."
  remarks: "Gdy <xref:System.Windows.Forms.TreeNode>zostanie usunięty z kolekcji węzła drzewa, wszystkie kolejne drzew węzły są przenieść w górę o jedną pozycję w kolekcji.</xref:System.Windows.Forms.TreeNode>       Można również usunąć <xref:System.Windows.Forms.TreeNode>dodanego wcześniej przy użyciu <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>lub <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>      > [!NOTE] > Kolekcji wyliczania i usuwania węzłów nie jest obsługiwane.       Aby dodać nowe <xref:System.Windows.Forms.TreeNode>obiekty do kolekcji, użyj <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>, lub <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>metody.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example removes the first <xref:System.Windows.Forms.TreeNode> from a <xref:System.Windows.Forms.TreeView> if its <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=fullName> property is set to \"Node0\". When a <xref:System.Windows.Forms.Button> is clicked, the first <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeView> is deleted using the RemoveAt method. This example requires that you have created a <xref:System.Windows.Forms.TreeView> and a <xref:System.Windows.Forms.Button> on a <xref:System.Windows.Forms.Form>. The first <xref:System.Windows.Forms.TreeNode> in your <xref:System.Windows.Forms.TreeView> should have a text property of \"Node0.\"  \n  \n [!code-vb[TreeNodeCollection#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_69_1.vb)]\n [!code-cpp[TreeNodeCollection#2](~/add/codesnippet/cpp/m-system.windows.forms.t_69_1.cpp)]\n [!code-cs[TreeNodeCollection#2](~/add/codesnippet/csharp/m-system.windows.forms.t_69_1.cs)]"
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indeks <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> do usunięcia."
  overload: System.Windows.Forms.TreeNodeCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)
  id: RemoveByKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: RemoveByKey(String)
  nameWithType: TreeNodeCollection.RemoveByKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveByKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Usuwa węzła drzewa z określonym kluczem z kolekcji."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Właściwość odpowiada kluczowi <xref:System.Windows.Forms.TreeNode>w <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>"
  syntax:
    content: public virtual void RemoveByKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "Nazwa węzła drzewa, aby usunąć z kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.RemoveByKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TreeNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera wartość wskazującą, czy dostęp do kolekcji jest zsynchronizowany (wielowątkowość)."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>we wszystkich przypadkach."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TreeNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera obiekt, który może służyć do synchronizujący dostęp do kolekcji."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Obiekt, który może służyć do synchronizujący dostęp do <xref href=&quot;System.Windows.Forms.TreeNodeCollection&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Dodaje obiekt do końca kolekcji węzła drzewa."
  remarks: "Jeśli `node` nie jest <xref:System.Windows.Forms.TreeNodeCollection>metody IList.Add będzie używać ciąg zwracany przez <xref:System.Windows.Forms.TreeNode.ToString%2A>metodę <xref:System.Windows.Forms.TreeNode>klasy.</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.ToString%2A> </xref:System.Windows.Forms.TreeNodeCollection>"
  syntax:
    content: int IList.Add (object node);
    parameters:
    - id: node
      type: System.Object
      description: "Obiekt do dodania do kolekcji węzła drzewa."
    return:
      type: System.Int32
      description: "Wartość indeksu <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> który został dodany do kolekcji węzła drzewa."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<code>node</code>obecnie jest przypisany do innego <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref> formantu."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>node</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Określa, czy węzeł drzewa jest członkiem kolekcji."
  remarks: "Jeśli `node` nie jest <xref:System.Windows.Forms.TreeNode>, metoda IList.Contains zwraca `false`.</xref:System.Windows.Forms.TreeNode> W związku z tym nie można przekazać do określenia, czy kolekcja zawiera węzeł, który ma wartość ciągu jako ciąg jego <xref:System.Windows.Forms.TreeNode.Text%2A>Właściwości.</xref:System.Windows.Forms.TreeNode.Text%2A>"
  syntax:
    content: bool IList.Contains (object node);
    parameters:
    - id: node
      type: System.Object
      description: "Obiekt, który można znaleźć w kolekcji."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> node </code> jest członkiem kolekcji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Zwraca indeks węzła drzewa w kolekcji."
  remarks: "Jeśli `node` nie jest <xref:System.Windows.Forms.TreeNode>, metoda IList.IndexOf zwraca -1.</xref:System.Windows.Forms.TreeNode> W związku z tym nie można przekazać w ciągu można znaleźć węzła, który ma wartość ciągu jako jego <xref:System.Windows.Forms.TreeNode.Text%2A>Właściwości.</xref:System.Windows.Forms.TreeNode.Text%2A>"
  syntax:
    content: int IList.IndexOf (object node);
    parameters:
    - id: node
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Do zlokalizowania w kolekcji."
    return:
      type: System.Int32
      description: "Liczony od zera indeks elementu w kolekcji węzła drzewa; w przeciwnym razie wartość -1."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Wstawia istniejący węzeł drzewa w kolekcji węzła drzewa w określonej lokalizacji."
  remarks: "Jeśli <xref:System.Windows.Forms.TreeView.Sorted%2A>właściwość jest ustawiona na `true`, `index` parametru jest ignorowana.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Znajduje się w widoku drzewa i <xref:System.Web.UI.WebControls.TreeView>jest ponownie sortowane.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: void IList.Insert (int index, object node);
    parameters:
    - id: index
      type: System.Int32
      description: "Indeksowanej lokalizacji w kolekcji można wstawić węzła drzewa."
    - id: node
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Do wstawienia do kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>node</code>obecnie jest przypisany do innego <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>.       -or-       <code>node</code> is not a <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TreeNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera wartość wskazującą, czy w kolekcji węzła drzewa o stałym rozmiarze."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>we wszystkich przypadkach."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TreeNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera lub ustawia pod określonym indeksem w kolekcji węzła drzewa."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks, w którym można pobrać lub ustawić element."
    return:
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Pod określonym indeksem <xref href=&quot;System.Windows.Forms.TreeNodeCollection&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Podana wartość nie jest <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Usuwa węzła drzewa w kolekcji węzła drzewa."
  remarks: "Nie można przekazać w ciągu można usunąć węzła, który ma wartość ciągu jako jego <xref:System.Windows.Forms.TreeNode.Text%2A>Właściwości.</xref:System.Windows.Forms.TreeNode.Text%2A>       Gdy <xref:System.Windows.Forms.TreeNode>zostanie usunięty z kolekcji węzła drzewa, wszystkie kolejne drzew węzły są przenieść w górę o jedną pozycję w kolekcji.</xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: void IList.Remove (object node);
    parameters:
    - id: node
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Do usunięcia z kolekcji."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String)
  nameWithType: TreeNodeCollection.Add(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String)
- uid: System.Windows.Forms.TreeNode
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(TreeNode)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: TreeNodeCollection.Add(String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: AddRange(TreeNode[])
  nameWithType: TreeNodeCollection.AddRange(TreeNode[])
  fullName: System.Windows.Forms.TreeNodeCollection.AddRange(TreeNode[])
- uid: System.Windows.Forms.TreeNode[]
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode[]
  spec.csharp:
  - uid: System.Windows.Forms.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.TreeNodeCollection.Clear
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Windows.Forms.TreeNodeCollection.Clear()
- uid: System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Contains(TreeNode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: ContainsKey(String)
  nameWithType: TreeNodeCollection.ContainsKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.ContainsKey(String)
- uid: System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Forms.TreeNodeCollection.Count
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Windows.Forms.TreeNodeCollection.Count
- uid: System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Find(String,Boolean)
  nameWithType: TreeNodeCollection.Find(String,Boolean)
  fullName: System.Windows.Forms.TreeNodeCollection.Find(String,Boolean)
- uid: System.Windows.Forms.TreeNodeCollection.GetEnumerator
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Windows.Forms.TreeNodeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOf(TreeNode)
- uid: System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOfKey(String)
  nameWithType: TreeNodeCollection.IndexOfKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOfKey(String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,TreeNode)
  nameWithType: TreeNodeCollection.Insert(Int32,TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,TreeNode)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.IsReadOnly
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TreeNodeCollection.IsReadOnly
  fullName: System.Windows.Forms.TreeNodeCollection.IsReadOnly
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Item(String)
  nameWithType: TreeNodeCollection.Item(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(String)
- uid: System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Remove(TreeNode)
- uid: System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveAt(Int32)
- uid: System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveByKey(String)
  nameWithType: TreeNodeCollection.RemoveByKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveByKey(String)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TreeNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TreeNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TreeNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TreeNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Forms.TreeNodeCollection.Add*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeCollection.Add
- uid: System.Windows.Forms.TreeNodeCollection.AddRange*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: AddRange
  nameWithType: TreeNodeCollection.AddRange
- uid: System.Windows.Forms.TreeNodeCollection.Clear*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Clear
  nameWithType: TreeNodeCollection.Clear
- uid: System.Windows.Forms.TreeNodeCollection.Contains*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeCollection.Contains
- uid: System.Windows.Forms.TreeNodeCollection.ContainsKey*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: ContainsKey
  nameWithType: TreeNodeCollection.ContainsKey
- uid: System.Windows.Forms.TreeNodeCollection.CopyTo*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeCollection.CopyTo
- uid: System.Windows.Forms.TreeNodeCollection.Count*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
- uid: System.Windows.Forms.TreeNodeCollection.Find*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Find
  nameWithType: TreeNodeCollection.Find
- uid: System.Windows.Forms.TreeNodeCollection.GetEnumerator*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TreeNodeCollection.GetEnumerator
- uid: System.Windows.Forms.TreeNodeCollection.IndexOf*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeCollection.IndexOf
- uid: System.Windows.Forms.TreeNodeCollection.IndexOfKey*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOfKey
  nameWithType: TreeNodeCollection.IndexOfKey
- uid: System.Windows.Forms.TreeNodeCollection.Insert*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert
  nameWithType: TreeNodeCollection.Insert
- uid: System.Windows.Forms.TreeNodeCollection.IsReadOnly*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TreeNodeCollection.IsReadOnly
- uid: System.Windows.Forms.TreeNodeCollection.Item*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeCollection.Item
- uid: System.Windows.Forms.TreeNodeCollection.Remove*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeCollection.Remove
- uid: System.Windows.Forms.TreeNodeCollection.RemoveAt*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeCollection.RemoveAt
- uid: System.Windows.Forms.TreeNodeCollection.RemoveByKey*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveByKey
  nameWithType: TreeNodeCollection.RemoveByKey
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TreeNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TreeNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TreeNodeCollection.System.Collections.IList.Add
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TreeNodeCollection.System.Collections.IList.Contains
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TreeNodeCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TreeNodeCollection.System.Collections.IList.Insert
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TreeNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TreeNodeCollection.System.Collections.IList.Item
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TreeNodeCollection.System.Collections.IList.Remove
