### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.FileDialog
  id: FileDialog
  children:
  - Microsoft.Win32.FileDialog.#ctor
  - Microsoft.Win32.FileDialog.AddExtension
  - Microsoft.Win32.FileDialog.CheckFileExists
  - Microsoft.Win32.FileDialog.CheckPathExists
  - Microsoft.Win32.FileDialog.CustomPlaces
  - Microsoft.Win32.FileDialog.DefaultExt
  - Microsoft.Win32.FileDialog.DereferenceLinks
  - Microsoft.Win32.FileDialog.FileName
  - Microsoft.Win32.FileDialog.FileNames
  - Microsoft.Win32.FileDialog.FileOk
  - Microsoft.Win32.FileDialog.Filter
  - Microsoft.Win32.FileDialog.FilterIndex
  - Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - Microsoft.Win32.FileDialog.InitialDirectory
  - Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  - Microsoft.Win32.FileDialog.Options
  - Microsoft.Win32.FileDialog.Reset
  - Microsoft.Win32.FileDialog.RestoreDirectory
  - Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  - Microsoft.Win32.FileDialog.SafeFileName
  - Microsoft.Win32.FileDialog.SafeFileNames
  - Microsoft.Win32.FileDialog.Title
  - Microsoft.Win32.FileDialog.ToString
  - Microsoft.Win32.FileDialog.ValidateNames
  langs:
  - csharp
  name: FileDialog
  nameWithType: FileDialog
  fullName: Microsoft.Win32.FileDialog
  type: Class
  summary: "Abstrakcyjna klasa podstawowa, która obejmuje funkcje, które są wspólne dla okien dialogowych pliku, w tym <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> i <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>."
  syntax:
    content: 'public abstract class FileDialog : Microsoft.Win32.CommonDialog'
  inheritance:
  - System.Object
  - Microsoft.Win32.CommonDialog
  implements: []
  inheritedMembers:
  - Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog
  - Microsoft.Win32.CommonDialog.ShowDialog
  - Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)
  - Microsoft.Win32.CommonDialog.Tag
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileDialog()
  nameWithType: FileDialog.FileDialog()
  fullName: Microsoft.Win32.FileDialog.FileDialog()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;Microsoft.Win32.FileDialog&quot;> </xref> klasy."
  syntax:
    content: protected FileDialog ();
    parameters: []
  overload: Microsoft.Win32.FileDialog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.AddExtension
  id: AddExtension
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: Microsoft.Win32.FileDialog.AddExtension
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera lub ustawia wartość wskazującą, czy okno dialogowe pliku automatycznie dodaje rozszerzenie nazwy pliku, jeśli użytkownik pomija rozszerzenie."
  syntax:
    content: public bool AddExtension { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli rozszerzenia są dodawane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.AddExtension*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CheckFileExists
  id: CheckFileExists
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: Microsoft.Win32.FileDialog.CheckFileExists
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera lub ustawia wartość wskazującą, czy okno dialogowe pliku wyświetlane jest ostrzeżenie, jeśli użytkownik Określa nazwę pliku, który nie istnieje."
  remarks: "<xref:Microsoft.Win32.OpenFileDialog>Klasy ustawia tę właściwość na `true` w jego konstruktora.</xref:Microsoft.Win32.OpenFileDialog>"
  syntax:
    content: public virtual bool CheckFileExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nie są wyświetlane ostrzeżenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Domyślnie ta klasa podstawowa jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.CheckFileExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CheckPathExists
  id: CheckPathExists
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: Microsoft.Win32.FileDialog.CheckPathExists
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera lub ustawia wartość określającą, czy ostrzeżenia są wyświetlane, gdy użytkownik wpisze nieprawidłowe ścieżki i nazwy pliku."
  syntax:
    content: public bool CheckPathExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli nie są wyświetlane ostrzeżenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.CheckPathExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CustomPlaces
  id: CustomPlaces
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: Microsoft.Win32.FileDialog.CustomPlaces
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera lub ustawia listę niestandardowe lokalizacje dla pliku okien dialogowych."
  remarks: "Począwszy od [!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)], Otwórz i Zapisz plik okien dialogowych **Ulubione łącza** panelu po lewej stronie okna dialogowego, który umożliwia użytkownikowi nawigację do innej lokalizacji. Łącza te są nazywane niestandardowe lokalizacje. Ta właściwość umożliwia modyfikowanie listy, który jest wyświetlany, gdy aplikacja używa okno dialogowe pliku."
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace> CustomPlaces { get; set; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}
      description: "Lista niestandardowe lokalizacje."
  overload: Microsoft.Win32.FileDialog.CustomPlaces*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.DefaultExt
  id: DefaultExt
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: Microsoft.Win32.FileDialog.DefaultExt
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera lub ustawia wartość, która określa domyślny ciąg rozszerzenia, aby filtrować listę plików, które są wyświetlane."
  remarks: "Ciąg rozszerzenia może zawierać kropki na początku. Na przykład można ustawić dla właściwości DefaultExt &quot;txt&quot;, aby wybrać wszystkie pliki tekstowe.       Domyślnie <xref:Microsoft.Win32.FileDialog.AddExtension%2A>Właściwości spróbuje określić rozszerzenia, aby filtrować listę plików wyświetlanych z <xref:Microsoft.Win32.FileDialog.Filter%2A>Właściwości.</xref:Microsoft.Win32.FileDialog.Filter%2A> </xref:Microsoft.Win32.FileDialog.AddExtension%2A> Jeśli rozszerzenie nie może zostać określona <xref:Microsoft.Win32.FileDialog.Filter%2A>w zamian zostanie użyta właściwość DefaultExt.</xref:Microsoft.Win32.FileDialog.Filter%2A>"
  example:
  - "The following example shows how to create an <xref:Microsoft.Win32.OpenFileDialog> that contains a default file name and extension type.  \n  \n [!code-cs[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/csharp/DialogBoxesOverviewSnippets.CSharp/Window1.xaml.cs#openfiledialogboxcodebehind)]\n [!code-vb[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/visualbasic/dialogboxesoverviewsnippets/window1.xaml.vb#openfiledialogboxcodebehind)]"
  syntax:
    content: public string DefaultExt { get; set; }
    return:
      type: System.String
      description: "Domyślny ciąg rozszerzenia. Wartość domyślna to <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.DefaultExt*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.DereferenceLinks
  id: DereferenceLinks
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: Microsoft.Win32.FileDialog.DereferenceLinks
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera lub ustawia wartość wskazującą, czy okno dialogowe pliku Zwraca lokalizację pliku odwołuje się skrót lub lokalizację pliku skrótu (lnk)."
  syntax:
    content: public bool DereferenceLinks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby powrócić do lokalizacji, do których odwołuje się; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> zwróciły lokalizacji skrótu. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.DereferenceLinks*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileName
  id: FileName
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: Microsoft.Win32.FileDialog.FileName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera lub ustawia ciąg zawierający pełną ścieżkę pliku zaznaczonego w oknie dialogowym pliku."
  remarks: "Jeśli wybrano więcej niż jedną nazwę pliku (długość <xref:Microsoft.Win32.FileDialog.FileNames%2A>jest większa niż jeden), a następnie nazwa pliku zawiera pierwszą nazwę wybranego pliku.</xref:Microsoft.Win32.FileDialog.FileNames%2A> Jeśli wybrano opcję Brak nazwy pliku, ta właściwość zawiera <xref:System.String.Empty>zamiast `null`.</xref:System.String.Empty>"
  syntax:
    content: public string FileName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>oznacza to pełna ścieżka pliku zaznaczonego w oknie dialogowym pliku.</xref:System.String> Wartość domyślna to <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.FileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileNames
  id: FileNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: Microsoft.Win32.FileDialog.FileNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera tablicę, która zawiera jedną nazwę pliku dla każdego wybranego pliku."
  syntax:
    content: public string[] FileNames { get; }
    return:
      type: System.String[]
      description: "Tablica <xref:System.String>zawierający jedną nazwę pliku dla każdego wybranego pliku.</xref:System.String> Wartość domyślna to tablicy o jeden element, którego wartość jest <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.FileNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileOk
  id: FileOk
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: Microsoft.Win32.FileDialog.FileOk
  type: Event
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Występuje, gdy użytkownik wybierze nazwa pliku albo klikając **Otwórz** przycisku <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> lub **zapisać** przycisku <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>."
  remarks: "FileOk jest wywoływane po wybraniu przez użytkownika nazwa pliku, ale przed zamknięciem okna dialogowego, który umożliwia przetwarzanie zaznaczenie. W razie potrzeby można anulować wybór użytkownika przez ustawienie <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>Właściwość <xref:System.ComponentModel.CancelEventArgs>argument `true`.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler FileOk;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Filter
  id: Filter
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: Microsoft.Win32.FileDialog.Filter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera lub ustawia ciąg filtru, który określa, jakie typy plików są wyświetlane z poziomu <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> lub <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>."
  remarks: "If Filter is either `null` or <xref:System.String>, all files are displayed, and folders are always displayed.  \n  \n You can specify a subset of file types to be displayed by setting the Filter property. Each file type can represent a specific type of file, such as the following:  \n  \n-   Word Documents (*.doc)  \n  \n-   Excel Worksheets (*.xls)  \n  \n-   PowerPoint Presentations (*.ppt)  \n  \n Alternatively, a file type can represent a group of related file types, such as the following:  \n  \n-   Office Files (*.doc, \\*.xls, \\*.ppt)  \n  \n-   All Files (*.\\*)  \n  \n To specify a subset of the types of files that are displayed, you set the Filter property with a string value (the *filter string*) that specifies one or more types of files to filter by. The following shows the expected format of the filter string:  \n  \n `FileType1[[|FileType2]...[|FileTypeN]]`  \n  \n You use the following format to describe each file type:  \n  \n `Label|Extension1[[;Extension2]...[;ExtensionN]]`  \n  \n The *Label* part is a human-readable string value that describes the file type, such as the following:  \n  \n-   \"Word Documents\"  \n  \n-   \"Excel Worksheets\"  \n  \n-   \"PowerPoint Presentations\"  \n  \n-   \"Office Files\"  \n  \n-   \"All Files\"  \n  \n Each file type must be described by at least one *Extension*. If more than one *Extension* is used, each *Extension* must be separated by a semicolon (\";\"). For example:  \n  \n-   \"*.doc\"  \n  \n-   \"*.xls;\"  \n  \n-   \"*.ppt\"  \n  \n-   \"*.doc;\\*.xls;\\*.ppt\"  \n  \n-   \"*.\\*\"  \n  \n The following are complete examples of valid Filter string values:  \n  \n-   `Word Documents|*.doc`  \n  \n-   `Excel Worksheets|*.xls`  \n  \n-   `PowerPoint Presentations|*.ppt`  \n  \n-   `Office Files|*.doc;*.xls;*.ppt`  \n  \n-   `All Files|*.*`  \n  \n-   `Word Documents|*.doc|Excel Worksheets|*.xls|PowerPoint Presentations|*.ppt|Office Files|*.doc;*.xls;*.ppt|All Files|*.*`  \n  \n Each file type that is included in the filter is added as a separate item to the **Files of type:** drop-down list in the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog>, as shown in the following figure.  \n  \n ![Using the FileDialog.Filter in the Open Dialog Box](~/add/media/filedialogfilterfigure1.png \"Using the FileDialog.Filter in the Open Dialog Box\")  \n  \n The user can choose a file type from this list to filter by. By default, the first item in the list (for example, the first file type) is selected when the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> is displayed. To specify that another file type to be selected, you set the <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> property before showing the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> (by calling <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>)."
  example:
  - "The following examples demonstrate several types of filter strings that can be set by using the Filter property.  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString1](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring1)]\n[!code-vb[FileDialogFilterSnippets#FilterString1](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring1)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString2](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring2)]\n[!code-vb[FileDialogFilterSnippets#FilterString2](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring2)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString3](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring3)]\n[!code-vb[FileDialogFilterSnippets#FilterString3](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring3)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString4](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring4)]\n[!code-vb[FileDialogFilterSnippets#FilterString4](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring4)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString5](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring5)]\n[!code-vb[FileDialogFilterSnippets#FilterString5](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring5)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString6](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring6)]\n[!code-vb[FileDialogFilterSnippets#FilterString6](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring6)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString7](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring7)]\n[!code-vb[FileDialogFilterSnippets#FilterString7](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring7)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString8](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring8)]\n[!code-vb[FileDialogFilterSnippets#FilterString8](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring8)]"
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>zawierający filtr.</xref:System.String> Wartość domyślna to <xref:System.String>, co oznacza, że jest stosowany filtr nie i wszystkich typów plików są wyświetlane.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ciąg filtru jest nieprawidłowy."
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FilterIndex
  id: FilterIndex
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: Microsoft.Win32.FileDialog.FilterIndex
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera lub ustawia indeks wybranego w oknie dialogowym pliku filtru."
  remarks: "Ten indeks jest oparta na 1, nie 0 na podstawie, ze względu na wymagania dotyczące zgodności z podstawową [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]."
  syntax:
    content: public int FilterIndex { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Czyli indeks wybranego filtru.</xref:System.Int32> Wartość domyślna to 1."
  overload: Microsoft.Win32.FileDialog.FilterIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: Microsoft.Win32.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Definiuje wspólne pliku okna dialogowego haku procedury, która zostanie zastąpiona Dodawanie typowych funkcji do okna dialogowego pliku."
  syntax:
    content: protected override IntPtr HookProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "Uchwytu okna dla [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] okna dialogowego."
    - id: msg
      type: System.Int32
      description: "Komunikat do przetworzenia przez [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] okna dialogowego."
    - id: wParam
      type: System.IntPtr
      description: "Parametry akcji okna dialogowego."
    - id: lParam
      type: System.IntPtr
      description: "Parametry akcji okna dialogowego."
    return:
      type: System.IntPtr
      description: "Zwraca <xref:System.IntPtr>informując o powodzeniu; w przeciwnym razie wartość niezerową wartość jest zwracana do wskazania błędu.</xref:System.IntPtr>"
  overload: Microsoft.Win32.FileDialog.HookProc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.InitialDirectory
  id: InitialDirectory
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: Microsoft.Win32.FileDialog.InitialDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera lub ustawia początkowy katalog, który jest wyświetlany przez okno dialogowe pliku."
  remarks: "Jeśli nie ma żadnych zestaw początkowy katalog, ta właściwość będzie zawierać <xref:System.String>zamiast pusty ciąg.</xref:System.String>"
  syntax:
    content: public string InitialDirectory { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>zawierający początkowy katalog.</xref:System.String> Wartość domyślna to <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.InitialDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  id: OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: Microsoft.Win32.FileDialog.OnFileOk(CancelEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Zgłasza <xref href=&quot;Microsoft.Win32.FileDialog.FileOk&quot;> </xref> zdarzeń."
  remarks: "Zgłasza OnFileOk <xref:Microsoft.Win32.FileDialog.FileOk>zdarzeń.</xref:Microsoft.Win32.FileDialog.FileOk>       Typ, który pochodzi z <xref:Microsoft.Win32.FileDialog>może zastąpić OnFileOk.</xref:Microsoft.Win32.FileDialog> Przesłoniętej metody należy wywołać OnFileOk dla klasy podstawowej, jeśli <xref:Microsoft.Win32.FileDialog.FileOk>musi zostać wywołane.</xref:Microsoft.Win32.FileDialog.FileOk>"
  syntax:
    content: protected void OnFileOk (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A <xref:System.ComponentModel.CancelEventArgs>zawierający dane zdarzenia.</xref:System.ComponentModel.CancelEventArgs>"
  overload: Microsoft.Win32.FileDialog.OnFileOk*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Options
  id: Options
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Options
  nameWithType: FileDialog.Options
  fullName: Microsoft.Win32.FileDialog.Options
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] wspólnej flagi okna dialogowego pliku, które są używane przez plik okien dialogowych do zainicjowania."
  remarks: "Ta wartość jest używana do wyświetlania okna dialogowego pliku z bieżącego zestawu wartości właściwości. Rzeczywiste opcje są widoczne jako właściwości określonych okien dialogowych, ale nie opisano jako wartości flag publiczny na tym poziomie umożliwia głównie wewnętrzny do użycia podczas implementowania klas pochodnych <xref:Microsoft.Win32.OpenFileDialog>i <xref:Microsoft.Win32.SaveFileDialog>.</xref:Microsoft.Win32.SaveFileDialog> </xref:Microsoft.Win32.OpenFileDialog> używa tej właściwości"
  syntax:
    content: protected int Options { get; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>zawierający [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] wspólnej flagi okna dialogowego pliku, które są używane przez plik okien dialogowych do zainicjowania.</xref:System.Int32>"
  overload: Microsoft.Win32.FileDialog.Options*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Reset
  id: Reset
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: Microsoft.Win32.FileDialog.Reset()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ustawia wszystkich właściwości okna dialogowego pliku z powrotem do ich wartości początkowe."
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: Microsoft.Win32.FileDialog.Reset*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.RestoreDirectory
  id: RestoreDirectory
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: Microsoft.Win32.FileDialog.RestoreDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ta właściwość nie jest zaimplementowana."
  syntax:
    content: public bool RestoreDirectory { get; set; }
    return:
      type: System.Boolean
      description: "Nie zaimplementowano."
  overload: Microsoft.Win32.FileDialog.RestoreDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  id: RunDialog(System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: Microsoft.Win32.FileDialog.RunDialog(IntPtr)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "<xref:Microsoft.Win32.CommonDialog.RunDialog*>jest wywoływana w celu wyświetlenia okna dialogowego pliku w klasie pochodnej, takich jak <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> i <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>.</xref:Microsoft.Win32.CommonDialog.RunDialog*>"
  remarks: "Po pewnym czasie wyświetlone okno dialogowe przypisano oknem właściciela, która jest określana przez `hwndOwner` parametru."
  syntax:
    content: protected override bool RunDialog (IntPtr hwndOwner);
    parameters:
    - id: hwndOwner
      type: System.IntPtr
      description: "Dojście do okna, który jest właścicielem okna dialogowego."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>gdy użytkownik kliknie **OK** przycisk okna dialogowego wyświetlanego (na przykład <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref>, <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.RunDialog*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.SafeFileName
  id: SafeFileName
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: Microsoft.Win32.FileDialog.SafeFileName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera ciąg, który zawiera tylko nazwa pliku wybranego pliku."
  remarks: "Ta wartość jest <xref:Microsoft.Win32.FileDialog.FileName%2A>z usunięte wszystkie informacje o ścieżce.</xref:Microsoft.Win32.FileDialog.FileName%2A> Usunięcie ścieżki powoduje, że wartość odpowiednie do użycia w aplikacjach częściowej relacji zaufania, ponieważ nie dopuszcza aplikacji z odnajdywanie informacji o lokalnego systemu plików.       Jeśli wybrano więcej niż jedną nazwę pliku (długość <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A>jest większa niż jeden), a następnie ta właściwość zawiera tylko pierwsze nazwę wybranego pliku.</xref:Microsoft.Win32.FileDialog.SafeFileNames%2A>       Zobacz [przekazywania pliku bezpieczne od próbki XBAP](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c)."
  syntax:
    content: public string SafeFileName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>zawierający tylko nazwę pliku dla wybranego pliku.</xref:System.String> Wartość domyślna to <xref:System.String>, która jest również wartość po albo nie wybrano żadnego pliku lub katalogu jest zaznaczone.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.SafeFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.SafeFileNames
  id: SafeFileNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: Microsoft.Win32.FileDialog.SafeFileNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera tablicę, która zawiera jedną nazwę pliku bezpieczne dla każdego wybranego pliku."
  remarks: "Zobacz <xref:Microsoft.Win32.FileDialog.SafeFileName%2A>.</xref:Microsoft.Win32.FileDialog.SafeFileName%2A>"
  syntax:
    content: public string[] SafeFileNames { get; }
    return:
      type: System.String[]
      description: "Tablica <xref:System.String>zawierający jedną nazwę pliku bezpieczne dla każdego wybranego pliku.</xref:System.String> Wartość domyślna to tablicy o jeden element, którego wartość jest <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.SafeFileNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Title
  id: Title
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Title
  nameWithType: FileDialog.Title
  fullName: Microsoft.Win32.FileDialog.Title
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera lub ustawia tekst wyświetlany w pasku tytułu okna dialogowego pliku."
  remarks: "Jeśli nazwa ma wartość null lub <xref:System.String>, używany jest domyślny, zlokalizowaną wartość, taką jak &quot;Zapisz jako&quot; lub &quot;Otworzyć&quot;.</xref:System.String>"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>czyli tekst wyświetlany w pasku tytułu okna dialogowego pliku.</xref:System.String> Wartość domyślna to <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.Title*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.ToString
  id: ToString
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: Microsoft.Win32.FileDialog.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Zwraca ciąg reprezentujący okno dialogowe pliku."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>reprezentację <xref href=&quot;Microsoft.Win32.FileDialog&quot;> </xref> zawiera pełną nazwę ścieżki do plików z jednego <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref>, <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.ToString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.ValidateNames
  id: ValidateNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: Microsoft.Win32.FileDialog.ValidateNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Pobiera lub ustawia wartość wskazującą, czy okno dialogowe akceptuje tylko prawidłowe [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] nazwy plików."
  syntax:
    content: public bool ValidateNames { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ostrzeżenia będą wyświetlane, gdy podano nieprawidłową nazwę pliku; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.ValidateNames*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.CommonDialog
  isExternal: false
  name: Microsoft.Win32.CommonDialog
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.Win32.FileDialog.#ctor
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileDialog()
  nameWithType: FileDialog.FileDialog()
  fullName: Microsoft.Win32.FileDialog.FileDialog()
- uid: Microsoft.Win32.FileDialog.AddExtension
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: Microsoft.Win32.FileDialog.AddExtension
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.FileDialog.CheckFileExists
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: Microsoft.Win32.FileDialog.CheckFileExists
- uid: Microsoft.Win32.FileDialog.CheckPathExists
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: Microsoft.Win32.FileDialog.CheckPathExists
- uid: Microsoft.Win32.FileDialog.CustomPlaces
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: Microsoft.Win32.FileDialog.CustomPlaces
- uid: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<FileDialogCustomPlace>
  nameWithType: IList<FileDialogCustomPlace>
  fullName: System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<Microsoft.Win32.FileDialogCustomPlace>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Win32.FileDialogCustomPlace
    name: FileDialogCustomPlace
    nameWithType: FileDialogCustomPlace
    fullName: FileDialogCustomPlace
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Win32.FileDialog.DefaultExt
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: Microsoft.Win32.FileDialog.DefaultExt
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Win32.FileDialog.DereferenceLinks
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: Microsoft.Win32.FileDialog.DereferenceLinks
- uid: Microsoft.Win32.FileDialog.FileName
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: Microsoft.Win32.FileDialog.FileName
- uid: Microsoft.Win32.FileDialog.FileNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: Microsoft.Win32.FileDialog.FileNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Win32.FileDialog.FileOk
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: Microsoft.Win32.FileDialog.FileOk
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: Microsoft.Win32.FileDialog.Filter
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: Microsoft.Win32.FileDialog.Filter
- uid: Microsoft.Win32.FileDialog.FilterIndex
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: Microsoft.Win32.FileDialog.FilterIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: Microsoft.Win32.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.Win32.FileDialog.InitialDirectory
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: Microsoft.Win32.FileDialog.InitialDirectory
- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: Microsoft.Win32.FileDialog.OnFileOk(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: Microsoft.Win32.FileDialog.Options
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
  fullName: Microsoft.Win32.FileDialog.Options
- uid: Microsoft.Win32.FileDialog.Reset
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: Microsoft.Win32.FileDialog.Reset()
- uid: Microsoft.Win32.FileDialog.RestoreDirectory
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: Microsoft.Win32.FileDialog.RestoreDirectory
- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: Microsoft.Win32.FileDialog.RunDialog(IntPtr)
- uid: Microsoft.Win32.FileDialog.SafeFileName
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: Microsoft.Win32.FileDialog.SafeFileName
- uid: Microsoft.Win32.FileDialog.SafeFileNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: Microsoft.Win32.FileDialog.SafeFileNames
- uid: Microsoft.Win32.FileDialog.Title
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
  fullName: Microsoft.Win32.FileDialog.Title
- uid: Microsoft.Win32.FileDialog.ToString
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: Microsoft.Win32.FileDialog.ToString()
- uid: Microsoft.Win32.FileDialog.ValidateNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: Microsoft.Win32.FileDialog.ValidateNames
- uid: Microsoft.Win32.FileDialog.#ctor*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileDialog
  nameWithType: FileDialog.FileDialog
- uid: Microsoft.Win32.FileDialog.AddExtension*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
- uid: Microsoft.Win32.FileDialog.CheckFileExists*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
- uid: Microsoft.Win32.FileDialog.CheckPathExists*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
- uid: Microsoft.Win32.FileDialog.CustomPlaces*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
- uid: Microsoft.Win32.FileDialog.DefaultExt*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
- uid: Microsoft.Win32.FileDialog.DereferenceLinks*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
- uid: Microsoft.Win32.FileDialog.FileName*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
- uid: Microsoft.Win32.FileDialog.FileNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
- uid: Microsoft.Win32.FileDialog.Filter*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
- uid: Microsoft.Win32.FileDialog.FilterIndex*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
- uid: Microsoft.Win32.FileDialog.HookProc*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: HookProc
  nameWithType: FileDialog.HookProc
- uid: Microsoft.Win32.FileDialog.InitialDirectory*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
- uid: Microsoft.Win32.FileDialog.OnFileOk*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: OnFileOk
  nameWithType: FileDialog.OnFileOk
- uid: Microsoft.Win32.FileDialog.Options*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
- uid: Microsoft.Win32.FileDialog.Reset*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Reset
  nameWithType: FileDialog.Reset
- uid: Microsoft.Win32.FileDialog.RestoreDirectory*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
- uid: Microsoft.Win32.FileDialog.RunDialog*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RunDialog
  nameWithType: FileDialog.RunDialog
- uid: Microsoft.Win32.FileDialog.SafeFileName*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
- uid: Microsoft.Win32.FileDialog.SafeFileNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
- uid: Microsoft.Win32.FileDialog.Title*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
- uid: Microsoft.Win32.FileDialog.ToString*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ToString
  nameWithType: FileDialog.ToString
- uid: Microsoft.Win32.FileDialog.ValidateNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
