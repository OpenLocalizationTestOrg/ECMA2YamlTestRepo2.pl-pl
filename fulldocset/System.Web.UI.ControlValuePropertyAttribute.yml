### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlValuePropertyAttribute
  id: ControlValuePropertyAttribute
  children:
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  - System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  - System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  - System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  - System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  - System.Web.UI.ControlValuePropertyAttribute.Name
  langs:
  - csharp
  name: ControlValuePropertyAttribute
  nameWithType: ControlValuePropertyAttribute
  fullName: System.Web.UI.ControlValuePropertyAttribute
  type: Class
  summary: "Określa domyślną właściwość formantu który <xref href=&quot;System.Web.UI.WebControls.ControlParameter&quot;> </xref> obiektu wiąże w czasie wykonywania. Ta klasa nie może być dziedziczona."
  remarks: "Podczas definiowania <xref:System.Web.UI.WebControls.ControlParameter>obiektu, należy zwykle powiązanie właściwości formantu parametrem ustawiając zarówno <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>i <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>Właściwości.</xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> </xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> </xref:System.Web.UI.WebControls.ControlParameter> Jeśli <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>właściwość nie jest ustawiona, zostanie użyta domyślna właściwość.</xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> Atrybut ControlValuePropertyAttribute jest stosowany do formantu, aby określić domyślną właściwość który <xref:System.Web.UI.WebControls.ControlParameter>obiektu wiąże w czasie wykonywania.</xref:System.Web.UI.WebControls.ControlParameter>       Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybutów](~/add/includes/ajax-current-ext-md.md).       Aby uzyskać listę początkowe wartości właściwości dla wystąpienia klasy ControlValuePropertyAttribute, zobacz <xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A>konstruktora.</xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A>"
  example:
  - "The following code example demonstrates how to apply a ControlValuePropertyAttribute attribute that specifies a default property and value to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlv_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/t-system.web.ui.controlv_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class ControlValuePropertyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref> przy użyciu nazwy określonej właściwości."
  remarks: "Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.Web.UI.ControlValuePropertyAttribute>przy użyciu nazwy określonej właściwości.</xref:System.Web.UI.ControlValuePropertyAttribute> W poniższej tabeli przedstawiono wartości początkowej właściwości dla wystąpienia <xref:System.Web.UI.ControlValuePropertyAttribute>klasy.</xref:System.Web.UI.ControlValuePropertyAttribute>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>| Wartość `name` parametru. |</xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute that specifies a default property to a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.ControlValuePropertyAttribute> object that represents the attribute.  \n  \n [!code-vb[ControlValuePropertyAttributeCtor1Param#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlv_1.vb)]\n [!code-cs[ControlValuePropertyAttributeCtor1Param#1](~/add/codesnippet/csharp/m-system.web.ui.controlv_1.cs)]"
  syntax:
    content: public ControlValuePropertyAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "Domyślna właściwość formantu."
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String,Object)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref> przy użyciu określonej nazwy i domyślne wartości właściwości."
  remarks: "Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.Web.UI.ControlValuePropertyAttribute>przy użyciu określonej nazwy i domyślne wartości właściwości.</xref:System.Web.UI.ControlValuePropertyAttribute> W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.ControlValuePropertyAttribute>klasy.</xref:System.Web.UI.ControlValuePropertyAttribute>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>| Wartość `name` parametru. |   | <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>| Wartość `defaultValue` parametru. |</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  example:
  - "The following code example demonstrates how to apply a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute that specifies a default property and value to a custom control. This constructor is called internally by ASP.NET to create a <xref:System.Web.UI.ControlValuePropertyAttribute> object that represents the attribute.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/9280d55d-6a5b-458b-bf81-_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/9280d55d-6a5b-458b-bf81-_1.cs)]"
  syntax:
    content: public ControlValuePropertyAttribute (string name, object defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "Domyślna właściwość formantu."
    - id: defaultValue
      type: System.Object
      description: "Wartość domyślna jako właściwość domyślną."
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  id: '#ctor(System.String,System.Type,System.String)'
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: ControlValuePropertyAttribute(String,Type,String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref> przy użyciu określonej nazwy i domyślne wartości właściwości. Wartością domyślną jest również konwertowane na określony typ danych."
  remarks: "Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.Web.UI.ControlValuePropertyAttribute>przy użyciu określonej nazwy i domyślne wartości właściwości.</xref:System.Web.UI.ControlValuePropertyAttribute> Ta wersja konstruktora również próbuje przekonwertować na typ danych określony przez wartość domyślna `type` parametru. Jeśli nie można przekonwertować wartości domyślne, <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>nie ustawiono właściwości.</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.ControlValuePropertyAttribute>klasy.</xref:System.Web.UI.ControlValuePropertyAttribute>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>| Wartość `name` parametru. |   | <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>| Wartość `defaultValue` parametru, jeśli można przekonwertować na typ danych określony przez wartość `type` parametru. |</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  syntax:
    content: public ControlValuePropertyAttribute (string name, Type type, string defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "Domyślna właściwość formantu."
    - id: type
      type: System.Type
      description: "<xref:System.Type>Konwertowane jest wartością domyślną.</xref:System.Type>"
    - id: defaultValue
      type: System.String
      description: "Wartość domyślna jako właściwość domyślną."
  overload: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  id: DefaultValue
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
  fullName: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera wartość domyślną dla domyślnej właściwości formantu."
  remarks: "Gdy właściwość określona przez <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>nie ustawiono właściwości, Właściwość DefaultValue umożliwia określenie wartości domyślnej właściwości.</xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>"
  example:
  - "The following code example demonstrates how to set the DefaultValue property by applying a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlv_0_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.controlv_0_1.cs)]"
  syntax:
    content: public object DefaultValue { get; }
    return:
      type: System.Object
      description: "Wartość domyślna dla domyślnej właściwości formantu."
  overload: System.Web.UI.ControlValuePropertyAttribute.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ControlValuePropertyAttribute.Equals(Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Określa, czy bieżące wystąpienie klasy <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref> obiekt jest taki sam jak określony obiekt."
  remarks: "Użyj metody Equals ustalenie, czy bieżące wystąpienie klasy <xref:System.Web.UI.ControlValuePropertyAttribute>obiekt jest taki sam jak określony obiekt.</xref:System.Web.UI.ControlValuePropertyAttribute> Dla obiektów równe musi spełniać następujące kryteria: 1.  Obiekt znajdujący się w `obj` parametr musi być <xref:System.Web.UI.ControlValuePropertyAttribute>obiektu.</xref:System.Web.UI.ControlValuePropertyAttribute>      2.  <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>i <xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>Właściwości oba obiekty muszą być takie same.</xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A> </xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>      > [!NOTE] > Ta metoda jest używana głównie przez deweloperów formantu."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>Do porównania z tym wystąpieniem.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli obiekt zawarte w <code> obj </code> parametru jest taki sam, jak bieżące wystąpienie klasy <xref href=&quot;System.Web.UI.ControlValuePropertyAttribute&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlValuePropertyAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  id: GetHashCode
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ControlValuePropertyAttribute.GetHashCode()
  fullName: System.Web.UI.ControlValuePropertyAttribute.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zwraca wartość skrótu dla tego wystąpienia."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32-bitowej podpisanej liczby całkowitej wartość skrótu."
  overload: System.Web.UI.ControlValuePropertyAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlValuePropertyAttribute.Name
  id: Name
  parent: System.Web.UI.ControlValuePropertyAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
  fullName: System.Web.UI.ControlValuePropertyAttribute.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera domyślną właściwość dla formantu."
  remarks: "Gdy <xref:System.Web.UI.WebControls.ControlParameter>obiektu jest zdefiniowana bez jego <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>ustawić właściwość, należy użyć właściwości Name ustalenie, który jest powiązany z właściwością domyślną <xref:System.Web.UI.WebControls.ControlParameter>obiektu w czasie wykonywania.</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> </xref:System.Web.UI.WebControls.ControlParameter>"
  example:
  - "The following code example demonstrates how to set the Name property by applying a <xref:System.Web.UI.ControlValuePropertyAttribute> attribute to a custom control.  \n  \n [!code-vb[ControlValuePropertyAttribute#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlv_1_1.vb)]\n [!code-cs[ControlValuePropertyAttribute#1](~/add/codesnippet/csharp/p-system.web.ui.controlv_1_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Domyślna właściwość formantu."
  overload: System.Web.UI.ControlValuePropertyAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String,Object)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute(String,Type,String)
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
  fullName: System.Web.UI.ControlValuePropertyAttribute.ControlValuePropertyAttribute(String,Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
  fullName: System.Web.UI.ControlValuePropertyAttribute.DefaultValue
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: ControlValuePropertyAttribute.Equals(Object)
  fullName: System.Web.UI.ControlValuePropertyAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: ControlValuePropertyAttribute.GetHashCode()
  fullName: System.Web.UI.ControlValuePropertyAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ControlValuePropertyAttribute.Name
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
  fullName: System.Web.UI.ControlValuePropertyAttribute.Name
- uid: System.Web.UI.ControlValuePropertyAttribute.#ctor*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: ControlValuePropertyAttribute
  nameWithType: ControlValuePropertyAttribute.ControlValuePropertyAttribute
- uid: System.Web.UI.ControlValuePropertyAttribute.DefaultValue*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ControlValuePropertyAttribute.DefaultValue
- uid: System.Web.UI.ControlValuePropertyAttribute.Equals*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Equals
  nameWithType: ControlValuePropertyAttribute.Equals
- uid: System.Web.UI.ControlValuePropertyAttribute.GetHashCode*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: ControlValuePropertyAttribute.GetHashCode
- uid: System.Web.UI.ControlValuePropertyAttribute.Name*
  parent: System.Web.UI.ControlValuePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ControlValuePropertyAttribute.Name
