### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapExtension
  id: SoapExtension
  children:
  - System.Web.Services.Protocols.SoapExtension.#ctor
  - System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)
  - System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)
  - System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)
  - System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)
  - System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)
  langs:
  - csharp
  name: SoapExtension
  nameWithType: SoapExtension
  fullName: System.Web.Services.Protocols.SoapExtension
  type: Class
  summary: "Klasa podstawowa dla rozszerzeń protokołu SOAP usług XML sieci Web utworzony za pomocą programu ASP.NET."
  remarks: "ASP.NET umożliwia infrastrukturze związanych z protokołu SOAP ma zostać utworzony za pomocą mechanizmu rozszerzalności. Architektura rozszerzenia ASP.NET SOAP dotyczy tego rozszerzenia, które można sprawdzić lub zmodyfikować komunikat etapami określonych w komunikacie przetwarzania po stronie klienta lub serwera.       Rozszerzenia protokołu SOAP ASP.NET pochodzi od klasy SoapExtension. <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>i <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>metody udostępniają alternatywnych rozwiązań dla inicjowania rozszerzenie SOAP w celu zwiększenia wydajności.</xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> </xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>jest centralnym większości rozszerzenia protokołu SOAP, jak metoda jest wywoływana na każdym etapie zdefiniowane w <xref:System.Web.Services.Protocols.SoapMessageStage>, dzięki czemu rozszerzenie SOAP wykonać żądaną zachowanie określonego rozszerzenia protokołu SOAP.</xref:System.Web.Services.Protocols.SoapMessageStage></xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> Dla rozszerzeń protokołu SOAP, które należy zmodyfikować SOAP żądanie lub odpowiedź SOAP <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>umożliwia odbieranie proponowany danych być przesyłane przez sieć.</xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>"
  example:
  - "The following `TraceExtension` SOAP extension outputs the SOAP request and SOAP response to a specified file when applied to an XML Web service method. If the following SOAP extension is installed to run with an XML Web service, the ASPNET user account must have permission to write to the directory in which the log file is written.  \n  \n [!code-cs[Classic SoapExtension Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_23_1.cs)]\n [!code-cpp[Classic SoapExtension Example#1](~/add/codesnippet/cpp/t-system.web.services.pr_23_1.cpp)]\n [!code-vb[Classic SoapExtension Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_23_1.vb)]"
  syntax:
    content: public abstract class SoapExtension
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapExtension.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapExtension
  langs:
  - csharp
  name: SoapExtension()
  nameWithType: SoapExtension.SoapExtension()
  fullName: System.Web.Services.Protocols.SoapExtension.SoapExtension()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Services.Protocols.SoapExtension&quot;> </xref> klasy."
  syntax:
    content: protected SoapExtension ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapExtension.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)
  id: ChainStream(System.IO.Stream)
  parent: System.Web.Services.Protocols.SoapExtension
  langs:
  - csharp
  name: ChainStream(Stream)
  nameWithType: SoapExtension.ChainStream(Stream)
  fullName: System.Web.Services.Protocols.SoapExtension.ChainStream(Stream)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "W przypadku przesłonięcia w klasie pochodnej, zezwala na dostęp rozszerzenie SOAP w buforze pamięci zawierające SOAP żądania lub odpowiedzi."
  remarks: "ChainStream gwarantuje, że rozszerzenia protokołu SOAP z najwyższym priorytetem można modyfikować danych rzeczywistych najbliżej komunikatu protokołu SOAP, wysyłane lub zwrócony przez sieć.       Rozszerzenia protokołu SOAP należy zapisać odwołań <xref:System.IO.Stream>przekazany ChainStream i <xref:System.IO.Stream>zwrócony z ChainStream.</xref:System.IO.Stream> </xref:System.IO.Stream> Jeśli rozszerzenie jest skonfigurowany do uruchamiania za pomocą metody usług XML sieci Web <xref:System.IO.Stream>przekazany ChainStream zawiera seryjnych żądania SOAP w <xref:System.Web.Services.Protocols.SoapMessageStage><xref:System.Web.Services.Protocols.SoapMessageStage>.</xref:System.Web.Services.Protocols.SoapMessageStage></xref:System.Web.Services.Protocols.SoapMessageStage> </xref:System.IO.Stream> Similarily <xref:System.IO.Stream>Odwołanie zwrócone z ChainStream jest zapisywany w przypadku serializacji występuje i w związku z tym zawiera seryjnych odpowiedź SOAP <xref:System.Web.Services.Protocols.SoapMessageStage><xref:System.Web.Services.Protocols.SoapMessageStage>.</xref:System.Web.Services.Protocols.SoapMessageStage></xref:System.Web.Services.Protocols.SoapMessageStage> </xref:System.IO.Stream>"
  example:
  - "The following example saves both the <xref:System.IO.Stream> passed into ChainStream and the <xref:System.IO.Stream> returned from ChainStream in the member variables `oldStream` and `newStream`, respectively.  \n  \n [!code-cpp[Classic SoapExtension.ChainStream Example#1](~/add/codesnippet/cpp/m-system.web.services.pr_14_1.cpp)]\n [!code-cs[Classic SoapExtension.ChainStream Example#1](~/add/codesnippet/csharp/m-system.web.services.pr_14_1.cs)]\n [!code-vb[Classic SoapExtension.ChainStream Example#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_14_1.vb)]"
  syntax:
    content: public virtual System.IO.Stream ChainStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Bufor pamięci zawierający SOAP żądania lub odpowiedzi."
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>reprezentujący nowy bufora pamięci, można zmodyfikować to rozszerzenie SOAP.</xref:System.IO.Stream>"
  overload: System.Web.Services.Protocols.SoapExtension.ChainStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)
  id: GetInitializer(System.Type)
  parent: System.Web.Services.Protocols.SoapExtension
  langs:
  - csharp
  name: GetInitializer(Type)
  nameWithType: SoapExtension.GetInitializer(Type)
  fullName: System.Web.Services.Protocols.SoapExtension.GetInitializer(Type)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP zainicjować danych specyficznych dla klasy implementującej usługi XML sieci Web w jednej godziny spadek wydajności."
  remarks: "The overload of <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> that gets called by ASP.NET depends on how the SOAP extension was specified. There are two methods for specifying a SOAP extension:  \n  \n-   Apply a custom attribute, deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, to the individual XML Web service method.  \n  \n-   Add a reference in either the web.config or app.config configuration files.  \n  \n If you add a reference to one of the configuration files, the SOAP extension runs for all XML Web services within the scope of that configuration file. When specifying, a SOAP extension by referencing a configuration file, ASP.NET invokes the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> overload that passes in a <xref:System.Type>. When specifying an extension by applying a custom attribute, ASP.NET invokes the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> that passes in a <xref:System.Web.Services.Protocols.LogicalMethodInfo> and a <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.  \n  \n For details on adding SOAP extensions to a configuration file, see [&#91;\\<topic://cpconconfigurationoptionsforaspnetwebservices>&#93;](http://msdn.microsoft.com/en-us/1f0d71bc-8faa-4730-b500-2a6c7b5d4f6b)."
  example:
  - "The following code demonstrates how one can save SOAP extension specific data on a per XML Web service basis. If the SOAP extension is configured using a configuration file instead of an attribute, the SOAP extension can store data for each class to which the SOAP extension is applied. This example saves the name of a file in which to log the SOAP messages sent to and from the XML Web service method based on the name of the class implementing the XML Web service into the cache. This code example is part of a full code example for a TraceExtension SOAP extension that can be found in the <xref:System.Web.Services.Protocols.SoapExtension> class overview.  \n  \n [!code-vb[SoapExtension.GetInitializer-Type#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_2_1.vb)]\n [!code-cs[SoapExtension.GetInitializer-Type#1](~/add/codesnippet/csharp/m-system.web.services.pr_2_1.cs)]\n [!code-cpp[SoapExtension.GetInitializer-Type#1](~/add/codesnippet/cpp/m-system.web.services.pr_2_1.cpp)]"
  syntax:
    content: public abstract object GetInitializer (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Typ klasy implementacja usługi XML sieci Web, do którego stosowana jest rozszerzenie SOAP."
    return:
      type: System.Object
      description: "<xref:System.Object>Rozszerzenie SOAP inicjujące do buforowania.</xref:System.Object>"
  overload: System.Web.Services.Protocols.SoapExtension.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)
  parent: System.Web.Services.Protocols.SoapExtension
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo,SoapExtensionAttribute)
  nameWithType: SoapExtension.GetInitializer(LogicalMethodInfo,SoapExtensionAttribute)
  fullName: System.Web.Services.Protocols.SoapExtension.GetInitializer(LogicalMethodInfo,SoapExtensionAttribute)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP zainicjować danych specyficznych dla metody usługi XML sieci Web przy użyciu atrybutem stosowanym do metod usługi XML sieci Web w jednej godziny spadek wydajności."
  remarks: "Jeśli rozszerzenie jest konfigurowana przy użyciu konfiguracji pliku Zobacz przeciążenia GetInitializer, który akceptuje <xref:System.Type>.</xref:System.Type>       Rozszerzenie SOAP ma trzy możliwości Inicjuj dane i wszystkie mają różnych celów: - konstruktora klasy — Konstruktor klasy jest wywoływana za każdym razem rozszerzenie SOAP zostanie uruchomiony i jest zwykle używane do zainicjowania zmiennych Członkowskich.      -GetInitializer - GetInitializer, jest jednak wywołać tylko raz, po raz pierwszy SOAP żądań sieci Web XML usług — metoda. Jeśli atrybut niestandardowy jest stosowane do metody usług XML sieci Web, wywoływana jest metoda GetInitializer. Dzięki temu rozszerzenie SOAP przejrzeć <xref:System.Web.Services.Protocols.LogicalMethodInfo>prototypu informacji lub uzyskać dostępu do danych specyficznych dla rozszerzenia przekazany przez klasy wywodzące się z <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.</xref:System.Web.Services.Protocols.SoapExtensionAttribute> metody usługi sieci Web XML</xref:System.Web.Services.Protocols.LogicalMethodInfo> Zwracana wartość jest buforowany przez platformę ASP.NET i przekazany do kolejnych <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>metody.</xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> W związku z tym inicjowania w GetInitializer jest hermetyzowany zasadniczo w trafienie jednorazowe wydajności.      - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>- <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>jest wywoływana za każdym razem, gdy żądania SOAP dotyczące metody usług XML sieci Web, ale ma więcej możliwości niż konstruktora klasy, w tym <xref:System.Object>zainicjowany w GetInitializer są przekazywane do niego</xref:System.Object> </xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> </xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>"
  example:
  - "The following code demonstrates how you can obtain SOAP extension-specific data passed in using a class that derives from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, and then cache that data in GetInitializer. This code example is part of a full code example for a `TraceExtension` SOAP extension that can be found in the <xref:System.Web.Services.Protocols.SoapExtension> class overview. This code example relies on a `TraceExtensionAttribute` being passed into the `attribute` parameter. In the full code example, `TraceExtensionAttribute` derives from <xref:System.Web.Services.Protocols.SoapExtensionAttribute> and adds a `Filename` property, which is what GetInitializer stores in the cache.  \n  \n [!code-cpp[Classic SoapExtension.GetInitializer Example#1](~/add/codesnippet/cpp/3e28a43a-5fe0-43d3-bd26-_1.cpp)]\n [!code-cs[Classic SoapExtension.GetInitializer Example#1](~/add/codesnippet/csharp/3e28a43a-5fe0-43d3-bd26-_1.cs)]\n [!code-vb[Classic SoapExtension.GetInitializer Example#1](~/add/codesnippet/visualbasic/3e28a43a-5fe0-43d3-bd26-_1.vb)]"
  syntax:
    content: public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo, System.Web.Services.Protocols.SoapExtensionAttribute attribute);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> reprezentujący prototypu funkcji określonych dla metody usługi XML sieci Web, do którego stosowana jest rozszerzenie SOAP."
    - id: attribute
      type: System.Web.Services.Protocols.SoapExtensionAttribute
      description: "<xref href=&quot;System.Web.Services.Protocols.SoapExtensionAttribute&quot;> </xref> Zastosować do metody usług XML sieci Web."
    return:
      type: System.Object
      description: "<xref:System.Object>Rozszerzenie SOAP inicjujące do buforowania.</xref:System.Object>"
  overload: System.Web.Services.Protocols.SoapExtension.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.SoapExtension
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: SoapExtension.Initialize(Object)
  fullName: System.Web.Services.Protocols.SoapExtension.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP się przy użyciu danych w pamięci podręcznej zainicjować <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer*>metody.</xref:System.Web.Services.Protocols.SoapExtension.GetInitializer*>"
  remarks: "A SOAP extension has three opportunities to initialize data and they all have different purposes:  \n  \n-   Class constructor - The class constructor is called every time a SOAP extension is instantiated and is typically used to initialize member variables.  \n  \n-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>, however, is called just once, the first time a SOAP request is made to an XML Web services method. If a custom attribute is applied to the XML Web service method, the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method is invoked. This allows the SOAP extension to interrogate the <xref:System.Web.Services.Protocols.LogicalMethodInfo> of an XML Web service method for prototype information or to access extension-specific data passed by a class deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>. The return value is cached by ASP.NET and passed into subsequent Initialize methods. Therefore, initialization done in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> is encapsulated essentially into a one-time performance hit.  \n  \n-   Initialize - Initialize is called every time a SOAP request is made to an XML Web service method, but has an advantage over the class constructor, in that the <xref:System.Object> initialized in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> is passed to it.  \n  \n-  \n  \n> [!NOTE]\n>  You can also add a SOAP extension without deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute> by using the [\\<soapExtensionTypes> Element](http://msdn.microsoft.com/en-us/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) in a configuration file. For details, see [\\<soapExtensionTypes> Element](http://msdn.microsoft.com/en-us/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) and [SOAP Message Modification Using SOAP Extensions](http://msdn.microsoft.com/en-us/97d81ace-95e7-4acc-ae39-9692a0021e95).  \n  \n-"
  example:
  - "The following example demonstrates how you can use the data cached during the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method.  \n  \n [!code-cpp[Classic SoapExtension.Initialize Example#1](~/add/codesnippet/cpp/m-system.web.services.pr_10_1.cpp)]\n [!code-cs[Classic SoapExtension.Initialize Example#1](~/add/codesnippet/csharp/m-system.web.services.pr_10_1.cs)]\n [!code-vb[Classic SoapExtension.Initialize Example#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_10_1.vb)]"
  syntax:
    content: public abstract void Initialize (object initializer);
    parameters:
    - id: initializer
      type: System.Object
      description: "<xref:System.Object>Zwrócony z <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer*>przez platformę ASP.NET w pamięci podręcznej.</xref:System.Web.Services.Protocols.SoapExtension.GetInitializer*> </xref:System.Object>"
  overload: System.Web.Services.Protocols.SoapExtension.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)
  id: ProcessMessage(System.Web.Services.Protocols.SoapMessage)
  parent: System.Web.Services.Protocols.SoapExtension
  langs:
  - csharp
  name: ProcessMessage(SoapMessage)
  nameWithType: SoapExtension.ProcessMessage(SoapMessage)
  fullName: System.Web.Services.Protocols.SoapExtension.ProcessMessage(SoapMessage)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "W przypadku przesłonięcia w klasie pochodnej, umożliwia rozszerzenie SOAP otrzymać <xref href=&quot;System.Web.Services.Protocols.SoapMessage&quot;> </xref> proces w każdej <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;> </xref>."
  remarks: "ProcessMessage jest wywoływana przez cały <xref:System.Web.Services.Protocols.SoapMessageStage>etapy dla rozszerzenia SOAP, które dotyczą zarówno usługi XML sieci Web utworzony za pomocą programu ASP.NET i klientów.</xref:System.Web.Services.Protocols.SoapMessageStage> W każdej <xref:System.Web.Services.Protocols.SoapMessageStage>, wystąpienia klasy wywodzące się z <xref:System.Web.Services.Protocols.SoapMessage>jest przekazywana do ProcessMessage.</xref:System.Web.Services.Protocols.SoapMessage> </xref:System.Web.Services.Protocols.SoapMessageStage> Jeśli rozszerzenie jest uruchomiona na kliencie usługi XML sieci Web, a następnie <xref:System.Web.Services.Protocols.SoapClientMessage>obiekt jest przekazany do ProcessMessage; w przeciwnym razie <xref:System.Web.Services.Protocols.SoapServerMessage>cali przekazanego obiektu</xref:System.Web.Services.Protocols.SoapServerMessage> </xref:System.Web.Services.Protocols.SoapClientMessage>"
  example:
  - "The following example is the ProcessMessage portion of a SOAP extension that logs SOAP requests and SOAP responses. By logging the <xref:System.Web.Services.Protocols.SoapMessage> at the <xref:System.Web.Services.Protocols.SoapMessageStage><xref:System.Web.Services.Protocols.SoapMessageStage>, the SOAP extension accesses the <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> to be sent over the wire. If the SOAP extension is applied to an XML Web service method created using ASP.NET, then the <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> contains the SOAP response from the XML Web service method. If the SOAP extension is applied to an XML Web service client, the <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> contains the SOAP request to an XML Web service method.  \n  \n Classic SoapExtension.ProcessMessage Example#1"
  syntax:
    content: public abstract void ProcessMessage (System.Web.Services.Protocols.SoapMessage message);
    parameters:
    - id: message
      type: System.Web.Services.Protocols.SoapMessage
      description: "<xref href=&quot;System.Web.Services.Protocols.SoapMessage&quot;> </xref> Do procesu."
  overload: System.Web.Services.Protocols.SoapExtension.ProcessMessage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.SoapExtension.#ctor
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: SoapExtension()
  nameWithType: SoapExtension.SoapExtension()
  fullName: System.Web.Services.Protocols.SoapExtension.SoapExtension()
- uid: System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: ChainStream(Stream)
  nameWithType: SoapExtension.ChainStream(Stream)
  fullName: System.Web.Services.Protocols.SoapExtension.ChainStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: GetInitializer(Type)
  nameWithType: SoapExtension.GetInitializer(Type)
  fullName: System.Web.Services.Protocols.SoapExtension.GetInitializer(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: GetInitializer(LogicalMethodInfo,SoapExtensionAttribute)
  nameWithType: SoapExtension.GetInitializer(LogicalMethodInfo,SoapExtensionAttribute)
  fullName: System.Web.Services.Protocols.SoapExtension.GetInitializer(LogicalMethodInfo,SoapExtensionAttribute)
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.SoapExtensionAttribute
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapExtensionAttribute
  nameWithType: SoapExtensionAttribute
  fullName: System.Web.Services.Protocols.SoapExtensionAttribute
- uid: System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: Initialize(Object)
  nameWithType: SoapExtension.Initialize(Object)
  fullName: System.Web.Services.Protocols.SoapExtension.Initialize(Object)
- uid: System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: ProcessMessage(SoapMessage)
  nameWithType: SoapExtension.ProcessMessage(SoapMessage)
  fullName: System.Web.Services.Protocols.SoapExtension.ProcessMessage(SoapMessage)
- uid: System.Web.Services.Protocols.SoapMessage
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapMessage
  nameWithType: SoapMessage
  fullName: System.Web.Services.Protocols.SoapMessage
- uid: System.Web.Services.Protocols.SoapExtension.#ctor*
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: SoapExtension
  nameWithType: SoapExtension.SoapExtension
- uid: System.Web.Services.Protocols.SoapExtension.ChainStream*
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: ChainStream
  nameWithType: SoapExtension.ChainStream
- uid: System.Web.Services.Protocols.SoapExtension.GetInitializer*
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: GetInitializer
  nameWithType: SoapExtension.GetInitializer
- uid: System.Web.Services.Protocols.SoapExtension.Initialize*
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: Initialize
  nameWithType: SoapExtension.Initialize
- uid: System.Web.Services.Protocols.SoapExtension.ProcessMessage*
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: ProcessMessage
  nameWithType: SoapExtension.ProcessMessage
