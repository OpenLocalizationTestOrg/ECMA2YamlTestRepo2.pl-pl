### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SerializationInfo
  id: SerializationInfo
  children:
  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  - System.Runtime.Serialization.SerializationInfo.AssemblyName
  - System.Runtime.Serialization.SerializationInfo.FullTypeName
  - System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetEnumerator
  - System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  - System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  - System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  - System.Runtime.Serialization.SerializationInfo.MemberCount
  - System.Runtime.Serialization.SerializationInfo.ObjectType
  - System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  langs:
  - csharp
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
  type: Class
  summary: "Przechowuje wszystkie dane potrzebne do serializacji lub deserializacji obiektu. Ta klasa nie może być dziedziczona."
  remarks: "Ta klasa jest używana przez obiekty z zachowaniem niestandardowej serializacji. <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>Metodę na jedną <xref:System.Runtime.Serialization.ISerializable>lub <xref:System.Runtime.Serialization.ISerializationSurrogate>wypełnia magazyn SerializationInfo o nazwę, typ i wartość każdego z nich chce serializować informacji.</xref:System.Runtime.Serialization.ISerializationSurrogate> </xref:System.Runtime.Serialization.ISerializable> </xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> Podczas deserializacji odpowiednią funkcję może wyodrębnić te informacje.       Obiekty zostaną dodane do magazynu SerializationInfo serializacji czasu za pomocą <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A>metod i wyodrębnione ze sklepem SerializationInfo deserializacji za pomocą <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A>metod.</xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> </xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A>       Aby uzyskać więcej informacji na temat dostosowywania serializacji, zobacz [serializacji niestandardowe](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the SerializationInfo for custom serialization and deserialization of various values.  \n  \n [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_18_1.cpp)]\n [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_18_1.cs)]\n [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_18_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SerializationInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SerializationInfo(Type,IFormatterConverter)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> klasy."
  remarks: "<xref:System.Runtime.Serialization.IFormatterConverter>Przekazany jako `converter` parametru konwertuje dane z jej reprezentacji wewnętrznej na formularzu żądanego użytkownika.</xref:System.Runtime.Serialization.IFormatterConverter> Wewnętrzny reprezentację danych w ramach <xref:System.Runtime.Serialization.SerializationInfo>zależy od elementu formatującego, który utworzył go.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Obiektu do zserializowania.</xref:System.Type>"
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
      description: "<xref href=&quot;System.Runtime.Serialization.IFormatterConverter&quot;> </xref> Używany podczas deserializacji."
  overload: System.Runtime.Serialization.SerializationInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>converter</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SerializationInfo(Type,IFormatterConverter,Boolean)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> klasy."
  syntax:
    content: public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter, bool requireSameTokenInPartialTrust);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Obiektu do zserializowania.</xref:System.Type>"
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
      description: "<xref href=&quot;System.Runtime.Serialization.IFormatterConverter&quot;> </xref> Używany podczas deserializacji."
    - id: requireSameTokenInPartialTrust
      type: System.Boolean
      description: "Wskazuje, czy obiekt wymaga tego samego tokenu w częściowej relacji zaufania."
  overload: System.Runtime.Serialization.SerializationInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  id: AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Boolean)
  nameWithType: SerializationInfo.AddValue(String,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje wartość logiczną na <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException> Na przykład:```c#   void ISerializable.GetObject(SerializationInfo info, StreamingContext context)   {      // This will not cause an exception to be thrown.      info.AddValue(&quot;ABC&quot;, true);      info.AddValue(&quot;abc&quot;, false);      // However, this will cause the SerializationException to be thrown.      info.AddValue(&quot;XYZ&quot;, true);      info.AddValue(&quot;XYZ&quot;, false);   }   ```      ```vb#   Private Sub GetObjectData(ByVal info As SerializationInfo, _   ByVal context As StreamingContext)      &quot; This will not cause an exception to be thrown.      info.AddValue(&quot;ABC&quot;, &quot;upper case&quot;)      info.AddValue(&quot;abc&quot;, &quot;lower case&quot;)      &quot; However, this will cause the SerializationException to be thrown.      info.AddValue(&quot;XYZ&quot;, &quot;same case&quot;)      info.AddValue(&quot;XYZ&quot;, &quot;same case&quot;)   End Sub   ```"
  syntax:
    content: public void AddValue (string name, bool value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.Boolean
      description: "Wartość logiczna do serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  id: AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Byte)
  nameWithType: SerializationInfo.AddValue(String,Byte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Byte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje wartości 8-bitową liczbę całkowitą bez znaku do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, byte value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.Byte
      description: "Wartość bajtu do serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  id: AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Char)
  nameWithType: SerializationInfo.AddValue(String,Char)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje znak Unicode o wartości do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, char value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.Char
      description: "Wartość znaku do serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  id: AddValue(System.String,System.DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,DateTime)
  nameWithType: SerializationInfo.AddValue(String,DateTime)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje <xref:System.DateTime>wartość do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania.</xref:System.DateTime>"
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, DateTime value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.DateTime
      description: "<xref:System.DateTime>Wartość do serializacji.</xref:System.DateTime>"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  id: AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Decimal)
  nameWithType: SerializationInfo.AddValue(String,Decimal)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje wartość dziesiętna w <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, decimal value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.Decimal
      description: "Wartość dziesiętna do serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Jeśli wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  id: AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Double)
  nameWithType: SerializationInfo.AddValue(String,Double)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje do wartości zmiennoprzecinkowej podwójnej precyzji <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, double value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.Double
      description: "Podwójna wartość do zserializowania."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  id: AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int16)
  nameWithType: SerializationInfo.AddValue(String,Int16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int16)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje wartość 16-bitową liczbę całkowitą ze znakiem w <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, short value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.Int16
      description: "<xref uid=&quot;langword_csharp_Int16&quot; name=&quot;Int16&quot; href=&quot;&quot;> </xref> Wartość do serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  id: AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int32)
  nameWithType: SerializationInfo.AddValue(String,Int32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje wartość całkowita 32-bitowej do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  example:
  - >-
    [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/b3789dd4-8567-4492-a19c-_1.cpp)]
     [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/b3789dd4-8567-4492-a19c-_1.cs)]
     [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/b3789dd4-8567-4492-a19c-_1.vb)]
  syntax:
    content: public void AddValue (string name, int value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;> </xref> Wartość do serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  id: AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int64)
  nameWithType: SerializationInfo.AddValue(String,Int64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje 64-bitowej podpisanej liczby całkowitej wartość do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, long value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.Int64
      description: "Wartość Int64 do serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  id: AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Object)
  nameWithType: SerializationInfo.AddValue(String,Object)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje określony obiekt do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> magazynu, w którym jest skojarzony z określonej nazwy."
  remarks: "Obiekt znajdujący się w `value` parametru jest szeregowana jako typ zwracany przez `value`.       Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.Object
      description: "Wartość do zserializowania. Wszystkie elementy podrzędne tego obiektu zostanie automatycznie można serializować."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  id: AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,SByte)
  nameWithType: SerializationInfo.AddValue(String,SByte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,SByte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje wartości 8-bitową liczbę całkowitą ze znakiem do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, sbyte value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.SByte
      description: "<xref uid=&quot;langword_csharp_Sbyte&quot; name=&quot;Sbyte&quot; href=&quot;&quot;> </xref> Wartość do serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  id: AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Single)
  nameWithType: SerializationInfo.AddValue(String,Single)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje do wartości zmiennoprzecinkowej pojedynczej precyzji <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, float value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.Single
      description: "Pojedynczą wartość do zserializowania."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  id: AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt16)
  nameWithType: SerializationInfo.AddValue(String,UInt16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt16)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje wartości 16-bitową liczbę całkowitą bez znaku, do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, ushort value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.UInt16
      description: "<xref uid=&quot;langword_csharp_UInt16&quot; name=&quot;UInt16&quot; href=&quot;&quot;> </xref> Wartość do serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  id: AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt32)
  nameWithType: SerializationInfo.AddValue(String,UInt32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje wartość 32-bitowej liczby całkowitej bez znaku w <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  example:
  - "The following example uses the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> method to customize the serialization of a type. The code adds a string and an integer to an instance of the <xref:System.Runtime.Serialization.SerializationInfo> class in the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method of the <xref:System.Runtime.Serialization.ISerializable> interface. The code also uses the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method to retrieve values from the <xref:System.Runtime.Serialization.SerializationInfo>.  \n  \n [!code-cs[ISerializable_GetObjectData#0](~/add/codesnippet/csharp/44ffdfaa-67f2-436c-9c0d-_1.cs)]\n [!code-vb[ISerializable_GetObjectData#0](~/add/codesnippet/visualbasic/44ffdfaa-67f2-436c-9c0d-_1.vb)]"
  syntax:
    content: public void AddValue (string name, uint value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.UInt32
      description: "<xref uid=&quot;langword_csharp_UInt32&quot; name=&quot;UInt32&quot; href=&quot;&quot;> </xref> Wartość do serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  id: AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt64)
  nameWithType: SerializationInfo.AddValue(String,UInt64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje wartość 64-bitowej liczby całkowitej bez znaku w <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, ulong value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.UInt64
      description: "<xref uid=&quot;langword_csharp_UInt64&quot; name=&quot;UInt64&quot; href=&quot;&quot;> </xref> Wartość do serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  id: AddValue(System.String,System.Object,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Object,Type)
  nameWithType: SerializationInfo.AddValue(String,Object,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Dodaje wartości do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywać, gdzie <code> value </code> jest skojarzony z <code> name </code> i jest serializowany jako <xref:System.Type> <code> type </code>.</xref:System.Type>"
  remarks: "Typ przypisany jest zawsze typu obiektu lub jednego z jego elementów nadrzędnych.       Jeśli dwie wartości są dodawane do nazw różniących się tylko wielkość liter, nie zostanie wygenerowany wyjątek, który nie jest zalecanym rozwiązaniem. Jednak spowoduje dodanie dwóch wartości o takiej samej nazwie dokładnie <xref:System.Runtime.Serialization.SerializationException>zostanie wygenerowany.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, object value, Type type);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartością, dlatego może być zdeserializowany później."
    - id: value
      type: System.Object
      description: "Wartość do zserializowania. Wszystkie elementy podrzędne tego obiektu zostanie automatycznie można serializować."
    - id: type
      type: System.Type
      description: "<xref:System.Type>Do skojarzenia z bieżącym obiektem.</xref:System.Type> Ten parametr musi być zawsze typu obiektu lub jednej z jej klas podstawowych."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>name</code> or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Wartość jest już został skojarzony z <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  id: AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: System.Runtime.Serialization.SerializationInfo.AssemblyName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera lub ustawia typ do zserializowania podczas serializacji tylko nazwę zestawu."
  remarks: "AssemblyName jest taka sama jak wartość zwracana przez <xref:System.Reflection.Assembly.FullName%2A>Właściwości zestawu zawierającego typ.</xref:System.Reflection.Assembly.FullName%2A> Jest to nazwa zestawu, którego używa program formatujący serializacja informacji o typie dla tego obiektu.       Nazwa zestawu zawiera nazwę zestawu, wersji, kultury i niektóre zabezpieczeń informacji o obiekcie.       Użytkownicy, którzy są zmiana typ poddany serializacji (na przykład, aby wysłać serwera proxy dla określonego typu) będzie wartość tej właściwości.      > [!CAUTION] > Nie należy używać tej właściwości podczas deserializacji, ponieważ wartość tej właściwości jest niezdefiniowana."
  syntax:
    content: public string AssemblyName { get; set; }
    return:
      type: System.String
      description: "Pełna nazwa zestawu typ do zserializowania."
  overload: System.Runtime.Serialization.SerializationInfo.AssemblyName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Właściwość jest ustawiona na wartość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  id: FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: System.Runtime.Serialization.SerializationInfo.FullTypeName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera lub ustawia pełną nazwę <xref:System.Type>do serializacji.</xref:System.Type>"
  remarks: "Właściwości FullTypeName jest taka sama jak co będzie zwracany przez wywołanie metody <xref:System.Type.FullName%2A>na <xref:System.Type>.</xref:System.Type> </xref:System.Type.FullName%2A> To jest nazwa typu, który program formatujący używa podczas serializowania informacji o typie dla tego obiektu.       Użytkownicy, którzy są zmiana typu do serializacji (na przykład, aby wysłać serwera proxy dla określonego typu) należy ustawić wartość tej właściwości.      > [!CAUTION] > Nie należy używać tej właściwości podczas deserializacji, ponieważ wartość tej właściwości jest niezdefiniowana."
  syntax:
    content: public string FullTypeName { get; set; }
    return:
      type: System.String
      description: "Pełna nazwa typu do serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.FullTypeName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ta właściwość jest ustawiona na wartość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  id: GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetBoolean(String)
  nameWithType: SerializationInfo.GetBoolean(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetBoolean(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość logiczną z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest wartością logiczną lub może zostać przekonwertowany na jedną, która jest zwracana wartość; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public bool GetBoolean (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.Boolean
      description: "Wartość logiczna skojarzona <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetBoolean*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na wartość logiczną."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  id: GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetByte(String)
  nameWithType: SerializationInfo.GetByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetByte(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość 8-bitową liczbę całkowitą bez znaku od <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest liczbą całkowitą bez znaku 8-bitową lub może zostać przekonwertowany na jedną, która jest zwracana wartość; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public byte GetByte (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.Byte
      description: "8-bitową liczbę całkowitą bez znaku skojarzone z <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetByte*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na liczbę całkowitą bez znaku 8-bitową."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  id: GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetChar(String)
  nameWithType: SerializationInfo.GetChar(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetChar(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość znaku Unicode z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest znak Unicode, lub może zostać przekonwertowany na jedną, która jest zwracana wartość; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public char GetChar (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.Char
      description: "Znak Unicode skojarzony z <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetChar*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na znak Unicode."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  id: GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDateTime(String)
  nameWithType: SerializationInfo.GetDateTime(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDateTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera <xref:System.DateTime>wartość z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania.</xref:System.DateTime>"
  remarks: "Jeśli wartość jest <xref:System.DateTime>, lub może zostać przekonwertowany na <xref:System.DateTime>, ta wartość jest zwracane; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> </xref:System.DateTime> </xref:System.DateTime> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public DateTime GetDateTime (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Wartość skojarzoną z <code> name </code>.</xref:System.DateTime>"
  overload: System.Runtime.Serialization.SerializationInfo.GetDateTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na <xref:System.DateTime>wartość.</xref:System.DateTime>"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  id: GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDecimal(String)
  nameWithType: SerializationInfo.GetDecimal(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDecimal(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość dziesiętną z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest dziesiętne lub można przekonwertować na format dziesiętny, która jest zwracana wartość; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public decimal GetDecimal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.Decimal
      description: "Wartość dziesiętną z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  overload: System.Runtime.Serialization.SerializationInfo.GetDecimal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na format dziesiętny."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  id: GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDouble(String)
  nameWithType: SerializationInfo.GetDouble(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDouble(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość zmiennoprzecinkową podwójnej precyzji z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest wartość o podwójnej precyzji lub mogą być konwertowane na wartość o podwójnej precyzji, która jest zwracana wartość; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public double GetDouble (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.Double
      description: "Wartość zmiennoprzecinkową podwójnej precyzji skojarzone z <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetDouble*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na wartość zmiennoprzecinkową podwójnej precyzji."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  id: GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SerializationInfo.GetEnumerator()
  fullName: System.Runtime.Serialization.SerializationInfo.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Zwraca <xref href=&quot;System.Runtime.Serialization.SerializationInfoEnumerator&quot;> </xref> używany do iterowania pary nazwa wartość w <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Elementy formatujące wymagające do wyliczenia wartości przed ich zapisaniem w strumieniu najczęściej posłuży tej funkcji."
  syntax:
    content: public System.Runtime.Serialization.SerializationInfoEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Runtime.Serialization.SerializationInfoEnumerator
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfoEnumerator&quot;> </xref> do analizowania pary nazwa wartość zawartych w <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  overload: System.Runtime.Serialization.SerializationInfo.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  id: GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt16(String)
  nameWithType: SerializationInfo.GetInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt16(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość 16-bitową liczbę całkowitą ze znakiem z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest 16-bitową liczbę całkowitą ze znakiem lub może zostać przekonwertowany na jedną, która jest zwracana wartość; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public short GetInt16 (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.Int16
      description: "16-bitową liczbę całkowitą ze znakiem skojarzone z <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetInt16*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na 16-bitową liczbę całkowitą ze znakiem."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  id: GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt32(String)
  nameWithType: SerializationInfo.GetInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt32(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość 32-bitowej podpisanej liczby całkowitej z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest całkowita 32-bitowej lub może zostać przekonwertowany na jedną, która jest zwracana wartość; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  example:
  - >-
    [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/m-system.runtime.seriali_2_1.cpp)]
     [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/m-system.runtime.seriali_2_1.cs)]
     [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/m-system.runtime.seriali_2_1.vb)]
  syntax:
    content: public int GetInt32 (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa wartości do pobrania."
    return:
      type: System.Int32
      description: "Całkowita 32-bitowych skojarzone z <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetInt32*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na 32-bitowej podpisanej liczby całkowitej."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  id: GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt64(String)
  nameWithType: SerializationInfo.GetInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt64(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość 64-bitowej podpisanej liczby całkowitej z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest całkowita 64-bitowych lub może zostać przekonwertowany na jedną, która jest zwracana wartość; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public long GetInt64 (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.Int64
      description: "Całkowita 64-bitowych skojarzone z <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetInt64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na 64-bitowej podpisanej liczby całkowitej."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  id: GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetSByte(String)
  nameWithType: SerializationInfo.GetSByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSByte(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość 8-bitową liczbę całkowitą ze znakiem z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest `Int8`, lub może zostać przekonwertowany na `Int8`, ta wartość jest zwracane; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public sbyte GetSByte (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.SByte
      description: "8-bitową liczbę całkowitą ze znakiem skojarzone z <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetSByte*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na 8-bitową liczbę całkowitą ze znakiem."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  id: GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetSingle(String)
  nameWithType: SerializationInfo.GetSingle(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSingle(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartości zmiennoprzecinkowej pojedynczej precyzji z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest liczbą zmiennoprzecinkowych pojedynczej precyzji lub może zostać przekonwertowany na jedną, która jest zwracana wartość; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public float GetSingle (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa wartości do pobrania."
    return:
      type: System.Single
      description: "Wartość zmiennoprzecinkową o pojedynczej dokładności skojarzone z <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetSingle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na wartość zmiennoprzecinkową o pojedynczej dokładności."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  id: GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetString(String)
  nameWithType: SerializationInfo.GetString(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera <xref:System.String>wartość z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania.</xref:System.String>"
  remarks: "Jeśli wartość jest <xref:System.String>, lub może zostać przekonwertowany na <xref:System.String>, ta wartość jest zwracane; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> </xref:System.String> </xref:System.String> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public string GetString (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.String
      description: "<xref:System.String>Skojarzone z <code> name </code>.</xref:System.String>"
  overload: System.Runtime.Serialization.SerializationInfo.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na <xref:System.String>.</xref:System.String>"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  id: GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt16(String)
  nameWithType: SerializationInfo.GetUInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt16(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartości 16-bitową liczbę całkowitą bez znaku od <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest 16-bitową liczbę całkowitą bez znaku lub może zostać przekonwertowany na jedną, która jest zwracana wartość; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public ushort GetUInt16 (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.UInt16
      description: "16-bitową liczbę całkowitą bez znaku skojarzone z <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt16*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na 16-bitową liczbę całkowitą bez znaku."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  id: GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt32(String)
  nameWithType: SerializationInfo.GetUInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt32(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość 32-bitowej liczby całkowitej bez znaku z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest całkowita 32-bitowej lub może zostać przekonwertowany na jedną, która jest zwracana wartość; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public uint GetUInt32 (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.UInt32
      description: "32-bitowa liczba całkowita bez znaku skojarzone z <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt32*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na 32-bitowej liczby całkowitej bez znaku."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  id: GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt64(String)
  nameWithType: SerializationInfo.GetUInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt64(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość 64-bitowej liczby całkowitej bez znaku z <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli wartość jest liczbą całkowitą bez znaku 64-bitowych lub może zostać przekonwertowany na jedną, która jest zwracana wartość; w przeciwnym razie <xref:System.InvalidCastException>jest generowany.</xref:System.InvalidCastException> Wszystkie konwersje są realizowane przez <xref:System.Runtime.Serialization.IFormatterConverter>skojarzony z tym <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public ulong GetUInt64 (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    return:
      type: System.UInt64
      description: "64-bitowa liczba całkowita bez znaku skojarzone z <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na 64-bitowej liczby całkowitej bez znaku."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  id: GetValue(System.String,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetValue(String,Type)
  nameWithType: SerializationInfo.GetValue(String,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.GetValue(String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera wartość z zakresu od <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  remarks: "Jeśli dane są przechowywane w <xref:System.Runtime.Serialization.SerializationInfo>jest żądanego typu (lub jednego z jej klas pochodnych), ta wartość jest zwracana bezpośrednio.</xref:System.Runtime.Serialization.SerializationInfo> W przeciwnym razie <xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName>jest wywoływana, aby przekonwertować go do odpowiedniego typu.</xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName>       Wartość zwrócona przez metodę GetValue zawsze może być bezpiecznie rzutowany na typ określony w `type` parametru."
  example:
  - "The following code example demonstrates the use of the GetValue method:  \n  \n [!code-vb[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/visualbasic/a88aeee3-6425-4869-aee2-_1.vb)]\n [!code-cs[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/csharp/a88aeee3-6425-4869-aee2-_1.cs)]\n [!code-cpp[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/cpp/a88aeee3-6425-4869-aee2-_1.cpp)]"
  syntax:
    content: public object GetValue (string name, Type type);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa skojarzona z wartości do pobrania."
    - id: type
      type: System.Type
      description: "<xref:System.Type>Wartości do pobrania.</xref:System.Type> Jeśli nie można przekonwertować wartości przechowywanych na ten typ, system zgłosi <xref:System.InvalidCastException>.</xref:System.InvalidCastException>"
    return:
      type: System.Object
      description: "Obiekt o określonym <xref:System.Type>skojarzone z <code> name </code>.</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationInfo.GetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość skojarzoną z <code> name </code> nie można przekonwertować na <code> type </code>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Nie można znaleźć elementu o określonej nazwie w bieżącego wystąpienia."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  id: IsAssemblyNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera czy jawnie ustaw nazwę zestawu."
  syntax:
    content: public bool IsAssemblyNameSetExplicit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli nazwa zestawu została jawnie ustawiona; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  id: IsFullTypeNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera czy jawnie ustawiona Pełna nazwa typu."
  syntax:
    content: public bool IsFullTypeNameSetExplicit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli pełna nazwa typu została jawnie ustawiona; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  id: MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: System.Runtime.Serialization.SerializationInfo.MemberCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Pobiera liczbę elementów członkowskich, które zostały dodane do <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> przechowywania."
  syntax:
    content: public int MemberCount { get; }
    return:
      type: System.Int32
      description: "Liczba elementów członkowskich, które zostały dodane do bieżącego <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  overload: System.Runtime.Serialization.SerializationInfo.MemberCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  id: ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: System.Runtime.Serialization.SerializationInfo.ObjectType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Zwraca typ obiektu do zserializowania."
  syntax:
    content: public Type ObjectType { get; }
    return:
      type: System.Type
      description: "Typ obiektu poddawanego serializacji."
  overload: System.Runtime.Serialization.SerializationInfo.ObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  id: SetType(System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SetType(Type)
  nameWithType: SerializationInfo.SetType(Type)
  fullName: System.Runtime.Serialization.SerializationInfo.SetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Ustawia <xref:System.Type>obiektu do zserializowania.</xref:System.Type>"
  remarks: "<xref:System.Runtime.Serialization.Formatter>Za <xref:System.Type> <xref:System.Runtime.Serialization.SerializationInfo>wystąpienia przed przekazaniem go do <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> </xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Type> </xref:System.Runtime.Serialization.Formatter> Jednak użytkownicy, którzy chcą wysłać serwerów proxy dla swoich obiektów należy zmienić typ reprezentowany przez to <xref:System.Runtime.Serialization.SerializationInfo>wystąpienia.</xref:System.Runtime.Serialization.SerializationInfo> Przy użyciu metody SetType jest równoznaczne z ustawieniem zarówno <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>do <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A>.</xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> </xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>"
  example:
  - >-
    [!code-cs[IObjectReference Interface Example#1](~/add/codesnippet/csharp/m-system.runtime.seriali_6_1.cs)]
     [!code-cpp[IObjectReference Interface Example#1](~/add/codesnippet/cpp/m-system.runtime.seriali_6_1.cpp)]
     [!code-vb[IObjectReference Interface Example#1](~/add/codesnippet/visualbasic/m-system.runtime.seriali_6_1.vb)]
  syntax:
    content: public void SetType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Obiektu do zserializowania.</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationInfo.SetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo(Type,IFormatterConverter)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.IFormatterConverter
  parent: System.Runtime.Serialization
  isExternal: false
  name: IFormatterConverter
  nameWithType: IFormatterConverter
  fullName: System.Runtime.Serialization.IFormatterConverter
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo(Type,IFormatterConverter,Boolean)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Boolean)
  nameWithType: SerializationInfo.AddValue(String,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Byte)
  nameWithType: SerializationInfo.AddValue(String,Byte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Char)
  nameWithType: SerializationInfo.AddValue(String,Char)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,DateTime)
  nameWithType: SerializationInfo.AddValue(String,DateTime)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Decimal)
  nameWithType: SerializationInfo.AddValue(String,Decimal)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Double)
  nameWithType: SerializationInfo.AddValue(String,Double)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int16)
  nameWithType: SerializationInfo.AddValue(String,Int16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int32)
  nameWithType: SerializationInfo.AddValue(String,Int32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int64)
  nameWithType: SerializationInfo.AddValue(String,Int64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Object)
  nameWithType: SerializationInfo.AddValue(String,Object)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object)
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,SByte)
  nameWithType: SerializationInfo.AddValue(String,SByte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,SByte)
- uid: System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Single)
  nameWithType: SerializationInfo.AddValue(String,Single)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt16)
  nameWithType: SerializationInfo.AddValue(String,UInt16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt16)
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt32)
  nameWithType: SerializationInfo.AddValue(String,UInt32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt64)
  nameWithType: SerializationInfo.AddValue(String,UInt64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Object,Type)
  nameWithType: SerializationInfo.AddValue(String,Object,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object,Type)
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: System.Runtime.Serialization.SerializationInfo.AssemblyName
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: System.Runtime.Serialization.SerializationInfo.FullTypeName
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetBoolean(String)
  nameWithType: SerializationInfo.GetBoolean(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetBoolean(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetByte(String)
  nameWithType: SerializationInfo.GetByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetByte(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetChar(String)
  nameWithType: SerializationInfo.GetChar(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetChar(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDateTime(String)
  nameWithType: SerializationInfo.GetDateTime(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDateTime(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDecimal(String)
  nameWithType: SerializationInfo.GetDecimal(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDecimal(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDouble(String)
  nameWithType: SerializationInfo.GetDouble(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDouble(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetEnumerator()
  nameWithType: SerializationInfo.GetEnumerator()
  fullName: System.Runtime.Serialization.SerializationInfo.GetEnumerator()
- uid: System.Runtime.Serialization.SerializationInfoEnumerator
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfoEnumerator
  nameWithType: SerializationInfoEnumerator
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt16(String)
  nameWithType: SerializationInfo.GetInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt16(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt32(String)
  nameWithType: SerializationInfo.GetInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt32(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt64(String)
  nameWithType: SerializationInfo.GetInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt64(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSByte(String)
  nameWithType: SerializationInfo.GetSByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSByte(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSingle(String)
  nameWithType: SerializationInfo.GetSingle(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSingle(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetString(String)
  nameWithType: SerializationInfo.GetString(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetString(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt16(String)
  nameWithType: SerializationInfo.GetUInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt16(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt32(String)
  nameWithType: SerializationInfo.GetUInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt32(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt64(String)
  nameWithType: SerializationInfo.GetUInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt64(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetValue(String,Type)
  nameWithType: SerializationInfo.GetValue(String,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.GetValue(String,Type)
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: System.Runtime.Serialization.SerializationInfo.MemberCount
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: System.Runtime.Serialization.SerializationInfo.ObjectType
- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SetType(Type)
  nameWithType: SerializationInfo.SetType(Type)
  fullName: System.Runtime.Serialization.SerializationInfo.SetType(Type)
- uid: System.Runtime.Serialization.SerializationInfo.#ctor*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo.SerializationInfo
- uid: System.Runtime.Serialization.SerializationInfo.AddValue*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue
  nameWithType: SerializationInfo.AddValue
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetBoolean
  nameWithType: SerializationInfo.GetBoolean
- uid: System.Runtime.Serialization.SerializationInfo.GetByte*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetByte
  nameWithType: SerializationInfo.GetByte
- uid: System.Runtime.Serialization.SerializationInfo.GetChar*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetChar
  nameWithType: SerializationInfo.GetChar
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDateTime
  nameWithType: SerializationInfo.GetDateTime
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDecimal
  nameWithType: SerializationInfo.GetDecimal
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDouble
  nameWithType: SerializationInfo.GetDouble
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetEnumerator
  nameWithType: SerializationInfo.GetEnumerator
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt16
  nameWithType: SerializationInfo.GetInt16
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt32
  nameWithType: SerializationInfo.GetInt32
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt64
  nameWithType: SerializationInfo.GetInt64
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSByte
  nameWithType: SerializationInfo.GetSByte
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSingle
  nameWithType: SerializationInfo.GetSingle
- uid: System.Runtime.Serialization.SerializationInfo.GetString*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetString
  nameWithType: SerializationInfo.GetString
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt16
  nameWithType: SerializationInfo.GetUInt16
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt32
  nameWithType: SerializationInfo.GetUInt32
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt64
  nameWithType: SerializationInfo.GetUInt64
- uid: System.Runtime.Serialization.SerializationInfo.GetValue*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetValue
  nameWithType: SerializationInfo.GetValue
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
- uid: System.Runtime.Serialization.SerializationInfo.SetType*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SetType
  nameWithType: SerializationInfo.SetType
