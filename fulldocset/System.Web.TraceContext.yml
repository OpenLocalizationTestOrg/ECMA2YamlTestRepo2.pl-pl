### YamlMime:ManagedReference
items:
- uid: System.Web.TraceContext
  id: TraceContext
  children:
  - System.Web.TraceContext.#ctor(System.Web.HttpContext)
  - System.Web.TraceContext.IsEnabled
  - System.Web.TraceContext.TraceFinished
  - System.Web.TraceContext.TraceMode
  - System.Web.TraceContext.Warn(System.String)
  - System.Web.TraceContext.Warn(System.String,System.String)
  - System.Web.TraceContext.Warn(System.String,System.String,System.Exception)
  - System.Web.TraceContext.Write(System.String)
  - System.Web.TraceContext.Write(System.String,System.String)
  - System.Web.TraceContext.Write(System.String,System.String,System.Exception)
  langs:
  - csharp
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
  type: Class
  summary: "Przechwytuje i przedstawia wykonywania szczegóły żądania sieci Web. Ta klasa nie może być dziedziczona."
  remarks: "Ta klasa służy do dołączenia do śledzenia określonych kategorii wiadomości. Na przykład w przypadku tworzenia wystąpienia <xref:System.Web.UI.WebControls.Calendar>klasy dla aplikacji, może obejmować komunikat śledzenia &quot;Uruchamianie do renderowania&quot; w procedurze renderowania i &quot;Wywoływanie zdarzeń OnChange&quot; w procedurze obsługi zdarzeń.</xref:System.Web.UI.WebControls.Calendar>       Umożliwia także klasy TraceContext uzyskać zestaw rekordów śledzenia po zakończeniu wykonywania żądania przetwarzania niestandardowego. Aby uzyskać więcej informacji, zobacz [omówienie śledzenia ASP.NET](~/add/includes/ajax-current-ext-md.md).       Aby włączyć śledzenie, ustaw `Trace` atrybutu w [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) dyrektywy lub <xref:System.Web.TraceContext.IsEnabled%2A>właściwości `true`.</xref:System.Web.TraceContext.IsEnabled%2A> Gdy śledzenie jest włączone, oprócz wyświetlania zawartości śledzenia dostarczane przez użytkownika <xref:System.Web.UI.Page>klasy automatycznie obejmuje dane dotyczące wydajności, informacje o strukturze drzewa formantów i stanu zarządzania zawartości dla każdego żądania.</xref:System.Web.UI.Page>"
  syntax:
    content: public sealed class TraceContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.TraceContext.#ctor(System.Web.HttpContext)
  id: '#ctor(System.Web.HttpContext)'
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: TraceContext(HttpContext)
  nameWithType: TraceContext.TraceContext(HttpContext)
  fullName: System.Web.TraceContext.TraceContext(HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.TraceContext&quot;> </xref> klasy."
  syntax:
    content: public TraceContext (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Zawierający informacje dotyczące bieżącego żądania sieci Web."
  overload: System.Web.TraceContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.IsEnabled
  id: IsEnabled
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: IsEnabled
  nameWithType: TraceContext.IsEnabled
  fullName: System.Web.TraceContext.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia wartość wskazującą, czy śledzenie jest włączone dla bieżącego żądania sieci Web."
  remarks: "Użyj tej flagi, aby sprawdzić, czy stronę lub aplikacja powinna danych wyjściowych informacji śledzenia przed niczego zapisuje w dzienniku śledzenia.       Wartość właściwości IsEnabled zależy od ustawienia w sekcji `system.web` sekcji konfiguracji i wartość `trace` atrybutu dyrektywy. Opcja śledzenia w dyrektywie page mają pierwszeństwo przed tę opcję i w pliku konfiguracji. Ustawienie wartości IsEnabled programowo ma pierwszeństwo przed zarówno atrybutu dyrektywy strony i ustawienia konfiguracji.      > [!NOTE] > Po ustawieniu właściwości IsEnabled na `true` dla całej aplikacji, musisz jawnie ustawić tę właściwość `false` dla dowolnej strony w aplikacji, dla których nie chcesz wyświetlane informacje śledzenia."
  example:
  - "The following code example demonstrates how you can determine whether tracing is enabled for a page. The code iterates through the rows in a dataset, writing trace statements for each row in that dataset.  \n  \n [!code-cs[Classic TraceContext.IsEnabled Example#1](~/add/codesnippet/csharp/p-system.web.tracecontex_4_1.cs)]\n [!code-vb[Classic TraceContext.IsEnabled Example#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_4_1.vb)]"
  syntax:
    content: public bool IsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli śledzenie jest włączone; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.TraceContext.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.TraceFinished
  id: TraceFinished
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: TraceFinished
  nameWithType: TraceContext.TraceFinished
  fullName: System.Web.TraceContext.TraceFinished
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zgłoszone przez <xref href=&quot;System.Web.TraceContext&quot;> </xref> obiektu do udostępnienia śledzenia komunikatów, po zebraniu wszystkich informacji żądania."
  remarks: "TraceFinished zdarzenie jest wywoływane podczas `EndRequest` etap procesu przetwarzania żądania HTTP. Zostanie wywołane przez <xref:System.Web.TraceContext>obiektu po zebraniu wszystkich informacji żądania do udostępnienia kolekcję <xref:System.Web.TraceContextRecord>komunikaty zarejestrowane <xref:System.Web.TraceContextEventHandler>delegatów.</xref:System.Web.TraceContextEventHandler> </xref:System.Web.TraceContextRecord> </xref:System.Web.TraceContext>"
  example:
  - "The following code example demonstrates how you can register a <xref:System.Web.TraceContextEventHandler> to handle the TraceFinished event. In this example, the delegate iterates through the trace messages and writes them to the response stream; however, you could write the same information to a database or a profiling tool consumer.  \n  \n [!code-cs[System.Web.Trace_3#1](~/add/codesnippet/csharp/e-system.web.tracecontex_1.aspx)]\n [!code-vb[System.Web.Trace_3#1](~/add/codesnippet/visualbasic/e-system.web.tracecontex_1.aspx)]"
  syntax:
    content: public event System.Web.TraceContextEventHandler TraceFinished;
    return:
      type: System.Web.TraceContextEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.TraceMode
  id: TraceMode
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: TraceMode
  nameWithType: TraceContext.TraceMode
  fullName: System.Web.TraceContext.TraceMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera lub ustawia posortowane, w którym komunikaty śledzenia powinny być danymi wyjściowymi przeglądarki."
  remarks: "Komunikaty śledzenia mogą być sortowane w kolejności, które zostały one przetworzone lub alfabetycznie według kategorii zdefiniowanej przez użytkownika."
  example:
  - "The following code example demonstrates how you can sort a page's trace statements alphabetically by the categories that you have assigned to the statements.  \n  \n [!code-cs[Classic TraceContext.TraceMode Example#1](~/add/codesnippet/csharp/p-system.web.tracecontex_5_1.aspx)]\n [!code-vb[Classic TraceContext.TraceMode Example#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_5_1.aspx)]"
  syntax:
    content: public System.Web.TraceMode TraceMode { get; set; }
    return:
      type: System.Web.TraceMode
      description: "Jeden z <xref href=&quot;System.Web.TraceMode&quot;> </xref> wartości wyliczenia. Wartość domyślna to ustawienie, określony przez <xref uid=&quot;langword_csharp_traceMode&quot; name=&quot;traceMode&quot; href=&quot;&quot;> </xref> atrybutu w <xref uid=&quot;langword_csharp_trace&quot; name=&quot;trace&quot; href=&quot;&quot;> </xref> sekcji pliku konfiguracji, w której domyślna to <xref uid=&quot;langword_csharp_SortByTime&quot; name=&quot;SortByTime&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.TraceContext.TraceMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wybrana wartość nie jest jednym z <xref href=&quot;System.Web.TraceMode&quot;> </xref> wartości wyliczenia."
  platform:
  - net462
- uid: System.Web.TraceContext.Warn(System.String)
  id: Warn(System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Warn(String)
  nameWithType: TraceContext.Warn(String)
  fullName: System.Web.TraceContext.Warn(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje komunikat śledzenia w dzienniku śledzenia. Wszystkie ostrzeżenia są wyświetlane w dzienniku jako czerwony."
  remarks: "Za każdym razem, gdy <xref:System.Web.TraceContext.Warn%2A>Metoda jest wywoływana, <xref:System.Web.TraceContext>komunikat śledzenia jest dodawany do <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>kolekcji, która jest dostępna w przypadku obsługi komunikatów <xref:System.Web.TraceContext.TraceFinished>zdarzeń.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Warn%2A> Wiadomość zostanie dodany z jego <xref:System.Web.TraceContextRecord.IsWarning%2A>ustawioną właściwość `true` i jego <xref:System.Web.TraceContextRecord.ErrorInfo%2A>ustawioną właściwość `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  syntax:
    content: public void Warn (string message);
    parameters:
    - id: message
      type: System.String
      description: "Komunikat śledzenia do zapisania w dzienniku."
  overload: System.Web.TraceContext.Warn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Warn(System.String,System.String)
  id: Warn(System.String,System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Warn(String,String)
  nameWithType: TraceContext.Warn(String,String)
  fullName: System.Web.TraceContext.Warn(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisy śledzenia informacji w dzienniku śledzenia, w tym wszystkie kategorie zdefiniowane przez użytkownika oraz śledzenia wiadomości. Wszystkie ostrzeżenia są wyświetlane w dzienniku jako czerwony."
  remarks: "Za każdym razem, gdy <xref:System.Web.TraceContext.Warn%2A>Metoda jest wywoływana, <xref:System.Web.TraceContext>komunikat śledzenia jest dodawany do <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>kolekcji, która jest dostępna w przypadku obsługi komunikatów <xref:System.Web.TraceContext.TraceFinished>zdarzeń.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Warn%2A> Wiadomość zostanie dodany z jego <xref:System.Web.TraceContextRecord.IsWarning%2A>ustawioną właściwość `true` i jego <xref:System.Web.TraceContextRecord.ErrorInfo%2A>ustawioną właściwość `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  syntax:
    content: public void Warn (string category, string message);
    parameters:
    - id: category
      type: System.String
      description: "Kategoria śledzenia, który odbiera wiadomości."
    - id: message
      type: System.String
      description: "Komunikat śledzenia do zapisania w dzienniku."
  overload: System.Web.TraceContext.Warn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Warn(System.String,System.String,System.Exception)
  id: Warn(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Warn(String,String,Exception)
  nameWithType: TraceContext.Warn(String,String,Exception)
  fullName: System.Web.TraceContext.Warn(String,String,Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje śledzenia informacji w dzienniku śledzenia, w tym wszystkie kategorie zdefiniowane przez użytkownika, komunikaty śledzenia i informacje o błędzie. Wszystkie ostrzeżenia są wyświetlane w dzienniku jako czerwony."
  remarks: "Za każdym razem, gdy <xref:System.Web.TraceContext.Warn%2A>Metoda jest wywoływana, <xref:System.Web.TraceContext>komunikat śledzenia jest dodawany do <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>kolekcji, która jest dostępna w przypadku obsługi komunikatów <xref:System.Web.TraceContext.TraceFinished>zdarzeń.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Warn%2A> Wiadomość zostanie dodany z jego <xref:System.Web.TraceContextRecord.IsWarning%2A>ustawioną właściwość `true`i <xref:System.Web.TraceContextRecord.ErrorInfo%2A>właściwość jest ustawiona na obiekt przekazany `errorInfo` parametru.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  example:
  - "The following code example demonstrates how to call the <xref:System.Web.TraceContext.Write%2A> method to write an error trace message to the trace log. In this example, different exceptions are traced as errors and warnings. When the page throws an <xref:System.ArgumentException>, it writes a warning message using the <xref:System.Web.TraceContext.Warn%2A> method. When the page throws an <xref:System.InvalidOperationException>, it writes an error message using the <xref:System.Web.TraceContext.Write%2A> method.  \n  \n [!code-cs[System.Web.Trace_4#1](~/add/codesnippet/csharp/m-system.web.tracecontex_1_1.aspx)]\n [!code-vb[System.Web.Trace_4#1](~/add/codesnippet/visualbasic/m-system.web.tracecontex_1_1.aspx)]"
  syntax:
    content: public void Warn (string category, string message, Exception errorInfo);
    parameters:
    - id: category
      type: System.String
      description: "Kategoria śledzenia, który odbiera wiadomości."
    - id: message
      type: System.String
      description: "Komunikat śledzenia do zapisania w dzienniku."
    - id: errorInfo
      type: System.Exception
      description: "<xref:System.Exception>Zawierający informacje o tym błędzie.</xref:System.Exception>"
  overload: System.Web.TraceContext.Warn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Write(System.String)
  id: Write(System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Write(String)
  nameWithType: TraceContext.Write(String)
  fullName: System.Web.TraceContext.Write(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje komunikat śledzenia w dzienniku śledzenia."
  remarks: "Za każdym razem, gdy <xref:System.Web.TraceContext.Write%2A>Metoda jest wywoływana, <xref:System.Web.TraceContext>komunikat śledzenia jest dodawany do <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>kolekcji, która jest dostępna w przypadku obsługi komunikatów <xref:System.Web.TraceContext.TraceFinished>zdarzeń.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Write%2A> Wiadomość zostanie dodany z jego <xref:System.Web.TraceContextRecord.IsWarning%2A>ustawioną właściwość `false` i jego <xref:System.Web.TraceContextRecord.ErrorInfo%2A>ustawioną właściwość `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  syntax:
    content: public void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Komunikat śledzenia do zapisania w dzienniku."
  overload: System.Web.TraceContext.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Write(System.String,System.String)
  id: Write(System.String,System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Write(String,String)
  nameWithType: TraceContext.Write(String,String)
  fullName: System.Web.TraceContext.Write(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Informacje śledzenia zapisów w dzienniku śledzenia, w tym wiadomości i kategorie zdefiniowane przez użytkownika."
  remarks: "Za każdym razem, gdy <xref:System.Web.TraceContext.Write%2A>Metoda jest wywoływana, <xref:System.Web.TraceContext>komunikat śledzenia jest dodawany do <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>kolekcji, która jest dostępna w przypadku obsługi komunikatów <xref:System.Web.TraceContext.TraceFinished>zdarzeń.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Write%2A> Wiadomość zostanie dodany z jego <xref:System.Web.TraceContextRecord.IsWarning%2A>ustawioną właściwość `false` i jego <xref:System.Web.TraceContextRecord.ErrorInfo%2A>ustawioną właściwość `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  example:
  - "The following code example demonstrates how to call the Write method to write an error trace message to the trace log. In this example, the delegate iterates through the trace messages and writes them as an HTML table; however, you can write the same information to a database or a profiling tool consumer.  \n  \n [!code-cs[System.Web.Trace_5#1](~/add/codesnippet/csharp/m-system.web.tracecontex_0_1.aspx)]\n [!code-vb[System.Web.Trace_5#1](~/add/codesnippet/visualbasic/m-system.web.tracecontex_0_1.aspx)]"
  syntax:
    content: public void Write (string category, string message);
    parameters:
    - id: category
      type: System.String
      description: "Kategoria śledzenia, który odbiera wiadomości."
    - id: message
      type: System.String
      description: "Komunikat śledzenia do zapisania w dzienniku."
  overload: System.Web.TraceContext.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Write(System.String,System.String,System.Exception)
  id: Write(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Write(String,String,Exception)
  nameWithType: TraceContext.Write(String,String,Exception)
  fullName: System.Web.TraceContext.Write(String,String,Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zapisuje śledzenia informacji w dzienniku śledzenia, w tym wszystkie kategorie zdefiniowane przez użytkownika, komunikaty śledzenia i informacje o błędzie."
  remarks: "Za każdym razem, gdy <xref:System.Web.TraceContext.Write%2A>Metoda jest wywoływana, <xref:System.Web.TraceContext>komunikat śledzenia jest dodawany do <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>kolekcji, która jest dostępna w przypadku obsługi komunikatów <xref:System.Web.TraceContext.TraceFinished>zdarzeń.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Write%2A> Wiadomość zostanie dodany z jego <xref:System.Web.TraceContextRecord.IsWarning%2A>ustawioną właściwość `false`i <xref:System.Web.TraceContextRecord.ErrorInfo%2A>właściwość jest ustawiona na obiekt przekazany `errorInfo` parametru.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  example:
  - "The following code example demonstrates how to call the Write method to write an error trace message to the trace log. In this example, different exceptions are traced as errors and warnings. When the page throws an <xref:System.ArgumentException>, it writes a warning message using the <xref:System.Web.TraceContext.Warn%2A> method. When the page throws an <xref:System.InvalidOperationException>, it writes an error message using the <xref:System.Web.TraceContext.Write%2A> method.  \n  \n [!code-cs[System.Web.Trace_4#1](~/add/codesnippet/csharp/m-system.web.tracecontex_2_1.aspx)]\n [!code-vb[System.Web.Trace_4#1](~/add/codesnippet/visualbasic/m-system.web.tracecontex_2_1.aspx)]"
  syntax:
    content: public void Write (string category, string message, Exception errorInfo);
    parameters:
    - id: category
      type: System.String
      description: "Kategoria śledzenia, który odbiera wiadomości."
    - id: message
      type: System.String
      description: "Komunikat śledzenia do zapisania w dzienniku."
    - id: errorInfo
      type: System.Exception
      description: "<xref:System.Exception>Zawierający informacje o tym błędzie.</xref:System.Exception>"
  overload: System.Web.TraceContext.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.TraceContext.#ctor(System.Web.HttpContext)
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceContext(HttpContext)
  nameWithType: TraceContext.TraceContext(HttpContext)
  fullName: System.Web.TraceContext.TraceContext(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.TraceContext.IsEnabled
  parent: System.Web.TraceContext
  isExternal: false
  name: IsEnabled
  nameWithType: TraceContext.IsEnabled
  fullName: System.Web.TraceContext.IsEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.TraceContext.TraceFinished
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceFinished
  nameWithType: TraceContext.TraceFinished
  fullName: System.Web.TraceContext.TraceFinished
- uid: System.Web.TraceContextEventHandler
  parent: System.Web
  isExternal: false
  name: TraceContextEventHandler
  nameWithType: TraceContextEventHandler
  fullName: System.Web.TraceContextEventHandler
- uid: System.Web.TraceContext.TraceMode
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceMode
  nameWithType: TraceContext.TraceMode
  fullName: System.Web.TraceContext.TraceMode
- uid: System.Web.TraceMode
  parent: System.Web
  isExternal: false
  name: TraceMode
  nameWithType: TraceMode
  fullName: System.Web.TraceMode
- uid: System.Web.TraceContext.Warn(System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn(String)
  nameWithType: TraceContext.Warn(String)
  fullName: System.Web.TraceContext.Warn(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.TraceContext.Warn(System.String,System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn(String,String)
  nameWithType: TraceContext.Warn(String,String)
  fullName: System.Web.TraceContext.Warn(String,String)
- uid: System.Web.TraceContext.Warn(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn(String,String,Exception)
  nameWithType: TraceContext.Warn(String,String,Exception)
  fullName: System.Web.TraceContext.Warn(String,String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.TraceContext.Write(System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Write(String)
  nameWithType: TraceContext.Write(String)
  fullName: System.Web.TraceContext.Write(String)
- uid: System.Web.TraceContext.Write(System.String,System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Write(String,String)
  nameWithType: TraceContext.Write(String,String)
  fullName: System.Web.TraceContext.Write(String,String)
- uid: System.Web.TraceContext.Write(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  isExternal: false
  name: Write(String,String,Exception)
  nameWithType: TraceContext.Write(String,String,Exception)
  fullName: System.Web.TraceContext.Write(String,String,Exception)
- uid: System.Web.TraceContext.#ctor*
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext.TraceContext
- uid: System.Web.TraceContext.IsEnabled*
  parent: System.Web.TraceContext
  isExternal: false
  name: IsEnabled
  nameWithType: TraceContext.IsEnabled
- uid: System.Web.TraceContext.TraceMode*
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceMode
  nameWithType: TraceContext.TraceMode
- uid: System.Web.TraceContext.Warn*
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn
  nameWithType: TraceContext.Warn
- uid: System.Web.TraceContext.Write*
  parent: System.Web.TraceContext
  isExternal: false
  name: Write
  nameWithType: TraceContext.Write
