### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.EventProvider
  id: EventProvider
  children:
  - System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)
  - System.Diagnostics.Eventing.EventProvider.Close
  - System.Diagnostics.Eventing.EventProvider.CreateActivityId
  - System.Diagnostics.Eventing.EventProvider.Dispose
  - System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)
  - System.Diagnostics.Eventing.EventProvider.Finalize
  - System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError
  - System.Diagnostics.Eventing.EventProvider.IsEnabled
  - System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)
  - System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)
  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  - System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)
  - System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)
  - System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  - System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  langs:
  - csharp
  name: EventProvider
  nameWithType: EventProvider
  fullName: System.Diagnostics.Eventing.EventProvider
  type: Class
  summary: "Klasa używana do zapisywania zdarzeń."
  remarks: "Aby korzystanie ze zdarzeń napisane przy użyciu <xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>i <xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A>metody zdarzenia musi być zdefiniowany w manifeście; zdarzenia napisane przy użyciu <xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A>— Metoda nie wymagają manifestu.</xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>       Zdarzenia może zawierać następujące typy danych zarządzanych: - bool — wartość logiczna - bajtowych - char — decimal - dwukrotnie używa - float — ciąg sbyte — krótkie - identyfikatora Guid - int - IntPtr — długie — - uint — UInt64 Jeśli zdarzenia w manifeście `Boolean` w typu nie można zapisać przy użyciu elementu danych `Boolean` typ danych w kodzie zarządzanym. `Boolean` Typu w manifeście oczekuje wartości 4-bajtowych, a `Boolean` typ danych w kodzie zarządzanym to 1-bajtowego. Zamiast tego należy użyć `int` — typ danych do zapisu wartości. Jeśli chcesz rejestrować `Boolean` wartość, użyj UInt8 typu w manifeście."
  syntax:
    content: 'public class EventProvider : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: EventProvider(Guid)
  nameWithType: EventProvider.EventProvider(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.EventProvider(Guid)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Diagnostics.Eventing.EventProvider&quot;> </xref> klasy."
  remarks: "Rejestruje dostawcę. Aby usunąć rejestrację po zakończeniu operacji, należy wywołać <xref:System.Diagnostics.Eventing.EventProvider.Close%2A>metody.</xref:System.Diagnostics.Eventing.EventProvider.Close%2A>"
  syntax:
    content: public EventProvider (Guid providerGuid);
    parameters:
    - id: providerGuid
      type: System.Guid
      description: "Identyfikator GUID, który unikatowo identyfikuje dostawcę."
  overload: System.Diagnostics.Eventing.EventProvider.#ctor*
  exceptions:
  - type: System.InsufficientMemoryException
    commentId: T:System.InsufficientMemoryException
    description: "Nie ma wystarczającej ilości pamięci do ukończenia tej operacji."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Klasy w <xref href=&quot;System.Diagnostics.Eventing&quot;> </xref> pracy przestrzeni nazw tylko w systemie Windows Vista."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> providerGuid </code> Parametr nie może mieć wartości null."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Błąd zwrócony przez podsystem ETW."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Close
  id: Close
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Close()
  nameWithType: EventProvider.Close()
  fullName: System.Diagnostics.Eventing.EventProvider.Close()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Usuwa rejestrację dostawcy z podsystemem ETW i zwalnia wszystkie zasoby niezarządzane."
  remarks: "Należy wywołać tę metodę po zakończeniu zamiast czekać do usuwania zasobów systemu."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProvider.Close*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Błąd zwrócony przez podsystem ETW."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId
  id: CreateActivityId
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: CreateActivityId()
  nameWithType: EventProvider.CreateActivityId()
  fullName: System.Diagnostics.Eventing.EventProvider.CreateActivityId()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Tworzy identyfikator unikatowy dla dostawcy."
  remarks: "To jest metodą statyczną."
  syntax:
    content: public static Guid CreateActivityId ();
    parameters: []
    return:
      type: System.Guid
      description: "Unikatowy identyfikator Guid, który jest używany podczas wywoływania <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId*>metodę, aby ustawić identyfikator działania dla dostawcy.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId*>"
  overload: System.Diagnostics.Eventing.EventProvider.CreateActivityId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Dispose
  id: Dispose
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventProvider.Dispose()
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Zwalnia zasoby używane przez to <xref href=&quot;System.Diagnostics.Eventing.EventProvider&quot;> </xref> obiektu."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventProvider.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Zwalnia zasoby używane przez to <xref href=&quot;System.Diagnostics.Eventing.EventProvider&quot;> </xref> obiektu."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Ten parametr jest ignorowana przez tę metodę, ponieważ nie ma żadnych niezarządzanych zasobów."
  overload: System.Diagnostics.Eventing.EventProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Finalize
  id: Finalize
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Finalize()
  nameWithType: EventProvider.Finalize()
  fullName: System.Diagnostics.Eventing.EventProvider.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Zwalnia zasoby i wykonuje wewnętrzny oczyszczania przed wystąpienie jest odzyskana przez wyrzucanie elementów bezużytecznych."
  syntax:
    content: ~EventProvider ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProvider.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError
  id: GetLastWriteEventError
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: GetLastWriteEventError()
  nameWithType: EventProvider.GetLastWriteEventError()
  fullName: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Pobiera ostatniego błędu związanego z brakiem zapisu zdarzeń."
  remarks: "<xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>, <xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A>, I <xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A>metody Ustaw tę wartość, jeśli ich nie można zapisać zdarzenia.</xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>       To jest metodą statyczną."
  syntax:
    content: public static System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode GetLastWriteEventError ();
    parameters: []
    return:
      type: System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode
      description: "Użyj wartości, aby ustalić przyczynę niepowodzenia zapisu zdarzeń."
  overload: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled
  id: IsEnabled
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: IsEnabled()
  nameWithType: EventProvider.IsEnabled()
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Określa, czy dowolnej sesji włączone dostawcy, niezależnie od poziomu i słowo kluczowe wartości używane do włączenia dostawcy usług."
  remarks: "Zazwyczaj dostawcy nie wywołuje tę metodę, aby określić, czy dostawca został włączony przez sesji. Dostawca po prostu zapisuje zdarzenia i ETW Określa, czy zdarzenie jest rejestrowane do sesji. Dostawca może być wywołanie tej funkcji, jeśli dostawca trzeba wykonywać dodatkowe zadania generować zdarzenia. W takim przypadku wywoływania tej funkcji należy najpierw może zapisać zasobów i czasu."
  syntax:
    content: public bool IsEnabled ();
    parameters: []
    return:
      type: System.Boolean
      description: "Jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeżeli dostawca jest włączony do dowolnej sesji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.Eventing.EventProvider.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)
  id: IsEnabled(System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: IsEnabled(Byte,Int64)
  nameWithType: EventProvider.IsEnabled(Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled(Byte,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Określa, czy dowolnej sesji żąda określonego zdarzenia od dostawcy."
  remarks: "Zazwyczaj dostawcy nie wywołuje tę metodę, aby określić, czy sesja wymagane określone zdarzenie; Dostawca po prostu zapisuje zdarzenia i ETW Określa, czy zdarzenie jest rejestrowane w sesji. Dostawca może być wywołanie tej funkcji, jeśli dostawca trzeba wykonywać dodatkowe zadania generować zdarzenia. W takim przypadku wywoływania tej funkcji, aby ustalić, w przypadku sesji żądane zdarzenie, może zapisać zasobów i czasu."
  syntax:
    content: public bool IsEnabled (byte level, long keywords);
    parameters:
    - id: level
      type: System.Byte
      description: "Poziom szczegółowości w zdarzeniu."
    - id: keywords
      type: System.Int64
      description: "Maska bitowa, która określa kategorię zdarzenia. Ta maska powinna być tej samej maski — słowo kluczowe, który jest zdefiniowany w manifeście dla zdarzenia."
    return:
      type: System.Boolean
      description: "Jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli dowolnej sesji żąda określonego zdarzenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.Eventing.EventProvider.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)
  id: SetActivityId(System.Guid@)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: SetActivityId(Guid)
  nameWithType: EventProvider.SetActivityId(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.SetActivityId(Guid)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Ustawia bieżący identyfikator działania używany przez <xref:System.Diagnostics.Eventing.EventProvider.WriteEvent*>metody.</xref:System.Diagnostics.Eventing.EventProvider.WriteEvent*>"
  remarks: "Identyfikator jest przechowywana w kontekście wątku.       Należy pamiętać, że w wersji 3.5 .NET framework, trzeba było ustawić `id` parametr tej metody i <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>wartości właściwości do tej samej wartości identyfikatora.</xref:System.Diagnostics.CorrelationManager.ActivityId%2A> Jednak w wersji 4.0 w ramach metody SetActivityId automatycznie ustawia identyfikator korelacji działania dla Ciebie.       To jest metodą statyczną."
  syntax:
    content: public static void SetActivityId (ref Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "Identyfikator unikatowy który <xref:System.Diagnostics.Eventing.EventProvider.CreateActivityId*>Metoda zwraca.</xref:System.Diagnostics.Eventing.EventProvider.CreateActivityId*>"
  overload: System.Diagnostics.Eventing.EventProvider.SetActivityId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteEvent(EventDescriptor,Object[])
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Zapisuje zdarzenie. Dane zdarzenia jest określony jako tablica obiektów."
  remarks: "Jeśli należy wywołać <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>metodę, aby określić identyfikator działania dla zdarzenia, ta metoda pobiera identyfikator w kontekście wątku i zawiera ona ze zdarzeniem.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>       Jeśli typ obiektu nie jest obsługiwana, metoda zapisuje wartość obiektu <xref:System.Object.ToString%2A?displayProperty=fullName>metody w ładunku.</xref:System.Object.ToString%2A?displayProperty=fullName> Aby uzyskać listę obsługiwanych typów obiektów Zobacz uwagi dla <xref:System.Diagnostics.Eventing.EventProvider>klasy.</xref:System.Diagnostics.Eventing.EventProvider>"
  example:
  - "```  \nprivate static Guid providerId = new Guid(\"{FB33FDA8-45FB-4df0-8A55-EEB4BA88E7E7}\");  \n  \nenum Keyword  \n{  \n    Read = 0x1,  \n    Write = 0x2,  \n    Local = 0x4,  \n    Remote = 0x8  \n}  \n  \nenum Level  \n{  \n    Critical = 1,  \n    Error,  \n    Warning,  \n    Information,  \n    Verbose  \n}  \n  \n    EventProvider provider = new EventProvider(providerId);  \n    EventDescriptor readEvent;  \n    string path = @\"<PATHGOESHERE>\";  \n    UInt64 bytesRead = <ASSIGNVALUE>;  \n  \n    if (provider.IsEnabled(Level.Information, (long)Keyword.Read))  \n    {  \n        unchecked  \n        {  \n            readEvent = new EventDescriptor(0x1, 0x0, 0x10, 0x4, 0x0, 0x0, (long)0x8000000000000005);  \n        }  \n  \n        if (!provider.WriteEvent(ref readEvent, new object[] { path, bytesRead }))  \n            Console.WriteLine(EventProvider.GetLastWriteEventError());  \n    }  \n  \n    provider.Close();  \n```"
  syntax:
    content: public bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, object[] eventPayload);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Wystąpienie <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> , które identyfikują zdarzenia w celu zapisu."
    - id: eventPayload
      type: System.Object[]
      description: "Tablica obiektów, które zawierają dane zdarzeń do zapisania. Obiekt musi być w kolejności określonej w manifeście. Tablica jest ograniczone do 32 obiektów, w których tylko osiem może być ciągami. Maksymalnego rozmiaru danych zdarzenia jest ograniczony do 64 KB minus rozmiar nagłówków zdarzeń. Rozmiar zdarzenia jest mniejszy, jeśli sesji rozmiar buforu jest mniejszy, a sesja zawiera elementy danych rozszerzonych ze zdarzeniem.       Ten parametr może mieć wartości null."
    return:
      type: System.Boolean
      description: "Jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli zdarzenie jest zapisywane w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. W przypadku wartości FAŁSZ wywołać &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; metodę, aby ustalić przyczynę niepowodzenia."
  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> eventPayload </code> Parametr zawiera zbyt wiele obiektów lub ciągów."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteEvent(EventDescriptor,String)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Zapisuje zdarzenie. Dane zdarzenia jest określony jako ciąg."
  remarks: "Jeśli należy wywołać <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>metodę, aby określić identyfikator działania dla zdarzenia, ta metoda pobiera identyfikator w kontekście wątku i zawiera ona ze zdarzeniem.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>       Maksymalna długość ciągu jest ograniczona do 64 KB minus rozmiar nagłówków zdarzeń. Rozmiar zdarzenia jest mniejszy, jeśli sesji rozmiar buforu jest mniejszy, a sesja zawiera elementy danych rozszerzonych ze zdarzeniem."
  example:
  - "```  \nprivate static Guid providerId = new Guid(\"{FB33FDA8-45FB-4df0-8A55-EEB4BA88E7E7}\");  \n  \nEventProvider provider = new EventProvider(providerId);  \nEventDescriptor writeEvent;  \n  \nif (provider.IsEnabled())  \n{  \n     unchecked  \n     {  \n          writeEvent = new EventDescriptor(0x2, 0x0, 0x10, 0x3, 0x0, 0x0, (long)0x8000000000000006);  \n     }  \n  \n     if (!provider.WriteEvent(ref writeEvent, \"Write event.\"))  \n          Console.WriteLine(EventProvider.GetLastWriteEventError());  \n}  \n  \nprovider.Close();  \n```"
  syntax:
    content: public bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, string data);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Wystąpienie <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> , które identyfikują zdarzenia w celu zapisu."
    - id: data
      type: System.String
      description: "Ciąg do zapisania jako dane zdarzenia."
    return:
      type: System.Boolean
      description: "Jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli zdarzenie jest zapisywane w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. W przypadku wartości FAŁSZ wywołać &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; metodę, aby ustalić przyczynę niepowodzenia."
  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If <code>data</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteEvent(EventDescriptor,Int32,IntPtr)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Zapisuje zdarzenie. Dane zdarzenia jest określony jako bloku pamięci."
  remarks: "Jeśli należy wywołać <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>metodę, aby określić identyfikator działania dla zdarzenia, ta metoda pobiera identyfikator w kontekście wątku i zawiera ona ze zdarzeniem.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>"
  syntax:
    content: protected bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, int dataCount, IntPtr data);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Wystąpienie <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> , które identyfikują zdarzenia w celu zapisu."
    - id: dataCount
      type: System.Int32
      description: "Rozmiar danych zdarzeń, do których `data` punktów parametru. Zdarzenie maksymalny rozmiar danych jest ograniczony do 64 KB minus rozmiar nagłówków zdarzeń. Rozmiar zdarzenia jest mniejszy, jeśli sesji rozmiar buforu jest mniejszy, a sesja zawiera elementy danych rozszerzonych ze zdarzeniem."
    - id: data
      type: System.IntPtr
      description: "Wskaźnik do zapisu danych zdarzenia."
    return:
      type: System.Boolean
      description: "Jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli zdarzenie jest zapisywane w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. W przypadku wartości FAŁSZ wywołać &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; metodę, aby ustalić przyczynę niepowodzenia."
  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)
  id: WriteMessageEvent(System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteMessageEvent(String)
  nameWithType: EventProvider.WriteMessageEvent(String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Zapisuje zdarzenie zawiera ciąg jako jego dane."
  remarks: "Maksymalna długość ciągu jest ograniczona do 64 KB minus rozmiar nagłówków zdarzeń. Rozmiar zdarzenia jest mniejszy, jeśli sesji rozmiar buforu jest mniejszy, a sesja zawiera elementy danych rozszerzonych ze zdarzeniem."
  example:
  - "```  \nif (!provider.WriteMessageEvent(\"Event string.\"))  \n    Console.WriteLine(EventProvider.GetLastWriteEventError());  \n```"
  syntax:
    content: public bool WriteMessageEvent (string eventMessage);
    parameters:
    - id: eventMessage
      type: System.String
      description: "Ciąg do zapisania jako dane zdarzenia."
    return:
      type: System.Boolean
      description: "Jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli zdarzenie jest zapisywane w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. W przypadku wartości FAŁSZ wywołać &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; metodę, aby ustalić przyczynę niepowodzenia."
  overload: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If <code>eventMessage</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)
  id: WriteMessageEvent(System.String,System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteMessageEvent(String,Byte,Int64)
  nameWithType: EventProvider.WriteMessageEvent(String,Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String,Byte,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Zapisuje zdarzenie zawiera ciąg jako jego dane, jeśli wartość poziomu i słowo kluczowe odpowiada zażądał sesji zdarzeń."
  remarks: "Maksymalna długość ciągu jest ograniczona do 64 KB minus rozmiar nagłówków zdarzeń. Rozmiar zdarzenia jest mniejszy, jeśli sesji rozmiar buforu jest mniejszy, a sesja zawiera elementy danych rozszerzonych ze zdarzeniem."
  example:
  - "```  \n// Calling this method with level and keyword set to zero is the same  \n// as calling WriteMessageEvent(string); the event is always written.  \nif (!provider.WriteMessageEvent(\"Event string.\", 0, 0))  \n    Console.WriteLine(EventProvider.GetLastWriteEventError());  \n  \n// Event is written if the level value of the session is less than or equal to 3, and bit 1 of the session  \n// keyword bit-mask is set.  \nif (!provider.WriteMessageEvent(\"Event string.\", 3, 2))  \n    Console.WriteLine(EventProvider.GetLastWriteEventError());  \n```"
  syntax:
    content: public bool WriteMessageEvent (string eventMessage, byte eventLevel, long eventKeywords);
    parameters:
    - id: eventMessage
      type: System.String
      description: "Ciąg do zapisania jako dane zdarzenia."
    - id: eventLevel
      type: System.Byte
      description: "Poziom szczegółowości w zdarzeniu. Jeśli dostawca używa manifestu w celu zdefiniowania zdarzenia, ta wartość do tego samego poziomu zdefiniowane w manifeście."
    - id: eventKeywords
      type: System.Int64
      description: "Maska bitowa, która określa kategorię zdarzenia. Jeśli dostawca używa manifestu w celu zdefiniowania zdarzenia, ta wartość tej samej maski — słowo kluczowe zdefiniowane w manifeście."
    return:
      type: System.Boolean
      description: "Jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli zdarzenie jest zapisywane w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. W przypadku wartości FAŁSZ wywołać &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; metodę, aby ustalić przyczynę niepowodzenia."
  overload: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If <code>eventMessage</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  id: WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteTransferEvent(EventDescriptor,Guid,Object[])
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Zdarzenia łącza razem, gdy Śledzenie zdarzeń w scenariuszu end-to-end. Dane zdarzenia jest określony jako tablica obiektów."
  remarks: "Metoda używa Identyfikatora aktywności w kontekście wątku do identyfikowania tego składnika. Aby ustawić identyfikator działania, należy wywołać <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>metody.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>       Jeśli używasz <xref:System.Diagnostics.Trace>Klasa, nie należy używać <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>metodę, aby określić działanie identyfikatora</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A> </xref:System.Diagnostics.Trace> Zamiast tego dostępu <xref:System.Diagnostics.Trace.CorrelationManager%2A>właściwości do pobrania <xref:System.Diagnostics.CorrelationManager>obiektu.</xref:System.Diagnostics.CorrelationManager> </xref:System.Diagnostics.Trace.CorrelationManager%2A> Następnie ustaw <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>dla właściwości działania identyfikatora.</xref:System.Diagnostics.CorrelationManager.ActivityId%2A> Należy także ustawić `relatedActivityId` do <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>wartość.</xref:System.Diagnostics.CorrelationManager.ActivityId%2A>"
  syntax:
    content: public bool WriteTransferEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, Guid relatedActivityId, object[] eventPayload);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Wystąpienie <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> , które identyfikują zdarzenia w celu zapisu."
    - id: relatedActivityId
      type: System.Guid
      description: "Identyfikator działania z poprzedniego składnika. Użyj tego parametru, aby połączyć zdarzenia poprzedni składnik zdarzenia danego składnika."
    - id: eventPayload
      type: System.Object[]
      description: "Tablica obiektów, które zawierają dane zdarzeń do zapisania. Dane muszą być w kolejności określonej w manifeście. Tablica jest ograniczone do 32 obiektów, w których tylko osiem może być ciągami. Maksymalnego rozmiaru danych zdarzenia jest ograniczony do 64 KB minus rozmiar nagłówków zdarzeń. Rozmiar zdarzenia jest mniejszy, jeśli sesji rozmiar buforu jest mniejszy, a sesja zawiera elementy danych rozszerzonych ze zdarzeniem."
    return:
      type: System.Boolean
      description: "Jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli zdarzenie jest zapisywane w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. W przypadku wartości FAŁSZ wywołać <xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>metodę, aby ustalić przyczynę niepowodzenia.</xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>"
  overload: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Jeśli <code> eventPayload </code> zawiera zbyt wiele obiektów lub ciągów."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  id: WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Zdarzenia łącza razem, gdy Śledzenie zdarzeń w scenariuszu end-to-end. Dane zdarzenia jest określony jako bloku pamięci."
  remarks: "Metoda używa Identyfikatora aktywności w kontekście wątku do identyfikowania tego składnika. Aby ustawić identyfikator działania, należy wywołać <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>metody.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>"
  syntax:
    content: protected bool WriteTransferEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, Guid relatedActivityId, int dataCount, IntPtr data);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Wystąpienie <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> , które identyfikują zdarzenia w celu zapisu."
    - id: relatedActivityId
      type: System.Guid
      description: "Identyfikator działania z poprzedniego składnika. Użyj tego parametru, aby połączyć zdarzenia poprzedni składnik zdarzenia danego składnika."
    - id: dataCount
      type: System.Int32
      description: "Rozmiar danych zdarzeń, do których `data` punktów parametru. Zdarzenie maksymalny rozmiar danych jest ograniczony do 64 KB minus rozmiar nagłówków zdarzeń. Rozmiar zdarzenia jest mniejszy, jeśli sesji rozmiar buforu jest mniejszy, a sesja zawiera elementy danych rozszerzonych ze zdarzeniem."
    - id: data
      type: System.IntPtr
      description: "Wskaźnik do zapisu danych zdarzenia."
    return:
      type: System.Boolean
      description: "Jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli zdarzenie jest zapisywane w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. W przypadku wartości FAŁSZ wywołać <xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>metodę, aby ustalić przyczynę niepowodzenia.</xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>"
  overload: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InsufficientMemoryException
  parent: System
  isExternal: false
  name: InsufficientMemoryException
  nameWithType: InsufficientMemoryException
  fullName: System.InsufficientMemoryException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: EventProvider(Guid)
  nameWithType: EventProvider.EventProvider(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.EventProvider(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.Eventing.EventProvider.Close
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Close()
  nameWithType: EventProvider.Close()
  fullName: System.Diagnostics.Eventing.EventProvider.Close()
- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: CreateActivityId()
  nameWithType: EventProvider.CreateActivityId()
  fullName: System.Diagnostics.Eventing.EventProvider.CreateActivityId()
- uid: System.Diagnostics.Eventing.EventProvider.Dispose
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Dispose()
  nameWithType: EventProvider.Dispose()
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose()
- uid: System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventProvider.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.EventProvider.Finalize
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Finalize()
  nameWithType: EventProvider.Finalize()
  fullName: System.Diagnostics.Eventing.EventProvider.Finalize()
- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: GetLastWriteEventError()
  nameWithType: EventProvider.GetLastWriteEventError()
  fullName: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError()
- uid: System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode
  parent: System.Diagnostics.Eventing
  isExternal: false
  name: EventProvider+WriteEventErrorCode
  nameWithType: EventProvider+WriteEventErrorCode
  fullName: System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: IsEnabled()
  nameWithType: EventProvider.IsEnabled()
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled()
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: IsEnabled(Byte,Int64)
  nameWithType: EventProvider.IsEnabled(Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled(Byte,Int64)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: SetActivityId(Guid)
  nameWithType: EventProvider.SetActivityId(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.SetActivityId(Guid)
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent(EventDescriptor,Object[])
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Object[])
- uid: System.Diagnostics.Eventing.EventDescriptor
  parent: System.Diagnostics.Eventing
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.Diagnostics.Eventing.EventDescriptor
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent(EventDescriptor,String)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent(EventDescriptor,Int32,IntPtr)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteMessageEvent(String)
  nameWithType: EventProvider.WriteMessageEvent(String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String)
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteMessageEvent(String,Byte,Int64)
  nameWithType: EventProvider.WriteMessageEvent(String,Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String,Byte,Int64)
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteTransferEvent(EventDescriptor,Guid,Object[])
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
- uid: System.Diagnostics.Eventing.EventProvider.#ctor*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: EventProvider
  nameWithType: EventProvider.EventProvider
- uid: System.Diagnostics.Eventing.EventProvider.Close*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Close
  nameWithType: EventProvider.Close
- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: CreateActivityId
  nameWithType: EventProvider.CreateActivityId
- uid: System.Diagnostics.Eventing.EventProvider.Dispose*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Dispose
  nameWithType: EventProvider.Dispose
- uid: System.Diagnostics.Eventing.EventProvider.Finalize*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Finalize
  nameWithType: EventProvider.Finalize
- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: GetLastWriteEventError
  nameWithType: EventProvider.GetLastWriteEventError
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: IsEnabled
  nameWithType: EventProvider.IsEnabled
- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: SetActivityId
  nameWithType: EventProvider.SetActivityId
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent
  nameWithType: EventProvider.WriteEvent
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteMessageEvent
  nameWithType: EventProvider.WriteMessageEvent
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteTransferEvent
  nameWithType: EventProvider.WriteTransferEvent
