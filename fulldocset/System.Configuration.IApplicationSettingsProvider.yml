### YamlMime:ManagedReference
items:
- uid: System.Configuration.IApplicationSettingsProvider
  id: IApplicationSettingsProvider
  children:
  - System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: IApplicationSettingsProvider
  nameWithType: IApplicationSettingsProvider
  fullName: System.Configuration.IApplicationSettingsProvider
  type: Interface
  summary: "Definiuje rozszerzone możliwości dostawców ustawień aplikacji klienckich."
  remarks: "Architektura ustawień aplikacji umożliwia podanie przez tworzenie dostawcy ustawienia niestandardowe, które jest klasą pochodną <xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider> mechanizm magazynu niestandardowego dla ustawień aplikacji Taka klasa zawiera podstawowe funkcje do przechowywania i pobierania właściwości. Jednak możesz dodać dodatkowe funkcje standardowej zaimplementowanie interfejsu IApplicationSettingsProvider w dostawcy ustawienia niestandardowe. Ten interfejs zawiera trzy metody, które przede wszystkim włączenia ustawień dostawcy na bardziej inteligentnie uchwyt zmiany wersji aplikacji. Zazwyczaj dostawca ustawień zapisze ustawienia aplikacji dla różnych wersji aplikacji osobno w celu przewidywania w następujących przypadkach:-Side-by-side wykonywanie różnych wersji aplikacji.      — Zachowywanie ustawień aplikacji, podczas uaktualniania aplikacji.      -Resetowanie ustawień aplikacji do wartości domyślnych dla aktualnie używanej wersji.       <xref:System.Configuration.LocalFileSettingsProvider>Klasa implementuje interfejs IApplicationSettingsProvider.</xref:System.Configuration.LocalFileSettingsProvider> Ten sam zestaw metod zawarty w IApplicationSettingsProvider znajduje się również w <xref:System.Configuration.ApplicationSettingsBase>klasy umożliwiające określenie kanał komunikacji wstępnie zdefiniowanych między otoki ustawienia aplikacji, a jego dostawcą ustawień.</xref:System.Configuration.ApplicationSettingsBase>      > [!NOTE] > Ten interfejs jest opcjonalne. Dostawca nie implementuje ten interfejs, infrastruktury ustawienia zakończy się niepowodzeniem bez powiadomienia. Jeśli podejmuje próbę uzyskania dostępu do dowolnej z metod zdefiniowany przez ten interfejs."
  syntax:
    content: public interface IApplicationSettingsProvider
  implements: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Zwraca wartość właściwości określonych ustawień w poprzedniej wersji tej samej aplikacji."
  remarks: "Metoda GetPreviousVersion w połączeniu z <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>metodę, aby przeprowadzić migrację ustawień aplikacji, podczas lub po zainstalowaniu nowej wersji aplikacji.</xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> opisujące bieżącego użycia aplikacji."
    - id: property
      type: System.Configuration.SettingsProperty
      description: "<xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> Którego wartość jest zwracana."
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> zawierający wartość określonej właściwości ustawienia jako ostatnia została ustawiona w poprzedniej wersji tej aplikacji; lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli ustawienia nie można odnaleźć."
  overload: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Resetuje ustawienia aplikacji skojarzonych z określoną aplikacją do wartości domyślnych."
  remarks: "Metoda Reset ponownie inicjuje przechowywane wartości grupy ustawień określonej aplikacji. Z kolei <xref:System.Configuration.DefaultSettingValueAttribute>dostarcza wartość domyślną dla pojedynczego ustawienia właściwości podczas inicjowania właściwości, jeśli go nie ma przechowywanej wartości.</xref:System.Configuration.DefaultSettingValueAttribute>       Dostawca ustawień określa rozsądne wartości domyślne są dla określonej grupy ustawień aplikacji. Na przykład do implementacji w <xref:System.Configuration.LocalFileSettingsProvider>Resetuje ustawienia zakresu użytkownika do ich wartości udostępnionych w `application.exe.config` pliku; natomiast pozostawia ustawienia zakresu aplikacji bez zmian.</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> opisujące bieżącego użycia aplikacji."
  overload: System.Configuration.IApplicationSettingsProvider.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Wskazuje, aby dostawca aplikacji został uaktualniony. Dostawca to oferuje możliwość uaktualnienia jego przechowywane ustawienia zgodnie z potrzebami."
  remarks: ".NET Framework umożliwia side-by-side instalacji i uruchamiania różne wersje tej samej aplikacji. Dostawca ustawień aplikacji przechowuje ustawienia aplikacji dla każdej wersji aplikacji osobno w celu zapewnienia izolacji. Można przeprowadzić migrację ustawień z poprzedniej wersji aplikacji do bieżącej. Do tej funkcji migracji, użyj metody uaktualniania, zaimplementowana w klasie pochodnej z <xref:System.Configuration.SettingsProvider>.</xref:System.Configuration.SettingsProvider>       Metoda uaktualnienia można użyć w połączeniu z <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>metodę, aby przeprowadzić migrację ustawień aplikacji, podczas lub po zainstalowaniu nowej wersji aplikacji.</xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A>       Ta metoda ma być pomijana dla każdej aplikacji ustawienie <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>jest stosowane do niej, lub do całej klasy otoki ustawień, pochodną <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.NoSettingsVersionUpgradeAttribute>"
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> opisujące bieżącego użycia aplikacji."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> zawierający grupę właściwość ustawienia, których wartości mają zostać pobrane."
  overload: System.Configuration.IApplicationSettingsProvider.Upgrade*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: IApplicationSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.IApplicationSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.IApplicationSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.IApplicationSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: IApplicationSettingsProvider.GetPreviousVersion
- uid: System.Configuration.IApplicationSettingsProvider.Reset*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: IApplicationSettingsProvider.Reset
- uid: System.Configuration.IApplicationSettingsProvider.Upgrade*
  parent: System.Configuration.IApplicationSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: IApplicationSettingsProvider.Upgrade
