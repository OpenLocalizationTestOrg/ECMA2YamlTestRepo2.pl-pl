### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.StringCollection
  id: StringCollection
  children:
  - System.Collections.Specialized.StringCollection.#ctor
  - System.Collections.Specialized.StringCollection.Add(System.String)
  - System.Collections.Specialized.StringCollection.AddRange(System.String[])
  - System.Collections.Specialized.StringCollection.Clear
  - System.Collections.Specialized.StringCollection.Contains(System.String)
  - System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)
  - System.Collections.Specialized.StringCollection.Count
  - System.Collections.Specialized.StringCollection.GetEnumerator
  - System.Collections.Specialized.StringCollection.IndexOf(System.String)
  - System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)
  - System.Collections.Specialized.StringCollection.IsReadOnly
  - System.Collections.Specialized.StringCollection.IsSynchronized
  - System.Collections.Specialized.StringCollection.Item(System.Int32)
  - System.Collections.Specialized.StringCollection.Remove(System.String)
  - System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)
  - System.Collections.Specialized.StringCollection.SyncRoot
  - System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize
  - System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
  type: Class
  summary: "Reprezentuje kolekcję ciągów."
  remarks: "Akceptuje StringCollection `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.       Porównywanie ciągów jest rozróżniana wielkość liter.       Elementy w tej kolekcji jest możliwy przy użyciu indeksu liczby całkowitej.  Indeksy w tej kolekcji jest liczony od zera."
  example:
  - "The following code example demonstrates several of the properties and methods of StringCollection.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollection2#1](~/add/codesnippet/cpp/t-system.collections.spe_2_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollection2#1](~/add/codesnippet/csharp/t-system.collections.spe_2_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollection2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_2_1.vb)]"
  syntax:
    content: 'public class StringCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: StringCollection()
  nameWithType: StringCollection.StringCollection()
  fullName: System.Collections.Specialized.StringCollection.StringCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> klasy."
  remarks: "Ten konstruktor jest operacją O(1)."
  syntax:
    content: public StringCollection ();
    parameters: []
  overload: System.Collections.Specialized.StringCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: StringCollection.Add(String)
  fullName: System.Collections.Specialized.StringCollection.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Dodaje ciąg do końca <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection>akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</xref:System.Collections.Specialized.StringCollection>       Jeśli <xref:System.Collections.Specialized.StringCollection.Count%2A>jest mniejsza niż pojemność, ta metoda jest operacją O(1).</xref:System.Collections.Specialized.StringCollection.Count%2A> Jeśli pojemność wymaga zwiększenia w celu uwzględnienia nowego elementu, ta metoda staje się O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/cpp/m-system.collections.spe_39_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/csharp/m-system.collections.spe_39_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.collections.spe_39_1.vb)]"
  syntax:
    content: public int Add (string value);
    parameters:
    - id: value
      type: System.String
      description: "Ciąg do dodania na koniec <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Liczony od zera indeks, w którym zostanie wstawiony nowego elementu."
  overload: System.Collections.Specialized.StringCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.AddRange(System.String[])
  id: AddRange(System.String[])
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: AddRange(String[])
  nameWithType: StringCollection.AddRange(String[])
  fullName: System.Collections.Specialized.StringCollection.AddRange(String[])
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopiuje elementy tablicy ciągów na końcu <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection>akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</xref:System.Collections.Specialized.StringCollection>       Jeśli <xref:System.Collections.Specialized.StringCollection>może obsłużyć nowych elementów bez zwiększanie pojemności, ta metoda jest O (`n`) operację, której `n` jest liczba elementów do dodania.</xref:System.Collections.Specialized.StringCollection> Jeśli pojemność wymaga zwiększenia w celu uwzględnienia nowych elementów, ta metoda staje się O (`n` + `m`) operację, której `n` jest liczba elementów do dodania i `m` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/cpp/m-system.collections.spe_4_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/csharp/m-system.collections.spe_4_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.collections.spe_4_1.vb)]"
  syntax:
    content: public void AddRange (string[] value);
    parameters:
    - id: value
      type: System.String[]
      description: "Tablica ciągów do dodania na koniec <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Sam tablicy nie może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , ale może zawierać elementy, które są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Clear
  id: Clear
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: StringCollection.Clear()
  fullName: System.Collections.Specialized.StringCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Usuwa wszystkie ciągi z <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection.Count%2A>jest ustawiany na zero, a ponadto są również zwalniane odwołania do innych obiektów z elementów kolekcji.</xref:System.Collections.Specialized.StringCollection.Count%2A>       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_2_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_2_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_2_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.Specialized.StringCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: StringCollection.Contains(String)
  fullName: System.Collections.Specialized.StringCollection.Contains(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Określa, czy podany ciąg w <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Metoda zawiera można potwierdzić obecność ciąg przed wykonaniem dalszych czynności.       Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> Porównywanie ciągów jest rozróżniana wielkość liter.       Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       Począwszy od programu .NET Framework 2.0, ta metoda używa kolekcji obiektów <xref:System.Object.Equals%2A>i <xref:System.IComparable.CompareTo%2A>metody `item` ustalenie, czy element istnieje.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A>i <xref:System.IComparable.CompareTo%2A>metody `item` parametrów dla obiektów w kolekcji.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/csharp/m-system.collections.spe_28_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/cpp/m-system.collections.spe_28_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_28_1.vb)]"
  syntax:
    content: public bool Contains (string value);
    parameters:
    - id: value
      type: System.String
      description: "Ciąg do zlokalizowania w <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value</code> is found in the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Collections.Specialized.StringCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: StringCollection.CopyTo(String[],Int32)
  fullName: System.Collections.Specialized.StringCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopiuje całą <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> wartości Jednowymiarowa tablica ciągów, zaczynając od określonego indeksu tablicy docelowej."
  remarks: "Określona tablica musi być zgodne z typem.       Elementy są kopiowane do <xref:System.Array>w tej samej kolejności, w którym element wyliczający <xref:System.Collections.Specialized.StringCollection>iteruje <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> </xref:System.Array>       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/csharp/6398d0a9-11dc-4566-8dea-_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/cpp/6398d0a9-11dc-4566-8dea-_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/visualbasic/6398d0a9-11dc-4566-8dea-_1.vb)]"
  syntax:
    content: public void CopyTo (string[] array, int index);
    parameters:
    - id: array
      type: System.String[]
      description: "Jednowymiarowa tablica ciągów, która jest miejscem docelowym elementów kopiowanych z <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. <xref:System.Array>Musi mieć indeksowania liczony od zera.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w `array` od rozpoczyna się kopiowanie które."
  overload: System.Collections.Specialized.StringCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>jest wielowymiarowy.       - lub - liczba elementów w źródle <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> jest większa niż dostępne miejsce od <code>index</code> do końca tablicy docelowej <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typ źródła <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> nie można automatycznie rzutować na typ docelowy <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Count
  id: Count
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Count
  nameWithType: StringCollection.Count
  fullName: System.Collections.Specialized.StringCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera liczbę ciągów zawartych w <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Pobieranie wartości tej właściwości jest operacją O(1)."
  example:
  - "The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/csharp/p-system.collections.spe_15_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/cpp/p-system.collections.spe_15_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/visualbasic/p-system.collections.spe_15_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Liczbę ciągów zawartych w <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: StringCollection.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Zwraca <xref href=&quot;System.Collections.Specialized.StringEnumerator&quot;> </xref> który iteruje <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "[Visual Basic, C#]       `foreach` Instrukcji języka C# (`for each` w języku Visual Basic) ukrywa złożoność wyliczenia.  W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.       Moduły wyliczające może służyć do odczytywania danych w kolekcji, ale nie może służyć do modyfikowania kolekcji źródłowej.       Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji. <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>również wprowadzono moduł wyliczający wróć do tej pozycji.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A>  W tym miejscu <xref:System.Collections.Specialized.StringEnumerator.Current%2A>jest niezdefiniowany.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> W związku z tym należy wywołać <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytaniem wartość <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       <xref:System.Collections.Specialized.StringEnumerator.Current%2A>zwraca ten sam obiekt do momentu <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>lub <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>jest wywoływana.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A></xref:System.Collections.Specialized.StringEnumerator.Current%2A> <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>Ustawia <xref:System.Collections.Specialized.StringEnumerator.Current%2A>do następnego elementu.</xref:System.Collections.Specialized.StringEnumerator.Current%2A></xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Jeśli <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>zwraca `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>zwracają również `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Jeśli przez ostatnie wywołanie <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>zwrócił `false`, <xref:System.Collections.Specialized.StringEnumerator.Current%2A>jest niezdefiniowany.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Aby ustawić <xref:System.Collections.Specialized.StringEnumerator.Current%2A>pierwszy element w kolekcji, należy wywołać, <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>następuje <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.Current%2A>       Moduł wyliczający pozostaje ważny tak długo, jak kolekcji pozostaje niezmieniona. Jeśli wprowadzono zmiany w kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie nieważne i jego zachowanie jest niezdefiniowana.       Moduł wyliczający nie ma wyłączny dostęp do kolekcji; w związku z tym wyliczania kolekcji leżą nie jest bezpieczne procedury wątku.  W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, można zablokować kolekcję podczas całej wyliczenia.  Aby zezwolić na dostęp przez wiele wątków do odczytu i zapisu do kolekcji, musi implementować własne synchronizacji.       Ta metoda jest operacją O(1)."
  syntax:
    content: public System.Collections.Specialized.StringEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Specialized.StringEnumerator
      description: "A <xref href=&quot;System.Collections.Specialized.StringEnumerator&quot;></xref> for the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>."
  overload: System.Collections.Specialized.StringCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: StringCollection.IndexOf(String)
  fullName: System.Collections.Specialized.StringCollection.IndexOf(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Wyszukuje określony ciąg i zwraca liczony od zera indeks pierwszego wystąpienia w <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> Porównywanie ciągów jest rozróżniana wielkość liter.       Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       Począwszy od programu .NET Framework 2.0, ta metoda używa kolekcji obiektów <xref:System.Object.Equals%2A>i <xref:System.IComparable.CompareTo%2A>metody `item` ustalenie, czy element istnieje.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A>i <xref:System.IComparable.CompareTo%2A>metody `item` parametrów dla obiektów w kolekcji.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/csharp/m-system.collections.spe_7_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/cpp/m-system.collections.spe_7_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_7_1.vb)]"
  syntax:
    content: public int IndexOf (string value);
    parameters:
    - id: value
      type: System.String
      description: "Ciąg do zlokalizowania. Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Liczony od zera indeks pierwszego wystąpienia <code> value </code> w <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>, jeśli je znaleziono; w przeciwnym razie wartość -1."
  overload: System.Collections.Specialized.StringCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Insert(Int32,String)
  nameWithType: StringCollection.Insert(Int32,String)
  fullName: System.Collections.Specialized.StringCollection.Insert(Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Wstawia ciąg do <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> pod określonym indeksem."
  remarks: "Zduplikowane parametry są dozwolone w <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection>       Jeśli `index` jest równa <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` zostanie dodany na końcu <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       W kolekcji elementów ciągłym takie jak listy, elementy, które należy wykonać punkt wstawiania Przenieś w dół do uwzględnienia nowego elementu. Jeśli kolekcja jest indeksowana, również są aktualizowane indeksów elementów, które są przenoszone. To zachowanie nie ma zastosowania do kolekcji, której elementy koncepcyjnie są zgrupowane w pakiety, takich jak tablicy skrótów.       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/cpp/5308ad74-fbfb-4390-83de-_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/csharp/5308ad74-fbfb-4390-83de-_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/visualbasic/5308ad74-fbfb-4390-83de-_1.vb)]"
  syntax:
    content: public void Insert (int index, string value);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks, w którym `value` jest wstawiany."
    - id: value
      type: System.String
      description: "Ciąg do wstawienia. Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera.       - lub - <code>index</code> większa niż <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: StringCollection.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> jest tylko do odczytu."
  remarks: "<xref:System.Collections.Specialized.StringCollection>implementuje właściwości IsReadOnly, ponieważ jest to wymagane przez <xref:System.Collections.IList?displayProperty=fullName>interfejsu.</xref:System.Collections.IList?displayProperty=fullName></xref:System.Collections.Specialized.StringCollection>       Kolekcja, która jest tylko do odczytu uniemożliwia dodawania, usuwania lub modyfikowania elementów po utworzeniu kolekcji.       Kolekcja, która jest tylko do odczytu jest po prostu kolekcji z otoką, co uniemożliwia ich modyfikowania kolekcji; w związku z tym jeśli wprowadzono zmiany w źródłowej kolekcji, kolekcji tylko do odczytu odzwierciedla te zmiany.       A <xref:System.Collections.Specialized.StringCollection>wystąpienia zawsze jest zapisywalna.</xref:System.Collections.Specialized.StringCollection>       Pobieranie wartości tej właściwości jest operacją O(1)."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Ta właściwość zawsze zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: StringCollection.IsSynchronized
  fullName: System.Collections.Specialized.StringCollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartość wskazującą czy uzyskują dostęp do <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> jest synchronizowane (wielowątkowość)."
  remarks: "<xref:System.Collections.Specialized.StringCollection>implementuje właściwości IsSynchronized, ponieważ jest to wymagane przez <xref:System.Collections.ICollection>interfejsu.</xref:System.Collections.ICollection></xref:System.Collections.Specialized.StringCollection>       Wyliczanie za pomocą kolekcji leżą nie jest procedurą bezpieczne wątku. Nawet jeśli kolekcja jest synchronizowane, inne wątki mogą modyfikować kolekcji, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki.       W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>podczas wyliczania całego: [!code-cpp [System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/cpp/p-system.collections.spe_23_1.cpp)][!code-cs[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/csharp/p-system.collections.spe_23_1.cs)][!code-vb[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/visualbasic/p-system.collections.spe_23_1.vb) ] podczas pobierania wartości tej właściwości jest operacją O(1).    </xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Ta właściwość zawsze zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: StringCollection.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera lub ustawia element pod określonym indeksem."
  remarks: "Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.       <xref:System.Collections.Specialized.StringCollection>akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</xref:System.Collections.Specialized.StringCollection>       W języku C# używa słowa kluczowego do definiowania indeksatory zamiast Implementowanie właściwości elementu. Visual Basic implementuje element jako domyślna właściwość, która zapewnia te same funkcje indeksowania.       Pobieranie wartości tej właściwości jest operacją O(1); Ustawienie właściwości jest również O(1) operacji."
  syntax:
    content: public string this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks wpisu do pobrania lub ustawienia."
    return:
      type: System.String
      description: "Element pod określonym indeksem."
  overload: System.Collections.Specialized.StringCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera.       - lub - <code>index</code> jest równa lub większa niż <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: StringCollection.Remove(String)
  fullName: System.Collections.Specialized.StringCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Usuwa pierwsze wystąpienie określonego ciągu z <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Zduplikowane parametry są dozwolone w <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> Tylko pierwsze wystąpienie zostanie usunięta. Aby usunąć wszystkie wystąpienia określonego ciągu, użyj `RemoveAt(IndexOf(value))` wielokrotnie podczas <xref:System.Collections.Specialized.StringCollection.IndexOf%2A>nie zwraca -1.</xref:System.Collections.Specialized.StringCollection.IndexOf%2A>       Jeśli <xref:System.Collections.Specialized.StringCollection>nie zawiera określonego obiektu <xref:System.Collections.Specialized.StringCollection>pozostaje niezmieniona.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> Nie wyjątek.       W kolekcji sąsiadujących elementów, takich jak listy elementy, które należy wykonać usunięty element Przenieś w górę zajmować vacated miejscu. Jeśli kolekcja jest indeksowana, również są aktualizowane indeksów elementów, które są przenoszone. To zachowanie nie ma zastosowania do kolekcji, której elementy koncepcyjnie są zgrupowane w pakiety, takich jak tablicy skrótów.       Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> Porównywanie ciągów jest rozróżniana wielkość liter.       Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_20_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_20_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_20_1.vb)]"
  syntax:
    content: public void Remove (string value);
    parameters:
    - id: value
      type: System.String
      description: "Ciąg do usunięcia z <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: StringCollection.RemoveAt(Int32)
  fullName: System.Collections.Specialized.StringCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Usuwa ciągu w określonym indeksie <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "W kolekcji sąsiadujących elementów, takich jak listy elementy, które należy wykonać usunięty element Przenieś w górę zajmować vacated miejscu. Jeśli kolekcja jest indeksowana, również są aktualizowane indeksów elementów, które są przenoszone. To zachowanie nie ma zastosowania do kolekcji, której elementy koncepcyjnie są zgrupowane w pakiety, takich jak tablicy skrótów.       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_16_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_16_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_16_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks ciąg do usunięcia."
  overload: System.Collections.Specialized.StringCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera.       - lub - <code>index</code> jest równa lub większa niż <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.SyncRoot
  id: SyncRoot
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: StringCollection.SyncRoot
  fullName: System.Collections.Specialized.StringCollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera obiekt, który może służyć do synchronizujący dostęp do <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Klasy pochodne zapewniają własne zsynchronizowanej wersji <xref:System.Collections.Specialized.StringCollection>za pomocą właściwości SyncRoot.</xref:System.Collections.Specialized.StringCollection> Synchronizowanie kodu musi wykonywać operacje na SyncRoot z <xref:System.Collections.Specialized.StringCollection>, bezpośrednio na <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> Zapewnia to poprawne działanie kolekcje, które pochodzą od innych obiektów. W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <xref:System.Collections.Specialized.StringCollection>obiektu.</xref:System.Collections.Specialized.StringCollection>       Wyliczanie za pomocą kolekcji leżą nie jest procedurą bezpieczne wątku. Nawet jeśli kolekcja jest synchronizowane, inne wątki mogą modyfikować kolekcji, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki.       Poniższy przykład kodu pokazuje, jak można zablokować kolekcji przy użyciu SyncRoot podczas wyliczania całego: [!code-cpp [System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/cpp/p-system.collections.spe_3_1.cpp)][!code-cs[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/csharp/p-system.collections.spe_3_1.cs)][!code-vb[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/visualbasic/p-system.collections.spe_3_1.vb) ] podczas pobierania wartości tej właściwości jest operacją O(1).    "
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Obiekt, który może służyć do synchronizujący dostęp do <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopiuje całą <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> do jednowymiarowego zgodnego <xref:System.Array>, rozpoczynając od określonego indeksu tablicy docelowej.</xref:System.Array>"
  remarks: "Określona tablica musi być zgodne z typem.       Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=fullName>można skopiować elementów.</xref:System.Array.Copy%2A?displayProperty=fullName>       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Jednowymiarowa <xref:System.Array>który jest miejscem docelowym elementów kopiowanych z <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Array> <xref:System.Array>Musi mieć indeksowania liczony od zera.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w `array` od rozpoczyna się kopiowanie które."
  overload: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>jest wielowymiarowy.       - lub - liczba elementów w źródle <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> jest większa niż dostępne miejsce od <code>index</code> do końca tablicy docelowej <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typ źródła <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> nie można automatycznie rzutować na typ docelowy <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Zwraca <xref:System.Collections.IEnumerator>który iteruje <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "[Visual Basic, C#]       `foreach` Instrukcji języka C# (`for each` w języku Visual Basic) ukrywa złożoność wyliczenia.  W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.       Moduły wyliczające może służyć do odczytywania danych w kolekcji, ale nie może służyć do modyfikowania kolekcji źródłowej.       Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji. <xref:System.Collections.IEnumerator.Reset%2A>również wprowadzono moduł wyliczający wróć do tej pozycji.</xref:System.Collections.IEnumerator.Reset%2A> At to pozycja, wywoływania <xref:System.Collections.IEnumerator.Current%2A>zgłasza wyjątek.</xref:System.Collections.IEnumerator.Current%2A> W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A>można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytaniem wartość <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A>lub <xref:System.Collections.IEnumerator.Reset%2A>jest wywoływana.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Ustawia <xref:System.Collections.IEnumerator.Current%2A>do następnego elementu.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A>przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A>zwraca `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.IEnumerator.MoveNext%2A>zwracają również `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Jeśli przez ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A>zwrócił `false`, wywoływania <xref:System.Collections.IEnumerator.Current%2A>zgłasza wyjątek.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Aby ustawić <xref:System.Collections.IEnumerator.Current%2A>pierwszy element w kolekcji, należy wywołać, <xref:System.Collections.IEnumerator.Reset%2A>następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       Moduł wyliczający pozostaje ważny tak długo, jak kolekcji pozostaje niezmieniona. Jeśli wprowadzono zmiany w kolekcji, takich jak dodawanie, modyfikowanie lub usuwanie elementów, spowoduje nieodwracalne unieważnienie modułu wyliczającego i następnego wywołania lub <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>zgłasza <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Jeśli kolekcja jest zmodyfikowany między <xref:System.Collections.IEnumerator.MoveNext%2A>i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>zwraca element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Moduł wyliczający nie ma wyłączny dostęp do kolekcji; w związku z tym wyliczania kolekcji leżą nie jest bezpieczne procedury wątku. Nawet jeśli kolekcja jest synchronizowane, inne wątki mogą modyfikować kolekcji, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki.       Ta metoda jest operacją O(1)."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: StringCollection.System.Collections.IList.Add(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Dodaje obiekt na koniec <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection>akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</xref:System.Collections.Specialized.StringCollection>       Jeśli <xref:System.Collections.Specialized.StringCollection.Count%2A>jest już równa pojemności pojemność <xref:System.Collections.Specialized.StringCollection>zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       Jeśli <xref:System.Collections.Specialized.StringCollection.Count%2A>jest mniejsza niż pojemność, ta metoda jest operacją O(1).</xref:System.Collections.Specialized.StringCollection.Count%2A> Jeśli pojemność wymaga zwiększenia w celu uwzględnienia nowego elementu, ta metoda staje się O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Do dodania na koniec <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "<xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> Indeks, w którym <code> value </code> został dodany."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> Jest tylko do odczytu.       - lub - <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> ma stały rozmiar."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: StringCollection.System.Collections.IList.Contains(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Określa, czy element jest <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       Począwszy od programu .NET Framework 2.0, ta metoda używa kolekcji obiektów <xref:System.Object.Equals%2A>i <xref:System.IComparable.CompareTo%2A>metody `item` ustalenie, czy element istnieje.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A>i <xref:System.IComparable.CompareTo%2A>metody `item` parametrów dla obiektów w kolekcji.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Do zlokalizowania w <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value</code> is found in the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StringCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Wyszukuje określony <xref:System.Object>i zwraca liczony od zera indeks pierwszego wystąpienia w obrębie całej <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object>"
  remarks: "<xref:System.Collections.Specialized.StringCollection>Przeszukiwany jest do przodu zaczynając od pierwszego elementu i końcowy z ostatniego elementu.</xref:System.Collections.Specialized.StringCollection>       Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       Począwszy od programu .NET Framework 2.0, ta metoda używa kolekcji obiektów <xref:System.Object.Equals%2A>i <xref:System.IComparable.CompareTo%2A>metody `item` ustalenie, czy element istnieje.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A>i <xref:System.IComparable.CompareTo%2A>metody `item` parametrów dla obiektów w kolekcji.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Do zlokalizowania w <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Liczony od zera indeks pierwszego wystąpienia <code> value </code> w obrębie całej <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>, jeśli je znaleziono; w przeciwnym razie wartość -1."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StringCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Wstawia element do <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> pod określonym indeksem."
  remarks: "Jeśli <xref:System.Collections.Specialized.StringCollection.Count%2A>jest już równa pojemności pojemność <xref:System.Collections.Specialized.StringCollection>zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       Jeśli `index` jest równa <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` zostanie dodany na końcu <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       W kolekcji elementów ciągłym takie jak listy, elementy, które należy wykonać punkt wstawiania Przenieś w dół do uwzględnienia nowego elementu. Jeśli kolekcja jest indeksowana, również są aktualizowane indeksów elementów, które są przenoszone. To zachowanie nie ma zastosowania do kolekcji, której elementy koncepcyjnie są zgrupowane w pakiety, takich jak tablicy skrótów.       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks, w którym `value` powinien zostać wstawiony."
    - id: value
      type: System.Object
      description: "<xref:System.Object>Do wstawienia.</xref:System.Object> Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera.       - lub - <code>index</code> jest większa niż <xref:System.Collections.Specialized.StringCollection.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> Jest tylko do odczytu.       - lub - <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> ma stały rozmiar."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: StringCollection.System.Collections.IList.IsFixedSize
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> obiekt ma stały rozmiar."
  remarks: "Kolekcja o stałym rozmiarze nie zezwala dodawania lub usuwania elementów po kolekcji zostało utworzone, ale zezwalaj na modyfikowanie istniejących elementów.       Kolekcja o stałym rozmiarze jest po prostu kolekcji z otoką, który uniemożliwia Dodawanie i usuwanie elementów; w związku z tym zmian w źródłowej kolekcji, włączając Dodawanie lub usuwanie elementów z kolekcji o stałym rozmiarze odzwierciedla te zmiany.       Pobieranie wartości tej właściwości jest operacją O(1)."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> obiekt ma ustalony rozmiar; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: StringCollection.System.Collections.IList.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> obiekt jest tylko do odczytu."
  remarks: "Kolekcja, która jest tylko do odczytu uniemożliwia dodawania, usuwania lub modyfikowania elementów po utworzeniu kolekcji.       Kolekcja, która jest tylko do odczytu jest po prostu kolekcji z otoką, co uniemożliwia ich modyfikowania kolekcji; w związku z tym jeśli wprowadzono zmiany w źródłowej kolekcji, kolekcji tylko do odczytu odzwierciedla te zmiany.       Pobieranie wartości tej właściwości jest operacją O(1)."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> obiekt jest tylko do odczytu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: StringCollection.System.Collections.IList.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera lub ustawia element pod określonym indeksem."
  remarks: "Ta metoda umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.       Używa języka C# [to](~/add/includes/ajax-current-ext-md.md) — słowo kluczowe do definiowania indeksatory zamiast Implementowanie właściwości IList.Item. Visual Basic implementuje IList.Item jako domyślna właściwość, która zapewnia te same funkcje indeksowania.       <xref:System.Collections.Specialized.StringCollection>akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</xref:System.Collections.Specialized.StringCollection>       Pobieranie wartości tej właściwości jest operacją O(1); Ustawienie właściwości jest również O(1) operacji."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks elementu do pobrania lub ustawienia."
    return:
      type: System.Object
      description: "Element pod określonym indeksem."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera.       - lub - <code>index</code> jest równa lub większa niż <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: StringCollection.System.Collections.IList.Remove(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Usuwa pierwsze wystąpienie określonego obiektu z <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Jeśli <xref:System.Collections.Specialized.StringCollection>nie zawiera określonego obiektu <xref:System.Collections.Specialized.StringCollection>pozostaje niezmieniona.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> Nie wyjątek.       W kolekcji sąsiadujących elementów, takich jak listy elementy, które należy wykonać usunięty element Przenieś w górę zajmować vacated miejscu. Jeśli kolekcja jest indeksowana, również są aktualizowane indeksów elementów, które są przenoszone. To zachowanie nie ma zastosowania do kolekcji, której elementy koncepcyjnie są zgrupowane w pakiety, takich jak tablicy skrótów.       Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Do usunięcia z <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> Jest tylko do odczytu.       - lub - <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> ma stały rozmiar."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Collections.Specialized.StringCollection.#ctor
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: StringCollection()
  nameWithType: StringCollection.StringCollection()
  fullName: System.Collections.Specialized.StringCollection.StringCollection()
- uid: System.Collections.Specialized.StringCollection.Add(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Add(String)
  nameWithType: StringCollection.Add(String)
  fullName: System.Collections.Specialized.StringCollection.Add(String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.StringCollection.AddRange(System.String[])
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: AddRange(String[])
  nameWithType: StringCollection.AddRange(String[])
  fullName: System.Collections.Specialized.StringCollection.AddRange(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.StringCollection.Clear
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Clear()
  nameWithType: StringCollection.Clear()
  fullName: System.Collections.Specialized.StringCollection.Clear()
- uid: System.Collections.Specialized.StringCollection.Contains(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Contains(String)
  nameWithType: StringCollection.Contains(String)
  fullName: System.Collections.Specialized.StringCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: StringCollection.CopyTo(String[],Int32)
  fullName: System.Collections.Specialized.StringCollection.CopyTo(String[],Int32)
- uid: System.Collections.Specialized.StringCollection.Count
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Count
  nameWithType: StringCollection.Count
  fullName: System.Collections.Specialized.StringCollection.Count
- uid: System.Collections.Specialized.StringCollection.GetEnumerator
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: StringCollection.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.GetEnumerator()
- uid: System.Collections.Specialized.StringEnumerator
  parent: System.Collections.Specialized
  isExternal: false
  name: StringEnumerator
  nameWithType: StringEnumerator
  fullName: System.Collections.Specialized.StringEnumerator
- uid: System.Collections.Specialized.StringCollection.IndexOf(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: StringCollection.IndexOf(String)
  fullName: System.Collections.Specialized.StringCollection.IndexOf(String)
- uid: System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Insert(Int32,String)
  nameWithType: StringCollection.Insert(Int32,String)
  fullName: System.Collections.Specialized.StringCollection.Insert(Int32,String)
- uid: System.Collections.Specialized.StringCollection.IsReadOnly
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: StringCollection.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.IsSynchronized
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: StringCollection.IsSynchronized
  fullName: System.Collections.Specialized.StringCollection.IsSynchronized
- uid: System.Collections.Specialized.StringCollection.Item(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: StringCollection.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.Item(Int32)
- uid: System.Collections.Specialized.StringCollection.Remove(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Remove(String)
  nameWithType: StringCollection.Remove(String)
  fullName: System.Collections.Specialized.StringCollection.Remove(String)
- uid: System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: StringCollection.RemoveAt(Int32)
  fullName: System.Collections.Specialized.StringCollection.RemoveAt(Int32)
- uid: System.Collections.Specialized.StringCollection.SyncRoot
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: SyncRoot
  nameWithType: StringCollection.SyncRoot
  fullName: System.Collections.Specialized.StringCollection.SyncRoot
- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: StringCollection.System.Collections.IList.Add(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Add(Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: StringCollection.System.Collections.IList.Contains(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains(Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StringCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StringCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StringCollection.System.Collections.IList.IsFixedSize
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsFixedSize
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StringCollection.System.Collections.IList.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: StringCollection.System.Collections.IList.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Item(Int32)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: StringCollection.System.Collections.IList.Remove(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove(Object)
- uid: System.Collections.Specialized.StringCollection.#ctor*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection.StringCollection
- uid: System.Collections.Specialized.StringCollection.Add*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Add
  nameWithType: StringCollection.Add
- uid: System.Collections.Specialized.StringCollection.AddRange*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: AddRange
  nameWithType: StringCollection.AddRange
- uid: System.Collections.Specialized.StringCollection.Clear*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Clear
  nameWithType: StringCollection.Clear
- uid: System.Collections.Specialized.StringCollection.Contains*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Contains
  nameWithType: StringCollection.Contains
- uid: System.Collections.Specialized.StringCollection.CopyTo*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: CopyTo
  nameWithType: StringCollection.CopyTo
- uid: System.Collections.Specialized.StringCollection.Count*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Count
  nameWithType: StringCollection.Count
- uid: System.Collections.Specialized.StringCollection.GetEnumerator*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: StringCollection.GetEnumerator
- uid: System.Collections.Specialized.StringCollection.IndexOf*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IndexOf
  nameWithType: StringCollection.IndexOf
- uid: System.Collections.Specialized.StringCollection.Insert*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Insert
  nameWithType: StringCollection.Insert
- uid: System.Collections.Specialized.StringCollection.IsReadOnly*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: StringCollection.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.IsSynchronized*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: StringCollection.IsSynchronized
- uid: System.Collections.Specialized.StringCollection.Item*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Item
  nameWithType: StringCollection.Item
- uid: System.Collections.Specialized.StringCollection.Remove*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Remove
  nameWithType: StringCollection.Remove
- uid: System.Collections.Specialized.StringCollection.RemoveAt*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: RemoveAt
  nameWithType: StringCollection.RemoveAt
- uid: System.Collections.Specialized.StringCollection.SyncRoot*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: SyncRoot
  nameWithType: StringCollection.SyncRoot
- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: StringCollection.System.Collections.ICollection.CopyTo
- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: StringCollection.System.Collections.IList.Add
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: StringCollection.System.Collections.IList.Contains
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: StringCollection.System.Collections.IList.IndexOf
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: StringCollection.System.Collections.IList.Insert
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StringCollection.System.Collections.IList.IsFixedSize
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StringCollection.System.Collections.IList.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: StringCollection.System.Collections.IList.Item
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: StringCollection.System.Collections.IList.Remove
