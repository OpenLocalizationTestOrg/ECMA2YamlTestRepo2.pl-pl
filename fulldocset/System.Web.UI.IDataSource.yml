### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IDataSource
  id: IDataSource
  children:
  - System.Web.UI.IDataSource.DataSourceChanged
  - System.Web.UI.IDataSource.GetView(System.String)
  - System.Web.UI.IDataSource.GetViewNames
  langs:
  - csharp
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
  type: Interface
  summary: "Reprezentuje źródło danych abstrakcyjny powiązać z formantów powiązanych z danymi."
  remarks: "Program ASP.NET obsługuje architekturę wiązania danych formantu, która umożliwia kontrolki serwera sieci Web można powiązać z danymi w spójny sposób. Formanty serwera sieci Web, które należy powiązać dane są określane jako formanty powiązane z danymi i klasy, które ułatwiają, że powiązanie są nazywane kontrolki źródła danych. Kontrolki źródła danych może reprezentować dowolnego źródła danych: relacyjnej bazy danych, pliku, strumienia, obiektu biznesowego i tak dalej. Źródło danych określa danych obecnych w spójny sposób formanty powiązane z danymi, niezależnie od tego, czy źródło lub format danych źródłowych.       Możesz implementacji interfejsu IDataSource, gdy należy wdrożyć własne niestandardowe kontroli źródła danych programu ASP.NET.       Każda klasa implementująca interfejs IDataSource jest formantem źródła danych. Interfejsu IDataSource stanowi podstawę dla wszystkich źródło danych ASP.NET formanty i definiuje jeden z podstawowych pojęciach architektura powiązanie danych z jego dwóch metod: <xref:System.Web.UI.IDataSource.GetView%2A>— Metoda i <xref:System.Web.UI.IDataSource.GetViewNames%2A>metody.</xref:System.Web.UI.IDataSource.GetViewNames%2A> </xref:System.Web.UI.IDataSource.GetView%2A> Ta koncepcja jest, że wszystkie kontrolki źródła danych obsługuje co najmniej jeden widok o nazwie na ich danych. Obiekt widoku źródła danych jest podobny do <xref:System.Data.DataView>abstrakcji w <xref:System.Data>przestrzeni nazw: danych — może być powiązana, dostosowany widok danych sortowanie, filtrowanie i innych operacji danych, które definiuje widoku.</xref:System.Data> </xref:System.Data.DataView> Zasadniczo źródła danych kontrolować nie robi nic więcej niż pobrać widoków danych.       Formant źródła danych może mieć co najmniej jeden obiekt widoku źródła danych. Niektóre dane źródła kontrolki, w tym te, które reprezentują relacyjnych baz danych, takich jak <xref:System.Web.UI.WebControls.SqlDataSource>i <xref:System.Web.UI.WebControls.AccessDataSource>, obsługuje tylko jeden widok.</xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> Inne dane źródła formantów, w tym kontrolki źródła hierarchiczne dane, takie jak <xref:System.Web.UI.WebControls.SiteMapDataSource>, obsługuje wiele widoków.</xref:System.Web.UI.WebControls.SiteMapDataSource> Widok źródła danych definiuje możliwości źródła danych i operacje, które obsługuje.       Podsumowując kontrolki źródła danych implementacji interfejsu IDataSource, obsługuje co najmniej jeden widok o nazwie danych reprezentują i zawsze obsługuje pobieranie danych ze źródła danych, które reprezentują. Kontrolki źródła danych zawsze pobierają dane na żądanie, takie jak kiedy `DataBind` jest wywoływana w formancie powiązane z danymi."
  example:
  - "The following code example demonstrates how a class can implement the methods defined by the IDataSource interface to provide data to data-bound controls. The data source control in this example acts as a data source on a comma-separated value file, and can be used by any data-bound control to display comma-separated file data. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.idatasou_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.idatasou_1.vb)]"
  syntax:
    content: public interface IDataSource
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.DataSourceChanged
  id: DataSourceChanged
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: DataSourceChanged
  nameWithType: IDataSource.DataSourceChanged
  fullName: System.Web.UI.IDataSource.DataSourceChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Występuje, gdy formant źródła danych została zmieniona w inny sposób, który wpływa na formanty powiązane z danymi."
  remarks: "DataSourceChanged zdarzenie jest wywoływane po właściwości formantu powiązanego z danymi lub dane źródłowe została zmieniona w jakiś sposób wpływającym powiązania danych między formantu powiązanego z danymi i jego dane. Na przykład, zdarzenie jest wywoływane, jeśli plik nazwa właściwości, takie jak <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>w kontroli źródła danych zostanie zmieniona właściwość,.</xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>       Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler DataSourceChanged;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: IDataSource.GetView(String)
  fullName: System.Web.UI.IDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera widok źródła danych o nazwie skojarzony z formantem źródła danych."
  remarks: "Klasy formantów źródła danych może obsługiwać co najmniej jeden widok na ich danych. Widoki te są reprezentowane przez wystąpień <xref:System.Web.UI.DataSourceView>klasy.</xref:System.Web.UI.DataSourceView> Widok źródła danych definiuje możliwości kontroli źródła danych, a następnie wykonuje całą pracę niezbędne do pobierania danych z odpowiedni magazyn danych i wykonywanie operacji takich jak sortowanie, wstawianie, usuwanie i aktualizowanie.       Klasy formantów, które implementują <xref:System.Web.UI.IDataSource>interfejs zaimplementuj metodę GetView, aby zwrócić silnie typizowanego widoku obiekty skojarzone z klasy.</xref:System.Web.UI.IDataSource> źródła danych"
  example:
  - "The following code example demonstrates how a data source control class that implements the <xref:System.Web.UI.IDataSource> interface implements the GetView method, returning a strongly typed instance of the <xref:System.Web.UI.DataSourceView> class. Because the data source control supports only one view, it ignores the name and returns a view named with the default view name. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/csharp/m-system.web.ui.idatasou_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.idatasou_0_1.vb)]"
  syntax:
    content: public System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "Nazwa widoku do pobrania."
    return:
      type: System.Web.UI.DataSourceView
      description: "Zwraca nazwany <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> skojarzone z <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>."
  overload: System.Web.UI.IDataSource.GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.IDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: IDataSource.GetViewNames()
  fullName: System.Web.UI.IDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pobiera kolekcję nazw reprezentujący listę wyświetlanie obiektów skojarzonych z <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> interfejsu."
  remarks: "Klasy formantów źródła danych może obsługiwać co najmniej jeden widok o nazwie na ich danych. Metoda GetViewNames zwraca zbiór nazwy widoków obecnie skojarzony z wystąpieniem kontroli źródła danych. Obiekty wywołujące mogą iteracji kolekcji nazwy widoku i pobierania poszczególnych <xref:System.Web.UI.DataSourceView>obiekty z <xref:System.Web.UI.IDataSource.GetView%2A>metody.</xref:System.Web.UI.IDataSource.GetView%2A> </xref:System.Web.UI.DataSourceView>       Kontrola źródła danych klas implementujących <xref:System.Web.UI.IDataSource>interfejs zaimplementuj metodę GetViewNames zwrócić kolekcję nazw, które reprezentuje źródło danych wyświetlić obiekty, które aktualnie skojarzony z klasy formantu źródła danych.</xref:System.Web.UI.IDataSource>"
  example:
  - "The following code example demonstrates how a data source control that implements the <xref:System.Web.UI.IDataSource> interface implements the GetViewNames method, returning an <xref:System.Collections.ICollection> collection of names. Because the data source supports only one view, the method returns a collection of one element using the default name for the view. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/csharp/m-system.web.ui.idatasou_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/visualbasic/m-system.web.ui.idatasou_1_1.vb)]"
  syntax:
    content: public System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Zawierający nazwy widoków skojarzonych z <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.IDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IDataSource.DataSourceChanged
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: DataSourceChanged
  nameWithType: IDataSource.DataSourceChanged
  fullName: System.Web.UI.IDataSource.DataSourceChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.IDataSource.GetView(System.String)
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: IDataSource.GetView(String)
  fullName: System.Web.UI.IDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IDataSource.GetViewNames
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: IDataSource.GetViewNames()
  fullName: System.Web.UI.IDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.IDataSource.GetView*
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetView
  nameWithType: IDataSource.GetView
- uid: System.Web.UI.IDataSource.GetViewNames*
  parent: System.Web.UI.IDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: IDataSource.GetViewNames
