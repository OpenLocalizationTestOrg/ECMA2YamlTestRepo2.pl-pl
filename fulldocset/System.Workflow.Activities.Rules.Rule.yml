### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.Rules.Rule
  id: Rule
  children:
  - System.Workflow.Activities.Rules.Rule.#ctor
  - System.Workflow.Activities.Rules.Rule.#ctor(System.String)
  - System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})
  - System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})
  - System.Workflow.Activities.Rules.Rule.Active
  - System.Workflow.Activities.Rules.Rule.Clone
  - System.Workflow.Activities.Rules.Rule.Condition
  - System.Workflow.Activities.Rules.Rule.Description
  - System.Workflow.Activities.Rules.Rule.ElseActions
  - System.Workflow.Activities.Rules.Rule.Equals(System.Object)
  - System.Workflow.Activities.Rules.Rule.GetHashCode
  - System.Workflow.Activities.Rules.Rule.Name
  - System.Workflow.Activities.Rules.Rule.Priority
  - System.Workflow.Activities.Rules.Rule.ReevaluationBehavior
  - System.Workflow.Activities.Rules.Rule.ThenActions
  langs:
  - csharp
  name: Rule
  nameWithType: Rule
  fullName: System.Workflow.Activities.Rules.Rule
  type: Class
  summary: "Określa warunek z związany jest zestaw akcje do wykonania."
  remarks: "Reguła składa się z <xref:System.Workflow.Activities.Rules.RuleCondition>i jeden lub oba <xref:System.Workflow.Activities.Rules.Rule.ThenActions%2A>lub <xref:System.Workflow.Activities.Rules.Rule.ElseActions%2A>Kolekcje.</xref:System.Workflow.Activities.Rules.Rule.ElseActions%2A> </xref:System.Workflow.Activities.Rules.Rule.ThenActions%2A> </xref:System.Workflow.Activities.Rules.RuleCondition>"
  example:
  - "The following example shows how to create a named Rule.  \n  \n```c#  \nprivate Rule firstRule = new Rule(\"firstRule\");  \n```"
  syntax:
    content: public class Rule
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Rule()
  nameWithType: Rule.Rule()
  fullName: System.Workflow.Activities.Rules.Rule.Rule()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> klasy."
  syntax:
    content: public Rule ();
    parameters: []
  overload: System.Workflow.Activities.Rules.Rule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Rule(String)
  nameWithType: Rule.Rule(String)
  fullName: System.Workflow.Activities.Rules.Rule.Rule(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> przy użyciu nazwy <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  syntax:
    content: public Rule (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.Rule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})
  id: '#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})'
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Rule(String,RuleCondition,IList<RuleAction>)
  nameWithType: Rule.Rule(String,RuleCondition,IList<RuleAction>)
  fullName: System.Workflow.Activities.Rules.Rule.Rule(String,RuleCondition,IList<RuleAction>)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> przy użyciu nazwy <xref uid=&quot;langword_csharp_Rule&quot; name=&quot;Rule&quot; href=&quot;&quot;> </xref>, warunek reguły oraz listę działań następnie."
  syntax:
    content: public Rule (string name, System.Workflow.Activities.Rules.RuleCondition condition, System.Collections.Generic.IList<System.Workflow.Activities.Rules.RuleAction> thenActions);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
    - id: condition
      type: System.Workflow.Activities.Rules.RuleCondition
      description: "The <xref href=&quot;System.Workflow.Activities.Rules.RuleCondition&quot;></xref> for the <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;></xref>."
    - id: thenActions
      type: System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction}
      description: "Kolekcja <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> obiekty do oceny, czy warunek jest spełniony."
  overload: System.Workflow.Activities.Rules.Rule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})
  id: '#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})'
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Rule(String,RuleCondition,IList<RuleAction>,IList<RuleAction>)
  nameWithType: Rule.Rule(String,RuleCondition,IList<RuleAction>,IList<RuleAction>)
  fullName: System.Workflow.Activities.Rules.Rule.Rule(String,RuleCondition,IList<RuleAction>,IList<RuleAction>)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> przy użyciu nazwy <xref uid=&quot;langword_csharp_Rule&quot; name=&quot;Rule&quot; href=&quot;&quot;> </xref>, warunek reguły, listę akcji następnie i listę akcji ELSE."
  syntax:
    content: public Rule (string name, System.Workflow.Activities.Rules.RuleCondition condition, System.Collections.Generic.IList<System.Workflow.Activities.Rules.RuleAction> thenActions, System.Collections.Generic.IList<System.Workflow.Activities.Rules.RuleAction> elseActions);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
    - id: condition
      type: System.Workflow.Activities.Rules.RuleCondition
      description: "The <xref href=&quot;System.Workflow.Activities.Rules.RuleCondition&quot;></xref> for the <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;></xref>."
    - id: thenActions
      type: System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction}
      description: "Kolekcja <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> obiekty do oceny, czy warunek jest spełniony."
    - id: elseActions
      type: System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction}
      description: "Kolekcja <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> obiekty do oceny, czy warunek jest spełniony."
  overload: System.Workflow.Activities.Rules.Rule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Active
  id: Active
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Active
  nameWithType: Rule.Active
  fullName: System.Workflow.Activities.Rules.Rule.Active
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Pobiera lub ustawia wartość wskazującą, czy <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> powinien zostać obliczone."
  remarks: "Jeśli wartość `false`, ta właściwość jest podobny do komentowania limit reguły. Wartość domyślna to `true`."
  syntax:
    content: public bool Active { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zasada musi być oceniana; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.Rule.Active*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Clone
  id: Clone
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Clone()
  nameWithType: Rule.Clone()
  fullName: System.Workflow.Activities.Rules.Rule.Clone()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Tworzy głęboką kopię bieżącego <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  syntax:
    content: public System.Workflow.Activities.Rules.Rule Clone ();
    parameters: []
    return:
      type: System.Workflow.Activities.Rules.Rule
      description: "A <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> jest taki sam jak to wystąpienie."
  overload: System.Workflow.Activities.Rules.Rule.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Condition
  id: Condition
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Condition
  nameWithType: Rule.Condition
  fullName: System.Workflow.Activities.Rules.Rule.Condition
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Pobiera lub ustawia <xref href=&quot;System.Workflow.Activities.Rules.RuleCondition&quot;> </xref> dla <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> do oceny."
  syntax:
    content: public System.Workflow.Activities.Rules.RuleCondition Condition { get; set; }
    return:
      type: System.Workflow.Activities.Rules.RuleCondition
      description: "A <xref href=&quot;System.Workflow.Activities.Rules.RuleCondition&quot;> </xref> dla <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> do oceny."
  overload: System.Workflow.Activities.Rules.Rule.Condition*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Description
  id: Description
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Description
  nameWithType: Rule.Description
  fullName: System.Workflow.Activities.Rules.Rule.Description
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Pobiera lub ustawia opis <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "Opis <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.Rule.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.ElseActions
  id: ElseActions
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: ElseActions
  nameWithType: Rule.ElseActions
  fullName: System.Workflow.Activities.Rules.Rule.ElseActions
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Pobiera kolekcję <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> klasy do wykonania w przypadku ELSE."
  remarks: "Zwykle ElseActions ustawić wartość zmiennej w jednej z właściwości działania, wywołuje metodę działania lub wywołuje metody statyczne dla typów w zestawach, do którego istnieje odwołanie.       <xref:System.Workflow.Activities.Rules.RuleHaltAction>Powoduje, że <xref:System.Workflow.Activities.Rules.RuleSet>można zatrzymać wykonywania i zwraca kontroli do wywoływania metody.</xref:System.Workflow.Activities.Rules.RuleSet> </xref:System.Workflow.Activities.Rules.RuleHaltAction> A <xref:System.Workflow.Activities.Rules.RuleStatementAction>modyfikuje właściwość lub wywołuje metodę.</xref:System.Workflow.Activities.Rules.RuleStatementAction> A <xref:System.Workflow.Activities.Rules.RuleUpdateAction>jawnie wskazuje, że reguła jest aktualizowana zmiennej.</xref:System.Workflow.Activities.Rules.RuleUpdateAction> Powoduje to ponownej oceny wszelkich odpowiednich zasad."
  syntax:
    content: public System.Collections.Generic.IList<System.Workflow.Activities.Rules.RuleAction> ElseActions { get; }
    return:
      type: System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction}
      description: "Kolekcja <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> do wykonania w przypadku ELSE."
  overload: System.Workflow.Activities.Rules.Rule.ElseActions*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Rule.Equals(Object)
  fullName: System.Workflow.Activities.Rules.Rule.Equals(Object)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Określa, czy to wystąpienie <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> i obiekt przekazany jako parametr mają taką samą wartość."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do porównania do bieżącego obiektu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący obiekt i <code> obj </code> są takie same; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.Rule.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.GetHashCode
  id: GetHashCode
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Rule.GetHashCode()
  fullName: System.Workflow.Activities.Rules.Rule.GetHashCode()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Zwraca wartość skrótu dla tego wystąpienia."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu dla tego wystąpienia."
  overload: System.Workflow.Activities.Rules.Rule.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Name
  id: Name
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Name
  nameWithType: Rule.Name
  fullName: System.Workflow.Activities.Rules.Rule.Name
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Pobiera lub ustawia nazwę <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Nazwa <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.Rule.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.Priority
  id: Priority
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: Priority
  nameWithType: Rule.Priority
  fullName: System.Workflow.Activities.Rules.Rule.Priority
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Pobiera lub ustawia wartość wskazującą kolejność <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> powinny być uruchamiane."
  remarks: "<xref:System.Workflow.Activities.Rules.Rule>Klasa, która ma wartość większą o priorytecie są uruchamiane przed niższy priorytet <xref:System.Workflow.Activities.Rules.Rule>klasy.</xref:System.Workflow.Activities.Rules.Rule></xref:System.Workflow.Activities.Rules.Rule> Reguły, które mają ten sam priorytet są uruchamiane w kolejności alfabetycznej ich właściwości name.       Wartość priorytetu może być liczbą dodatnią lub ujemną. Wartością domyślną dla każdego <xref:System.Workflow.Activities.Rules.Rule>to 0.</xref:System.Workflow.Activities.Rules.Rule>"
  syntax:
    content: public int Priority { get; set; }
    return:
      type: System.Int32
      description: "Wartość wskazująca kolejność <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> powinny być uruchamiane."
  overload: System.Workflow.Activities.Rules.Rule.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.ReevaluationBehavior
  id: ReevaluationBehavior
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: ReevaluationBehavior
  nameWithType: Rule.ReevaluationBehavior
  fullName: System.Workflow.Activities.Rules.Rule.ReevaluationBehavior
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Pobiera lub ustawia wartość wskazującą czy <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> go obliczyć ponownie."
  syntax:
    content: public System.Workflow.Activities.Rules.RuleReevaluationBehavior ReevaluationBehavior { get; set; }
    return:
      type: System.Workflow.Activities.Rules.RuleReevaluationBehavior
      description: "<xref href=&quot;System.Workflow.Activities.Rules.RuleReevaluationBehavior&quot;> </xref> Wskazującą, czy <xref href=&quot;System.Workflow.Activities.Rules.Rule&quot;> </xref> go obliczyć ponownie."
  overload: System.Workflow.Activities.Rules.Rule.ReevaluationBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.Rule.ThenActions
  id: ThenActions
  parent: System.Workflow.Activities.Rules.Rule
  langs:
  - csharp
  name: ThenActions
  nameWithType: Rule.ThenActions
  fullName: System.Workflow.Activities.Rules.Rule.ThenActions
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Pobiera kolekcję <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> klasy do wykonania w przypadku THEN."
  remarks: "Zwykle ThenActions ustawić wartość zmiennej w jednej z właściwości działania, wywołaj metodę działania lub wywołać metod statycznych dla typów w zestawach, do którego istnieje odwołanie.       <xref:System.Workflow.Activities.Rules.RuleHaltAction>Powoduje, że <xref:System.Workflow.Activities.Rules.RuleSet>można zatrzymać wykonywania i zwraca kontroli do wywoływania metody.</xref:System.Workflow.Activities.Rules.RuleSet> </xref:System.Workflow.Activities.Rules.RuleHaltAction> A <xref:System.Workflow.Activities.Rules.RuleUpdateAction>jawnie wskazuje, że reguła jest aktualizowana zmiennej.</xref:System.Workflow.Activities.Rules.RuleUpdateAction> Powoduje to ponownej oceny wszelkich odpowiednich zasad."
  syntax:
    content: public System.Collections.Generic.IList<System.Workflow.Activities.Rules.RuleAction> ThenActions { get; }
    return:
      type: System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction}
      description: "Kolekcja <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> klasy do wykonania w przypadku THEN."
  overload: System.Workflow.Activities.Rules.Rule.ThenActions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Workflow.Activities.Rules.Rule.#ctor
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Rule()
  nameWithType: Rule.Rule()
  fullName: System.Workflow.Activities.Rules.Rule.Rule()
- uid: System.Workflow.Activities.Rules.Rule.#ctor(System.String)
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Rule(String)
  nameWithType: Rule.Rule(String)
  fullName: System.Workflow.Activities.Rules.Rule.Rule(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Rule(String,RuleCondition,IList<RuleAction>)
  nameWithType: Rule.Rule(String,RuleCondition,IList<RuleAction>)
  fullName: System.Workflow.Activities.Rules.Rule.Rule(String,RuleCondition,IList<RuleAction>)
- uid: System.Workflow.Activities.Rules.RuleCondition
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleCondition
  nameWithType: RuleCondition
  fullName: System.Workflow.Activities.Rules.RuleCondition
- uid: System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<RuleAction>
  nameWithType: IList<RuleAction>
  fullName: System.Collections.Generic.IList<System.Workflow.Activities.Rules.RuleAction>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Workflow.Activities.Rules.RuleAction>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.Rules.RuleAction
    name: RuleAction
    nameWithType: RuleAction
    fullName: RuleAction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Rule(String,RuleCondition,IList<RuleAction>,IList<RuleAction>)
  nameWithType: Rule.Rule(String,RuleCondition,IList<RuleAction>,IList<RuleAction>)
  fullName: System.Workflow.Activities.Rules.Rule.Rule(String,RuleCondition,IList<RuleAction>,IList<RuleAction>)
- uid: System.Workflow.Activities.Rules.Rule.Active
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Active
  nameWithType: Rule.Active
  fullName: System.Workflow.Activities.Rules.Rule.Active
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Activities.Rules.Rule.Clone
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Clone()
  nameWithType: Rule.Clone()
  fullName: System.Workflow.Activities.Rules.Rule.Clone()
- uid: System.Workflow.Activities.Rules.Rule
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: Rule
  nameWithType: Rule
  fullName: System.Workflow.Activities.Rules.Rule
- uid: System.Workflow.Activities.Rules.Rule.Condition
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Condition
  nameWithType: Rule.Condition
  fullName: System.Workflow.Activities.Rules.Rule.Condition
- uid: System.Workflow.Activities.Rules.Rule.Description
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Description
  nameWithType: Rule.Description
  fullName: System.Workflow.Activities.Rules.Rule.Description
- uid: System.Workflow.Activities.Rules.Rule.ElseActions
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: ElseActions
  nameWithType: Rule.ElseActions
  fullName: System.Workflow.Activities.Rules.Rule.ElseActions
- uid: System.Workflow.Activities.Rules.Rule.Equals(System.Object)
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Equals(Object)
  nameWithType: Rule.Equals(Object)
  fullName: System.Workflow.Activities.Rules.Rule.Equals(Object)
- uid: System.Workflow.Activities.Rules.Rule.GetHashCode
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: GetHashCode()
  nameWithType: Rule.GetHashCode()
  fullName: System.Workflow.Activities.Rules.Rule.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Activities.Rules.Rule.Name
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Name
  nameWithType: Rule.Name
  fullName: System.Workflow.Activities.Rules.Rule.Name
- uid: System.Workflow.Activities.Rules.Rule.Priority
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Priority
  nameWithType: Rule.Priority
  fullName: System.Workflow.Activities.Rules.Rule.Priority
- uid: System.Workflow.Activities.Rules.Rule.ReevaluationBehavior
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: ReevaluationBehavior
  nameWithType: Rule.ReevaluationBehavior
  fullName: System.Workflow.Activities.Rules.Rule.ReevaluationBehavior
- uid: System.Workflow.Activities.Rules.RuleReevaluationBehavior
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleReevaluationBehavior
  nameWithType: RuleReevaluationBehavior
  fullName: System.Workflow.Activities.Rules.RuleReevaluationBehavior
- uid: System.Workflow.Activities.Rules.Rule.ThenActions
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: ThenActions
  nameWithType: Rule.ThenActions
  fullName: System.Workflow.Activities.Rules.Rule.ThenActions
- uid: System.Workflow.Activities.Rules.Rule.#ctor*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Rule
  nameWithType: Rule.Rule
- uid: System.Workflow.Activities.Rules.Rule.Active*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Active
  nameWithType: Rule.Active
- uid: System.Workflow.Activities.Rules.Rule.Clone*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Clone
  nameWithType: Rule.Clone
- uid: System.Workflow.Activities.Rules.Rule.Condition*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Condition
  nameWithType: Rule.Condition
- uid: System.Workflow.Activities.Rules.Rule.Description*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Description
  nameWithType: Rule.Description
- uid: System.Workflow.Activities.Rules.Rule.ElseActions*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: ElseActions
  nameWithType: Rule.ElseActions
- uid: System.Workflow.Activities.Rules.Rule.Equals*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Equals
  nameWithType: Rule.Equals
- uid: System.Workflow.Activities.Rules.Rule.GetHashCode*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: GetHashCode
  nameWithType: Rule.GetHashCode
- uid: System.Workflow.Activities.Rules.Rule.Name*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Name
  nameWithType: Rule.Name
- uid: System.Workflow.Activities.Rules.Rule.Priority*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: Priority
  nameWithType: Rule.Priority
- uid: System.Workflow.Activities.Rules.Rule.ReevaluationBehavior*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: ReevaluationBehavior
  nameWithType: Rule.ReevaluationBehavior
- uid: System.Workflow.Activities.Rules.Rule.ThenActions*
  parent: System.Workflow.Activities.Rules.Rule
  isExternal: false
  name: ThenActions
  nameWithType: Rule.ThenActions
