### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ICallbackEventHandler
  id: ICallbackEventHandler
  children:
  - System.Web.UI.ICallbackEventHandler.GetCallbackResult
  - System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  langs:
  - csharp
  name: ICallbackEventHandler
  nameWithType: ICallbackEventHandler
  fullName: System.Web.UI.ICallbackEventHandler
  type: Interface
  summary: "Służy do wskazania, że formant może być celem zdarzenia wywołania zwrotnego na serwerze."
  remarks: "Implementuje interfejs modułu ICallbackEventHandler dla formantu niestandardowego, który ma odbierać zdarzenia wywołania zwrotnego. Aby uzyskać więcej informacji, zobacz [implementacja klienta wywołania zwrotne bez ogłaszania zwrotnego](~/add/includes/ajax-current-ext-md.md).       Przykłady formantów, które implementują interfejs modułu ICallbackEventHandler <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, i <xref:System.Web.UI.WebControls.TreeView>formantów.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Gdy zdarzenie wywołania zwrotnego jest przeznaczony dla formantu, który implementuje interfejs modułu ICallbackEventHandler <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>wywoływana jest metoda obsługi zdarzeń, przekazując argument zdarzenia jako parametr i <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>Metoda zwraca wynik wywołania zwrotnego.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> </xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>       Formanty pobierające dane z kontroli źródła danych podczas wywołania zwrotnego można to zrobić synchronicznie lub asynchronicznie. Kontrolki ASP.NET, takich jak <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, i <xref:System.Web.UI.WebControls.TreeView>są implementowane synchronicznie.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Synchroniczne wywołania zwrotne nie uniemożliwia użytkownikowi pracy w przeglądarce. W trybie synchronicznym tylko jedno wywołanie zwrotne jednocześnie można wykonywać z ostatniego wywołania zwrotnego najważniejsze. Po zaimplementowaniu formant sieci Web do obsługi asynchroniczne zachowanie wielu wywołań zwrotnych można jednocześnie uruchamiany. Szczegółowe informacje dotyczące programowania asynchronicznego, zobacz [oparty na zdarzeniach asynchroniczny wzorzec (EAP)](~/add/includes/ajax-current-ext-md.md).       Można określić, czy zdarzenia wywołania zwrotnego pochodzące z interfejsu użytkownika przez formant implementowania interfejsu modułu ICallbackEventHandler są weryfikowane. Sprawdzanie poprawności zdarzeń jest dobrym sposobem. Jednak ze względu na wydajność można je wyłączyć. Do kontrolowania, czy sprawdzanie poprawności zdarzenia jest wykonywana na zdarzenia wywołania zwrotnego, ustaw `enableEventValidation` atrybutu [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) dyrektywy lub `enableEventValidation` atrybutu [strony — Element (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/en-us/4123bb66-3fe4-4d62-b70e-33758656b458) pliku Web.config. Jeśli ustawisz <xref:System.Web.UI.Page.EnableEventValidation%2A>Właściwości w kodzie, ustaw go w `Page_Init` faza przetwarzania strony.</xref:System.Web.UI.Page.EnableEventValidation%2A> Aby uzyskać więcej informacji na temat funkcji równoważenia świadczenia zabezpieczenia weryfikacji zdarzeń z jego spadek wydajności, zobacz [ASP.NET wydajności — omówienie](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public interface ICallbackEventHandler
  implements: []
  platform:
  - net462
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.ICallbackEventHandler
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Zwraca wyniki zdarzenia wywołania zwrotnego, przeznaczonego dla formantu."
  remarks: "Wyjątki zgłaszane w <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>nie uniemożliwi GetCallbackResult wywoływana i zwraca wynik.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Aby zapobiec GetCallbackResult zwracanie wyniku, ustawić flagę, gdy wyjątek <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>i zwracanie pustego ciągu z GetCallbackResult.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>"
  syntax:
    content: public string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "Wynik wywołania zwrotnego."
  overload: System.Web.UI.ICallbackEventHandler.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.ICallbackEventHandler
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Przetwarza zdarzenia wywołania zwrotnego, przeznaczonego dla formantu."
  remarks: "Gdy `null` jest używany jako parametr argument zdarzenia, ciąg jest serializowane na spód &quot;null&quot; i wysłane do serwera. Ponieważ nie istnieje sposób odróżnienie `null` i &quot;null&quot;, należy unikać używania `null` argumentu parametrów z wywołań zwrotnych.       Nie zapobiega wyjątki zgłaszane w RaiseCallbackEvent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>wywoływana i zwraca wynik.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> Aby uniknąć <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>Zwracanie wyniku, Ustaw flagę, gdy wyjątek w RaiseCallbackEvent i zwraca pusty ciąg z <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> </xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>"
  syntax:
    content: public void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "Ciąg reprezentujący argument zdarzenia do przekazania do programu obsługi zdarzeń."
  overload: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: GetCallbackResult()
  nameWithType: ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult*
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: GetCallbackResult
  nameWithType: ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent
