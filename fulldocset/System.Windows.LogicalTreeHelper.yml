### YamlMime:ManagedReference
items:
- uid: System.Windows.LogicalTreeHelper
  id: LogicalTreeHelper
  children:
  - System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  - System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  langs:
  - csharp
  name: LogicalTreeHelper
  nameWithType: LogicalTreeHelper
  fullName: System.Windows.LogicalTreeHelper
  type: Class
  summary: "Udostępnia metody statyczne pomocy do wykonywania zapytań obiektów w drzewie logicznym."
  remarks: "Klasa LogicalTreeHelper udostępnia metody, które służy do zwracania kolekcje elementów podrzędnych obiektów lub określonych obiektach z węzłami podrzędnymi drzewa logicznego. Jednak większość operacji drzewa obiektów, które należy na ogół wykonać są również widoczne podobne metody lub właściwości <xref:System.Windows.FrameworkElement>lub <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> Na przykład, spróbuj wykonać następujące czynności: - zamiast wywoływania statycznych <xref:System.Windows.LogicalTreeHelper.GetChildren%2A>metodę, która zwraca moduł wyliczający dla logicznym podrzędnym obiektów, użyć dedykowanego kolekcji w modelu zawartości dla tego obiektu.</xref:System.Windows.LogicalTreeHelper.GetChildren%2A> Prawie wszystkie obiekty, które obsługują model zawartości ujawnia niektóre właściwości, który zawiera kolekcję obiektów podrzędnych, a także Obsługa interfejsu kolekcji bezpośrednio w tej kolekcji.      — Zamiast z wywoływania statycznych <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>metodę, aby uzyskać obiekt podrzędny, określając jej nazwę, wywołanie <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName>lub <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>metody w określonych obiektach.</xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>       LogicalTreeHelper jest najbardziej przydatna dla scenariuszy analizy, gdzie są podróży w górę lub w dół rekursywnie drzewa logicznego za pośrednictwem różnych poziomach i chcesz użyć spójnego podejścia do badania różnych obiektów nadrzędnych i podrzędnych. W takim przypadku może korzystać kombinację modeli zawartości określonych i przy użyciu więcej modelu zawartości poszczególnych interfejsów API byłoby zbyt złożone."
  syntax:
    content: public static class LogicalTreeHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  id: BringIntoView(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: BringIntoView(DependencyObject)
  nameWithType: LogicalTreeHelper.BringIntoView(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.BringIntoView(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Próbuje przełączyć do widoku żądanego elementu interfejsu użytkownika i zgłasza <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> zdarzeń w celu celu raportuje o wynikach."
  remarks: "Jest to zazwyczaj bardziej wygodne do wywołania metody wystąpienia <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName>lub <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName>zamiast tej metody statycznej narzędzia.</xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName> Zachowanie metody wystąpienia jest odpowiednikiem zachowanie metody statycznej.       Nawet wtedy, gdy `current` został dostarczony element interfejsu użytkownika <xref:System.Windows.FrameworkContentElement>, wynikowy zdarzeń jest taka sama <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>zdarzeń z źródłowym <xref:System.Windows.FrameworkContentElement>zidentyfikować przez sprawdzenie danych zdarzenia zdarzenia.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement>"
  syntax:
    content: public static void BringIntoView (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "Element interfejsu użytkownika, aby przełączyć do widoku."
  overload: System.Windows.LogicalTreeHelper.BringIntoView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  id: FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: FindLogicalNode(DependencyObject,String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Próbuje znaleźć i zwraca obiekt, który ma określoną nazwę. Wyszukiwanie rozpoczyna się od określonego obiektu i kontynuuje na węzły podrzędne drzewa logicznego."
  remarks: "Metody <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>i <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName>przypominają pozornie FindLogicalNode, ale obsługiwane przez różnych logikę:-kierunek wyszukiwania dla FindLogicalNode jest kierunku obiektów podrzędnych (niżej na drzewie); kierunek wyszukiwania dla `FindName` metody jest kierunku obiektów nadrzędnych (w górę drzewa).</xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>      - `FindName` Metody są regulowane przez pojęcie XAML namescope. Przy użyciu `FindName` ma gwarancji, że tylko jeden obiekt o tej nazwie nie istnieje, ponieważ XAML namescopes wymuszać unikatowość. Z kolei FindLogicalNode ignoruje XAML namescope i może między granicami namescope XAML podczas wyszukiwania. Tak, nie ma żadnej gwarancji unikatowości z `elementName` nazwy po przekroczeniu granic. Aby uzyskać więcej informacji na temat XAML namescopes, zobacz [WPF XAML Namescopes](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);
    parameters:
    - id: logicalTreeNode
      type: System.Windows.DependencyObject
      description: "Obiekt się rozpocząć wyszukiwanie z. Ten obiekt musi być równa albo <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> lub <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    - id: elementName
      type: System.String
      description: "Nazwa obiektu można znaleźć."
    return:
      type: System.Windows.DependencyObject
      description: "Obiekt o pasującej nazwie, jeśli został znaleziony; Zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli nie pasujące znaleziono nazwy w drzewie logicznym."
  overload: System.Windows.LogicalTreeHelper.FindLogicalNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  id: GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Zwraca kolekcję obiektów podrzędnych natychmiastowego określonego obiektu przez przetwarzanie drzewa logicznego."
  remarks: "Ta metoda podpisu i pomocnika głównie w przypadku, gdy wiadomo, czy `current` jest <xref:System.Windows.FrameworkElement>lub <xref:System.Windows.FrameworkContentElement>i są również nie wiesz, czy ten obiekt klasy obsługuje swoją własną kolekcję modelu zawartości.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> Jeśli można określić typu obiektu, który jest kwerenda, sprawdź, czy istnieje określonych właściwości zawartości, który znasz tego typu. Na przykład, jeśli wiadomo, że obiekt wyszukując jest <xref:System.Windows.Controls.ItemsControl>, sprawdź <xref:System.Windows.Controls.ItemsControl.Items%2A>właściwości do pobrania silnie typizowaną kolekcją, która obsługuje interfejs kolekcji i jest prawdopodobnie bardziej użyteczne niż moduł wyliczający.</xref:System.Windows.Controls.ItemsControl.Items%2A> </xref:System.Windows.Controls.ItemsControl>"
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "Obiekt, z którego chcesz uruchomić przetwarzania drzewa logicznego. Ma to być albo <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> lub <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    return:
      type: System.Collections.IEnumerable
      description: "Wyliczalny kolekcja obiektów podrzędnych natychmiastowego z drzewa logicznego określonego obiektu."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  id: GetChildren(System.Windows.FrameworkContentElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(FrameworkContentElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkContentElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkContentElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Zwraca kolekcję obiektów podrzędnych natychmiastowego określonego <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref> przez przetwarzanie drzewa logicznego."
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);
    parameters:
    - id: current
      type: System.Windows.FrameworkContentElement
      description: "Obiekt, z którego chcesz uruchomić przetwarzania drzewa logicznego."
    return:
      type: System.Collections.IEnumerable
      description: "Wyliczalny kolekcji obiektów podrzędnych natychmiastowego od <code> current </code> w drzewie logicznym."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  id: GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Zwraca kolekcję obiektów podrzędnych natychmiastowego określonego <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> przez przetwarzanie drzewa logicznego."
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);
    parameters:
    - id: current
      type: System.Windows.FrameworkElement
      description: "Obiekt, z którego chcesz uruchomić przetwarzania drzewa logicznego."
    return:
      type: System.Collections.IEnumerable
      description: "Wyliczalny kolekcji obiektów podrzędnych natychmiastowego od <code> current </code> w drzewie logicznym."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  id: GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Zwraca obiekt nadrzędny określonego obiektu przez przetwarzanie drzewa logicznego."
  remarks: "Ta metoda jest jedynie otoka, który pobiera wersję odpowiedniego typu (<xref:System.Windows.FrameworkElement> lub <xref:System.Windows.FrameworkContentElement>) z <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName>lub <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName>Właściwości; chyba że nie można określić `current` typu, warto zamiast tego zaznacz właściwości, odpowiednie wystąpienie.</xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement>"
  syntax:
    content: public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "Można odnaleźć obiektu nadrzędnego dla obiekt. Ma to być albo <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> lub <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    return:
      type: System.Windows.DependencyObject
      description: "Żądana nadrzędnego obiektu."
  overload: System.Windows.LogicalTreeHelper.GetParent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: BringIntoView(DependencyObject)
  nameWithType: LogicalTreeHelper.BringIntoView(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.BringIntoView(DependencyObject)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: FindLogicalNode(DependencyObject,String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(DependencyObject)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(FrameworkContentElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkContentElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkContentElement)
- uid: System.Windows.FrameworkContentElement
  parent: System.Windows
  isExternal: false
  name: FrameworkContentElement
  nameWithType: FrameworkContentElement
  fullName: System.Windows.FrameworkContentElement
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(DependencyObject)
- uid: System.Windows.LogicalTreeHelper.BringIntoView*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: BringIntoView
  nameWithType: LogicalTreeHelper.BringIntoView
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: FindLogicalNode
  nameWithType: LogicalTreeHelper.FindLogicalNode
- uid: System.Windows.LogicalTreeHelper.GetChildren*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren
  nameWithType: LogicalTreeHelper.GetChildren
- uid: System.Windows.LogicalTreeHelper.GetParent*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetParent
  nameWithType: LogicalTreeHelper.GetParent
