### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.ContextStack
  id: ContextStack
  children:
  - System.ComponentModel.Design.Serialization.ContextStack.#ctor
  - System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)
  - System.ComponentModel.Design.Serialization.ContextStack.Current
  - System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)
  - System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)
  - System.ComponentModel.Design.Serialization.ContextStack.Pop
  - System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)
  langs:
  - csharp
  name: ContextStack
  nameWithType: ContextStack
  fullName: System.ComponentModel.Design.Serialization.ContextStack
  type: Class
  summary: "Udostępnia obiekt stosu, który pozwala przez serializator udostępnią informacje o serializatorów zagnieżdżonych."
  remarks: "Niektóre serializatorów wymagają informacje o kontekście obiektu poprawnie utrwalić stanu. Klasa ContextStack umożliwia serializator ustawić danych o kontekście obiektu, który jest serializowana stos, w którym inny element serializujący do niego dostęp. Wartość <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>właściwość jest udostępniana przez <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>do udostępniania informacji do użytku niektórych serializatorów.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>       Stos kontekstu jest przydatne, ponieważ głęboko zagnieżdżone procesu szeregowania dokument projektowy i obiektów na każdym poziomie zagnieżdżenia może wymagać informacje o kontekście poprawnie utrwalić stanu obiektu. Element serializujący można ustawić obiekt kontekstu stosu przed wywołaniem zagnieżdżonych serializatora. Każdy obiekt ustawioną na stosie powinien zostać usunięty przez serializator ustawioną go po powrocie wywołania zagnieżdżonych serializatora.       Na ogół obiektów na stosie zawierają informacje o kontekście bieżącego obiektu, który jest serializowana. Serializator nadrzędnego dodaje informacje o kontekście stosu o następny obiekt, który można serializować, wywołuje odpowiedni serializator i, po zakończeniu serializator wykonywania dla obiektu, usuwa informacje o kontekście ze stosu. Jest implementacja każdego serializatora do określenia, jakie obiekty uzyskać wypychana tej stosu.       Na przykład o nazwie obiektu z właściwością `Enabled` <xref:System.Boolean>.</xref:System.Boolean> typ danych Jeśli serializatora zapisuje tę wartość w strumieniu danych, może być konieczne uwzględnienie kontekstu lub typ właściwości go zapisuje. Serializator nie zawiera te informacje, ponieważ tylko instrukcje zapisu <xref:System.Boolean>wartość.</xref:System.Boolean> Może przekazać tę informację do serializatora, serializator nadrzędnego może wypchnąć <xref:System.ComponentModel.PropertyDescriptor>wskazującego `Enabled` właściwości na stos kontekstu.</xref:System.ComponentModel.PropertyDescriptor>"
  example:
  - "The following code example demonstrates using a ContextStack to push and then remove 10 values.  \n  \n [!code-cpp[ContextStackExample#1](~/add/codesnippet/cpp/t-system.componentmodel._11_1.cpp)]\n [!code-vb[ContextStackExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._11_1.vb)]\n [!code-cs[ContextStackExample#1](~/add/codesnippet/csharp/t-system.componentmodel._11_1.cs)]"
  syntax:
    content: public sealed class ContextStack
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: ContextStack()
  nameWithType: ContextStack.ContextStack()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.ContextStack()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.Design.Serialization.ContextStack&quot;> </xref> klasy."
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.ComponentModel.Design.Serialization.ContextStack> instance.  \n  \n [!code-cpp[ContextStackExample#2](~/add/codesnippet/cpp/m-system.componentmodel._1_1.cpp)]\n [!code-vb[ContextStackExample#2](~/add/codesnippet/visualbasic/m-system.componentmodel._1_1.vb)]\n [!code-cs[ContextStackExample#2](~/add/codesnippet/csharp/m-system.componentmodel._1_1.cs)]"
  syntax:
    content: public ContextStack ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.ContextStack.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)
  id: Append(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Append(Object)
  nameWithType: ContextStack.Append(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Append(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Dołącza obiekt na koniec stosu, a nie wypychania go na wierzchu stosu."
  remarks: "Ta metoda umożliwia serializatora do komunikowania się z innymi serializatorów przez dodawanie obiektów dane kontekstowe, które nie mają być usuwane w kolejności. Nie istnieje sposób można usunąć obiektu, który został dodany na końcu stosu bez usuwania wszystkie inne obiekty."
  syntax:
    content: public void Append (object context);
    parameters:
    - id: context
      type: System.Object
      description: "Obiekt kontekstu do dołączenia do stosu."
  overload: System.ComponentModel.Design.Serialization.ContextStack.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Current
  id: Current
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Current
  nameWithType: ContextStack.Current
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Current
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Pobiera bieżący obiekt na stosie."
  remarks: "Bieżący obiekt jest obiektem ze szczytu stosu lub obiektu, który został ostatnio dodany do stosu."
  syntax:
    content: public object Current { get; }
    return:
      type: System.Object
      description: "Bieżący obiekt na stosie, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli żadne obiekty nie zostały przekazane."
  overload: System.ComponentModel.Design.Serialization.ContextStack.Current*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ContextStack.Item(Int32)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Pobiera obiekt na stosie na określonym poziomie."
  syntax:
    content: public object this[int level] { get; }
    parameters:
    - id: level
      type: System.Int32
      description: "Poziom obiektu do pobrania na stosie. Poziom 0 to górę stosu, poziom 1 jest następny w dół, i tak dalej. Ten poziom musi być mniejsza od 0. Jeśli poziom jest większa niż liczba poziomów na stosie, zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Obiekt na stosie na określonym poziomie, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , jeśli nie istnieje żaden obiekt na tym poziomie."
  overload: System.ComponentModel.Design.Serialization.ContextStack.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>level</code>jest mniejsza niż 0."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)
  id: Item(System.Type)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Item(Type)
  nameWithType: ContextStack.Item(Type)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Type)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Pobiera pierwszy obiekt na stosie, która dziedziczy lub implementuje określonego typu."
  remarks: "Dokonuje na każdym poziomie stosu, wyszukiwanie obiektu, który implementuje lub dziedziczy `type`. Jeśli dopasowanie zostanie znaleziony, jest zwracana."
  syntax:
    content: public object this[Type type] { get; }
    parameters:
    - id: type
      type: System.Type
      description: "Typ do pobrania ze stosu kontekstu."
    return:
      type: System.Object
      description: "Pierwszy obiekt na stosie, która dziedziczy lub implementuje określonego typu lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli typ implementuje żaden obiekt na stosie."
  overload: System.ComponentModel.Design.Serialization.ContextStack.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop
  id: Pop
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Pop()
  nameWithType: ContextStack.Pop()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Pop()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Usuwa bieżący obiekt wylogowuje stosu, zwracając wartość."
  remarks: ''
  example:
  - "The following code example demonstrates removing a value from a <xref:System.ComponentModel.Design.Serialization.ContextStack>.  \n  \n [!code-cpp[ContextStackExample#4](~/add/codesnippet/cpp/m-system.componentmodel._2_1.cpp)]\n [!code-vb[ContextStackExample#4](~/add/codesnippet/visualbasic/m-system.componentmodel._2_1.vb)]\n [!code-cs[ContextStackExample#4](~/add/codesnippet/csharp/m-system.componentmodel._2_1.cs)]"
  syntax:
    content: public object Pop ();
    parameters: []
    return:
      type: System.Object
      description: "Obiekt usunięty ze stosu; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli żadne obiekty nie są na stosie."
  overload: System.ComponentModel.Design.Serialization.ContextStack.Pop*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)
  id: Push(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Push(Object)
  nameWithType: ContextStack.Push(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Push(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Wypchnięcia lub miejsc, jak określony obiekt na stosie."
  remarks: ''
  example:
  - "The following code example demonstrates pushing values to a <xref:System.ComponentModel.Design.Serialization.ContextStack>.  \n  \n [!code-cpp[ContextStackExample#3](~/add/codesnippet/cpp/m-system.componentmodel._20_1.cpp)]\n [!code-vb[ContextStackExample#3](~/add/codesnippet/visualbasic/m-system.componentmodel._20_1.vb)]\n [!code-cs[ContextStackExample#3](~/add/codesnippet/csharp/m-system.componentmodel._20_1.cs)]"
  syntax:
    content: public void Push (object context);
    parameters:
    - id: context
      type: System.Object
      description: "Obiekt kontekstu do przekazania do stosu."
  overload: System.ComponentModel.Design.Serialization.ContextStack.Push*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: ContextStack()
  nameWithType: ContextStack.ContextStack()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.ContextStack()
- uid: System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Append(Object)
  nameWithType: ContextStack.Append(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Append(Object)
- uid: System.ComponentModel.Design.Serialization.ContextStack.Current
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Current
  nameWithType: ContextStack.Current
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Current
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Item(Int32)
  nameWithType: ContextStack.Item(Int32)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Item(Type)
  nameWithType: ContextStack.Item(Type)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Pop()
  nameWithType: ContextStack.Pop()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Pop()
- uid: System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Push(Object)
  nameWithType: ContextStack.Push(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Push(Object)
- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: ContextStack
  nameWithType: ContextStack.ContextStack
- uid: System.ComponentModel.Design.Serialization.ContextStack.Append*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Append
  nameWithType: ContextStack.Append
- uid: System.ComponentModel.Design.Serialization.ContextStack.Current*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Current
  nameWithType: ContextStack.Current
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Item
  nameWithType: ContextStack.Item
- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Pop
  nameWithType: ContextStack.Pop
- uid: System.ComponentModel.Design.Serialization.ContextStack.Push*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Push
  nameWithType: ContextStack.Push
