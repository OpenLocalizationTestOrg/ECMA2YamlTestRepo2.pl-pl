### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Pkcs.SignedCms
  id: SignedCms
  children:
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.Certificates
  - System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  - System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  - System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  - System.Security.Cryptography.Pkcs.SignedCms.Detached
  - System.Security.Cryptography.Pkcs.SignedCms.Encode
  - System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  - System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  - System.Security.Cryptography.Pkcs.SignedCms.Version
  langs:
  - csharp
  name: SignedCms
  nameWithType: SignedCms
  fullName: System.Security.Cryptography.Pkcs.SignedCms
  type: Class
  summary: 'Klasa SignedCms umożliwia podpisywanie i weryfikowanie wiadomości CMS/PKCS #7.'
  remarks: "Kryptograficznych RFC składni wiadomości określa następujące typy MIME i rozszerzenia nazw plików CMS/PKCS #7 komunikatów z tych typów zawartości.      | Typ zawartości | Typ MIME | Rozszerzenie |   |------------------|---------------|---------------|   | envelopedData | aplikacji/pkcs7-mime |. p7m |   | signedData | aplikacji/pkcs7 — podpis |. p7s.p7c|"
  syntax:
    content: public sealed class SignedCms
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms()
  nameWithType: SignedCms.SignedCms()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Konstruktor SignedCms tworzy wystąpienie <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> klasy."
  remarks: "<xref:System.Security.Cryptography.Pkcs.SignedCms>Klasa ma domyślne wartości właściwości.</xref:System.Security.Cryptography.Pkcs.SignedCms>      | Właściwość | Wartość domyślna |   |--------------|-------------------|   | <xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>| 1.2.840.113549.1.7.1 (dane) długość: zero |   | <xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A>| Odłączyć stanu: `false` zawartości, który jest podpisany znajduje się w komunikacie CMS/PKCS #7 wraz z informacjami podpisu. |       Wartość domyślna <xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType>dla osoby podpisujące jest SubjectIdentifierType.IssuerAndSerialNumber.</xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType> </xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A> </xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>       Jeśli jest w stanie odłączony `false` (ustawienie domyślne), podpisanej zawartości znajduje się w komunikacie CMS/PKCS #7 wraz z informacjami podpisu. Jeśli jest w stanie odłączony `true`, klienci, w których nie można zdekodować wiadomości S/MIME nadal może wyświetlać zawartość komunikatu, jeśli są wysyłane niezależnie. Może to być przydatne w archiwizacji aplikacji, która archiwa zawartość komunikatu, czy można zweryfikować autentyczności nadawcy wiadomości."
  syntax:
    content: public SignedCms ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(ContentInfo)
  nameWithType: SignedCms.SignedCms(ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Konstruktor SignedCms tworzy wystąpienie <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> przy użyciu określonych informacji o zawartości jako zawartości wewnętrzny."
  remarks: "Domyślne wartości właściwości używane w tym konstruktorze zobacz <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Jeśli jest w stanie odłączony `false` (ustawienie domyślne), zawartość, która jest podpisany znajduje się w komunikacie CMS/PKCS #7 wraz z informacjami podpisu. Jeśli jest w stanie odłączony `true`, klienci, w których nie można zdekodować wiadomości S/MIME nadal może wyświetlać zawartość komunikatu, jeśli są wysyłane niezależnie. Może to być przydatne w archiwizacji aplikacji, która archiwa zawartość komunikatu, czy można zweryfikować autentyczności nadawcy wiadomości."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo);
    parameters:
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> obiekt, który określa informacje o zawartości jako zawartości wewnętrzny <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> wiadomości."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Konstruktor SignedCms tworzy wystąpienie <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> przy użyciu typ identyfikatora tematu określonego jako domyślny typ identyfikatora tematu dla osoby podpisujące."
  remarks: "Domyślne wartości właściwości używane w tym konstruktorze zobacz <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Jeśli jest w stanie odłączony `false` (ustawienie domyślne), zawartość, która jest podpisany znajduje się w komunikacie CMS/PKCS #7 wraz z informacjami podpisu. Jeśli jest w stanie odłączony `true`, klienci, w których nie można zdekodować wiadomości S/MIME nadal może wyświetlać zawartość komunikatu, jeśli są wysyłane niezależnie. Może to być przydatne w archiwizacji aplikacji, która archiwa zawartość komunikatu, czy można zweryfikować autentyczności nadawcy wiadomości."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> elementu członkowskiego, który określa domyślny typ identyfikatora tematu dla osoby podpisujące."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo,Boolean)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Konstruktor SignedCms tworzy wystąpienie <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> klasy przy użyciu informacji o zawartości określonego jako zawartość i przy użyciu stanie odłączony."
  remarks: "Domyślne wartości właściwości używane w tym konstruktorze zobacz <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Jeśli jest w stanie odłączony `false` (ustawienie domyślne), zawartość, która jest podpisany znajduje się w komunikacie CMS/PKCS #7 wraz z informacjami podpisu. Jeśli jest w stanie odłączony `true`, klienci, w których nie można zdekodować wiadomości S/MIME nadal może wyświetlać zawartość komunikatu, jeśli są wysyłane niezależnie. Może to być przydatne w archiwizacji aplikacji, która archiwa zawartość komunikatu, czy można zweryfikować autentyczności nadawcy wiadomości."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);
    parameters:
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> obiekt, który określa informacje o zawartości jako zawartości wewnętrzny <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> wiadomości."
    - id: detached
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość określająca, czy <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> obiekt jest odłączony podpisu.</xref:System.Boolean> Jeśli `detached` jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, podpis jest odłączona. Jeśli `detached` jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, podpis nie jest on odłączony."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType,ContentInfo)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Konstruktor SignedCms tworzy wystąpienie <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> przy użyciu typ identyfikatora tematu określonego jako domyślny typ identyfikatora tematu dla osoby podpisujące i informacje o zawartości jako zawartości wewnętrzny."
  remarks: "Domyślne wartości właściwości używane w tym konstruktorze zobacz <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Jeśli jest w stanie odłączony `false` (ustawienie domyślne), zawartość, która jest podpisany znajduje się w komunikacie CMS/PKCS #7 wraz z informacjami podpisu. Jeśli jest w stanie odłączony `true`, klienci, w których nie można zdekodować wiadomości S/MIME nadal może wyświetlać zawartość komunikatu, jeśli są wysyłane niezależnie. Może to być przydatne w archiwizacji aplikacji, która archiwa zawartość komunikatu, czy można zweryfikować autentyczności nadawcy wiadomości."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> elementu członkowskiego, który określa domyślny typ identyfikatora tematu dla osoby podpisujące."
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> obiekt, który określa informacje o zawartości jako zawartości wewnętrzny <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> wiadomości."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Konstruktor SignedCms tworzy wystąpienie <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> klasy przy użyciu typ identyfikatora tematu określonego jako domyślny typ identyfikatora tematu dla osoby podpisujące, informacje o zawartości jako zawartości wewnętrzny i przy użyciu stanie odłączony."
  remarks: 'Jeśli jest w stanie odłączony `false` (ustawienie domyślne), zawartość, która jest podpisany znajduje się w komunikacie CMS/PKCS #7 wraz z informacjami podpisu. Jeśli jest w stanie odłączony `true`, klienci, w których nie można zdekodować wiadomości S/MIME nadal może wyświetlać zawartość komunikatu, jeśli są wysyłane niezależnie. Może to być przydatne w archiwizacji aplikacji, która archiwa zawartość komunikatu lub nie można zweryfikować autentyczności nadawcy wiadomości.'
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> elementu członkowskiego, który określa domyślny typ identyfikatora tematu dla osoby podpisujące."
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> obiekt, który określa informacje o zawartości jako zawartości wewnętrzny <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> wiadomości."
    - id: detached
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość określająca, czy <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> obiekt jest odłączony podpisu.</xref:System.Boolean> Jeśli `detached` jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, podpis jest odłączona. Jeśli odłączyć jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, podpis nie jest on odłączony."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  id: Certificates
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Certificates
  nameWithType: SignedCms.Certificates
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Właściwość certyfikaty pobiera certyfikaty skojarzone z zakodowanym wiadomość CMS/PKCS #7.'
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: '<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> Kolekcję, która reprezentuje zestaw certyfikatów dla zakodowanego wiadomość CMS/PKCS #7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Certificates*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  id: CheckHash
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckHash()
  nameWithType: SignedCms.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckHash()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Metoda CheckHash sprawdza integralność wiadomość CMS/PKCS #7. CheckHash to specjalne metodę zabezpieczeń infrastruktury aplikacji, które chcesz tylko sprawdzić skrót wiadomość CMS, zamiast przeprowadzenia weryfikacji podpisu cyfrowego pełnej. CheckHash nie uwierzytelnić Autor ani nadawcy wiadomości, ponieważ ta metoda nie obejmuje sprawdzenia podpisu cyfrowego. Ogólnego przeznaczenia sprawdzania integralności i autentyczności wiadomość CMS/PKCS #7, użyj &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29&gt; lub &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29&gt; metody.'
  remarks: 'Ta metoda nie zapewnia uwierzytelniania wiadomości CMS/PKCS #7.'
  syntax:
    content: public void CheckHash ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckHash*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie metody jest nieprawidłowy dla bieżącego stanu obiektu."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  id: CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckSignature(Boolean)
  nameWithType: SignedCms.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message and, optionally, validates the signers'' certificates.'
  remarks: "Ta metoda sprawdza wszystkie podpisy w tym kontrasygnatury na wiadomość CMS/PKCS #7. W przypadku podpisanych atrybuty dołączone do wiadomości, również są weryfikowane te atrybuty. Jeśli opcja jest zaznaczona, aby zweryfikować certyfikaty, dołączone Cała część łańcucha certyfikatów jest weryfikowana.       Ta metoda zgłasza wyjątek, jeśli Weryfikacja podpisu cyfrowego nie powiedzie się lub nie są spełnione wszystkie wymagania weryfikacji."
  example:
  - "The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached. The message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/m-system.security.crypto_31_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/m-system.security.crypto_31_1.cs)]  \n  \n The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/m-system.security.crypto_31_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/m-system.security.crypto_31_2.cs)]"
  syntax:
    content: public void CheckSignature (bool verifySignatureOnly);
    parameters:
    - id: verifySignatureOnly
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która określa, czy podpisy cyfrowe są weryfikowane bez sprawdzania poprawności certyfikatów osoby podpisujące.</xref:System.Boolean>       Jeśli `verifySignatureOnly` jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, podpisy cyfrowe są weryfikowane. Jeśli jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, podpisy cyfrowe są weryfikowane osoby podpisujące certyfikaty są weryfikowane i celów certyfikaty są weryfikowane. Na potrzeby certyfikatu są uznawane za prawidłowe, jeśli certyfikat nie ma klucza zastosowania lub użycia klucza obsługuje podpisów cyfrowych lub niemożność."
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie można ukończyć operacji kryptograficznej."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie metody jest nieprawidłowy dla bieżącego stanu obiektu."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message by using the specified collection of certificates and, optionally, validates the signers'' certificates.'
  remarks: "Ta metoda sprawdza wszystkie podpisy w tym kontrasygnatury na wiadomość CMS/PKCS #7. W przypadku podpisanych atrybuty dołączone do wiadomości, również są weryfikowane te atrybuty. Jeśli opcja jest zaznaczona, aby zweryfikować certyfikaty, dołączone Cała część łańcucha certyfikatów jest weryfikowana.       Ta metoda zgłasza wyjątek, jeśli Weryfikacja podpisu cyfrowego nie powiedzie się lub nie są spełnione wszystkie wymagania weryfikacji."
  example:
  - "The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached, so the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/3c3d2469-0f69-4cc2-8a35-_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/3c3d2469-0f69-4cc2-8a35-_1.cs)]  \n  \n The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/3c3d2469-0f69-4cc2-8a35-_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/3c3d2469-0f69-4cc2-8a35-_2.cs)]"
  syntax:
    content: public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);
    parameters:
    - id: extraStore
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> Obiektu, który może służyć do sprawdzania poprawności łańcucha certyfikatów. Jeśli nie ma dodatkowych certyfikatów ma być używany do sprawdzania poprawności łańcucha certyfikatów, należy użyć &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29&gt; zamiast CheckSignature."
    - id: verifySignatureOnly
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która określa, czy podpisy cyfrowe są weryfikowane bez sprawdzania poprawności certyfikatów osoby podpisujące.</xref:System.Boolean>       Jeśli `verifySignatureOnly` jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, podpisy cyfrowe są weryfikowane. Jeśli jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, podpisy cyfrowe są weryfikowane osoby podpisujące certyfikaty są weryfikowane i celów certyfikaty są weryfikowane. Na potrzeby certyfikatu są uznawane za prawidłowe, jeśli certyfikat nie ma klucza zastosowania lub użycia klucza obsługuje podpisów cyfrowych lub niemożność."
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie można ukończyć operacji kryptograficznej."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie metody jest nieprawidłowy dla bieżącego stanu obiektu."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  id: ComputeSignature
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature()
  nameWithType: SignedCms.ComputeSignature()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Metoda ComputeSignature monituje użytkownika o wybranie certyfikatu podpisywania, tworzy podpis i dodaje podpis wiadomość CMS/PKCS #7.'
  remarks: "Ta metoda wyświetla interfejsu użytkownika, w którym można wybrać osoby podpisujące dla tej wiadomości. Wymaga to, czy bieżący proces jest uruchomiony w *tryb interaktywny użytkownik*, co oznacza że <xref:System.Environment.UserInteractive%2A?displayProperty=fullName>ma ustawioną właściwość `true`.</xref:System.Environment.UserInteractive%2A?displayProperty=fullName> Proces jest zwykle w trybie interakcyjnym użytkownika, chyba że jest uruchomiona w aplikacji sieci Web lub procesu usługi.       Na liście będzie wyświetlana osoby podpisujące, których certyfikaty spełniać następujące warunki:-certyfikat ma skojarzony klucz prywatny.      -Certyfikat jest okresem ważności.      -Certyfikat ma nie użycia klucza lub użycia klucza, obsługującym podpisy cyfrowe lub niemożność.       Podpisujący certyfikaty są wybierane ze sklepu.      ## Aby wyświetlić interfejs użytkownika wymagane są następujące uprawnienia zabezpieczeń programu .NET framework:- <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>wymagane są następujące uprawnienia dostępu do klucza podpisu:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>— <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  example:
  - "The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is not detached. In this case, the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#3](~/add/codesnippet/visualbasic/m-system.security.crypto_77_1.vb)]\n [!code-cs[mpkcs_SignedCMS#3](~/add/codesnippet/csharp/m-system.security.crypto_77_1.cs)]  \n  \n The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is detached. In this case, the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#4](~/add/codesnippet/visualbasic/m-system.security.crypto_77_2.vb)]\n [!code-cs[mpkcs_SignedCMS#4](~/add/codesnippet/csharp/m-system.security.crypto_77_2.cs)]"
  syntax:
    content: public void ComputeSignature ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie można ukończyć operacji kryptograficznej."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  id: ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature(CmsSigner)
  nameWithType: SignedCms.ComputeSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Metoda ComputeSignature tworzy podpis przy użyciu określonej osoby podpisującej i dodaje podpis wiadomość CMS/PKCS #7.'
  remarks: "## Zabezpieczenia programu .NET framework są wymagane następujące uprawnienia dostępu do klucza podpisu:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  example:
  - "The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is not detached. In this case, the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#3](~/add/codesnippet/visualbasic/07c3dd2c-cd35-4b97-996c-_1.vb)]\n [!code-cs[mpkcs_SignedCMS#3](~/add/codesnippet/csharp/07c3dd2c-cd35-4b97-996c-_1.cs)]  \n  \n The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is detached. In this case, the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#4](~/add/codesnippet/visualbasic/07c3dd2c-cd35-4b97-996c-_2.vb)]\n [!code-cs[mpkcs_SignedCMS#4](~/add/codesnippet/csharp/07c3dd2c-cd35-4b97-996c-_2.cs)]"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> obiekt, który reprezentuje podpisującego."
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie można ukończyć operacji kryptograficznej."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  id: ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature(CmsSigner,Boolean)
  nameWithType: SignedCms.ComputeSignature(CmsSigner,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Tworzy podpis przy użyciu określonej osoby podpisującej i dodaje podpis wiadomość CMS/PKCS #7. Jeśli wartość parametru dyskretnej <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> i <xref:System.Security.Cryptography.Pkcs.CmsSigner.Certificate*>właściwości <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> obiekt określony przez parametr podpisujący nie jest ustawiony na prawidłowy certyfikat, ta metoda monituje użytkownika o wybranie certyfikatu podpisywania.</xref:System.Security.Cryptography.Pkcs.CmsSigner.Certificate*>'
  remarks: "## Aby wyświetlić interfejs użytkownika wymagane są następujące uprawnienia zabezpieczeń programu .NET framework:- <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>wymagane są następujące uprawnienia dostępu do klucza podpisu:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>— <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> obiekt, który reprezentuje podpisującego."
    - id: silent
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>monitowanie użytkownika o wybranie certyfikatu podpisywania."
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie można ukończyć operacji kryptograficznej."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wartość <code> silent </code> parametr jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> i nie określono certyfikatu podpisywania."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  id: ContentInfo
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Właściwość ContentInfo pobiera zawartość wewnętrzny zakodowany komunikat CMS/PKCS #7.'
  syntax:
    content: public System.Security.Cryptography.Pkcs.ContentInfo ContentInfo { get; }
    return:
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: 'A <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> obiekt, który reprezentuje zawartość zakodowany komunikat CMS/PKCS #7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  id: Decode(System.Byte[])
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Decode(Byte[])
  nameWithType: SignedCms.Decode(Byte[])
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Decode(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Metoda dekodowania dekoduje zakodowanego <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> wiadomości. Po pomyślnym dekodowania dekodowane informacje mogą zostać pobrane z właściwości <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> obiektu."
  remarks: "Ta metoda powoduje zresetowanie wszystkich zmiennych Członkowskich obiektu przy użyciu informacji uzyskanych z dekodowania powiodło się."
  example:
  - "The following example shows the placement of the Decode method in the process of verifying the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached, so the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/m-system.security.crypto_48_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/m-system.security.crypto_48_1.cs)]  \n  \n The following example shows the placement of the Decode method in the process of verifying the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/m-system.security.crypto_48_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/m-system.security.crypto_48_2.cs)]"
  syntax:
    content: public void Decode (byte[] encodedMessage);
    parameters:
    - id: encodedMessage
      type: System.Byte[]
      description: 'Tablica wartości bajtów reprezentujący zakodowanego CMS/PKCS #7 komunikat, który ma zostać zdekodowane.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Decode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie można ukończyć operacji kryptograficznej."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached
  id: Detached
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Detached
  nameWithType: SignedCms.Detached
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Detached
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Pobiera właściwość odłączyć czy <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> obiekt jest odłączony podpisu."
  syntax:
    content: public bool Detached { get; }
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość określająca, czy <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> obiekt jest odłączony podpisu.</xref:System.Boolean> Jeśli ta właściwość jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, podpis jest odłączona. Jeśli ta właściwość jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, podpis nie jest on odłączony."
  overload: System.Security.Cryptography.Pkcs.SignedCms.Detached*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode
  id: Encode
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Encode()
  nameWithType: SignedCms.Encode()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Encode()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Metoda Koduj koduje dane w obiekcie do wiadomości CMS/PKCS #7.'
  syntax:
    content: public byte[] Encode ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Tablica wartości bajtów reprezentujący zakodowany komunikat. Zakodowany komunikat może zostać odczytany przez <xref:System.Security.Cryptography.Pkcs.SignedCms.Decode*>metody.</xref:System.Security.Cryptography.Pkcs.SignedCms.Decode*>"
  overload: System.Security.Cryptography.Pkcs.SignedCms.Encode*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie można ukończyć operacji kryptograficznej."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie metody jest nieprawidłowy dla bieżącego stanu obiektu."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  id: RemoveSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: RemoveSignature(Int32)
  nameWithType: SignedCms.RemoveSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Usuwa podpisu w określonym indeksie <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*>kolekcji.</xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*>"
  syntax:
    content: public void RemoveSignature (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks sygnatury do usunięcia."
  overload: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'Wiadomość CMS/PKCS #7 nie jest podpisany, a <code> index </code> jest nieprawidłowy.'
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera.       - lub - <code>index</code> jest większa niż liczba podpisu pomniejszonej o 1."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie można usunąć podpisu.       - lub - wystąpił błąd wewnętrzny usług kryptograficznych."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  id: RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: RemoveSignature(SignerInfo)
  nameWithType: SignedCms.RemoveSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(SignerInfo)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Metoda RemoveSignature usuwa podpis dla określonego <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> obiektu."
  syntax:
    content: public void RemoveSignature (System.Security.Cryptography.Pkcs.SignerInfo signerInfo);
    parameters:
    - id: signerInfo
      type: System.Security.Cryptography.Pkcs.SignerInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> obiekt, który reprezentuje kontrasygnatę usuwana."
  overload: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Odwołanie o wartości null został przekazany do metody, które nie są akceptowane jako prawidłowy argument."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość argumentu jest poza dozwolonym zakresem wartości zgodnie z definicją w nazwie metody."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Nie można ukończyć operacji kryptograficznej."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  id: SignerInfos
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Pobiera właściwość SignerInfos <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref> kolekcji skojarzonych z komunikatem CMS/PKCS #7.'
  syntax:
    content: public System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SignerInfoCollection
      description: 'A <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref> obiekt, który reprezentuje informacje o osobie podpisującej wiadomość CMS/PKCS #7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version
  id: Version
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Version
  nameWithType: SignedCms.Version
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Version
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Właściwość Version pobiera wersję wiadomość CMS/PKCS #7.'
  remarks: 'Wersja Określa, czy wiadomość jest komunikat PKCS #7 lub komunikat składni wiadomości kryptograficznych (CMS). CMS to nowsza nadzbiorem PKCS #7.'
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: 'Wartość int, która reprezentuje wersji komunikatu CMS/PKCS #7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms()
  nameWithType: SignedCms.SignedCms()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms()
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(ContentInfo)
  nameWithType: SignedCms.SignedCms(ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo)
- uid: System.Security.Cryptography.Pkcs.ContentInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: ContentInfo
  nameWithType: ContentInfo
  fullName: System.Security.Cryptography.Pkcs.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType)
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierType
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SubjectIdentifierType
  nameWithType: SubjectIdentifierType
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierType
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType,ContentInfo)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Certificates
  nameWithType: SignedCms.Certificates
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Certificates
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckHash()
  nameWithType: SignedCms.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckHash()
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature(Boolean)
  nameWithType: SignedCms.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature()
  nameWithType: SignedCms.ComputeSignature()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature()
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature(CmsSigner)
  nameWithType: SignedCms.ComputeSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner)
- uid: System.Security.Cryptography.Pkcs.CmsSigner
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: CmsSigner
  nameWithType: CmsSigner
  fullName: System.Security.Cryptography.Pkcs.CmsSigner
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature(CmsSigner,Boolean)
  nameWithType: SignedCms.ComputeSignature(CmsSigner,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Decode(Byte[])
  nameWithType: SignedCms.Decode(Byte[])
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Decode(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Detached
  nameWithType: SignedCms.Detached
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Detached
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Encode()
  nameWithType: SignedCms.Encode()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Encode()
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature(Int32)
  nameWithType: SignedCms.RemoveSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature(SignerInfo)
  nameWithType: SignedCms.RemoveSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(SignerInfo)
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfoCollection
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfoCollection
  nameWithType: SignerInfoCollection
  fullName: System.Security.Cryptography.Pkcs.SignerInfoCollection
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Version
  nameWithType: SignedCms.Version
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Version
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms
  nameWithType: SignedCms.SignedCms
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Certificates
  nameWithType: SignedCms.Certificates
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckHash
  nameWithType: SignedCms.CheckHash
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature
  nameWithType: SignedCms.CheckSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature
  nameWithType: SignedCms.ComputeSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Decode
  nameWithType: SignedCms.Decode
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Detached
  nameWithType: SignedCms.Detached
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Encode
  nameWithType: SignedCms.Encode
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature
  nameWithType: SignedCms.RemoveSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Version
  nameWithType: SignedCms.Version
