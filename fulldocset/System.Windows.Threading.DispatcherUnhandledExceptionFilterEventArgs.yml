### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  id: DispatcherUnhandledExceptionFilterEventArgs
  children:
  - System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  - System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  langs:
  - csharp
  name: DispatcherUnhandledExceptionFilterEventArgs
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  type: Class
  summary: "Udostępnia dane dla <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> <xref href=&quot;System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot;> </xref> zdarzeń."
  remarks: "<xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>Zdarzenie występuje, gdy kod wykonywania poprzez <xref:System.Windows.Threading.Dispatcher>zgłasza wyjątek, który nie jest obsługiwana.</xref:System.Windows.Threading.Dispatcher> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>       <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>Zdarzeń umożliwia nie wygenerował <xref:System.Windows.Threading.Dispatcher.UnhandledException>zdarzeń.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>  <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>Zdarzenie jest wywoływane po pierwsze i w razie <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A>na DispatcherUnhandledExceptionFilterEventArgs jest ustawiona na `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException>zdarzenie nie zostanie wygenerowany.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>"
  syntax:
    content: 'public sealed class DispatcherUnhandledExceptionFilterEventArgs : System.Windows.Threading.DispatcherEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.Threading.DispatcherEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherEventArgs.Dispatcher
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  id: Exception
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.Exception
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Pobiera wyjątek zgłoszony podczas wykonywania kodu i Dyspozytor."
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "Wyjątek."
  overload: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  id: RequestCatch
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  langs:
  - csharp
  name: RequestCatch
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Pobiera lub ustawia, czy wyjątek powinien zostać zgłoszony i wywoływane programy obsługi zdarzeń."
  remarks: "<xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>Zdarzeń umożliwia nie wygenerował <xref:System.Windows.Threading.Dispatcher.UnhandledException>zdarzeń.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>  <xref:System.Windows.Threading.Dispatcher.UnhandledException>Jest zgłoszono pierwsze i jeśli RequestCatch na <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs>ustawiono `false`, <xref:System.Windows.Threading.Dispatcher.UnhandledException>zdarzenie nie zostanie wygenerowany.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> </xref:System.Windows.Threading.Dispatcher.UnhandledException>       Poprzednią procedurę obsługi zdarzeń multiemisji może być już ustawić tę właściwość na `false`, wskazującą, czy wyjątek nie zostanie przechwycony.  Zachowanie &quot;catch nie&quot; spowoduje zastąpienie wszystkich innych, ponieważ prawdopodobnie oznacza scenariusza debugowania."
  syntax:
    content: public bool RequestCatch { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Windows.Threading.Dispatcher.UnhandledException&quot;> </xref> powinien być zgłoszono; w przeciwnym razie; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.  Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherEventArgs
  isExternal: false
  name: System.Windows.Threading.DispatcherEventArgs
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: Exception
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.Exception
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: RequestCatch
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception*
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: Exception
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.Exception
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch*
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: RequestCatch
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
