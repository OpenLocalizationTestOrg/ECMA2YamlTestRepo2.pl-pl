### YamlMime:ManagedReference
items:
- uid: System.Messaging.AccessControlEntry
  id: AccessControlEntry
  children:
  - System.Messaging.AccessControlEntry.#ctor
  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  - System.Messaging.AccessControlEntry.CustomAccessRights
  - System.Messaging.AccessControlEntry.EntryType
  - System.Messaging.AccessControlEntry.GenericAccessRights
  - System.Messaging.AccessControlEntry.StandardAccessRights
  - System.Messaging.AccessControlEntry.Trustee
  langs:
  - csharp
  name: AccessControlEntry
  nameWithType: AccessControlEntry
  fullName: System.Messaging.AccessControlEntry
  type: Class
  summary: "Określa prawa dostępu zarządca (użytkownika, grupy lub komputer), do wykonania implementacje specyficzne dla aplikacji wykonywanych zadań."
  remarks: "Wiele aplikacji ma podobnych operacji, do których powiernika można przypisać prawa, na przykład czytania, zapisywania i usuwanie obiektów. Podczas przypisywania uprawnień do tych operacji ogólne aplikacji interpretuje je w sposób określonych dla tej aplikacji. Na przykład usługi kolejkowania komunikatów interpretuje operacji odczytu jako odbieranie lub wybierania wiadomości z kolejki. Klasa AccessControlEntry zapewnia dostęp do tych praw wspólnych.       Podczas pracy z wpisów kontroli dostępu, należy określić zarządca, do której są przypisywane uprawnienia. Należy skonfigurować co najmniej jeden z <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, lub <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>Właściwości w celu wskazania prawa, które można przypisać do osoby zaufanej.</xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> Można ustawić <xref:System.Messaging.AccessControlEntry.EntryType%2A>Właściwości w celu określenia, czy udzielono lub odmówiono uprawnień, należy wskazać.</xref:System.Messaging.AccessControlEntry.EntryType%2A> Domyślny typ wpisu jest umożliwienie praw."
  syntax:
    content: public class AccessControlEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor
  id: '#ctor'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry()
  nameWithType: AccessControlEntry.AccessControlEntry()
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> klasy, która określa zarządca ani zestaw praw do zastosowania."
  remarks: "Ustaw <xref:System.Messaging.AccessControlEntry.Trustee%2A>Właściwości i co najmniej jeden z <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, lub <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>Właściwości przed użyciem to <xref:System.Messaging.AccessControlEntry>wystąpienia można ustawić praw dostępu dla osobę zaufaną.</xref:System.Messaging.AccessControlEntry> </xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> </xref:System.Messaging.AccessControlEntry.Trustee%2A>       Opcjonalnie możesz ustawić <xref:System.Messaging.AccessControlEntry.EntryType%2A>Właściwości, chociaż domyślne `Allow` wybranie opcji nie można wykonać operacji</xref:System.Messaging.AccessControlEntry.EntryType%2A>"
  syntax:
    content: public AccessControlEntry ();
    parameters: []
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  id: '#ctor(System.Messaging.Trustee)'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry(Trustee)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> klasy, która określa zarządca, któremu udzielono lub odmówiono uprawnień."
  remarks: "Ustaw <xref:System.Messaging.AccessControlEntry.EntryType%2A>Właściwości i co najmniej jeden z <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, lub <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>Właściwości przed użyciem to <xref:System.Messaging.AccessControlEntry>wystąpienia można ustawić praw dostępu dla osobę zaufaną.</xref:System.Messaging.AccessControlEntry> </xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> </xref:System.Messaging.AccessControlEntry.EntryType%2A>"
  syntax:
    content: public AccessControlEntry (System.Messaging.Trustee trustee);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "A <xref href=&quot;System.Messaging.Trustee&quot;> </xref> , który określa użytkownika, grupy, komputera, domeny lub aliasu."
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>trustee</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  id: '#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> klasy, która określa osobę zaufaną, prawa do przypisania i czy Udziel lub Odmów tych praw."
  remarks: "To przeciążenie ustawia konstruktora <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>Właściwości bitowe połączenie `genericAccessRights` i `standardAccessRights` parametry można określić.</xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>"
  syntax:
    content: public AccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.GenericAccessRights genericAccessRights, System.Messaging.StandardAccessRights standardAccessRights, System.Messaging.AccessControlEntryType entryType);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "A <xref href=&quot;System.Messaging.Trustee&quot;> </xref> , który określa użytkownika, grupy, komputera, domeny lub aliasu."
    - id: genericAccessRights
      type: System.Messaging.GenericAccessRights
      description: "Bitowe połączenie <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> wartości."
    - id: standardAccessRights
      type: System.Messaging.StandardAccessRights
      description: "Bitowe połączenie <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> wartości."
    - id: entryType
      type: System.Messaging.AccessControlEntryType
      description: "Jeden z <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> wartości, które określa, czy zezwalać, Odmów, ustawić lub odwołać określonych uprawnień."
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>trustee</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code> genericAccessRights </code>, <code> standardAccessRights </code>, Lub <code> entryType </code> parametry nie są poprawnymi wartościami wyliczania."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.CustomAccessRights
  id: CustomAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
  fullName: System.Messaging.AccessControlEntry.CustomAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Pobiera lub ustawia uprawnienia niestandardowe."
  syntax:
    content: protected int CustomAccessRights { get; set; }
    return:
      type: System.Int32
      description: "Prawa dostępu specyficzne dla aplikacji, zazwyczaj definiowane jako flag bitowych."
  overload: System.Messaging.AccessControlEntry.CustomAccessRights*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.EntryType
  id: EntryType
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
  fullName: System.Messaging.AccessControlEntry.EntryType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Pobiera lub ustawia wartość wskazującą, jak prawa dostępu są stosowane do osoby zaufanej."
  syntax:
    content: public System.Messaging.AccessControlEntryType EntryType { get; set; }
    return:
      type: System.Messaging.AccessControlEntryType
      description: "Jeden z <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> wartości, które określa, czy zezwalać, Odmów, ustawić lub odwołać określonych uprawnień. Wartość domyślna to <xref uid=&quot;langword_csharp_Allow&quot; name=&quot;Allow&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.AccessControlEntry.EntryType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Typ wpisu nie jest prawidłową <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> wartości wyliczenia."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.GenericAccessRights
  id: GenericAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
  fullName: System.Messaging.AccessControlEntry.GenericAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Pobiera lub ustawia zestaw typowych praw dostępu, które mapują na obu prawa dostępu standard i określonego obiektu do odczytu, zapisu i wykonywania."
  remarks: "Obiekty zabezpieczane umożliwia Określ prawa dostępu ogólnego czterech bardziej znaczących bitów format maski dostępu systemu Windows 2000 i Windows NT. Każdy typ obiektu zabezpieczanego mapuje te usługi bits zestaw praw dostępu standard i określonego obiektu. Aplikacje, które zdefiniuj prywatnej zabezpieczanych obiektów można również użyć prawa dostępu ogólnego."
  syntax:
    content: public System.Messaging.GenericAccessRights GenericAccessRights { get; set; }
    return:
      type: System.Messaging.GenericAccessRights
      description: "Bitowe połączenie <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> wartości."
  overload: System.Messaging.AccessControlEntry.GenericAccessRights*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Wartość nie jest prawidłową kombinacją <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> flag bitowych członków."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.StandardAccessRights
  id: StandardAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
  fullName: System.Messaging.AccessControlEntry.StandardAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Pobiera lub ustawia zestaw praw dostępu standardowe, które odpowiadają operacji wspólnych dla większości typów zabezpieczanych obiektów."
  remarks: "Format maski dostępu systemu Windows 2000 i Windows NT obejmuje zestaw bitów prawa dostępu standardowa. Każdy typ zabezpieczanego obiektu ma zestaw praw dostępu, które odpowiadają operacji specyficzne dla tego typu obiektów. Oprócz tych praw dostępu do określonego obiektu istnieje zestaw praw dostępu standardowego odpowiadające operacji wspólnych dla większości typów zabezpieczanych obiektów."
  syntax:
    content: public System.Messaging.StandardAccessRights StandardAccessRights { get; set; }
    return:
      type: System.Messaging.StandardAccessRights
      description: "Bitowe połączenie <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> wartości."
  overload: System.Messaging.AccessControlEntry.StandardAccessRights*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Wartość nie jest prawidłową kombinacją <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> flag bitowych członków."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.Trustee
  id: Trustee
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
  fullName: System.Messaging.AccessControlEntry.Trustee
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Pobiera lub ustawia użytkownika, grupy, domeny lub alias do której są Przypisywanie praw dostępu."
  remarks: "Zarówno użytkowników, jak i programów, takich jak usługi Win32, należy użyć kont użytkowników do logowania się komputerze lokalnym. Konta grupy nie może służyć do logowania się do komputera, ale są przydatne w <xref:System.Messaging.AccessControlEntry>wystąpień zezwalające lub niezezwalające zestaw uprawnienia do co najmniej jednego konta użytkownika.</xref:System.Messaging.AccessControlEntry>"
  syntax:
    content: public System.Messaging.Trustee Trustee { get; set; }
    return:
      type: System.Messaging.Trustee
      description: "A <xref href=&quot;System.Messaging.Trustee&quot;> </xref> , który określa konto użytkownika, grupy lub sesji logowania, do którego <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> ma zastosowanie."
  overload: System.Messaging.AccessControlEntry.Trustee*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Właściwość osoby zaufanej jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Messaging.AccessControlEntry.#ctor
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry()
  nameWithType: AccessControlEntry.AccessControlEntry()
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry()
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry(Trustee)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee)
- uid: System.Messaging.Trustee
  parent: System.Messaging
  isExternal: false
  name: Trustee
  nameWithType: Trustee
  fullName: System.Messaging.Trustee
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
- uid: System.Messaging.GenericAccessRights
  parent: System.Messaging
  isExternal: false
  name: GenericAccessRights
  nameWithType: GenericAccessRights
  fullName: System.Messaging.GenericAccessRights
- uid: System.Messaging.StandardAccessRights
  parent: System.Messaging
  isExternal: false
  name: StandardAccessRights
  nameWithType: StandardAccessRights
  fullName: System.Messaging.StandardAccessRights
- uid: System.Messaging.AccessControlEntryType
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntryType
  nameWithType: AccessControlEntryType
  fullName: System.Messaging.AccessControlEntryType
- uid: System.Messaging.AccessControlEntry.CustomAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
  fullName: System.Messaging.AccessControlEntry.CustomAccessRights
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Messaging.AccessControlEntry.EntryType
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
  fullName: System.Messaging.AccessControlEntry.EntryType
- uid: System.Messaging.AccessControlEntry.GenericAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
  fullName: System.Messaging.AccessControlEntry.GenericAccessRights
- uid: System.Messaging.AccessControlEntry.StandardAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
  fullName: System.Messaging.AccessControlEntry.StandardAccessRights
- uid: System.Messaging.AccessControlEntry.Trustee
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
  fullName: System.Messaging.AccessControlEntry.Trustee
- uid: System.Messaging.AccessControlEntry.#ctor*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry
  nameWithType: AccessControlEntry.AccessControlEntry
- uid: System.Messaging.AccessControlEntry.CustomAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
- uid: System.Messaging.AccessControlEntry.EntryType*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
- uid: System.Messaging.AccessControlEntry.GenericAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
- uid: System.Messaging.AccessControlEntry.StandardAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
- uid: System.Messaging.AccessControlEntry.Trustee*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
