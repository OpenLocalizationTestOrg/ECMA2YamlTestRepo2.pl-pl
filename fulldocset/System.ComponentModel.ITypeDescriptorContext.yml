### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ITypeDescriptorContext
  id: ITypeDescriptorContext
  children:
  - System.ComponentModel.ITypeDescriptorContext.Container
  - System.ComponentModel.ITypeDescriptorContext.Instance
  - System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  - System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  - System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  langs:
  - csharp
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
  type: Interface
  summary: "Zapewnia informacje kontekstowe dotyczące składnika, takie jak jego kontenera i deskryptora właściwości."
  remarks: "Interfejs ITypeDescriptorContext zapewnia informacje kontekstowe dotyczące składnika. ITypeDescriptorContext jest zwykle używanych w czasie projektowania, aby podać informacje o kontenerze czasu projektowania. Ten interfejs jest powszechnie używany podczas konwersji typu. Aby uzyskać więcej informacji zobacz <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>      > [!NOTE] > Nie należy polegać na obecność ten interfejs podczas projektowania konwertera typów. Jeśli określony interfejs, właściwości lub usługi jest konieczne, ale nie jest dostępna, konwerter typów powinien zwrócić `null` zamiast zgłoszenia wyjątku. Właściwości ten interfejs może zwracać `null` w dowolnym momencie i należy zaplanować tego."
  example:
  - "The following code example demonstrates how to use the ITypeDescriptorContext interface to support type conversion.  \n  \n [!code-cpp[InstanceDescriptorSample#1](~/add/codesnippet/cpp/t-system.componentmodel._73_1.cpp)]\n [!code-vb[InstanceDescriptorSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._73_1.vb)]\n [!code-cs[InstanceDescriptorSample#1](~/add/codesnippet/csharp/t-system.componentmodel._73_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ITypeDescriptorContext : IServiceProvider
  implements:
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.Container
  id: Container
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: Container
  nameWithType: ITypeDescriptorContext.Container
  fullName: System.ComponentModel.ITypeDescriptorContext.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera kontener reprezentujący to <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> żądania."
  remarks: "Właściwości kontenera pobiera kontenerem logicznym powiązane z deskryptorem typu składnika."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> z zestawu obiektów w tym <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli nie ma żadnych kontenera lub jeśli <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> nie korzysta z obiektów zewnętrznych."
  overload: System.ComponentModel.ITypeDescriptorContext.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.Instance
  id: Instance
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
  fullName: System.ComponentModel.ITypeDescriptorContext.Instance
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera obiekt, który jest połączony z tym żądaniem deskryptor typu."
  remarks: "Właściwość wystąpienia pobiera obiekt, który wywołuje <xref:System.ComponentModel.ITypeDescriptorContext>interfejsu.</xref:System.ComponentModel.ITypeDescriptorContext> Na przykład, jeśli podano konwertera typów, <xref:System.Drawing.Color>Aby dokonać konwersji, rzeczywiste wystąpienie formantu, który używa <xref:System.Drawing.Color>.</xref:System.Drawing.Color> Zwraca wystąpienie</xref:System.Drawing.Color> Następnie można zbadać sterowania, aby uzyskać więcej informacji o usługach i jego <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>.</xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>"
  syntax:
    content: public object Instance { get; }
    return:
      type: System.Object
      description: "Obiekt, który wywołuje metodę na <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , jeśli nie ma żadnego obiektu odpowiada za wywołanie."
  overload: System.ComponentModel.ITypeDescriptorContext.Instance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  id: OnComponentChanged
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: OnComponentChanged()
  nameWithType: ITypeDescriptorContext.OnComponentChanged()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zgłasza <xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot;> </xref> zdarzeń."
  remarks: "Metoda OnComponentChanged do wysyłania powiadomień, zmienił się wystąpienia obiektu.       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: wywoływanie zdarzeń](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoda OnComponentChanged umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  syntax:
    content: public void OnComponentChanged ();
    parameters: []
  overload: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  id: OnComponentChanging
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: OnComponentChanging()
  nameWithType: ITypeDescriptorContext.OnComponentChanging()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zgłasza <xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot;> </xref> zdarzeń."
  remarks: "Metoda OnComponentChanging służy do wysyłania powiadomień, który ma zostać zmieniony wystąpienia obiektu. Ta metoda zwraca również wartość wskazującą, czy ten obiekt może zostać zmieniony. Gdy `false` jest zwracany, nie należy zmieniać obiektu.       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: wywoływanie zdarzeń](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoda OnComponentChanging umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  syntax:
    content: public bool OnComponentChanging ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ten obiekt może być zmieniany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  id: PropertyDescriptor
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
  fullName: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> skojarzonego z elementem danego kontekstu."
  syntax:
    content: public System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> Opisujący podanym kontekście elementu; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> w przypadku nie <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> odpowiada za wywołanie."
  overload: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ITypeDescriptorContext.Container
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Container
  nameWithType: ITypeDescriptorContext.Container
  fullName: System.ComponentModel.ITypeDescriptorContext.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.ITypeDescriptorContext.Instance
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
  fullName: System.ComponentModel.ITypeDescriptorContext.Instance
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanged()
  nameWithType: ITypeDescriptorContext.OnComponentChanged()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged()
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanging()
  nameWithType: ITypeDescriptorContext.OnComponentChanging()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
  fullName: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.ITypeDescriptorContext.Container*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Container
  nameWithType: ITypeDescriptorContext.Container
- uid: System.ComponentModel.ITypeDescriptorContext.Instance*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanged
  nameWithType: ITypeDescriptorContext.OnComponentChanged
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanging
  nameWithType: ITypeDescriptorContext.OnComponentChanging
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
