### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ValidationError
  id: ValidationError
  children:
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  - System.Windows.Controls.ValidationError.BindingInError
  - System.Windows.Controls.ValidationError.ErrorContent
  - System.Windows.Controls.ValidationError.Exception
  - System.Windows.Controls.ValidationError.RuleInError
  langs:
  - csharp
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Windows.Controls.ValidationError
  type: Class
  summary: "Reprezentuje błąd sprawdzania poprawności, który jest tworzony przez powiązanie aparat kiedy <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> zgłasza błąd sprawdzania poprawności, lub za pomocą <xref:System.Windows.Controls.Validation.MarkInvalid*>Metoda jawnie.</xref:System.Windows.Controls.Validation.MarkInvalid*>"
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] Modelu powiązania danych umożliwia kojarzenie reguł sprawdzania poprawności z Twojej <xref:System.Windows.Data.Binding>obiektu.</xref:System.Windows.Data.Binding> Sprawdzanie poprawności jest wykonywane podczas transferu wartości docelowej do źródłowej przed wywołaniem konwerter. Poniżej opisano proces sprawdzania poprawności.      1.  Jeśli wartość jest przenoszona z właściwością target właściwości source, aparat wiązania danych najpierw usuwa wszelkie ValidationError, który może być dodany do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>dołączona właściwość elementu powiązania.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Następnie sprawdza, czy dla tego <xref:System.Windows.Data.Binding>w którym to przypadku wywołuje <xref:System.Windows.Controls.ValidationRule.Validate%2A>metodę na każdym <xref:System.Windows.Controls.ValidationRule>dopóki jeden z nich ulegnie awarii lub dopóki wszystkie niepomyślnie</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Data.Binding> zdefiniowano wszelkie niestandardowe reguły walidacji      2.  Po utworzeniu reguły niestandardowej, które nie zostały spełnione, aparat wiązania tworzy obiekt ValidationError i dodaje go do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>kolekcji elementu powiązania.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Gdy <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>nie jest pusta, <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName>dołączona właściwość elementu ma wartość `true`.</xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> </xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Ponadto jeśli <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>Właściwość <xref:System.Windows.Data.Binding>ma ustawioną wartość `true`, a następnie wywołuje aparat wiązania <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>dołączony zdarzeń dla elementu.</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>      3.  Jeśli Przekaż wszystkie reguły, aparat wiązania wywołuje konwerter, jeśli taka istnieje.      4.  Jeśli konwerter zakończy się pomyślnie, aparat wiązania wywołuje metodę ustawiającą właściwość source.      5.  Jeśli ma powiązanie <xref:System.Windows.Controls.ExceptionValidationRule>skojarzonych z nim i podczas wykonywania kroku 3 lub 4 jest zgłaszany wyjątek, aparat wiązania sprawdza, czy jest <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> </xref:System.Windows.Controls.ExceptionValidationRule> Można użyć <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>wywołania zwrotnego w celu zapewnienia obsługi niestandardowych do obsługi wyjątków.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> Jeśli <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>nie jest określona w <xref:System.Windows.Data.Binding>, aparat wiązania tworzy ValidationError z wyjątkiem i dodaje go do <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>kolekcji elementu powiązania.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>       Przeniesienie prawidłową wartość w obu kierunkach (docelowy źródło lub źródłowego do docelowego) spowoduje wyczyszczenie <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>dołączona właściwość.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of ValidationError objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public class ValidationError
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> klasy z określonymi parametrami."
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "Reguła, która wykryto błąd sprawdzania poprawności."
    - id: bindingInError
      type: System.Object
      description: "<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> Lub <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> obiektu z powodu błędu sprawdzania poprawności."
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> klasy z określonymi parametrami."
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "Reguła, która wykryto błąd sprawdzania poprawności."
    - id: bindingInError
      type: System.Object
      description: "<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> Lub <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> obiektu z powodu błędu sprawdzania poprawności."
    - id: errorContent
      type: System.Object
      description: "Informacje o tym błędzie."
    - id: exception
      type: System.Exception
      description: "Wyjątek, który spowodował niepowodzenie weryfikacji. Ten parametr jest opcjonalny i może być ustawiony na <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.BindingInError
  id: BindingInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets the <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>. Obiekt jest oznaczony jako nieprawidłowy jawnie lub ma reguły walidacji nie powiodło się."
  syntax:
    content: public object BindingInError { get; }
    return:
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>."
  overload: System.Windows.Controls.ValidationError.BindingInError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.ErrorContent
  id: ErrorContent
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Pobiera lub ustawia obiekt, który zawiera dodatkowy kontekst dla tego <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, takie jak ciąg opisujący błąd."
  remarks: "<a name=&quot;xamlTextUsage_ErrorContent&quot;></a>## Zobacz użycie tekstu XAML przykładzie sekcja przykład."
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of <xref:System.Windows.Controls.ValidationError> objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public object ErrorContent { get; set; }
    return:
      type: System.Object
      description: "Obiekt, który zawiera dodatkowy kontekst dla tego <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>."
  overload: System.Windows.Controls.ValidationError.ErrorContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.Exception
  id: Exception
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Pobiera lub ustawia <xref:System.Exception>obiektu, która była przyczyną tego <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, jeśli ten błąd jest wynikiem wyjątek.</xref:System.Exception>"
  syntax:
    content: public Exception Exception { get; set; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>Obiektu, jeśli ten błąd jest wynikiem wyjątek.</xref:System.Exception>"
  overload: System.Windows.Controls.ValidationError.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.RuleInError
  id: RuleInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Pobiera lub ustawia <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> obiektu, która była przyczyną tego <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, jeśli ten błąd jest wynikiem reguły sprawdzania poprawności."
  syntax:
    content: public System.Windows.Controls.ValidationRule RuleInError { get; set; }
    return:
      type: System.Windows.Controls.ValidationRule
      description: "<xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> Obiektu, jeśli ten błąd jest wynikiem reguły sprawdzania poprawności."
  overload: System.Windows.Controls.ValidationError.RuleInError*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
- uid: System.Windows.Controls.ValidationRule
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationRule
  nameWithType: ValidationRule
  fullName: System.Windows.Controls.ValidationRule
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Windows.Controls.ValidationError.BindingInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
- uid: System.Windows.Controls.ValidationError.#ctor*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError
  nameWithType: ValidationError.ValidationError
- uid: System.Windows.Controls.ValidationError.BindingInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
