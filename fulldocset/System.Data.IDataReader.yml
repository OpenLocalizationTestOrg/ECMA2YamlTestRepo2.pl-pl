### YamlMime:ManagedReference
items:
- uid: System.Data.IDataReader
  id: IDataReader
  children:
  - System.Data.IDataReader.Close
  - System.Data.IDataReader.Depth
  - System.Data.IDataReader.GetSchemaTable
  - System.Data.IDataReader.IsClosed
  - System.Data.IDataReader.NextResult
  - System.Data.IDataReader.Read
  - System.Data.IDataReader.RecordsAffected
  langs:
  - csharp
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
  type: Interface
  summary: "Umożliwia odczytywanie jeden lub więcej tylko do przodu strumieni zestawach wyników generowanych, wykonując polecenie w źródle danych, a jest implementowany przez dostawców danych .NET Framework, które uzyskują dostęp do relacyjnych baz danych."
  remarks: "IDataReader i <xref:System.Data.IDataRecord>interfejsy umożliwiają dziedziczące klasy do zaimplementowania `DataReader` klasy, która umożliwia odczytywanie jeden lub więcej tylko do przodu strumieni zestawów wyników.</xref:System.Data.IDataRecord> Aby uzyskać więcej informacji na temat `DataReader` klas, zobacz [pobierania danych przy użyciu elementu DataReader](~/add/includes/ajax-current-ext-md.md).       Aplikacja nie tworzy wystąpienie interfejsu IDataReader bezpośrednio, ale powoduje utworzenie wystąpienia klasy, która dziedziczy IDataReader.       Klasy, które dziedziczą IDataReader musi implementować dziedziczone elementy członkowskie i zwykle zdefiniować dodatkowe elementy członkowskie Dodawanie funkcji specyficznych dla dostawcy.       Zmiany wprowadzone w zestawie innym wyników przetwarzania lub wątku, podczas gdy dane są odczytywane mogą być widoczne dla użytkownika klasy, która implementuje `IDataReader`. Jednak dokładne zachowanie jest dostawcy i chronometrażu zależnych."
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/t-system.data.idatareader_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/t-system.data.idatareader_1.vb)]"
  syntax:
    content: 'public interface IDataReader : IDisposable, System.Data.IDataRecord'
  implements:
  - System.Data.IDataRecord
  - System.IDisposable
  platform:
  - net462
- uid: System.Data.IDataReader.Close
  id: Close
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: IDataReader.Close()
  fullName: System.Data.IDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zamyka <xref href=&quot;System.Data.IDataReader&quot;> </xref> obiektu."
  remarks: "Należy jawnie wywołać metody Close po przy użyciu <xref:System.Data.IDataReader>do użycia ze skojarzoną <xref:System.Data.IDbConnection>do innych celów.</xref:System.Data.IDbConnection> </xref:System.Data.IDataReader>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Data.IDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.Depth
  id: Depth
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: IDataReader.Depth
  fullName: System.Data.IDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą głębokość zagnieżdżenia dla bieżącego wiersza."
  remarks: "Tabela peryferyjnych ma głębokość o wartości zero."
  syntax:
    content: public int Depth { get; }
    return:
      type: System.Int32
      description: "Poziom zagnieżdżenia."
  overload: System.Data.IDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: IDataReader.GetSchemaTable()
  fullName: System.Data.IDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zwraca <xref href=&quot;System.Data.DataTable&quot;> </xref> opisujący metadane kolumny <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
  remarks: "Implementacja metody GetSchemaTable dla dostawcy danych programu .NET Framework dla OLE DB mapuje do metody OLE DB IColumnsRowset::GetColumnsRowset podczas implementacji dla inni dostawcy danych .NET Framework nie należy używać warstwy dostawcy OLE DB. Kolejność, w którym GetSchemaTable zwraca metadane dotyczące każdej kolumny w tabeli, a kolumny DataReader, które są zwracane, różnią się w zależności od tego, który dostawca danych użycia. W poniższej tabeli wymieniono dostawcy danych i ich elementy członkowskie, które implementują GetSchemaTable.      | Dostawca danych | Element członkowski |   |-------------------|------------|   |. Dostawca danych sieci dla ODBC | <xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |. Dostawca danych sieci dla OLE DB | <xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |. Dostawca danych sieci dla Oracle | <xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName>.|   |. Dostawca danych sieci dla programu SQL Server | <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName>.|</xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=fullName></xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=fullName></xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=fullName></xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=fullName>"
  syntax:
    content: public System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> opisujący metadanych kolumn."
  overload: System.Data.IDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref> Jest zamknięty."
  platform:
  - net462
- uid: System.Data.IDataReader.IsClosed
  id: IsClosed
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: IDataReader.IsClosed
  fullName: System.Data.IDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy czytnik danych jest zamknięty."
  remarks: "IsClosed i <xref:System.Data.IDataReader.RecordsAffected%2A>są tylko właściwości, które można wywołać po <xref:System.Data.IDataReader>jest zamknięty.</xref:System.Data.IDataReader> </xref:System.Data.IDataReader.RecordsAffected%2A>"
  syntax:
    content: public bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli czytnik danych jest zamknięty; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.NextResult
  id: NextResult
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: IDataReader.NextResult()
  fullName: System.Data.IDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Przesuwa czytnik danych do następnego wyniku podczas odczytywania wyników wsadowego instrukcji SQL."
  remarks: "Używane do przetwarzania wiele wyników, których można uzyskać, wykonując instrukcje SQL partii.       Domyślnie czytnik danych jest ustawiony na pierwszego wyniku.       [!code-vb[IDataReader_NextResult&#1;](~/add/codesnippet/visualbasic/m-system.data.idatareade_1_1.vb)][!code-cs[IDataReader_NextResult nr&1;  ](~/add/codesnippet/csharp/m-system.data.idatareade_1_1.cs)]"
  syntax:
    content: public bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli istnieje więcej wierszy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.Read
  id: Read
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: IDataReader.Read()
  fullName: System.Data.IDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Przesuwa <xref href=&quot;System.Data.IDataReader&quot;> </xref> do następnego rekordu."
  remarks: "To domyślne położenie <xref:System.Data.IDataReader>niż pierwszy rekord.</xref:System.Data.IDataReader> W związku z tym należy wywołać odczytu, aby rozpocząć, uzyskiwanie dostępu do żadnych danych.       Gdy czytnik danych jest w użyciu, skojarzone z nimi połączenie jest zajęty, obsługująca <xref:System.Data.IDataReader>.</xref:System.Data.IDataReader> Dotyczy to sytuacji, dopóki <xref:System.Data.IDataReader.Close%2A>jest wywoływana.</xref:System.Data.IDataReader.Close%2A>"
  example:
  - "The following example creates instances of three derived classes <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, then the <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.idatareade_0_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.idatareade_0_1.vb)]"
  syntax:
    content: public bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli istnieje więcej wierszy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.IDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: IDataReader.RecordsAffected
  fullName: System.Data.IDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera liczbę wierszy zmienione, wstawione lub usunięte przez wykonanie instrukcji SQL."
  remarks: "Nie ustawiono właściwości RecordsAffected, dopóki wszystkie wiersze do odczytu i zamknąć <xref:System.Data.IDataReader>.</xref:System.Data.IDataReader>       <xref:System.Data.IDataReader.IsClosed%2A>i RecordsAffected są tylko właściwości, które można wywołać po <xref:System.Data.IDataReader>jest zamknięty.</xref:System.Data.IDataReader></xref:System.Data.IDataReader.IsClosed%2A>"
  syntax:
    content: public int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "Liczba wierszy zmienione, wstawiania lub usuwania; 0, jeśli żadne wiersze nie zostały zainfekowane lub instrukcji nie powiodło się; i -1 dla instrukcji &quot;SELECT&quot;."
  overload: System.Data.IDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.IDataReader.Close
  parent: System.Data.IDataReader
  isExternal: false
  name: Close()
  nameWithType: IDataReader.Close()
  fullName: System.Data.IDataReader.Close()
- uid: System.Data.IDataReader.Depth
  parent: System.Data.IDataReader
  isExternal: false
  name: Depth
  nameWithType: IDataReader.Depth
  fullName: System.Data.IDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDataReader.GetSchemaTable
  parent: System.Data.IDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: IDataReader.GetSchemaTable()
  fullName: System.Data.IDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.IDataReader.IsClosed
  parent: System.Data.IDataReader
  isExternal: false
  name: IsClosed
  nameWithType: IDataReader.IsClosed
  fullName: System.Data.IDataReader.IsClosed
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.IDataReader.NextResult
  parent: System.Data.IDataReader
  isExternal: false
  name: NextResult()
  nameWithType: IDataReader.NextResult()
  fullName: System.Data.IDataReader.NextResult()
- uid: System.Data.IDataReader.Read
  parent: System.Data.IDataReader
  isExternal: false
  name: Read()
  nameWithType: IDataReader.Read()
  fullName: System.Data.IDataReader.Read()
- uid: System.Data.IDataReader.RecordsAffected
  parent: System.Data.IDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: IDataReader.RecordsAffected
  fullName: System.Data.IDataReader.RecordsAffected
- uid: System.Data.IDataReader.Close*
  parent: System.Data.IDataReader
  isExternal: false
  name: Close
  nameWithType: IDataReader.Close
- uid: System.Data.IDataReader.Depth*
  parent: System.Data.IDataReader
  isExternal: false
  name: Depth
  nameWithType: IDataReader.Depth
- uid: System.Data.IDataReader.GetSchemaTable*
  parent: System.Data.IDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: IDataReader.GetSchemaTable
- uid: System.Data.IDataReader.IsClosed*
  parent: System.Data.IDataReader
  isExternal: false
  name: IsClosed
  nameWithType: IDataReader.IsClosed
- uid: System.Data.IDataReader.NextResult*
  parent: System.Data.IDataReader
  isExternal: false
  name: NextResult
  nameWithType: IDataReader.NextResult
- uid: System.Data.IDataReader.Read*
  parent: System.Data.IDataReader
  isExternal: false
  name: Read
  nameWithType: IDataReader.Read
- uid: System.Data.IDataReader.RecordsAffected*
  parent: System.Data.IDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: IDataReader.RecordsAffected
