### YamlMime:ManagedReference
items:
- uid: System.Windows.CornerRadius
  id: CornerRadius
  children:
  - System.Windows.CornerRadius.#ctor(System.Double)
  - System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.CornerRadius.BottomLeft
  - System.Windows.CornerRadius.BottomRight
  - System.Windows.CornerRadius.Equals(System.Object)
  - System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)
  - System.Windows.CornerRadius.GetHashCode
  - System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  - System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  - System.Windows.CornerRadius.TopLeft
  - System.Windows.CornerRadius.TopRight
  - System.Windows.CornerRadius.ToString
  langs:
  - csharp
  name: CornerRadius
  nameWithType: CornerRadius
  fullName: System.Windows.CornerRadius
  type: Struct
  summary: "Reprezentuje promień narożników prostokąta."
  remarks: "Ta klasa ma cztery właściwości <xref:System.Windows.CornerRadius.TopLeft%2A>, <xref:System.Windows.CornerRadius.TopRight%2A>, <xref:System.Windows.CornerRadius.BottomLeft%2A>, i <xref:System.Windows.CornerRadius.BottomRight%2A>, odpowiadające poszczególnych narożników prostokąta.</xref:System.Windows.CornerRadius.BottomRight%2A> </xref:System.Windows.CornerRadius.BottomLeft%2A> </xref:System.Windows.CornerRadius.TopRight%2A> </xref:System.Windows.CornerRadius.TopLeft%2A>  Każda ma <xref:System.Double>struktury, która może być ustawiona, niezależnie od innych.</xref:System.Double>       Promień nie może być ujemna.      <a name=&quot;xamlAttributeUsage_Duration&quot;></a>## Użycie atrybutu XAML ```   <object property=&quot;TopLeft,TopRight,BottomRight,BottomLeft &quot;/>   - or -   <object property=&quot;AllCorners&quot;/>   ``` <a name=&quot;xamlValues_Thickness&quot;> </a> ## wartości XAML *TopLeft* <xref:System.Double> wartość, która określa promień w górnym lewym rogu.</xref:System.Double>                 *TopRight* <xref:System.Double> wartość, która określa prawym górnym rogu.</xref:System.Double>           *BottomRight* <xref:System.Double> wartość, która określa prawym dolnym rogu.</xref:System.Double>           *BottomLeft* <xref:System.Double> wartość, która określa lewym dolnym rogu.</xref:System.Double>           *AllCorners* jeśli tylko jeden <xref:System.Double>wartość jest określona, czy miara jest stosowane do wszystkich *TopLeft*, *TopRight*, *BottomRight*, i *BottomLeft* narożników CornerRadius.</xref:System.Double>      > [!NOTE] > Wartości nie musi zawierać dziesiętnego jawnie, gdy jest określony jako ciąg. Ciąg &quot;1&quot; w [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] wynikiem jest wartość 1.0 przywoływany w kodzie."
  example:
  - "The following example shows how to set the value of the <xref:System.Windows.Controls.Border.CornerRadius%2A> property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#1](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#1)]\n [!code-xml[ThicknessStruct#1](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#1)]\n [!code-vb[ThicknessStruct#1](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.CornerRadiusConverter))]

      public struct CornerRadius : IEquatable<System.Windows.CornerRadius>
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Windows.CornerRadius>
  platform:
  - net462
- uid: System.Windows.CornerRadius.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: CornerRadius(Double)
  nameWithType: CornerRadius.CornerRadius(Double)
  fullName: System.Windows.CornerRadius.CornerRadius(Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> klasy z wartością określonej uniform radius dla każdego rogu lub prostokąta."
  syntax:
    content: public CornerRadius (double uniformRadius);
    parameters:
    - id: uniformRadius
      type: System.Double
      description: "Wartość promienia zastosowane do każdego rogu prostokąta."
  overload: System.Windows.CornerRadius.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: CornerRadius(Double,Double,Double,Double)
  nameWithType: CornerRadius.CornerRadius(Double,Double,Double,Double)
  fullName: System.Windows.CornerRadius.CornerRadius(Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> z wartościami określonego radius poszczególnych narożników prostokąta."
  syntax:
    content: public CornerRadius (double topLeft, double topRight, double bottomRight, double bottomLeft);
    parameters:
    - id: topLeft
      type: System.Double
      description: "Promień lewego górnego rogu."
    - id: topRight
      type: System.Double
      description: "Promień w prawym górnym rogu."
    - id: bottomRight
      type: System.Double
      description: "Promień w prawym dolnym rogu."
    - id: bottomLeft
      type: System.Double
      description: "Promień w lewym dolnym rogu."
  overload: System.Windows.CornerRadius.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.BottomLeft
  id: BottomLeft
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: BottomLeft
  nameWithType: CornerRadius.BottomLeft
  fullName: System.Windows.CornerRadius.BottomLeft
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera lub ustawia promień w lewym dolnym rogu."
  remarks: "Promień w lewym dolnym rogu można skonfigurować niezależnie od innych narożników prostokąta."
  syntax:
    content: public double BottomLeft { get; set; }
    return:
      type: System.Double
      description: "Promień w lewym dolnym rogu. Wartość domyślna to 0."
  overload: System.Windows.CornerRadius.BottomLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.BottomRight
  id: BottomRight
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: BottomRight
  nameWithType: CornerRadius.BottomRight
  fullName: System.Windows.CornerRadius.BottomRight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera lub ustawia promień w prawym dolnym rogu."
  remarks: "Promień w prawym dolnym rogu można skonfigurować niezależnie od innych narożników prostokąta."
  example:
  - "<xref:System.Windows.CornerRadius.TopRight%2A>  \n  \n <xref:System.Windows.CornerRadius.BottomLeft%2A>  \n  \n <xref:System.Windows.CornerRadius.TopLeft%2A>"
  syntax:
    content: public double BottomRight { get; set; }
    return:
      type: System.Double
      description: "Promień w prawym dolnym rogu. Wartość domyślna to 0."
  overload: System.Windows.CornerRadius.BottomRight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CornerRadius.Equals(Object)
  fullName: System.Windows.CornerRadius.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Określa, czy określony <xref:System.Object>jest <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> i czy zawiera takie same wartości radius rogu, jak to <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>Do porównania.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> obj </code> jest <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> i zawiera takie same wartości radius rogu, jak to <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.CornerRadius.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)
  id: Equals(System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: Equals(CornerRadius)
  nameWithType: CornerRadius.Equals(CornerRadius)
  fullName: System.Windows.CornerRadius.Equals(CornerRadius)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Porównuje dwa <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> struktury pod kątem równości."
  syntax:
    content: public bool Equals (System.Windows.CornerRadius cornerRadius);
    parameters:
    - id: cornerRadius
      type: System.Windows.CornerRadius
      description: "<xref href=&quot;System.Windows.CornerRadius&quot;> </xref> Do porównania z tym <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> cornerRadius </code> zawiera takie same wartości radius rogu, jak to <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.CornerRadius.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.GetHashCode
  id: GetHashCode
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CornerRadius.GetHashCode()
  fullName: System.Windows.CornerRadius.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Zwraca wartość skrótu dla tego <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu dla tego <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> struktury."
  overload: System.Windows.CornerRadius.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  id: op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: op_Equality(CornerRadius,CornerRadius)
  nameWithType: CornerRadius.op_Equality(CornerRadius,CornerRadius)
  fullName: System.Windows.CornerRadius.op_Equality(CornerRadius,CornerRadius)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Porównuje dwa <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> struktury pod kątem równości."
  syntax:
    content: public static bool op_Equality (System.Windows.CornerRadius cr1, System.Windows.CornerRadius cr2);
    parameters:
    - id: cr1
      type: System.Windows.CornerRadius
      description: "Pierwszy <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> do porównania."
    - id: cr2
      type: System.Windows.CornerRadius
      description: "Drugi <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>cr1</code> and <code>cr2</code> have equal values for all corners (same values for <>*>, <>*>, <>*>, <>*>); <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli <code> cr1 </code> i <code> cr2 </code> mają różne wartości dla co najmniej jeden narożniki."
  overload: System.Windows.CornerRadius.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  id: op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: op_Inequality(CornerRadius,CornerRadius)
  nameWithType: CornerRadius.op_Inequality(CornerRadius,CornerRadius)
  fullName: System.Windows.CornerRadius.op_Inequality(CornerRadius,CornerRadius)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Porównuje dwa <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> struktury pod kątem nierówności."
  syntax:
    content: public static bool op_Inequality (System.Windows.CornerRadius cr1, System.Windows.CornerRadius cr2);
    parameters:
    - id: cr1
      type: System.Windows.CornerRadius
      description: "Pierwszy <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> do porównania."
    - id: cr2
      type: System.Windows.CornerRadius
      description: "Drugi <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> cr1 </code> i <code> cr2 </code> mają różne wartości dla co najmniej jeden rogi (różne wartości <> </> *>, <> </> *>, <> </> *>, <> </> *>); <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>cr1</code> and <code>cr2</code> have identical corners."
  overload: System.Windows.CornerRadius.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.TopLeft
  id: TopLeft
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: TopLeft
  nameWithType: CornerRadius.TopLeft
  fullName: System.Windows.CornerRadius.TopLeft
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera lub ustawia promień w lewym górnym rogu."
  remarks: "Promień lewego górnego narożnika można skonfigurować niezależnie od innych narożników prostokąta."
  syntax:
    content: public double TopLeft { get; set; }
    return:
      type: System.Double
      description: "Promień lewego górnego rogu. Wartość domyślna to 0."
  overload: System.Windows.CornerRadius.TopLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.TopRight
  id: TopRight
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: TopRight
  nameWithType: CornerRadius.TopRight
  fullName: System.Windows.CornerRadius.TopRight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Pobiera lub ustawia promień w prawym górnym rogu."
  remarks: "Promień w prawym górnym rogu można skonfigurować niezależnie od innych narożników prostokąta."
  syntax:
    content: public double TopRight { get; set; }
    return:
      type: System.Double
      description: "Promień w prawym górnym rogu. Wartość domyślna to 0."
  overload: System.Windows.CornerRadius.TopRight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.ToString
  id: ToString
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: ToString()
  nameWithType: CornerRadius.ToString()
  fullName: System.Windows.CornerRadius.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Zwraca reprezentację ciągu <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Reprezentacja ciągu <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>."
  overload: System.Windows.CornerRadius.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.CornerRadius.#ctor(System.Double)
  parent: System.Windows.CornerRadius
  isExternal: false
  name: CornerRadius(Double)
  nameWithType: CornerRadius.CornerRadius(Double)
  fullName: System.Windows.CornerRadius.CornerRadius(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.CornerRadius
  isExternal: false
  name: CornerRadius(Double,Double,Double,Double)
  nameWithType: CornerRadius.CornerRadius(Double,Double,Double,Double)
  fullName: System.Windows.CornerRadius.CornerRadius(Double,Double,Double,Double)
- uid: System.Windows.CornerRadius.BottomLeft
  parent: System.Windows.CornerRadius
  isExternal: false
  name: BottomLeft
  nameWithType: CornerRadius.BottomLeft
  fullName: System.Windows.CornerRadius.BottomLeft
- uid: System.Windows.CornerRadius.BottomRight
  parent: System.Windows.CornerRadius
  isExternal: false
  name: BottomRight
  nameWithType: CornerRadius.BottomRight
  fullName: System.Windows.CornerRadius.BottomRight
- uid: System.Windows.CornerRadius.Equals(System.Object)
  parent: System.Windows.CornerRadius
  isExternal: false
  name: Equals(Object)
  nameWithType: CornerRadius.Equals(Object)
  fullName: System.Windows.CornerRadius.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  isExternal: false
  name: Equals(CornerRadius)
  nameWithType: CornerRadius.Equals(CornerRadius)
  fullName: System.Windows.CornerRadius.Equals(CornerRadius)
- uid: System.Windows.CornerRadius
  parent: System.Windows
  isExternal: false
  name: CornerRadius
  nameWithType: CornerRadius
  fullName: System.Windows.CornerRadius
- uid: System.Windows.CornerRadius.GetHashCode
  parent: System.Windows.CornerRadius
  isExternal: false
  name: GetHashCode()
  nameWithType: CornerRadius.GetHashCode()
  fullName: System.Windows.CornerRadius.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  isExternal: false
  name: op_Equality(CornerRadius,CornerRadius)
  nameWithType: CornerRadius.op_Equality(CornerRadius,CornerRadius)
  fullName: System.Windows.CornerRadius.op_Equality(CornerRadius,CornerRadius)
- uid: System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  isExternal: false
  name: op_Inequality(CornerRadius,CornerRadius)
  nameWithType: CornerRadius.op_Inequality(CornerRadius,CornerRadius)
  fullName: System.Windows.CornerRadius.op_Inequality(CornerRadius,CornerRadius)
- uid: System.Windows.CornerRadius.TopLeft
  parent: System.Windows.CornerRadius
  isExternal: false
  name: TopLeft
  nameWithType: CornerRadius.TopLeft
  fullName: System.Windows.CornerRadius.TopLeft
- uid: System.Windows.CornerRadius.TopRight
  parent: System.Windows.CornerRadius
  isExternal: false
  name: TopRight
  nameWithType: CornerRadius.TopRight
  fullName: System.Windows.CornerRadius.TopRight
- uid: System.Windows.CornerRadius.ToString
  parent: System.Windows.CornerRadius
  isExternal: false
  name: ToString()
  nameWithType: CornerRadius.ToString()
  fullName: System.Windows.CornerRadius.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.CornerRadius.#ctor*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: CornerRadius
  nameWithType: CornerRadius.CornerRadius
- uid: System.Windows.CornerRadius.BottomLeft*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: BottomLeft
  nameWithType: CornerRadius.BottomLeft
- uid: System.Windows.CornerRadius.BottomRight*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: BottomRight
  nameWithType: CornerRadius.BottomRight
- uid: System.Windows.CornerRadius.Equals*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: Equals
  nameWithType: CornerRadius.Equals
- uid: System.Windows.CornerRadius.GetHashCode*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: GetHashCode
  nameWithType: CornerRadius.GetHashCode
- uid: System.Windows.CornerRadius.op_Equality*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: op_Equality
  nameWithType: CornerRadius.op_Equality
- uid: System.Windows.CornerRadius.op_Inequality*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: op_Inequality
  nameWithType: CornerRadius.op_Inequality
- uid: System.Windows.CornerRadius.TopLeft*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: TopLeft
  nameWithType: CornerRadius.TopLeft
- uid: System.Windows.CornerRadius.TopRight*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: TopRight
  nameWithType: CornerRadius.TopRight
- uid: System.Windows.CornerRadius.ToString*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: ToString
  nameWithType: CornerRadius.ToString
