### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  id: KerberosRequestorSecurityToken
  children:
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
  langs:
  - csharp
  name: KerberosRequestorSecurityToken
  nameWithType: KerberosRequestorSecurityToken
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  type: Class
  summary: "Reprezentuje token zabezpieczający, który jest oparty na biletu protokołu Kerberos, który jest wysyłany w żądaniu SOAP."
  remarks: "Zwykle deweloperzy aplikacji nie trzeba używać klasy KerberosRequestorSecurityToken chyba, że usługi sieci Web musi pobrać nazwę główną usługi skojarzone z biletu Kerberos. Aby uzyskać wartość główną nazwę usługi, należy uzyskać wartość <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName%2A>Właściwości.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName%2A>       Istnieją dwie klasy reprezentujące tokeny zabezpieczające, które są oparte na biletu protokołu Kerberos: KerberosRequestorSecurityToken i <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>.</xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken> Token zabezpieczający KerberosRequestorSecurityToken jest używany przez klientów, którzy używają tokenu zabezpieczającego KerberosRequestorSecurityToken w wychodzących wiadomości SOAP, natomiast <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>token zabezpieczający jest używany przez usługę sieci Web, który odbiera wiadomości SOAP, które zawiera token zabezpieczający.</xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>"
  syntax:
    content: 'public class KerberosRequestorSecurityToken : System.IdentityModel.Tokens.SecurityToken'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: KerberosRequestorSecurityToken(String)
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> klasy przy użyciu usługi, który jest skojarzony z głównej nazwy usługi określony."
  remarks: 'Główna nazwa usługi musi być w jednym z następujących formatów: `host/<hostname>@<domain>` lub `<hostname>`, gdzie `hostname` jest nazwą komputera obsługującego element docelowy usługi sieci Web i `domain` jest pełni kwalifikowaną nazwą domeny obszaru protokołu Kerberos, w której znajduje się komputer-host. Główna nazwa usługi jest skojarzona z kontem, którym jest uruchomiona usługa i tego mapowania są przechowywane w kontrolerze domeny Kerberos (KDC).'
  syntax:
    content: public KerberosRequestorSecurityToken (string servicePrincipalName);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "Główną nazwę usługi dla <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> tokenu zabezpieczającego. Ustawia <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*>Właściwości.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "Nie można uzyskać biletu protokołu Kerberos dla bieżącego użytkownika."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)
  id: '#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)'
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> klasy."
  remarks: "Główna nazwa usługi musi być w jednym z następujących formatów: `host/<hostname>@<domain>` lub `<hostname>`, gdzie `hostname` jest nazwą komputera obsługującego element docelowy usługi sieci Web i `domain` jest pełni kwalifikowaną nazwą domeny obszaru protokołu Kerberos, w której znajduje się komputer-host. Główna nazwa usługi jest skojarzona z kontem, którym jest uruchomiona usługa i tego mapowania są przechowywane w kontrolerze domeny Kerberos (KDC).       Gdy `null` są przekazywane do `networkCredential` parametru <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>tokenu zabezpieczającego są uzyskiwane dla bieżącego użytkownika.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>"
  syntax:
    content: public KerberosRequestorSecurityToken (string servicePrincipalName, System.Security.Principal.TokenImpersonationLevel tokenImpersonationLevel, System.Net.NetworkCredential networkCredential, string id);
    parameters:
    - id: servicePrincipalName
      type: System.String
      description: "Główną nazwę usługi dla <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> tokenu zabezpieczającego. Ustawia <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*>Właściwości.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*>"
    - id: tokenImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "Jeden z <xref:System.Security.Principal.TokenImpersonationLevel>wartości, które określają sposób klienta umożliwia <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> tokenu zabezpieczającego do personalizacji.</xref:System.Security.Principal.TokenImpersonationLevel>"
    - id: networkCredential
      type: System.Net.NetworkCredential
      description: "A <xref:System.Net.NetworkCredential>użytkownika do pobrania, który określa <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> for. tokenu zabezpieczeń</xref:System.Net.NetworkCredential>"
    - id: id
      type: System.String
      description: "Unikatowy identyfikator tokenu zabezpieczającego. Ustawia wartość <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*>Właściwości.</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>servicePrincipalName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>id</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>networkCredential</code>nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, nie jest równa <xref:System.Net.CredentialCache.DefaultNetworkCredentials*> i <xref:System.Net.NetworkCredential.UserName*> właściwość jest pusta lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "Nie można uzyskać biletu protokołu Kerberos dla określonego użytkownika."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>tokenImpersonationLevel</code>is not <xref uid=&quot;langword_csharp_Impersonation&quot; name=&quot;Impersonation&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Identity&quot; name=&quot;Identity&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: CanCreateKeyIdentifierClause()
  nameWithType: KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: System.Boolean
      description: "Do dodania."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: CreateKeyIdentifierClause()
  nameWithType: KerberosRequestorSecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public override T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: T
      description: "Do dodania."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest
  id: GetRequest
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: GetRequest()
  nameWithType: KerberosRequestorSecurityToken.GetRequest()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera żądania biletu protokołu Kerberos."
  remarks: "Żądania biletu protokołu Kerberos jest wprowadzone za pomocą `InitializeSecurityContext` interfejsu API."
  syntax:
    content: public byte[] GetRequest ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Tablica <xref:System.Byte>zawierający wynik żądania biletu protokołu Kerberos.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: KerberosRequestorSecurityToken.Id
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera unikatowy identyfikator tokenu zabezpieczającego."
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "Unikatowy identyfikator tokenu zabezpieczającego."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Zwraca wartość wskazującą, czy identyfikatora klucza dla tego wystąpienia jest zgodny z określonym identyfikatorem klucza."
  syntax:
    content: public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> do porównania z tym wystąpieniem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> keyIdentifierClause </code> jest typu <xref href=&quot;System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause&quot;> </xref> i wyniki dopasowania żądania biletu Kerberos; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
  id: SecurityKey
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: SecurityKey
  nameWithType: KerberosRequestorSecurityToken.SecurityKey
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera symetrycznego klucza sesji dla biletu Kerberos, który jest skojarzony z tym tokenu zabezpieczającego."
  remarks: "Właściwość klucza zabezpieczeń jest ustawiona, gdy jeden z konstruktorów jest wywoływana z symetrycznego klucza sesji dla biletu Kerberos, które są uzyskiwane dla określonego użytkownika."
  syntax:
    content: public System.IdentityModel.Tokens.SymmetricSecurityKey SecurityKey { get; }
    return:
      type: System.IdentityModel.Tokens.SymmetricSecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SymmetricSecurityKey&quot;> </xref> zawierający symetrycznego klucza sesji dla biletu Kerberos, który jest skojarzony z tym tokenu zabezpieczającego."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: KerberosRequestorSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera klucze kryptograficzne skojarzone z tokenu zabezpieczającego."
  remarks: "Właściwość SecurityKeys zawiera symetrycznego klucza sesji w <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey%2A>Właściwości.</xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey%2A>"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; typu <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> zawierający zestaw kluczy skojarzone z tokenu zabezpieczającego."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
  id: ServicePrincipalName
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: ServicePrincipalName
  nameWithType: KerberosRequestorSecurityToken.ServicePrincipalName
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera nazwę główną usługi dla <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> tokenu zabezpieczającego."
  remarks: 'Główna nazwa usługi może działać w jednym z następujących formatów: `host/<hostname>@<domain>` lub `<hostname>`, gdzie `hostname` jest nazwą komputera obsługującego element docelowy usługi sieci Web i `domain` jest pełni kwalifikowaną nazwą domeny obszaru protokołu Kerberos, w której znajduje się komputer-host.'
  syntax:
    content: public string ServicePrincipalName { get; }
    return:
      type: System.String
      description: "Główną nazwę usługi dla <xref href=&quot;System.IdentityModel.Tokens.KerberosRequestorSecurityToken&quot;> </xref> tokenu zabezpieczającego."
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: KerberosRequestorSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera pierwszy moment w czasie, w którym ten token zabezpieczający jest nieprawidłowy."
  remarks: "Właściwości ValidFrom jest równa moment w czasie, gdy biletu Kerberos jest uzyskiwany w uniwersalnego czasu koordynowanego (UTC)."
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>reprezentujący moment w czasie, w którym ten token zabezpieczający najpierw jest prawidłowy.</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: KerberosRequestorSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Pobiera ostatnią błyskawiczne w czasie, w którym ten token zabezpieczający jest nieprawidłowy."
  remarks: "<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom%2A>Właściwość jest ustawiona na moment na czas wygaśnięcia biletu Kerberos w uniwersalnego czasu koordynowanego (UTC).</xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom%2A>"
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>reprezentujący ostatnią błyskawiczne w czasie, w którym ten token zabezpieczający jest nieprawidłowy.</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: KerberosRequestorSecurityToken(String)
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.KerberosRequestorSecurityToken(String,TokenImpersonationLevel,NetworkCredential,String)
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause()
  nameWithType: KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause()
  nameWithType: KerberosRequestorSecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: GetRequest()
  nameWithType: KerberosRequestorSecurityToken.GetRequest()
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: Id
  nameWithType: KerberosRequestorSecurityToken.Id
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: SecurityKey
  nameWithType: KerberosRequestorSecurityToken.SecurityKey
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SymmetricSecurityKey
  nameWithType: SymmetricSecurityKey
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: KerberosRequestorSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ServicePrincipalName
  nameWithType: KerberosRequestorSecurityToken.ServicePrincipalName
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: KerberosRequestorSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: KerberosRequestorSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: KerberosRequestorSecurityToken
  nameWithType: KerberosRequestorSecurityToken.KerberosRequestorSecurityToken
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>
  nameWithType: KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>
  nameWithType: KerberosRequestorSecurityToken.CreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: GetRequest
  nameWithType: KerberosRequestorSecurityToken.GetRequest
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: Id
  nameWithType: KerberosRequestorSecurityToken.Id
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause
  nameWithType: KerberosRequestorSecurityToken.MatchesKeyIdentifierClause
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: SecurityKey
  nameWithType: KerberosRequestorSecurityToken.SecurityKey
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: KerberosRequestorSecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ServicePrincipalName
  nameWithType: KerberosRequestorSecurityToken.ServicePrincipalName
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: KerberosRequestorSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: KerberosRequestorSecurityToken.ValidTo
