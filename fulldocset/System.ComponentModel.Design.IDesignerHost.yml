### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IDesignerHost
  id: IDesignerHost
  children:
  - System.ComponentModel.Design.IDesignerHost.Activate
  - System.ComponentModel.Design.IDesignerHost.Activated
  - System.ComponentModel.Design.IDesignerHost.Container
  - System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)
  - System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)
  - System.ComponentModel.Design.IDesignerHost.CreateTransaction
  - System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)
  - System.ComponentModel.Design.IDesignerHost.Deactivated
  - System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.IDesignerHost.GetType(System.String)
  - System.ComponentModel.Design.IDesignerHost.InTransaction
  - System.ComponentModel.Design.IDesignerHost.LoadComplete
  - System.ComponentModel.Design.IDesignerHost.Loading
  - System.ComponentModel.Design.IDesignerHost.RootComponent
  - System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  - System.ComponentModel.Design.IDesignerHost.TransactionClosed
  - System.ComponentModel.Design.IDesignerHost.TransactionClosing
  - System.ComponentModel.Design.IDesignerHost.TransactionDescription
  - System.ComponentModel.Design.IDesignerHost.TransactionOpened
  - System.ComponentModel.Design.IDesignerHost.TransactionOpening
  langs:
  - csharp
  name: IDesignerHost
  nameWithType: IDesignerHost
  fullName: System.ComponentModel.Design.IDesignerHost
  type: Interface
  summary: "Interfejs zarządzania transakcji projektanta i składniki."
  remarks: "Element IDesignerHost jest interfejs, który działa z architekturą projektanta formularzy .NET Framework do obsługi transakcji projektanta i zarządzania składnika.       .NET Framework nie zapewniać implementację tego interfejsu. Interfejs jest implementowany przez narzędzi programistycznych, które obsługują projektantów."
  example:
  - "The following example code demonstrates how to obtain the IDesignerHost service interface from a designer or sited component.  \n  \n [!code-cs[DesignerHostAcquisition#1](~/add/codesnippet/csharp/t-system.componentmodel._54_1.cs)]\n [!code-cpp[DesignerHostAcquisition#1](~/add/codesnippet/cpp/t-system.componentmodel._54_1.cpp)]\n [!code-vb[DesignerHostAcquisition#1](~/add/codesnippet/visualbasic/t-system.componentmodel._54_1.vb)]  \n  \n The following example code demonstrates using the IDesignerHost interface to list project components.  \n  \n [!code-cs[IDesignerHostExample#1](~/add/codesnippet/csharp/t-system.componentmodel._54_2.cs)]\n [!code-cpp[IDesignerHostExample#1](~/add/codesnippet/cpp/t-system.componentmodel._54_2.cpp)]\n [!code-vb[IDesignerHostExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._54_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDesignerHost : IServiceProvider, System.ComponentModel.Design.IServiceContainer
  implements:
  - System.ComponentModel.Design.IServiceContainer
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Activate
  id: Activate
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Activate()
  nameWithType: IDesignerHost.Activate()
  fullName: System.ComponentModel.Design.IDesignerHost.Activate()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Aktywuje projektanta, który jest hostem tego hosta."
  remarks: "Projektanci należy aktywować, zanim zostaną wyświetlone w swoim interfejsie użytkownika."
  syntax:
    content: public void Activate ();
    parameters: []
  overload: System.ComponentModel.Design.IDesignerHost.Activate*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Activated
  id: Activated
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Activated
  nameWithType: IDesignerHost.Activated
  fullName: System.ComponentModel.Design.IDesignerHost.Activated
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Występuje, gdy tego projektanta jest aktywny."
  remarks: "Projektant jest aktywna, przed wyświetleniem."
  syntax:
    content: public event EventHandler Activated;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Container
  id: Container
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Container
  nameWithType: IDesignerHost.Container
  fullName: System.ComponentModel.Design.IDesignerHost.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera kontener dla tego hosta projektanta."
  remarks: "To <xref:System.ComponentModel.IContainer>zawiera składniki bieżącego dokumentu tryb projektowania.</xref:System.ComponentModel.IContainer> Można wyświetlić listę lub któregokolwiek ze składników bieżącego dokumentu tryb projektowania dostęp za pośrednictwem <xref:System.ComponentModel.IContainer.Components%2A>elementu członkowskiego z tym <xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer.Components%2A>"
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> Dla tego hosta."
  overload: System.ComponentModel.Design.IDesignerHost.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)
  id: CreateComponent(System.Type)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateComponent(Type)
  nameWithType: IDesignerHost.CreateComponent(Type)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Tworzy składnik określonego typu i dodaje go do dokumentu projektu."
  remarks: "Jeśli typ nie można rozpoznać nazwy obiektu implementującego <xref:System.ComponentModel.IComponent>, jest zgłaszany wyjątek.</xref:System.ComponentModel.IComponent>       Ta metoda nie określa nazwy składnika. Metoda tworzy składnik i dodaje go do projektanta kontenera."
  syntax:
    content: public System.ComponentModel.IComponent CreateComponent (Type componentClass);
    parameters:
    - id: componentClass
      type: System.Type
      description: "Typ składnika do utworzenia."
    return:
      type: System.ComponentModel.IComponent
      description: "Nowo utworzony składnik."
  overload: System.ComponentModel.Design.IDesignerHost.CreateComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)
  id: CreateComponent(System.Type,System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateComponent(Type,String)
  nameWithType: IDesignerHost.CreateComponent(Type,String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Tworzy składnik określonego typu i nazwy i dodaje go do dokumentu projektu."
  remarks: "Jeśli typ nie można rozpoznać nazwy obiektu implementującego <xref:System.ComponentModel.IComponent>, jest zgłaszany wyjątek.</xref:System.ComponentModel.IComponent>       Ta metoda tworzy składnik i dodaje go do projektanta kontenera."
  syntax:
    content: public System.ComponentModel.IComponent CreateComponent (Type componentClass, string name);
    parameters:
    - id: componentClass
      type: System.Type
      description: "Typ składnika do utworzenia."
    - id: name
      type: System.String
      description: "Nazwa składnika."
    return:
      type: System.ComponentModel.IComponent
      description: "Nowo utworzony składnik."
  overload: System.ComponentModel.Design.IDesignerHost.CreateComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction
  id: CreateTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateTransaction()
  nameWithType: IDesignerHost.CreateTransaction()
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Tworzy <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref> które hermetyzują sekwencji zdarzeń, aby zwiększyć wydajność i włączyć cofania i ponawiania funkcja obsługi."
  remarks: "Ta metoda tworzy <xref:System.ComponentModel.Design.DesignerTransaction>można hermetyzować serii operacji.</xref:System.ComponentModel.Design.DesignerTransaction> Projektanta transakcji można zwiększyć wydajność, zmniejszenia migotania spowodowane przez wiele aktualizacji podczas operacji i włączyć większość operacji można cofnąć.       Długie operacje, które obejmują wiele składników może wiązać się wiele zdarzeń. Zdarzenia te mogą powodować efekty uboczne, takich jak migotania lub pogorszenie wydajności. Gdy działających na wiele składników w tym samym czasie lub ustawiania wielu właściwości na jeden składnik, może zwiększyć wydajność, wykonując te zmiany w obrębie transakcji. Niektóre operacje obsługi <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>i <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>zdarzeń i wykonywania pracy tylko wtedy, gdy transakcja nie jest w toku.</xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> </xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> Aby uzyskać więcej informacji na temat używania transakcji zobacz dokumentację <xref:System.ComponentModel.Design.DesignerTransaction>.</xref:System.ComponentModel.Design.DesignerTransaction>"
  syntax:
    content: public System.ComponentModel.Design.DesignerTransaction CreateTransaction ();
    parameters: []
    return:
      type: System.ComponentModel.Design.DesignerTransaction
      description: "Nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref>. Po wykonaniu kroków w transakcji, należy wywołać <xref:System.ComponentModel.Design.DesignerTransaction.Commit*>dla tego obiektu.</xref:System.ComponentModel.Design.DesignerTransaction.Commit*>"
  overload: System.ComponentModel.Design.IDesignerHost.CreateTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)
  id: CreateTransaction(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: CreateTransaction(String)
  nameWithType: IDesignerHost.CreateTransaction(String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Tworzy <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref> które hermetyzują sekwencji zdarzeń, aby poprawić wydajność i włączyć cofania i ponawiania funkcji pomocy technicznej, przy użyciu opisu określonej transakcji."
  remarks: "Ta metoda tworzy <xref:System.ComponentModel.Design.DesignerTransaction>można hermetyzować serii operacji.</xref:System.ComponentModel.Design.DesignerTransaction> Projektanta transakcji można zwiększyć wydajność, zmniejszenia migotania spowodowane przez wiele aktualizacji podczas operacji i włączyć większość operacji można cofnąć.       Długie operacje, które obejmują wiele składników może wiązać się wiele zdarzeń. Zdarzenia te mogą powodować efekty uboczne, takich jak migotania lub pogorszenie wydajności. Gdy działających na wiele składników w tym samym czasie lub ustawiania wielu właściwości na jeden składnik, może zwiększyć wydajność, wykonując te zmiany w obrębie transakcji. Niektóre operacje obsługi <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>i <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>zdarzeń i wykonywania pracy tylko wtedy, gdy transakcja nie jest w toku.</xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> </xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> Aby uzyskać więcej informacji na temat używania transakcji zobacz dokumentację <xref:System.ComponentModel.Design.DesignerTransaction>.</xref:System.ComponentModel.Design.DesignerTransaction>"
  syntax:
    content: public System.ComponentModel.Design.DesignerTransaction CreateTransaction (string description);
    parameters:
    - id: description
      type: System.String
      description: "Tytuł i opis nowo utworzonej transakcji."
    return:
      type: System.ComponentModel.Design.DesignerTransaction
      description: "A new <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;></xref>. Po wykonaniu kroków opisanych w transakcji, należy wywołać <xref:System.ComponentModel.Design.DesignerTransaction.Commit*>dla tego obiektu.</xref:System.ComponentModel.Design.DesignerTransaction.Commit*>"
  overload: System.ComponentModel.Design.IDesignerHost.CreateTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Deactivated
  id: Deactivated
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Deactivated
  nameWithType: IDesignerHost.Deactivated
  fullName: System.ComponentModel.Design.IDesignerHost.Deactivated
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Występuje, gdy tego projektanta jest dezaktywowana."
  remarks: "Projektant jest dezaktywowana tuż przed nie są wyświetlane."
  syntax:
    content: public event EventHandler Deactivated;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)
  id: DestroyComponent(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: DestroyComponent(IComponent)
  nameWithType: IDesignerHost.DestroyComponent(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.DestroyComponent(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Niszczy określonego składnika i usuwa go z projektanta kontenera."
  syntax:
    content: public void DestroyComponent (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Składnik do zniszczenia."
  overload: System.ComponentModel.Design.IDesignerHost.DestroyComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  id: GetDesigner(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: GetDesigner(IComponent)
  nameWithType: IDesignerHost.GetDesigner(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.GetDesigner(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera wystąpienie projektanta, które zawiera określony składnik."
  syntax:
    content: public System.ComponentModel.Design.IDesigner GetDesigner (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> Do pobrania dla projektanta."
    return:
      type: System.ComponentModel.Design.IDesigner
      description: "<xref href=&quot;System.ComponentModel.Design.IDesigner&quot;> </xref>, Lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli projektanta dla określonego składnika nie istnieje."
  overload: System.ComponentModel.Design.IDesignerHost.GetDesigner*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.GetType(System.String)
  id: GetType(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: GetType(String)
  nameWithType: IDesignerHost.GetType(String)
  fullName: System.ComponentModel.Design.IDesignerHost.GetType(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera wystąpienie typu określonego, w pełni kwalifikowaną nazwę."
  syntax:
    content: public Type GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Nazwa typu w celu załadowania."
    return:
      type: System.Type
      description: "Obiekt typu dla określonej nazwy typu, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli nie można odnaleźć typu."
  overload: System.ComponentModel.Design.IDesignerHost.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.InTransaction
  id: InTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: InTransaction
  nameWithType: IDesignerHost.InTransaction
  fullName: System.ComponentModel.Design.IDesignerHost.InTransaction
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera wartość wskazującą, czy host projektanta jest obecnie w transakcji."
  syntax:
    content: public bool InTransaction { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli transakcja jest w toku; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IDesignerHost.InTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.LoadComplete
  id: LoadComplete
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: LoadComplete
  nameWithType: IDesignerHost.LoadComplete
  fullName: System.ComponentModel.Design.IDesignerHost.LoadComplete
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Występuje po zakończeniu tego projektanta podczas ładowania jego dokumentu."
  remarks: "To zdarzenie występuje po zakończeniu projektanta podczas ładowania jego dokumentu."
  syntax:
    content: public event EventHandler LoadComplete;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.Loading
  id: Loading
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: Loading
  nameWithType: IDesignerHost.Loading
  fullName: System.ComponentModel.Design.IDesignerHost.Loading
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera wartość wskazującą, czy host projektanta jest obecnie ładowania dokumentu."
  syntax:
    content: public bool Loading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli host projektanta jest obecnie podczas ładowania dokumentu. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IDesignerHost.Loading*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.RootComponent
  id: RootComponent
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: RootComponent
  nameWithType: IDesignerHost.RootComponent
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponent
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera wystąpienie klasy podstawowej używany jako składnik główny dla bieżącego projektu."
  remarks: "Ta klasa podstawowa jest zwykle <xref:System.Windows.Forms.Form>lub <xref:System.Windows.Forms.UserControl>wystąpienia; definiuje klasę, dla którego rozszerza klasy pochodnej użytkownika.</xref:System.Windows.Forms.UserControl> </xref:System.Windows.Forms.Form>"
  syntax:
    content: public System.ComponentModel.IComponent RootComponent { get; }
    return:
      type: System.ComponentModel.IComponent
      description: "Wystąpienie klasy głównym składnika."
  overload: System.ComponentModel.Design.IDesignerHost.RootComponent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  id: RootComponentClassName
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: RootComponentClassName
  nameWithType: IDesignerHost.RootComponentClassName
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera pełną nazwę klasy projektowania."
  syntax:
    content: public string RootComponentClassName { get; }
    return:
      type: System.String
      description: "Pełna nazwa klasy podstawowej składnika."
  overload: System.ComponentModel.Design.IDesignerHost.RootComponentClassName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosed
  id: TransactionClosed
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionClosed
  nameWithType: IDesignerHost.TransactionClosed
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Dodaje program obsługi zdarzeń dla zdarzenia TransactionClosed."
  remarks: "To zdarzenie występuje po zamknięciu transakcji.       Transakcja czasami można zmienić wiele wartości. Metody transakcji umożliwiają zapobiec wydajności i migotać problemów dzięki unikaniu powtarzających się przetwarzania. Te metody mają być odroczone przetwarzania dopiero po transakcji zostało zamknięte."
  syntax:
    content: public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosed;
    return:
      type: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosing
  id: TransactionClosing
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionClosing
  nameWithType: IDesignerHost.TransactionClosing
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosing
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Dodaje program obsługi zdarzeń dla zdarzenia TransactionClosing."
  remarks: "To zdarzenie występuje tuż przed transakcji zostało zakończone.       Transakcja czasami można zmienić wiele wartości. Metody transakcji umożliwiają zapobiec wydajności i migotać problemów dzięki unikaniu powtarzających się przetwarzania. Te metody mają być odroczone przetwarzania dopiero po transakcji zostało zamknięte."
  syntax:
    content: public event System.ComponentModel.Design.DesignerTransactionCloseEventHandler TransactionClosing;
    return:
      type: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription
  id: TransactionDescription
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionDescription
  nameWithType: IDesignerHost.TransactionDescription
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionDescription
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera opis bieżącej transakcji."
  remarks: "Opis jest ostatnim opis określony za pomocą <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>.</xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>"
  syntax:
    content: public string TransactionDescription { get; }
    return:
      type: System.String
      description: "Opis bieżącej transakcji."
  overload: System.ComponentModel.Design.IDesignerHost.TransactionDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpened
  id: TransactionOpened
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionOpened
  nameWithType: IDesignerHost.TransactionOpened
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpened
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Dodaje program obsługi zdarzeń dla zdarzenia TransactionOpened."
  remarks: "To zdarzenie występuje po rozpoczęciu transakcji.       Transakcja czasami można zmienić wiele wartości. Metody transakcji umożliwiają zapobiec wydajności i migotać problemów dzięki unikaniu powtarzających się przetwarzania. Te metody mają być odroczone przetwarzania dopiero po transakcji zostało zamknięte."
  syntax:
    content: public event EventHandler TransactionOpened;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpening
  id: TransactionOpening
  parent: System.ComponentModel.Design.IDesignerHost
  langs:
  - csharp
  name: TransactionOpening
  nameWithType: IDesignerHost.TransactionOpening
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpening
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Dodaje program obsługi zdarzeń dla zdarzenia TransactionOpening."
  remarks: "To zdarzenie występuje, gdy ma rozpocząć transakcji.       Ta metoda umożliwia klientom host projektanta do wykonywania operacji przed innych programów obsługi są powiadamiani o rozpoczęciu transakcji. Określona obsługa jest wywoływana tylko po pierwsze wywołanie <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>staje się.</xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> Kolejne wywołania nie generują tego zdarzenia, dopóki wszystkie obiekty transakcji został usunięty."
  syntax:
    content: public event EventHandler TransactionOpening;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IDesignerHost.Activate
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Activate()
  nameWithType: IDesignerHost.Activate()
  fullName: System.ComponentModel.Design.IDesignerHost.Activate()
- uid: System.ComponentModel.Design.IDesignerHost.Activated
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Activated
  nameWithType: IDesignerHost.Activated
  fullName: System.ComponentModel.Design.IDesignerHost.Activated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.IDesignerHost.Container
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Container
  nameWithType: IDesignerHost.Container
  fullName: System.ComponentModel.Design.IDesignerHost.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateComponent(Type)
  nameWithType: IDesignerHost.CreateComponent(Type)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateComponent(Type,String)
  nameWithType: IDesignerHost.CreateComponent(Type,String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateComponent(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateTransaction()
  nameWithType: IDesignerHost.CreateTransaction()
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction()
- uid: System.ComponentModel.Design.DesignerTransaction
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerTransaction
  nameWithType: DesignerTransaction
  fullName: System.ComponentModel.Design.DesignerTransaction
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateTransaction(String)
  nameWithType: IDesignerHost.CreateTransaction(String)
  fullName: System.ComponentModel.Design.IDesignerHost.CreateTransaction(String)
- uid: System.ComponentModel.Design.IDesignerHost.Deactivated
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Deactivated
  nameWithType: IDesignerHost.Deactivated
  fullName: System.ComponentModel.Design.IDesignerHost.Deactivated
- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: DestroyComponent(IComponent)
  nameWithType: IDesignerHost.DestroyComponent(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.DestroyComponent(IComponent)
- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetDesigner(IComponent)
  nameWithType: IDesignerHost.GetDesigner(IComponent)
  fullName: System.ComponentModel.Design.IDesignerHost.GetDesigner(IComponent)
- uid: System.ComponentModel.Design.IDesigner
  parent: System.ComponentModel.Design
  isExternal: false
  name: IDesigner
  nameWithType: IDesigner
  fullName: System.ComponentModel.Design.IDesigner
- uid: System.ComponentModel.Design.IDesignerHost.GetType(System.String)
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetType(String)
  nameWithType: IDesignerHost.GetType(String)
  fullName: System.ComponentModel.Design.IDesignerHost.GetType(String)
- uid: System.ComponentModel.Design.IDesignerHost.InTransaction
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: InTransaction
  nameWithType: IDesignerHost.InTransaction
  fullName: System.ComponentModel.Design.IDesignerHost.InTransaction
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IDesignerHost.LoadComplete
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: LoadComplete
  nameWithType: IDesignerHost.LoadComplete
  fullName: System.ComponentModel.Design.IDesignerHost.LoadComplete
- uid: System.ComponentModel.Design.IDesignerHost.Loading
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Loading
  nameWithType: IDesignerHost.Loading
  fullName: System.ComponentModel.Design.IDesignerHost.Loading
- uid: System.ComponentModel.Design.IDesignerHost.RootComponent
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponent
  nameWithType: IDesignerHost.RootComponent
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponent
- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponentClassName
  nameWithType: IDesignerHost.RootComponentClassName
  fullName: System.ComponentModel.Design.IDesignerHost.RootComponentClassName
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosed
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionClosed
  nameWithType: IDesignerHost.TransactionClosed
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosed
- uid: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerTransactionCloseEventHandler
  nameWithType: DesignerTransactionCloseEventHandler
  fullName: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
- uid: System.ComponentModel.Design.IDesignerHost.TransactionClosing
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionClosing
  nameWithType: IDesignerHost.TransactionClosing
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionClosing
- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionDescription
  nameWithType: IDesignerHost.TransactionDescription
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionDescription
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpened
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionOpened
  nameWithType: IDesignerHost.TransactionOpened
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpened
- uid: System.ComponentModel.Design.IDesignerHost.TransactionOpening
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionOpening
  nameWithType: IDesignerHost.TransactionOpening
  fullName: System.ComponentModel.Design.IDesignerHost.TransactionOpening
- uid: System.ComponentModel.Design.IDesignerHost.Activate*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Activate
  nameWithType: IDesignerHost.Activate
- uid: System.ComponentModel.Design.IDesignerHost.Container*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Container
  nameWithType: IDesignerHost.Container
- uid: System.ComponentModel.Design.IDesignerHost.CreateComponent*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateComponent
  nameWithType: IDesignerHost.CreateComponent
- uid: System.ComponentModel.Design.IDesignerHost.CreateTransaction*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: CreateTransaction
  nameWithType: IDesignerHost.CreateTransaction
- uid: System.ComponentModel.Design.IDesignerHost.DestroyComponent*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: DestroyComponent
  nameWithType: IDesignerHost.DestroyComponent
- uid: System.ComponentModel.Design.IDesignerHost.GetDesigner*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetDesigner
  nameWithType: IDesignerHost.GetDesigner
- uid: System.ComponentModel.Design.IDesignerHost.GetType*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: GetType
  nameWithType: IDesignerHost.GetType
- uid: System.ComponentModel.Design.IDesignerHost.InTransaction*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: InTransaction
  nameWithType: IDesignerHost.InTransaction
- uid: System.ComponentModel.Design.IDesignerHost.Loading*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: Loading
  nameWithType: IDesignerHost.Loading
- uid: System.ComponentModel.Design.IDesignerHost.RootComponent*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponent
  nameWithType: IDesignerHost.RootComponent
- uid: System.ComponentModel.Design.IDesignerHost.RootComponentClassName*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: RootComponentClassName
  nameWithType: IDesignerHost.RootComponentClassName
- uid: System.ComponentModel.Design.IDesignerHost.TransactionDescription*
  parent: System.ComponentModel.Design.IDesignerHost
  isExternal: false
  name: TransactionDescription
  nameWithType: IDesignerHost.TransactionDescription
