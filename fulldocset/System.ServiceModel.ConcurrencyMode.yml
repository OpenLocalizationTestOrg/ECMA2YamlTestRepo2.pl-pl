### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ConcurrencyMode
  id: ConcurrencyMode
  children:
  - System.ServiceModel.ConcurrencyMode.Multiple
  - System.ServiceModel.ConcurrencyMode.Reentrant
  - System.ServiceModel.ConcurrencyMode.Single
  langs:
  - csharp
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
  type: Enum
  summary: "Określa, czy klasa usługi obsługuje jednowątkowe lub wielowątkowych tryby pracy."
  remarks: "Właściwość ConcurrencyMode jest używany w połączeniu z <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>Właściwości w celu określenia, czy klasa usługi obsługuje tryb jednowątkowego lub wielowątkowych operacji.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> Operacji jednowątkowej może być współużytkowane ani nie obsługującą.       W poniższej tabeli przedstawiono kiedy [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] zezwala na wywoływany podczas drugiego jedną jest w toku, właściwość ConcurrencyMode w zależności od operacji.      | Wartość ConcurrencyMode | Nową operację można wywołać? |   |---------------------------|-------------------------------------|   | Pojedynczy | Nigdy nie. |   | Współużytkowane | Tylko podczas wywoływania inną usługę lub wywołania zwrotnego. |   | Wiele | Zawsze. |"
  example:
  - "The following code example demonstrates the different between using Single, Reentrant, and Multiple. This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] makes and what that means for your operation code.  \n  \n [!code-cs[C_BestPractices-Concurrency#1](~/add/codesnippet/csharp/reentrantandmultiple/reentrantandmultiple.cs#1)]"
  syntax:
    content: public enum ConcurrencyMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Multiple
  id: Multiple
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Multiple
  nameWithType: ConcurrencyMode.Multiple
  fullName: System.ServiceModel.ConcurrencyMode.Multiple
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Wystąpienie usługi będzie wielowątkowych. Nie gwarantuje synchronizacji zostały wprowadzone. Nie ma innych wątków można zmienić obiektu usługi w dowolnym momencie, musi obsługiwać synchronizacji i stan spójności."
  syntax:
    content: Multiple
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Reentrant
  id: Reentrant
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Reentrant
  nameWithType: ConcurrencyMode.Reentrant
  fullName: System.ServiceModel.ConcurrencyMode.Reentrant
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Wystąpienie usługi jest jednowątkowy i akceptuje wywołania współużytkowane. Usługa współużytkowane akceptuje wywołań podczas wywoływania innego usługi; Dlatego obowiązek pozostaw Nazwa stanu obiektu spójne przed objaśnienia i musisz potwierdzić, że dane lokalne operacji jest ważne po objaśnienia. Należy pamiętać, że wystąpienie usługi jest odblokowana tylko przez wywołanie za pośrednictwem innej usługi [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] kanału. W takim przypadku usługa o nazwie można ponownie pierwszej usługi za pośrednictwem wywołania zwrotnego. Jeśli pierwsza usługa nie jest współużytkowane, sekwencję wywołań powoduje zakleszczenie. Aby uzyskać więcej informacji zobacz <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*>.</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*>"
  syntax:
    content: Reentrant
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ConcurrencyMode.Single
  id: Single
  parent: System.ServiceModel.ConcurrencyMode
  langs:
  - csharp
  name: Single
  nameWithType: ConcurrencyMode.Single
  fullName: System.ServiceModel.ConcurrencyMode.Single
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Wystąpienie usługi jest jednowątkowy i nie akceptuje wywołania współużytkowane. Jeśli <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*>jest właściwość <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref>i dodatkowych komunikatów przychodzących podczas, gdy wystąpienie usługi wywołanie, te komunikaty musi poczekać, aż usługa jest dostępna aż lub limit czasu wiadomości.</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*>"
  syntax:
    content: Single
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.ConcurrencyMode.Multiple
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Multiple
  nameWithType: ConcurrencyMode.Multiple
  fullName: System.ServiceModel.ConcurrencyMode.Multiple
- uid: System.ServiceModel.ConcurrencyMode
  parent: System.ServiceModel
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
- uid: System.ServiceModel.ConcurrencyMode.Reentrant
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Reentrant
  nameWithType: ConcurrencyMode.Reentrant
  fullName: System.ServiceModel.ConcurrencyMode.Reentrant
- uid: System.ServiceModel.ConcurrencyMode.Single
  parent: System.ServiceModel.ConcurrencyMode
  isExternal: false
  name: Single
  nameWithType: ConcurrencyMode.Single
  fullName: System.ServiceModel.ConcurrencyMode.Single
