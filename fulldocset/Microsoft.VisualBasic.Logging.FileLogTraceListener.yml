### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener
  id: FileLogTraceListener
  children:
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener
  type: Class
  summary: "Udostępnia prosty odbiornik, który kieruje dane wyjściowe rejestrowania do pliku."
  remarks: "Klasa FileLogTraceListener umożliwia automatyczne obsługi funkcji archiwizuj plików dzienników, zgodnie z potrzebami, na podstawie codzienne lub poszczególnych aplikacji. Ta funkcja archiwizacji automatyczne pomaga zmniejszyć obowiązków konserwacji deweloperom i administratorom.       Można dodać do wystąpienia FileLogTraceListener <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName>lub <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>kolekcji, aby przekierować dane wyjściowe rejestrowania w pliku tekstowym.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> Wystąpienia tej klasy można również dodać do `My.Application.Log` lub `My.Log` (dla aplikacji sieci Web) w [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)] aplikacji. Aby uzyskać więcej informacji, zobacz [wskazówki: zmiana gdzie My.Application.Log zapisuje informacje](~/add/includes/ajax-current-ext-md.md) `.` główne funkcje tej klasy to: 1.  *Funkcje archiwizacji*. Pliki dziennika wygenerowane przez tę klasę nadawane są nazwy zgodne nazwie podstawowej i daty, wraz z liczbą odróżnienia pliku dziennika kolejnych wersji dziennika. Nowe pliki dziennika są tworzone na zgodnie z potrzebami.           Jawne nazwy pliku jest `baseName`[-`dateStamp`] [-`version`] .log, gdzie: — `baseName` część jest nazwę dziennika w podstawowych określoną przez <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>Właściwości.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>          - `dateStamp` Część ma format &quot;RRRR-MM-DD&quot;, i jest ona wyświetlana, gdy <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>jest <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>lub <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>          — Jeśli więcej niż jeden plik dziennika jest potrzebny o takim samym `baseName` i `dateStamp`, `version` część dodatnią `Integer`, jest dodawany do nazwy pliku.      2.  *Wiele wystąpień klasy*. Jeśli wystąpienie klasy FileLogTraceListener zapisuje do pliku, który jest używany:-klasy udziałów pliku, jeśli jest on używany przez inne wystąpienie klasy FileLogTraceListener w tym samym procesie.          -Klasie tworzy nowy plik dziennika przy użyciu nazwy dostępne dalej, jeśli plik jest używany przez inny proces.      3.  *Bezpieczeństwo wątków*. Klasa FileLogTraceListener jest bezpieczne dla wątków. Dzięki temu można bezpiecznie zapisywać komunikaty w dzienniku przez wiele wątków bez używania blokad.       **Lokalizacja pliku dziennika** — <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>ma właściwość <xref:Microsoft.VisualBasic.Logging.LogFileLocation>wyliczeniu, aby określić jeden z typowych katalogów można zapisać pliku dziennika, aby.</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>      -Aby zapisać dziennika do innej lokalizacji, należy ustawić <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>właściwości do tej lokalizacji.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>       **Nazwa pliku dziennika** -podstawowa nazwa pliku dziennika jest określona przez <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>Właściwości.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>      -Bieżąca nazwa pliku dziennika można odczytać z <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>Właściwości.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Pochodzi od innych właściwości i bieżący stan dzienniki w systemie plików.       **Zaloguj się konserwacji** — minimalna częstotliwość tworzenia nowych plików dziennika jest określana przez <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>Właściwości.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> Jeśli wartość jest <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>lub <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>, nowy plik dziennika jest tworzony co najmniej jeden raz każdego dnia lub tygodnia i sygnaturę daty jest włączona do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>nazwy.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>      -Maksymalny rozmiar (w bajtach) pliku dziennika jest określana przez <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>Właściwości.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> Jeśli rozmiar pliku przekracza rozmiar, przejrzeć dodatkowe komunikaty zapisywane w dzienniku są porzucane i, w zależności od <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>Właściwości, jest zgłaszany wyjątek.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>Właściwość określa ilość wolnego miejsca (w bajtach) musi być dostępna.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> Dzięki temu, upewnij się, czy klasa FileLogTraceListener nie będą korzystać z wszystkich dostępnego miejsca na dysku. Użyj <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>zapisuje właściwości w celu określenia zachowania dziennika, gdy istnieją poniżej <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>wolnych bajtów.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>       **Ustawienia danych wyjściowych w pliku dziennika** — <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>właściwość określa, czy zasadniczy strumień powinien opróżniany automatycznie po każdym zapisu w pliku dziennika.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>Właściwość określa, czy dołączyć wiadomości do bieżącego pliku dziennika, jeśli dozwolone, lub zapisanie ich do nowego pliku dziennika.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>Właściwość określa ciąg do użycia na potrzeby oddzielającego pola wiadomości dziennika.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>Właściwość określa kodowanie używane podczas tworzenia nowego pliku dziennika.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>       **Dane wyjściowe pliku dziennika** — <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>i <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>metody zapisywania wiadomości do pliku dziennika.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> Te metody Sprawdź <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>Właściwości, oraz wszelkie istniejące dzienniki o takiej samej nazwie podstawowej, aby określić, czy należy utworzyć nowy dziennik.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>Metody opróżnia komunikaty obecnie w buforze dane wyjściowe do pliku dziennika.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>      - <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>Metody zamyka plik dziennika, dzięki czemu mogą być używane przez inne procesy.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>       **Włączanie danych wyjściowych** należy włączyć śledzenie i debugowanie, aby użyć nasłuchującego śledzenia. Następująca składnia jest określonych kompilatora. Jeśli używasz kompilatory innego niż C# lub [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], zajrzyj do dokumentacji dla Twojej kompilatora.      -Aby włączyć debugowanie w języku C#, Dodaj `/d:DEBUG` flagi do wiersza polecenia kompilatora podczas kompilowania kodu lub można dodać `#define DEBUG` na początku pliku. W [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], Dodaj `/d:DEBUG=True` flagi kompilatora wiersza polecenia.      — W celu włączenia śledzenia w języku C#, Dodaj `/d:TRACE` flagi do wiersza polecenia kompilatora podczas kompilacji kodu, lub Dodaj `#define TRACE` na początku pliku. W [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], Dodaj `/d:TRACE=True` flagi kompilatora wiersza polecenia.       Aby ustawić poziom odbiornik sieci, należy edytować plik konfiguracji aplikacji. W tym pliku można dodać odbiornik, ustaw jej typ i ustawienie jego parametrów, Usuń odbiornik lub wyczyść wszystkie odbiorniki wcześniej ustawiane przez aplikację. Plik konfiguracji powinien być sformatowany jak w następującym przykładzie.       W tym przykładzie do uruchomienia należy podać nazwę FQDN zestawu. Aby uzyskać informacje o tym, jak można uzyskać w pełni kwalifikowanej nazwy zestawu, zobacz [nazwy zestawu](~/add/includes/ajax-current-ext-md.md).      ```   <configuration>       <system.diagnostics>           <sharedListeners>               <add name=&quot;FileLog&quot;                   type=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener,                          Microsoft.VisualBasic, Version=8.0.0.0,                          Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,                          processorArchitecture=MSIL&quot;                    initializeData=&quot;FileLogWriter&quot;/>           </sharedListeners>       </system.diagnostics>   </configuration>   ```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public class FileLogTraceListener : System.Diagnostics.TraceListener
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> klasy o nazwie domyślnej."
  remarks: "Ta metoda ustawia nazwę wystąpienia <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klasy FileLogTraceListener.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       Dostęp można uzyskać nazwy wystąpienia za pośrednictwem <xref:System.Diagnostics.TraceListener.Name%2A>Właściwości.</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> klasa o podanej nazwie."
  remarks: "Ta metoda ustawia nazwę wystąpienia <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klasy do `name`.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       Dostęp można uzyskać nazwy wystąpienia traktować <xref:System.Diagnostics.TraceListener.Name%2A>Właściwości.</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public FileLogTraceListener (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Nazwa wystąpienia obiektu."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  id: Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Określa, czy dołączyć dane wyjściowe do bieżącego pliku lub zapisać go do nowego pliku."
  remarks: "Gdy właściwość dołączania jest `False`, dane wyjściowe są zapisywane do nowego pliku. Gdy ta właściwość jest `True`, dane wyjściowe są dołączane do bieżącego pliku, chyba że:-plik wyjściowy jest zablokowany przez inny proces. W takim przypadku nowy plik dziennika jest tworzony z numerem wersji, która jest włączona do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>nazwy.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      -Bieżący rozmiar pliku jest większy niż co <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>Właściwość umożliwia.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> W takiej sytuacji przejrzeć dodatkowe komunikaty są porzucane i, w zależności od <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>Właściwości, jest zgłaszany wyjątek.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>      -Istniejącej nazwy pliku jest nieaktualny zgodnie z harmonogramem tworzenia dziennika określony przez <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>Właściwości.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> W takim przypadku nowy plik dziennika jest tworzony i sygnaturę daty jest włączona do <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>nazwy.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>"
  syntax:
    content: public bool Append { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>, z <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> wskazujący, że dane wyjściowe są dołączane do bieżącego pliku i <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> wskazujący, że dane wyjściowe są zapisywane do nowego pliku. Domyślne ustawienie dla tej właściwości jest <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  id: AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Wskazuje, czy zapisywanie w strumieniu plików dziennika opróżnia bufor."
  remarks: "`False` Ustawienie dla właściwości AutoFlush zapewnia najlepszą wydajność w przypadku większości aplikacji, ponieważ jest bardziej wydajne, można zapisać wiele komunikatów do pliku dziennika w tym samym czasie. Można użyć <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>bufor wyjściowy metody Flush wszystkie wiadomości w pliku dziennika.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> Można również użyć <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>metodę, która niejawnie opróżnienia strumienia przed zamknięciem pliku dziennika.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>"
  syntax:
    content: public bool AutoFlush { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>, z <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> wskazującą, czy strumień jest opróżniany po każdym zapisu; w przeciwnym razie wpisy dziennika są buforowane i zapisywane bardziej efektywnie. Domyślne ustawienie dla tej właściwości jest <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  id: BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Pobiera lub ustawia nazwę podstawową dla plików dziennika, który jest używany do tworzenia nazwy pełnego pliku dziennika."
  remarks: "The BaseFileName property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.  \n  \n The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the BaseFileName property.  \n  \n-   The `dateStamp` part has the format \"YYYY-MM-DD\", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string BaseFileName { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Nazwa podstawowa dla plików dziennika. Wartość domyślna to nazwa produktu aplikacji."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  id: Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Zamyka zasadniczy strumień dla bieżącego pliku dziennika i zwalnia wszystkie zasoby skojarzone z bieżącym strumienia."
  remarks: "Nie należy wywoływać metody Close jawnie, ponieważ <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>Klasa zarządza podstawowym pary.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  id: CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Pobiera lub ustawia katalog pliku dziennika podczas <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>właściwość jest ustawiona na <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*>"
  remarks: "Gdy ustawiona jest właściwość CustomLocation, także ustawia <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>dla właściwości <xref:Microsoft.VisualBasic.Logging.LogFileLocation>.</xref:Microsoft.VisualBasic.Logging.LogFileLocation> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>       Właściwość CustomLocation spowoduje zgłoszenie wyjątku, jeśli nie można rozpoznać katalogu."
  syntax:
    content: public string CustomLocation { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, która jest nazwa katalogu pliku dziennika. Domyślne ustawienie dla tej właściwości jest katalogu użytkownika dla danych aplikacji."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  id: Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Pobiera lub ustawia ogranicznik używany do ograniczania pola wiadomości dziennika."
  remarks: "Właściwość ogranicznik umożliwia zmianę domyślnym ogranicznikiem."
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, która jest ogranicznik używany dla pola wiadomości dziennika. Domyślne ustawienie dla tej właściwości jest znak TABULACJI."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  id: DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Określa, co należy zrobić podczas zapisywania do pliku dziennika i mniej wolnego miejsca niż określone przez <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>Właściwości.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*>"
  remarks: "Jeśli ustawiono właściwość DiskSpaceExhaustedBehavior <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>, komunikaty dziennika dyskretnie są odrzucane, jeśli nie ma wystarczającej ilości miejsca na dysku zarezerwowane.</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption> Jest to zachowanie domyślne, a nie dopuszcza proste aplikacje z niepowodzeniem, jeśli dysk jest zapełniony.       Bardziej niezawodnych aplikacji można ustawić właściwości DiskSpaceExhaustedBehavior <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>i Dodaj `Try...Catch` bloki wokół całego kodu, który zapisuje w dzienniku</xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption>"
  syntax:
    content: public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;></xref>. Określa, co należy zrobić, podczas próby zapisu do dziennika, plików i jest mniej wolnego miejsca niż określone przez <> </> *> właściwości, lub jeśli rozmiar pliku dziennika jest większa niż co <> </> *> umożliwia właściwości. Wartość domyślna to <xref href=&quot;Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Zamyka zasadniczy strumień i opcjonalnie zwalnia zasoby zarządzane."
  remarks: "Gdy `disposing` parametr jest `True`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>odwołań.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Ta metoda wywołuje `Dispose` metody każdego odwołuje się do obiektu."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>zwalnia zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> wersje tylko zasobów niezarządzanych."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  id: Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Pobiera lub ustawia kodowanie do użycia podczas tworzenia nowego pliku dziennika."
  remarks: "Gdy Dołączanie tekstu do istniejącego pliku dziennika, kodowanie dla tego pliku jest używany zamiast kodowania określoną przez właściwość kodowanie."
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>, która jest kodowanie do użycia podczas tworzenia nowego pliku dziennika.</xref:System.Text.Encoding> Wartość domyślna tej właściwości to <xref:System.Text.UTF8Encoding>.</xref:System.Text.UTF8Encoding>"
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  id: Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Liczba opróżnień zasadniczy strumień, który zapisuje do bieżącego pliku dziennika."
  remarks: "Aby zapisać wszystkie buforowane dane do bieżącego pliku dziennika, należy użyć metody Flush."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  id: FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Pobiera nazwę bieżącego pełnego pliku dziennika."
  remarks: "The FullLogFileName property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log-file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where:  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.  \n  \n-   The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string FullLogFileName { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, która jest bieżąca nazwa pełnego pliku dziennika."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Pobiera obsługiwane przez odbiornik śledzenia atrybutów niestandardowych konfiguracji XML."
  remarks: "Niestandardowe atrybuty <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>mogą być używane w pliku konfiguracji XML sterujące zachowaniem wystąpienia <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>klasy.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Przy użyciu innych atrybutu powoduje, że wyjątek konfiguracji."
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>Tablica zawierająca atrybuty konfiguracji XML rozpoznaje tego odbiornika."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  id: IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Wskazuje, czy nazwa hosta komputera rejestrowania powinny obejmować dane wyjściowe."
  remarks: "Konfigurowanie zachowań, użyj właściwości <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>i <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>metody.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public bool IncludeHostName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Użyj <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> Jeśli identyfikator hosta mają zostać uwzględnione; w przeciwnym razie użyj <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  id: Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Pobiera lub Ustawia lokalizację plików dziennika."
  remarks: "Use the Location property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.  \n  \n|**Location value**|**Path**|  \n|------------------------|--------------|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data that is shared among all users, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\All Users\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the executable file that started the application.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path for the application data of a user, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\\\`username`\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|The path of the current system's temporary folder.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation>|If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.|"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileLocation
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;></xref>, która jest lokalizację pliku dziennika. Wartość domyślna to <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileLocation&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  id: LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Określa datę, aby uwzględnić w nazwach plików dziennika."
  remarks: "Przypisać jeden z <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>wartości wyliczenia właściwości LogFileCreationSchedule, aby określić datę, aby uwzględnić w nazwach plików dziennika.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>       Format daty jest RRRR-MM-DD. Aby uzyskać więcej informacji na temat formatu nazwy pliku dziennika zobacz <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>      | **Wartość LogFileCreationSchedule**|**Data w polu Nazwa pliku dziennika**|   |---------------------------------------|-----------------------------------|   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Obejmują bieżącą datę w polu Nazwa pliku dziennika. |   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Nie dołączaj daty w polu Nazwa pliku dziennika. |   | <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>| Dołączyć pierwszy dzień tygodnia bieżącej nazwy pliku dziennika.</xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> </xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption><br /><br /> Tydzień rozpoczyna się w sobotę. |"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
      description: "<xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;></xref>. Oznacza to, które Data do uwzględnienia w nazwach plików dziennika. Wartość domyślna to <xref href=&quot;Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  id: MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Pobiera lub ustawia maksymalny dozwolony rozmiar pliku dziennika w bajtach."
  remarks: "Ta właściwość służy do upewnij się, że pliki dziennika nie zwiększa zbyt duży.       Jeśli rozmiar pliku dziennika (w bajtach) jest większa niż wartość tej właściwości, gdy <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>zgłoszono klasy próby zapisu komunikatu w dzienniku, komunikat zostanie odrzucony, a awarii jest dyskretnej lub wyjątek, który występuje w zależności od wartości <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>Właściwości.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> W przeciwnym razie wiadomości są zapisywane w dzienniku, jeśli ilość wolnego miejsca na dysku (w bajtach) jest mniejsza niż <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>"
  syntax:
    content: public long MaxFileSize { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Jest to rozmiar maksymalny dozwolony plik dziennika w bajtach. Wartość domyślna to 5000000."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Jeśli ta właściwość ma ustawioną wartość mniej niż 1000."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  id: ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Pobiera lub ustawia ilość wolnego miejsca na dysku w bajtach konieczne przed komunikaty można zapisać pliku dziennika."
  remarks: "Ta właściwość służy do upewnij się, że pliki dziennika nie wypełnia całkowicie dysku.       Jeśli ilość wolnego miejsca (w bajtach) jest mniejsza niż wartość tej właściwości, gdy <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>zgłoszono klasy próby zapisu komunikatu w dzienniku, komunikat zostanie odrzucony, a awarii jest dyskretnej lub wyjątek, który występuje w zależności od wartości <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>Właściwości.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> W przeciwnym razie wiadomości są zapisywane w dzienniku, jeśli rozmiar pliku dziennika (w bajtach) jest większa niż <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>"
  syntax:
    content: public long ReserveDiskSpace { get; set; }
    return:
      type: System.Int64
      description: "<xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Jest to ilość wolnego miejsca na dysku to konieczne. Wartość domyślna to 10000000."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Gdy ta właściwość ma ustawioną wartość mniejszą niż 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Zapisuje informacje o śledzeniu, obiekt danych i informacji o zdarzeniu do pliku wyjściowego i strumienia."
  remarks: "Ta metoda: 1.  Formatuje dane i kontekstu informacje dla danych wyjściowych.      2.  Tworzy nowy plik dziennika, jeśli to konieczne.      3.  Zapisuje informacje w pliku dziennika.       Aby uzyskać więcej informacji na temat tworzenia nowych plików dziennika zobacz <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       W poniższej tabeli wymieniono pola danych wyjściowych w kolejności ich występowania. Pola są rozdzielone przez ciąg który <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>właściwość określa i następuje terminator wiersza.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Pola**|**Output warunku**|**opis**|   |---------------|--------------------------|---------------------|   | `source`| Zawsze | Wartość `name`. |   | `severity`| Zawsze | Nazwa wartości wyliczenia `eventType`. |   | `id`| Zawsze | Reprezentacja ciągu `id`. |   | `message`| Zawsze | Reprezentacja ciągu `data`. |   | `callStack`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Właściwość <xref:System.Diagnostics.TraceEventCache.Callstack%2A> `eventCache`. |   | `CorrelationID`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Właściwość <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `DateTime`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Reprezentacja ciągu <xref:System.Diagnostics.TraceEventCache.DateTime%2A>Właściwość `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Niezmienna kultura jest używany na potrzeby konwersji ciągu. |   | `ProcessID`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Reprezentacja ciągu <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>Właściwość `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Niezmienna kultura jest używany na potrzeby konwersji ciągu. |   | `ThreadID`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Właściwość <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `Timestamp`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Reprezentacja ciągu <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>Właściwość `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Niezmienna kultura jest używany na potrzeby konwersji ciągu. |   | `HostName`| Gdy właściwość <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>jest `True`. | Nazwa komputera. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> obiekt, który zawiera bieżący identyfikator procesu, identyfikator wątku i informacje o śledzeniu na stosie."
    - id: source
      type: System.String
      description: "Nazwa źródła śledzenia, który wywołał tej metody."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Jeden z <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> wartości wyliczenia."
    - id: id
      type: System.Int32
      description: "Identyfikator numeryczny dla zdarzenia."
    - id: data
      type: System.Object
      description: "Dane śledzenia do emisji."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Zapisuje śledzenia informacji, tablicę obiektów danych i informacji o zdarzeniu do pliku wyjściowego i strumienia."
  remarks: "Ta metoda: 1.  Formatuje dane i kontekstu informacje dla danych wyjściowych, 2.  Tworzy nowy dziennik plik, jeśli to konieczne, 3.  Zapisuje informacje w pliku dziennika.       Aby uzyskać więcej informacji na temat tworzenia nowych plików dziennika zobacz <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Poniższa tabela zawiera pola danych wyjściowych w kolejności ich występowania. Pola są rozdzielone przez ciąg który <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>właściwość określa i następuje terminator wiersza.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Pola**|**Output warunku**|**opis**|   |---------------|--------------------------|---------------------|   | `source`| Zawsze | Wartość `name`. |   | `severity`| Zawsze | Nazwa wartości wyliczenia `eventType`. |   | `id`| Zawsze | Reprezentacja ciągu `id`. |   | `message`| Zawsze | Ciąg składający się z reprezentacji ciągu poszczególnych elementów `data`, rozdzielonych <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>. |   | `callStack`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Właściwość <xref:System.Diagnostics.TraceEventCache.Callstack%2A> `eventCache`. |   | `CorrelationID`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Właściwość <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `DateTime`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Reprezentacja ciągu <xref:System.Diagnostics.TraceEventCache.DateTime%2A>Właściwość `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Niezmienna kultura jest używany na potrzeby konwersji ciągu. |   | `ProcessID`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Reprezentacja ciągu <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>Właściwość `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Niezmienna kultura jest używany na potrzeby konwersji ciągu. |   | `ThreadID`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Właściwość <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `Timestamp`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Reprezentacja ciągu <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>Właściwość `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Niezmienna kultura jest używany na potrzeby konwersji ciągu. |   | `HostName`| Gdy właściwość <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>jest `True`. | Nazwa komputera. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> obiekt, który zawiera bieżący identyfikator procesu, identyfikator wątku i informacje o śledzeniu na stosie."
    - id: source
      type: System.String
      description: "Nazwa źródła śledzenia, który wywołał tej metody."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Jeden z <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> wartości wyliczenia."
    - id: id
      type: System.Int32
      description: "Identyfikator numeryczny dla zdarzenia."
    - id: data
      type: System.Object[]
      description: "Tablica obiektów, aby emitować jako dane."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Zapisuje śledzenia informacji, wiadomość i zdarzeń informacji do pliku wyjściowego i strumienia."
  remarks: "Ta metoda: 1.  Formatuje dane i kontekstu informacje dla danych wyjściowych.      2.  Tworzy nowy plik dziennika, jeśli to konieczne.      3.  Zapisuje informacje w pliku dziennika.       Aby uzyskać więcej informacji na temat tworzenia nowych plików dziennika zobacz <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Poniższa tabela zawiera pola danych wyjściowych w kolejności ich występowania. Pola są rozdzielone przez ciąg który <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>właściwość określa i następuje terminator wiersza.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Pola**|**Output warunku**|**opis**|   |---------------|--------------------------|---------------------|   | `source`| Zawsze. | Wartość `name`. |   | `severity`| Zawsze. | Nazwa wartości wyliczenia `eventType`. |   | `id`| Zawsze. | Reprezentacja ciągu `id`. |   | `message`| Zawsze. | Wartość `message`. |   | `callStack`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Właściwość <xref:System.Diagnostics.TraceEventCache.Callstack%2A> `eventCache`. |   | `CorrelationID`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Właściwość <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `DateTime`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Reprezentacja ciągu <xref:System.Diagnostics.TraceEventCache.DateTime%2A>Właściwość `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Niezmienna kultura jest używany na potrzeby konwersji ciągu. |   | `ProcessID`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Reprezentacja ciągu <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>Właściwość `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Niezmienna kultura jest używany na potrzeby konwersji ciągu. |   | `ThreadID`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Właściwość <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `Timestamp`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Reprezentacja ciągu <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>Właściwość `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Niezmienna kultura jest używany na potrzeby konwersji ciągu. |   | `HostName`| Gdy właściwość <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>jest `True`. | Nazwa komputera. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> obiekt, który zawiera bieżący identyfikator procesu, identyfikator wątku i informacje o śledzeniu na stosie."
    - id: source
      type: System.String
      description: "Nazwa źródła śledzenia, który wywołał tej metody."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Jeden z <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> wartości wyliczenia."
    - id: id
      type: System.Int32
      description: "Identyfikator numeryczny dla zdarzenia."
    - id: message
      type: System.String
      description: "Komunikat do zapisania."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Zapisuje śledzenia informacji, sformatowany tablicę obiektów i informacji o zdarzeniu do pliku wyjściowego i strumienia."
  remarks: "Ta metoda: 1.  Formatuje dane i kontekstu informacje dla danych wyjściowych.      2.  Tworzy nową nowy plik dziennika, jeśli to konieczne.      3.  Zapisuje informacje w pliku dziennika.       Aby uzyskać więcej informacji na temat tworzenia nowych plików dziennika zobacz <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>       Poniższa tabela zawiera pola danych wyjściowych w kolejności ich występowania. Pola są rozdzielone przez ciąg który <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>właściwość określa i następuje terminator wiersza.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>      | **Pola**|**Output warunku**|**opis**|   |---------------|--------------------------|---------------------|   | `source`| Zawsze | Wartość `name`. |   | `severity`| Zawsze | Nazwa wartości wyliczenia `eventType`. |   | `id`| Zawsze | Reprezentacja ciągu `id`. |   | `message`| Zawsze | Dane w `args` sformatowane `format` ciągu i do konwersji ciągów za pomocą Niezmienna kultura. |   | `callStack`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Właściwość <xref:System.Diagnostics.TraceEventCache.Callstack%2A> `eventCache`. |   | `CorrelationID`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Właściwość <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `DateTime`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Reprezentacja ciągu <xref:System.Diagnostics.TraceEventCache.DateTime%2A>Właściwość `eventCache`.</xref:System.Diagnostics.TraceEventCache.DateTime%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.Callstack%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Niezmienna kultura jest używany na potrzeby konwersji ciągu. |   | `ProcessID`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Reprezentacja ciągu <xref:System.Diagnostics.TraceEventCache.ProcessId%2A>Właściwość `eventCache`.</xref:System.Diagnostics.TraceEventCache.ProcessId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Niezmienna kultura jest używany na potrzeby konwersji ciągu. |   | `ThreadID`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Właściwość <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> `eventCache`. |   | `Timestamp`| Jeśli ustawiono flagi <xref:System.Diagnostics.TraceOptions>we właściwości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>. | Reprezentacja ciągu <xref:System.Diagnostics.TraceEventCache.Timestamp%2A>Właściwość `eventCache`.</xref:System.Diagnostics.TraceEventCache.Timestamp%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> </xref:System.Diagnostics.TraceEventCache.ThreadId%2A> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> </xref:System.Diagnostics.TraceOptions> Niezmienna kultura jest używany na potrzeby konwersji ciągu. |   | `HostName`| Gdy właściwość <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>jest `True`. | Nazwa komputera. |</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> obiekt, który zawiera bieżący identyfikator procesu, identyfikator wątku i informacje o śledzeniu na stosie."
    - id: source
      type: System.String
      description: "Nazwa źródła śledzenia, który wywołał tej metody."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Jeden z <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> wartości wyliczenia."
    - id: id
      type: System.Int32
      description: "Identyfikator numeryczny dla zdarzenia."
    - id: format
      type: System.String
      description: "Ciąg formatu, który zawiera zero lub więcej elementów formatu, które odnoszą się do obiektów w `args` tablicy."
    - id: args
      type: System.Object[]
      description: "<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> Tablicę zawierającą zero lub więcej obiektów do formatowania."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  id: Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Zapisuje komunikat dosłownego wyrażenia na dysku, bez żadnych informacji dodatkowy kontekst."
  remarks: "Metoda Write zapisuje określonego komunikatu do pliku dziennika bez żadnych informacji dodatkowy kontekst.       Użyj jednej z <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>metody służące do dołączania informacje kontekstu w danych wyjściowych dziennika.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Niestandardowy komunikat do zapisania."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Zapisuje komunikat dosłownego wyrażenia na dysku, następuje bieżącego terminator wiersza, bez żadnych informacji dodatkowy kontekst."
  remarks: "Metoda WriteLine zapisuje określonego komunikatu do pliku dziennika bez żadnych informacji dodatkowy kontekst.       Użyj jednej z <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>metody służące do dołączania informacje kontekstu w danych wyjściowych dziennika.</xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Niestandardowy komunikat do zapisania."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: DiskSpaceExhaustedOption
  nameWithType: DiskSpaceExhaustedOption
  fullName: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.LogFileLocation
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileLocation
  nameWithType: LogFileLocation
  fullName: Microsoft.VisualBasic.Logging.LogFileLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileCreationScheduleOption
  nameWithType: LogFileCreationScheduleOption
  fullName: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener.FileLogTraceListener
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close
  nameWithType: FileLogTraceListener.Close
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose
  nameWithType: FileLogTraceListener.Dispose
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush
  nameWithType: FileLogTraceListener.Flush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: FileLogTraceListener.GetSupportedAttributes
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData
  nameWithType: FileLogTraceListener.TraceData
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: FileLogTraceListener.TraceEvent
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write
  nameWithType: FileLogTraceListener.Write
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: FileLogTraceListener.WriteLine
