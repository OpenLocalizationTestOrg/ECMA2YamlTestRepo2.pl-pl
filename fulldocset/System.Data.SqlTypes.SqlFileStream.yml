### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlFileStream
  id: SqlFileStream
  children:
  - System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  - System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  - System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Data.SqlTypes.SqlFileStream.CanRead
  - System.Data.SqlTypes.SqlFileStream.CanSeek
  - System.Data.SqlTypes.SqlFileStream.CanTimeout
  - System.Data.SqlTypes.SqlFileStream.CanWrite
  - System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  - System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  - System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  - System.Data.SqlTypes.SqlFileStream.Finalize
  - System.Data.SqlTypes.SqlFileStream.Flush
  - System.Data.SqlTypes.SqlFileStream.Length
  - System.Data.SqlTypes.SqlFileStream.Name
  - System.Data.SqlTypes.SqlFileStream.Position
  - System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlFileStream.ReadByte
  - System.Data.SqlTypes.SqlFileStream.ReadTimeout
  - System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  - System.Data.SqlTypes.SqlFileStream.TransactionContext
  - System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  - System.Data.SqlTypes.SqlFileStream.WriteTimeout
  langs:
  - csharp
  name: SqlFileStream
  nameWithType: SqlFileStream
  fullName: System.Data.SqlTypes.SqlFileStream
  type: Class
  summary: "Przedstawia przechowywanych mających atrybut FILESTREAM kolumny jako sekwencję bajtów danych programu SQL Server."
  remarks: "Klasa SqlFileStream jest używana do pracy z `varbinary(max)` dane przechowywane przez atrybut FILESTREAM w bazie danych programu SQL Server 2008. .NET Framework 3.5 z dodatkiem SP1 należy zainstalować (lub nowsza) do użycia <xref:System.Data.SqlTypes.SqlFileStream>do pracy z danymi FILESTREAM.</xref:System.Data.SqlTypes.SqlFileStream>       Określanie FILESTREAM atrybutu `varbinary(max)` kolumny powoduje, że serwer SQL do przechowywania danych w lokalnego systemu plików NTFS zamiast w pliku bazy danych. Instrukcji języka Transact-SQL zapewniają możliwości manipulacji danych w ramach serwera, i interfejsy systemu Win32 pliku zapewnia przesyłania strumieniowego dostępu do danych.      > [!NOTE] > Poszczególnych plików przechowywanych w kolumnie FILESTREAM nie może zostać otwarty bezpośrednio z systemu plików NTFS. Przesyłanie strumieniowe danych FILESTREAM działa tylko w kontekście transakcji programu SQL Server.       Jest pochodną klasy SqlFileStream <xref:System.IO.Stream>klasy, która reprezentuje abstrakcję sekwencję bajtów z określonego źródła dowolne dane, takie jak plik lub bloku pamięci.</xref:System.IO.Stream> Można odczytywać strumień pliku przez przeniesienie danych ze strumienia do struktury danych, takich jak tablicę bajtów. Możesz zapisywać do FILESTREAM przez przeniesienie danych ze strukturą danych w strumieniu. Możesz również można wyszukiwać w strumieniu, co pozwala na zapytania i modyfikować danych w bieżącym położeniu w strumieniu.       Dokumentacja koncepcyjna i przykłady kodu, zobacz [danych FILESTREAM](~/add/includes/ajax-current-ext-md.md).       Dokumentacja i konfigurowania danych FILESTREAM w programie SQL Server, zobacz [projektowanie i implementowanie magazynowania FILESTREAM](http://go.microsoft.com/fwlink/?LinkId=121499) w dokumentacji SQL Server 2008 — książki Online."
  syntax:
    content: 'public sealed class SqlFileStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  id: '#ctor(System.String,System.Byte[],System.IO.FileAccess)'
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: SqlFileStream(String,Byte[],FileAccess)
  nameWithType: SqlFileStream.SqlFileStream(String,Byte[],FileAccess)
  fullName: System.Data.SqlTypes.SqlFileStream.SqlFileStream(String,Byte[],FileAccess)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> klasy."
  remarks: "Jeśli wyjątek transakcji otwartych powinien cofnięta. W przeciwnym razie może wystąpić utrata danych."
  syntax:
    content: public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka logiczna do pliku. Ścieżka może zostać pobrany za pomocą funkcji Pathname języka Transact-SQL w kolumnie FILESTREAM podstawowych w tabeli."
    - id: transactionContext
      type: System.Byte[]
      description: "Kontekst transakcji dla <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> obiektu. Aplikacje powinny zwracać tablica bajtów zwrócona przez wywołanie metody funkcji GET_FILESTREAM_TRANSACTION_CONTEXT."
    - id: access
      type: System.IO.FileAccess
      description: "Tryb dostępu do używania podczas otwierania pliku. Supported <xref href=&quot;System.IO.FileAccess&quot;></xref> enumeration values are <xref href=&quot;System.IO.FileAccess&quot;></xref>, <xref href=&quot;System.IO.FileAccess&quot;></xref>, and <xref href=&quot;System.IO.FileAccess&quot;></xref>.       Korzystając z <xref uid=&quot;langword_csharp_FileAccess.Read&quot; name=&quot;FileAccess.Read&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> obiekt może służyć do odczytu wszystkich istniejących danych.       Korzystając z <xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> wskazuje plik zero bajtów. Istniejące dane zostaną zastąpione, gdy obiekt jest zamknięty, a transakcja została przekazana.       Korzystając z <xref uid=&quot;langword_csharp_FileAccess.ReadWrite&quot; name=&quot;FileAccess.ReadWrite&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> wskazuje plik, którego wszystkie istniejące dane w nim. Dojście znajduje się na początku pliku. Można użyć jednej z <xref uid=&quot;langword_csharp_System.IO&quot; name=&quot;System.IO&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_Seek&quot; name=&quot;Seek&quot; href=&quot;&quot;> </xref> metody przeniesienia pozycji dojście w pliku do zapisu lub dołączenie nowych danych."
  overload: System.Data.SqlTypes.SqlFileStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>to odwołanie o wartości null, lub <code>transactionContext</code> ma wartość null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>path</code> is an empty string (\"\"), contains only white space, or contains one or more invalid characters.  \n  \n <code>path</code> begins with \"\\\\\\\\.\\\\\", for example \"\\\\\\\\.\\PHYSICALDRIVE0 \".  \n  \n The handle returned by the call to NTCreateFile is not of type FILE_TYPE_DISK.  \n  \n <code>options</code> contains an unsupported value."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Nie można odnaleźć pliku."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Określony <code> path </code> jest nieprawidłowy, takie jak w mapowany dysk."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Żądany dostęp nie jest dozwolona przez system operacyjny dla określonej ścieżki. Dzieje się tak, gdy dostęp do zapisu lub odczytu i zapisu jest określona, a plik lub katalog jest ustawiona na dostęp tylko do odczytu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "NtCreateFile kończy się niepowodzeniem z kodem błędu ustawioną ERROR_SHARING_VIOLATION."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  id: '#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)'
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  nameWithType: SqlFileStream.SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  fullName: System.Data.SqlTypes.SqlFileStream.SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> klasy."
  remarks: "Jeśli wyjątek transakcji otwartych powinien cofnięta. W przeciwnym razie może wystąpić utrata danych."
  syntax:
    content: public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access, System.IO.FileOptions options, long allocationSize);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka logiczna do pliku. Ścieżka może zostać pobrany za pomocą funkcji Pathname języka Transact-SQL w kolumnie FILESTREAM podstawowych w tabeli."
    - id: transactionContext
      type: System.Byte[]
      description: "Kontekst transakcji dla <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> obiektu. Gdy ustawiona na wartość null, transakcji niejawnej będzie służyć do <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> obiektu. Aplikacje powinny zwracać tablica bajtów zwrócona przez wywołanie metody funkcji GET_FILESTREAM_TRANSACTION_CONTEXT."
    - id: access
      type: System.IO.FileAccess
      description: "Tryb dostępu do używania podczas otwierania pliku. Supported <xref href=&quot;System.IO.FileAccess&quot;></xref> enumeration values are <xref href=&quot;System.IO.FileAccess&quot;></xref>, <xref href=&quot;System.IO.FileAccess&quot;></xref>, and <xref href=&quot;System.IO.FileAccess&quot;></xref>.       Korzystając z <xref uid=&quot;langword_csharp_FileAccess.Read&quot; name=&quot;FileAccess.Read&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> obiekt może służyć do odczytu wszystkich istniejących danych.       Korzystając z <xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> wskazuje plik zero bajtów. Istniejące dane zostaną zastąpione, gdy obiekt jest zamknięty, a transakcja została przekazana.       Korzystając z <xref uid=&quot;langword_csharp_FileAccess.ReadWrite&quot; name=&quot;FileAccess.ReadWrite&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> wskazuje plik, którego wszystkie istniejące dane w nim. Dojście znajduje się na początku pliku. Można użyć jednej z <xref uid=&quot;langword_csharp_System.IO&quot; name=&quot;System.IO&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_Seek&quot; name=&quot;Seek&quot; href=&quot;&quot;> </xref> metody przeniesienia pozycji dojście w pliku do zapisu lub dołączenie nowych danych."
    - id: options
      type: System.IO.FileOptions
      description: "Określa opcje do używania podczas otwierania pliku. Supported <xref href=&quot;System.IO.FileOptions&quot;></xref> values are <xref href=&quot;System.IO.FileOptions&quot;></xref>, <xref href=&quot;System.IO.FileOptions&quot;></xref>, <xref href=&quot;System.IO.FileOptions&quot;></xref>, and <xref href=&quot;System.IO.FileOptions&quot;></xref>."
    - id: allocationSize
      type: System.Int64
      description: "Rozmiar alokacji, które będą używane podczas tworzenia pliku. Jeśli używane jest ustawiona na 0, wartością domyślną."
  overload: System.Data.SqlTypes.SqlFileStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>to odwołanie o wartości null, lub <code>transactionContext</code> ma wartość null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>path</code> is an empty string (\"\"), contains only white space, or contains one or more invalid characters.  \n  \n <code>path</code> begins with \"\\\\\\\\.\\\\\", for example \"\\\\\\\\.\\PHYSICALDRIVE0 \".  \n  \n The handle returned by call to NTCreateFile is not of type FILE_TYPE_DISK.  \n  \n <code>options</code> contains an unsupported value."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Nie można odnaleźć pliku."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Obiekt wywołujący nie ma wymaganych uprawnień."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Określony <code> path </code> jest nieprawidłowy, takie jak w mapowany dysk."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Żądany dostęp nie jest dozwolona przez system operacyjny dla określonej ścieżki. Dzieje się tak, gdy dostęp do zapisu lub odczytu i zapisu jest określona, a plik lub katalog jest ustawiona na dostęp tylko do odczytu."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "NtCreateFile kończy się niepowodzeniem z kodem błędu ustawioną ERROR_SHARING_VIOLATION."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SqlFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Data.SqlTypes.SqlFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Rozpoczyna operację asynchroniczną odczytu."
  remarks: "Użyj <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>Właściwości w celu określenia, czy bieżące wystąpienie obsługuje odczytu.</xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bufor do wczytania danych."
    - id: offset
      type: System.Int32
      description: "Przesunięcie bajtów w `buffer` jaką rozpocząć pisanie dane odczytane ze strumienia."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba bajtów do odczytania."
    - id: callback
      type: System.AsyncCallback
      description: "Opcjonalne asynchroniczne wywołanie zwrotne, ma być wywoływana po zakończeniu odczytu."
    - id: state
      type: System.Object
      description: "Obiekt dostarczane przez użytkownika, która odróżnia to asynchroniczne żądanie odczytu z innych żądań"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Reprezentujący asynchroniczny odczyt, mogą nadal oczekiwać.</xref:System.IAsyncResult>"
  overload: System.Data.SqlTypes.SqlFileStream.BeginRead*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Odczytywanie danych nie jest obsługiwany w strumieniu."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SqlFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Data.SqlTypes.SqlFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Rozpoczyna operację asynchronicznego zapisu."
  remarks: "Użyj <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>Właściwości w celu określenia, czy bieżące wystąpienie obsługuje zapisu.</xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bufor zapisywania danych z."
    - id: offset
      type: System.Int32
      description: "Przesunięcie bajtów w `buffer` z której ma rozpocząć się zapis."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba bajtów do zapisania."
    - id: callback
      type: System.AsyncCallback
      description: "Opcjonalne asynchroniczne wywołanie zwrotne, ma być wywoływana po zakończeniu zapisu."
    - id: state
      type: System.Object
      description: "Obiekt dostarczane przez użytkownika, która odróżnia to żądanie określonego zapis asynchroniczny od innych żądań."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Reprezentujący zapis asynchroniczny, który może być oczekujące.</xref:System.IAsyncResult>"
  overload: System.Data.SqlTypes.SqlFileStream.BeginWrite*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Zapisywanie danych nie jest obsługiwany w strumieniu."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.CanRead
  id: CanRead
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SqlFileStream.CanRead
  fullName: System.Data.SqlTypes.SqlFileStream.CanRead
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera wartość wskazującą, czy bieżący strumień obsługuje odczytu."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący strumień obsługuje Odczyt; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.CanSeek
  id: CanSeek
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SqlFileStream.CanSeek
  fullName: System.Data.SqlTypes.SqlFileStream.CanSeek
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera wartość wskazującą, czy bieżący strumień obsługuje operacji wyszukiwania."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący strumień obsługuje operacji wyszukiwania; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.CanTimeout
  id: CanTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SqlFileStream.CanTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.CanTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera wartość wskazującą, czy bieżący strumień może upłynął limit czasu."
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący strumień może upłynął limit czasu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.CanWrite
  id: CanWrite
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SqlFileStream.CanWrite
  fullName: System.Data.SqlTypes.SqlFileStream.CanWrite
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera wartość wskazującą, czy bieżący strumień obsługuje zapisu."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący strumień obsługuje zapis; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlFileStream.Dispose(Boolean)
  fullName: System.Data.SqlTypes.SqlFileStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Do dodania."
  overload: System.Data.SqlTypes.SqlFileStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SqlFileStream.EndRead(IAsyncResult)
  fullName: System.Data.SqlTypes.SqlFileStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Czeka na oczekujące odczyt asynchroniczny zakończyć."
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Odwołanie do oczekującego żądania asynchroniczne, aby zakończyć."
    return:
      type: System.Int32
      description: "Liczba odczytanych bajtów ze strumienia, między (0) i liczba bajtów, żądana. Strumienie zwrócił zero (0) tylko na końcu strumienia, w przeciwnym razie należy zablokować, dopóki nie będzie dostępne co najmniej jednego bajtu."
  overload: System.Data.SqlTypes.SqlFileStream.EndRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.IAsyncResult>Obiekt nie pochodzi z odpowiedniej <xref uid=&quot;langword_csharp_BeginRead&quot; name=&quot;BeginRead&quot; href=&quot;&quot;> </xref> metody.</xref:System.IAsyncResult>"
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SqlFileStream.EndWrite(IAsyncResult)
  fullName: System.Data.SqlTypes.SqlFileStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Kończy operację asynchronicznego zapisu."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Odwołanie do oczekujące żądania asynchroniczne We/Wy."
  overload: System.Data.SqlTypes.SqlFileStream.EndWrite*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.IAsyncResult>Obiekt nie pochodzi z odpowiedniej <xref uid=&quot;langword_csharp_BeginWrite&quot; name=&quot;BeginWrite&quot; href=&quot;&quot;> </xref> metody.</xref:System.IAsyncResult>"
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Finalize
  id: Finalize
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: SqlFileStream.Finalize()
  fullName: System.Data.SqlTypes.SqlFileStream.Finalize()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Gwarantuje, że zasoby są zwalniane i inne operacje oczyszczania są wykonywane, gdy moduł garbage collector zwraca <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref>."
  syntax:
    content: ~SqlFileStream ();
    parameters: []
  overload: System.Data.SqlTypes.SqlFileStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Flush
  id: Flush
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SqlFileStream.Flush()
  fullName: System.Data.SqlTypes.SqlFileStream.Flush()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Czyści wszystkie bufory dla tego strumienia i powoduje, że wszystkie buforowane dane są zapisywane w podstawowej urządzenia."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.SqlTypes.SqlFileStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Length
  id: Length
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Length
  nameWithType: SqlFileStream.Length
  fullName: System.Data.SqlTypes.SqlFileStream.Length
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera wartość wskazującą, długość w bajtach bieżący strumień."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>Wskazującym długość w bajtach bieżący strumień.</xref:System.Int64>"
  overload: System.Data.SqlTypes.SqlFileStream.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Name
  id: Name
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Name
  nameWithType: SqlFileStream.Name
  fullName: System.Data.SqlTypes.SqlFileStream.Name
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera ścieżkę logiczną <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> przekazany do konstruktora."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Wartość ciągu wskazujące nazwę <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Position
  id: Position
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Position
  nameWithType: SqlFileStream.Position
  fullName: System.Data.SqlTypes.SqlFileStream.Position
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera lub ustawia pozycję w ramach bieżącego strumienia."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "Bieżąca pozycja w <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SqlFileStream.Read(Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlFileStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Odczytuje sekwencję bajtów ze strumienia bieżącego i zmienia pozycję w strumieniu przez liczbę bajtów odczytanych."
  remarks: "Użyj <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>Właściwości w celu określenia, czy bieżące wystąpienie obsługuje zapisu.</xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Tablica bajtów. Po powrocie z tej metody bufor zawiera określonej tablicy bajtów z wartości przesunięcia i (przesunięcie + liczba - 1) zastępuje Bajty odczytane z bieżącego źródła."
    - id: offset
      type: System.Int32
      description: "Odczytać zerze przesunięcie w buforze, od którego ma zostać rozpoczęta, przechowywanie danych z bieżącego strumienia."
    - id: count
      type: System.Int32
      description: "Maksymalna liczba bajtów, które mają być odczytane z bieżącego strumienia."
    return:
      type: System.Int32
      description: "Całkowita liczba bajtów odczytanych w buforze. Może to być mniejsza niż żądana liczba bajtów Jeśli wiele bajtów nie są obecnie dostępne, czy zero (0), jeśli został osiągnięty koniec strumienia."
  overload: System.Data.SqlTypes.SqlFileStream.Read*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Obiekt nie obsługuje odczytu danych."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.ReadByte
  id: ReadByte
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: SqlFileStream.ReadByte()
  fullName: System.Data.SqlTypes.SqlFileStream.ReadByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Odczytuje bajtów ze strumienia i zmienia pozycję w strumieniu przez jednego bajtu lub zwraca wartość -1, jeśli na koniec strumienia."
  remarks: "Użyj <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>Właściwości w celu określenia, czy bieżące wystąpienie obsługuje odczytu.</xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>"
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "Rzutować bajtu bez znaku <xref:System.Int32>, lub wartość -1, jeśli na koniec strumienia.</xref:System.Int32>"
  overload: System.Data.SqlTypes.SqlFileStream.ReadByte*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Obiekt nie obsługuje odczytu danych."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.ReadTimeout
  id: ReadTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SqlFileStream.ReadTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.ReadTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera lub ustawia wartość, w milisekundach, które określa, jak długo strumienia podejmie próbę odczytu przed przekroczeniem limitu czasu."
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "Wartość, w milisekundach, który określa, jak długo strumienia podejmie próbę odczytu przed przekroczeniem limitu czasu."
  overload: System.Data.SqlTypes.SqlFileStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SqlFileStream.Seek(Int64,SeekOrigin)
  fullName: System.Data.SqlTypes.SqlFileStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ustawia położenie w obrębie bieżącego strumienia."
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Przesunięcie bajtów, względem `origin` parametru"
    - id: origin
      type: System.IO.SeekOrigin
      description: "Wartość typu <xref:System.IO.SeekOrigin>wskazujący punkt odniesienia używany do uzyskania nowego położenia</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "Nowa pozycja w ramach bieżącego strumienia."
  overload: System.Data.SqlTypes.SqlFileStream.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SqlFileStream.SetLength(Int64)
  fullName: System.Data.SqlTypes.SqlFileStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ustawia długość bieżącego strumienia."
  remarks: "Użyj <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>Właściwości w celu określenia, czy bieżące wystąpienie obsługuje odczytu.</xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Wymagana długość w bajtach bieżący strumień."
  overload: System.Data.SqlTypes.SqlFileStream.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Obiekt nie obsługuje odczytu danych."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.TransactionContext
  id: TransactionContext
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: TransactionContext
  nameWithType: SqlFileStream.TransactionContext
  fullName: System.Data.SqlTypes.SqlFileStream.TransactionContext
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera lub ustawia kontekst transakcji dla tego <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> obiektu."
  syntax:
    content: public byte[] TransactionContext { get; }
    return:
      type: System.Byte[]
      description: "<code> transactionContext </code> Tablicy, który został przekazany do konstruktora dla tego <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> obiektu."
  overload: System.Data.SqlTypes.SqlFileStream.TransactionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SqlFileStream.Write(Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlFileStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Zapisuje sekwencję bajtów do bieżącego strumienia i przechodzi przez liczba zapisanych bajtów bieżącą pozycję w tym strumieniu."
  remarks: "Użyj <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>Właściwości w celu określenia, czy bieżące wystąpienie obsługuje zapisu.</xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Tablica bajtów. Ta metoda umożliwia skopiowanie `count` bajtów z `buffer` do bieżącego strumienia."
    - id: offset
      type: System.Int32
      description: "Zerze przesunięcie w `buffer` jaką należy zacząć kopiowanie bajtów do bieżącego strumienia."
    - id: count
      type: System.Int32
      description: "Liczba bajtów do zapisania bieżącego strumienia."
  overload: System.Data.SqlTypes.SqlFileStream.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Obiekt nie obsługuje zapisywania danych."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: SqlFileStream.WriteByte(Byte)
  fullName: System.Data.SqlTypes.SqlFileStream.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Zapisuje bieżącą pozycję w strumieniu bajt i zmienia pozycję w strumieniu przez jednego bajtu."
  remarks: "Użyj <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>Właściwości w celu określenia, czy bieżące wystąpienie obsługuje zapisu.</xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "Bajtów do zapisania w strumieniu."
  overload: System.Data.SqlTypes.SqlFileStream.WriteByte*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Obiekt nie obsługuje zapisywania danych."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.WriteTimeout
  id: WriteTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SqlFileStream.WriteTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.WriteTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Pobiera lub ustawia wartość, w milisekundach, które określa, jak długo strumienia podejmie próbę zapisu przed przekroczeniem limitu czasu."
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Wartość, w milisekundach, który określa, jak długo strumienia podejmie próbę zapisu przed przekroczeniem limitu czasu."
  overload: System.Data.SqlTypes.SqlFileStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SqlFileStream(String,Byte[],FileAccess)
  nameWithType: SqlFileStream.SqlFileStream(String,Byte[],FileAccess)
  fullName: System.Data.SqlTypes.SqlFileStream.SqlFileStream(String,Byte[],FileAccess)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  nameWithType: SqlFileStream.SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  fullName: System.Data.SqlTypes.SqlFileStream.SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
- uid: System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SqlFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Data.SqlTypes.SqlFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SqlFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Data.SqlTypes.SqlFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Data.SqlTypes.SqlFileStream.CanRead
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanRead
  nameWithType: SqlFileStream.CanRead
  fullName: System.Data.SqlTypes.SqlFileStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlFileStream.CanSeek
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanSeek
  nameWithType: SqlFileStream.CanSeek
  fullName: System.Data.SqlTypes.SqlFileStream.CanSeek
- uid: System.Data.SqlTypes.SqlFileStream.CanTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanTimeout
  nameWithType: SqlFileStream.CanTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.CanTimeout
- uid: System.Data.SqlTypes.SqlFileStream.CanWrite
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanWrite
  nameWithType: SqlFileStream.CanWrite
  fullName: System.Data.SqlTypes.SqlFileStream.CanWrite
- uid: System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlFileStream.Dispose(Boolean)
  fullName: System.Data.SqlTypes.SqlFileStream.Dispose(Boolean)
- uid: System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SqlFileStream.EndRead(IAsyncResult)
  fullName: System.Data.SqlTypes.SqlFileStream.EndRead(IAsyncResult)
- uid: System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SqlFileStream.EndWrite(IAsyncResult)
  fullName: System.Data.SqlTypes.SqlFileStream.EndWrite(IAsyncResult)
- uid: System.Data.SqlTypes.SqlFileStream.Finalize
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Finalize()
  nameWithType: SqlFileStream.Finalize()
  fullName: System.Data.SqlTypes.SqlFileStream.Finalize()
- uid: System.Data.SqlTypes.SqlFileStream.Flush
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Flush()
  nameWithType: SqlFileStream.Flush()
  fullName: System.Data.SqlTypes.SqlFileStream.Flush()
- uid: System.Data.SqlTypes.SqlFileStream.Length
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Length
  nameWithType: SqlFileStream.Length
  fullName: System.Data.SqlTypes.SqlFileStream.Length
- uid: System.Data.SqlTypes.SqlFileStream.Name
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Name
  nameWithType: SqlFileStream.Name
  fullName: System.Data.SqlTypes.SqlFileStream.Name
- uid: System.Data.SqlTypes.SqlFileStream.Position
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Position
  nameWithType: SqlFileStream.Position
  fullName: System.Data.SqlTypes.SqlFileStream.Position
- uid: System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SqlFileStream.Read(Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlFileStream.Read(Byte[],Int32,Int32)
- uid: System.Data.SqlTypes.SqlFileStream.ReadByte
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadByte()
  nameWithType: SqlFileStream.ReadByte()
  fullName: System.Data.SqlTypes.SqlFileStream.ReadByte()
- uid: System.Data.SqlTypes.SqlFileStream.ReadTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SqlFileStream.ReadTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.ReadTimeout
- uid: System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SqlFileStream.Seek(Int64,SeekOrigin)
  fullName: System.Data.SqlTypes.SqlFileStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SqlFileStream.SetLength(Int64)
  fullName: System.Data.SqlTypes.SqlFileStream.SetLength(Int64)
- uid: System.Data.SqlTypes.SqlFileStream.TransactionContext
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: TransactionContext
  nameWithType: SqlFileStream.TransactionContext
  fullName: System.Data.SqlTypes.SqlFileStream.TransactionContext
- uid: System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SqlFileStream.Write(Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlFileStream.Write(Byte[],Int32,Int32)
- uid: System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: SqlFileStream.WriteByte(Byte)
  fullName: System.Data.SqlTypes.SqlFileStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlTypes.SqlFileStream.WriteTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SqlFileStream.WriteTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.WriteTimeout
- uid: System.Data.SqlTypes.SqlFileStream.#ctor*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SqlFileStream
  nameWithType: SqlFileStream.SqlFileStream
- uid: System.Data.SqlTypes.SqlFileStream.BeginRead*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginRead
  nameWithType: SqlFileStream.BeginRead
- uid: System.Data.SqlTypes.SqlFileStream.BeginWrite*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginWrite
  nameWithType: SqlFileStream.BeginWrite
- uid: System.Data.SqlTypes.SqlFileStream.CanRead*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanRead
  nameWithType: SqlFileStream.CanRead
- uid: System.Data.SqlTypes.SqlFileStream.CanSeek*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanSeek
  nameWithType: SqlFileStream.CanSeek
- uid: System.Data.SqlTypes.SqlFileStream.CanTimeout*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanTimeout
  nameWithType: SqlFileStream.CanTimeout
- uid: System.Data.SqlTypes.SqlFileStream.CanWrite*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanWrite
  nameWithType: SqlFileStream.CanWrite
- uid: System.Data.SqlTypes.SqlFileStream.Dispose*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Dispose
  nameWithType: SqlFileStream.Dispose
- uid: System.Data.SqlTypes.SqlFileStream.EndRead*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndRead
  nameWithType: SqlFileStream.EndRead
- uid: System.Data.SqlTypes.SqlFileStream.EndWrite*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndWrite
  nameWithType: SqlFileStream.EndWrite
- uid: System.Data.SqlTypes.SqlFileStream.Finalize*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Finalize
  nameWithType: SqlFileStream.Finalize
- uid: System.Data.SqlTypes.SqlFileStream.Flush*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Flush
  nameWithType: SqlFileStream.Flush
- uid: System.Data.SqlTypes.SqlFileStream.Length*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Length
  nameWithType: SqlFileStream.Length
- uid: System.Data.SqlTypes.SqlFileStream.Name*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Name
  nameWithType: SqlFileStream.Name
- uid: System.Data.SqlTypes.SqlFileStream.Position*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Position
  nameWithType: SqlFileStream.Position
- uid: System.Data.SqlTypes.SqlFileStream.Read*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Read
  nameWithType: SqlFileStream.Read
- uid: System.Data.SqlTypes.SqlFileStream.ReadByte*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadByte
  nameWithType: SqlFileStream.ReadByte
- uid: System.Data.SqlTypes.SqlFileStream.ReadTimeout*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SqlFileStream.ReadTimeout
- uid: System.Data.SqlTypes.SqlFileStream.Seek*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Seek
  nameWithType: SqlFileStream.Seek
- uid: System.Data.SqlTypes.SqlFileStream.SetLength*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SetLength
  nameWithType: SqlFileStream.SetLength
- uid: System.Data.SqlTypes.SqlFileStream.TransactionContext*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: TransactionContext
  nameWithType: SqlFileStream.TransactionContext
- uid: System.Data.SqlTypes.SqlFileStream.Write*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Write
  nameWithType: SqlFileStream.Write
- uid: System.Data.SqlTypes.SqlFileStream.WriteByte*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteByte
  nameWithType: SqlFileStream.WriteByte
- uid: System.Data.SqlTypes.SqlFileStream.WriteTimeout*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SqlFileStream.WriteTimeout
