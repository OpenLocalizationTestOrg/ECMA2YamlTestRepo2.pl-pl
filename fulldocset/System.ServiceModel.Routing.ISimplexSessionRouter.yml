### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.ISimplexSessionRouter
  id: ISimplexSessionRouter
  children:
  - System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)
  langs:
  - csharp
  name: ISimplexSessionRouter
  nameWithType: ISimplexSessionRouter
  fullName: System.ServiceModel.Routing.ISimplexSessionRouter
  type: Interface
  summary: "Definiuje interfejs musi przetwarzać komunikaty z kanałów jednostronne sesji."
  remarks: "Ten kontrakt ma następujące ustawienia:-sesji są wymagane.      -Jednokierunkowe komunikaty."
  syntax:
    content: >-
      [System.ServiceModel.ServiceContract(Namespace="http://schemas.microsoft.com/netfx/2009/05/routing", SessionMode=System.ServiceModel.SessionMode.Required)]

      public interface ISimplexSessionRouter
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.ISimplexSessionRouter
  langs:
  - csharp
  name: BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "Inicjuje asynchroniczne przetwarzania komunikatu."
  syntax:
    content: public IAsyncResult BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Komunikat do przetworzenia."
    - id: callback
      type: System.AsyncCallback
      description: "Delegat asynchroniczne wywołanie zwrotne, które jest wywoływane po zakończeniu przetwarzania komunikatów."
    - id: state
      type: System.Object
      description: "Obiekt stanu użytkownika, który jest przekazywany do procedury wywołania zwrotnego."
    return:
      type: System.IAsyncResult
      description: "Wynik asynchroniczny, który może służyć do sondowania lub zaczekaj na wyników i/lub; Ta wartość jest również wymagany podczas wywoływania <xref:System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage*>.</xref:System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage*>"
  overload: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)
  id: EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.ISimplexSessionRouter
  langs:
  - csharp
  name: EndProcessMessage(IAsyncResult)
  nameWithType: ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "Kończy działanie asynchronicznego przetwarzania wiadomości."
  syntax:
    content: public void EndProcessMessage (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Wynik asynchroniczny zwrócony przez wywołanie <xref:System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage*>.</xref:System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage*>"
  overload: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.ISimplexSessionRouter
  isExternal: false
  name: BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.ISimplexSessionRouter
  isExternal: false
  name: EndProcessMessage(IAsyncResult)
  nameWithType: ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
- uid: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage*
  parent: System.ServiceModel.Routing.ISimplexSessionRouter
  isExternal: false
  name: BeginProcessMessage
  nameWithType: ISimplexSessionRouter.BeginProcessMessage
- uid: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage*
  parent: System.ServiceModel.Routing.ISimplexSessionRouter
  isExternal: false
  name: EndProcessMessage
  nameWithType: ISimplexSessionRouter.EndProcessMessage
