### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  id: ManagedToNativeComInteropStubAttribute
  children:
  - System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)
  - System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType
  - System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName
  langs:
  - csharp
  name: ManagedToNativeComInteropStubAttribute
  nameWithType: ManagedToNativeComInteropStubAttribute
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  type: Class
  summary: "Zapewnia obsługę użytkownika dostosowywania międzyoperacyjnego klas zastępczych w scenariuszach, zarządzane przez COM interop."
  remarks: "Ten atrybut umożliwia międzyoperacyjnego deweloperów, którzy mają wiedzą na temat organizowanie i przebiega międzyoperacyjnego wywołań, wykonaj następujące czynności:-korzystać z dostosowanego międzyoperacyjnego klas zastępczych w czasie kompilacji zamiast w czasie wykonywania.      -Debug dostosowane międzyoperacyjnego klas zastępczych.      — Podać kierowania możliwości w ramach klasy zastępczej, który nie wymaga środowiska uruchomieniowego.      — Podać możliwości wysyłania — metoda specyficzne dla użytkownika.       Należy zastosować atrybut dla metody interfejsu do określania odpowiedniej metody klasy zastępczej dla międzyoperacyjności z modelem COM zarządzane przez macierzystego.       Jeśli ten atrybut w czasie wykonywania, środowisko uruchomieniowe języka wspólnego nie generuje dynamicznie stub międzyoperacyjnego. Zamiast tego wywołuje stub niestandardowych, który został utworzony podczas kompilacji.       Atrybut atrybucie ManagedToNativeComInteropStubAttribute ma następujące parametry:-atrybut może być używany tylko metody z interfejsów, które są oznaczone jako `[ComImport]`. Jeśli atrybut jest stosowany do typów innych niż interfejsu, jest ignorowany w czasie wykonywania.      — Atrybut może być użyte tylko raz w tej samej metody w interfejsie. Jeśli jest używany więcej niż jeden raz, kompilator generuje błąd zduplikowany atrybut.      -Atrybut nie jest dziedziczone z interfejs podstawowy. Interfejsy pochodnej jawnie przypisać atrybutu.      -Zestaw zawierający metody oparte na atrybutach musi także zawierać dostosowane stub.       Stub przeciążonej metody są prawidłowe. Mimo że można określić tylko typ i nazwę metody zastępczej, środowisko uruchomieniowe wykryje odpowiedniego stub. Dzieje się tak, sprawdzając wszystkie argumenty dla metody interfejsu i zostanie wykonana pełna podpisu dopasowania za pomocą jawnego `this` wskaźnika.       Możliwe jest również wiele metod w interfejsie na współużytkowanie tej samej metody klasy zastępczej; jednak należy zachować ostrożność podczas używania udostępnionego klas zastępczych.      > [!NOTE] > Szkieletu metody muszą być statyczne.       Może poinformować środowiska uruchomieniowego do użycia podczas kompilacji zamiast w czasie wykonywania w następującym kodem C# dostosowane stub międzyoperacyjnego: ```   [ComImport]   interface IMyInterface   {       [ManagedToNativeComInteropStubAttribute(typeof(TestStubClass),                 &quot;ForwardTestStub&quot;)]       void GetString (string arg);   }   ``` można następnie użyć poniższego kodu, aby zadeklarować odpowiedniej metody klasy zastępczej:```   class TestStubClass   {       internal static void ForwardTestStub(IMyInterface thisObject,                string arg) {…}   }   ```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ManagedToNativeComInteropStubAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  langs:
  - csharp
  name: ManagedToNativeComInteropStubAttribute(Type,String)
  nameWithType: ManagedToNativeComInteropStubAttribute.ManagedToNativeComInteropStubAttribute(Type,String)
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ManagedToNativeComInteropStubAttribute(Type,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute&quot;> </xref> klasy o nazwie typu i metody określonej klasy."
  syntax:
    content: public ManagedToNativeComInteropStubAttribute (Type classType, string methodName);
    parameters:
    - id: classType
      type: System.Type
      description: "Klasa, która zawiera metody zastępczej wymagane."
    - id: methodName
      type: System.String
      description: "Nazwa metody zastępczej."
  overload: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>methodName</code>Nie można odnaleźć.       - lub - metoda nie jest statyczny lub inny niż ogólny.       - lub - liście parametrów metody nie jest zgodna z listą oczekiwanego parametru dla elementu zastępczego."
  - type: System.MethodAccessException
    commentId: T:System.MethodAccessException
    description: "Interfejs, który zawiera zarządzanego metodę międzyoperacyjnego nie ma dostępu do metoda zastępcza, ponieważ metoda zastępcza ma prywatne lub chronione ułatwień dostępu lub ze względu na problem z zabezpieczeniami."
  platform:
  - net462
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType
  id: ClassType
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  langs:
  - csharp
  name: ClassType
  nameWithType: ManagedToNativeComInteropStubAttribute.ClassType
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Pobiera klasę, która zawiera metody zastępczej wymagane."
  syntax:
    content: public Type ClassType { get; }
    return:
      type: System.Type
      description: "Klasa, która zawiera dostosowany stub międzyoperacyjnego."
  overload: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName
  id: MethodName
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  langs:
  - csharp
  name: MethodName
  nameWithType: ManagedToNativeComInteropStubAttribute.MethodName
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Pobiera nazwę metody zastępczej."
  syntax:
    content: public string MethodName { get; }
    return:
      type: System.String
      description: "Nazwa dostosowanego stub międzyoperacyjnego."
  overload: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.MethodAccessException
  isExternal: true
  name: System.MethodAccessException
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor(System.Type,System.String)
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  isExternal: false
  name: ManagedToNativeComInteropStubAttribute(Type,String)
  nameWithType: ManagedToNativeComInteropStubAttribute.ManagedToNativeComInteropStubAttribute(Type,String)
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ManagedToNativeComInteropStubAttribute(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  isExternal: false
  name: ClassType
  nameWithType: ManagedToNativeComInteropStubAttribute.ClassType
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  isExternal: false
  name: MethodName
  nameWithType: ManagedToNativeComInteropStubAttribute.MethodName
  fullName: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.#ctor*
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  isExternal: false
  name: ManagedToNativeComInteropStubAttribute
  nameWithType: ManagedToNativeComInteropStubAttribute.ManagedToNativeComInteropStubAttribute
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.ClassType*
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  isExternal: false
  name: ClassType
  nameWithType: ManagedToNativeComInteropStubAttribute.ClassType
- uid: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute.MethodName*
  parent: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  isExternal: false
  name: MethodName
  nameWithType: ManagedToNativeComInteropStubAttribute.MethodName
