### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.UrlParameterReader
  id: UrlParameterReader
  children:
  - System.Web.Services.Protocols.UrlParameterReader.#ctor
  - System.Web.Services.Protocols.UrlParameterReader.Read(System.Web.HttpRequest)
  langs:
  - csharp
  name: UrlParameterReader
  nameWithType: UrlParameterReader
  fullName: System.Web.Services.Protocols.UrlParameterReader
  type: Class
  summary: "Odczytuje przychodzące parametry żądania implementowane przy użyciu protokołu HTTP z pary nazwa wartość zakodowane w adresie URL, ciąg zapytania, a nie jako wiadomości protokołu SOAP usług sieci Web."
  remarks: "UrlParameterReader i inne klasy w <xref:System.Web.Services.Protocols>przestrzeń nazw obsługuje programu .NET Framework implementacje usług sieci Web za pomocą operacji HTTP GET i POST protokołu HTTP.</xref:System.Web.Services.Protocols> Moduły zapisujące usługi sieci Web i czytników serializacji i deserializacji odpowiednio między parametrów lub zwracanych obiektów metody sieci Web i strumieni żądania lub odpowiedzi HTTP. Moduły zapisujące usługi sieci Web i czytników za pomocą protokołu HTTP dla transportu, ale nie wymiany wiadomości przy użyciu standardowego protokołu SOAP.       Klasa UrlParameterReader udostępnia metodę po stronie usługi <xref:System.Web.Services.Protocols.UrlParameterReader.Read%2A>, aby odczytać pary nazwa/wartość parametru, które są zakodowane w HTTP żądania adresy URL, ciąg zapytania.</xref:System.Web.Services.Protocols.UrlParameterReader.Read%2A> Na przykład w adresie URL `http://contoso.com?a=1&b=2`, `a` i `b` są nazwy parametrów i `1` i `2` są ich wartości.       Zwykle nie należy używać UrlParameterReader bezpośrednio. Usługi sieci Web HTTP GET jest włączone, gdy plik konfiguracji ASP.NET tego (Web.config) `protocols` element zawiera `add` elementu, którego atrybut nazwy wartości jest &quot;`HttpGet`&quot;. Klasa UrlParameterReader automatycznie jest używana, gdy jest włączona usługa sieci Web HTTP GET i odebraniu odpowiednie żądania HTTP."
  syntax:
    content: 'public class UrlParameterReader : System.Web.Services.Protocols.ValueCollectionParameterReader'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.MimeFormatter
  - System.Web.Services.Protocols.MimeParameterReader
  - System.Web.Services.Protocols.ValueCollectionParameterReader
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize(System.Object)
  - System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Reflection.ParameterInfo)
  - System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.ValueCollectionParameterReader.Read(System.Collections.Specialized.NameValueCollection)
  platform:
  - net462
- uid: System.Web.Services.Protocols.UrlParameterReader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.UrlParameterReader
  langs:
  - csharp
  name: UrlParameterReader()
  nameWithType: UrlParameterReader.UrlParameterReader()
  fullName: System.Web.Services.Protocols.UrlParameterReader.UrlParameterReader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Services.Protocols.UrlParameterReader&quot;> </xref> klasy."
  syntax:
    content: public UrlParameterReader ();
    parameters: []
  overload: System.Web.Services.Protocols.UrlParameterReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.UrlParameterReader.Read(System.Web.HttpRequest)
  id: Read(System.Web.HttpRequest)
  parent: System.Web.Services.Protocols.UrlParameterReader
  langs:
  - csharp
  name: Read(HttpRequest)
  nameWithType: UrlParameterReader.Read(HttpRequest)
  fullName: System.Web.Services.Protocols.UrlParameterReader.Read(HttpRequest)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Odczytuje pary nazwa/wartość kodowane w ciągu zapytania żądania HTTP do wartości parametrów metody sieci Web."
  remarks: "Zawartość korzysta z metody Read <xref:System.Web.HttpRequest>obiektu <xref:System.Web.HttpRequest.QueryString%2A>Właściwości.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpRequest>"
  syntax:
    content: public override object[] Read (System.Web.HttpRequest request);
    parameters:
    - id: request
      type: System.Web.HttpRequest
      description: "A <xref:System.Net.WebResponse>pary nazwa/wartość zakodowane w adresie URL HTML objectcontaining.</xref:System.Net.WebResponse>"
    return:
      type: System.Object[]
      description: "Tablica par nazwa/wartość."
  overload: System.Web.Services.Protocols.UrlParameterReader.Read*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.ValueCollectionParameterReader
  isExternal: false
  name: System.Web.Services.Protocols.ValueCollectionParameterReader
- uid: System.Web.Services.Protocols.UrlParameterReader.#ctor
  parent: System.Web.Services.Protocols.UrlParameterReader
  isExternal: false
  name: UrlParameterReader()
  nameWithType: UrlParameterReader.UrlParameterReader()
  fullName: System.Web.Services.Protocols.UrlParameterReader.UrlParameterReader()
- uid: System.Web.Services.Protocols.UrlParameterReader.Read(System.Web.HttpRequest)
  parent: System.Web.Services.Protocols.UrlParameterReader
  isExternal: false
  name: Read(HttpRequest)
  nameWithType: UrlParameterReader.Read(HttpRequest)
  fullName: System.Web.Services.Protocols.UrlParameterReader.Read(HttpRequest)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.Services.Protocols.UrlParameterReader.#ctor*
  parent: System.Web.Services.Protocols.UrlParameterReader
  isExternal: false
  name: UrlParameterReader
  nameWithType: UrlParameterReader.UrlParameterReader
- uid: System.Web.Services.Protocols.UrlParameterReader.Read*
  parent: System.Web.Services.Protocols.UrlParameterReader
  isExternal: false
  name: Read
  nameWithType: UrlParameterReader.Read
