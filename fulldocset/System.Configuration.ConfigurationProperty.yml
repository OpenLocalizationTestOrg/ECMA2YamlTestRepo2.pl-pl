### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationProperty
  id: ConfigurationProperty
  children:
  - System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)
  - System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)
  - System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)
  - System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)
  - System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)
  - System.Configuration.ConfigurationProperty.Converter
  - System.Configuration.ConfigurationProperty.DefaultValue
  - System.Configuration.ConfigurationProperty.Description
  - System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired
  - System.Configuration.ConfigurationProperty.IsDefaultCollection
  - System.Configuration.ConfigurationProperty.IsKey
  - System.Configuration.ConfigurationProperty.IsRequired
  - System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired
  - System.Configuration.ConfigurationProperty.IsVersionCheckRequired
  - System.Configuration.ConfigurationProperty.Name
  - System.Configuration.ConfigurationProperty.Type
  - System.Configuration.ConfigurationProperty.Validator
  langs:
  - csharp
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty
  fullName: System.Configuration.ConfigurationProperty
  type: Class
  summary: "Reprezentuje atrybut lub element podrzędny element konfiguracji. Ta klasa nie może być dziedziczona."
  remarks: "W przypadku prostego <xref:System.Configuration.ConfigurationElement>, takich jak `CustomSection` pokazano w następnym przykładzie, obiektów klasy ConfigurationProperty reprezentuje atrybuty takie jak `fileName`.</xref:System.Configuration.ConfigurationElement>       W przypadku bardziej złożonych elementów konfiguracji, takich jak sekcję zawierającą podsekcje, na przykład `authentication`, obiekty ConfigurationProperty może reprezentować <xref:System.Configuration.ConfigurationElement>obiektów oraz atrybutów.</xref:System.Configuration.ConfigurationElement>       <xref:System.Configuration.ConfigurationPropertyCollection>Klasa reprezentuje kolekcję obiektów klasy ConfigurationProperty, które mogą być albo atrybuty lub <xref:System.Configuration.ConfigurationElement>obiektów elementu konfiguracji.</xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ConfigurationPropertyCollection>       Klasy ConfigurationProperty reprezentuje ustawienia konfiguracji poszczególnych. Ta klasa umożliwia pobrać lub ustawić nazwę, typ i wartość domyślną dla obiektu określoną konfigurację (atrybutu lub elementu) i określ, czy ten atrybut jest wymagany, jest kluczem elementu czy reprezentuje kolekcję element domyślny."
  example:
  - "1.  The following code example shows how to use the ConfigurationProperty when you create a custom section.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#1](~/add/codesnippet/visualbasic/t-system.configuration.c_18_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#1](~/add/codesnippet/csharp/t-system.configuration.c_18_1.cs)]  \n  \n The following is an excerpt of the configuration file used by the code in the previous example.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows how to create the previous section in code.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#30](~/add/codesnippet/visualbasic/t-system.configuration.c_18_3.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#30](~/add/codesnippet/csharp/t-system.configuration.c_18_3.cs)]"
  syntax:
    content: public sealed class ConfigurationProperty
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: ConfigurationProperty(String,Type)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> klasy."
  syntax:
    content: public ConfigurationProperty (string name, Type type);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa jednostki konfiguracji."
    - id: type
      type: System.Type
      description: "Typ jednostki konfiguracji."
  overload: System.Configuration.ConfigurationProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)
  id: '#ctor(System.String,System.Type,System.Object)'
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: ConfigurationProperty(String,Type,Object)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> klasy."
  remarks: "Podczas tworzenia wystąpienia <xref:System.Configuration.ConfigurationProperty>przy użyciu tego konstruktora <xref:System.Configuration.ConfigurationProperty.IsRequired%2A>i <xref:System.Configuration.ConfigurationProperty.IsKey%2A>Właściwości są ustawione na `false`.</xref:System.Configuration.ConfigurationProperty.IsKey%2A> </xref:System.Configuration.ConfigurationProperty.IsRequired%2A> </xref:System.Configuration.ConfigurationProperty> Ponadto wystąpienia wprowadzone w tym konstruktorze nie będzie działać jako właściwości klucza kolekcji domyślnej."
  example:
  - "The following code example shows how to use the ConfigurationProperty constructor to instantiate a configuration-property object.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#2](~/add/codesnippet/visualbasic/ad22ccbe-6482-48fd-9ae7-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#2](~/add/codesnippet/csharp/ad22ccbe-6482-48fd-9ae7-_1.cs)]"
  syntax:
    content: public ConfigurationProperty (string name, Type type, object defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa jednostki konfiguracji."
    - id: type
      type: System.Type
      description: "Typ jednostki konfiguracji."
    - id: defaultValue
      type: System.Object
      description: "Wartość domyślna jednostki konfiguracji."
  overload: System.Configuration.ConfigurationProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)
  id: '#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)'
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: ConfigurationProperty(String,Type,Object,ConfigurationPropertyOptions)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object,ConfigurationPropertyOptions)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object,ConfigurationPropertyOptions)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> klasy."
  remarks: ''
  example:
  - "The following code example shows how to use ConfigurationProperty constructor to instantiate a configuration-property object.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#3](~/add/codesnippet/visualbasic/a0692de7-6e52-4b5f-8022-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#3](~/add/codesnippet/csharp/a0692de7-6e52-4b5f-8022-_1.cs)]"
  syntax:
    content: public ConfigurationProperty (string name, Type type, object defaultValue, System.Configuration.ConfigurationPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa jednostki konfiguracji."
    - id: type
      type: System.Type
      description: "Typ jednostki konfiguracji."
    - id: defaultValue
      type: System.Object
      description: "Wartość domyślna jednostki konfiguracji."
    - id: options
      type: System.Configuration.ConfigurationPropertyOptions
      description: "Jeden z <xref href=&quot;System.Configuration.ConfigurationPropertyOptions&quot;> </xref> wartości wyliczenia."
  overload: System.Configuration.ConfigurationProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)
  id: '#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)'
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> klasy."
  remarks: ''
  example:
  - "The following code example shows the kind of parameters to use when calling the ConfigurationProperty constructor.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#4](~/add/codesnippet/visualbasic/de7073e5-8450-4110-b4ea-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#4](~/add/codesnippet/csharp/de7073e5-8450-4110-b4ea-_1.cs)]"
  syntax:
    content: public ConfigurationProperty (string name, Type type, object defaultValue, System.ComponentModel.TypeConverter typeConverter, System.Configuration.ConfigurationValidatorBase validator, System.Configuration.ConfigurationPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa jednostki konfiguracji."
    - id: type
      type: System.Type
      description: "Typ jednostki konfiguracji."
    - id: defaultValue
      type: System.Object
      description: "Wartość domyślna jednostki konfiguracji."
    - id: typeConverter
      type: System.ComponentModel.TypeConverter
      description: "Typ konwertera do zastosowania."
    - id: validator
      type: System.Configuration.ConfigurationValidatorBase
      description: "Moduł weryfikacji do użycia."
    - id: options
      type: System.Configuration.ConfigurationPropertyOptions
      description: "Jeden z <xref href=&quot;System.Configuration.ConfigurationPropertyOptions&quot;> </xref> wartości wyliczenia."
  overload: System.Configuration.ConfigurationProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)
  id: '#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)'
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions,String)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions,String)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions,String)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> klasy."
  remarks: ''
  example:
  - "The following code example shows how to use the ConfigurationProperty constructor to instantiate a configuration-property object.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#4](~/add/codesnippet/visualbasic/bcd69442-9320-41b3-8024-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#4](~/add/codesnippet/csharp/bcd69442-9320-41b3-8024-_1.cs)]"
  syntax:
    content: public ConfigurationProperty (string name, Type type, object defaultValue, System.ComponentModel.TypeConverter typeConverter, System.Configuration.ConfigurationValidatorBase validator, System.Configuration.ConfigurationPropertyOptions options, string description);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa jednostki konfiguracji."
    - id: type
      type: System.Type
      description: "Typ jednostki konfiguracji."
    - id: defaultValue
      type: System.Object
      description: "Wartość domyślna jednostki konfiguracji."
    - id: typeConverter
      type: System.ComponentModel.TypeConverter
      description: "Typ konwertera do zastosowania."
    - id: validator
      type: System.Configuration.ConfigurationValidatorBase
      description: "Moduł weryfikacji do użycia."
    - id: options
      type: System.Configuration.ConfigurationPropertyOptions
      description: "Jeden z <xref href=&quot;System.Configuration.ConfigurationPropertyOptions&quot;> </xref> wartości wyliczenia."
    - id: description
      type: System.String
      description: "Opis jednostki konfiguracji."
  overload: System.Configuration.ConfigurationProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.Converter
  id: Converter
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: Converter
  nameWithType: ConfigurationProperty.Converter
  fullName: System.Configuration.ConfigurationProperty.Converter
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> służący do konwertowania to <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> w reprezentacji XML do zapisywania w pliku konfiguracji."
  remarks: ''
  example:
  - "The following code example shows how to use the Converter property to get the <xref:System.ComponentModel.TypeConverter> for a specified configuration-property object.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#5](~/add/codesnippet/visualbasic/p-system.configuration.c_43_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#5](~/add/codesnippet/csharp/p-system.configuration.c_43_1.cs)]"
  syntax:
    content: public System.ComponentModel.TypeConverter Converter { get; }
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> służący do konwertowania to <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> w reprezentacji XML do zapisywania w pliku konfiguracji."
  overload: System.Configuration.ConfigurationProperty.Converter*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "To <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> nie może zostać przekonwertowany."
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.DefaultValue
  id: DefaultValue
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ConfigurationProperty.DefaultValue
  fullName: System.Configuration.ConfigurationProperty.DefaultValue
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera wartość domyślną dla tego <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> właściwości."
  remarks: "Wartość domyślna nowej <xref:System.Configuration.ConfigurationProperty>obiekt został przekazany do jego konstruktora.</xref:System.Configuration.ConfigurationProperty> Ten sam obiekt zostaną zwrócone przez właściwość DefaultValue."
  example:
  - "The following code example shows how to get the DefaultValue for a specified property.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#6](~/add/codesnippet/visualbasic/p-system.configuration.c_24_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#6](~/add/codesnippet/csharp/p-system.configuration.c_24_1.cs)]"
  syntax:
    content: public object DefaultValue { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>Mogą być rzutowane na typ określony przez <xref:System.Configuration.ConfigurationProperty.Type*>Właściwości.</xref:System.Configuration.ConfigurationProperty.Type*> </xref:System.Object>"
  overload: System.Configuration.ConfigurationProperty.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.Description
  id: Description
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: Description
  nameWithType: ConfigurationProperty.Description
  fullName: System.Configuration.ConfigurationProperty.Description
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera opis, skojarzone z <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example shows how to get the Description for a specified property.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#11](~/add/codesnippet/visualbasic/p-system.configuration.c_32_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#11](~/add/codesnippet/csharp/p-system.configuration.c_32_1.cs)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> wartość, która zawiera opis właściwości."
  overload: System.Configuration.ConfigurationProperty.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired
  id: IsAssemblyStringTransformationRequired
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: IsAssemblyStringTransformationRequired
  nameWithType: ConfigurationProperty.IsAssemblyStringTransformationRequired
  fullName: System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Wskazuje, czy nazwa zestawu właściwości konfiguracji jest serializowany w starszej wersji programu, wymaga transformacji [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]."
  remarks: "Możesz użyć <xref:System.Configuration.ConfigurationPropertyOptions>Aby ustawić tę właściwość podczas wywoływania konstruktora, który zawiera <xref:System.Configuration.ConfigurationPropertyOptions>parametru.</xref:System.Configuration.ConfigurationPropertyOptions> </xref:System.Configuration.ConfigurationPropertyOptions> Ta wartość jest ignorowana, jeśli właściwość nie zawiera ciąg nazwy zestawu."
  syntax:
    content: public bool IsAssemblyStringTransformationRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli właściwość wymaga transformacji nazwy zestawu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.IsDefaultCollection
  id: IsDefaultCollection
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: IsDefaultCollection
  nameWithType: ConfigurationProperty.IsDefaultCollection
  fullName: System.Configuration.ConfigurationProperty.IsDefaultCollection
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera wartość wskazującą, czy właściwość jest domyślnej kolekcji elementu."
  remarks: "Ta wartość jest ignorowana, jeśli właściwość nie jest kolekcją."
  syntax:
    content: public bool IsDefaultCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli właściwość jest domyślnej kolekcji elementu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationProperty.IsDefaultCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.IsKey
  id: IsKey
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: IsKey
  nameWithType: ConfigurationProperty.IsKey
  fullName: System.Configuration.ConfigurationProperty.IsKey
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera wartość wskazującą czy to <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> jest kluczem dla zawierający <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> obiektu."
  remarks: "Możesz zdefiniować nowe <xref:System.Configuration.ConfigurationProperty>obiektu jako klucza dla elementu zawierającego podczas implementowania <xref:System.Configuration.ConfigurationElement>elementu.</xref:System.Configuration.ConfigurationElement> </xref:System.Configuration.ConfigurationProperty> Jeśli ta flaga nie jest używany, zwróci właściwością IsKey `false`."
  example:
  - "The following code example shows how to get the IsKey property for a specified property.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#7](~/add/codesnippet/visualbasic/p-system.configuration.c_30_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#7](~/add/codesnippet/csharp/p-system.configuration.c_30_1.cs)]"
  syntax:
    content: public bool IsKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> obiektu jest kluczem dla elementu zawierającego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationProperty.IsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.IsRequired
  id: IsRequired
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: IsRequired
  nameWithType: ConfigurationProperty.IsRequired
  fullName: System.Configuration.ConfigurationProperty.IsRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera wartość wskazującą czy to <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> jest wymagana."
  remarks: ''
  example:
  - "The following code example shows how to get the IsRequired property value for a specified configuration-property object.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#8](~/add/codesnippet/visualbasic/p-system.configuration.c_14_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#8](~/add/codesnippet/csharp/p-system.configuration.c_14_1.cs)]"
  syntax:
    content: public bool IsRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> jest wymagane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationProperty.IsRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired
  id: IsTypeStringTransformationRequired
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: IsTypeStringTransformationRequired
  nameWithType: ConfigurationProperty.IsTypeStringTransformationRequired
  fullName: System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Wskazuje, czy nazwa typu dla właściwości konfiguracji jest serializowany w starszej wersji programu, wymaga transformacji [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]."
  remarks: "Możesz użyć <xref:System.Configuration.ConfigurationPropertyOptions>Aby ustawić tę właściwość podczas wywoływania konstruktora, który zawiera <xref:System.Configuration.ConfigurationPropertyOptions>parametru.</xref:System.Configuration.ConfigurationPropertyOptions> </xref:System.Configuration.ConfigurationPropertyOptions> Ta wartość jest ignorowana, jeśli właściwość nie zawiera ciąg nazwy typu."
  syntax:
    content: public bool IsTypeStringTransformationRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli właściwość wymaga nazwy typu przekształcania; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.IsVersionCheckRequired
  id: IsVersionCheckRequired
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: IsVersionCheckRequired
  nameWithType: ConfigurationProperty.IsVersionCheckRequired
  fullName: System.Configuration.ConfigurationProperty.IsVersionCheckRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Wskazuje, czy sekcja konfiguracji nadrzędnej właściwości konfiguracji jest poddawany kwerendzie w czasie serializacji, aby określić, czy właściwości konfiguracji powinny być zserializowane w formacie XML."
  remarks: "W przypadku tworzenia właściwości konfiguracji dla [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] lub nowszy, a jeśli wartość właściwości nie można serializować do pliku XML, jeśli starszych wersji platformy, należy ustawić tę właściwość na `true`.       Możesz użyć <xref:System.Configuration.ConfigurationPropertyOptions>Aby ustawić tę właściwość podczas wywoływania konstruktora, który zawiera <xref:System.Configuration.ConfigurationPropertyOptions>parametru.</xref:System.Configuration.ConfigurationPropertyOptions> </xref:System.Configuration.ConfigurationPropertyOptions>"
  syntax:
    content: public bool IsVersionCheckRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli w sekcji konfiguracji nadrzędnej powinny być odpytywane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationProperty.IsVersionCheckRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.Name
  id: Name
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: Name
  nameWithType: ConfigurationProperty.Name
  fullName: System.Configuration.ConfigurationProperty.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera nazwę tego <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref>."
  remarks: "Jeśli wystąpienie <xref:System.Configuration.ConfigurationProperty>jest domyślnej kolekcji, jego nazwa zostanie automatycznie zdefiniowania być pustym ciągiem.</xref:System.Configuration.ConfigurationProperty>"
  example:
  - "The following code example shows how to get the Name for a specified property.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#9](~/add/codesnippet/visualbasic/p-system.configuration.c_21_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#9](~/add/codesnippet/csharp/p-system.configuration.c_21_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Nazwa <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref>."
  overload: System.Configuration.ConfigurationProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.Type
  id: Type
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: Type
  nameWithType: ConfigurationProperty.Type
  fullName: System.Configuration.ConfigurationProperty.Type
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera typ tego elementu <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> obiektu."
  remarks: "Użyj `Type` ustalenie, w pełni kwalifikowana nazwa przestrzeni nazw i klasy dla tego wystąpienia pochodne <xref:System.Configuration.ConfigurationProperty>.</xref:System.Configuration.ConfigurationProperty>"
  example:
  - "The following example shows how to get the Type property value for a specified configuration-property object.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#10](~/add/codesnippet/visualbasic/p-system.configuration.c_50_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#10](~/add/codesnippet/csharp/p-system.configuration.c_50_1.cs)]"
  syntax:
    content: public Type Type { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>reprezentujący typ tego elementu <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> obiektu.</xref:System.Type>"
  overload: System.Configuration.ConfigurationProperty.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.Validator
  id: Validator
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: Validator
  nameWithType: ConfigurationProperty.Validator
  fullName: System.Configuration.ConfigurationProperty.Validator
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera <xref href=&quot;System.Configuration.ConfigurationValidatorAttribute&quot;> </xref>, używany do sprawdzania poprawności to <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> obiektu."
  remarks: ''
  example:
  - "The following code example shows how to get the Validator for a specified property.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#12](~/add/codesnippet/visualbasic/p-system.configuration.c_49_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#12](~/add/codesnippet/csharp/p-system.configuration.c_49_1.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationValidatorBase Validator { get; }
    return:
      type: System.Configuration.ConfigurationValidatorBase
      description: "<xref href=&quot;System.Configuration.ConfigurationValidatorBase&quot;> </xref> Modułu sprawdzania poprawności, który jest używany do sprawdzania poprawności to <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref>."
  overload: System.Configuration.ConfigurationProperty.Validator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty(String,Type)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty(String,Type,Object)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object)
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty(String,Type,Object,ConfigurationPropertyOptions)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object,ConfigurationPropertyOptions)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object,ConfigurationPropertyOptions)
- uid: System.Configuration.ConfigurationPropertyOptions
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyOptions
  nameWithType: ConfigurationPropertyOptions
  fullName: System.Configuration.ConfigurationPropertyOptions
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions)
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.Configuration.ConfigurationValidatorBase
  parent: System.Configuration
  isExternal: false
  name: ConfigurationValidatorBase
  nameWithType: ConfigurationValidatorBase
  fullName: System.Configuration.ConfigurationValidatorBase
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions,String)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions,String)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions,String)
- uid: System.Configuration.ConfigurationProperty.Converter
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Converter
  nameWithType: ConfigurationProperty.Converter
  fullName: System.Configuration.ConfigurationProperty.Converter
- uid: System.Configuration.ConfigurationProperty.DefaultValue
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: DefaultValue
  nameWithType: ConfigurationProperty.DefaultValue
  fullName: System.Configuration.ConfigurationProperty.DefaultValue
- uid: System.Configuration.ConfigurationProperty.Description
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Description
  nameWithType: ConfigurationProperty.Description
  fullName: System.Configuration.ConfigurationProperty.Description
- uid: System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsAssemblyStringTransformationRequired
  nameWithType: ConfigurationProperty.IsAssemblyStringTransformationRequired
  fullName: System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationProperty.IsDefaultCollection
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsDefaultCollection
  nameWithType: ConfigurationProperty.IsDefaultCollection
  fullName: System.Configuration.ConfigurationProperty.IsDefaultCollection
- uid: System.Configuration.ConfigurationProperty.IsKey
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsKey
  nameWithType: ConfigurationProperty.IsKey
  fullName: System.Configuration.ConfigurationProperty.IsKey
- uid: System.Configuration.ConfigurationProperty.IsRequired
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsRequired
  nameWithType: ConfigurationProperty.IsRequired
  fullName: System.Configuration.ConfigurationProperty.IsRequired
- uid: System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsTypeStringTransformationRequired
  nameWithType: ConfigurationProperty.IsTypeStringTransformationRequired
  fullName: System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired
- uid: System.Configuration.ConfigurationProperty.IsVersionCheckRequired
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsVersionCheckRequired
  nameWithType: ConfigurationProperty.IsVersionCheckRequired
  fullName: System.Configuration.ConfigurationProperty.IsVersionCheckRequired
- uid: System.Configuration.ConfigurationProperty.Name
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Name
  nameWithType: ConfigurationProperty.Name
  fullName: System.Configuration.ConfigurationProperty.Name
- uid: System.Configuration.ConfigurationProperty.Type
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Type
  nameWithType: ConfigurationProperty.Type
  fullName: System.Configuration.ConfigurationProperty.Type
- uid: System.Configuration.ConfigurationProperty.Validator
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Validator
  nameWithType: ConfigurationProperty.Validator
  fullName: System.Configuration.ConfigurationProperty.Validator
- uid: System.Configuration.ConfigurationProperty.#ctor*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty.ConfigurationProperty
- uid: System.Configuration.ConfigurationProperty.Converter*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Converter
  nameWithType: ConfigurationProperty.Converter
- uid: System.Configuration.ConfigurationProperty.DefaultValue*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: DefaultValue
  nameWithType: ConfigurationProperty.DefaultValue
- uid: System.Configuration.ConfigurationProperty.Description*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Description
  nameWithType: ConfigurationProperty.Description
- uid: System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsAssemblyStringTransformationRequired
  nameWithType: ConfigurationProperty.IsAssemblyStringTransformationRequired
- uid: System.Configuration.ConfigurationProperty.IsDefaultCollection*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsDefaultCollection
  nameWithType: ConfigurationProperty.IsDefaultCollection
- uid: System.Configuration.ConfigurationProperty.IsKey*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsKey
  nameWithType: ConfigurationProperty.IsKey
- uid: System.Configuration.ConfigurationProperty.IsRequired*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsRequired
  nameWithType: ConfigurationProperty.IsRequired
- uid: System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsTypeStringTransformationRequired
  nameWithType: ConfigurationProperty.IsTypeStringTransformationRequired
- uid: System.Configuration.ConfigurationProperty.IsVersionCheckRequired*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsVersionCheckRequired
  nameWithType: ConfigurationProperty.IsVersionCheckRequired
- uid: System.Configuration.ConfigurationProperty.Name*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Name
  nameWithType: ConfigurationProperty.Name
- uid: System.Configuration.ConfigurationProperty.Type*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Type
  nameWithType: ConfigurationProperty.Type
- uid: System.Configuration.ConfigurationProperty.Validator*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Validator
  nameWithType: ConfigurationProperty.Validator
