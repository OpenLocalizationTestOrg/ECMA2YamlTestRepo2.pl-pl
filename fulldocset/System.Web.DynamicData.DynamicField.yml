### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicField
  id: DynamicField
  children:
  - System.Web.DynamicData.DynamicField.#ctor
  - System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  - System.Web.DynamicData.DynamicField.Column
  - System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  - System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  - System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.DynamicData.DynamicField.CreateDynamicControl
  - System.Web.DynamicData.DynamicField.CreateField
  - System.Web.DynamicData.DynamicField.DataField
  - System.Web.DynamicData.DynamicField.DataFormatString
  - System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  - System.Web.DynamicData.DynamicField.HeaderText
  - System.Web.DynamicData.DynamicField.HtmlEncode
  - System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.DynamicData.DynamicField.NullDisplayText
  - System.Web.DynamicData.DynamicField.ReadOnly
  - System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  - System.Web.DynamicData.DynamicField.SortExpression
  - System.Web.DynamicData.DynamicField.UIHint
  - System.Web.DynamicData.DynamicField.ValidateRequestMode
  - System.Web.DynamicData.DynamicField.ValidationGroup
  langs:
  - csharp
  name: DynamicField
  nameWithType: DynamicField
  fullName: System.Web.DynamicData.DynamicField
  type: Class
  summary: "Reprezentuje pole danych wyświetlanych w formancie powiązane z danymi, które korzysta z funkcji danych dynamicznych platformy ASP.NET."
  remarks: "W tym temacie:- [wprowadzenie](#introduction)      -   [składni deklaratywnej](#declarative_syntax) <a name=&quot;introduction&quot;> </a> ## DynamicField wprowadzenie klasa jest używana przez formanty powiązane z danymi, takich jak <xref:System.Web.UI.WebControls.GridView>i <xref:System.Web.UI.WebControls.DetailsView>formantów, aby wyświetlić wartość pola, która korzysta z funkcji danych dynamicznych platformy ASP.NET na niestandardowych stronach.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>             Klasa DynamicField udostępnia funkcje przypominający <xref:System.Web.UI.WebControls.BoundField>klasy.</xref:System.Web.UI.WebControls.BoundField> Jednak ponieważ obiekt DynamicField jest używany w aplikacjach dane dynamiczne, możesz można korzystać z następujących funkcji danych dynamicznych: - automatycznie renderowania kontroli dla pola przy użyciu szablonów pól na podstawie typu danych. Szablony pól można globalnie modyfikować dla całej aplikacji.      -Udostępnianie danych wbudowanych weryfikacji na podstawie schematu bazy danych. Można również dodać typy sprawdzania poprawności, dostosowując modelu danych.      -Dostosowywanie Renderowanie danych dla poszczególnych pól za pomocą atrybutów w modelu danych lub za pomocą <xref:System.Web.DynamicData.DynamicField.UIHint%2A>Właściwości.</xref:System.Web.DynamicData.DynamicField.UIHint%2A>       Obiekt DynamicField renderuje każdego pola przy użyciu `DynamicControl` formantu. Aby określić pole danych do wyświetlenia w obiekcie DynamicField, ustaw <xref:System.Web.DynamicData.DynamicField.DataField%2A>dla właściwości nazwy pola.</xref:System.Web.DynamicData.DynamicField.DataField%2A> Można zastosować niestandardowy ciąg formatowania do wartości pola przez ustawienie <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>Właściwości.</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> Domyślnie jest stosowany do wartości pola ciąg formatowania, tylko wtedy, gdy formant powiązany z danymi jest w trybie tylko do odczytu. Aby zastosować ciągu formatowania wartości wyświetlane, gdy formant powiązany z danymi jest w trybie edycji, ustaw <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>właściwości `true`.</xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> Jeśli pole ma wartość `null`, podpis niestandardowego można wyświetlić, ustawiając <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>Właściwości.</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> Obiekt DynamicField może również automatycznie przekonwertować pustego ciągu (&quot;&quot;) do pola przez ustawienie wartości do wartości null <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>właściwości `true`.</xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A>      <a name=&quot;declarative_syntax&quot;></a>## Składnia deklaratywne```   <asp:DynamicField        AccessibleHeaderText=&quot;string&quot;            ApplyFormatInEditMode=&quot;true|false&quot;         ControlStyle-BackColor=&quot;color name|#dddddd&quot;        ControlStyle-BorderColor=&quot;color name|#dddddd&quot;        ControlStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         ControlStyle-BorderWidth=&quot;size&quot;         ControlStyle-CssClass=&quot;string&quot;        ControlStyle-Font-Bold=&quot;true|false&quot;        ControlStyle-Font-Italic=&quot;true|false&quot;        ControlStyle-Font-Names=&quot;string&quot;        ControlStyle-Font-Overline=&quot;true|false&quot;         ControlStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        ControlStyle-Font-Strikeout=&quot;true|false&quot;          ControlStyle-Font-Underline=&quot;true|false&quot;          ControlStyle-ForeColor=&quot;color name|#dddddd&quot;          ControlStyle-Height=&quot;size&quot;        ControlStyle-Width=&quot;size&quot;        ConvertEmptyStringToNull=&quot;true|false&quot;         DataField=&quot;string&quot;        DataFormatString=&quot;string&quot;          FooterStyle-BackColor=&quot;color name|#dddddd&quot;        FooterStyle-BorderColor=&quot;color name|#dddddd&quot;        FooterStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         FooterStyle-BorderWidth=&quot;size&quot;         FooterStyle-CssClass=&quot;string&quot;        FooterStyle-Font-Bold=&quot;true|false&quot;        FooterStyle-Font-Italic=&quot;true|false&quot;        FooterStyle-Font-Names=&quot;string&quot;        FooterStyle-Font-Overline=&quot;true|false&quot;         FooterStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        FooterStyle-Font-Strikeout=&quot;true|false&quot;          FooterStyle-Font-Underline=&quot;true|false&quot;          FooterStyle-ForeColor=&quot;color name|#dddddd&quot;          FooterStyle-Height=&quot;size&quot;        FooterStyle-Width=&quot;size&quot;        FooterStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        FooterStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        FooterStyle-Wrap=&quot;true|false&quot;          HeaderImageUrl=&quot;uri&quot;       HeaderStyle-BackColor=&quot;color name|#dddddd&quot;        HeaderStyle-BorderColor=&quot;color name|#dddddd&quot;        HeaderStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         HeaderStyle-BorderWidth=&quot;size&quot;         HeaderStyle-CssClass=&quot;string&quot;        HeaderStyle-Font-Bold=&quot;true|false&quot;        HeaderStyle-Font-Italic=&quot;true|false&quot;        HeaderStyle-Font-Names=&quot;string&quot;        HeaderStyle-Font-Overline=&quot;true|false&quot;         HeaderStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        HeaderStyle-Font-Strikeout=&quot;true|false&quot;          HeaderStyle-Font-Underline=&quot;true|false&quot;          HeaderStyle-ForeColor=&quot;color name|#dddddd&quot;          HeaderStyle-Height=&quot;size&quot;        HeaderStyle-Width=&quot;size&quot;        HeaderStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        HeaderStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        HeaderStyle-Wrap=&quot;true|false&quot;          HeaderText=&quot;string&quot;       InsertVisible=&quot;true|false&quot;           ItemStyle-BackColor=&quot;color name|#dddddd&quot;        ItemStyle-BorderColor=&quot;color name|#dddddd&quot;        ItemStyle-BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|          Ridge|Inset|Outset&quot;         ItemStyle-BorderWidth=&quot;size&quot;         ItemStyle-CssClass=&quot;string&quot;        ItemStyle-Font-Bold=&quot;true|false&quot;        ItemStyle-Font-Italic=&quot;true|false&quot;        ItemStyle-Font-Names=&quot;string&quot;        ItemStyle-Font-Overline=&quot;true|false&quot;         ItemStyle-Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;        ItemStyle-Font-Strikeout=&quot;true|false&quot;          ItemStyle-Font-Underline=&quot;true|false&quot;          ItemStyle-ForeColor=&quot;color name|#dddddd&quot;          ItemStyle-Height=&quot;size&quot;        ItemStyle-Width=&quot;size&quot;        ItemStyle-HorizontalAlign=&quot;Center|Justify|Left|NotSet|Right&quot;        ItemStyle-VerticalAlign=&quot;Bottom|Middle|NotSet|Top&quot;        ItemStyle-Wrap=&quot;true|false&quot;          NullDisplayText=&quot;string&quot;        ReadOnly=&quot;true|false&quot;         ShowHeader=&quot;true|false&quot;         SortExpression=&quot;string&quot;        UIHint=&quot;string&quot;        ValidationGroup=&quot;string&quot;        Visible=&quot;true|false&quot;        />   <asp:DynamicField />   ```"
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField).  \n  \n The following example demonstrates how to use the DynamicField object in a <xref:System.Web.UI.WebControls.GridView> control to display and edit values from a database table.  \n  \n [!code-vb[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_1_1.aspx)]\n [!code-cs[System.Web.DynamicData.DynamicField#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_1_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      public class DynamicField : System.Web.UI.WebControls.DataControlField, System.Web.DynamicData.IFieldFormattingOptions, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements:
  - System.Web.DynamicData.IFieldFormattingOptions
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DynamicField()
  nameWithType: DynamicField.DynamicField()
  fullName: System.Web.DynamicData.DynamicField.DynamicField()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> klasy."
  remarks: "Ten konstruktor umożliwia inicjuje nowe wystąpienie <xref:System.Web.DynamicData.DynamicField>klasy.</xref:System.Web.DynamicData.DynamicField> Ten konstruktor jest często stosowany podczas dodawania pól do utworzony dynamicznie formantu powiązanego z danymi.       Dynamiczne dodawanie <xref:System.Web.DynamicData.DynamicField>obiektu do formantu powiązanego z danymi, Utwórz nową <xref:System.Web.DynamicData.DynamicField>obiekt, ustawienia swoich właściwości, a następnie dodaj go do kolekcji pól formantu powiązanego z danymi.</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.DynamicField> Na przykład, jeśli używasz <xref:System.Web.UI.WebControls.GridView>kontrolować, Dodaj <xref:System.Web.DynamicData.DynamicField>do obiektu <xref:System.Web.UI.WebControls.GridView.Columns%2A>kolekcji.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > Wprawdzie może dynamicznie dodać pól do formantu powiązanego z danymi, zdecydowanie zaleca się czy pola można statycznie zadeklarowany i pokazywane lub ukryte, odpowiednio. Statycznie deklarowanie wszystkich pól zmniejsza rozmiar stan widoku formantu nadrzędnego powiązane z danymi."
  syntax:
    content: public DynamicField ();
    parameters: []
  overload: System.Web.DynamicData.DynamicField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia wartość wskazującą, czy sformatowany string, który jest określony przez <xref:System.Web.DynamicData.DynamicField.DataFormatString*>właściwość jest stosowana wartość pola, gdy w polu danych jest w trybie edycji.</xref:System.Web.DynamicData.DynamicField.DataFormatString*>"
  remarks: "Formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.DetailsView>, i <xref:System.Web.UI.WebControls.GridView>) mają trybów wyświetlania, które umożliwiają użytkownikom do odczytu, edytować lub wstawiania rekordów.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> Domyślnie ten ciąg formatowania określony przez <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>właściwość jest stosowana do wartości pól tylko wtedy, gdy formant powiązany z danymi jest w trybie tylko do odczytu.</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> Aby zastosować ciągu formatowania wartości wyświetlane, gdy formant powiązany z danymi jest w trybie edycji, ustaw właściwość ApplyFormatInEditMode `true`.      > [!NOTE] > A <xref:System.Web.DynamicData.DynamicField>obiektu nie są automatycznie usuwane formatowania po zaktualizowaniu pole w źródle danych.</xref:System.Web.DynamicData.DynamicField> Jeśli nie chcesz formatowania wartości przechowywanej w ramach, konieczne będzie usunięcie formatowania programowo."
  syntax:
    content: public bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> stosuje formatowania w trybie edycji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.Column
  id: Column
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: Column
  nameWithType: DynamicField.Column
  fullName: System.Web.DynamicData.DynamicField.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> obiektu tego <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> obiekt jest skojarzony z."
  syntax:
    content: protected System.Web.DynamicData.MetaColumn Column { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "Kolumna meta."
  overload: System.Web.DynamicData.DynamicField.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  id: ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ConfigureDynamicControl(DynamicControl)
  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)
  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Udostępnia mechanizm do modyfikowania <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> obiekt, który został utworzony przez <xref:System.Web.DynamicData.DynamicField.InitializeCell*>metody.</xref:System.Web.DynamicData.DynamicField.InitializeCell*>"
  syntax:
    content: protected virtual void ConfigureDynamicControl (System.Web.DynamicData.DynamicControl control);
    parameters:
    - id: control
      type: System.Web.DynamicData.DynamicControl
      description: "Formant do zmodyfikowania."
  overload: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia wartość wskazującą, czy puste ciągi (&quot;&quot;) są automatycznie konwertowane do wartości null po zaktualizowaniu pole danych w źródle danych."
  remarks: "Czasami użytkownik może wprowadzić pustego ciągu dla wartości pola podczas aktualizowania i wstawiania rekordów. Właściwość ConvertEmptyStringToNull umożliwia określenie, czy wartość pustego ciągu jest automatycznie konwertowany na wartość null, po zaktualizowaniu pole danych w źródle danych.       Domyślnie <xref:System.Web.DynamicData.DynamicField>obiekt wyświetla wartości null jako puste ciągi.</xref:System.Web.DynamicData.DynamicField> Aby wyświetlić inną wartość, należy ustawić <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>Właściwości.</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>      > [!NOTE] > <xref:System.Web.UI.WebControls.Parameter>Kontrolować obiektu źródła danych, czy formant nadrzędny dla <xref:System.Web.DynamicData.DynamicField>obiekt jest powiązany z również ma właściwości o nazwie <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.Parameter> Ta właściwość działa tak samo. Upewnij się, że obie właściwości są ustawione właściwie."
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby dokonać automatycznej konwersji wartości pustego ciągu do wartości null. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: DynamicField.CopyProperties(DataControlField)
  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Kopiuje właściwości bieżącego <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> obiektu do określonego <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> obiektu."
  remarks: "Metoda CopyProperties jest metody pomocnika. Jest on używany przez <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>metodę, aby skopiować właściwości bieżącego <xref:System.Web.DynamicData.DynamicField>do obiektu <xref:System.Web.DynamicData.DynamicField>obiekt, który jest przekazywany w `newField` parametru.</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> Można skopiować właściwości bieżącego <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> do."
  overload: System.Web.DynamicData.DynamicField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl
  id: CreateDynamicControl
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CreateDynamicControl()
  nameWithType: DynamicField.CreateDynamicControl()
  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Udostępnia mechanizm dla klas, które pochodzą z <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> do przesłonięcia jak <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> tworzony jest obiekt."
  syntax:
    content: protected virtual System.Web.DynamicData.DynamicControl CreateDynamicControl ();
    parameters: []
    return:
      type: System.Web.DynamicData.DynamicControl
      description: "Nowe kontrolki dynamicznej."
  overload: System.Web.DynamicData.DynamicField.CreateDynamicControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.CreateField
  id: CreateField
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: CreateField()
  nameWithType: DynamicField.CreateField()
  fullName: System.Web.DynamicData.DynamicField.CreateField()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Tworzy i zwraca nowe wystąpienie klasy <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> klasy."
  remarks: "Metoda CreateField jest metody pomocnika. Jest on używany przez <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>metodę, aby utworzyć pustą <xref:System.Web.DynamicData.DynamicField>obiektu.</xref:System.Web.DynamicData.DynamicField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "Nowe wystąpienie klasy <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> klasy."
  overload: System.Web.DynamicData.DynamicField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.DataField
  id: DataField
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DataField
  nameWithType: DynamicField.DataField
  fullName: System.Web.DynamicData.DynamicField.DataField
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia nazwę pola danych, które można powiązać <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> do obiektu."
  remarks: "Umożliwia określenie pole danych, aby powiązać właściwość DataField <xref:System.Web.DynamicData.DynamicField>obiektu.</xref:System.Web.DynamicData.DynamicField> W polu danych może być kolumna nazwie lub dla kolumny klucza obcego, Nazwa relacji.       Domyślnie, wyświetlane jest pole określone dane, przez <xref:System.Web.DynamicData.DynamicField>przy użyciu szablonu pola, który jest skojarzony z typem danych pola.</xref:System.Web.DynamicData.DynamicField> Można zmienić szablonu pola, który jest renderowany w polu danych przez ustawienie <xref:System.Web.DynamicData.DynamicField.UIHint%2A>Właściwości.</xref:System.Web.DynamicData.DynamicField.UIHint%2A> Można również sformatować tekstu wyświetlanego przez ustawienie <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A>Właściwości.</xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> Jeśli pole ma wartość `null`, ciąg pusty (&quot;&quot;) jest domyślnie wyświetlany dla wartości. Aby określić alternatywne podpis, ustaw <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>Właściwości.</xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A>       **Uwaga** Jeśli chcesz zmienić globalnie wyświetlania i zachowanie pola danych, należy zastosować atrybutów do modelu danych zamiast to ustawienie w konkretnego wystąpienia <xref:System.Web.DynamicData.DynamicField>obiektu.</xref:System.Web.DynamicData.DynamicField> Aby uzyskać więcej informacji, zobacz [danych dynamicznych platformy ASP.NET](~/add/includes/ajax-current-ext-md.md).       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>Metoda jest wywoływana, aby wywołać zdarzenia zmiany stanu, gdy ustawiono właściwość DataField.</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       Wartość DataField właściwość jest przechowywany w widoku stanu."
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "Pole Nazwa danych <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> obiekt jest powiązany."
  overload: System.Web.DynamicData.DynamicField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.DataFormatString
  id: DataFormatString
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
  fullName: System.Web.DynamicData.DynamicField.DataFormatString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia ciąg, który określa format wyświetlania wartości pola danych."
  remarks: "Umożliwia określenie niestandardowych formatów wyświetlania wartości wyświetlanych w właściwości DataFormatString <xref:System.Web.DynamicData.DynamicField>obiektu.</xref:System.Web.DynamicData.DynamicField> Jeśli nie ustawiono właściwości DataFormatString, wartość pola jest wyświetlany bez żadnego formatowania.       Domyślnie formatowania ciągu jest zastosowane do wartości pola tylko wtedy, gdy formant powiązany z danymi, który zawiera <xref:System.Web.DynamicData.DynamicField>obiekt jest w trybie tylko do odczytu.</xref:System.Web.DynamicData.DynamicField> Aby zastosować ciąg formatowania do wartości pola w trybie edycji, ustaw <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>właściwości `true`.</xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>       Format wyświetlania, określ za pomocą właściwości DataFormatString jest specyficzna dla tego wystąpienia <xref:System.Web.DynamicData.DynamicField>klasy.</xref:System.Web.DynamicData.DynamicField> Format wyświetlania dla pola danych można zmienić w całej aplikacji, stosując <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>do modelu danych i ustawienie <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName>nazwany parametr w konstruktorze.</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> Aby uzyskać więcej informacji, zobacz [danych dynamicznych platformy ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string DataFormatString { get; set; }
    return:
      type: System.String
      description: "Ciąg formatowania, który określa format wyświetlania wartości pola danych. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że specjalne formatowanie nie jest stosowane do wartości."
  overload: System.Web.DynamicData.DynamicField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Wyodrębnianie wartości pola danych z bieżącą komórką tabeli i dodaje wartość do określonego słownika."
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Słownik, w którym będą przechowywane wartości komórek."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Komórki zawierającej tekst lub formanty <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> obiektu."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Jedna z wartości wyliczenia, które określa stan wiersza."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić wartości pola tylko do odczytu w `dictionary`; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: DynamicField.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość określonego atrybutu."
  syntax:
    content: public string GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "Klucz atrybut."
    return:
      type: System.String
      description: "Wartość atrybutu."
  overload: System.Web.DynamicData.DynamicField.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.HeaderText
  id: HeaderText
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: HeaderText
  nameWithType: DynamicField.HeaderText
  fullName: System.Web.DynamicData.DynamicField.HeaderText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia tekst, który jest wyświetlany w nagłówku formantu powiązanego z danymi, który zawiera <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> obiektu."
  remarks: "Właściwość HeaderText służy do identyfikowania pola w formancie powiązane z danymi o przyjaznej nazwie. Najbardziej typowe zastosowania właściwość HeaderText jest zapewnienie nazwy kolumn przydatne do pól danych <xref:System.Web.UI.WebControls.GridView>lub <xref:System.Web.UI.WebControls.DetailsView>kontroli.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Domyślnie właściwość HeaderText używa nazwę wyświetlaną, ustaw dla pola danych przy użyciu <xref:System.ComponentModel.DisplayNameAttribute>atrybutu.</xref:System.ComponentModel.DisplayNameAttribute> Jeśli nie ustawiono nazwy wyświetlanej, właściwość HeaderText używa wartości <xref:System.Web.DynamicData.DynamicField.DataField%2A>Właściwości.</xref:System.Web.DynamicData.DynamicField.DataField%2A>"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "Tekst, który jest wyświetlany w nagłówku kontrolki powiązania danych, który zawiera <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> obiektu."
  overload: System.Web.DynamicData.DynamicField.HeaderText*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> Obiekt znajduje się wewnątrz kontrolki powiązania danych, który nie jest powiązany z kontrolą źródła danych, który implementuje <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref> interfejsu."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
  fullName: System.Web.DynamicData.DynamicField.HtmlEncode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia wartość wskazującą, czy wartości pola danych są kodowany w formacie HTML przed są wyświetlane w <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> obiektu."
  remarks: "Właściwość HtmlEncode umożliwia określenie, czy wartości pól są kodowany w formacie HTML do ich odpowiednich ciąg oświadczenia zanim zostaną one wyświetlone.      > [!NOTE] > Wartości pola kodowanie HTML pomaga zapobiegać wyświetlaniu ataków skryptów między witrynami i złośliwej zawartości. Ta właściwość powinna być włączona, jeśli to możliwe. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartości pól są kodowany w formacie HTML, zanim zostaną one wyświetlone; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Dodaje tekst lub kontrolki do określonej komórki."
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Obiekt, który zawiera tekst lub formanty <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> obiektu."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "Jedną z wartości wyliczenia, które określa funkcja `cell` obiektu."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Jedna z wartości wyliczenia, które określa stan wiersza."
    - id: rowIndex
      type: System.Int32
      description: "Indeks wiersza, który `cell` obiekt znajduje się w."
  overload: System.Web.DynamicData.DynamicField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
  fullName: System.Web.DynamicData.DynamicField.NullDisplayText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia Podpis wyświetlany dla pola danych, wartość pola jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Czasami wartość pola jest przechowywana jako wartość null w źródle danych. Można określić niestandardowe podpis ma być wyświetlany dla pola danych, które mają wartość null przez ustawienie właściwości NullDisplayText. Jeśli ta właściwość nie jest ustawiona, wartości null pola są wyświetlane jako puste ciągi (&quot;&quot;)."
  syntax:
    content: public string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "Podpis wyświetlany dla pola danych, wartość pola jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.DynamicData.DynamicField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ReadOnly
  id: ReadOnly
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
  fullName: System.Web.DynamicData.DynamicField.ReadOnly
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera stan tylko do odczytu dynamiczne pola."
  remarks: "Jeśli właściwość tylko do odczytu jest `true`, <xref:System.Web.DynamicData.DynamicField>kontroli ładuje szablon tylko do odczytu.</xref:System.Web.DynamicData.DynamicField> Ta właściwość wymaga włączenia stan widoku."
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "Stan tylko do odczytu dynamiczne pola."
  overload: System.Web.DynamicData.DynamicField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: DynamicField.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ustawia atrybut, który jest skojarzony z <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> obiektu."
  syntax:
    content: public void SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "Nazwa atrybutu, który ma zostać ustawiona."
    - id: value
      type: System.String
      description: "Wartość atrybutu."
  overload: System.Web.DynamicData.DynamicField.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.SortExpression
  id: SortExpression
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: SortExpression
  nameWithType: DynamicField.SortExpression
  fullName: System.Web.DynamicData.DynamicField.SortExpression
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia wyrażenie sortowania, który jest używany, gdy pole danych jest używane do sortowania źródła danych przez."
  remarks: "Właściwość SortExpression próbuje użyć wartości <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName>Właściwości obiektu kolumny, z którym skojarzony jest <xref:System.Web.DynamicData.DynamicField>obiektu przez ustawienie <xref:System.Web.DynamicData.DynamicField.DataField%2A>Właściwości.</xref:System.Web.DynamicData.DynamicField.DataField%2A> </xref:System.Web.DynamicData.DynamicField> </xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=fullName>       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>Metoda jest wywoływana, aby wywołać zdarzenia zmiany stanu, gdy ustawiono właściwość SortExpression.</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       Wartość SortExpression właściwość jest przechowywany w widoku stanu."
  syntax:
    content: public override string SortExpression { get; set; }
    return:
      type: System.String
      description: "Wyrażenie sortowania, który jest używany, gdy pole danych jest używane do sortowania źródła danych przez."
  overload: System.Web.DynamicData.DynamicField.SortExpression*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> Obiekt znajduje się wewnątrz kontrolki powiązania danych, który nie jest powiązany z kontrolą źródła danych, który implementuje <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref> interfejsu."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.UIHint
  id: UIHint
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: UIHint
  nameWithType: DynamicField.UIHint
  fullName: System.Web.DynamicData.DynamicField.UIHint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia pole szablon używany do wyświetlania pól danych."
  remarks: "Właściwość UIHint umożliwia określenie pola szablon zostanie użyty do wyświetlenia interfejsu użytkownika dla pola danych. Szablony pól domyślnie są kontrolek użytkownika i ich nazwy zawierają sufiks, aby zidentyfikować szablony pola, które są używane dla operacji Edytuj i liczba operacji wstawienia. Sufiksy są odpowiednio _edytuj i _Wstaw. Po ustawieniu wartości dla właściwości UIHint należy ustawić nazwę bez sufiksy. Dynamiczne dane określi bieżący tryb pola danych i spowoduje, że szablon poprawnym polem.       Jeśli nie ustawiono właściwości UIHint, danych dynamicznych domyślnie spowoduje, że szablon pole na podstawie typu pola. Aby uzyskać więcej informacji, zobacz [funkcja szkieletów danych dynamicznych ASP.NET](~/add/includes/ajax-current-ext-md.md).       Szablon pola, określ za pomocą właściwości UIHint jest specyficzne dla tego wystąpienia <xref:System.Web.DynamicData.DynamicField>klasy.</xref:System.Web.DynamicData.DynamicField> Możesz również zmienić szablonu pola używane przez pola danych w całej aplikacji, stosując <xref:System.ComponentModel.DataAnnotations.UIHintAttribute>do modelu danych.</xref:System.ComponentModel.DataAnnotations.UIHintAttribute> Ustawienie właściwości UIHint zastępuje metadane zastosowano do modelu danych. Aby uzyskać więcej informacji na temat atrybutów metadanych, zobacz [danych dynamicznych platformy ASP.NET](~/add/includes/ajax-current-ext-md.md).       <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>Metoda jest wywoływana, aby wywołać zdarzenia zmiany stanu, gdy ustawiono właściwość UIHint.</xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A>       Wartość UIHint właściwość jest przechowywany w widoku stanu."
  syntax:
    content: public virtual string UIHint { get; set; }
    return:
      type: System.String
      description: "Nazwa pola szablon używany do wyświetlania pól danych."
  overload: System.Web.DynamicData.DynamicField.UIHint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia wartość określającą, czy formant sprawdza poprawność danych wejściowych klienta."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli formant sprawdza poprawność danych wejściowych klienta; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicField.ValidationGroup
  id: ValidationGroup
  parent: System.Web.DynamicData.DynamicField
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
  fullName: System.Web.DynamicData.DynamicField.ValidationGroup
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera <xref:System.Web.DynamicData.DynamicControl.ValidationGroup*>obiektu tego <xref href=&quot;System.Web.DynamicData.DynamicField&quot;> </xref> obiekt jest skojarzony z.</xref:System.Web.DynamicData.DynamicControl.ValidationGroup*>"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "Nazwa grupy walidacji, do której należy ten formant sprawdzania poprawności. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.DynamicData.DynamicField.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.DynamicField.#ctor
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DynamicField()
  nameWithType: DynamicField.DynamicField()
  fullName: System.Web.DynamicData.DynamicField.DynamicField()
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicField.Column
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: Column
  nameWithType: DynamicField.Column
  fullName: System.Web.DynamicData.DynamicField.Column
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConfigureDynamicControl(DynamicControl)
  nameWithType: DynamicField.ConfigureDynamicControl(DynamicControl)
  fullName: System.Web.DynamicData.DynamicField.ConfigureDynamicControl(DynamicControl)
- uid: System.Web.DynamicData.DynamicControl
  parent: System.Web.DynamicData
  isExternal: false
  name: DynamicControl
  nameWithType: DynamicControl
  fullName: System.Web.DynamicData.DynamicControl
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: DynamicField.CopyProperties(DataControlField)
  fullName: System.Web.DynamicData.DynamicField.CopyProperties(DataControlField)
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateDynamicControl()
  nameWithType: DynamicField.CreateDynamicControl()
  fullName: System.Web.DynamicData.DynamicField.CreateDynamicControl()
- uid: System.Web.DynamicData.DynamicField.CreateField
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateField()
  nameWithType: DynamicField.CreateField()
  fullName: System.Web.DynamicData.DynamicField.CreateField()
- uid: System.Web.DynamicData.DynamicField.DataField
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataField
  nameWithType: DynamicField.DataField
  fullName: System.Web.DynamicData.DynamicField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicField.DataFormatString
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
  fullName: System.Web.DynamicData.DynamicField.DataFormatString
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.DynamicData.DynamicField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.DynamicData.DynamicField.GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: GetAttribute(String)
  nameWithType: DynamicField.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicField.GetAttribute(String)
- uid: System.Web.DynamicData.DynamicField.HeaderText
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HeaderText
  nameWithType: DynamicField.HeaderText
  fullName: System.Web.DynamicData.DynamicField.HeaderText
- uid: System.Web.DynamicData.DynamicField.HtmlEncode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
  fullName: System.Web.DynamicData.DynamicField.HtmlEncode
- uid: System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.DynamicData.DynamicField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.DynamicData.DynamicField.NullDisplayText
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
  fullName: System.Web.DynamicData.DynamicField.NullDisplayText
- uid: System.Web.DynamicData.DynamicField.ReadOnly
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
  fullName: System.Web.DynamicData.DynamicField.ReadOnly
- uid: System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: DynamicField.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicField.SetAttribute(String,String)
- uid: System.Web.DynamicData.DynamicField.SortExpression
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SortExpression
  nameWithType: DynamicField.SortExpression
  fullName: System.Web.DynamicData.DynamicField.SortExpression
- uid: System.Web.DynamicData.DynamicField.UIHint
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: UIHint
  nameWithType: DynamicField.UIHint
  fullName: System.Web.DynamicData.DynamicField.UIHint
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
  fullName: System.Web.DynamicData.DynamicField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.DynamicData.DynamicField.ValidationGroup
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
  fullName: System.Web.DynamicData.DynamicField.ValidationGroup
- uid: System.Web.DynamicData.DynamicField.#ctor*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DynamicField
  nameWithType: DynamicField.DynamicField
- uid: System.Web.DynamicData.DynamicField.ApplyFormatInEditMode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicField.ApplyFormatInEditMode
- uid: System.Web.DynamicData.DynamicField.Column*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: Column
  nameWithType: DynamicField.Column
- uid: System.Web.DynamicData.DynamicField.ConfigureDynamicControl*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConfigureDynamicControl
  nameWithType: DynamicField.ConfigureDynamicControl
- uid: System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicField.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicField.CopyProperties*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CopyProperties
  nameWithType: DynamicField.CopyProperties
- uid: System.Web.DynamicData.DynamicField.CreateDynamicControl*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateDynamicControl
  nameWithType: DynamicField.CreateDynamicControl
- uid: System.Web.DynamicData.DynamicField.CreateField*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: CreateField
  nameWithType: DynamicField.CreateField
- uid: System.Web.DynamicData.DynamicField.DataField*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataField
  nameWithType: DynamicField.DataField
- uid: System.Web.DynamicData.DynamicField.DataFormatString*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicField.DataFormatString
- uid: System.Web.DynamicData.DynamicField.ExtractValuesFromCell*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: DynamicField.ExtractValuesFromCell
- uid: System.Web.DynamicData.DynamicField.GetAttribute*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: GetAttribute
  nameWithType: DynamicField.GetAttribute
- uid: System.Web.DynamicData.DynamicField.HeaderText*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HeaderText
  nameWithType: DynamicField.HeaderText
- uid: System.Web.DynamicData.DynamicField.HtmlEncode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicField.HtmlEncode
- uid: System.Web.DynamicData.DynamicField.InitializeCell*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: InitializeCell
  nameWithType: DynamicField.InitializeCell
- uid: System.Web.DynamicData.DynamicField.NullDisplayText*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicField.NullDisplayText
- uid: System.Web.DynamicData.DynamicField.ReadOnly*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ReadOnly
  nameWithType: DynamicField.ReadOnly
- uid: System.Web.DynamicData.DynamicField.SetAttribute*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SetAttribute
  nameWithType: DynamicField.SetAttribute
- uid: System.Web.DynamicData.DynamicField.SortExpression*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: SortExpression
  nameWithType: DynamicField.SortExpression
- uid: System.Web.DynamicData.DynamicField.UIHint*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: UIHint
  nameWithType: DynamicField.UIHint
- uid: System.Web.DynamicData.DynamicField.ValidateRequestMode*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: DynamicField.ValidateRequestMode
- uid: System.Web.DynamicData.DynamicField.ValidationGroup*
  parent: System.Web.DynamicData.DynamicField
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicField.ValidationGroup
