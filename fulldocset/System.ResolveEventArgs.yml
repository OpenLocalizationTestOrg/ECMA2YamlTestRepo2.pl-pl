### YamlMime:ManagedReference
items:
- uid: System.ResolveEventArgs
  id: ResolveEventArgs
  children:
  - System.ResolveEventArgs.#ctor(System.String)
  - System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)
  - System.ResolveEventArgs.Name
  - System.ResolveEventArgs.RequestingAssembly
  langs:
  - csharp
  name: ResolveEventArgs
  nameWithType: ResolveEventArgs
  fullName: System.ResolveEventArgs
  type: Class
  summary: "Udostępnia dane dla modułu ładującego zdarzenia rozwiązywania problemów, takich jak <xref href=&quot;System.AppDomain.TypeResolve&quot;> </xref>, <xref href=&quot;System.AppDomain.ResourceResolve&quot;> </xref>, <xref href=&quot;System.AppDomain.ReflectionOnlyAssemblyResolve&quot;> </xref>, i <xref href=&quot;System.AppDomain.AssemblyResolve&quot;> </xref> zdarzenia."
  remarks: "Gdy moduł ładujący nie można rozpoznać odwołania do zestawu i obsługi podano zdarzenia rozpoznawania odpowiedniego modułu ładującego, zdarzenie jest wywoływane i ResolveEventArgs informacje na temat elementu, który ma zostać rozpoznane.      - <xref:System.ResolveEventArgs.Name%2A>Właściwość zawiera nazwę elementu, który ma zostać rozpoznane.</xref:System.ResolveEventArgs.Name%2A>      — Począwszy od [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], <xref:System.ResolveEventArgs.RequestingAssembly%2A>właściwość zawiera zestaw żądany zestaw, który może zapewnić nazwanego elementu.</xref:System.ResolveEventArgs.RequestingAssembly%2A> Aby uzyskać więcej informacji, zobacz <xref:System.ResolveEventArgs.RequestingAssembly%2A>Właściwości.</xref:System.ResolveEventArgs.RequestingAssembly%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ResolveEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ResolveEventArgs.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ResolveEventArgs
  langs:
  - csharp
  name: ResolveEventArgs(String)
  nameWithType: ResolveEventArgs.ResolveEventArgs(String)
  fullName: System.ResolveEventArgs.ResolveEventArgs(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ResolveEventArgs&quot;> </xref> klasy, określając nazwę element, aby rozwiązać."
  remarks: "Ten konstruktor jest zazwyczaj wywoływana tylko przez środowisko uruchomieniowe języka wspólnego."
  syntax:
    content: public ResolveEventArgs (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa elementu w celu rozwiązania."
  overload: System.ResolveEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)
  id: '#ctor(System.String,System.Reflection.Assembly)'
  parent: System.ResolveEventArgs
  langs:
  - csharp
  name: ResolveEventArgs(String,Assembly)
  nameWithType: ResolveEventArgs.ResolveEventArgs(String,Assembly)
  fullName: System.ResolveEventArgs.ResolveEventArgs(String,Assembly)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ResolveEventArgs&quot;> </xref> klasy określające nazwę wywoływanej element, aby rozwiązać i zestawu, którego zależności jest rozwiązywany."
  syntax:
    content: public ResolveEventArgs (string name, System.Reflection.Assembly requestingAssembly);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa elementu w celu rozwiązania."
    - id: requestingAssembly
      type: System.Reflection.Assembly
      description: "Zestaw, w których zależności jest rozwiązywany."
  overload: System.ResolveEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ResolveEventArgs.Name
  id: Name
  parent: System.ResolveEventArgs
  langs:
  - csharp
  name: Name
  nameWithType: ResolveEventArgs.Name
  fullName: System.ResolveEventArgs.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera nazwę elementu do rozwiązania."
  remarks: "Aby uzyskać <xref:System.AppDomain.AssemblyResolve>zdarzeń, nazwa jest nazwą zestawu przed zastosowaniem zasad.</xref:System.AppDomain.AssemblyResolve>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Nazwa elementu do rozpoznania."
  overload: System.ResolveEventArgs.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ResolveEventArgs.RequestingAssembly
  id: RequestingAssembly
  parent: System.ResolveEventArgs
  langs:
  - csharp
  name: RequestingAssembly
  nameWithType: ResolveEventArgs.RequestingAssembly
  fullName: System.ResolveEventArgs.RequestingAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Pobiera zestaw jest rozwiązywany którego zależności."
  remarks: "Zestaw, który jest zwracany przez tę właściwość jest zestawu, który nie może rozpoznać określonego przez element <xref:System.ResolveEventArgs.Name%2A>Właściwości, ponieważ element nie istnieje w tym zestawie w jednym z jego zależności załadowany lub wszelkie zależności modułu ładującego można znaleźć przez sondowanie.</xref:System.ResolveEventArgs.Name%2A>       Na przykład, załóżmy, że bieżący używa zestawu <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName>metody można załadować zestawu A z katalogu poza ścieżki próbkowania, aby można było używać klasy urzędu certyfikacji.</xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> Załóżmy, że dodatkowe klasy urzędu certyfikacji używa klasy CB, w zestawie B i że zestaw A kompilacji odwołuje się do zestawu B, również znajdujących się poza ścieżki próbkowania. Jeśli bieżący zestaw próbuje utworzyć wystąpienia urzędu certyfikacji, moduł ładujący próbuje rozpoznać odwołania do zestawu B. Jednak ponieważ A zestaw został załadowany przy użyciu <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName>metody, moduł ładujący nie można rozpoznać zależności.</xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> Jeśli program obsługi dla <xref:System.AppDomain.AssemblyResolve?displayProperty=fullName>zdarzenie, zdarzenie jest zgłaszane, a właściwość RequestingAssembly powstałe w ten sposób <xref:System.ResolveEventArgs>obiektu zawiera zestaw A, ponieważ zestaw A jest zestaw której brakuje zależności.</xref:System.ResolveEventArgs> </xref:System.AppDomain.AssemblyResolve?displayProperty=fullName>       Semantyka właściwości RequestingAssembly różnią się, w zależności od tego, jak żądania zestaw został załadowany:-kontekście ładowania: wartości właściwości mogą być `null`. W kontekście ładowania jest niezależne kolejność ładowania i tożsamość żądania zestaw nie jest zawsze łatwy do rozpoznania. Przykład inną niż null występuje, gdy <xref:System.Type.GetType%2A?displayProperty=fullName>wywołania metody, określony typ nie jest znana żądania zestawu lub dowolny z jego zależności.</xref:System.Type.GetType%2A?displayProperty=fullName>      -Kontekst load-from: właściwość może służyć jako podpowiedź sondowania, ale program obsługi zdarzeń więcej niż jedno żądanie dla nazwy danego zestawu nie powinno być wyświetlane.      -Brak kontekstu (oznacza to, że żądania zestaw został załadowany przy użyciu <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName>metody, lub jako strumień bajtów lub w trybie mieszanym): program obsługi, można użyć właściwości RequestingAssembly do załadowania różnych implementacji tego samego zestawu na podstawie tożsamości żądającego zestawu.</xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.Assembly RequestingAssembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "Żądany element określony przez zestaw <xref:System.ResolveEventArgs.Name*>Właściwości.</xref:System.ResolveEventArgs.Name*>"
  overload: System.ResolveEventArgs.RequestingAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.ResolveEventArgs.#ctor(System.String)
  parent: System.ResolveEventArgs
  isExternal: false
  name: ResolveEventArgs(String)
  nameWithType: ResolveEventArgs.ResolveEventArgs(String)
  fullName: System.ResolveEventArgs.ResolveEventArgs(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)
  parent: System.ResolveEventArgs
  isExternal: false
  name: ResolveEventArgs(String,Assembly)
  nameWithType: ResolveEventArgs.ResolveEventArgs(String,Assembly)
  fullName: System.ResolveEventArgs.ResolveEventArgs(String,Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.ResolveEventArgs.Name
  parent: System.ResolveEventArgs
  isExternal: false
  name: Name
  nameWithType: ResolveEventArgs.Name
  fullName: System.ResolveEventArgs.Name
- uid: System.ResolveEventArgs.RequestingAssembly
  parent: System.ResolveEventArgs
  isExternal: false
  name: RequestingAssembly
  nameWithType: ResolveEventArgs.RequestingAssembly
  fullName: System.ResolveEventArgs.RequestingAssembly
- uid: System.ResolveEventArgs.#ctor*
  parent: System.ResolveEventArgs
  isExternal: false
  name: ResolveEventArgs
  nameWithType: ResolveEventArgs.ResolveEventArgs
- uid: System.ResolveEventArgs.Name*
  parent: System.ResolveEventArgs
  isExternal: false
  name: Name
  nameWithType: ResolveEventArgs.Name
- uid: System.ResolveEventArgs.RequestingAssembly*
  parent: System.ResolveEventArgs
  isExternal: false
  name: RequestingAssembly
  nameWithType: ResolveEventArgs.RequestingAssembly
