### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.TouchFrameEventArgs
  id: TouchFrameEventArgs
  children:
  - System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)
  - System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)
  - System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp
  - System.Windows.Input.TouchFrameEventArgs.Timestamp
  langs:
  - csharp
  name: TouchFrameEventArgs
  nameWithType: TouchFrameEventArgs
  fullName: System.Windows.Input.TouchFrameEventArgs
  type: Class
  summary: "Udostępnia dane dla <xref href=&quot;System.Windows.Input.Touch.FrameReported&quot;> </xref> zdarzeń."
  remarks: "<xref:System.Windows.Input.Touch.FrameReported>Zdarzeń jest uwzględniona w [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] do obsługi zgodności z Silverlight.</xref:System.Windows.Input.Touch.FrameReported> Jeśli nie masz do zapewnienia zgodności z Silverlight, użyj zdarzenia touch, takiego jak <xref:System.Windows.UIElement.TouchDown>i <xref:System.Windows.UIElement.TouchMove>na <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, lub <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement3D> </xref:System.Windows.UIElement> </xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown>       Użyj TouchFrameEventArgs, aby uzyskać <xref:System.Windows.Input.TouchPoint>wartości, które mają zastosowanie do zdarzenia touch.</xref:System.Windows.Input.TouchPoint> Z <xref:System.Windows.Input.TouchPoint>, możesz uzyskać <xref:System.Windows.Input.TouchPoint.Position%2A>dotykowego i określić, czy <xref:System.Windows.Input.TouchAction>został <xref:System.Windows.Input.TouchAction>, <xref:System.Windows.Input.TouchAction>, lub <xref:System.Windows.Input.TouchAction>akcji.</xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchPoint.Position%2A> </xref:System.Windows.Input.TouchPoint> Umożliwia również <xref:System.Windows.Input.TouchPoint>uzyskanie <xref:System.Windows.Input.TouchDevice>.</xref:System.Windows.Input.TouchDevice> </xref:System.Windows.Input.TouchPoint> Z <xref:System.Windows.Input.TouchDevice>, można określić urządzenia <xref:System.Windows.Input.TouchDevice.Id%2A>i informacje na temat elementu, który jest dotknięciu.</xref:System.Windows.Input.TouchDevice.Id%2A> </xref:System.Windows.Input.TouchDevice>"
  example:
  - "The following example handles the <xref:System.Windows.Input.Touch.FrameReported> event and accesses the touch data in the TouchFrameEventArgs. When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#110](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#110)]\n [!code-cs[TouchFrameSample#110](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#110)]"
  syntax:
    content: 'public sealed class TouchFrameEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)
  id: GetPrimaryTouchPoint(System.Windows.IInputElement)
  parent: System.Windows.Input.TouchFrameEventArgs
  langs:
  - csharp
  name: GetPrimaryTouchPoint(IInputElement)
  nameWithType: TouchFrameEventArgs.GetPrimaryTouchPoint(IInputElement)
  fullName: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Zwraca bieżący punkt touch urządzenia podstawowego touch względem określonego elementu."
  remarks: "W zestawie active urządzenia, pierwsze urządzenie będzie touch <xref:System.Windows.Input.TouchDevice.Activated>jest urządzeniem podstawowym touch.</xref:System.Windows.Input.TouchDevice.Activated> Na przykład jeśli dwoma palcami są dotknięcie ekranu, pierwszej linii papilarnych, który nie działa jest reprezentowana przez urządzenie podstawowe touch. Palca pierwszy jest unosiło, podczas gdy druga palca działa nadal, staje się na urządzeniu podstawowym touch `null`."
  example:
  - "The following code processes the touch points that are retrieved from the <xref:System.Windows.Input.TouchFrameEventArgs>. When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the <xref:System.Windows.Input.TouchDevice.Id%2A> matches the <xref:System.Windows.Input.TouchDevice.Id%2A> of the primary touch point, which indicates the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#120](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#120)]\n [!code-cs[TouchFrameSample#120](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#120)]"
  syntax:
    content: public System.Windows.Input.TouchPoint GetPrimaryTouchPoint (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "Element, który definiuje przestrzeni współrzędnych. Aby używać współrzędnych bezwzględną WPF, określ `relativeTo` jako <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Input.TouchPoint
      description: "Bieżące położenie podstawową <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> względem określonego elementu; lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli podstawowy <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref> nie jest aktywny."
  overload: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)
  id: GetTouchPoints(System.Windows.IInputElement)
  parent: System.Windows.Input.TouchFrameEventArgs
  langs:
  - csharp
  name: GetTouchPoints(IInputElement)
  nameWithType: TouchFrameEventArgs.GetTouchPoints(IInputElement)
  fullName: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Zwraca kolekcję zawierającą bieżącego punktu touch dla każdego urządzenia active touch względem określonego elementu."
  remarks: ''
  example:
  - "The following code processes the touch points retrieved from the <xref:System.Windows.Input.TouchFrameEventArgs>. When a touch is pressed on the canvas, the <xref:System.Windows.Input.TouchDevice> is captured to the canvas. When the touch is raised, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the canvas, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the <xref:System.Windows.Input.TouchDevice.Id%2A> matches the <xref:System.Windows.Input.TouchDevice.Id%2A> of the primary touch point, which indicates the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#120](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#120)]\n [!code-cs[TouchFrameSample#120](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#120)]"
  syntax:
    content: public System.Windows.Input.TouchPointCollection GetTouchPoints (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "Element, który definiuje przestrzeni współrzędnych. Aby używać współrzędnych bezwzględną WPF, określ `relativeTo` jako <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Input.TouchPointCollection
      description: "Kolekcja, która zawiera bieżącą <xref href=&quot;System.Windows.Input.TouchPoint&quot;> </xref> dla każdej aktywnej <xref href=&quot;System.Windows.Input.TouchDevice&quot;> </xref>."
  overload: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp
  id: SuspendMousePromotionUntilTouchUp
  parent: System.Windows.Input.TouchFrameEventArgs
  langs:
  - csharp
  name: SuspendMousePromotionUntilTouchUp()
  nameWithType: TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp()
  fullName: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Ten element członkowski nie jest zaimplementowana."
  remarks: "Ta metoda jest zapewnia zgodność programu Silverlight. Z powodu różnic implementacji urządzenia jego nie jest zaimplementowana w WPF."
  syntax:
    content: public void SuspendMousePromotionUntilTouchUp ();
    parameters: []
  overload: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchFrameEventArgs.Timestamp
  id: Timestamp
  parent: System.Windows.Input.TouchFrameEventArgs
  langs:
  - csharp
  name: Timestamp
  nameWithType: TouchFrameEventArgs.Timestamp
  fullName: System.Windows.Input.TouchFrameEventArgs.Timestamp
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Pobiera sygnaturę czasową dla tego zdarzenia."
  syntax:
    content: public int Timestamp { get; }
    return:
      type: System.Int32
      description: "Sygnatura czasowa dla tego zdarzenia."
  overload: System.Windows.Input.TouchFrameEventArgs.Timestamp*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: GetPrimaryTouchPoint(IInputElement)
  nameWithType: TouchFrameEventArgs.GetPrimaryTouchPoint(IInputElement)
  fullName: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(IInputElement)
- uid: System.Windows.Input.TouchPoint
  parent: System.Windows.Input
  isExternal: false
  name: TouchPoint
  nameWithType: TouchPoint
  fullName: System.Windows.Input.TouchPoint
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: GetTouchPoints(IInputElement)
  nameWithType: TouchFrameEventArgs.GetTouchPoints(IInputElement)
  fullName: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(IInputElement)
- uid: System.Windows.Input.TouchPointCollection
  parent: System.Windows.Input
  isExternal: false
  name: TouchPointCollection
  nameWithType: TouchPointCollection
  fullName: System.Windows.Input.TouchPointCollection
- uid: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: SuspendMousePromotionUntilTouchUp()
  nameWithType: TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp()
  fullName: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp()
- uid: System.Windows.Input.TouchFrameEventArgs.Timestamp
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: Timestamp
  nameWithType: TouchFrameEventArgs.Timestamp
  fullName: System.Windows.Input.TouchFrameEventArgs.Timestamp
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint*
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: GetPrimaryTouchPoint
  nameWithType: TouchFrameEventArgs.GetPrimaryTouchPoint
- uid: System.Windows.Input.TouchFrameEventArgs.GetTouchPoints*
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: GetTouchPoints
  nameWithType: TouchFrameEventArgs.GetTouchPoints
- uid: System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp*
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: SuspendMousePromotionUntilTouchUp
  nameWithType: TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp
- uid: System.Windows.Input.TouchFrameEventArgs.Timestamp*
  parent: System.Windows.Input.TouchFrameEventArgs
  isExternal: false
  name: Timestamp
  nameWithType: TouchFrameEventArgs.Timestamp
