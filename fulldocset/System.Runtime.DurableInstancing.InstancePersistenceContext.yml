### YamlMime:ManagedReference
items:
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext
  id: InstancePersistenceContext
  children:
  - System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance
  - System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  - System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  - System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  - System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  - System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  - System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  - System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  - System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  - System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  - System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  langs:
  - csharp
  name: InstancePersistenceContext
  nameWithType: InstancePersistenceContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext
  type: Class
  summary: "Reprezentuje informacje o stanie wykonywania, podczas gdy polecenia trwałości jest wykonywana."
  remarks: "Wystąpienie tej klasy jest przekazywany do metody metody TryCommand implementacji dostawcy trwałości. Klasa jest używana przez dostawców trwałości sprawdzić widok wystąpienia w pamięci, a także wskazuje wyniki operacji w zewnętrznym sklepie, co może wpływać na widoku lub innych kontekstu w pamięci."
  syntax:
    content: public sealed class InstancePersistenceContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)
  id: AssociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: AssociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.AssociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wskazuje, że dostawca trwałości pomyślnie jest skojarzony klucz do bieżącego wystąpienia w magazynie wystąpień. Identyfikator klucza jest określony jako parametr."
  remarks: "Klucz wystąpienia musi być nieskojarzone. Bieżący dojście wystąpienia musi być powiązana z wystąpienia, a także blokady w tym wystąpieniu."
  syntax:
    content: public void AssociatedInstanceKey (Guid key);
    parameters:
    - id: key
      type: System.Guid
      description: "Identyfikator klucza wystąpienia dla klucza, który został skojarzony. Nie może mieć wartości Guid.Empty."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Rozpocznij operację asynchroniczną można powiązać istniejącą blokadę wystąpienia bieżącego dojście wystąpienia. Wersja istniejącą blokadę jest przekazywana jako parametr."
  remarks: "Podczas próby uzyskania blokady, dostawca trwałości może zdecydować, czy bieżące wystąpienie jest już zablokowana w sklepie bieżącym. Jeśli token blokady pasuje do bieżącego uchwyt blokady token, dostawca trwałości można spróbować odzyskać blokady przez kontrolę wersji i przekazaniem ich do BeginBindReclaimedLock. Dostawca trwałości nie musi wprowadzać zmian do wystąpienia, dopóki blokada jest pomyślnie odzyskać. Jeśli nie inne dojścia jest powiązana z blokady, następnie BeginBindReclaimedLock, operacja zakończy się powodzeniem i bieżące dojścia staje się powiązane z blokady. W przeciwnym razie BeginBindReclaimedLock lub EndBindReclaimedLock generuje InstanceHandleConflictException. Jeśli polecenia są w toku na inne dojść, operacja nie może zakończyć się podczas oczekiwania na wyniki z tych poleceń, aby zdecydować, czy można odzyskać blokady.       Bieżący dojście wystąpienia musi być powiązana z wystąpienia i właściciel blokady. Nie można wypełniać wystąpienia. Token blokady skojarzone z właścicielem blokady służy do identyfikowania właściciela blokady.       Po blokady jest powiązany z dojściem, pozostaje powiązane dojście przez czas ich istnienia. Token blokady ani wersja wystąpienia nie może być zmieniona."
  syntax:
    content: public IAsyncResult BeginBindReclaimedLock (long instanceVersion, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "Wersja blokady przechowywać na wystąpienie, lub wartość zero, jeśli dostawca trwałości nie implementuje wersji blokady."
    - id: timeout
      type: System.TimeSpan
      description: "Limit czasu operacji asynchronicznej."
    - id: callback
      type: System.AsyncCallback
      description: "Metoda wywoływana, gdy operacja została wykonana."
    - id: state
      type: System.Object
      description: "Informacje o stanie skojarzone z operacji asynchronicznej."
    return:
      type: System.IAsyncResult
      description: "Stan operacji asynchronicznej."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Rozpoczyna asynchronicznie wykonywania polecenia trwałości."
  remarks: "Dostawca trwałości ta metoda służy do wykonywania poleceń podrzędne jako część polecenia. Podpolecenie zostanie wykonana przy użyciu BeginTryCommand, podobnie jak polecenia przekazywane do InstanceStore.BeginExecute. Polecenia mogą być zagnieżdżane, ale polecenie nie musi wykonać więcej niż jeden podpolecenie naraz."
  syntax:
    content: public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "Do wykonania polecenia trwałości."
    - id: timeout
      type: System.TimeSpan
      description: "Wartość limitu czasu dla operacji."
    - id: callback
      type: System.AsyncCallback
      description: "Delegata, który otrzymuje powiadomienie o asynchroniczną odbierania, że operacja żądania zostało ukończone."
    - id: state
      type: System.Object
      description: "Informacje o stanie."
    return:
      type: System.IAsyncResult
      description: "Stan operacji asynchronicznej."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)
  id: BindAcquiredLock(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindAcquiredLock(Int64)
  nameWithType: InstancePersistenceContext.BindAcquiredLock(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(Int64)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wiąże nowo pobranych blokady wystąpienia bieżącego dojście wystąpienia. Wersja blokady nabytych przez niego jest przekazywana jako parametr."
  remarks: "Jeśli dostawca trwałości implementuje obsługi wersji blokady, zawsze, gdy blokada jest nakładana na wystąpienie, wersja musi być zwiększana o w zewnętrznym sklepie. Wystąpienie jest zablokowane, po raz pierwszy powinna to być wersja 1. Każde przejęcie blokady unieważnia poprzedniej blokady. Bieżący dojście wystąpienia musi być powiązana z wystąpienia i właściciel blokady. Nie można wypełniać wystąpienia. Blokady skojarzone z właścicielem blokady nie jest używany do identyfikowania właściciela blokady po blokady jest powiązany z dojściem, pozostaje powiązane dojście przez czas ich istnienia. Token blokady ani wersja wystąpienia nie może być zmieniona."
  syntax:
    content: public void BindAcquiredLock (long instanceVersion);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "Wersja blokady nabyte w wystąpieniu czy zero, jeśli dostawca trwałości nie implementuje wersji blokady."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  id: BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindEvent(InstancePersistenceEvent)
  nameWithType: InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wiąże <xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref> do dojście wystąpienia."
  syntax:
    content: public void BindEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent);
    parameters:
    - id: persistenceEvent
      type: System.Runtime.DurableInstancing.InstancePersistenceEvent
      description: "<xref href=&quot;System.Runtime.DurableInstancing.InstancePersistenceEvent&quot;> </xref> Obiekt zawierający informacje o zdarzeniu."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)
  id: BindInstance(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindInstance(Guid)
  nameWithType: InstancePersistenceContext.BindInstance(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wiąże wystąpienie, którego identyfikator jest określony jako parametr do bieżącego dojście wystąpienia."
  remarks: "Gdy wystąpienie jest powiązany z dojściem, pozostaje związane dojście przez czas ich istnienia. Żadne inne wystąpienie kiedykolwiek można powiązać dojścia."
  syntax:
    content: public void BindInstance (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "Identyfikator wystąpienia. Nie może mieć wartości Guid.Empty."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)
  id: BindInstanceOwner(System.Guid,System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindInstanceOwner(Guid,Guid)
  nameWithType: InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wiąże właściciela wystąpienia bieżącego dojście wystąpienia."
  remarks: "Po właściciela wystąpienia jest powiązany z dojściem, pozostaje powiązane dojście przez czas ich istnienia. Nie właściciela wystąpienia kiedykolwiek może być powiązana z dojścia."
  syntax:
    content: public void BindInstanceOwner (Guid instanceOwnerId, Guid lockToken);
    parameters:
    - id: instanceOwnerId
      type: System.Guid
      description: "Identyfikator właściciela wystąpienia."
    - id: lockToken
      type: System.Guid
      description: "Token blokady właściciela wystąpienia. Dostawca trwałości może wybrać tę samą wartość dla identyfikatora właściciela wystąpienia i token blokady właściciela."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)
  id: BindReclaimedLock(System.Int64,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: BindReclaimedLock(Int64,TimeSpan)
  nameWithType: InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wiąże istniejącą blokadę wystąpienia bieżącego dojście wystąpienia. Wersja istniejącą blokadę jest przekazywana jako parametr."
  remarks: "Podczas próby uzyskania blokady, dostawca trwałości może zdecydować, czy bieżące wystąpienie jest już zablokowana w sklepie bieżącym. Jeśli token blokady pasuje do bieżącego uchwyt blokady token, dostawca trwałości można spróbować odzyskać blokady przez kontrolę wersji i przekazaniem ich do BindReclaimedLock. Dostawca trwałości nie musi wprowadzać zmian do wystąpienia, dopóki blokada jest pomyślnie odzyskać. Jeśli nie inne dojścia jest powiązana z blokady, BindReclaimedLock zakończy się powodzeniem, i bieżące dojścia staje się powiązana blokady. W przeciwnym razie BindReclaimedLock zgłasza InstanceHandleConflictException. Jeśli polecenia są w toku na inne dojść, BindReclaimedLock, można zablokować oczekiwanie na wyniki tych poleceń, przed podjęciem decyzji, czy można odzyskać blokady.       Bieżący dojście wystąpienia musi być powiązana z wystąpienia i właściciel blokady. Nie można wypełniać wystąpienia. Token blokady skojarzone z właścicielem blokady służy do identyfikowania właściciela blokady.       Po blokady jest powiązany z dojściem, pozostaje powiązane dojście przez czas ich istnienia. Token blokady ani wersja wystąpienia nie może być zmieniona."
  syntax:
    content: public void BindReclaimedLock (long instanceVersion, TimeSpan timeout);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "Wersja blokady przechowywać na wystąpienie, lub wartość zero, jeśli dostawca trwałości nie implementuje wersji blokady."
    - id: timeout
      type: System.TimeSpan
      description: "Wartość limitu czasu dla operacji."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance
  id: CompletedInstance
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: CompletedInstance()
  nameWithType: InstancePersistenceContext.CompletedInstance()
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance()
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wskazuje, że dostawca trwałości pomyślnie oznaczył bieżącego wystąpienia jako zakończony w magazynie wystąpień."
  remarks: "Bieżący dojście wystąpienia musi być powiązana z wystąpienia, a także blokady w tym wystąpieniu. Wystąpienie musi zostać zainicjowany i nie już zostać ukończone. (Wystąpienie jest zainicjowana Jeśli kiedykolwiek utrwaleniu zestaw danych do niego). Wszystkie klucze skojarzone z wystąpieniem muszą być wypełnione."
  syntax:
    content: public void CompletedInstance ();
    parameters: []
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)
  id: CompletedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: CompletedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.CompletedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wskazuje, że dostawca trwałości pomyślnie oznaczył klucz jako zakończony w zewnętrznym sklepie. Identyfikator klucza jest określony jako parametr."
  remarks: "Bieżący dojście wystąpienia musi być powiązana z wystąpienia, a także blokady w tym wystąpieniu. Klucz wystąpienia muszą być skojarzone z bieżącym wystąpieniem i nie już zostać ukończone."
  syntax:
    content: public void CompletedInstanceKey (Guid key);
    parameters:
    - id: key
      type: System.Guid
      description: "Identyfikator klucza wystąpienia dla klucza, który został wykonany. Nie może mieć wartości Guid.Empty."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)
  id: CreateBindReclaimedLockException(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: CreateBindReclaimedLockException(Int64)
  nameWithType: InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Tworzy wystąpienie wyjątku, który może zostać wygenerowany z metody TryCommand, aby wyzwolić BindReclaimedLock zachowanie."
  remarks: "Przykładowy kod:```      protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)   {       throw context.CreateBindReclaimedLockException(5);   }   is equivalent to   protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)   {       context.BindReclaimedLock(5, timeout);       throw new OperationCanceledException();   }      ```"
  syntax:
    content: public Exception CreateBindReclaimedLockException (long instanceVersion);
    parameters:
    - id: instanceVersion
      type: System.Int64
      description: "Wersja blokady przechowywać na wystąpienie, lub wartość zero, jeśli dostawca trwałości nie implementuje wersji blokady."
    return:
      type: System.Exception
      description: "Wystąpił wyjątek."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)
  id: EndBindReclaimedLock(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: EndBindReclaimedLock(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Kończy operację asynchroniczną uruchomione przez <xref:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*>metody.</xref:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*>"
  syntax:
    content: public void EndBindReclaimedLock (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Wynik operacji asynchronicznej."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)
  id: EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: EndExecute(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(IAsyncResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Kończy operację asynchroniczną."
  syntax:
    content: public void EndExecute (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Stan operacji asynchronicznej."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  id: Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: Execute(InstancePersistenceCommand,TimeSpan)
  nameWithType: InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wykonuje polecenia trwałości."
  remarks: "Dostawca trwałości ta metoda służy do wykonywania poleceń podrzędne jako część polecenia. Podpolecenie zostanie wykonana przy użyciu metody TryCommand, podobnie jak polecenia przekazywane do wywoływania metody InstanceStore.Execute. Polecenia mogą być zagnieżdżane, ale polecenie nie musi wykonać więcej niż jeden podpolecenie naraz."
  syntax:
    content: public void Execute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);
    parameters:
    - id: command
      type: System.Runtime.DurableInstancing.InstancePersistenceCommand
      description: "Do wykonania polecenia trwałości."
    - id: timeout
      type: System.TimeSpan
      description: "Wartość limitu czasu dla operacji."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  id: InstanceHandle
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: InstanceHandle
  nameWithType: InstancePersistenceContext.InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Pobiera bieżący dojście wystąpienia."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceHandle InstanceHandle { get; }
    return:
      type: System.Runtime.DurableInstancing.InstanceHandle
      description: "Bieżący dojście wystąpienia."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  id: InstanceVersion
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: InstanceVersion
  nameWithType: InstancePersistenceContext.InstanceVersion
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Pobiera wersję blokadzie w bieżącym wystąpieniu przez dojście do bieżącego wystąpienia."
  remarks: "Dostawca trwałości należy sprawdzić tę wartość z wersją blokady lock przechowywane w wystąpieniu w magazynie wystąpień, gdy wykonywanie operacji wymagającej blokady (na przykład trwałych danych wystąpienia) przy użyciu dojścia powiązany blokady. Jeśli nie jest zgodna z wersją blokady, polecenie powinna zakończyć się niepowodzeniem z InstanceLockLostException."
  syntax:
    content: public long InstanceVersion { get; }
    return:
      type: System.Int64
      description: "Wersja blokady wystąpienia powiązany z bieżącym dojście wystąpienia lub wartość -1 Jeśli dojście nie jest powiązany z blokadą."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  id: InstanceView
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: InstanceView
  nameWithType: InstancePersistenceContext.InstanceView
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Pobiera obiekt widoku wystąpienia, który reprezentuje stan w pamięci bieżącego wystąpienia. Ten widok odzwierciedla aktualizacji, jak zostały wprowadzone za pomocą polecenia w toku."
  syntax:
    content: public System.Runtime.DurableInstancing.InstanceView InstanceView { get; }
    return:
      type: System.Runtime.DurableInstancing.InstanceView
      description: "Widok wystąpienia obiektu."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  id: LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  nameWithType: InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wskazuje, że dostawca trwałości pomyślnie pobrał z magazynu wystąpień bieżącego wystąpienia."
  remarks: "Bieżący dojście wystąpienia musi być powiązany z wystąpieniem. Czy dojście wystąpienia jest powiązany z blokadą lub załadowanego wystąpienia jest oznaczona jako zakończona, załadowanych danych jest uznawane za zgodne ze sobą. w przeciwnym razie uważa się za wątpliwe."
  syntax:
    content: public void LoadedInstance (System.Runtime.DurableInstancing.InstanceState state, System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> instanceData, System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> instanceMetadata, System.Collections.Generic.IDictionary<Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>> associatedInstanceKeyMetadata, System.Collections.Generic.IDictionary<Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>> completedInstanceKeyMetadata);
    parameters:
    - id: state
      type: System.Runtime.DurableInstancing.InstanceState
      description: "Informacje o stanie wystąpienia."
    - id: instanceData
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "Dane wystąpienia jako słownik <xref:System.Xml.Linq.XName>i <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> obiektów.</xref:System.Xml.Linq.XName>"
    - id: instanceMetadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "Metadane wystąpienia jako kolekcja <xref:System.Xml.Linq.XName>i <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> obiektów.</xref:System.Xml.Linq.XName>"
    - id: associatedInstanceKeyMetadata
      type: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}}
      description: "Skojarzone metadane klucza wystąpienia jako słownik identyfikatora wystąpienia i wystąpienia klucza metadanych, który jest słownikiem <xref:System.Xml.Linq.XName>i <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> obiektów.</xref:System.Xml.Linq.XName>"
    - id: completedInstanceKeyMetadata
      type: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}}
      description: "Ukończono metadanych wystąpienia jako słownik identyfikatora wystąpienia i wystąpienia klucza metadanych, który jest słownikiem <xref:System.Xml.Linq.XName>i <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> obiektów.</xref:System.Xml.Linq.XName>"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  id: LockToken
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: LockToken
  nameWithType: InstancePersistenceContext.LockToken
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Pobiera token właściciela wystąpienia, powiązany z bieżącym dojście wystąpienia blokady."
  remarks: "Dostawca trwałości należy sprawdzić tę wartość przed token blokady blokady przechowywane w wystąpieniu w magazynie wystąpień, gdy wykonywanie operacji wymagającej blokady (na przykład trwałych danych wystąpienia) przy użyciu dojścia powiązany blokady. Jeśli token blokady nie odpowiada, polecenie powinna zakończyć się niepowodzeniem z InstanceLockLostException.       Dostawca trwałości należy używać tej wartości jako token blokady podczas pobierania nowych blokadę wystąpienia (na przykład przy użyciu dojścia nie jest już powiązany z blokadą trwałych danych wystąpienia). Jeśli wystąpienie jest już zablokowana w magazynie wystąpień i token blokady zgodny ten token blokady, dostawca trwałości mogą próbować odzyskać wystąpienia przy użyciu BindReclaimedLock."
  syntax:
    content: public Guid LockToken { get; }
    return:
      type: System.Guid
      description: "Token blokady powiązany z bieżącym dojście wystąpienia lub wartości GUID.Empty Jeśli dojście nie jest powiązany z właścicielem wystąpienia."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  id: PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: PersistedInstance(IDictionary<XName,InstanceValue>)
  nameWithType: InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wskazuje, że dostawca trwałości pomyślnie utrwalił zestaw danych wystąpienia w magazynie wystąpień. Skutkuje to inicjowania wystąpienia, jeśli nie był już."
  remarks: "Bieżący dojście wystąpienia musi być powiązana z wystąpienia, a także blokady w tym wystąpieniu. Każdy zestaw danych wystąpienia całkowicie zastępuje poprzedniego zestawu. Zestaw danych wystąpienia może mieć wartości null — jest to ten sam, jak pusty. Utrwalanie pusty zestaw danych wystąpienia usuwa istniejący zestaw danych wystąpienia. (Utrwalanie zestaw danych nie ma wpływu na wystąpienie metadanych.)"
  syntax:
    content: public void PersistedInstance (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> data);
    parameters:
    - id: data
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "Dane wystąpienia jako słownik <xref:System.Xml.Linq.XName>i <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> obiektów.</xref:System.Xml.Linq.XName>"
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  id: QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: QueriedInstanceStore(InstanceStoreQueryResult)
  nameWithType: InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Dodaje <xref href=&quot;System.Runtime.DurableInstancing.InstanceStoreQueryResult&quot;> </xref> przekazać jako parametru do listy <xref href=&quot;System.Runtime.DurableInstancing.InstanceStoreQueryResult&quot;> </xref> obiekty w <xref href=&quot;System.Runtime.DurableInstancing.InstanceView&quot;> </xref>."
  syntax:
    content: public void QueriedInstanceStore (System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult);
    parameters:
    - id: queryResult
      type: System.Runtime.DurableInstancing.InstanceStoreQueryResult
      description: "Wyniki zapytania względem magazynie wystąpień."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  id: ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wskazuje, że dostawca trwałości został pomyślnie odczytać niektóre wystąpienia metadanych klucza dla klucza skojarzonego z bieżącego wystąpienia w sklepie wystąpienia."
  remarks: "Bieżący dojście wystąpienia musi być powiązany z wystąpieniem. Jeśli bieżące wystąpienie jest oznaczona jako zakończona dojście wystąpienia jest powiązany z blokadą, metadanych jest uznawane za zgodne ze sobą. w przeciwnym razie uważa się za wątpliwe."
  syntax:
    content: public void ReadInstanceKeyMetadata (Guid key, System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> metadata, bool complete);
    parameters:
    - id: key
      type: System.Guid
      description: "Identyfikator klucza wystąpienia dla klucza odczytano którego metadanych. Nie może mieć wartości Guid.Empty."
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "Metadane jako słownik <xref:System.Xml.Linq.XName>i <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> obiektów.</xref:System.Xml.Linq.XName>"
    - id: complete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli metadane reprezentuje wszystkie metadane skojarzone Key wystąpienia, w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  id: ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wskazuje, że dostawca trwałości ma pomyślnie odczytać metadanych niektóre wystąpienia dla bieżącego wystąpienia w magazynie wystąpień."
  syntax:
    content: public void ReadInstanceMetadata (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> metadata, bool complete);
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "Metadane jako słownik <xref:System.Xml.Linq.XName>i <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> obiektów.</xref:System.Xml.Linq.XName>"
    - id: complete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Jeśli metadane reprezentuje wszystkie metadane skojarzone z wystąpieniem, w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  id: ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Ustawia metadane właściciela wystąpienia przy użyciu danych przekazanych w parametrze."
  remarks: "Bieżący dojście wystąpienia musi być powiązany z wystąpieniem. Jeśli bieżące wystąpienie jest oznaczona jako zakończona dojście wystąpienia jest powiązany z blokadą, metadanych jest uznawane za zgodne ze sobą. w przeciwnym razie uważa się za wątpliwe."
  syntax:
    content: public void ReadInstanceOwnerMetadata (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue> metadata, bool complete);
    parameters:
    - id: metadata
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
      description: "Słownik <xref:System.Xml.Linq.XName>i <xref href=&quot;System.Runtime.DurableInstancing.InstanceValue&quot;> </xref> obiektów.</xref:System.Xml.Linq.XName>"
    - id: complete
      type: System.Boolean
      description: "Wartość określającą czy spójności należy ustawić <xref href=&quot;System.Runtime.DurableInstancing.InstanceValueConsistency&quot;> </xref> lub <xref href=&quot;System.Runtime.DurableInstancing.InstanceValueConsistency&quot;> </xref>."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  id: SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: SetCancellationHandler(Action<InstancePersistenceContext>)
  nameWithType: InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Ustawia program obsługi anulowania można wywołać, gdy żądanie anulowania operacji."
  remarks: "Jeśli zostanie wywołany obsługi anulowania, dostawca trwałości powinien anulowanie wszystkich oczekujących operacji i zgłosić operationcanceledexception — z metody TryCommand, aby wskazać, że polecenia trwałości zostało przerwane przed ukończeniem."
  syntax:
    content: public void SetCancellationHandler (Action<System.Runtime.DurableInstancing.InstancePersistenceContext> cancellationHandler);
    parameters:
    - id: cancellationHandler
      type: System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext}
      description: "Odwołanie do funkcji do wywołania."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)
  id: UnassociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: UnassociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.UnassociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(Guid)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wskazuje, że dostawca trwałości został pomyślnie usunąć skojarzenia klucza z bieżącego wystąpienia w magazynie wystąpień. Identyfikator klucza jest określony jako parametr."
  remarks: "Bieżący dojście wystąpienia musi być powiązana z wystąpienia, a także blokady w tym wystąpieniu. Klucz wystąpienia muszą być skojarzone z bieżącym wystąpieniem i muszą być oznaczone jako ukończone. Bieżące wystąpienie nie może być oznaczona ukończone."
  syntax:
    content: public void UnassociatedInstanceKey (Guid key);
    parameters:
    - id: key
      type: System.Guid
      description: "Identyfikator klucza wystąpienia dla klucza, który został nieskojarzone. Nie może mieć wartości Guid.Empty."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  id: UserContext
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: UserContext
  nameWithType: InstancePersistenceContext.UserContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  type: Property
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Pobiera informacje kontekstu użytkownika dołączony do bieżącego dojście wystąpienia."
  remarks: "Obiekt jest zwracany z InstanceStore.OnNewInstanceHandle dla bieżącego dojście wystąpienia."
  syntax:
    content: public object UserContext { get; }
    return:
      type: System.Object
      description: "Informacje o kontekście użytkownika."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  id: WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wskazuje, czy dostawca trwałości został pomyślnie zapisany wartość metadanych dla klucza wystąpienia, która jest skojarzona z bieżącym wystąpieniem w magazynie wystąpień"
  remarks: "Bieżący dojście wystąpienia musi być powiązana z wystąpienia, a także blokady w tym wystąpieniu. Klucz wystąpienia muszą być skojarzone z bieżącym wystąpieniem i nie można ukończyć."
  syntax:
    content: public void WroteInstanceKeyMetadataValue (Guid key, System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);
    parameters:
    - id: key
      type: System.Guid
      description: "Identyfikator klucza wystąpienia dla klucza. Nie może mieć wartości Guid.Empty."
    - id: name
      type: System.Xml.Linq.XName
      description: "Nazwa właściwości metadanych."
    - id: value
      type: System.Runtime.DurableInstancing.InstanceValue
      description: "Wartość właściwości metadanych."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  id: WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: WroteInstanceMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wskazuje, że dostawca trwałości został pomyślnie zapisane wartość metadanych dla bieżącego wystąpienia magazynu zewnętrznego wystąpienia."
  remarks: "Bieżący dojście wystąpienia musi być powiązany z wystąpieniem a także jest zablokowany w tym wystąpieniu. Nie można wypełniać wystąpienia."
  syntax:
    content: public void WroteInstanceMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "Nazwa właściwości metadanych."
    - id: value
      type: System.Runtime.DurableInstancing.InstanceValue
      description: "Wartość właściwości metadanych."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  id: WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  langs:
  - csharp
  name: WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  type: Method
  assemblies:
  - System.Runtime.DurableInstancing
  namespace: System.Runtime.DurableInstancing
  summary: "Wskazuje, czy dostawca trwałości został pomyślnie zapisany wartości metadanych dla bieżącego wystąpienia w magazynie wystąpień."
  remarks: "Bieżący dojście wystąpienia musi być powiązany z właścicielem wystąpienia."
  syntax:
    content: public void WroteInstanceOwnerMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "Nazwa właściwości metadanych."
    - id: value
      type: System.Runtime.DurableInstancing.InstanceValue
      description: "Wartość właściwości metadanych."
  overload: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: AssociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.AssociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(Int64,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  nameWithType: InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(InstancePersistenceCommand,TimeSpan,AsyncCallback,Object)
- uid: System.Runtime.DurableInstancing.InstancePersistenceCommand
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceCommand
  nameWithType: InstancePersistenceCommand
  fullName: System.Runtime.DurableInstancing.InstancePersistenceCommand
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindAcquiredLock(Int64)
  nameWithType: InstancePersistenceContext.BindAcquiredLock(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(Int64)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindEvent(InstancePersistenceEvent)
  nameWithType: InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(InstancePersistenceEvent)
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstancePersistenceEvent
  nameWithType: InstancePersistenceEvent
  fullName: System.Runtime.DurableInstancing.InstancePersistenceEvent
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstance(Guid)
  nameWithType: InstancePersistenceContext.BindInstance(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstanceOwner(Guid,Guid)
  nameWithType: InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(Guid,Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindReclaimedLock(Int64,TimeSpan)
  nameWithType: InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(Int64,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstance()
  nameWithType: InstancePersistenceContext.CompletedInstance()
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance()
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.CompletedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CreateBindReclaimedLockException(Int64)
  nameWithType: InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(Int64)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndBindReclaimedLock(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(IAsyncResult)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndExecute(IAsyncResult)
  nameWithType: InstancePersistenceContext.EndExecute(IAsyncResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(IAsyncResult)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: Execute(InstancePersistenceCommand,TimeSpan)
  nameWithType: InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(InstancePersistenceCommand,TimeSpan)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceHandle
  nameWithType: InstancePersistenceContext.InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstanceHandle
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceHandle
  nameWithType: InstanceHandle
  fullName: System.Runtime.DurableInstancing.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceVersion
  nameWithType: InstancePersistenceContext.InstanceVersion
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceView
  nameWithType: InstancePersistenceContext.InstanceView
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView
- uid: System.Runtime.DurableInstancing.InstanceView
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceView
  nameWithType: InstanceView
  fullName: System.Runtime.DurableInstancing.InstanceView
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  nameWithType: InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(InstanceState,IDictionary<XName,InstanceValue>,IDictionary<XName,InstanceValue>,IDictionary<Guid,IDictionary<XName,InstanceValue>>,IDictionary<Guid,IDictionary<XName,InstanceValue>>)
- uid: System.Runtime.DurableInstancing.InstanceState
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceState
  nameWithType: InstanceState
  fullName: System.Runtime.DurableInstancing.InstanceState
- uid: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<XName,InstanceValue>
  nameWithType: IDictionary<XName,InstanceValue>
  fullName: System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: XName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Runtime.DurableInstancing.InstanceValue
    name: InstanceValue
    nameWithType: InstanceValue
    fullName: InstanceValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<Guid,IDictionary<XName,InstanceValue>>
  nameWithType: IDictionary<Guid,IDictionary<XName,InstanceValue>>
  fullName: System.Collections.Generic.IDictionary<System.Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Guid,System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XName
    name: XName
    nameWithType: XName
    fullName: XName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Runtime.DurableInstancing.InstanceValue
    name: InstanceValue
    nameWithType: InstanceValue
    fullName: InstanceValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LockToken
  nameWithType: InstancePersistenceContext.LockToken
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: PersistedInstance(IDictionary<XName,InstanceValue>)
  nameWithType: InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(IDictionary<XName,InstanceValue>)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: QueriedInstanceStore(InstanceStoreQueryResult)
  nameWithType: InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(InstanceStoreQueryResult)
- uid: System.Runtime.DurableInstancing.InstanceStoreQueryResult
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceStoreQueryResult
  nameWithType: InstanceStoreQueryResult
  fullName: System.Runtime.DurableInstancing.InstanceStoreQueryResult
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(Guid,IDictionary<XName,InstanceValue>,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(IDictionary<XName,InstanceValue>,Boolean)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  nameWithType: InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(IDictionary<XName,InstanceValue>,Boolean)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: SetCancellationHandler(Action<InstancePersistenceContext>)
  nameWithType: InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(Action<InstancePersistenceContext>)
- uid: System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext}
  parent: System
  isExternal: true
  name: Action<InstancePersistenceContext>
  nameWithType: Action<InstancePersistenceContext>
  fullName: System.Action<System.Runtime.DurableInstancing.InstancePersistenceContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Runtime.DurableInstancing.InstancePersistenceContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstancePersistenceContext
    name: InstancePersistenceContext
    nameWithType: InstancePersistenceContext
    fullName: InstancePersistenceContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UnassociatedInstanceKey(Guid)
  nameWithType: InstancePersistenceContext.UnassociatedInstanceKey(Guid)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(Guid)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UserContext
  nameWithType: InstancePersistenceContext.UserContext
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(Guid,XName,InstanceValue)
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: true
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: System.Runtime.DurableInstancing.InstanceValue
  parent: System.Runtime.DurableInstancing
  isExternal: false
  name: InstanceValue
  nameWithType: InstanceValue
  fullName: System.Runtime.DurableInstancing.InstanceValue
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(XName,InstanceValue)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  nameWithType: InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
  fullName: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(XName,InstanceValue)
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: AssociatedInstanceKey
  nameWithType: InstancePersistenceContext.AssociatedInstanceKey
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginBindReclaimedLock
  nameWithType: InstancePersistenceContext.BeginBindReclaimedLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BeginExecute
  nameWithType: InstancePersistenceContext.BeginExecute
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindAcquiredLock
  nameWithType: InstancePersistenceContext.BindAcquiredLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindEvent
  nameWithType: InstancePersistenceContext.BindEvent
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstance
  nameWithType: InstancePersistenceContext.BindInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindInstanceOwner
  nameWithType: InstancePersistenceContext.BindInstanceOwner
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: BindReclaimedLock
  nameWithType: InstancePersistenceContext.BindReclaimedLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstance
  nameWithType: InstancePersistenceContext.CompletedInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CompletedInstanceKey
  nameWithType: InstancePersistenceContext.CompletedInstanceKey
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: CreateBindReclaimedLockException
  nameWithType: InstancePersistenceContext.CreateBindReclaimedLockException
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndBindReclaimedLock
  nameWithType: InstancePersistenceContext.EndBindReclaimedLock
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: EndExecute
  nameWithType: InstancePersistenceContext.EndExecute
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.Execute*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: Execute
  nameWithType: InstancePersistenceContext.Execute
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceHandle
  nameWithType: InstancePersistenceContext.InstanceHandle
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceVersion
  nameWithType: InstancePersistenceContext.InstanceVersion
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: InstanceView
  nameWithType: InstancePersistenceContext.InstanceView
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LoadedInstance
  nameWithType: InstancePersistenceContext.LoadedInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: LockToken
  nameWithType: InstancePersistenceContext.LockToken
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: PersistedInstance
  nameWithType: InstancePersistenceContext.PersistedInstance
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: QueriedInstanceStore
  nameWithType: InstancePersistenceContext.QueriedInstanceStore
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceKeyMetadata
  nameWithType: InstancePersistenceContext.ReadInstanceKeyMetadata
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceMetadata
  nameWithType: InstancePersistenceContext.ReadInstanceMetadata
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: ReadInstanceOwnerMetadata
  nameWithType: InstancePersistenceContext.ReadInstanceOwnerMetadata
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: SetCancellationHandler
  nameWithType: InstancePersistenceContext.SetCancellationHandler
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UnassociatedInstanceKey
  nameWithType: InstancePersistenceContext.UnassociatedInstanceKey
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: UserContext
  nameWithType: InstancePersistenceContext.UserContext
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceKeyMetadataValue
  nameWithType: InstancePersistenceContext.WroteInstanceKeyMetadataValue
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceMetadataValue
  nameWithType: InstancePersistenceContext.WroteInstanceMetadataValue
- uid: System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue*
  parent: System.Runtime.DurableInstancing.InstancePersistenceContext
  isExternal: false
  name: WroteInstanceOwnerMetadataValue
  nameWithType: InstancePersistenceContext.WroteInstanceOwnerMetadataValue
