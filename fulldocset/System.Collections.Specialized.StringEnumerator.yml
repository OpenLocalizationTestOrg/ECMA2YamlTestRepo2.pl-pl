### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.StringEnumerator
  id: StringEnumerator
  children:
  - System.Collections.Specialized.StringEnumerator.Current
  - System.Collections.Specialized.StringEnumerator.MoveNext
  - System.Collections.Specialized.StringEnumerator.Reset
  langs:
  - csharp
  name: StringEnumerator
  nameWithType: StringEnumerator
  fullName: System.Collections.Specialized.StringEnumerator
  type: Class
  summary: "Obsługuje prosty iteracji przez <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "`foreach` Instrukcji języka C# (`for each` w języku Visual Basic) ukrywa złożoność wyliczenia.  W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.       Moduły wyliczające może służyć do odczytywania danych w kolekcji, ale nie może służyć do modyfikowania kolekcji źródłowej.       Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji. <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>również wprowadzono moduł wyliczający wróć do tej pozycji.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> At to pozycja, wywoływania <xref:System.Collections.Specialized.StringEnumerator.Current%2A>zgłasza wyjątek.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> W związku z tym należy wywołać <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytaniem wartość <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       <xref:System.Collections.Specialized.StringEnumerator.Current%2A>zwraca ten sam obiekt do momentu <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>lub <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>jest wywoływana.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A></xref:System.Collections.Specialized.StringEnumerator.Current%2A> <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>Ustawia <xref:System.Collections.Specialized.StringEnumerator.Current%2A>do następnego elementu.</xref:System.Collections.Specialized.StringEnumerator.Current%2A></xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Jeśli <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>zwraca `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>zwracają również `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Jeśli przez ostatnie wywołanie <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>zwrócił `false`, wywoływania <xref:System.Collections.Specialized.StringEnumerator.Current%2A>zgłasza wyjątek.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Aby ustawić <xref:System.Collections.Specialized.StringEnumerator.Current%2A>pierwszy element w kolekcji, należy wywołać, <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>następuje <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.Current%2A>       Moduł wyliczający pozostaje ważny tak długo, jak kolekcji pozostaje niezmieniona. Jeśli wprowadzono zmiany w kolekcji, takich jak dodawanie, modyfikowanie lub usuwanie elementów, spowoduje nieodwracalne unieważnienie modułu wyliczającego i następnego wywołania lub <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>zgłasza <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Jeśli kolekcja jest zmodyfikowany między <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>i <xref:System.Collections.Specialized.StringEnumerator.Current%2A>, <xref:System.Collections.Specialized.StringEnumerator.Current%2A>zwraca element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Moduł wyliczający nie ma wyłącznego dostępu do kolekcji; w związku z tym wyliczania kolekcji leżą nie jest bezpieczne wątkowo procedurą. Nawet jeśli kolekcja jest synchronizowane, inne wątki mogą modyfikować kolekcji, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki."
  example:
  - "The following code example demonstrates several of the properties and methods of StringEnumerator.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/t-system.collections.spe_8_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/t-system.collections.spe_8_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_8_1.vb)]"
  syntax:
    content: public class StringEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringEnumerator.Current
  id: Current
  parent: System.Collections.Specialized.StringEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: StringEnumerator.Current
  fullName: System.Collections.Specialized.StringEnumerator.Current
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera bieżący element w kolekcji."
  remarks: "Po utworzeniu modułu wyliczającego lub po <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>jest nazywany <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>musi zostać wywołana można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytaniem wartość elementu Current; w przeciwnym razie bieżącego jest niezdefiniowany.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A>       Bieżąca również zgłasza wyjątek, jeśli przez ostatnie wywołanie <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>zwrócił `false`, co oznacza koniec kolekcji.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Bieżąca nie przenosi pozycja modułu wyliczającego, a kolejne wywołania bieżącego wróć tego samego obiektu do momentu <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>lub <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>jest wywoływana.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Moduł wyliczający pozostaje ważny tak długo, jak kolekcji pozostaje niezmieniona. Jeśli wprowadzono zmiany w kolekcji, takich jak dodawanie, modyfikowanie lub usuwanie elementów, spowoduje nieodwracalne unieważnienie modułu wyliczającego i następnego wywołania lub <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>zgłasza <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Jeśli kolekcja jest zmodyfikowany między <xref:System.Collections.IEnumerator.MoveNext%2A>i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>zwraca element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/p-system.collections.spe_8_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/p-system.collections.spe_8_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/p-system.collections.spe_8_1.vb)]"
  syntax:
    content: public string Current { get; }
    return:
      type: System.String
      description: "Bieżący element w kolekcji."
  overload: System.Collections.Specialized.StringEnumerator.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Moduł wyliczający jest umieszczony przed pierwszym elementem kolekcji lub po ostatnim elemencie."
  platform:
  - net462
- uid: System.Collections.Specialized.StringEnumerator.MoveNext
  id: MoveNext
  parent: System.Collections.Specialized.StringEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: StringEnumerator.MoveNext()
  fullName: System.Collections.Specialized.StringEnumerator.MoveNext()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Moduł wyliczający należy przechodzi do następnego elementu kolekcji."
  remarks: "Po utworzeniu modułu wyliczającego lub po <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>jest wywoływana, moduł wyliczający jest umieszczony przed pierwszym elementem kolekcji i w pierwszym wywołaniu MoveNext moduł wyliczający jest przemieszczane nad pierwszym elementem kolekcji.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A>       Jeśli element MoveNext przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i zwraca MoveNext `false`. Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania MoveNext również zwrócić `false` do momentu <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>jest wywoływana.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A>       Moduł wyliczający pozostaje ważny tak długo, jak kolekcji pozostaje niezmieniona. Jeśli wprowadzono zmiany w kolekcji, takich jak dodawanie, modyfikowanie lub usuwanie elementów, spowoduje nieodwracalne unieważnienie modułu wyliczającego i następnego wywołania lub <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>zgłasza <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Jeśli kolekcja jest zmodyfikowany między <xref:System.Collections.IEnumerator.MoveNext%2A>i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>zwraca element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/m-system.collections.spe_12_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/m-system.collections.spe_12_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/m-system.collections.spe_12_1.vb)]"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli moduł wyliczający został pomyślnie poprawionym do następnego elementu; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> po zakończeniu zbierania moduł wyliczający."
  overload: System.Collections.Specialized.StringEnumerator.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kolekcja została zmodyfikowana po utworzeniu modułu wyliczającego."
  platform:
  - net462
- uid: System.Collections.Specialized.StringEnumerator.Reset
  id: Reset
  parent: System.Collections.Specialized.StringEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: StringEnumerator.Reset()
  fullName: System.Collections.Specialized.StringEnumerator.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ustawia modułu wyliczającego pozycji początkowej, czyli przed pierwszym elementem w kolekcji."
  remarks: "Resetowanie przenosi na początku kolekcji przed pierwszym elementem modułu wyliczającego. Po zresetowaniu <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>musi zostać wywołana, aby przejść do pierwszego elementu w kolekcji przed odczytaniem wartość <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> modułu wyliczającego</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.  \n  \n [!code-cs[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/csharp/m-system.collections.spe_14_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/cpp/m-system.collections.spe_14_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/add/codesnippet/visualbasic/m-system.collections.spe_14_1.vb)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Collections.Specialized.StringEnumerator.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kolekcja została zmodyfikowana po utworzeniu modułu wyliczającego."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Collections.Specialized.StringEnumerator.Current
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Current
  nameWithType: StringEnumerator.Current
  fullName: System.Collections.Specialized.StringEnumerator.Current
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.StringEnumerator.MoveNext
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: StringEnumerator.MoveNext()
  fullName: System.Collections.Specialized.StringEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.StringEnumerator.Reset
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Reset()
  nameWithType: StringEnumerator.Reset()
  fullName: System.Collections.Specialized.StringEnumerator.Reset()
- uid: System.Collections.Specialized.StringEnumerator.Current*
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Current
  nameWithType: StringEnumerator.Current
- uid: System.Collections.Specialized.StringEnumerator.MoveNext*
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: StringEnumerator.MoveNext
- uid: System.Collections.Specialized.StringEnumerator.Reset*
  parent: System.Collections.Specialized.StringEnumerator
  isExternal: false
  name: Reset
  nameWithType: StringEnumerator.Reset
