### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPartField
  id: IWebPartField
  children:
  - System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)
  - System.Web.UI.WebControls.WebParts.IWebPartField.Schema
  langs:
  - csharp
  name: IWebPartField
  nameWithType: IWebPartField
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField
  type: Interface
  summary: "Definiuje interfejs dostawcy do łączenia dwóch kontrolek serwera za pomocą jednego pola danych."
  remarks: "Ten interfejs jest przeznaczony do użycia z połączeń części sieci Web. W przypadku połączenia składników Web Part dwóch formantów serwera, które znajdują się w <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>strefy ustanowić połączenie i udziału danych, z jeden formant, który działa jako klient i inne kontrolki pełnią funkcję dostawcy.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Mechanizm udostępnianie danych w połączeniu składników Web Part jest wystąpienie interfejsu, który dostawca służy do konsumenta za pomocą metody wywołania zwrotnego. Nawiązanie połączenia klienta i dostawcy musi działać z tego samego typu interfejsu udostępnianie danych. Jeśli klient nie rozpoznaje typ interfejsu wysyłane przez dostawcę, jest nadal możliwe nawiązanie formantów za pomocą transformatora ( <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>obiektu) konwertujący wystąpienie interfejsu wysyłane przez dostawcę do typu, który rozpoznaje konsumenta.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Szczegółowe informacje dotyczące połączenia, zobacz <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>i [Omówienie połączeń części sieci Web](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.WebPartConnection>       Interfejs IWebPartField to interfejs dostawcy dołączonego kontroli części sieci Web, Ustaw jako standardowy interfejs służący do tworzenia połączenia na podstawie pola danych. Można również tworzyć niestandardowe interfejsy do korzystania z połączeń części sieci Web, ale w wielu opartych na danych aplikacji sieci Web, jest przydatne do tworzenia połączeń oparte na wspólnej wiersza (Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.IWebPartRow>interfejsu), tabeli (Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>interfejsu), lub pola ze źródła danych przy użyciu interfejsu IWebPartField.</xref:System.Web.UI.WebControls.WebParts.IWebPartTable> </xref:System.Web.UI.WebControls.WebParts.IWebPartRow> W związku z typowych <xref:System.Web.UI.WebControls.WebParts.WebPart>kontrolować działając jako dostawcę może implementować interfejs IWebPartField i zapewnić wystąpienie interfejsu do odbiorców w metodzie specjalne wywołania zwrotnego.</xref:System.Web.UI.WebControls.WebParts.WebPart> Na przykład dostawca może implementować interfejs IWebPartField dla pola w tabeli informacje użytkownika zawierający dane kod pocztowy użytkownika sieci Web. Inny <xref:System.Web.UI.WebControls.WebParts.WebPart>kontroli działania konsumenta zdefiniowane specjalnej metody do odbierania wystąpienie interfejsu i może wyodrębnić dane kod pocztowy i wyszukać i wyświetlania informacji o pogodzie na podstawie kodu pocztowego.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Interfejs IWebPartField ma dwa narażonych elementów członkowskich. <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>Właściwość zwraca informacje o schemacie o hermetyzowane w polu danych <xref:System.ComponentModel.PropertyDescriptor>obiektu.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>Metoda deklaruje metody, która używa implementujący (takich jak kontrola dostawcy) można pobrać danych pola wystąpienia interfejsu po wywołaniu metody wywołania zwrotnego.</xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>"
  example:
  - "The following code example demonstrates how to create a static connection between two controls using the IWebPartField interface. The code example has three parts:  \n  \n-   Source code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection using the IWebPartField interface, with one control acting as the provider, the other acting as the consumer.  \n  \n-   A Web page that hosts the controls and declares the static connection in persistence format.  \n  \n-   A description of what happens when the example code runs.  \n  \n The first part of the code example is the source code for the two custom controls. First is the code for the provider, which implements the IWebPartField interface. For simplicity in the example, the provider creates a table with some data rather than connecting to a database. The `GetConnectionInterface` method serves as the provider's connection point, the callback method that returns the interface instance to the consumer. As for the consumer, it retrieves the interface instance from the provider in its method named `SetConnectionInterface`, which is marked with a `ConnectionConsumer` attribute. After retrieving the instance of the interface, the consumer, in its `OnPreRender` method, calls the implementation of the <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> method in the provider, to retrieve the actual data.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPartField_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_353_1.cs)]\n [!code-vb[WebParts_IWebPartField_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_353_1.vb)]  \n  \n The second part of the code example is the Web page that declares the static connection and hosts the controls. Near the top of the page is a `Register` directive that declares the namespace of the source code contained in the App_Code directory. The connection is declared using an `<asp:webpartconnection>` element. The custom consumer and provider controls are declared in a `<zonetemplate>` element within an `<asp:webpartzone>` element, which is required for them to be able to connect (they must reside within a zone that inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class).  \n  \n [!code-cs[WebParts_IWebPartField_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_353_2.aspx)]\n [!code-vb[WebParts_IWebPartField_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_353_2.aspx)]  \n  \n Load the page in a browser. The consumer control displays the data provided from the specified field, which the provider makes available through an instance of the IWebPartField interface."
  syntax:
    content: public interface IWebPartField
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)
  id: GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  langs:
  - csharp
  name: GetFieldValue(FieldCallback)
  nameWithType: IWebPartField.GetFieldValue(FieldCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(FieldCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Zwraca wartość pola, które jest używane przez interfejs jako podstawa połączenie między dwoma <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrolki."
  remarks: "Użyj tej metody można pobrać wartości pola danych, które są przekazywane za pośrednictwem interfejsu."
  example:
  - "The following code example shows the implementation and use of the GetFieldValue method. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface. The provider control implements the GetFieldValue method, returning the value of a particular field in the data table. The consumer control calls the GetFieldValue method in its `OnPreRender` method, so that the value of the data can be written to the page.  \n  \n [!code-cs[WebParts_IWebPartField_Overview#2](~/add/codesnippet/csharp/c2381a5f-e812-4b8a-be4c-_1.cs)]\n [!code-vb[WebParts_IWebPartField_Overview#2](~/add/codesnippet/visualbasic/c2381a5f-e812-4b8a-be4c-_1.vb)]"
  syntax:
    content: public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);
    parameters:
    - id: callback
      type: System.Web.UI.WebControls.WebParts.FieldCallback
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.FieldCallback&quot;> </xref> delegata, który zawiera adres metodę, która odbiera dane."
  overload: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.Schema
  id: Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  langs:
  - csharp
  name: Schema
  nameWithType: IWebPartField.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField.Schema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Pobiera informacje o schemacie dla pola danych, który jest używany do udostępniania danych między dwiema <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> kontrolki."
  remarks: "Ta właściwość zapewnia informacje dotyczące danych przekazanych przez interfejs właściwości. Formanty transformatora i klienta może wysyłać zapytania tę właściwość, aby uzyskać informacje o typie zawartości, i inne szczegóły pola zawarte w <xref:System.Web.UI.WebControls.WebParts.IWebPartField>wystąpienie interfejsu wysyłane przez dostawcę.</xref:System.Web.UI.WebControls.WebParts.IWebPartField>"
  example:
  - "The following code example shows the implementation and use of the Schema property. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface. The provider control implements the Schema property. Then, in its `GetFieldValue` method, it uses the property to retrieve the field value.  \n  \n [!code-cs[WebParts_IWebPartField_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_271_1.cs)]\n [!code-vb[WebParts_IWebPartField_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_271_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptor Schema { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> , który opisuje informacje o schemacie dla pola danych."
  overload: System.Web.UI.WebControls.WebParts.IWebPartField.Schema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  isExternal: false
  name: GetFieldValue(FieldCallback)
  nameWithType: IWebPartField.GetFieldValue(FieldCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(FieldCallback)
- uid: System.Web.UI.WebControls.WebParts.FieldCallback
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: FieldCallback
  nameWithType: FieldCallback
  fullName: System.Web.UI.WebControls.WebParts.FieldCallback
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  isExternal: false
  name: Schema
  nameWithType: IWebPartField.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField.Schema
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue*
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  isExternal: false
  name: GetFieldValue
  nameWithType: IWebPartField.GetFieldValue
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.Schema*
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  isExternal: false
  name: Schema
  nameWithType: IWebPartField.Schema
