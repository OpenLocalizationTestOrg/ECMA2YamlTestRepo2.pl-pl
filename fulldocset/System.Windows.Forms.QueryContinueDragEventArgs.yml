### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.QueryContinueDragEventArgs
  id: QueryContinueDragEventArgs
  children:
  - System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  - System.Windows.Forms.QueryContinueDragEventArgs.Action
  - System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  - System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  langs:
  - csharp
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs
  fullName: System.Windows.Forms.QueryContinueDragEventArgs
  type: Class
  summary: "Udostępnia dane dla <xref href=&quot;System.Windows.Forms.Control.QueryContinueDrag&quot;> </xref> zdarzeń."
  remarks: "<xref:System.Windows.Forms.Control.QueryContinueDrag>Zdarzenie występuje podczas operacji przeciągania i upuszczania oraz umożliwia ustalenie, czy można anulować operację przeciągania i upuszczania źródła przeciągania.</xref:System.Windows.Forms.Control.QueryContinueDrag> QueryContinueDragEventArgs Określa, czy i jak należy kontynuować operację przeciągania i upuszczania, czy wszystkie klawisze modyfikujące naciśnięciu i czy użytkownik nacisnął klawisz ESC.       Domyślnie <xref:System.Windows.Forms.Control.QueryContinueDrag>zestawów zdarzeń <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>do <xref:System.Windows.Forms.DragAction?displayProperty=fullName>Jeśli został naciśnięty klawisz ESC i ustawia `Action` do <xref:System.Windows.Forms.DragAction?displayProperty=fullName>Jeśli zostanie naciśnięty przycisk myszy po lewej stronie, średnim lub prawego.</xref:System.Windows.Forms.DragAction?displayProperty=fullName> </xref:System.Windows.Forms.DragAction?displayProperty=fullName> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.Control.QueryContinueDrag>       Aby uzyskać informacje na temat modelu zdarzeń, zobacz [zdarzenia](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This code excerpt demonstrates using the QueryContinueDragEventArgs class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/cpp/t-system.windows.forms.q_4_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/visualbasic/t-system.windows.forms.q_4_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/csharp/t-system.windows.forms.q_4_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class QueryContinueDragEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  id: '#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)'
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Forms.QueryContinueDragEventArgs&quot;> </xref> klasy."
  syntax:
    content: public QueryContinueDragEventArgs (int keyState, bool escapePressed, System.Windows.Forms.DragAction action);
    parameters:
    - id: keyState
      type: System.Int32
      description: "Bieżący stan klawiszy SHIFT, CTRL i ALT."
    - id: escapePressed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli został naciśnięty klawisz ESC; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: action
      type: System.Windows.Forms.DragAction
      description: "A <xref href=&quot;System.Windows.Forms.DragAction&quot;></xref> value."
  overload: System.Windows.Forms.QueryContinueDragEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action
  id: Action
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.Action
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera lub ustawia stan operacji przeciągania i upuszczania."
  remarks: "Domyślnie <xref:System.Windows.Forms.Control.QueryContinueDrag>zdarzeń ustawia akcję <xref:System.Windows.Forms.DragAction?displayProperty=fullName>Jeśli został naciśnięty klawisz ESC i ustawia `Action` do <xref:System.Windows.Forms.DragAction?displayProperty=fullName>Jeśli zostanie naciśnięty przycisk myszy po lewej stronie, średnim lub prawego.</xref:System.Windows.Forms.DragAction?displayProperty=fullName> </xref:System.Windows.Forms.DragAction?displayProperty=fullName> </xref:System.Windows.Forms.Control.QueryContinueDrag>"
  example:
  - "This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/cpp/p-system.windows.forms.q_0_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/visualbasic/p-system.windows.forms.q_0_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/csharp/p-system.windows.forms.q_0_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DragAction Action { get; set; }
    return:
      type: System.Windows.Forms.DragAction
      description: "A <xref href=&quot;System.Windows.Forms.DragAction&quot;></xref> value."
  overload: System.Windows.Forms.QueryContinueDragEventArgs.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  id: EscapePressed
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera informacje, czy użytkownik naciśnięcia klawisza ESC."
  remarks: "Domyślnie <xref:System.Windows.Forms.Control.QueryContinueDrag>zestawów zdarzeń <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>do <xref:System.Windows.Forms.DragAction?displayProperty=fullName>Jeśli EscapePressed ma wartość true.</xref:System.Windows.Forms.DragAction?displayProperty=fullName> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.Control.QueryContinueDrag>"
  example:
  - "The following code example demonstrates the use of the EscapePressed . In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#43](~/add/codesnippet/csharp/p-system.windows.forms.q_6_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#43](~/add/codesnippet/visualbasic/p-system.windows.forms.q_6_1.vb)]"
  syntax:
    content: public bool EscapePressed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli został naciśnięty klawisz ESC; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  id: KeyState
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: KeyState
  nameWithType: QueryContinueDragEventArgs.KeyState
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pobiera bieżący stan SHIFT, CTRL i ALT — klawisze."
  remarks: "Bity, które są ustawione we właściwości KeyState zidentyfikować kluczy lub przycisku myszy, które zostały naciśnięte podczas operacji. Na przykład jeśli lewy przycisk myszy jest wciśnięty, pierwszy bit we właściwości KeyState jest ustawiona. Korzystając z bitowego `AND` operatora, aby sprawdzić dla danego stanu klucza.       W poniższej tabeli wymieniono bitów, które są ustawione dla określonego zdarzenia.      | Bit | Klucz |   |---------|---------|   |&1; | Lewy przycisk myszy. |   |&2; | Prawy przycisk myszy. |   |&4; | Klawisz SHIFT. |   |&8; | Klucz listy CTL. |   |&16; | Środkowego przycisku myszy. |   |&32; | Klawisz ALT. |       Domyślnie <xref:System.Windows.Forms.Control.QueryContinueDrag>zestawów zdarzeń <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>do <xref:System.Windows.Forms.DragAction?displayProperty=fullName>KeyState wskazuje naciśnięciu przycisku myszy po lewej stronie, średnim lub prawego.</xref:System.Windows.Forms.DragAction?displayProperty=fullName> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.Control.QueryContinueDrag>"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#43](~/add/codesnippet/csharp/p-system.windows.forms.q_2_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#43](~/add/codesnippet/visualbasic/p-system.windows.forms.q_2_1.vb)]"
  syntax:
    content: public int KeyState { get; }
    return:
      type: System.Int32
      description: "Bieżący stan klawiszy SHIFT, CTRL i ALT."
  overload: System.Windows.Forms.QueryContinueDragEventArgs.KeyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DragAction
  parent: System.Windows.Forms
  isExternal: false
  name: DragAction
  nameWithType: DragAction
  fullName: System.Windows.Forms.DragAction
- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.Action
- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: KeyState
  nameWithType: QueryContinueDragEventArgs.KeyState
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs
- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: KeyState
  nameWithType: QueryContinueDragEventArgs.KeyState
