### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.TrustManagerContext
  id: TrustManagerContext
  children:
  - System.Security.Policy.TrustManagerContext.#ctor
  - System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)
  - System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
  - System.Security.Policy.TrustManagerContext.KeepAlive
  - System.Security.Policy.TrustManagerContext.NoPrompt
  - System.Security.Policy.TrustManagerContext.Persist
  - System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
  - System.Security.Policy.TrustManagerContext.UIContext
  langs:
  - csharp
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
  type: Class
  summary: "Reprezentuje kontekst dla Menedżera zaufania, które należy uwzględnić podczas podejmowania decyzji co do uruchamiania aplikacji i konfigurowania zabezpieczeń na nowym <xref href=&quot;System.AppDomain&quot;> </xref> do uruchamiania aplikacji."
  remarks: "Aby uzyskać listę początkowe wartości właściwości dla wystąpienia klasy TrustManagerContext, zobacz <xref:System.Security.Policy.TrustManagerContext.%23ctor>konstruktora.</xref:System.Security.Policy.TrustManagerContext.%23ctor>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TrustManagerContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.#ctor
  id: '#ctor'
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: TrustManagerContext()
  nameWithType: TrustManagerContext.TrustManagerContext()
  fullName: System.Security.Policy.TrustManagerContext.TrustManagerContext()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Policy.TrustManagerContext&quot;> </xref> klasy."
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla nowego wystąpienia <xref:System.Security.Policy.TrustManagerContext>klasy.</xref:System.Security.Policy.TrustManagerContext>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision%2A>| `false`|   | <xref:System.Security.Policy.TrustManagerContext.KeepAlive%2A>| `false`|   | <xref:System.Security.Policy.TrustManagerContext.NoPrompt%2A>| `false`|   | <xref:System.Security.Policy.TrustManagerContext.Persist%2A>| `true`|   | <xref:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity%2A>| `null`|   | <xref:System.Security.Policy.TrustManagerContext.UIContext%2A>| <xref:System.Security.Policy.TrustManagerUIContext>|</xref:System.Security.Policy.TrustManagerUIContext></xref:System.Security.Policy.TrustManagerContext.UIContext%2A></xref:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity%2A></xref:System.Security.Policy.TrustManagerContext.Persist%2A></xref:System.Security.Policy.TrustManagerContext.NoPrompt%2A></xref:System.Security.Policy.TrustManagerContext.KeepAlive%2A></xref:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision%2A>"
  syntax:
    content: public TrustManagerContext ();
    parameters: []
  overload: System.Security.Policy.TrustManagerContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)
  id: '#ctor(System.Security.Policy.TrustManagerUIContext)'
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: TrustManagerContext(TrustManagerUIContext)
  nameWithType: TrustManagerContext.TrustManagerContext(TrustManagerUIContext)
  fullName: System.Security.Policy.TrustManagerContext.TrustManagerContext(TrustManagerUIContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Policy.TrustManagerContext&quot;> </xref> przy użyciu określonego <xref href=&quot;System.Security.Policy.TrustManagerUIContext&quot;> </xref> obiektu."
  remarks: "Ten konstruktor inicjuje właściwości do tych samych ustawień co konstruktor domyślny, z wyjątkiem <xref:System.Security.Policy.TrustManagerContext.UIContext%2A>Właściwości, która jest ustawiona na wartość przekazanego cali</xref:System.Security.Policy.TrustManagerContext.UIContext%2A>"
  syntax:
    content: public TrustManagerContext (System.Security.Policy.TrustManagerUIContext uiContext);
    parameters:
    - id: uiContext
      type: System.Security.Policy.TrustManagerUIContext
      description: "Jeden z <xref href=&quot;System.Security.Policy.TrustManagerUIContext&quot;> </xref> wartości, które określa typ interfejsu użytkownika Menedżera zaufania do użycia."
  overload: System.Security.Policy.TrustManagerContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
  id: IgnorePersistedDecision
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: IgnorePersistedDecision
  nameWithType: TrustManagerContext.IgnorePersistedDecision
  fullName: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera lub ustawia wartość wskazującą, czy Menedżera zabezpieczeń aplikacji należy zignorować utrwalonego decyzji i wywołać Menedżera zaufania."
  remarks: "Jeśli `true`, <xref:System.Security.Policy.ApplicationSecurityManager>ignoruje utrwalonego decyzje dotyczące aplikacji i wywołuje Menedżera zaufania.</xref:System.Security.Policy.ApplicationSecurityManager> Jeśli `false`, <xref:System.Security.Policy.ApplicationSecurityManager>używa buforowanego decyzji, jeśli jest dostępna.</xref:System.Security.Policy.ApplicationSecurityManager>"
  syntax:
    content: public virtual bool IgnorePersistedDecision { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wywołać zaufanie Menedżera; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.KeepAlive
  id: KeepAlive
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: KeepAlive
  nameWithType: TrustManagerContext.KeepAlive
  fullName: System.Security.Policy.TrustManagerContext.KeepAlive
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera lub ustawia wartość wskazującą, czy Menedżera zaufania powinien buforować stanu dla tej aplikacji, w celu ułatwienia przyszłych żądań, aby określić zaufanie aplikacji."
  remarks: "Ta flaga jest ustawiona na `true` Jeśli host mogą wywołać zaufanie manager wielokrotnie decyzje zaufania dla tej aplikacji. Jeśli `true`, Menedżera zaufania powinien buforować tutaj stan, który może zwiększyć szybkość przyszłe wywołania <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A>metody.</xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> Ta właściwość jest ustawiona na `false` Jeśli host nie oczekuje Wywołaj zaufanie manager ponownie dla bieżącego <xref:System.AppDomain>.</xref:System.AppDomain>"
  syntax:
    content: public virtual bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>do pamięci podręcznej danych o stanie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.TrustManagerContext.KeepAlive*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.NoPrompt
  id: NoPrompt
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: NoPrompt
  nameWithType: TrustManagerContext.NoPrompt
  fullName: System.Security.Policy.TrustManagerContext.NoPrompt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera lub ustawia wartość wskazującą, czy Menedżera zaufania powinien Monituj użytkownika o decyzji zaufania."
  remarks: "Jeśli `false`, okno dialogowe odpowiedniego użytkownika, aby uzyskać decyzji dotyczącej zaufania określa Menedżera zaufania."
  syntax:
    content: public virtual bool NoPrompt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby nie Monituj użytkownika; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> monitowanie użytkownika. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.TrustManagerContext.NoPrompt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.Persist
  id: Persist
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: Persist
  nameWithType: TrustManagerContext.Persist
  fullName: System.Security.Policy.TrustManagerContext.Persist
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera lub ustawia wartość wskazującą, czy powinny zostać utrwalony odpowiedzi użytkownika do okna dialogowego zgody."
  remarks: "Ta właściwość jest `true` Jeśli odpowiedzi użytkownika do okna dialogowego zgody powinny zostać utrwalona, aby uniknąć dalszych monitowania użytkownika o każdego nowego żądania aktywacji. Ta właściwość jest `false` Jeśli odpowiedzi użytkownika nie należy trwale."
  syntax:
    content: public virtual bool Persist { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>do pamięci podręcznej danych o stanie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.TrustManagerContext.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
  id: PreviousApplicationIdentity
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: PreviousApplicationIdentity
  nameWithType: TrustManagerContext.PreviousApplicationIdentity
  fullName: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera lub ustawia tożsamość poprzedniej tożsamości aplikacji."
  syntax:
    content: public virtual ApplicationIdentity PreviousApplicationIdentity { get; set; }
    return:
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref> Obiekt reprezentujący poprzedniej <xref href=&quot;System.ApplicationIdentity&quot;> </xref>."
  overload: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.TrustManagerContext.UIContext
  id: UIContext
  parent: System.Security.Policy.TrustManagerContext
  langs:
  - csharp
  name: UIContext
  nameWithType: TrustManagerContext.UIContext
  fullName: System.Security.Policy.TrustManagerContext.UIContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera lub ustawia typ interfejsu użytkownika, który powinien być wyświetlany Menedżera zaufania."
  remarks: "UIContext, który ma właściwość zaleca interfejsu użytkownika Menedżera zaufania powinno zapewniać dla decyzja dotycząca zaufania. Menedżera zaufania można zdecydować użyć innego interfejsu."
  syntax:
    content: public virtual System.Security.Policy.TrustManagerUIContext UIContext { get; set; }
    return:
      type: System.Security.Policy.TrustManagerUIContext
      description: "Jeden z <xref href=&quot;System.Security.Policy.TrustManagerUIContext&quot;> </xref> wartości. Wartość domyślna to <xref href=&quot;System.Security.Policy.TrustManagerUIContext&quot;> </xref>."
  overload: System.Security.Policy.TrustManagerContext.UIContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.TrustManagerContext.#ctor
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: TrustManagerContext()
  nameWithType: TrustManagerContext.TrustManagerContext()
  fullName: System.Security.Policy.TrustManagerContext.TrustManagerContext()
- uid: System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: TrustManagerContext(TrustManagerUIContext)
  nameWithType: TrustManagerContext.TrustManagerContext(TrustManagerUIContext)
  fullName: System.Security.Policy.TrustManagerContext.TrustManagerContext(TrustManagerUIContext)
- uid: System.Security.Policy.TrustManagerUIContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerUIContext
  nameWithType: TrustManagerUIContext
  fullName: System.Security.Policy.TrustManagerUIContext
- uid: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: IgnorePersistedDecision
  nameWithType: TrustManagerContext.IgnorePersistedDecision
  fullName: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.TrustManagerContext.KeepAlive
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: KeepAlive
  nameWithType: TrustManagerContext.KeepAlive
  fullName: System.Security.Policy.TrustManagerContext.KeepAlive
- uid: System.Security.Policy.TrustManagerContext.NoPrompt
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: NoPrompt
  nameWithType: TrustManagerContext.NoPrompt
  fullName: System.Security.Policy.TrustManagerContext.NoPrompt
- uid: System.Security.Policy.TrustManagerContext.Persist
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: Persist
  nameWithType: TrustManagerContext.Persist
  fullName: System.Security.Policy.TrustManagerContext.Persist
- uid: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: PreviousApplicationIdentity
  nameWithType: TrustManagerContext.PreviousApplicationIdentity
  fullName: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Security.Policy.TrustManagerContext.UIContext
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: UIContext
  nameWithType: TrustManagerContext.UIContext
  fullName: System.Security.Policy.TrustManagerContext.UIContext
- uid: System.Security.Policy.TrustManagerContext.#ctor*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext.TrustManagerContext
- uid: System.Security.Policy.TrustManagerContext.IgnorePersistedDecision*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: IgnorePersistedDecision
  nameWithType: TrustManagerContext.IgnorePersistedDecision
- uid: System.Security.Policy.TrustManagerContext.KeepAlive*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: KeepAlive
  nameWithType: TrustManagerContext.KeepAlive
- uid: System.Security.Policy.TrustManagerContext.NoPrompt*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: NoPrompt
  nameWithType: TrustManagerContext.NoPrompt
- uid: System.Security.Policy.TrustManagerContext.Persist*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: Persist
  nameWithType: TrustManagerContext.Persist
- uid: System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: PreviousApplicationIdentity
  nameWithType: TrustManagerContext.PreviousApplicationIdentity
- uid: System.Security.Policy.TrustManagerContext.UIContext*
  parent: System.Security.Policy.TrustManagerContext
  isExternal: false
  name: UIContext
  nameWithType: TrustManagerContext.UIContext
