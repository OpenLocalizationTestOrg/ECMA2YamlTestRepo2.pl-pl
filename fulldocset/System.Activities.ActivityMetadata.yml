### YamlMime:ManagedReference
items:
- uid: System.Activities.ActivityMetadata
  id: ActivityMetadata
  children:
  - System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)
  - System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})
  - System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)
  - System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)
  - System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)
  - System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)
  - System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)
  - System.Activities.ActivityMetadata.AddValidationError(System.String)
  - System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)
  - System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)
  - System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)
  - System.Activities.ActivityMetadata.Environment
  - System.Activities.ActivityMetadata.Equals(System.Object)
  - System.Activities.ActivityMetadata.GetArgumentsWithReflection
  - System.Activities.ActivityMetadata.GetHashCode
  - System.Activities.ActivityMetadata.GetImportedChildrenWithReflection
  - System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection
  - System.Activities.ActivityMetadata.GetVariablesWithReflection
  - System.Activities.ActivityMetadata.HasViolations
  - System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  - System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  - System.Activities.ActivityMetadata.RequireExtension(System.Type)
  - System.Activities.ActivityMetadata.RequireExtension``1
  - System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})
  - System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})
  - System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})
  - System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})
  - System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})
  langs:
  - csharp
  name: ActivityMetadata
  nameWithType: ActivityMetadata
  fullName: System.Activities.ActivityMetadata
  type: Struct
  summary: "Reprezentuje zestaw argumentów, działania podrzędne, zmienne i który deleguje skonfigurowany <xref href=&quot;System.Activities.Activity&quot;> </xref> występują po wprowadzeniu do środowiska wykonawczego."
  syntax:
    content: public struct ActivityMetadata
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)
  id: AddArgument(System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddArgument(RuntimeArgument)
  nameWithType: ActivityMetadata.AddArgument(RuntimeArgument)
  fullName: System.Activities.ActivityMetadata.AddArgument(RuntimeArgument)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje argumentu w kolekcji argumentów działania."
  syntax:
    content: public void AddArgument (System.Activities.RuntimeArgument argument);
    parameters:
    - id: argument
      type: System.Activities.RuntimeArgument
      description: "Argument do dodania do kolekcji."
  overload: System.Activities.ActivityMetadata.AddArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})
  id: AddDefaultExtensionProvider``1(System.Func{``0})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddDefaultExtensionProvider(Func<T>)
  nameWithType: ActivityMetadata.AddDefaultExtensionProvider(Func<T>)
  fullName: System.Activities.ActivityMetadata.AddDefaultExtensionProvider(Func<T>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: 'public void AddDefaultExtensionProvider<T> (Func<T> extensionProvider) where T : class;'
    parameters:
    - id: extensionProvider
      type: System.Func{T}
      description: "Do dodania."
  overload: System.Activities.ActivityMetadata.AddDefaultExtensionProvider<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)
  id: AddImportedChild(System.Activities.Activity)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddImportedChild(Activity)
  nameWithType: ActivityMetadata.AddImportedChild(Activity)
  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje określony działania do listy metadane działań importowanego obiektu podrzędnego."
  remarks: "Działanie importowanego obiektu podrzędnego jest działaniem podrzędnym, który działanie nadrzędne nie planować bezpośrednio. Zamiast następnie nadrzędny używa tego działania można skonfigurować inne działania podrzędnego."
  syntax:
    content: public void AddImportedChild (System.Activities.Activity importedChild);
    parameters:
    - id: importedChild
      type: System.Activities.Activity
      description: "Działanie do dodania."
  overload: System.Activities.ActivityMetadata.AddImportedChild*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)
  id: AddImportedChild(System.Activities.Activity,System.Object)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddImportedChild(Activity,Object)
  nameWithType: ActivityMetadata.AddImportedChild(Activity,Object)
  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje określony działania do listy metadane działań importowanego obiektu podrzędnego."
  syntax:
    content: public void AddImportedChild (System.Activities.Activity importedChild, object origin);
    parameters:
    - id: importedChild
      type: System.Activities.Activity
      description: "Działanie do dodania."
    - id: origin
      type: System.Object
      description: "Punkt początkowy."
  overload: System.Activities.ActivityMetadata.AddImportedChild*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)
  id: AddImportedDelegate(System.Activities.ActivityDelegate)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddImportedDelegate(ActivityDelegate)
  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate)
  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje określonego delegata do metadanych listę importowanych delegatów."
  remarks: "Importowany <xref:System.Activities.ActivityDelegate>jest <xref:System.Activities.ActivityDelegate>który działanie nadrzędne nie jest wywoływany bezpośrednio.</xref:System.Activities.ActivityDelegate> </xref:System.Activities.ActivityDelegate> Zamiast element nadrzędny używa to <xref:System.Activities.ActivityDelegate>skonfigurować inne działania podrzędnego.</xref:System.Activities.ActivityDelegate>"
  syntax:
    content: public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate);
    parameters:
    - id: importedDelegate
      type: System.Activities.ActivityDelegate
      description: "Delegat do dodania."
  overload: System.Activities.ActivityMetadata.AddImportedDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)
  id: AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddImportedDelegate(ActivityDelegate,Object)
  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)
  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje określonego delegata do metadanych listę importowanych delegatów."
  syntax:
    content: public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate, object origin);
    parameters:
    - id: importedDelegate
      type: System.Activities.ActivityDelegate
      description: "Delegat do dodania."
    - id: origin
      type: System.Object
      description: "Punkt początkowy."
  overload: System.Activities.ActivityMetadata.AddImportedDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)
  id: AddValidationError(System.Activities.Validation.ValidationError)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddValidationError(ValidationError)
  nameWithType: ActivityMetadata.AddValidationError(ValidationError)
  fullName: System.Activities.ActivityMetadata.AddValidationError(ValidationError)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje błąd sprawdzania poprawności określonej kolekcji metadane błędy sprawdzania poprawności."
  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Imperatywnych weryfikacji opartych na kodzie](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public void AddValidationError (System.Activities.Validation.ValidationError validationError);
    parameters:
    - id: validationError
      type: System.Activities.Validation.ValidationError
      description: "Błąd sprawdzania poprawności do dodania."
  overload: System.Activities.ActivityMetadata.AddValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddValidationError(System.String)
  id: AddValidationError(System.String)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddValidationError(String)
  nameWithType: ActivityMetadata.AddValidationError(String)
  fullName: System.Activities.ActivityMetadata.AddValidationError(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje błąd sprawdzania poprawności do kolekcji błędów sprawdzania poprawności przy użyciu określonego opisu metadanych."
  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Imperatywnych weryfikacji opartych na kodzie](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public void AddValidationError (string validationErrorMessage);
    parameters:
    - id: validationErrorMessage
      type: System.String
      description: "Komunikat, który opisuje błąd sprawdzania poprawności."
  overload: System.Activities.ActivityMetadata.AddValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)
  id: AddVariable(System.Activities.Variable)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddVariable(Variable)
  nameWithType: ActivityMetadata.AddVariable(Variable)
  fullName: System.Activities.ActivityMetadata.AddVariable(Variable)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje określoną zmienną do metadanych kolekcję zmiennych."
  remarks: "Zmienne dodane przy użyciu tej metody są traktowane jako część powierzchni publicznie można skonfigurować działania, oznacza to, że są dostarczane przez konsumentów działania. Na przykład <xref:System.Activities.Statements.Sequence>dodaje zmienne w jego <xref:System.Activities.Statements.Sequence.Variables%2A>kolekcji przy użyciu tej metody.</xref:System.Activities.Statements.Sequence.Variables%2A> </xref:System.Activities.Statements.Sequence> Implementacja działania nie można uzyskać dostępu zmienne dodane przy użyciu tej metody. Działania dodane za pośrednictwem <xref:System.Activities.ActivityMetadata.AddImportedChild%2A>(i wszystkie ich działania podrzędne nie implementacji) mogą uzyskiwać dostęp do zmiennych dodane przy użyciu tej metody.</xref:System.Activities.ActivityMetadata.AddImportedChild%2A> Na przykład <xref:System.Activities.Statements.Sequence>dodaje jego <xref:System.Activities.Statements.Sequence.Activities%2A>kolekcji w ten sposób.</xref:System.Activities.Statements.Sequence.Activities%2A> </xref:System.Activities.Statements.Sequence>"
  syntax:
    content: public void AddVariable (System.Activities.Variable variable);
    parameters:
    - id: variable
      type: System.Activities.Variable
      description: "Zmienna do dodania."
  overload: System.Activities.ActivityMetadata.AddVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)
  id: AddVariable(System.Activities.Variable,System.Object)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddVariable(Variable,Object)
  nameWithType: ActivityMetadata.AddVariable(Variable,Object)
  fullName: System.Activities.ActivityMetadata.AddVariable(Variable,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje określoną zmienną do metadanych kolekcję zmiennych."
  syntax:
    content: public void AddVariable (System.Activities.Variable variable, object origin);
    parameters:
    - id: variable
      type: System.Activities.Variable
      description: "Zmienna do dodania."
    - id: origin
      type: System.Object
      description: "Punkt początkowy."
  overload: System.Activities.ActivityMetadata.AddVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)
  id: Bind(System.Activities.Argument,System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: Bind(Argument,RuntimeArgument)
  nameWithType: ActivityMetadata.Bind(Argument,RuntimeArgument)
  fullName: System.Activities.ActivityMetadata.Bind(Argument,RuntimeArgument)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Wiąże określonego <xref href=&quot;System.Activities.Argument&quot;> </xref> do określonego <xref href=&quot;System.Activities.RuntimeArgument&quot;> </xref>."
  syntax:
    content: public void Bind (System.Activities.Argument binding, System.Activities.RuntimeArgument argument);
    parameters:
    - id: binding
      type: System.Activities.Argument
      description: "<xref href=&quot;System.Activities.Argument&quot;> </xref> Do powiązania."
    - id: argument
      type: System.Activities.RuntimeArgument
      description: "<xref href=&quot;System.Activities.RuntimeArgument&quot;> </xref> Do powiązania."
  overload: System.Activities.ActivityMetadata.Bind*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.Environment
  id: Environment
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: Environment
  nameWithType: ActivityMetadata.Environment
  fullName: System.Activities.ActivityMetadata.Environment
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Pobiera działania <xref href=&quot;System.Activities.LocationReferenceEnvironment&quot;> </xref> argumenty, zmiennych, delegat argumentów lub symbole wprowadzone przez <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>."
  syntax:
    content: public System.Activities.LocationReferenceEnvironment Environment { get; }
    return:
      type: System.Activities.LocationReferenceEnvironment
      description: "Działania środowiska odwołanie lokalizacji argumenty, zmiennych, delegat argumentów lub symbole wprowadzone przez <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>."
  overload: System.Activities.ActivityMetadata.Environment*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ActivityMetadata.Equals(Object)
  fullName: System.Activities.ActivityMetadata.Equals(Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Określa, czy określony obiekt jest taki sam jak to wystąpienie metadanych."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określony obiekt jest taki sam, jak to wystąpienie metadanych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.ActivityMetadata.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection
  id: GetArgumentsWithReflection
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetArgumentsWithReflection()
  nameWithType: ActivityMetadata.GetArgumentsWithReflection()
  fullName: System.Activities.ActivityMetadata.GetArgumentsWithReflection()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Zwraca kolekcję argumentów uzyskany przy użyciu odbicia."
  remarks: "Ta metoda używa działania <xref:System.ComponentModel.TypeDescriptor>zbadanie wszystkich właściwości typu publicznego <xref:System.Activities.Argument>i zwraca je w kolekcji.</xref:System.Activities.Argument> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument> GetArgumentsWithReflection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}
      description: "Kolekcja argumentów."
  overload: System.Activities.ActivityMetadata.GetArgumentsWithReflection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetHashCode
  id: GetHashCode
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ActivityMetadata.GetHashCode()
  fullName: System.Activities.ActivityMetadata.GetHashCode()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Zwraca unikatowy identyfikator dla tego wystąpienia metadanych."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Liczba całkowita, która unikatowo identyfikuje to wystąpienie metadanych."
  overload: System.Activities.ActivityMetadata.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection
  id: GetImportedChildrenWithReflection
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetImportedChildrenWithReflection()
  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection()
  fullName: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Zwraca kolekcję importowanego obiektu podrzędnego działania za pomocą odbicia."
  remarks: "Ta metoda używa działania <xref:System.ComponentModel.TypeDescriptor>zbadanie wszystkich właściwości typu publicznego <xref:System.Activities.Activity>, lub `IList<T>` lub `ICollection<T>` gdzie `T` pochodną <xref:System.Activities.Activity>i zwraca je w kolekcji.</xref:System.Activities.Activity> </xref:System.Activities.Activity> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Activity> GetImportedChildrenWithReflection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Activity}
      description: "Kolekcja działań importowanego obiektu podrzędnego."
  overload: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection
  id: GetImportedDelegatesWithReflection
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetImportedDelegatesWithReflection()
  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection()
  fullName: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Zwraca kolekcję obiektów delegowanych za pomocą odbicia."
  remarks: "Ta metoda używa działania <xref:System.ComponentModel.TypeDescriptor>zbadanie wszystkich właściwości typu publicznego <xref:System.Activities.ActivityDelegate>, lub `IList<T>` lub `ICollection<T>` gdzie `T` pochodną <xref:System.Activities.ActivityDelegate>i zwraca je w kolekcji.</xref:System.Activities.ActivityDelegate> </xref:System.Activities.ActivityDelegate> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate> GetImportedDelegatesWithReflection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}
      description: "Kolekcja obiektów delegowanych."
  overload: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection
  id: GetVariablesWithReflection
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetVariablesWithReflection()
  nameWithType: ActivityMetadata.GetVariablesWithReflection()
  fullName: System.Activities.ActivityMetadata.GetVariablesWithReflection()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Zwraca kolekcję zmiennych za pomocą odbicia."
  remarks: "Ta metoda używa działania <xref:System.ComponentModel.TypeDescriptor>zbadanie wszystkich właściwości typu publicznego <xref:System.Activities.Variable>, lub `IList<T>` lub `ICollection<T>` gdzie `T` pochodną <xref:System.Activities.Variable>i zwraca je w kolekcji.</xref:System.Activities.Variable> </xref:System.Activities.Variable> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> GetVariablesWithReflection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}
      description: "Kolekcja zmiennych."
  overload: System.Activities.ActivityMetadata.GetVariablesWithReflection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.HasViolations
  id: HasViolations
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: HasViolations
  nameWithType: ActivityMetadata.HasViolations
  fullName: System.Activities.ActivityMetadata.HasViolations
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Pobiera wartość wskazującą, czy istnieją jakieś błędy sprawdzania poprawności w metadanych."
  syntax:
    content: public bool HasViolations { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli występują błędy sprawdzania poprawności; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.ActivityMetadata.HasViolations*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  id: op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: op_Equality(ActivityMetadata,ActivityMetadata)
  nameWithType: ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)
  fullName: System.Activities.ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Zwraca wartość wskazującą, czy dwa wystąpienia określonych metadanych są takie same."
  syntax:
    content: public static bool op_Equality (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);
    parameters:
    - id: left
      type: System.Activities.ActivityMetadata
      description: "Pierwszy element do porównania."
    - id: right
      type: System.Activities.ActivityMetadata
      description: "Drugi element do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dwa elementy są równe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.ActivityMetadata.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  id: op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: op_Inequality(ActivityMetadata,ActivityMetadata)
  nameWithType: ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)
  fullName: System.Activities.ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Zwraca wartość wskazującą, czy dwa wystąpienia określonych metadanych nie są takie same."
  syntax:
    content: public static bool op_Inequality (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);
    parameters:
    - id: left
      type: System.Activities.ActivityMetadata
      description: "Pierwszy element do porównania."
    - id: right
      type: System.Activities.ActivityMetadata
      description: "Drugi element do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dwa elementy nie są równe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.ActivityMetadata.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.RequireExtension(System.Type)
  id: RequireExtension(System.Type)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: RequireExtension(Type)
  nameWithType: ActivityMetadata.RequireExtension(Type)
  fullName: System.Activities.ActivityMetadata.RequireExtension(Type)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Określa, że działanie wymaga rozszerzenia określonego typu w czasie wykonywania."
  remarks: "Jeśli host nie zapewniają rozszerzenie określonego typu, uwierzytelnienie nie powiedzie się."
  syntax:
    content: public void RequireExtension (Type extensionType);
    parameters:
    - id: extensionType
      type: System.Type
      description: "Typ rozszerzenia."
  overload: System.Activities.ActivityMetadata.RequireExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.RequireExtension``1
  id: RequireExtension``1
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: RequireExtension()
  nameWithType: ActivityMetadata.RequireExtension()
  fullName: System.Activities.ActivityMetadata.RequireExtension()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: 'public void RequireExtension<T> () where T : class;'
    parameters: []
  overload: System.Activities.ActivityMetadata.RequireExtension<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})
  id: SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetArgumentsCollection(Collection<RuntimeArgument>)
  nameWithType: ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)
  fullName: System.Activities.ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje określony zbiór argumenty do argumentów działania."
  syntax:
    content: public void SetArgumentsCollection (System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument> arguments);
    parameters:
    - id: arguments
      type: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}
      description: "Argumenty do dodania."
  overload: System.Activities.ActivityMetadata.SetArgumentsCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})
  id: SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetImportedChildrenCollection(Collection<Activity>)
  nameWithType: ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)
  fullName: System.Activities.ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje określonej kolekcji jako działania importowanego obiektu podrzędnego działania."
  remarks: "To odpowiednik wywołania metody <xref:System.Activities.ActivityMetadata.AddImportedChild%2A>dla każdego elementu w kolekcji.</xref:System.Activities.ActivityMetadata.AddImportedChild%2A>"
  syntax:
    content: public void SetImportedChildrenCollection (System.Collections.ObjectModel.Collection<System.Activities.Activity> importedChildren);
    parameters:
    - id: importedChildren
      type: System.Collections.ObjectModel.Collection{System.Activities.Activity}
      description: "Działania do dodania."
  overload: System.Activities.ActivityMetadata.SetImportedChildrenCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})
  id: SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  nameWithType: ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  fullName: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje importowanych delegatów działania określonej kolekcji."
  remarks: "To odpowiednik wywołania metody <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A>dla każdego elementu w kolekcji.</xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A>"
  syntax:
    content: public void SetImportedDelegatesCollection (System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate> importedDelegates);
    parameters:
    - id: importedDelegates
      type: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}
      description: "Obiekty delegowane do dodania."
  overload: System.Activities.ActivityMetadata.SetImportedDelegatesCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})
  id: SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetValidationErrorsCollection(Collection<ValidationError>)
  nameWithType: ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)
  fullName: System.Activities.ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje określony zbiór błędy sprawdzania poprawności do zbierania metadanych błędy sprawdzania poprawności."
  syntax:
    content: public void SetValidationErrorsCollection (System.Collections.ObjectModel.Collection<System.Activities.Validation.ValidationError> validationErrors);
    parameters:
    - id: validationErrors
      type: System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError}
      description: "Wystąpiły błędy weryfikacji do dodania."
  overload: System.Activities.ActivityMetadata.SetValidationErrorsCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})
  id: SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetVariablesCollection(Collection<Variable>)
  nameWithType: ActivityMetadata.SetVariablesCollection(Collection<Variable>)
  fullName: System.Activities.ActivityMetadata.SetVariablesCollection(Collection<Variable>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Dodaje określony zbiór zmiennych do zmiennych działania."
  syntax:
    content: public void SetVariablesCollection (System.Collections.ObjectModel.Collection<System.Activities.Variable> variables);
    parameters:
    - id: variables
      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}
      description: "Zmienne do dodania."
  overload: System.Activities.ActivityMetadata.SetVariablesCollection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddArgument(RuntimeArgument)
  nameWithType: ActivityMetadata.AddArgument(RuntimeArgument)
  fullName: System.Activities.ActivityMetadata.AddArgument(RuntimeArgument)
- uid: System.Activities.RuntimeArgument
  parent: System.Activities
  isExternal: false
  name: RuntimeArgument
  nameWithType: RuntimeArgument
  fullName: System.Activities.RuntimeArgument
- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddDefaultExtensionProvider(Func<T>)
  nameWithType: ActivityMetadata.AddDefaultExtensionProvider(Func<T>)
  fullName: System.Activities.ActivityMetadata.AddDefaultExtensionProvider(Func<T>)
- uid: System.Func{T}
  parent: System
  isExternal: true
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedChild(Activity)
  nameWithType: ActivityMetadata.AddImportedChild(Activity)
  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedChild(Activity,Object)
  nameWithType: ActivityMetadata.AddImportedChild(Activity,Object)
  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedDelegate(ActivityDelegate)
  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate)
  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate)
- uid: System.Activities.ActivityDelegate
  parent: System.Activities
  isExternal: false
  name: ActivityDelegate
  nameWithType: ActivityDelegate
  fullName: System.Activities.ActivityDelegate
- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedDelegate(ActivityDelegate,Object)
  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)
  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)
- uid: System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddValidationError(ValidationError)
  nameWithType: ActivityMetadata.AddValidationError(ValidationError)
  fullName: System.Activities.ActivityMetadata.AddValidationError(ValidationError)
- uid: System.Activities.Validation.ValidationError
  parent: System.Activities.Validation
  isExternal: false
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Activities.Validation.ValidationError
- uid: System.Activities.ActivityMetadata.AddValidationError(System.String)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddValidationError(String)
  nameWithType: ActivityMetadata.AddValidationError(String)
  fullName: System.Activities.ActivityMetadata.AddValidationError(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddVariable(Variable)
  nameWithType: ActivityMetadata.AddVariable(Variable)
  fullName: System.Activities.ActivityMetadata.AddVariable(Variable)
- uid: System.Activities.Variable
  parent: System.Activities
  isExternal: false
  name: Variable
  nameWithType: Variable
  fullName: System.Activities.Variable
- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddVariable(Variable,Object)
  nameWithType: ActivityMetadata.AddVariable(Variable,Object)
  fullName: System.Activities.ActivityMetadata.AddVariable(Variable,Object)
- uid: System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Bind(Argument,RuntimeArgument)
  nameWithType: ActivityMetadata.Bind(Argument,RuntimeArgument)
  fullName: System.Activities.ActivityMetadata.Bind(Argument,RuntimeArgument)
- uid: System.Activities.Argument
  parent: System.Activities
  isExternal: false
  name: Argument
  nameWithType: Argument
  fullName: System.Activities.Argument
- uid: System.Activities.ActivityMetadata.Environment
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Environment
  nameWithType: ActivityMetadata.Environment
  fullName: System.Activities.ActivityMetadata.Environment
- uid: System.Activities.LocationReferenceEnvironment
  parent: System.Activities
  isExternal: false
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment
  fullName: System.Activities.LocationReferenceEnvironment
- uid: System.Activities.ActivityMetadata.Equals(System.Object)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Equals(Object)
  nameWithType: ActivityMetadata.Equals(Object)
  fullName: System.Activities.ActivityMetadata.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetArgumentsWithReflection()
  nameWithType: ActivityMetadata.GetArgumentsWithReflection()
  fullName: System.Activities.ActivityMetadata.GetArgumentsWithReflection()
- uid: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<RuntimeArgument>
  nameWithType: Collection<RuntimeArgument>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.RuntimeArgument>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.RuntimeArgument
    name: RuntimeArgument
    nameWithType: RuntimeArgument
    fullName: RuntimeArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.GetHashCode
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetHashCode()
  nameWithType: ActivityMetadata.GetHashCode()
  fullName: System.Activities.ActivityMetadata.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetImportedChildrenWithReflection()
  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection()
  fullName: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection()
- uid: System.Collections.ObjectModel.Collection{System.Activities.Activity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Activity>
  nameWithType: Collection<Activity>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Activity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetImportedDelegatesWithReflection()
  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection()
  fullName: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection()
- uid: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ActivityDelegate>
  nameWithType: Collection<ActivityDelegate>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.ActivityDelegate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.ActivityDelegate
    name: ActivityDelegate
    nameWithType: ActivityDelegate
    fullName: ActivityDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetVariablesWithReflection()
  nameWithType: ActivityMetadata.GetVariablesWithReflection()
  fullName: System.Activities.ActivityMetadata.GetVariablesWithReflection()
- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Variable>
  nameWithType: Collection<Variable>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Variable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Variable
    name: Variable
    nameWithType: Variable
    fullName: Variable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.HasViolations
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: HasViolations
  nameWithType: ActivityMetadata.HasViolations
  fullName: System.Activities.ActivityMetadata.HasViolations
- uid: System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: op_Equality(ActivityMetadata,ActivityMetadata)
  nameWithType: ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)
  fullName: System.Activities.ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)
- uid: System.Activities.ActivityMetadata
  parent: System.Activities
  isExternal: false
  name: ActivityMetadata
  nameWithType: ActivityMetadata
  fullName: System.Activities.ActivityMetadata
- uid: System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: op_Inequality(ActivityMetadata,ActivityMetadata)
  nameWithType: ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)
  fullName: System.Activities.ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)
- uid: System.Activities.ActivityMetadata.RequireExtension(System.Type)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: RequireExtension(Type)
  nameWithType: ActivityMetadata.RequireExtension(Type)
  fullName: System.Activities.ActivityMetadata.RequireExtension(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.ActivityMetadata.RequireExtension``1
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: RequireExtension()
  nameWithType: ActivityMetadata.RequireExtension()
  fullName: System.Activities.ActivityMetadata.RequireExtension()
- uid: System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetArgumentsCollection(Collection<RuntimeArgument>)
  nameWithType: ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)
  fullName: System.Activities.ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)
- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetImportedChildrenCollection(Collection<Activity>)
  nameWithType: ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)
  fullName: System.Activities.ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)
- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  nameWithType: ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  fullName: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)
- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetValidationErrorsCollection(Collection<ValidationError>)
  nameWithType: ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)
  fullName: System.Activities.ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)
- uid: System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationError>
  nameWithType: Collection<ValidationError>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Validation.ValidationError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Validation.ValidationError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Validation.ValidationError
    name: ValidationError
    nameWithType: ValidationError
    fullName: ValidationError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetVariablesCollection(Collection<Variable>)
  nameWithType: ActivityMetadata.SetVariablesCollection(Collection<Variable>)
  fullName: System.Activities.ActivityMetadata.SetVariablesCollection(Collection<Variable>)
- uid: System.Activities.ActivityMetadata.AddArgument*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddArgument
  nameWithType: ActivityMetadata.AddArgument
- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider<T>*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddDefaultExtensionProvider<T>
  nameWithType: ActivityMetadata.AddDefaultExtensionProvider<T>
- uid: System.Activities.ActivityMetadata.AddImportedChild*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedChild
  nameWithType: ActivityMetadata.AddImportedChild
- uid: System.Activities.ActivityMetadata.AddImportedDelegate*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedDelegate
  nameWithType: ActivityMetadata.AddImportedDelegate
- uid: System.Activities.ActivityMetadata.AddValidationError*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddValidationError
  nameWithType: ActivityMetadata.AddValidationError
- uid: System.Activities.ActivityMetadata.AddVariable*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddVariable
  nameWithType: ActivityMetadata.AddVariable
- uid: System.Activities.ActivityMetadata.Bind*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Bind
  nameWithType: ActivityMetadata.Bind
- uid: System.Activities.ActivityMetadata.Environment*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Environment
  nameWithType: ActivityMetadata.Environment
- uid: System.Activities.ActivityMetadata.Equals*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Equals
  nameWithType: ActivityMetadata.Equals
- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetArgumentsWithReflection
  nameWithType: ActivityMetadata.GetArgumentsWithReflection
- uid: System.Activities.ActivityMetadata.GetHashCode*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetHashCode
  nameWithType: ActivityMetadata.GetHashCode
- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetImportedChildrenWithReflection
  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection
- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetImportedDelegatesWithReflection
  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection
- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetVariablesWithReflection
  nameWithType: ActivityMetadata.GetVariablesWithReflection
- uid: System.Activities.ActivityMetadata.HasViolations*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: HasViolations
  nameWithType: ActivityMetadata.HasViolations
- uid: System.Activities.ActivityMetadata.op_Equality*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: op_Equality
  nameWithType: ActivityMetadata.op_Equality
- uid: System.Activities.ActivityMetadata.op_Inequality*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: op_Inequality
  nameWithType: ActivityMetadata.op_Inequality
- uid: System.Activities.ActivityMetadata.RequireExtension*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: RequireExtension
  nameWithType: ActivityMetadata.RequireExtension
- uid: System.Activities.ActivityMetadata.RequireExtension<T>*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: RequireExtension<T>
  nameWithType: ActivityMetadata.RequireExtension<T>
- uid: System.Activities.ActivityMetadata.SetArgumentsCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetArgumentsCollection
  nameWithType: ActivityMetadata.SetArgumentsCollection
- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetImportedChildrenCollection
  nameWithType: ActivityMetadata.SetImportedChildrenCollection
- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetImportedDelegatesCollection
  nameWithType: ActivityMetadata.SetImportedDelegatesCollection
- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetValidationErrorsCollection
  nameWithType: ActivityMetadata.SetValidationErrorsCollection
- uid: System.Activities.ActivityMetadata.SetVariablesCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetVariablesCollection
  nameWithType: ActivityMetadata.SetVariablesCollection
