### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcCommand
  id: OdbcCommand
  children:
  - System.Data.Odbc.OdbcCommand.#ctor
  - System.Data.Odbc.OdbcCommand.#ctor(System.String)
  - System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)
  - System.Data.Odbc.OdbcCommand.Cancel
  - System.Data.Odbc.OdbcCommand.CommandText
  - System.Data.Odbc.OdbcCommand.CommandTimeout
  - System.Data.Odbc.OdbcCommand.CommandType
  - System.Data.Odbc.OdbcCommand.Connection
  - System.Data.Odbc.OdbcCommand.CreateDbParameter
  - System.Data.Odbc.OdbcCommand.CreateParameter
  - System.Data.Odbc.OdbcCommand.DbConnection
  - System.Data.Odbc.OdbcCommand.DbParameterCollection
  - System.Data.Odbc.OdbcCommand.DbTransaction
  - System.Data.Odbc.OdbcCommand.DesignTimeVisible
  - System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)
  - System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.Odbc.OdbcCommand.ExecuteNonQuery
  - System.Data.Odbc.OdbcCommand.ExecuteReader
  - System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Odbc.OdbcCommand.ExecuteScalar
  - System.Data.Odbc.OdbcCommand.Parameters
  - System.Data.Odbc.OdbcCommand.Prepare
  - System.Data.Odbc.OdbcCommand.ResetCommandTimeout
  - System.Data.Odbc.OdbcCommand.System#ICloneable#Clone
  - System.Data.Odbc.OdbcCommand.Transaction
  - System.Data.Odbc.OdbcCommand.UpdatedRowSource
  langs:
  - csharp
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
  type: Class
  summary: "Reprezentuje instrukcję SQL lub procedurę składowaną można wykonać względem źródła danych. Ta klasa nie może być dziedziczona."
  remarks: "Klasa OdbcCommand udostępnia następujące metody wykonywania poleceń względem źródła danych: | Element | Opis elementu |   |----------|-----------------|   | <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>| Wykonuje polecenia, które zwracają wierszy. |   | <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>| Wykonuje polecenia, takich jak instrukcji SQL INSERT, DELETE, aktualizacji i zestawu. |   | <xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A>| Pobiera pojedynczą wartość, na przykład wartości zagregowanej, z bazy danych. |       Można resetować <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>Właściwości i ponowne użycie obiektu OdbcCommand.</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> Jednak należy zamknąć <xref:System.Data.Odbc.OdbcDataReader>przed wykonaniem polecenia nowy lub wcześniejszym.</xref:System.Data.Odbc.OdbcDataReader>       Jeśli wykonanie polecenia powoduje błąd krytyczny <xref:System.Data.Odbc.OdbcException>takich jak poziom ważności programu SQL Server, 20 lub więcej, <xref:System.Data.Odbc.OdbcConnection>mogą zamknąć.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcException> Jednak użytkownik może ponownie otworzyć połączenie i kontynuować."
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>.  \n  \n [!code-cs[Classic WebData OdbcCommand#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_0_1.cs)]\n [!code-vb[Classic WebData OdbcCommand#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class OdbcCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand()
  nameWithType: OdbcCommand.OdbcCommand()
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> klasy."
  remarks: "Podstawowy Konstruktor inicjuje wszystkie pola z wartościami domyślnymi. W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>| pusty ciąg (&quot;&quot;) |   | <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>| `Text`|   | <xref:System.Data.Odbc.OdbcCommand.Connection%2A>|null|</xref:System.Data.Odbc.OdbcCommand.Connection%2A></xref:System.Data.Odbc.OdbcCommand.CommandType%2A></xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A></xref:System.Data.Odbc.OdbcCommand.CommandText%2A>"
  syntax:
    content: public OdbcCommand ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand(String)
  nameWithType: OdbcCommand.OdbcCommand(String)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> klasy z tekstu zapytania."
  syntax:
    content: public OdbcCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "Tekst zapytania."
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  id: '#ctor(System.String,System.Data.Odbc.OdbcConnection)'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand(String,OdbcConnection)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> klasy tekst zapytania i <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> obiektu."
  syntax:
    content: public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "Tekst zapytania."
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> Obiekt, który reprezentuje połączenie ze źródłem danych."
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)
  id: '#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand(String,OdbcConnection,OdbcTransaction)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> klasy tekst zapytania, <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> obiekt i <xref:System.Data.Odbc.OdbcCommand.Transaction*>.</xref:System.Data.Odbc.OdbcCommand.Transaction*>"
  remarks: "W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia tej implementacji <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>| `Text`|   | <xref:System.Data.Odbc.OdbcCommand.Connection%2A>| Nowe <xref:System.Data.Odbc.OdbcConnection>to wartość `connection` parametru. |       Wartość jednego z tych parametrów można zmienić przez ustawienie właściwości pokrewnych.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcCommand.Connection%2A> </xref:System.Data.Odbc.OdbcCommand.CommandType%2A> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommand.CommandText%2A>"
  syntax:
    content: public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection, System.Data.Odbc.OdbcTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "Tekst zapytania."
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> Obiekt, który reprezentuje połączenie ze źródłem danych."
    - id: transaction
      type: System.Data.Odbc.OdbcTransaction
      description: "Transakcja, w którym <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> wykonuje."
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Cancel
  id: Cancel
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OdbcCommand.Cancel()
  fullName: System.Data.Odbc.OdbcCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Próbuje anulować wykonywanie <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>."
  remarks: "Jeśli nie ma nic do anulowania, nic się nie dzieje. Jednak jeśli jest poleceniem w procesie, a anulowania spróbuj kończy się niepowodzeniem, zostanie wygenerowany żaden wyjątek.       Aby anulować zapytania na jeden wątek, Anuluj musi zostać wywołany z innego wątku. Ponieważ nie można wykonać polecenia asynchronicznie <xref:System.Data.Odbc.OdbcCommand>, aby anulować polecenie z wątku innego jeden wątek musi być uruchomiona synchronicznie.</xref:System.Data.Odbc.OdbcCommand> Oznacza to, że <xref:System.Data.Odbc.OdbcCommand>obiekt musi być dostępny z obu wątków.</xref:System.Data.Odbc.OdbcCommand>"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CommandText
  id: CommandText
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OdbcCommand.CommandText
  fullName: System.Data.Odbc.OdbcCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera lub ustawia instrukcję SQL lub procedurę składowaną można wykonać względem źródła danych."
  remarks: "Gdy <xref:System.Data.IDbCommand.CommandType%2A>ma ustawioną wartość właściwości `StoredProcedure`, można ustawić właściwość CommandText przy użyciu sekwencji unikowych w standardowe procedury przechowywane ODBC.</xref:System.Data.IDbCommand.CommandType%2A> Ustawiając właściwość CommandText nazwę procedury składowanej nie działa, w przeciwieństwie do innych dostawców danych .NET Framework.       Wiele funkcji języka, takich jak sprzężenia zewnętrzne i wywołania funkcji skalarnych, zazwyczaj są implementowane przez źródła danych. Nawet składnia dla tych funkcji jest zazwyczaj specyficzne dla źródła danych. W związku z tym ODBC definiuje sekwencji unikowych, zawierających standardowe składnię następujące funkcje języka: funkcji skalarnych - literały Interwał daty, godziny, znaczników czasu i daty i godziny — przykład numeryczne, typ string i funkcje konwersji typu danych -, takich jak predykat ucieczki znaku - sprzężenia zewnętrzne - wywołań procedur sekwencji unikowej używane przez sterownik ODBC jest następująca: ```   {extension}   ``` tej sekwencji unikowej jest rozpoznawane i analizowane przez sterowników ODBC. One następnie Zastąp wszystkie sekwencje unikowe gramatyki specyficzne dla źródła danych.       Procedura jest obiekt pliku wykonywalnego przechowywane w źródle danych. Ogólnie rzecz biorąc jest instrukcji SQL, które zostały wstępnie skompilowana. Jest sekwencja wywoływania procedury ```   {[?=]call procedure-name[([parameter][,[parameter]]...)]}   ``` gdzie `procedure-name` Określa nazwę procedury i `parameter` określa parametr procedury.       Polecenie wykonuje tę procedurę składowaną podczas wywoływania jednej z metod wykonania (na przykład <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>lub <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).</xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       Nie można ustawić <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>i właściwości CommandText, jeśli bieżące połączenie jest wykonywanie operacji execute lub fetch.</xref:System.Data.Odbc.OdbcCommand.CommandType%2A> </xref:System.Data.Odbc.OdbcCommand.Connection%2A>       Dostawca ODBC.NET nie obsługuje parametrów nazwanych parametrów może być przekazywany do instrukcji SQL lub procedurę składowaną wywoływane przez <xref:System.Data.Odbc.OdbcCommand>podczas <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>ustawiono `Text`.</xref:System.Data.Odbc.OdbcCommand.CommandType%2A> </xref:System.Data.Odbc.OdbcCommand> W takim przypadku należy użyć symbolu zastępczego znak zapytania (?). Na przykład: ```   SELECT * FROM Customers WHERE CustomerID = ?   ``` z tego względu, w kolejności <xref:System.Data.Odbc.OdbcParameter>obiekty są dodawane do <xref:System.Data.Odbc.OdbcParameterCollection>bezpośrednio musi odpowiadać położenie znaku zapytania symbolu zastępczego dla parametru.</xref:System.Data.Odbc.OdbcParameterCollection> </xref:System.Data.Odbc.OdbcParameter>       Jeżeli parametr zawiera wartość null, .NET Framework Data Provider for ODBC nadal wiąże tego parametru, ale używa domyślnego parametru, jeśli została ona wcześniej zdefiniowana przy użyciu SQL_DEFAULT_PARAM, zamiast wartości null. Na przykład <xref:System.Data.Odbc.OdbcParameterCollection>: ```   {1, null, 2}   ``` przekazany Właściwość CommandText: ```   {call sp(?, ?, ?)}   ``` powoduje, że dostawca danych programu .NET Framework dla ODBC powiązanie pierwszy parametr na wartość 1, trzeci parametr do wartości 2, a drugi parametr jako SQL_DEFAULT_PARAM.</xref:System.Data.Odbc.OdbcParameterCollection> Jednak to zachowanie jest zależny od sterownika. Jeśli sterownik nie obsługuje tej funkcji, wystarczy nie przekazuj wartości dla parametru. Na przykład użyć <xref:System.Data.Odbc.OdbcParameterCollection>: ```   {1, 2}   ``` i ustaw właściwość CommandText do następującego: ```   {call sp(?, null, ?)}   ```       >  [!NOTE] > Jeśli parametr zostanie pominięty, nadal musi występować przecinkami oddzielającego go od innych parametrów.</xref:System.Data.Odbc.OdbcParameterCollection> W przypadku pominięcia parametru wejściowego lub wejścia/wyjścia, procedura używa wartość domyślna parametru. Innym sposobem określania jest domyślna wartość parametru wejściowego lub wejścia/wyjścia można ustawić wartości wskaźnika/długości buforu powiązany parametr SQL_DEFAULT_PARAM."
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "Instrukcję SQL lub procedurę składowaną do wykonania. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Data.Odbc.OdbcCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OdbcCommand.CommandTimeout
  fullName: System.Data.Odbc.OdbcCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera lub ustawia czas oczekiwania przed zakończeniem próby wykonania polecenia i wygenerowaniem błędu."
  remarks: "Wartość zero (0) określa nieograniczony czas oczekiwania, a nie czas oczekiwania i dlatego należy unikać."
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "Czas w sekundach oczekiwania na wykonanie polecenia. Wartość domyślna to 30 sekund."
  overload: System.Data.Odbc.OdbcCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CommandType
  id: CommandType
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OdbcCommand.CommandType
  fullName: System.Data.Odbc.OdbcCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera lub ustawia wartość wskazującą sposób <xref:System.Data.Odbc.OdbcCommand.CommandText*>Właściwości jest interpretowany.</xref:System.Data.Odbc.OdbcCommand.CommandText*>"
  remarks: "Jeśli dla właściwości CommandType jest równa `StoredProcedure`, należy ustawić <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>właściwości do pełnej składni wywołania ODBC.</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> Polecenie wykonywania tej procedury składowanej podczas wywoływania jednej z metod wykonania (na przykład <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>lub <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).</xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, CommandType i <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>nie można ustawić właściwości, jeśli bieżące połączenie jest wykonywanie operacji execute lub fetch.</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> </xref:System.Data.Odbc.OdbcCommand.Connection%2A>       .NET Framework Data Provider for ODBC nie obsługuje przekazywanie nazwane parametry instrukcji SQL lub procedurę składowaną wywoływane przez <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand> W obu przypadkach należy użyć symbolu zastępczego znak zapytania (?). Na przykład: ```   SELECT * FROM Customers WHERE CustomerID = ?   ``` w kolejności <xref:System.Data.Odbc.OdbcParameter>obiekty są dodawane do <xref:System.Data.Odbc.OdbcParameterCollection>bezpośrednio musi odpowiadać położenie znaku zapytania symbolu zastępczego dla parametru.</xref:System.Data.Odbc.OdbcParameterCollection> </xref:System.Data.Odbc.OdbcParameter>      > [!NOTE] > .NET Framework Data Provider for ODBC nie obsługuje <xref:System.Data.CommandType>ustawienie `TableDirect`.</xref:System.Data.CommandType>"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "Jeden z <xref href=&quot;System.Data.CommandType&quot;> </xref> wartości. Wartość domyślna to <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wartość nie jest prawidłowym <xref href=&quot;System.Data.CommandType&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Connection
  id: Connection
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OdbcCommand.Connection
  fullName: System.Data.Odbc.OdbcCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera lub ustawia <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> używane przez to wystąpienie <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>."
  remarks: "Nie można ustawić połączenia, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>, i <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>Właściwości, jeśli bieżące połączenie jest wykonywanie operacji execute lub fetch.</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> </xref:System.Data.Odbc.OdbcCommand.CommandType%2A>       Jeśli ustawisz połączenia, gdy transakcja jest w toku i <xref:System.Data.Odbc.OdbcCommand.Transaction%2A>właściwość nie jest zerowa, <xref:System.InvalidOperationException>jest generowany.</xref:System.InvalidOperationException> </xref:System.Data.Odbc.OdbcCommand.Transaction%2A> Jeśli ustawisz połączenia po zatwierdzeniu lub wycofane, transakcji i <xref:System.Data.Odbc.OdbcCommand.Transaction%2A>właściwość nie jest zerowa, <xref:System.Data.Odbc.OdbcCommand.Transaction%2A>właściwość jest następnie ustawiona na wartość null.</xref:System.Data.Odbc.OdbcCommand.Transaction%2A> </xref:System.Data.Odbc.OdbcCommand.Transaction%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcConnection Connection { get; set; }
    return:
      type: System.Data.Odbc.OdbcConnection
      description: "Połączenie ze źródłem danych. Wartość domyślna to wartość null."
  overload: System.Data.Odbc.OdbcCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Właściwość połączenia został zmieniony, gdy transakcja jest w toku."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OdbcCommand.CreateDbParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "Do dodania."
  overload: System.Data.Odbc.OdbcCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OdbcCommand.CreateParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> obiektu."
  remarks: "Metoda tworzenie jest silnie typizowaną wersję <xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcParameter
      description: "<xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> Obiektu."
  overload: System.Data.Odbc.OdbcCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DbConnection
  id: DbConnection
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OdbcCommand.DbConnection
  fullName: System.Data.Odbc.OdbcCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "Do dodania."
  overload: System.Data.Odbc.OdbcCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OdbcCommand.DbParameterCollection
  fullName: System.Data.Odbc.OdbcCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "Do dodania."
  overload: System.Data.Odbc.OdbcCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OdbcCommand.DbTransaction
  fullName: System.Data.Odbc.OdbcCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "Do dodania."
  overload: System.Data.Odbc.OdbcCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OdbcCommand.DesignTimeVisible
  fullName: System.Data.Odbc.OdbcCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera lub ustawia wartość wskazującą, czy obiekt polecenia powinny być widoczne w formancie dostosowany interfejs."
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: '**wartość true,**, jeśli obiekt polecenia powinny być widoczne w formancie; w przeciwnym razie **false**. Wartość domyślna to **true**.'
  overload: System.Data.Odbc.OdbcCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OdbcCommand.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Do dodania."
  overload: System.Data.Odbc.OdbcCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Do dodania."
    return:
      type: System.Data.Common.DbDataReader
      description: "Do dodania."
  overload: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OdbcCommand.ExecuteNonQuery()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Wykonuje instrukcję SQL przed <xref:System.Data.Odbc.OdbcCommand.Connection*>i zwraca liczbę uwzględnionych wierszy.</xref:System.Data.Odbc.OdbcCommand.Connection*>"
  remarks: "Można użyć elementu ExecuteNonQuery w celu wykonania operacji katalogu (na przykład podczas badania struktury bazy danych lub tworzenie obiektów bazy danych, takich jak tabele); lub aby zmienić dane w bazie danych, bez użycia <xref:System.Data.DataSet>, przez wykonywanie UPDATE, INSERT lub usunąć instrukcji.</xref:System.Data.DataSet>       ExecuteNonQuery służy również do wykonywania wielu instrukcji SQL, jeśli podstawowy sterownik ODBC obsługuje tę funkcję. W takim przypadku wartość zwracana jest liczba wierszy objętych wszystkie instrukcje w poleceniu.       Mimo że ExecuteNonQuery nie zwraca żadnych wierszy, parametrów wyjściowych ani wartości zwracanych mapowane na parametry są wypełniane przy użyciu danych.       Dla instrukcji UPDATE, INSERT i DELETE wartość zwracana jest liczba wierszy objętych polecenia. Dla wszystkich innych typów instrukcji wartość zwracana jest wartość -1. W przypadku wycofywania -1 jest również wartość zwracaną.       Gdy istnieje wyzwalacz w tabeli i dane są dodane lub zmienione w tabeli, zwracana wartość zawiera liczbę wierszy dotyczy zarówno operacja wstawiania lub aktualizacji oraz liczbę wierszy, wyzwalacza lub wyzwalaczy."
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "Dla instrukcji UPDATE, INSERT i DELETE wartość zwracana jest liczba wierszy objętych polecenia. Dla wszystkich innych typów instrukcji wartość zwracana jest wartość -1."
  overload: System.Data.Odbc.OdbcCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Połączenie nie istnieje.       - lub - połączenie nie jest otwarty."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OdbcCommand.ExecuteReader()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Wysyła <> </> *> do <> </> *> i tworzy <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref>."
  remarks: "Należy ustawić <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>właściwości do pełnej składni wywołania ODBC procedur składowanych.</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> Polecenie wykonuje tej procedury składowanej, gdy zostanie wywołana metoda ExecuteReader.       Gdy <xref:System.Data.Odbc.OdbcDataReader>jest używana, skojarzony <xref:System.Data.Odbc.OdbcConnection>jest zajęty, obsługująca <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcDataReader> W tym stanie, można wykonać nie innych operacji na <xref:System.Data.Odbc.OdbcConnection>inne niż zamykanie go.</xref:System.Data.Odbc.OdbcConnection> Dotyczy to sytuacji, dopóki <xref:System.Data.Odbc.OdbcDataReader.Close%2A>Metoda <xref:System.Data.Odbc.OdbcDataReader>jest wywoływana.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcDataReader.Close%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcDataReader
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> Obiektu."
  overload: System.Data.Odbc.OdbcCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Wysyła <> </> *> do <> </> *> i tworzy <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> przy użyciu jednej z <xref uid=&quot;langword_csharp_CommandBehavior&quot; name=&quot;CommandBehavior&quot; href=&quot;&quot;> </xref> wartości."
  remarks: "Jeśli planujesz instrukcji SQL, aby zwrócić tylko jeden wiersz, określając `SingleRow` jako <xref:System.Data.CommandBehavior>wartość może zwiększyć wydajność aplikacji.</xref:System.Data.CommandBehavior>       Należy ustawić <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>właściwości do pełnej składni wywołania ODBC procedur składowanych.</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> Polecenie wykonuje tę procedurę składowaną podczas wywoływania <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>.</xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       <xref:System.Data.Odbc.OdbcDataReader>Obsługuje specjalnym trybie, umożliwiającą dużej wartości binarne odczyt wydajnie.</xref:System.Data.Odbc.OdbcDataReader> Aby uzyskać więcej informacji, zobacz `SequentialAccess` ustawienie <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>      > [!NOTE] > `SequentialAccess` Wartość <xref:System.Data.CommandBehavior>jest bez ograniczania ustawienie; właśnie oznacza ma dostęp co najmniej sekwencyjny do <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.CommandBehavior> Na przykład, jeśli używasz sterownik ODBC programu SQL Server w `SequentialAccess` tryb, nadal można będzie przenosić do pierwszej kolumny <xref:System.Data.Odbc.OdbcDataReader>wiersz po przeczytania o innych kolumn sekwencyjnie.</xref:System.Data.Odbc.OdbcDataReader>       Gdy <xref:System.Data.Odbc.OdbcDataReader>jest używana, skojarzony <xref:System.Data.Odbc.OdbcConnection>jest zajęty, obsługująca <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcDataReader> W tym stanie, można wykonać nie innych operacji na <xref:System.Data.Odbc.OdbcConnection>inne niż zamykanie go.</xref:System.Data.Odbc.OdbcConnection> Jest to możliwe do czasu wywołania <xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=fullName>metody.</xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=fullName> Jeśli <xref:System.Data.Odbc.OdbcDataReader>jest tworzony z <xref:System.Data.CommandBehavior>ustawioną `CloseConnection`zamykanie <xref:System.Data.Odbc.OdbcDataReader>automatycznie zamyka połączenie.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.CommandBehavior> </xref:System.Data.Odbc.OdbcDataReader>"
  syntax:
    content: public System.Data.Odbc.OdbcDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Jeden z <xref uid=&quot;langword_csharp_System.Data.CommandBehavior&quot; name=&quot;System.Data.CommandBehavior&quot; href=&quot;&quot;> </xref> wartości."
    return:
      type: System.Data.Odbc.OdbcDataReader
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> Obiektu."
  overload: System.Data.Odbc.OdbcCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OdbcCommand.ExecuteScalar()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Wykonuje zapytanie i zwraca pierwszą kolumnę pierwszego wiersza w zestawie wyników zwróconych przez kwerendę. Dodatkowe kolumny lub wiersze są ignorowane."
  remarks: "Metoda ExecuteScalar można pobrać pojedynczą wartość (na przykład wartości zagregowanej) ze źródła danych. Wymaga to mniejsza ilość kodu niż przy użyciu <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>metody, a następnie wykonuje operacje wymagane do wygenerowania pojedynczą wartość z danych zwróconych przez <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "Ustaw pierwszą kolumnę pierwszego wiersza w wyniku, lub odwołanie o wartości null, jeśli zestaw wyników jest pusty."
  overload: System.Data.Odbc.OdbcCommand.ExecuteScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Parameters
  id: Parameters
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OdbcCommand.Parameters
  fullName: System.Data.Odbc.OdbcCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Gets the <xref href=&quot;System.Data.Odbc.OdbcParameterCollection&quot;></xref>."
  remarks: "Gdy <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>ma ustawioną wartość `Text`, dostawcy danych programu .NET Framework dla ODBC nie obsługuje przekazywanie nazwane parametry instrukcji SQL lub procedurę składowaną wywoływane przez <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand.CommandType%2A> W obu przypadkach należy użyć symbolu zastępczego znak zapytania (?). Na przykład: ```   SELECT * FROM Customers WHERE CustomerID = ?   ``` w kolejności <xref:System.Data.Odbc.OdbcParameter>obiekty są dodawane do <xref:System.Data.Odbc.OdbcParameterCollection>bezpośrednio musi odpowiadać położenie znaku zapytania symbolu zastępczego dla parametru w tekst polecenia.</xref:System.Data.Odbc.OdbcParameterCollection> </xref:System.Data.Odbc.OdbcParameter>      > [!NOTE] > Jeśli parametrów w kolekcji nie są zgodne z wymaganiami zapytania do wykonania, może spowodować błąd."
  syntax:
    content: public System.Data.Odbc.OdbcParameterCollection Parameters { get; }
    return:
      type: System.Data.Odbc.OdbcParameterCollection
      description: "Parametry instrukcji SQL lub procedury składowanej. Wartość domyślna to pustej kolekcji."
  overload: System.Data.Odbc.OdbcCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Prepare
  id: Prepare
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OdbcCommand.Prepare()
  fullName: System.Data.Odbc.OdbcCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Tworzy przygotowane lub skompilowanego wersja polecenia w źródle danych."
  remarks: "Metoda przygotowania wywołuje ODBC `SQLPrepare` funkcji. W zależności od możliwości podstawowy sterownik ODBC i źródła danych parametry, takie jak typy danych może być sprawdzona podczas przygotowywania instrukcji, wszystkie parametry został powiązany lub w przypadku uruchomienia, jeśli nie wszystkie parametry został powiązany. Maksymalna współdziałanie aplikacji należy usunąć powiązania wszystkich parametrów, które są stosowane do poprzednich instrukcji SQL przed przygotowaniem instrukcję SQL na tym samym <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand> Zapobiega to błędy, które są spowodowane przez poprzednie parametry są stosowane do nowych instrukcji SQL.       Jeśli wywołujesz wykonywanie metody po wywołaniu Prepare, wszystkie wartości parametru, które jest większa niż wartość określoną przez <xref:System.Data.Odbc.OdbcParameter.Size%2A>Właściwości automatycznie jest obcinana do oryginalnego rozmiaru określonego parametru, a nie są zwracane nie błędy obcięcie.</xref:System.Data.Odbc.OdbcParameter.Size%2A>       Dane wyjściowe parametrów (czy przygotowane lub nie) musi być typu danych określonego użytkownika. Jeśli określisz typu danych o zmiennej długości, należy również określić maksymalną <xref:System.Data.Odbc.OdbcParameter.Size%2A>.</xref:System.Data.Odbc.OdbcParameter.Size%2A>"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> Nie jest ustawiona.       -or-       The <>*> is not <xref:System.Data.Odbc.OdbcConnection.Open*>.</xref:System.Data.Odbc.OdbcConnection.Open*>"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OdbcCommand.ResetCommandTimeout()
  fullName: System.Data.Odbc.OdbcCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Resetuje <xref:System.Data.Odbc.OdbcCommand.CommandTimeout*>Właściwości na wartość domyślną.</xref:System.Data.Odbc.OdbcCommand.CommandTimeout*>"
  remarks: "Wartość domyślna <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>wynosi 30 sekund.</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcCommand.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.Odbc.OdbcCommand>wystąpienia jest rzutowane na <xref:InterfaceName>interfejsu.</xref:InterfaceName> </xref:System.Data.Odbc.OdbcCommand>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Nowy [T; System.Object](~/add/includes/ajax-current-ext-md.md) czyli kopię tego wystąpienia."
  overload: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Transaction
  id: Transaction
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OdbcCommand.Transaction
  fullName: System.Data.Odbc.OdbcCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera lub ustawia <xref href=&quot;System.Data.Odbc.OdbcTransaction&quot;> </xref> w ramach którego <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> wykonuje."
  remarks: "Nie można ustawić właściwości transakcji, jeśli jest już ustawiony na określoną wartość, a polecenie jest w trakcie wykonywania. Jeśli ustawiono właściwość transaction <xref:System.Data.Odbc.OdbcTransaction>obiektu, który nie jest podłączony do tej samej <xref:System.Data.Odbc.OdbcConnection>jako <xref:System.Data.Odbc.OdbcCommand>obiektu, zostanie wygenerowany wyjątek przy następnym uruchomieniu próby wykonania instrukcji.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcTransaction>"
  syntax:
    content: public System.Data.Odbc.OdbcTransaction Transaction { get; set; }
    return:
      type: System.Data.Odbc.OdbcTransaction
      description: "An <xref href=&quot;System.Data.Odbc.OdbcTransaction&quot;></xref>. Wartość domyślna to wartość null."
  overload: System.Data.Odbc.OdbcCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OdbcCommand.UpdatedRowSource
  fullName: System.Data.Odbc.OdbcCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Pobiera lub ustawia wartość określającą sposób **aktualizacji** metody powinny być stosowane wyników polecenia **DataRow**."
  remarks: "Wartość domyślna <xref:System.Data.UpdateRowSource>wartość jest **zarówno** chyba, że polecenia są generowane automatycznie, jak <xref:System.Data.Odbc.OdbcCommandBuilder>, w takim przypadku wartość domyślna to **Brak**.</xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.UpdateRowSource>       Aby uzyskać więcej informacji o sposobie używania właściwości przetwarzania wsadowego, zobacz [parametry element DataAdapter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "Jeden z <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> wartości."
  overload: System.Data.Odbc.OdbcCommand.UpdatedRowSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Odbc.OdbcCommand.#ctor
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand()
  nameWithType: OdbcCommand.OdbcCommand()
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand()
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand(String)
  nameWithType: OdbcCommand.OdbcCommand(String)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand(String,OdbcConnection)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand(String,OdbcConnection,OdbcTransaction)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
- uid: System.Data.Odbc.OdbcTransaction
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcTransaction
  nameWithType: OdbcTransaction
  fullName: System.Data.Odbc.OdbcTransaction
- uid: System.Data.Odbc.OdbcCommand.Cancel
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Cancel()
  nameWithType: OdbcCommand.Cancel()
  fullName: System.Data.Odbc.OdbcCommand.Cancel()
- uid: System.Data.Odbc.OdbcCommand.CommandText
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandText
  nameWithType: OdbcCommand.CommandText
  fullName: System.Data.Odbc.OdbcCommand.CommandText
- uid: System.Data.Odbc.OdbcCommand.CommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OdbcCommand.CommandTimeout
  fullName: System.Data.Odbc.OdbcCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcCommand.CommandType
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandType
  nameWithType: OdbcCommand.CommandType
  fullName: System.Data.Odbc.OdbcCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.Odbc.OdbcCommand.Connection
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Connection
  nameWithType: OdbcCommand.Connection
  fullName: System.Data.Odbc.OdbcCommand.Connection
- uid: System.Data.Odbc.OdbcCommand.CreateDbParameter
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OdbcCommand.CreateDbParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.Odbc.OdbcCommand.CreateParameter
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OdbcCommand.CreateParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateParameter()
- uid: System.Data.Odbc.OdbcParameter
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcParameter
  nameWithType: OdbcParameter
  fullName: System.Data.Odbc.OdbcParameter
- uid: System.Data.Odbc.OdbcCommand.DbConnection
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbConnection
  nameWithType: OdbcCommand.DbConnection
  fullName: System.Data.Odbc.OdbcCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Odbc.OdbcCommand.DbParameterCollection
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OdbcCommand.DbParameterCollection
  fullName: System.Data.Odbc.OdbcCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.Odbc.OdbcCommand.DbTransaction
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OdbcCommand.DbTransaction
  fullName: System.Data.Odbc.OdbcCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.Odbc.OdbcCommand.DesignTimeVisible
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OdbcCommand.DesignTimeVisible
  fullName: System.Data.Odbc.OdbcCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OdbcCommand.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcCommand.Dispose(Boolean)
- uid: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.Odbc.OdbcCommand.ExecuteNonQuery
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OdbcCommand.ExecuteNonQuery()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteNonQuery()
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OdbcCommand.ExecuteReader()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader()
- uid: System.Data.Odbc.OdbcDataReader
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcDataReader
  nameWithType: OdbcDataReader
  fullName: System.Data.Odbc.OdbcDataReader
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.Odbc.OdbcCommand.ExecuteScalar
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OdbcCommand.ExecuteScalar()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcCommand.Parameters
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Parameters
  nameWithType: OdbcCommand.Parameters
  fullName: System.Data.Odbc.OdbcCommand.Parameters
- uid: System.Data.Odbc.OdbcParameterCollection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcParameterCollection
  nameWithType: OdbcParameterCollection
  fullName: System.Data.Odbc.OdbcParameterCollection
- uid: System.Data.Odbc.OdbcCommand.Prepare
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Prepare()
  nameWithType: OdbcCommand.Prepare()
  fullName: System.Data.Odbc.OdbcCommand.Prepare()
- uid: System.Data.Odbc.OdbcCommand.ResetCommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OdbcCommand.ResetCommandTimeout()
  fullName: System.Data.Odbc.OdbcCommand.ResetCommandTimeout()
- uid: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcCommand.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcCommand.System.ICloneable.Clone()
- uid: System.Data.Odbc.OdbcCommand.Transaction
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Transaction
  nameWithType: OdbcCommand.Transaction
  fullName: System.Data.Odbc.OdbcCommand.Transaction
- uid: System.Data.Odbc.OdbcCommand.UpdatedRowSource
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OdbcCommand.UpdatedRowSource
  fullName: System.Data.Odbc.OdbcCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.Odbc.OdbcCommand.#ctor*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand.OdbcCommand
- uid: System.Data.Odbc.OdbcCommand.Cancel*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Cancel
  nameWithType: OdbcCommand.Cancel
- uid: System.Data.Odbc.OdbcCommand.CommandText*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandText
  nameWithType: OdbcCommand.CommandText
- uid: System.Data.Odbc.OdbcCommand.CommandTimeout*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OdbcCommand.CommandTimeout
- uid: System.Data.Odbc.OdbcCommand.CommandType*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandType
  nameWithType: OdbcCommand.CommandType
- uid: System.Data.Odbc.OdbcCommand.Connection*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Connection
  nameWithType: OdbcCommand.Connection
- uid: System.Data.Odbc.OdbcCommand.CreateDbParameter*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OdbcCommand.CreateDbParameter
- uid: System.Data.Odbc.OdbcCommand.CreateParameter*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OdbcCommand.CreateParameter
- uid: System.Data.Odbc.OdbcCommand.DbConnection*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbConnection
  nameWithType: OdbcCommand.DbConnection
- uid: System.Data.Odbc.OdbcCommand.DbParameterCollection*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OdbcCommand.DbParameterCollection
- uid: System.Data.Odbc.OdbcCommand.DbTransaction*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OdbcCommand.DbTransaction
- uid: System.Data.Odbc.OdbcCommand.DesignTimeVisible*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OdbcCommand.DesignTimeVisible
- uid: System.Data.Odbc.OdbcCommand.Dispose*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Dispose
  nameWithType: OdbcCommand.Dispose
- uid: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OdbcCommand.ExecuteDbDataReader
- uid: System.Data.Odbc.OdbcCommand.ExecuteNonQuery*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OdbcCommand.ExecuteNonQuery
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OdbcCommand.ExecuteReader
- uid: System.Data.Odbc.OdbcCommand.ExecuteScalar*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OdbcCommand.ExecuteScalar
- uid: System.Data.Odbc.OdbcCommand.Parameters*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Parameters
  nameWithType: OdbcCommand.Parameters
- uid: System.Data.Odbc.OdbcCommand.Prepare*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Prepare
  nameWithType: OdbcCommand.Prepare
- uid: System.Data.Odbc.OdbcCommand.ResetCommandTimeout*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OdbcCommand.ResetCommandTimeout
- uid: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcCommand.System.ICloneable.Clone
- uid: System.Data.Odbc.OdbcCommand.Transaction*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Transaction
  nameWithType: OdbcCommand.Transaction
- uid: System.Data.Odbc.OdbcCommand.UpdatedRowSource*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OdbcCommand.UpdatedRowSource
