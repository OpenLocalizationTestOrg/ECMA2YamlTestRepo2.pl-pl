### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.IBindingList
  id: IBindingList
  children:
  - System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.IBindingList.AddNew
  - System.ComponentModel.IBindingList.AllowEdit
  - System.ComponentModel.IBindingList.AllowNew
  - System.ComponentModel.IBindingList.AllowRemove
  - System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  - System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  - System.ComponentModel.IBindingList.IsSorted
  - System.ComponentModel.IBindingList.ListChanged
  - System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.IBindingList.RemoveSort
  - System.ComponentModel.IBindingList.SortDirection
  - System.ComponentModel.IBindingList.SortProperty
  - System.ComponentModel.IBindingList.SupportsChangeNotification
  - System.ComponentModel.IBindingList.SupportsSearching
  - System.ComponentModel.IBindingList.SupportsSorting
  langs:
  - csharp
  name: IBindingList
  nameWithType: IBindingList
  fullName: System.ComponentModel.IBindingList
  type: Interface
  summary: "Udostępnia funkcje wymagane do obsługi zarówno proste, jak i złożonych scenariuszy podczas wiązania ze źródłem danych."
  remarks: "Ten interfejs jest implementowany przez <xref:System.Data.DataView>klasę.</xref:System.Data.DataView> Implementacja metody powinny działać jak implementacja tej metody w <xref:System.Data.DataView>klasie.</xref:System.Data.DataView>       Podczas wywoływania <xref:System.ComponentModel.IBindingList.ApplySort%2A>lub <xref:System.ComponentModel.IBindingList.RemoveSort%2A>metody, należy wywołać <xref:System.ComponentModel.IBindingList.ListChanged>zdarzenie z <xref:System.ComponentModel.ListChangedType>wyliczenie.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> </xref:System.ComponentModel.IBindingList.RemoveSort%2A> </xref:System.ComponentModel.IBindingList.ApplySort%2A>       Podczas wywoływania <xref:System.ComponentModel.IBindingList.AddNew%2A>metody należy wywołać <xref:System.ComponentModel.IBindingList.ListChanged>zdarzenie z <xref:System.ComponentModel.ListChangedType>Wyliczenie wykonywania odpowiedni indeks.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> </xref:System.ComponentModel.IBindingList.AddNew%2A> Wiersz jest w stanie, gdzie naciśnięcie klawisza ESC <xref:System.Windows.Forms.DataGridView>formantu można usunąć nowy wiersz.</xref:System.Windows.Forms.DataGridView> Wywoływanie <xref:System.ComponentModel.IBindingList.ListChanged>zdarzenie z <xref:System.ComponentModel.ListChangedType>Wyliczenie drugi raz na wiersz wskazuje, że element jest teraz wiersza nie jest w stanie &quot;new&quot;.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged>       Usunięcie elementu lub wywołanie <xref:System.ComponentModel.IEditableObject.CancelEdit%2A>metody nowego wiersza (Jeśli wiersz który implementuje <xref:System.ComponentModel.IEditableObject>), należy wywołać <xref:System.ComponentModel.IBindingList.ListChanged>zdarzenie z <xref:System.ComponentModel.ListChangedType>Wyliczenie wykonywania odpowiedni indeks.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> </xref:System.ComponentModel.IEditableObject> </xref:System.ComponentModel.IEditableObject.CancelEdit%2A>"
  example:
  - "The following example provides a simple implementation of the IBindingList interface. The `CustomerList` class stores customer information in a list. This example assumes that you have used the `Customer` class that can be found in the example in the <xref:System.ComponentModel.IEditableObject> class.  \n  \n [!code-cs[Binding_Editable#2](~/add/codesnippet/csharp/t-system.componentmodel._23_1.cs)]\n [!code-cpp[Binding_Editable#2](~/add/codesnippet/cpp/t-system.componentmodel._23_1.cpp)]\n [!code-vb[Binding_Editable#2](~/add/codesnippet/visualbasic/t-system.componentmodel._23_1.vb)]"
  syntax:
    content: 'public interface IBindingList : System.Collections.IList'
  implements:
  - System.Collections.IList
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)
  id: AddIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AddIndex(PropertyDescriptor)
  nameWithType: IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Dodaje <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> indeksów używane do wyszukiwania."
  remarks: "Lista musi obsługiwać tę metodę. Jednak obsługa ta metoda może być nonoperation."
  syntax:
    content: public void AddIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> Do dodania do indeksów używane do wyszukiwania."
  overload: System.ComponentModel.IBindingList.AddIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AddNew
  id: AddNew
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AddNew()
  nameWithType: IBindingList.AddNew()
  fullName: System.ComponentModel.IBindingList.AddNew()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Dodaje nowy element do listy."
  remarks: "Ta metoda jest obsługiwana tylko wtedy, gdy <xref:System.ComponentModel.IBindingList.AllowNew%2A>jest `true`; w przeciwnym razie <xref:System.NotSupportedException>jest generowany.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.AllowNew%2A>       Implementacja tej metody oznacza, że <xref:System.ComponentModel.IBindingList>listy muszą zrozumieć typy obiektów, aby dodać do listy i muszą zrozumieć sposób utworzenia nowego wystąpienia tego typu.</xref:System.ComponentModel.IBindingList> Na przykład, jeśli masz kolekcję `myCustomer` obiekty i metody AddNew należy dodać nowy `myCustomer` obiekt do listy.      > [!NOTE] > Zastosowania obiektów na tej liście <xref:System.ComponentModel.IEditableObject>interfejsu, wywoływania <xref:System.ComponentModel.IEditableObject.CancelEdit%2A>Metoda należy odrzucić obiektu, nie dodać go do listy, jeśli obiekt został utworzony przy użyciu metody AddNew.</xref:System.ComponentModel.IEditableObject.CancelEdit%2A> </xref:System.ComponentModel.IEditableObject> Tylko można dodać obiektu do listy podczas <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName>Metoda jest wywoływana.</xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> W związku z tym należy sychronize obiekt i listy dokładnie.       Gdy ta metoda jest wywoływana, należy wywołać <xref:System.ComponentModel.IBindingList.ListChanged>zdarzenie z <xref:System.ComponentModel.ListChangedType>Wyliczenie wykonywania odpowiedni indeks.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> Wiersz jest w stanie w przypadku, gdy naciśnięcie klawisza Esc <xref:System.Windows.Forms.DataGridView>formantu można usunąć nowy wiersz.</xref:System.Windows.Forms.DataGridView> Wywoływanie <xref:System.ComponentModel.IBindingList.ListChanged>zdarzenie z <xref:System.ComponentModel.ListChangedType>Wyliczenie drugi raz na wiersz wskazuje, że element jest teraz normalny wiersz (nie w nowym stanie).</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged>"
  syntax:
    content: public object AddNew ();
    parameters: []
    return:
      type: System.Object
      description: "Element dodany do listy."
  overload: System.ComponentModel.IBindingList.AddNew*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.AllowNew*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.AllowNew*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AllowEdit
  id: AllowEdit
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AllowEdit
  nameWithType: IBindingList.AllowEdit
  fullName: System.ComponentModel.IBindingList.AllowEdit
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera czy można zaktualizować elementów na liście."
  syntax:
    content: public bool AllowEdit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Po aktualizacji elementów na liście; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.AllowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AllowNew
  id: AllowNew
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AllowNew
  nameWithType: IBindingList.AllowNew
  fullName: System.ComponentModel.IBindingList.AllowNew
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera informację, czy można dodać elementy do listy przy użyciu <xref:System.ComponentModel.IBindingList.AddNew*>.</xref:System.ComponentModel.IBindingList.AddNew*>"
  remarks: "Jeśli <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>lub <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName>jest `true`, ta właściwość zwraca `false`.</xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> </xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>"
  syntax:
    content: public bool AllowNew { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Po dodaniu elementów do listy przy użyciu <xref:System.ComponentModel.IBindingList.AddNew*>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IBindingList.AddNew*>"
  overload: System.ComponentModel.IBindingList.AllowNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AllowRemove
  id: AllowRemove
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AllowRemove
  nameWithType: IBindingList.AllowRemove
  fullName: System.ComponentModel.IBindingList.AllowRemove
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera informację, czy można usunąć elementy z listy, za pomocą <> </> *> lub <> </> *>."
  remarks: "Jeśli <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>lub <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName>jest `true`, ta właściwość zwraca `false`.</xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> </xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>      > [!NOTE] > Zwraca AllowRemove Jeśli `false` <xref:System.Collections.IList.Remove%2A?displayProperty=fullName>i <xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName>zgłosić <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName> </xref:System.Collections.IList.Remove%2A?displayProperty=fullName>"
  syntax:
    content: public bool AllowRemove { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Po usunięciu elementów z listy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.AllowRemove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  id: ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sortuje listę na podstawie <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> i <xref href=&quot;System.ComponentModel.ListSortDirection&quot;> </xref>."
  remarks: "Jeśli elementy są dodawane lub usuwane, te elementy są umieszczane w następującej kolejności sortowania.       Ta metoda jest obsługiwana, jeśli <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>jest `true`; w przeciwnym razie ta metoda zgłasza <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>"
  syntax:
    content: public void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection direction);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> Można sortować."
    - id: direction
      type: System.ComponentModel.ListSortDirection
      description: "Jeden z <xref href=&quot;System.ComponentModel.ListSortDirection&quot;> </xref> wartości."
  overload: System.ComponentModel.IBindingList.ApplySort*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  id: Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: Find(PropertyDescriptor,Object)
  nameWithType: IBindingList.Find(PropertyDescriptor,Object)
  fullName: System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca indeks wiersza, który zawiera dany <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  remarks: "Ta metoda wybierze pierwszy wiersz gdzie wartość `property` parametru jest równa wartości `key` parametru.       Ta metoda jest obsługiwana, jeśli <xref:System.ComponentModel.IBindingList.SupportsSearching%2A>jest `true`, w przeciwnym razie ta metoda zgłasza <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSearching%2A>"
  example:
  - "The following code example demonstrates how to implement the Find method.  \n  \n [!code-cs[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/csharp/03c83841-f554-4f60-86f9-_1.cs)]\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/visualbasic/03c83841-f554-4f60-86f9-_1.vb)]"
  syntax:
    content: public int Find (System.ComponentModel.PropertyDescriptor property, object key);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> Aby wyszukać."
    - id: key
      type: System.Object
      description: "Wartość `property` parametru do wyszukania."
    return:
      type: System.Int32
      description: "Indeks wiersza, który zawiera dany <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.Find*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSearching*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSearching*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.IsSorted
  id: IsSorted
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: IsSorted
  nameWithType: IBindingList.IsSorted
  fullName: System.ComponentModel.IBindingList.IsSorted
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera informacje, czy elementy na liście są sortowane."
  remarks: "Ta właściwość jest obsługiwana, jeśli <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>jest `true`; w przeciwnym razie ta właściwość zwraca <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>       Jeśli zwróci IsSorted `true`, elementy są dodawane lub usuwane kolejności sortowania."
  syntax:
    content: public bool IsSorted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <> </> *> została wywołana i <> </> *> nie została wywołana; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.IsSorted*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.ListChanged
  id: ListChanged
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: ListChanged
  nameWithType: IBindingList.ListChanged
  fullName: System.ComponentModel.IBindingList.ListChanged
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Występuje, gdy lista zmian lub element listy."
  remarks: "To zdarzenie jest wywoływane tylko wtedy, gdy <xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A>jest właściwość `true`.</xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A>"
  syntax:
    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;
    return:
      type: System.ComponentModel.ListChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  id: RemoveIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: RemoveIndex(PropertyDescriptor)
  nameWithType: IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Usuwa <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> z indeksy używane do wyszukiwania."
  remarks: "Lista musi obsługiwać tę metodę. Jednak obsługa ta metoda może być nonoperation."
  syntax:
    content: public void RemoveIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> Do usunięcia z indeksy używane do wyszukiwania."
  overload: System.ComponentModel.IBindingList.RemoveIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.RemoveSort
  id: RemoveSort
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: RemoveSort()
  nameWithType: IBindingList.RemoveSort()
  fullName: System.ComponentModel.IBindingList.RemoveSort()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Usuwa wszystkie sortowania stosowany przy użyciu <xref:System.ComponentModel.IBindingList.ApplySort*>.</xref:System.ComponentModel.IBindingList.ApplySort*>"
  remarks: "Ta właściwość jest obsługiwana, jeśli <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>jest `true`; w przeciwnym razie ta właściwość zwraca <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>       Podczas wywoływania tej metody należy wywołać <xref:System.ComponentModel.IBindingList.ListChanged>zdarzenie z <xref:System.ComponentModel.ListChangedType>wyliczenie.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged>"
  syntax:
    content: public void RemoveSort ();
    parameters: []
  overload: System.ComponentModel.IBindingList.RemoveSort*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SortDirection
  id: SortDirection
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SortDirection
  nameWithType: IBindingList.SortDirection
  fullName: System.ComponentModel.IBindingList.SortDirection
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera kierunek sortowania."
  remarks: "Ta właściwość jest obsługiwana, jeśli <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>jest `true`; w przeciwnym razie ta właściwość zwraca <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>"
  syntax:
    content: public System.ComponentModel.ListSortDirection SortDirection { get; }
    return:
      type: System.ComponentModel.ListSortDirection
      description: "Jeden z <xref href=&quot;System.ComponentModel.ListSortDirection&quot;> </xref> wartości."
  overload: System.ComponentModel.IBindingList.SortDirection*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SortProperty
  id: SortProperty
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SortProperty
  nameWithType: IBindingList.SortProperty
  fullName: System.ComponentModel.IBindingList.SortProperty
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> który jest używany do sortowania."
  remarks: "Ta właściwość jest obsługiwana, jeśli <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>jest `true`; w przeciwnym razie ta właściwość zwraca <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptor SortProperty { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> Który jest używany do sortowania."
  overload: System.ComponentModel.IBindingList.SortProperty*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SupportsChangeNotification
  id: SupportsChangeNotification
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SupportsChangeNotification
  nameWithType: IBindingList.SupportsChangeNotification
  fullName: System.ComponentModel.IBindingList.SupportsChangeNotification
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera czy <xref href=&quot;System.ComponentModel.IBindingList.ListChanged&quot;> </xref> zdarzenie jest zgłaszane, gdy zmienia się na liście zmienia lub element listy."
  remarks: "Obiekty na liście powiadomić listy po zmianie, więc może wiązać się z listy <xref:System.ComponentModel.IBindingList.ListChanged>zdarzeń.</xref:System.ComponentModel.IBindingList.ListChanged>"
  syntax:
    content: public bool SupportsChangeNotification { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.ComponentModel.IBindingList.ListChanged&quot;> </xref> zdarzenie jest wywoływane po zmianie listy lub zmianie elementu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.SupportsChangeNotification*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SupportsSearching
  id: SupportsSearching
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SupportsSearching
  nameWithType: IBindingList.SupportsSearching
  fullName: System.ComponentModel.IBindingList.SupportsSearching
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera informację, czy obsługuje listy, wyszukiwanie przy użyciu <xref:System.ComponentModel.IBindingList.Find*>metody.</xref:System.ComponentModel.IBindingList.Find*>"
  remarks: ''
  example:
  - "The following code example demonstrates how to implement the SupportsSearching property.  \n  \n [!code-cs[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/csharp/p-system.componentmodel._7_1.cs)]\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/visualbasic/p-system.componentmodel._7_1.vb)]"
  syntax:
    content: public bool SupportsSearching { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli obsługuje listy, wyszukiwanie przy użyciu <xref:System.ComponentModel.IBindingList.Find*>metody; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IBindingList.Find*>"
  overload: System.ComponentModel.IBindingList.SupportsSearching*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SupportsSorting
  id: SupportsSorting
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SupportsSorting
  nameWithType: IBindingList.SupportsSorting
  fullName: System.ComponentModel.IBindingList.SupportsSorting
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera czy listy obsługuje sortowanie."
  remarks: "Jeśli ta właściwość jest `true`, następnie <xref:System.ComponentModel.IBindingList.IsSorted%2A>, <xref:System.ComponentModel.IBindingList.SortProperty%2A>, <xref:System.ComponentModel.IBindingList.SortDirection%2A>, <xref:System.ComponentModel.IBindingList.ApplySort%2A>, i <xref:System.ComponentModel.IBindingList.RemoveSort%2A>są obsługiwane.</xref:System.ComponentModel.IBindingList.RemoveSort%2A> </xref:System.ComponentModel.IBindingList.ApplySort%2A> </xref:System.ComponentModel.IBindingList.SortDirection%2A> </xref:System.ComponentModel.IBindingList.SortProperty%2A> </xref:System.ComponentModel.IBindingList.IsSorted%2A>"
  syntax:
    content: public bool SupportsSorting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli na liście obsługuje sortowanie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.SupportsSorting*
  exceptions: []
  platform:
  - net462
references:
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddIndex(PropertyDescriptor)
  nameWithType: IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.IBindingList.AddNew
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddNew()
  nameWithType: IBindingList.AddNew()
  fullName: System.ComponentModel.IBindingList.AddNew()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.IBindingList.AllowEdit
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowEdit
  nameWithType: IBindingList.AllowEdit
  fullName: System.ComponentModel.IBindingList.AllowEdit
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IBindingList.AllowNew
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowNew
  nameWithType: IBindingList.AllowNew
  fullName: System.ComponentModel.IBindingList.AllowNew
- uid: System.ComponentModel.IBindingList.AllowRemove
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowRemove
  nameWithType: IBindingList.AllowRemove
  fullName: System.ComponentModel.IBindingList.AllowRemove
- uid: System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
- uid: System.ComponentModel.ListSortDirection
  parent: System.ComponentModel
  isExternal: false
  name: ListSortDirection
  nameWithType: ListSortDirection
  fullName: System.ComponentModel.ListSortDirection
- uid: System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: Find(PropertyDescriptor,Object)
  nameWithType: IBindingList.Find(PropertyDescriptor,Object)
  fullName: System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.IBindingList.IsSorted
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: IsSorted
  nameWithType: IBindingList.IsSorted
  fullName: System.ComponentModel.IBindingList.IsSorted
- uid: System.ComponentModel.IBindingList.ListChanged
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: ListChanged
  nameWithType: IBindingList.ListChanged
  fullName: System.ComponentModel.IBindingList.ListChanged
- uid: System.ComponentModel.ListChangedEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventHandler
  nameWithType: ListChangedEventHandler
  fullName: System.ComponentModel.ListChangedEventHandler
- uid: System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveIndex(PropertyDescriptor)
  nameWithType: IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
- uid: System.ComponentModel.IBindingList.RemoveSort
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveSort()
  nameWithType: IBindingList.RemoveSort()
  fullName: System.ComponentModel.IBindingList.RemoveSort()
- uid: System.ComponentModel.IBindingList.SortDirection
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortDirection
  nameWithType: IBindingList.SortDirection
  fullName: System.ComponentModel.IBindingList.SortDirection
- uid: System.ComponentModel.IBindingList.SortProperty
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortProperty
  nameWithType: IBindingList.SortProperty
  fullName: System.ComponentModel.IBindingList.SortProperty
- uid: System.ComponentModel.IBindingList.SupportsChangeNotification
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsChangeNotification
  nameWithType: IBindingList.SupportsChangeNotification
  fullName: System.ComponentModel.IBindingList.SupportsChangeNotification
- uid: System.ComponentModel.IBindingList.SupportsSearching
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSearching
  nameWithType: IBindingList.SupportsSearching
  fullName: System.ComponentModel.IBindingList.SupportsSearching
- uid: System.ComponentModel.IBindingList.SupportsSorting
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSorting
  nameWithType: IBindingList.SupportsSorting
  fullName: System.ComponentModel.IBindingList.SupportsSorting
- uid: System.ComponentModel.IBindingList.AddIndex*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddIndex
  nameWithType: IBindingList.AddIndex
- uid: System.ComponentModel.IBindingList.AddNew*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddNew
  nameWithType: IBindingList.AddNew
- uid: System.ComponentModel.IBindingList.AllowEdit*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowEdit
  nameWithType: IBindingList.AllowEdit
- uid: System.ComponentModel.IBindingList.AllowNew*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowNew
  nameWithType: IBindingList.AllowNew
- uid: System.ComponentModel.IBindingList.AllowRemove*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowRemove
  nameWithType: IBindingList.AllowRemove
- uid: System.ComponentModel.IBindingList.ApplySort*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: ApplySort
  nameWithType: IBindingList.ApplySort
- uid: System.ComponentModel.IBindingList.Find*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: Find
  nameWithType: IBindingList.Find
- uid: System.ComponentModel.IBindingList.IsSorted*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: IsSorted
  nameWithType: IBindingList.IsSorted
- uid: System.ComponentModel.IBindingList.RemoveIndex*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveIndex
  nameWithType: IBindingList.RemoveIndex
- uid: System.ComponentModel.IBindingList.RemoveSort*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveSort
  nameWithType: IBindingList.RemoveSort
- uid: System.ComponentModel.IBindingList.SortDirection*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortDirection
  nameWithType: IBindingList.SortDirection
- uid: System.ComponentModel.IBindingList.SortProperty*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortProperty
  nameWithType: IBindingList.SortProperty
- uid: System.ComponentModel.IBindingList.SupportsChangeNotification*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsChangeNotification
  nameWithType: IBindingList.SupportsChangeNotification
- uid: System.ComponentModel.IBindingList.SupportsSearching*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSearching
  nameWithType: IBindingList.SupportsSearching
- uid: System.ComponentModel.IBindingList.SupportsSorting*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSorting
  nameWithType: IBindingList.SupportsSorting
