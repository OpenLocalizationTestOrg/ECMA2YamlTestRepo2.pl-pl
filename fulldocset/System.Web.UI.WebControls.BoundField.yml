### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.BoundField
  id: BoundField
  children:
  - System.Web.UI.WebControls.BoundField.#ctor
  - System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  - System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.BoundField.CreateField
  - System.Web.UI.WebControls.BoundField.DataField
  - System.Web.UI.WebControls.BoundField.DataFormatString
  - System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  - System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  - System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.HeaderText
  - System.Web.UI.WebControls.BoundField.HtmlEncode
  - System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  - System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.BoundField.NullDisplayText
  - System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.BoundField.ReadOnly
  - System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  - System.Web.UI.WebControls.BoundField.ThisExpression
  - System.Web.UI.WebControls.BoundField.ValidateRequestMode
  - System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  langs:
  - csharp
  name: BoundField
  nameWithType: BoundField
  fullName: System.Web.UI.WebControls.BoundField
  type: Class
  summary: "Reprezentuje pole, które jest wyświetlana jako tekst w formancie powiązane z danymi."
  remarks: "Klasa elementu BoundField jest używany przez formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.GridView>i <xref:System.Web.UI.WebControls.DetailsView>) do wyświetlania wartości pola jako tekst.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Obiekt elementu BoundField są wyświetlane inaczej w zależności od kontrolki powiązania danych, w którym jest używana. Na przykład <xref:System.Web.UI.WebControls.GridView>kontrolka ma wyświetlać jako kolumny, obiekt elementu BoundField podczas <xref:System.Web.UI.WebControls.DetailsView>kontroli wyświetla go jako wiersz.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Aby określić pola do wyświetlenia w obiekcie elementu BoundField, ustaw <xref:System.Web.UI.WebControls.BoundField.DataField%2A>dla właściwości nazwy pola.</xref:System.Web.UI.WebControls.BoundField.DataField%2A> W polu wartość może być zakodowany w formacie HTML przed wyświetleniem przez ustawienie <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>właściwości `true`.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Można zastosować niestandardowy ciąg formatowania do wartości pola przez ustawienie <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>Właściwości.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Gdy <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>właściwość jest `true`, zostanie użyta wartość ciągu zakodowanego pola w ciągu formatu niestandardowego.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Domyślnie jest stosowany do wartości pola ciąg formatowania, tylko wtedy, gdy formant powiązany z danymi jest w trybie tylko do odczytu. Aby zastosować ciągu formatowania wartości wyświetlane, gdy formant powiązany z danymi jest w trybie edycji, ustaw <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>właściwości `true`.</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> Wartość pola ma wartość null, można wyświetlić niestandardowe podpis przez ustawienie <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>Właściwości.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> Obiekt elementu BoundField może również automatycznie przekonwertować pustego ciągu (&quot;&quot;) do pola przez ustawienie wartości do wartości null <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>właściwości `true`.</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>       Obiekt elementu BoundField w formancie powiązane z danymi można ukryć, ustawiając <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>właściwości `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> Aby zapobiec sytuacji, w której wartość pola są modyfikowane w trybie edycji, ustaw <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>właściwości `true`.</xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> W powiązanym z danymi kontroluje obsługujące Wstawianie rekordów (takich jak <xref:System.Web.UI.WebControls.DetailsView>kontroli), obiekt elementu BoundField można ukryć, ustawiając <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>właściwości `false`.</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> </xref:System.Web.UI.WebControls.DetailsView> Często jest to zrobić, jeśli chcesz ukryć automatycznie generowane pola klucza w trybie wstawiania.       Można dostosować w nagłówku i stopce sekcjach obiekt elementu BoundField. Aby wyświetlić podpisu w nagłówku lub stopce strony sekcjach, ustaw <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>lub <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>Właściwości, odpowiednio.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> Wyświetlanie tekstu w nagłówku sekcji, a nie można wyświetlić obrazu ustawiając <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>Właściwości.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> Sekcja nagłówka może być ukryte w obiekcie elementu BoundField przez ustawienie <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>właściwości `false`.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      > [!NOTE] > Niektóre formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.GridView>kontroli) można wyświetlić lub ukryć tylko sekcji cały nagłówek formantu.</xref:System.Web.UI.WebControls.GridView> Nie obsługują tych kontrolek powiązanych z danymi <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>Właściwości dla poszczególnych pól powiązania.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> Pokaż lub Ukryj sekcji całego nagłówka formantu powiązanego z danymi (jeśli jest dostępny), użyj formantu `ShowHeader` właściwości.       Możesz również dostosować wygląd obiektu elementu BoundField (kolor czcionki, kolor tła itd.) przez ustawienie właściwości stylu dla różnych części pola. W poniższej tabeli wymieniono właściwości inny styl.      | Właściwość style | Opis elementu |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| Ustawienia stylu dla kontrolki serwera sieci Web podrzędnych obiektu elementu BoundField. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| Ustawienia stylu stopce obiektu elementu BoundField. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| Ustawienia stylu dla sekcji nagłówka obiektu elementu BoundField. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| Ustawienia stylu dla elementów danych w obiekcie elementu BoundField. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to use a BoundField object to display the values of a field in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_236_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_236_1.aspx)]"
  syntax:
    content: 'public class BoundField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> klasy."
  remarks: "Ten konstruktor umożliwia inicjuje nowe wystąpienie <xref:System.Web.UI.WebControls.BoundField>klasy.</xref:System.Web.UI.WebControls.BoundField> Ten konstruktor jest często stosowany podczas dodawania pól do utworzony dynamicznie formantu powiązanego z danymi.       Dynamiczne dodawanie <xref:System.Web.UI.WebControls.BoundField>obiektu do formantu powiązanego z danymi, Utwórz nową <xref:System.Web.UI.WebControls.BoundField>obiekt, ustawienia swoich właściwości, a następnie dodaj go do kolekcji pól formantu powiązanego z danymi.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> Na przykład, jeśli używasz <xref:System.Web.UI.WebControls.GridView>kontrolować, Dodaj <xref:System.Web.UI.WebControls.BoundField>do obiektu <xref:System.Web.UI.WebControls.GridView.Columns%2A>kolekcji.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > Wprawdzie może dynamicznie dodać pól do formantu powiązanego z danymi, zdecydowanie zaleca się że pola można statycznie zadeklarowany i pokazywane lub ukryte, odpowiednio. Statycznie deklarowanie wszystkich pól zmniejsza rozmiar stan widoku formantu nadrzędnego powiązane z danymi."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[BoundFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_150_1.aspx)]\n [!code-vb[BoundFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_150_1.aspx)]"
  syntax:
    content: public BoundField ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy ciąg formatowania określone przez <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>właściwość jest stosowana do wartości pola, gdy kontrolki powiązania danych, który zawiera <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiekt jest w trybie edycji.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "Formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, i <xref:System.Web.UI.WebControls.GridView>) mają trybów wyświetlania, które umożliwiają użytkownikom do odczytu, edytować lub wstawiania rekordów.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> Domyślnie ten ciąg formatowania określony przez <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>właściwość jest stosowana do wartości pól tylko wtedy, gdy formant powiązany z danymi jest w trybie tylko do odczytu.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Aby zastosować ciągu formatowania wartości wyświetlane, gdy formant powiązany z danymi jest w trybie edycji, ustaw właściwość ApplyFormatInEditMode `true`.      > [!NOTE] > A <xref:System.Web.UI.WebControls.BoundField>obiektu nie są automatycznie usuwane formatowania po zaktualizowaniu pole w źródle danych.</xref:System.Web.UI.WebControls.BoundField> Jeśli nie chcesz formatowania wartości przechowywanej w ramach, konieczne będzie usunięcie formatowania programowo."
  example:
  - "The following code example demonstrates how to use the ApplyFormatInEditMode property to apply the formatting string to field values while a <xref:System.Web.UI.WebControls.GridView> control is in edit mode. The formatting is then programmatically removed before the value is updated in the data source.  \n  \n [!code-vb[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1333_1.aspx)]\n [!code-cs[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1333_1.aspx)]"
  syntax:
    content: public virtual bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zastosować ciąg formatowania do wartości pól w trybie edycji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą czy puste ciągi (&quot;&quot;) są automatycznie konwertowane do wartości null po zaktualizowaniu pole danych w źródle danych."
  remarks: "Czasami użytkownik może wprowadzić pustego ciągu dla wartości pola podczas aktualizowania i wstawiania rekordów. Właściwość ConvertEmptyStringToNull umożliwia określenie, czy wartość pustego ciągu jest automatycznie konwertowany na wartość null, po zaktualizowaniu pole danych w źródle danych.      > [!NOTE] > Domyślnie <xref:System.Web.UI.WebControls.BoundField>obiekt wyświetla wartości null jako puste ciągi.</xref:System.Web.UI.WebControls.BoundField> Aby wyświetlić inną wartość, należy ustawić <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>Właściwości.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the ConvertEmptyStringToNull property to specify that an empty string (\"\") field value should automatically be converted to null.  \n  \n [!code-vb[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1108_1.aspx)]\n [!code-cs[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1108_1.aspx)]"
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby dokonać automatycznej konwersji wartości pustego ciągu do wartości null. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Kopiuje właściwości bieżącego <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiektu do określonego <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> obiektu."
  remarks: "Metoda CopyProperties jest używana przez metodę Pomocnika <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>metodę, aby skopiować właściwości bieżącego <xref:System.Web.UI.WebControls.BoundField>do obiektu <xref:System.Web.UI.WebControls.DataControlField>obiektu utworzonego przez metodę.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> Można skopiować właściwości bieżącego <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> do."
  overload: System.Web.UI.WebControls.BoundField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tworzy pustą <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiektu."
  remarks: "Metoda CreateField jest używana przez metodę Pomocnika <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>metodę, aby utworzyć pustą <xref:System.Web.UI.WebControls.BoundField>obiekt, aby skopiować właściwości bieżącego <xref:System.Web.UI.WebControls.BoundField>do obiektu.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "An empty <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>."
  overload: System.Web.UI.WebControls.BoundField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataField
  id: DataField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia nazwę pola danych, aby powiązać <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiektu."
  remarks: "Umożliwia określenie nazwy pola danych, aby powiązać właściwość DataField <xref:System.Web.UI.WebControls.BoundField>obiektu.</xref:System.Web.UI.WebControls.BoundField> Wartości określonego pola są wyświetlane w <xref:System.Web.UI.WebControls.BoundField>obiekt jako tekst.</xref:System.Web.UI.WebControls.BoundField> Opcjonalnie można sformatować tekstu wyświetlanego przez ustawienie <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>Właściwości.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>      > [!NOTE] > Jeśli pole ma wartość null, pustym ciągiem (&quot;&quot;) jest domyślnie wyświetlany dla wartości. Aby określić alternatywne podpis, ustaw <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>Właściwości.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the DataField property to specify which field to display in a <xref:System.Web.UI.WebControls.BoundField> field column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_680_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_680_1.aspx)]"
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "Nazwa pola danych, aby powiązać <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.UI.WebControls.BoundField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  id: DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia ciąg, który określa format wyświetlania wartości pola."
  remarks: "Umożliwia określenie niestandardowych formatów wyświetlania wartości, które są wyświetlane w właściwości DataFormatString <xref:System.Web.UI.WebControls.BoundField>obiektu.</xref:System.Web.UI.WebControls.BoundField> Jeśli nie ustawiono właściwości DataFormatString, wartość w polu jest wyświetlana bez żadnego formatowania.      > [!NOTE] > W wersjach programu starszych niż 3.5 należy ustawić <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>właściwości `false` Aby sformatować pola, które są nie ciągu typów danych.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> W przeciwnym razie wartość pola jest konwertowana na ciąg przez domyślną metodą konwersji przed zastosowaniem ciąg formatu, który jest przechowywana we właściwości DataFormatString.       Domyślnie formatowania ciągu jest zastosowane do wartości pola tylko wtedy, gdy formant powiązany z danymi, który zawiera <xref:System.Web.UI.WebControls.BoundField>obiekt jest w trybie tylko do odczytu.</xref:System.Web.UI.WebControls.BoundField> Aby zastosować ciągu formatowania wartości pól w trybie edycji, ustaw <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>właściwości `true`.</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>       Ciąg formatowania może być dowolnym ciągiem literału i zwykle zawiera symbol zastępczy wartości pola. Na przykład w ciągu formatowania `Item Value: {0}`, wartość pola zastępuje symbol zastępczy {0} wyświetlania ciąg <xref:System.Web.UI.WebControls.BoundField>obiektu.</xref:System.Web.UI.WebControls.BoundField> Pozostała część ciągu formatowania jest wyświetlany jako zwykły tekst.       Jeśli ciąg formatowania nie zawiera symbol zastępczy, tylko sam ciąg formatowania znajduje się w końcowym wyświetlany tekst (wartość w polu ze źródła danych jest niedostępna). Jeśli symbol zastępczy jest 0 (zero), ujętą w nawiasy klamrowe, jak pokazano w poprzednim przykładzie, wartość pola jest konwertowana na ciąg przez domyślną metodą. Możesz dołączyć do zera ciąg, który określa sposób formatowania wartości pola. Na przykład symbol zastępczy `{0:C}` dla pola numerycznego Określa, czy wartości pola powinny być konwertowane na formacie waluty.       Zostanie sformatowany przy użyciu <xref:System.String.Format%2A>metody.</xref:System.String.Format%2A> Liczba, która wykonuje lewy nawias klamrowy jest częścią składnia wykorzystywana przez tę metodę i wskazuje, które z nich szereg wartości należy użyć symbolu zastępczego. Ponieważ istnieje tylko jedna wartość pola w każdej komórce, numer znajdujący się po lewej stronie nawias klamrowy można ustawić tylko na 0.       W poniższej tabeli wymieniono standardowych znaków format pól liczbowych. Te znaki format nie jest rozróżniana, z wyjątkiem `X`, który zawiera znaki szesnastkowe w przypadku, gdy jest określona. Można dołączyć liczbą większości znaków formatu, aby określić liczbę cyfr znaczących lub miejsc dziesiętnych mają być wyświetlane.      > [!NOTE] > W większości przypadków formatowania zależy od ustawienia kulturowe serwera. Przykłady dla ustawienie kultury `en-US`.      | Format znak | Opis elementu | Przykład |   |----------------------|-----------------|-------------|   | `C` or `c`| Wyświetla wartości liczbowe w formacie waluty. Można określić liczbę miejsc dziesiętnych. | Format:`{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Format:`{0:C3}`<br /><br /> 123.456-> $123.456 |   | `D` or `d`| Wyświetla całkowitą wartości w formacie dziesiętnym. Można określić liczbę miejsc po przecinku. (Mimo że typ jest nazywany &quot;decimal&quot;, numery są sformatowane jako liczby całkowite). | Format:`{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Format:`{0:D6}`<br /><br /> 1234-> 001234 |   | `E` or `e`| Wyświetla wartości liczbowe w naukowych formacie (wykładnicza). Można określić liczbę miejsc dziesiętnych. | Format:`{0:E}`<br /><br /> 1052.0329112756-> 1.052033E + 003<br /><br /> Format:`{0:E2}`<br /><br /> -1052.0329112756-> -&1;.05e +&003; |   | `F` or `f`| Wyświetla wartości liczbowe w formacie. Można określić liczbę miejsc dziesiętnych. | Format:`{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Format:`{0:F3}`<br /><br /> 1234.567-> 1234.567 |   | `G` or `g`| Wyświetla wartości liczbowe w formacie Ogólne (najbardziej kompaktowe notacji stałoprzecinkowej lub naukowych). Można określić liczbę cyfr znaczących. | Format:`{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Format:`{0:G2}`<br /><br /> -123.456-> wartość -120 |   | `N` or `n`| Wyświetla wartości liczbowe w formacie liczby (w tym separatorów grup i opcjonalnie znaku minus). Można określić liczbę miejsc dziesiętnych. | Format:`{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Format:`{0:N4}`<br /><br /> 1234.567-> 1,234.5670 |   | `P` or `p`| Wyświetla wartości liczbowe w formacie procent. Można określić liczbę miejsc dziesiętnych. | Format:`{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Format:`{0:P1}`<br /><br /> .5-> 50.0% | | `R` or `r`| Wyświetla <xref:System.Single>, <xref:System.Double>, lub `BigInteger` wartości w formacie błądzenia. | Format: `{0:R}`</xref:System.Double></xref:System.Single><br /><br /> 123456789.12345678-> 123456789.12345678 |   | `X` or `x`| Wyświetla całkowitą wartości w formacie szesnastkowym. Można określić liczbę miejsc po przecinku. | Format:`{0:X}`<br /><br /> 255-> FF<br /><br /> Format:`{0:x4}`<br /><br /> 255-> 00ff |       Aby uzyskać więcej informacji oraz przykłady pokazujące, formatowanie wartości innych kultury, zobacz [standardowe ciągi formatu liczbowego](~/add/includes/ajax-current-ext-md.md). Można również utworzyć niestandardowe ciągi formatujące liczby. Aby uzyskać więcej informacji, zobacz [niestandardowe ciągi formatów liczbowych](~/add/includes/ajax-current-ext-md.md).       W poniższej tabeli wymieniono znaków format <xref:System.DateTime>pól.</xref:System.DateTime> Większość tych formatowania specyfikacje spowodować różne wyniki, w zależności od ustawienia kultury. Przykłady dla <xref:System.DateTime>wartość 2009-6-15 1:45:30 będzie ustawienie kultury `en-US`.</xref:System.DateTime>      | Format znak | Opis elementu | Przykład |   |----------------------|-----------------|-------------|   | `d`| Wzorzec krótkiej daty. | Format:`{0:d}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE-> 2009-6-15 |   | `D`| Wzorzec daty długiej. | Format:`{0:D}`<br /><br /> 2009-6-15 1:45:30 będzie-> poniedziałek, 15 czerwca 2009 |   | `f`| Wzorzec pełne daty/godziny (krótki czas). | Format:`{0:f}`<br /><br /> 2009-6-15 1:45:30 będzie-> poniedziałek, 15 czerwca 2009 1:45 PM |   | `F`| Wzorzec pełne daty/godziny (długo). | Format:`{0:F}`<br /><br /> 2009-6-15 1:45:30 będzie-> poniedziałek, 15 czerwca 2009 1:45:30 będzie |   | `g`| Wzorzec ogólne daty/godziny (krótki czas). | Format:`{0:g}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE-> 2009-6-15 1:45 PM |   | `G`| Wzorzec ogólne daty/godziny (długo). | Format:`{0:G}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE-> 2009-6-15 1:45:30 BĘDZIE |   | `M` or `m`| Wzorzec miesiąc/dzień. | Format:`{0:M}`<br /><br /> 2009-6-15 1:45:30 będzie-> 15 czerwca |   | `O` or `o`| Wyrównana wzorzec daty/godziny. | Format:`{0:o}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE-> 2009-06-15T13:45:30.0900000 |   | `R` or `r`| Wzorzec RFC1123 (Aby uzyskać informacje, zobacz <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName>). | Format: `{0:R}` </xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName><br /><br /> 2009-6-15 1:45:30 będzie-> pon, 15 cze 2009 20:45:30 GMT |   | `s`| Wzorzec można sortować daty/godziny. | Format:`{0:s}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE-> 2009-06-15T13:45:30 |   | `t`| Wzorzec krótki czas. | Format:`{0:t}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE-> 1:45 PM |   | `T`| Długi czas wzorzec. | Format:`{0:T}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE-> 1:45:30 BĘDZIE |   | `u`| Wzorzec uniwersalnych sortowanie daty/godziny. | Format:`{0:u}`<br /><br /> 2009-6-15 1:45:30 BĘDZIE-> 2009-06-15 20:45:30Z |   | `U`| Wzorzec uniwersalny pełny daty/godziny. | Format:`{0:U}`<br /><br /> 2009-6-15 1:45:30 będzie-> poniedziałek, 15 czerwca 2009 8:45:30 będzie |   | `Y` or `y`| Wzorzec miesiąc roku. | Format:`{0:Y}`<br /><br /> 2009-6-15 czerwca 2009-> 1:45:30 będzie |       Aby uzyskać więcej informacji oraz przykłady pokazujące, formatowanie wartości innych kultury, zobacz [standardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md). Można również utworzyć niestandardowe ciągi daty i godziny format. Aby uzyskać więcej informacji, zobacz [niestandardowe ciągi daty i godziny Format](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191889).  \n  \n The following example shows how to use the DataFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows one row of the output that is produced by this example.  \n  \n|ProductID|Name|ProductNumber|ListPrice|Weight|ModifiedDate|  \n|---------------|----------|-------------------|---------------|------------|------------------|  \n|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|"
  syntax:
    content: public virtual string DataFormatString { get; set; }
    return:
      type: System.String
      description: "Ciąg formatowania, który określa format wyświetlania wartości pola. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że specjalne formatowanie nie jest stosowane do wartości pola."
  overload: System.Web.UI.WebControls.BoundField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Wstawia określony &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; obiektu z wartości z określonego <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> obiektu."
  remarks: "Metoda ExtractValuesFromCell stanowi wygodny sposób pobierania wartości pól z określonego <xref:System.Web.UI.WebControls.TableCell>obiektu w <xref:System.Web.UI.WebControls.BoundField>obiektu.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell>      > [!NOTE] > Ta metoda jest używana głównie przez deweloperów formantu.       Ta metoda nie ma wartości zwracanej. Zamiast tego wartości pól są zwracane przez odwołanie za pośrednictwem <xref:System.Collections.IDictionary?displayProperty=fullName>przekazano obiekt `dictionary` parametru.</xref:System.Collections.IDictionary?displayProperty=fullName> Po wywołaniu metody iterację <xref:System.Collections.IDictionary?displayProperty=fullName>obiekt, aby uzyskać dostęp do wartości pola.</xref:System.Collections.IDictionary?displayProperty=fullName>      > [!NOTE] > Jeśli <xref:System.Web.UI.WebControls.TableCell>obiektu zawiera wartości pola tylko do odczytu, należy przekazać w `true` dla `includeReadOnly` parametr, aby uwzględnić te wartości.</xref:System.Web.UI.WebControls.TableCell>"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "A &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; używany do przechowywania wartości określonej komórki."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> Zawierający wartości do pobrania."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> wartości."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby uwzględnić wartości pola tylko do odczytu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  id: FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Formatuje wartość określonego pola dla komórki w <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiektu."
  remarks: "Metoda FormatDataValue jest używany do transformacji wartości pola formacie określonym przez metodę Pomocnika <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>Właściwości.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Jeśli pole ma wartość null, wartość <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>zwracana jest właściwość.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>      > [!NOTE] > Ta metoda jest używana głównie przez deweloperów formantu."
  syntax:
    content: protected virtual string FormatDataValue (object dataValue, bool encode);
    parameters:
    - id: dataValue
      type: System.Object
      description: "Wartość pola do formatowania."
    - id: encode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>do kodowania wartości; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Wartość pola skonwertowany do formatu określona przez <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  overload: System.Web.UI.WebControls.BoundField.FormatDataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  id: GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera wartość używaną do wartości pola podczas renderowania <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiektu w projektancie."
  remarks: "Metoda GetDesignTimeValue jest używane do określania, jaka wartość ma być wyświetlany dla pola podczas renderowania metody pomocnika <xref:System.Web.UI.WebControls.BoundField>obiektu w projektancie.</xref:System.Web.UI.WebControls.BoundField> Jeśli nie można pobrać rzeczywistym danych ze źródła danych w czasie projektowania, zamiast niego wyświetlony wartość zwrócona przez tę metodę.      > [!NOTE] > Ta metoda jest używana głównie przez deweloperów formantu."
  syntax:
    content: protected virtual object GetDesignTimeValue ();
    parameters: []
    return:
      type: System.Object
      description: "Zostaną wyświetlone w projektancie, jak wartość w polu wartość."
  overload: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  id: GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera wartość pola powiązane z <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiektu."
  remarks: "GetValue — metoda to metoda pomocnika używany w celu określenia wartości pola. Jeśli <xref:System.Web.UI.WebControls.BoundField>obiektu jest wyświetlany za pomocą projektanta i nie można ustalić wartości pola w czasie projektowania, wartość zwracana z <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>metody jest zwracana zamiast wartości rzeczywistych pola.</xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> </xref:System.Web.UI.WebControls.BoundField>      > [!NOTE] > Ta metoda jest używana głównie przez deweloperów formantu."
  syntax:
    content: protected virtual object GetValue (System.Web.UI.Control controlContainer);
    parameters:
    - id: controlContainer
      type: System.Web.UI.Control
      description: "Kontener dla wartości pola."
    return:
      type: System.Object
      description: "Wartość pola powiązane z <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.GetValue*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The container specified by the <code>controlContainer</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The container specified by the <code>controlContainer</code> parameter does not have a data item.  \n  \n \\- or -  \n  \n The data field was not found."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia tekst, który jest wyświetlany w nagłówku formantu danych."
  remarks: "Właściwość HeaderText umożliwia zidentyfikowanie pola w formancie danych o przyjaznej nazwie. Najbardziej typowe zastosowania właściwość HeaderText jest zapewnienie nazwy kolumn łatwy do rozpoznania na pola powiązane z danymi w <xref:System.Web.UI.WebControls.GridView>lub <xref:System.Web.UI.WebControls.DetailsView>kontroli.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "Tekst wyświetlany w nagłówku formantu danych. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.BoundField.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy wartości pól są kodowany w formacie HTML przed są wyświetlane w <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiektu."
  remarks: "Use the HtmlEncode property to specify whether field values are HTML-encoded to their respective string representations before they are displayed in a <xref:System.Web.UI.WebControls.BoundField> object. For example, if this property is `true`, a string value of \"\\<script>\" would be rendered as \"&lt;script&gt;\". If this property is `false`, the string would be rendered unchanged.  \n  \n> [!NOTE]\n>  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed. This property should be enabled whenever possible."
  example:
  - "The following code example demonstrates how to use the HtmlEncode property to prevent field values from being HTML-encoded before being displayed in a <xref:System.Web.UI.WebControls.BoundField> object.  \n  \n [!code-cs[BoundFieldHtmlEncode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_606_1.aspx)]\n [!code-vb[BoundFieldHtmlEncode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_606_1.aspx)]"
  syntax:
    content: public virtual bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartości pól są kodowany w formacie HTML przed są wyświetlane w <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiektu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  id: HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy tekst utworzony przez zastosowanie <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>właściwości <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> wartość powinna być kodowania pojawi się HTML.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "HTML-encoding values can help prevent cross-site scripting attacks and malicious content from being displayed. HTML encoding is also useful when you want to display HTML code in the browser, such as displaying the string \"\\<br/>\" instead of inserting a line break (`<br/>` element) in the page.  \n  \n> [!NOTE]\n>  This property is new in ASP.NET 3.5. Setting this property to `false` restores the default behavior of the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property in versions of ASP.NET earlier than 3.5. For more information, see the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property."
  syntax:
    content: public virtual bool HtmlEncodeFormatString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli tekst powinien być kodowany w formacie HTML; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiektu."
  remarks: "Metoda inicjowania jest wywoływana przez formant danych, z którym <xref:System.Web.UI.WebControls.BoundField>obiekt jest skojarzony z zainicjować obiektu podstawowego dla wystąpień pola, zanim pole jest kiedykolwiek dodana do kolekcji wierszy.</xref:System.Web.UI.WebControls.BoundField> Określa dane, takie jak <xref:System.Web.UI.WebControls.DetailsView>i <xref:System.Web.UI.WebControls.GridView>wywołania <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>metody w ich `CreateChildControls` metod przed innych metod, takich jak `CreateRow` są wywoływane w celu utworzenia określonych wierszy z danymi.</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       Wywołanie tej metody podczas pisania niestandardowego powiązane z danymi kontrolować, które używa <xref:System.Web.UI.WebControls.TableCell>obiektów w celu przeprowadzenia podstawowego inicjowania dla <xref:System.Web.UI.WebControls.BoundField>obiektu.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell> Zaimplementuj tę metodę, jeśli Twoje <xref:System.Web.UI.WebControls.BoundField>— Typ pochodny wymaga inicjowanie obiektu przed wypełnia <xref:System.Web.UI.WebControls.TableCell>obiekty z danymi lub formantów w <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>— Metoda.</xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override bool Initialize (bool enableSorting, System.Web.UI.Control control);
    parameters:
    - id: enableSorting
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli sortowanie jest obsługiwany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: control
      type: System.Web.UI.Control
      description: "Formant danych, który jest właścicielem <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>we wszystkich przypadkach."
  overload: System.Web.UI.WebControls.BoundField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje określony <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> obiektu do stanu określonego wiersza."
  remarks: "Metoda InitializeCell jest implementowana przez <xref:System.Web.UI.WebControls.BoundField>— Dodawanie tekstu i formanty do typów pochodnych <xref:System.Web.UI.WebControls.TableCell>obiekt formantu danych, który używa tabel do wyświetlenia interfejsu użytkownika (UI).</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField> Pełny spis struktury wiersz po wierszu tworzenia tych kontrolek danych podczas formantu `CreateChildControls` metoda jest wywoływana. Metoda InitializeCell jest wywoływana przez `InitializeRow` metod kontroli danych, takich jak <xref:System.Web.UI.WebControls.DetailsView>i <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       Wywołanie tej metody podczas pisania niestandardowego powiązane z danymi kontrolować, które używa <xref:System.Web.UI.WebControls.TableCell>obiektów zainicjować komórki struktury tabeli z danymi lub formantów.</xref:System.Web.UI.WebControls.TableCell> Zaimplementuj tę metodę, jeśli piszesz <xref:System.Web.UI.WebControls.BoundField>-pochodzi z klasy</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> Zainicjować."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> wartości."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> wartości."
    - id: rowIndex
      type: System.Int32
      description: "Liczony od zera indeks wiersza."
  overload: System.Web.UI.WebControls.BoundField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  id: InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje określony <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> obiektu do stanu określonego wiersza."
  remarks: "Metoda InitializeDataCell jest metody pomocnika używany do inicjowania komórki w <xref:System.Web.UI.WebControls.BoundField>obiektu.</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> Zainicjować."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> wartości."
  overload: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Przywraca wcześniej przechowywanych informacji stan widoku dla tego pola."
  syntax:
    content: protected override void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Reprezentuje stan formantu ma zostać przywrócony."
  overload: System.Web.UI.WebControls.BoundField.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia Podpis wyświetlany dla pola, jeśli pole ma wartość null."
  remarks: "Czasami wartość pola jest przechowywana jako wartość null w źródle danych. Można określić niestandardowe podpis ma być wyświetlany dla pola, które mają wartość null, ustawiając właściwość NullDisplayText. Jeśli ta właściwość nie jest ustawiona, wartości null pola są wyświetlane jako puste ciągi (&quot;&quot;). Jeśli rekord jest są zaktualizowane lub wstawiony w formancie powiązane z danymi, jeśli użytkownik wprowadzi wartość określonej przez tę właściwość (innego niż ciąg pusty) dla pola w formancie powiązane z danymi, czy wartość jest automatycznie konwertowany do wartości null w źródle danych.      > [!NOTE] > Aby przekonwertować wartość pola pustego ciągu na wartość null, należy ustawić <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>właściwości `true`.</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>"
  example:
  - "The following code example demonstrates how to use the NullDisplayText property to specify a custom caption to display for null field values.  \n  \n [!code-vb[BoundFieldNullDisplayText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1327_1.aspx)]\n [!code-cs[BoundFieldNullDisplayText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1327_1.aspx)]"
  syntax:
    content: public virtual string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "Podpis wyświetlany dla pola, jeśli pole ma wartość null. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.UI.WebControls.BoundField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  id: OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Wiąże wartość pola do <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiektu."
  remarks: "<xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>Metoda jest metodą pomocnika używany można powiązać wartości pola w źródle danych do odpowiednich komórki w <xref:System.Web.UI.WebControls.BoundField>obiektu.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>"
  syntax:
    content: protected virtual void OnDataBindField (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Źródło zdarzenia."
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>Zawierający dane zdarzenia.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.BoundField.OnDataBindField*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Formant, z którą jest powiązana wartość pola nie jest <xref href=&quot;System.Web.UI.WebControls.TextBox&quot;> </xref> lub <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  id: ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy wartość pola może być modyfikowana w trybie edycji."
  remarks: "Użyj właściwości tylko do odczytu do wartości wyświetlane w <xref:System.Web.UI.WebControls.BoundField>obiektu przed modyfikacją.</xref:System.Web.UI.WebControls.BoundField> Gdy formantu powiązanego z danymi jest w trybie edycji, pola, które są tylko do odczytu są wyświetlane jako zwykły tekst, bez jakichkolwiek formantów edycyjnych.      > [!NOTE] > Właściwość tylko do odczytu jest stosowana tylko do trybu edycji. Aby zapobiec pola pojawiają się w trybie wstawiania, użyj <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>Właściwości.</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>"
  example:
  - "The following code example demonstrates how to use the ReadOnly property to prevent the values of the key field displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified in edit mode.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_208_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_208_1.aspx)]"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zapobiec wartość pola są modyfikowane w trybie edycji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  id: SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera wartość wskazującą, czy kodowanie HTML jest obsługiwana przez <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiektu."
  remarks: "Właściwość SupportsHtmlEncode jest właściwością pomocnika używane w <xref:System.Web.UI.WebControls.BoundField>klasie i klasach pochodnych w celu ustalenia, czy kodowanie HTML jest obsługiwana przez klasę.</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: protected virtual bool SupportsHtmlEncode { get; }
    return:
      type: System.Boolean
      description: "Zawsze zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> wskazująca, czy kodowanie HTML jest obsługiwana przez <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  id: ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Reprezentuje wyrażenie &quot;this&quot;."
  remarks: "To pole służy do wskazania, że <xref:System.Web.UI.WebControls.BoundField>obiektu powinien powiązania ze źródłem danych, a nie pola źródła danych.</xref:System.Web.UI.WebControls.BoundField> W takim przypadku obiekt w `ToString` wartość będzie wyświetlana w polu.       To pole jest używany głównie przez deweloperów formantu."
  syntax:
    content: public static readonly string ThisExpression;
    return:
      type: System.String
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość określającą, czy formant sprawdza poprawność danych wejściowych klienta lub nie."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "Wartość, która określa, czy formant sprawdza poprawność danych wejściowych klienta lub nie. Wartość domyślna to <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Określa, czy formanty zawarte w <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> obiektu wywołania zwrotne pomocy technicznej."
  remarks: "Metoda ValidateSupportsCallback jest używany w celu określenia, czy formanty zawarte w metodę Pomocnika <xref:System.Web.UI.WebControls.BoundField>obiekt obsługę wywołań zwrotnych.</xref:System.Web.UI.WebControls.BoundField> Ta metoda została zaimplementowana jako empty — metoda (metody, która nie zawiera żadnego kodu) aby wskazać, że wywołania zwrotne są obsługiwane.      > [!NOTE] > Ta metoda jest używana głównie przez deweloperów formantu."
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.BoundField.#ctor
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.BoundField.CreateField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
- uid: System.Web.UI.WebControls.BoundField.DataField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.BoundField.#ctor*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField
  nameWithType: BoundField.BoundField
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties
  nameWithType: BoundField.CopyProperties
- uid: System.Web.UI.WebControls.BoundField.CreateField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField
  nameWithType: BoundField.CreateField
- uid: System.Web.UI.WebControls.BoundField.DataField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
- uid: System.Web.UI.WebControls.BoundField.DataFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: BoundField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue
  nameWithType: BoundField.FormatDataValue
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue
  nameWithType: BoundField.GetDesignTimeValue
- uid: System.Web.UI.WebControls.BoundField.GetValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue
  nameWithType: BoundField.GetValue
- uid: System.Web.UI.WebControls.BoundField.HeaderText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize
  nameWithType: BoundField.Initialize
- uid: System.Web.UI.WebControls.BoundField.InitializeCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell
  nameWithType: BoundField.InitializeCell
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell
  nameWithType: BoundField.InitializeDataCell
- uid: System.Web.UI.WebControls.BoundField.LoadViewState*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState
  nameWithType: BoundField.LoadViewState
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField
  nameWithType: BoundField.OnDataBindField
- uid: System.Web.UI.WebControls.BoundField.ReadOnly*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: BoundField.ValidateSupportsCallback
