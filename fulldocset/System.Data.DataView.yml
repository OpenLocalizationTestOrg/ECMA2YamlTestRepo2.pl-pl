### YamlMime:ManagedReference
items:
- uid: System.Data.DataView
  id: DataView
  children:
  - System.Data.DataView.#ctor
  - System.Data.DataView.#ctor(System.Data.DataTable)
  - System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)
  - System.Data.DataView.AddNew
  - System.Data.DataView.AllowDelete
  - System.Data.DataView.AllowEdit
  - System.Data.DataView.AllowNew
  - System.Data.DataView.ApplyDefaultSort
  - System.Data.DataView.BeginInit
  - System.Data.DataView.Close
  - System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)
  - System.Data.DataView.CopyTo(System.Array,System.Int32)
  - System.Data.DataView.Count
  - System.Data.DataView.DataViewManager
  - System.Data.DataView.Delete(System.Int32)
  - System.Data.DataView.Dispose(System.Boolean)
  - System.Data.DataView.EndInit
  - System.Data.DataView.Equals(System.Data.DataView)
  - System.Data.DataView.Find(System.Object)
  - System.Data.DataView.Find(System.Object[])
  - System.Data.DataView.FindRows(System.Object)
  - System.Data.DataView.FindRows(System.Object[])
  - System.Data.DataView.GetEnumerator
  - System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)
  - System.Data.DataView.Initialized
  - System.Data.DataView.IsInitialized
  - System.Data.DataView.IsOpen
  - System.Data.DataView.Item(System.Int32)
  - System.Data.DataView.ListChanged
  - System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)
  - System.Data.DataView.Open
  - System.Data.DataView.Reset
  - System.Data.DataView.RowFilter
  - System.Data.DataView.RowStateFilter
  - System.Data.DataView.Sort
  - System.Data.DataView.System#Collections#ICollection#IsSynchronized
  - System.Data.DataView.System#Collections#ICollection#SyncRoot
  - System.Data.DataView.System#Collections#IList#Add(System.Object)
  - System.Data.DataView.System#Collections#IList#Clear
  - System.Data.DataView.System#Collections#IList#Contains(System.Object)
  - System.Data.DataView.System#Collections#IList#IndexOf(System.Object)
  - System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Data.DataView.System#Collections#IList#IsFixedSize
  - System.Data.DataView.System#Collections#IList#IsReadOnly
  - System.Data.DataView.System#Collections#IList#Item(System.Int32)
  - System.Data.DataView.System#Collections#IList#Remove(System.Object)
  - System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)
  - System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)
  - System.Data.DataView.System#ComponentModel#IBindingList#AddNew
  - System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit
  - System.Data.DataView.System#ComponentModel#IBindingList#AllowNew
  - System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove
  - System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  - System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)
  - System.Data.DataView.System#ComponentModel#IBindingList#IsSorted
  - System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)
  - System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort
  - System.Data.DataView.System#ComponentModel#IBindingList#SortDirection
  - System.Data.DataView.System#ComponentModel#IBindingList#SortProperty
  - System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification
  - System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching
  - System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting
  - System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)
  - System.Data.DataView.System#ComponentModel#IBindingListView#Filter
  - System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter
  - System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions
  - System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting
  - System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering
  - System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])
  - System.Data.DataView.Table
  - System.Data.DataView.ToTable
  - System.Data.DataView.ToTable(System.String)
  - System.Data.DataView.ToTable(System.Boolean,System.String[])
  - System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])
  - System.Data.DataView.UpdateIndex
  - System.Data.DataView.UpdateIndex(System.Boolean)
  langs:
  - csharp
  name: DataView
  nameWithType: DataView
  fullName: System.Data.DataView
  type: Class
  summary: "Reprezentuje databindable, dostosowany widok <xref href=&quot;System.Data.DataTable&quot;> </xref> sortowanie, filtrowanie, wyszukiwanie, edytowanie i nawigacji. Element DataView nie przechowuje danych, ale zamiast tego reprezentuje połączony widok odpowiednie <xref href=&quot;System.Data.DataTable&quot;> </xref>. Zmiany danych DataView wpływają <xref href=&quot;System.Data.DataTable&quot;> </xref>. Zmienia się na <xref href=&quot;System.Data.DataTable&quot;> </xref>w danych będzie miało wpływ na wszystkie DataViews skojarzonych z nim."
  remarks: "Główna funkcja elementu DataView jest umożliwienie dla powiązania danych na formularzach systemu Windows i formularzy sieci Web.       Ponadto można dostosować DataView, aby przedstawić podzbiór danych z <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Dzięki temu można mieć dwóch formantów powiązana do tej samej <xref:System.Data.DataTable>, ale ten Pokaż różne wersje danych.</xref:System.Data.DataTable> Na przykład jeden formant może być powiązane z widoku danych, który zawiera wszystkie wiersze w tabeli, a drugi mogą być skonfigurowane tak, aby wyświetlić tylko wiersze, które zostały usunięte z <xref:System.Data.DataTable>.</xref:System.Data.DataTable> <xref:System.Data.DataTable>Ma również <xref:System.Data.DataTable.DefaultView%2A>Właściwości.</xref:System.Data.DataTable.DefaultView%2A> </xref:System.Data.DataTable> To polecenie zwróci domyślny element DataView dla tabeli. Na przykład jeśli chcesz utworzyć widok niestandardowy w tabeli, ustaw <xref:System.Data.DataView.RowFilter%2A>w widoku danych zwróconych przez <xref:System.Data.DataTable.DefaultView%2A>.</xref:System.Data.DataTable.DefaultView%2A> </xref:System.Data.DataView.RowFilter%2A>       Aby utworzyć widok filtrowany i posortowana danych, ustaw <xref:System.Data.DataView.RowFilter%2A>i <xref:System.Data.DataView.Sort%2A>Właściwości.</xref:System.Data.DataView.Sort%2A> </xref:System.Data.DataView.RowFilter%2A> Następnie należy użyć <xref:System.Data.DataView.Item%2A>Właściwości zwracają pojedynczą <xref:System.Data.DataRowView>.</xref:System.Data.DataRowView> </xref:System.Data.DataView.Item%2A>       Możesz również dodać i usunąć z zestawu wierszy za pomocą <xref:System.Data.DataView.AddNew%2A>i <xref:System.Data.DataView.Delete%2A>metody.</xref:System.Data.DataView.Delete%2A> </xref:System.Data.DataView.AddNew%2A> Korzystając z tych metod <xref:System.Data.DataView.RowStateFilter%2A>Właściwości można ustawić, aby określić, że tylko usunięte wiersze lub nowych wierszy mają być wyświetlane w widoku danych.</xref:System.Data.DataView.RowStateFilter%2A>      > [!NOTE] > Jeśli nie zostanie jawnie kryteria sortowania `DataView`, `DataRowView` obiekty w `DataView` są sortowane według indeksu w DataView odpowiadających `DataRow` w `DataTable.Rows``DataRowCollection`.       [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)]Umożliwia deweloperom tworzenie zapytań złożone, zaawansowane <xref:System.Data.DataSet>przy użyciu [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)].</xref:System.Data.DataSet> A [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)] zapytanie zwraca wyliczenie <xref:System.Data.DataRow>obiekty, które łatwo nie jest używany w scenariuszu powiązania.</xref:System.Data.DataRow> Widok danych mogą być tworzone z [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)] zapytań i przejmuje filtrowanie i sortowanie właściwości tego zapytania. [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)]rozszerza funkcjonalność widoku danych, zapewniając [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)] oparte na wyrażeniach filtrowanie i sortowanie, co pozwala na znacznie bardziej złożone i zaawansowane filtrowanie i sortowanie operacji niż oparte na ciągach filtrowanie i sortowanie. Zobacz [powiązania danych i LINQ do DataSet](~/add/includes/ajax-current-ext-md.md) Aby uzyskać więcej informacji."
  example:
  - "The following example creates a single <xref:System.Data.DataTable> with one column and five rows. Two DataView objects are created and the <xref:System.Data.DataView.RowStateFilter%2A> is set on each to show different views of the table data. The values are then printed.  \n  \n [!code-cs[Classic WebData DataView Example#1](~/add/codesnippet/csharp/t-system.data.dataview_1.cs)]\n [!code-vb[Classic WebData DataView Example#1](~/add/codesnippet/visualbasic/t-system.data.dataview_1.vb)]  \n  \n The following example creates a DataView of online orders ordered by total due from a [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)] query:  \n  \n [!code-vb[DP DataView Samples#CreateLDVFromQuery1](~/add/codesnippet/visualbasic/DataViewSamplesVB/Form1.vb#createldvfromquery1)]\n [!code-cs[DP DataView Samples#CreateLDVFromQuery1](~/add/codesnippet/csharp/DataViewSamples/Form1.cs#createldvfromquery1)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PositionChanged")]

      [System.ComponentModel.DefaultProperty("Table")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.DataViewDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataSourceEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class DataView : System.ComponentModel.MarshalByValueComponent, System.Collections.IList, System.ComponentModel.IBindingListView, System.ComponentModel.ISupportInitializeNotification, System.ComponentModel.ITypedList
  inheritance:
  - System.Object
  - System.ComponentModel.MarshalByValueComponent
  implements:
  - System.Collections.IList
  - System.ComponentModel.IBindingListView
  - System.ComponentModel.ISupportInitializeNotification
  - System.ComponentModel.ITypedList
  inheritedMembers:
  - System.ComponentModel.MarshalByValueComponent.Container
  - System.ComponentModel.MarshalByValueComponent.DesignMode
  - System.ComponentModel.MarshalByValueComponent.Dispose
  - System.ComponentModel.MarshalByValueComponent.Disposed
  - System.ComponentModel.MarshalByValueComponent.Events
  - System.ComponentModel.MarshalByValueComponent.GetService(System.Type)
  - System.ComponentModel.MarshalByValueComponent.Site
  - System.ComponentModel.MarshalByValueComponent.ToString
  platform:
  - net462
- uid: System.Data.DataView.#ctor
  id: '#ctor'
  parent: System.Data.DataView
  langs:
  - csharp
  name: DataView()
  nameWithType: DataView.DataView()
  fullName: System.Data.DataView.DataView()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DataView&quot;> </xref> klasy."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataView>.  \n  \n [!code-vb[Classic WebData DataView.DataView Example#1](~/add/codesnippet/visualbasic/m-system.data.dataview.s_1_1.vb)]\n [!code-cs[Classic WebData DataView.DataView Example#1](~/add/codesnippet/csharp/m-system.data.dataview.s_1_1.cs)]"
  syntax:
    content: public DataView ();
    parameters: []
  overload: System.Data.DataView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.#ctor(System.Data.DataTable)
  id: '#ctor(System.Data.DataTable)'
  parent: System.Data.DataView
  langs:
  - csharp
  name: DataView(DataTable)
  nameWithType: DataView.DataView(DataTable)
  fullName: System.Data.DataView.DataView(DataTable)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DataView&quot;> </xref> klasy z określonym <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataView> with the specified <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataView.DataView1 Example#1](~/add/codesnippet/csharp/m-system.data.dataview.s_0_1.cs)]\n [!code-vb[Classic WebData DataView.DataView1 Example#1](~/add/codesnippet/visualbasic/m-system.data.dataview.s_0_1.vb)]"
  syntax:
    content: public DataView (System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;></xref> to add to the <xref href=&quot;System.Data.DataView&quot;></xref>."
  overload: System.Data.DataView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)
  id: '#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)'
  parent: System.Data.DataView
  langs:
  - csharp
  name: DataView(DataTable,String,String,DataViewRowState)
  nameWithType: DataView.DataView(DataTable,String,String,DataViewRowState)
  fullName: System.Data.DataView.DataView(DataTable,String,String,DataViewRowState)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.DataView&quot;> </xref> klasy z określonym <xref href=&quot;System.Data.DataTable&quot;> </xref>, <> </> *>, <> </> *>, i <xref href=&quot;System.Data.DataViewRowState&quot;> </xref>."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataView> with the specified <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataView.DataView2 Example#1](~/add/codesnippet/csharp/e4f882a2-017f-4107-962a-_1.cs)]\n [!code-vb[Classic WebData DataView.DataView2 Example#1](~/add/codesnippet/visualbasic/e4f882a2-017f-4107-962a-_1.vb)]"
  syntax:
    content: public DataView (System.Data.DataTable table, string RowFilter, string Sort, System.Data.DataViewRowState RowState);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;></xref> to add to the <xref href=&quot;System.Data.DataView&quot;></xref>."
    - id: RowFilter
      type: System.String
      description: "A <xref:System.Data.DataView.RowFilter*>do zastosowania do <xref href=&quot;System.Data.DataView&quot;> </xref>.</xref:System.Data.DataView.RowFilter*>"
    - id: Sort
      type: System.String
      description: "A <xref:System.Data.DataView.Sort*>do zastosowania do <xref href=&quot;System.Data.DataView&quot;> </xref>.</xref:System.Data.DataView.Sort*>"
    - id: RowState
      type: System.Data.DataViewRowState
      description: "A <xref href=&quot;System.Data.DataViewRowState&quot;></xref> to apply to the <xref href=&quot;System.Data.DataView&quot;></xref>."
  overload: System.Data.DataView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.AddNew
  id: AddNew
  parent: System.Data.DataView
  langs:
  - csharp
  name: AddNew()
  nameWithType: DataView.AddNew()
  fullName: System.Data.DataView.AddNew()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Dodaje nowy wiersz do <xref href=&quot;System.Data.DataView&quot;> </xref>."
  remarks: ''
  example:
  - "The following example uses the AddNew method to return a new <xref:System.Data.DataRowView> that has been added to the <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataView.AddNew Example#1](~/add/codesnippet/visualbasic/m-system.data.dataview.a_1.vb)]\n [!code-cs[Classic WebData DataView.AddNew Example#1](~/add/codesnippet/csharp/m-system.data.dataview.a_1.cs)]"
  syntax:
    content: public virtual System.Data.DataRowView AddNew ();
    parameters: []
    return:
      type: System.Data.DataRowView
      description: "Nowy <xref href=&quot;System.Data.DataRowView&quot;> </xref> obiektu."
  overload: System.Data.DataView.AddNew*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.AllowDelete
  id: AllowDelete
  parent: System.Data.DataView
  langs:
  - csharp
  name: AllowDelete
  nameWithType: DataView.AllowDelete
  fullName: System.Data.DataView.AllowDelete
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ustawia lub pobiera wartość wskazującą, czy usuwa są dozwolone."
  remarks: ''
  example:
  - "The following example checks the AllowDelete property before deleting a <xref:System.Data.DataRow> from a <xref:System.Data.DataView>.  \n  \n [!code-cs[Classic WebData DataView.AllowDelete Example#1](~/add/codesnippet/csharp/p-system.data.dataview.a_1_1.cs)]\n [!code-vb[Classic WebData DataView.AllowDelete Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.a_1_1.vb)]"
  syntax:
    content: public bool AllowDelete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli mają usuwa; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataView.AllowDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.AllowEdit
  id: AllowEdit
  parent: System.Data.DataView
  langs:
  - csharp
  name: AllowEdit
  nameWithType: DataView.AllowEdit
  fullName: System.Data.DataView.AllowEdit
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy zmiany są dozwolone."
  remarks: ''
  example:
  - "The following example invokes the AllowEdit method before editing a row in a <xref:System.Data.DataView>.  \n  \n [!code-cs[Classic WebData DataView.AllowEdit Example#1](~/add/codesnippet/csharp/p-system.data.dataview.a_2_1.cs)]\n [!code-vb[Classic WebData DataView.AllowEdit Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.a_2_1.vb)]"
  syntax:
    content: public bool AllowEdit { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli są dozwolone zmiany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataView.AllowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.AllowNew
  id: AllowNew
  parent: System.Data.DataView
  langs:
  - csharp
  name: AllowNew
  nameWithType: DataView.AllowNew
  fullName: System.Data.DataView.AllowNew
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy można dodawać nowe wiersze przy użyciu <xref:System.Data.DataView.AddNew*>metody.</xref:System.Data.DataView.AddNew*>"
  remarks: ''
  example:
  - "The following example sets the AllowNew property to true before adding a new row with the <xref:System.Data.DataView.AddNew%2A> method.  \n  \n [!code-vb[Classic WebData DataView.AllowNew Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.a_0_1.vb)]\n [!code-cs[Classic WebData DataView.AllowNew Example#1](~/add/codesnippet/csharp/p-system.data.dataview.a_0_1.cs)]"
  syntax:
    content: public bool AllowNew { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli można dodawać nowych wierszy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataView.AllowNew*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ApplyDefaultSort
  id: ApplyDefaultSort
  parent: System.Data.DataView
  langs:
  - csharp
  name: ApplyDefaultSort
  nameWithType: DataView.ApplyDefaultSort
  fullName: System.Data.DataView.ApplyDefaultSort
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia wartość wskazującą, czy używać sortowania domyślnego. Sortowanie domyślne jest (rosnąco) przez wszystkie klucze podstawowe określone przez <xref:System.Data.DataTable.PrimaryKey*>.</xref:System.Data.DataTable.PrimaryKey*>"
  syntax:
    content: public bool ApplyDefaultSort { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli używane jest sortowanie domyślne; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataView.ApplyDefaultSort*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.BeginInit
  id: BeginInit
  parent: System.Data.DataView
  langs:
  - csharp
  name: BeginInit()
  nameWithType: DataView.BeginInit()
  fullName: System.Data.DataView.BeginInit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Rozpoczyna inicjowanie <xref href=&quot;System.Data.DataView&quot;> </xref> który jest używany w formularzu lub używany przez inny składnik. Inicjowanie występuje w czasie wykonywania."
  remarks: "Środowisku projektowania programu Visual Studio .NET używa tej metody, aby rozpocząć inicjowanie składnik, który jest używany w formularzu lub używany przez inny składnik. <xref:System.Data.DataView.EndInit%2A>Metoda kończy się inicjowania.</xref:System.Data.DataView.EndInit%2A> Przy użyciu `BeginInit` i `EndInit` metody uniemożliwia użycie przed pełnym zainicjowaniem formantu."
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Data.DataView.BeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Close
  id: Close
  parent: System.Data.DataView
  langs:
  - csharp
  name: Close()
  nameWithType: DataView.Close()
  fullName: System.Data.DataView.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zamyka <xref href=&quot;System.Data.DataView&quot;> </xref>."
  remarks: "Metoda pozwala na ręczne Zamknij <xref:System.Data.DataView>w klasach pochodnych.</xref:System.Data.DataView> Użyj odpowiedniej <xref:System.Data.DataView.Open%2A>metody, aby otworzyć <xref:System.Data.DataView>.</xref:System.Data.DataView> </xref:System.Data.DataView.Open%2A>       Ta właściwość jest przeznaczona tylko do użytku wewnętrznego."
  syntax:
    content: protected void Close ();
    parameters: []
  overload: System.Data.DataView.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)
  id: ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataView
  langs:
  - csharp
  name: ColumnCollectionChanged(Object,CollectionChangeEventArgs)
  nameWithType: DataView.ColumnCollectionChanged(Object,CollectionChangeEventArgs)
  fullName: System.Data.DataView.ColumnCollectionChanged(Object,CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Występuje po <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref> został pomyślnie zmieniony."
  syntax:
    content: protected virtual void ColumnCollectionChanged (object sender, System.ComponentModel.CollectionChangeEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Źródło zdarzenia."
    - id: e
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.ListChangedEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Data.DataView.ColumnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Data.DataView
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DataView.CopyTo(Array,Int32)
  fullName: System.Data.DataView.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kopiuje elementy do tablicy. Tylko dla interfejsów formularzy sieci Web."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "tablica ma zostać skopiowany do."
    - id: index
      type: System.Int32
      description: "indeks, aby rozpoczęli."
  overload: System.Data.DataView.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Count
  id: Count
  parent: System.Data.DataView
  langs:
  - csharp
  name: Count
  nameWithType: DataView.Count
  fullName: System.Data.DataView.Count
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera liczbę rekordów w <xref href=&quot;System.Data.DataView&quot;> </xref> po <> </> *> i <> </> *> zostały zastosowane."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Liczba rekordów w <xref href=&quot;System.Data.DataView&quot;> </xref>."
  overload: System.Data.DataView.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.DataViewManager
  id: DataViewManager
  parent: System.Data.DataView
  langs:
  - csharp
  name: DataViewManager
  nameWithType: DataView.DataViewManager
  fullName: System.Data.DataView.DataViewManager
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera <xref href=&quot;System.Data.DataViewManager&quot;> </xref> skojarzonego z tym widokiem."
  syntax:
    content: public System.Data.DataViewManager DataViewManager { get; }
    return:
      type: System.Data.DataViewManager
      description: "<xref uid=&quot;langword_csharp_DataViewManager&quot; name=&quot;DataViewManager&quot; href=&quot;&quot;> </xref> , Który utworzył ten widok. Jeśli jest to wartość domyślna <xref href=&quot;System.Data.DataView&quot;> </xref> dla <xref href=&quot;System.Data.DataTable&quot;> </xref>, <xref uid=&quot;langword_csharp_DataViewManager&quot; name=&quot;DataViewManager&quot; href=&quot;&quot;> </xref> właściwość zwraca wartość domyślna <xref uid=&quot;langword_csharp_DataViewManager&quot; name=&quot;DataViewManager&quot; href=&quot;&quot;> </xref> dla <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref>. W przeciwnym razie, jeśli <xref uid=&quot;langword_csharp_DataView&quot; name=&quot;DataView&quot; href=&quot;&quot;> </xref> został utworzony bez <xref uid=&quot;langword_csharp_DataViewManager&quot; name=&quot;DataViewManager&quot; href=&quot;&quot;> </xref>, ta właściwość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataView.DataViewManager*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Delete(System.Int32)
  id: Delete(System.Int32)
  parent: System.Data.DataView
  langs:
  - csharp
  name: Delete(Int32)
  nameWithType: DataView.Delete(Int32)
  fullName: System.Data.DataView.Delete(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Usuwa wiersz pod określonym indeksem."
  remarks: "Po usunięciu <xref:System.Data.DataRow>, jego stan zmieni się na `DataViewRowState.Deleted`.</xref:System.Data.DataRow> Możesz je wycofać usunięcie poprzez wywołanie <xref:System.Data.DataTable.RejectChanges%2A>w <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable.RejectChanges%2A>"
  example:
  - "The following example uses the Delete method to delete a row.  \n  \n [!code-vb[Classic WebData DataView.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.dataview.d_1.vb)]"
  syntax:
    content: public void Delete (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indeks wiersza do usunięcia."
  overload: System.Data.DataView.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.DataView
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DataView.Dispose(Boolean)
  fullName: System.Data.DataView.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Usuwa zasoby (inne niż pamięć) używany przez <xref href=&quot;System.Data.DataView&quot;> </xref> obiektu."
  remarks: "Zmiany właściwości powiadomienia między <xref:System.Data.DataView>i podstawowych <xref:System.Data.DataTable>zatrzymany po ta metoda jest wywoływana.</xref:System.Data.DataTable> </xref:System.Data.DataView> Należy wywołać metodę Dispose dla wszystkich <xref:System.Data.DataView>obiektów.</xref:System.Data.DataView>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane, a <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.Data.DataView.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.EndInit
  id: EndInit
  parent: System.Data.DataView
  langs:
  - csharp
  name: EndInit()
  nameWithType: DataView.EndInit()
  fullName: System.Data.DataView.EndInit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kończy się inicjowanie <xref href=&quot;System.Data.DataView&quot;> </xref> który jest używany w formularzu lub używany przez inny składnik. Inicjowanie występuje w czasie wykonywania."
  remarks: "Środowisku projektowania programu Visual Studio .NET używa tej metody, aby zakończyć inicjowanie składnik, który jest używany w formularzu lub używany przez inny składnik. <xref:System.Data.DataView.BeginInit%2A>Metoda uruchamia inicjowania.</xref:System.Data.DataView.BeginInit%2A> Przy użyciu `BeginInit` i `EndInit` metody uniemożliwia użycie przed pełnym zainicjowaniem formantu."
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Data.DataView.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Equals(System.Data.DataView)
  id: Equals(System.Data.DataView)
  parent: System.Data.DataView
  langs:
  - csharp
  name: Equals(DataView)
  nameWithType: DataView.Equals(DataView)
  fullName: System.Data.DataView.Equals(DataView)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Określa, czy określony <xref href=&quot;System.Data.DataView&quot;> </xref> wystąpienia są traktowane jako równe."
  syntax:
    content: public virtual bool Equals (System.Data.DataView view);
    parameters:
    - id: view
      type: System.Data.DataView
      description: "<xref href=&quot;System.Data.DataView&quot;> </xref> Do porównania."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dwa <xref href=&quot;System.Data.DataView&quot;> </xref> wystąpienia są takie same; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataView.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Find(System.Object)
  id: Find(System.Object)
  parent: System.Data.DataView
  langs:
  - csharp
  name: Find(Object)
  nameWithType: DataView.Find(Object)
  fullName: System.Data.DataView.Find(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Znajduje wiersz w <xref href=&quot;System.Data.DataView&quot;> </xref> przez wartość klucza określonego sortowania."
  remarks: ''
  example:
  - "The following Visual Basic example uses the Find method to return the index of the row that contains the value in the sort key column that you want.  \n  \n [!code-vb[Classic WebData DataView.Find Example#1](~/add/codesnippet/visualbasic/m-system.data.dataview.f_0_1.vb)]"
  syntax:
    content: public int Find (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Obiekt do wyszukania."
    return:
      type: System.Int32
      description: "Indeks wiersza w <xref href=&quot;System.Data.DataView&quot;> </xref> zawierający wartość klucza sortowania określona; w przeciwnym razie wartość -1, jeśli wartość klucza sortowania nie istnieje."
  overload: System.Data.DataView.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Find(System.Object[])
  id: Find(System.Object[])
  parent: System.Data.DataView
  langs:
  - csharp
  name: Find(Object[])
  nameWithType: DataView.Find(Object[])
  fullName: System.Data.DataView.Find(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Znajduje wiersz w <xref href=&quot;System.Data.DataView&quot;> </xref> przez wartości klucza określonego sortowania."
  remarks: ''
  example:
  - "The following Visual Basic example uses the <xref:System.Data.DataView.Find%2A> method to return the index of a row that contains specified values in its sort key columns.  \n  \n [!code-vb[Classic WebData DataView.Find1 Example#1](~/add/codesnippet/visualbasic/m-system.data.dataview.f_1_1.vb)]"
  syntax:
    content: public int Find (object[] key);
    parameters:
    - id: key
      type: System.Object[]
      description: "Tablica wartości wpisanych jako <xref:System.Object>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Indeks pierwszego wiersza w pozycji <xref href=&quot;System.Data.DataView&quot;> </xref> odpowiadającego sortowania wartości kluczy określonych; w przeciwnym razie wartość -1, jeśli nie ma pasującego sortowanie wartości klucza."
  overload: System.Data.DataView.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.FindRows(System.Object)
  id: FindRows(System.Object)
  parent: System.Data.DataView
  langs:
  - csharp
  name: FindRows(Object)
  nameWithType: DataView.FindRows(Object)
  fullName: System.Data.DataView.FindRows(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zwraca tablicę <xref href=&quot;System.Data.DataRowView&quot;> </xref> obiektów, których kolumny pasują do siebie sortowania określona wartość klucza."
  syntax:
    content: public System.Data.DataRowView[] FindRows (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Wartość kolumny typu <xref:System.Object>, do wyszukania.</xref:System.Object>"
    return:
      type: System.Data.DataRowView[]
      description: "Tablica <xref uid=&quot;langword_csharp_DataRowView&quot; name=&quot;DataRowView&quot; href=&quot;&quot;> </xref> obiektów, których kolumny pasują do siebie określonego sortowania klucz wartość; lub, jeśli żadne wiersze nie ma określonego sortowania wartości klucza pustą <xref uid=&quot;langword_csharp_DataRowView&quot; name=&quot;DataRowView&quot; href=&quot;&quot;> </xref> tablicy."
  overload: System.Data.DataView.FindRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.FindRows(System.Object[])
  id: FindRows(System.Object[])
  parent: System.Data.DataView
  langs:
  - csharp
  name: FindRows(Object[])
  nameWithType: DataView.FindRows(Object[])
  fullName: System.Data.DataView.FindRows(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zwraca tablicę <xref href=&quot;System.Data.DataRowView&quot;> </xref> obiektów, których kolumny pasują do siebie sortowania określona wartość klucza."
  syntax:
    content: public System.Data.DataRowView[] FindRows (object[] key);
    parameters:
    - id: key
      type: System.Object[]
      description: "Tablica wartości w kolumnach typu <xref:System.Object>, do wyszukania.</xref:System.Object>"
    return:
      type: System.Data.DataRowView[]
      description: "Tablica <xref uid=&quot;langword_csharp_DataRowView&quot; name=&quot;DataRowView&quot; href=&quot;&quot;> </xref> obiektów, których kolumny pasują do siebie określonego sortowania klucz wartość; lub, jeśli żadne wiersze nie ma określonego sortowania wartości klucza pustą <xref uid=&quot;langword_csharp_DataRowView&quot; name=&quot;DataRowView&quot; href=&quot;&quot;> </xref> tablicy."
  overload: System.Data.DataView.FindRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataView
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataView.GetEnumerator()
  fullName: System.Data.DataView.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera moduł wyliczający dla <xref href=&quot;System.Data.DataView&quot;> </xref>."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Do nawigowania za pośrednictwem listy.</xref:System.Collections.IEnumerator>"
  overload: System.Data.DataView.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)
  id: IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)
  parent: System.Data.DataView
  langs:
  - csharp
  name: IndexListChanged(Object,ListChangedEventArgs)
  nameWithType: DataView.IndexListChanged(Object,ListChangedEventArgs)
  fullName: System.Data.DataView.IndexListChanged(Object,ListChangedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Występuje po <xref href=&quot;System.Data.DataView&quot;> </xref> został pomyślnie zmieniony."
  syntax:
    content: protected virtual void IndexListChanged (object sender, System.ComponentModel.ListChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Źródło zdarzenia."
    - id: e
      type: System.ComponentModel.ListChangedEventArgs
      description: "A <xref href=&quot;System.ComponentModel.ListChangedEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Data.DataView.IndexListChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Initialized
  id: Initialized
  parent: System.Data.DataView
  langs:
  - csharp
  name: Initialized
  nameWithType: DataView.Initialized
  fullName: System.Data.DataView.Initialized
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Występuje, gdy inicjalizacja <xref href=&quot;System.Data.DataView&quot;> </xref> zostało zakończone."
  syntax:
    content: public event EventHandler Initialized;
    return:
      type: System.EventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.IsInitialized
  id: IsInitialized
  parent: System.Data.DataView
  langs:
  - csharp
  name: IsInitialized
  nameWithType: DataView.IsInitialized
  fullName: System.Data.DataView.IsInitialized
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy składnik jest zainicjowany."
  syntax:
    content: public bool IsInitialized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać składnika została ukończona inicjowania; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataView.IsInitialized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.IsOpen
  id: IsOpen
  parent: System.Data.DataView
  langs:
  - csharp
  name: IsOpen
  nameWithType: DataView.IsOpen
  fullName: System.Data.DataView.IsOpen
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy źródło danych jest obecnie otwarty i projekcji widoki danych na <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "A <xref:System.Data.DataView>znajduje się na &quot;Widok&quot; <xref:System.Data.DataTable>ponieważ zapewnia niestandardowe sortowania i filtrowania danych.</xref:System.Data.DataTable> </xref:System.Data.DataView> Wartości właściwości IsOpen może być badana ustalenie, czy <xref:System.Data.DataView>została otwarta przy użyciu <xref:System.Data.DataView.Open%2A>metody.</xref:System.Data.DataView.Open%2A> </xref:System.Data.DataView>       Ta właściwość jest przeznaczona tylko do użytku wewnętrznego."
  syntax:
    content: protected bool IsOpen { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli źródło jest otwarte; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataView.IsOpen*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataView
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataView.Item(Int32)
  fullName: System.Data.DataView.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wiersz danych z określonej tabeli."
  syntax:
    content: public System.Data.DataRowView this[int recordIndex] { get; }
    parameters:
    - id: recordIndex
      type: System.Int32
      description: "Indeks rekordu w <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataRowView
      description: "A <xref href=&quot;System.Data.DataRowView&quot;> </xref> wiersza, który ma."
  overload: System.Data.DataView.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ListChanged
  id: ListChanged
  parent: System.Data.DataView
  langs:
  - csharp
  name: ListChanged
  nameWithType: DataView.ListChanged
  fullName: System.Data.DataView.ListChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Występuje, gdy lista zarządzanych przez <xref href=&quot;System.Data.DataView&quot;> </xref> zmiany."
  remarks: ''
  example:
  - "The following example adds a handler for the ListChanged event of a <xref:System.Data.DataView>.  \n  \n [!code-vb[Classic WebData DataView.ListChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.dataview.l_1.vb)]\n [!code-cs[Classic WebData DataView.ListChanged Example#1](~/add/codesnippet/csharp/e-system.data.dataview.l_1.cs)]"
  syntax:
    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;
    return:
      type: System.ComponentModel.ListChangedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)
  id: OnListChanged(System.ComponentModel.ListChangedEventArgs)
  parent: System.Data.DataView
  langs:
  - csharp
  name: OnListChanged(ListChangedEventArgs)
  nameWithType: DataView.OnListChanged(ListChangedEventArgs)
  fullName: System.Data.DataView.OnListChanged(ListChangedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zgłasza <xref href=&quot;System.Data.DataView.ListChanged&quot;> </xref> zdarzeń."
  syntax:
    content: protected virtual void OnListChanged (System.ComponentModel.ListChangedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.ListChangedEventArgs
      description: "A <xref href=&quot;System.ComponentModel.ListChangedEventArgs&quot;> </xref> zawierający dane zdarzenia."
  overload: System.Data.DataView.OnListChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Open
  id: Open
  parent: System.Data.DataView
  langs:
  - csharp
  name: Open()
  nameWithType: DataView.Open()
  fullName: System.Data.DataView.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opens a <xref href=&quot;System.Data.DataView&quot;></xref>."
  remarks: "Metoda pozwala ręcznie otworzyć <xref:System.Data.DataView>w klasach pochodnych.</xref:System.Data.DataView> Użyj odpowiedniej <xref:System.Data.DataView.Close%2A>metody, aby zamknąć <xref:System.Data.DataView>.</xref:System.Data.DataView> </xref:System.Data.DataView.Close%2A>       Ta właściwość jest przeznaczona tylko do użytku wewnętrznego."
  syntax:
    content: protected void Open ();
    parameters: []
  overload: System.Data.DataView.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Reset
  id: Reset
  parent: System.Data.DataView
  langs:
  - csharp
  name: Reset()
  nameWithType: DataView.Reset()
  fullName: System.Data.DataView.Reset()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zastrzeżone wyłącznie do użytku wewnętrznego."
  syntax:
    content: protected void Reset ();
    parameters: []
  overload: System.Data.DataView.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.RowFilter
  id: RowFilter
  parent: System.Data.DataView
  langs:
  - csharp
  name: RowFilter
  nameWithType: DataView.RowFilter
  fullName: System.Data.DataView.RowFilter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia wyrażenie używane do filtrowania, które wiersze są wyświetlane w <xref href=&quot;System.Data.DataView&quot;> </xref>."
  remarks: "Do utworzenia wartość RowFilter, określ nazwę kolumny, a następnie operator i wartość do filtrowania. Wartość musi być w cudzysłowie. Na przykład: &quot;LastName = &quot;Smith&quot;&quot; zobacz <xref:System.Data.DataColumn.Expression%2A>Właściwość <xref:System.Data.DataColumn>klasy, aby uzyskać więcej informacji.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.Expression%2A>       Aby przywrócić tylko te kolumny z wartościami null, należy użyć następującego wyrażenia: &quot;Isnull (Col1,&quot;Null kolumny&quot;) =&quot;Null kolumny&quot;&quot;"
  example:
  - "The following example creates a <xref:System.Data.DataView> and sets its RowFilter property.  \n  \n [!code-cs[Classic WebData DataView.RowFilter Example#1](~/add/codesnippet/csharp/p-system.data.dataview.r_1_1.cs)]\n [!code-vb[Classic WebData DataView.RowFilter Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.r_1_1.vb)]"
  syntax:
    content: public virtual string RowFilter { get; set; }
    return:
      type: System.String
      description: "Ciąg, który określa, jak wierszy są filtrowane. Aby uzyskać więcej informacji zobacz sekcję uwag."
  overload: System.Data.DataView.RowFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.RowStateFilter
  id: RowStateFilter
  parent: System.Data.DataView
  langs:
  - csharp
  name: RowStateFilter
  nameWithType: DataView.RowStateFilter
  fullName: System.Data.DataView.RowStateFilter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia filtr stanu wierszy, które są używane w <xref href=&quot;System.Data.DataView&quot;> </xref>."
  remarks: "Tylko wiersze, które zostały usunięte za pomocą <xref:System.Data.DataView.Delete%2A>Metoda będzie mieć ich Element RowStateFilter ma wartość `Deleted`.</xref:System.Data.DataView.Delete%2A> Te wiersze dodane przy użyciu <xref:System.Data.DataView.AddNew%2A>metody podobnie ma ustawioną właściwość `Added`.</xref:System.Data.DataView.AddNew%2A>      > [!NOTE] > Using <xref:System.Data.DataRowCollection.Remove%2A>metody <xref:System.Data.DataRowCollection>klasy nie oznacza to, że wiersz zostaną oznaczone jako `Deleted`.</xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Remove%2A> Użyj <xref:System.Data.DataView.Delete%2A>metody zamiast tego aby upewnić się, że takie wiersze mogą być wyświetlane w <xref:System.Data.DataView>.</xref:System.Data.DataView> </xref:System.Data.DataView.Delete%2A>       Nowe wiersze również będą widoczne, gdy ustawiono Element RowStateFilter `ModifiedCurrent` lub `CurrentRows`.       Usuniętych wierszy również będą widoczne, gdy ustawiono Element RowStateFilter `ModifiedOriginal` i `OriginalRows`."
  example:
  - "The following example creates a <xref:System.Data.DataTable> with a single column, and then changes the data and sets the RowStateFilter of the <xref:System.Data.DataView> to display different row sets, depending on the <xref:System.Data.DataViewRowState>.  \n  \n [!code-vb[Classic WebData DataView.RowStateFilter Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.r_0_1.vb)]\n [!code-cs[Classic WebData DataView.RowStateFilter Example#1](~/add/codesnippet/csharp/p-system.data.dataview.r_0_1.cs)]"
  syntax:
    content: public System.Data.DataViewRowState RowStateFilter { get; set; }
    return:
      type: System.Data.DataViewRowState
      description: "Jeden z <xref href=&quot;System.Data.DataViewRowState&quot;> </xref> wartości."
  overload: System.Data.DataView.RowStateFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Sort
  id: Sort
  parent: System.Data.DataView
  langs:
  - csharp
  name: Sort
  nameWithType: DataView.Sort
  fullName: System.Data.DataView.Sort
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia sortowanie kolumny lub kolumn i kolejność sortowania <xref href=&quot;System.Data.DataView&quot;> </xref>."
  remarks: "Jeśli nie zostanie jawnie kryteria sortowania `DataView`, `DataRowView` obiekty w `DataView` są sortowane według indeksu z odpowiadającymi mu dostawcami `DataRow` w `DataTable.Rows``DataRowCollection`.       Aby uzyskać więcej informacji, zobacz [DataViews](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example instructs the <xref:System.Data.DataView> to sort the table by two columns.  \n  \n [!code-cs[Classic WebData DataView.Sort Example#1](~/add/codesnippet/csharp/p-system.data.dataview.s_1.cs)]\n [!code-vb[Classic WebData DataView.Sort Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.s_1.vb)]"
  syntax:
    content: public string Sort { get; set; }
    return:
      type: System.String
      description: "Ciąg zawierający nazwę kolumny, a następnie &quot;ASC&quot; (rosnąco) lub &quot;Opis&quot; (malejąco). Kolumny są sortowane w kolejności rosnącej domyślnie. Wiele kolumn mogą być oddzielone przecinkami."
  overload: System.Data.DataView.Sort*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataView.System.Collections.ICollection.IsSynchronized
  fullName: System.Data.DataView.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.Collections.ICollection>interfejsu.</xref:System.Collections.ICollection> </xref:System.Data.DataView>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataView.System.Collections.ICollection.SyncRoot
  fullName: System.Data.DataView.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.Collections.ICollection>interfejsu.</xref:System.Collections.ICollection> </xref:System.Data.DataView>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: DataView.System.Collections.IList.Add(Object)
  fullName: System.Data.DataView.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.Collections.IList>interfejsu.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>wartość.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: DataView.System.Collections.IList.Clear()
  fullName: System.Data.DataView.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.Clear%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Użyj tego elementu członkowskiego nie jest obsługiwane i spowoduje, że <xref:System.ArgumentException>.</xref:System.ArgumentException> Zamiast tego użyj metody Clear na <xref:System.Data.DataRowCollection>Obiekt zwrócony przez <xref:System.Data.DataTable.Rows%2A>.</xref:System.Data.DataTable.Rows%2A> </xref:System.Data.DataRowCollection>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Data.DataView.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: DataView.System.Collections.IList.Contains(Object)
  fullName: System.Data.DataView.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.Contains%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.Collections.IList>interfejsu.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>wartość.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.Contains%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: DataView.System.Collections.IList.IndexOf(Object)
  fullName: System.Data.DataView.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.Collections.IList>interfejsu.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>wartość.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: DataView.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Data.DataView.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.Insert%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.Collections.IList>interfejsu.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A <xref:System.Int32>wartość.</xref:System.Int32>"
    - id: value
      type: System.Object
      description: "A <xref:System.Object>wartości do wstawienia.</xref:System.Object>"
  overload: System.Data.DataView.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataView.System.Collections.IList.IsFixedSize
  fullName: System.Data.DataView.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.Collections.IList>interfejsu.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataView.System.Collections.IList.IsReadOnly
  fullName: System.Data.DataView.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.Collections.IList>interfejsu.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: DataView.System.Collections.IList.Item(Int32)
  fullName: System.Data.DataView.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.Item%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.Collections.IList>interfejsu.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: object System.Collections.IList.Item[int recordIndex] { get; set; }
    parameters:
    - id: recordIndex
      type: System.Int32
      description: "A <xref:System.Int32>wartość.</xref:System.Int32>"
    return:
      type: System.Object
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.Item%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: DataView.System.Collections.IList.Remove(Object)
  fullName: System.Data.DataView.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.Remove%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.Collections.IList>interfejsu.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>wartość.</xref:System.Object>"
  overload: System.Data.DataView.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: DataView.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Data.DataView.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.Collections.IList>interfejsu.</xref:System.Collections.IList> </xref:System.Data.DataView>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A <xref:System.Int32>wartość.</xref:System.Int32>"
  overload: System.Data.DataView.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)
  id: System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  nameWithType: DataView.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.AddIndex%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: void IBindingList.AddIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> object."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#AddIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AddNew
  id: System#ComponentModel#IBindingList#AddNew
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.AddNew()
  nameWithType: DataView.System.ComponentModel.IBindingList.AddNew()
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AddNew()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: object IBindingList.AddNew ();
    parameters: []
    return:
      type: System.Object
      description: "Element dodany do listy."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#AddNew*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit
  id: System#ComponentModel#IBindingList#AllowEdit
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.AllowEdit
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowEdit
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AllowEdit
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.AllowEdit%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.AllowEdit { get; }
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.AllowEdit%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowNew
  id: System#ComponentModel#IBindingList#AllowNew
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.AllowNew
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowNew
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AllowNew
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.AllowNew%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.AllowNew { get; }
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.AllowNew%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#AllowNew*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove
  id: System#ComponentModel#IBindingList#AllowRemove
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.AllowRemove
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowRemove
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AllowRemove
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.AllowRemove { get; }
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  id: System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: DataView.System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.ApplySort%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: void IBindingList.ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection direction);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> object."
    - id: direction
      type: System.ComponentModel.ListSortDirection
      description: "A <xref href=&quot;System.ComponentModel.ListSortDirection&quot;></xref> object."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#ApplySort*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)
  id: System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  nameWithType: DataView.System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: int IBindingList.Find (System.ComponentModel.PropertyDescriptor property, object key);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> object."
    - id: key
      type: System.Object
      description: "A <xref:System.Object>wartość.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#Find*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#IsSorted
  id: System#ComponentModel#IBindingList#IsSorted
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.IsSorted
  nameWithType: DataView.System.ComponentModel.IBindingList.IsSorted
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.IsSorted
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.IsSorted%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.IsSorted { get; }
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.IsSorted%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#IsSorted*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)
  id: System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  nameWithType: DataView.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.RemoveIndex%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: void IBindingList.RemoveIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref> object."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort
  id: System#ComponentModel#IBindingList#RemoveSort
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.RemoveSort()
  nameWithType: DataView.System.ComponentModel.IBindingList.RemoveSort()
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.RemoveSort()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: void IBindingList.RemoveSort ();
    parameters: []
  overload: System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SortDirection
  id: System#ComponentModel#IBindingList#SortDirection
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.SortDirection
  nameWithType: DataView.System.ComponentModel.IBindingList.SortDirection
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SortDirection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: System.ComponentModel.ListSortDirection System.ComponentModel.IBindingList.SortDirection { get; }
    return:
      type: System.ComponentModel.ListSortDirection
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#SortDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SortProperty
  id: System#ComponentModel#IBindingList#SortProperty
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.SortProperty
  nameWithType: DataView.System.ComponentModel.IBindingList.SortProperty
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SortProperty
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: System.ComponentModel.PropertyDescriptor System.ComponentModel.IBindingList.SortProperty { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#SortProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification
  id: System#ComponentModel#IBindingList#SupportsChangeNotification
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.SupportsChangeNotification
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsChangeNotification
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SupportsChangeNotification
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.SupportsChangeNotification { get; }
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching
  id: System#ComponentModel#IBindingList#SupportsSearching
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.SupportsSearching
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsSearching
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SupportsSearching
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.SupportsSearching%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.SupportsSearching { get; }
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.SupportsSearching%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting
  id: System#ComponentModel#IBindingList#SupportsSorting
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingList.SupportsSorting
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsSorting
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SupportsSorting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingList>interfejsu.</xref:System.ComponentModel.IBindingList> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingList.SupportsSorting { get; }
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingList.SupportsSorting%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)
  id: System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection)
  nameWithType: DataView.System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection)
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingListView.ApplySort%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingListView>interfejsu.</xref:System.ComponentModel.IBindingListView> </xref:System.Data.DataView>"
  syntax:
    content: void IBindingListView.ApplySort (System.ComponentModel.ListSortDescriptionCollection sorts);
    parameters:
    - id: sorts
      type: System.ComponentModel.ListSortDescriptionCollection
      description: "A <xref href=&quot;System.ComponentModel.ListSortDescriptionCollection&quot;></xref> object."
  overload: System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#Filter
  id: System#ComponentModel#IBindingListView#Filter
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingListView.Filter
  nameWithType: DataView.System.ComponentModel.IBindingListView.Filter
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.Filter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingListView.Filter%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingListView>interfejsu.</xref:System.ComponentModel.IBindingListView> </xref:System.Data.DataView>"
  syntax:
    content: string System.ComponentModel.IBindingListView.Filter { get; set; }
    return:
      type: System.String
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingListView.Filter%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingListView#Filter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter
  id: System#ComponentModel#IBindingListView#RemoveFilter
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingListView.RemoveFilter()
  nameWithType: DataView.System.ComponentModel.IBindingListView.RemoveFilter()
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.RemoveFilter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingListView>interfejsu.</xref:System.ComponentModel.IBindingListView> </xref:System.Data.DataView>"
  syntax:
    content: void IBindingListView.RemoveFilter ();
    parameters: []
  overload: System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions
  id: System#ComponentModel#IBindingListView#SortDescriptions
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingListView.SortDescriptions
  nameWithType: DataView.System.ComponentModel.IBindingListView.SortDescriptions
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.SortDescriptions
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Użyj tego elementu członkowskiego nie jest obsługiwane i spowoduje, że <xref:System.ArgumentException>.</xref:System.ArgumentException> Zamiast tego użyj metody Clear na <xref:System.Data.DataRowCollection>Obiekt zwrócony przez <xref:System.Data.DataTable.Rows%2A>.</xref:System.Data.DataTable.Rows%2A> </xref:System.Data.DataRowCollection>"
  syntax:
    content: System.ComponentModel.ListSortDescriptionCollection System.ComponentModel.IBindingListView.SortDescriptions { get; }
    return:
      type: System.ComponentModel.ListSortDescriptionCollection
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting
  id: System#ComponentModel#IBindingListView#SupportsAdvancedSorting
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  nameWithType: DataView.System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingListView.SupportsAdvancedSorting%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingListView>interfejsu.</xref:System.ComponentModel.IBindingListView> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingListView.SupportsAdvancedSorting { get; }
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingListView.SupportsAdvancedSorting%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering
  id: System#ComponentModel#IBindingListView#SupportsFiltering
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.IBindingListView.SupportsFiltering
  nameWithType: DataView.System.ComponentModel.IBindingListView.SupportsFiltering
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.SupportsFiltering
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingListView.SupportsFiltering%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.IBindingListView>interfejsu.</xref:System.ComponentModel.IBindingListView> </xref:System.Data.DataView>"
  syntax:
    content: bool System.ComponentModel.IBindingListView.SupportsFiltering { get; }
    return:
      type: System.Boolean
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.IBindingListView.SupportsFiltering%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  nameWithType: DataView.System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  fullName: System.Data.DataView.System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.ITypedList>interfejsu.</xref:System.ComponentModel.ITypedList> </xref:System.Data.DataView>"
  syntax:
    content: System.ComponentModel.PropertyDescriptorCollection ITypedList.GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "Do dodania."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])
  id: System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])
  isEii: true
  parent: System.Data.DataView
  langs:
  - csharp
  name: System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  nameWithType: DataView.System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  fullName: System.Data.DataView.System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.ITypedList.GetListName%2A?displayProperty=fullName&gt;."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.DataView>wystąpienia jest rzutowane na <xref:System.ComponentModel.ITypedList>interfejsu.</xref:System.ComponentModel.ITypedList> </xref:System.Data.DataView>"
  syntax:
    content: string ITypedList.GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "Tablica <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> obiektów."
    return:
      type: System.String
      description: "Opis tego elementu członkowskiego, zobacz &lt;xref:System.ComponentModel.ITypedList.GetListName%2A?displayProperty=fullName&gt;."
  overload: System.Data.DataView.System#ComponentModel#ITypedList#GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.Table
  id: Table
  parent: System.Data.DataView
  langs:
  - csharp
  name: Table
  nameWithType: DataView.Table
  fullName: System.Data.DataView.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia źródło <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "<xref:System.Data.DataTable>Ma również <xref:System.Data.DataTable.DefaultView%2A>właściwość, która zwraca wartość domyślna <xref:System.Data.DataView>dla tabeli.</xref:System.Data.DataView> </xref:System.Data.DataTable.DefaultView%2A> </xref:System.Data.DataTable> Na przykład jeśli chcesz utworzyć widok niestandardowy w tabeli, ustawić <xref:System.Data.DataView.RowFilter%2A>na <xref:System.Data.DataView>wypychaniu <xref:System.Data.DataTable.DefaultView%2A>.</xref:System.Data.DataTable.DefaultView%2A> </xref:System.Data.DataView> </xref:System.Data.DataView.RowFilter%2A>       Właściwość tabeli można ustawić tylko, jeśli bieżąca wartość jest równa null."
  example:
  - "The following example gets the <xref:System.Data.DataTable> of the current <xref:System.Data.DataView>.  \n  \n [!code-vb[Classic WebData DataView.Table Example#1](~/add/codesnippet/visualbasic/p-system.data.dataview.t_1.vb)]\n [!code-cs[Classic WebData DataView.Table Example#1](~/add/codesnippet/csharp/p-system.data.dataview.t_1.cs)]"
  syntax:
    content: public System.Data.DataTable Table { get; set; }
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> który udostępnia dane dla tego widoku."
  overload: System.Data.DataView.Table*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ToTable
  id: ToTable
  parent: System.Data.DataView
  langs:
  - csharp
  name: ToTable()
  nameWithType: DataView.ToTable()
  fullName: System.Data.DataView.ToTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tworzy i zwraca nowy <xref href=&quot;System.Data.DataTable&quot;> </xref> oparte na wiersze w istniejącym <xref href=&quot;System.Data.DataView&quot;> </xref>."
  remarks: "Ponieważ ta metoda nie pozwala na określenie nazwy dla danych wyjściowych <xref:System.Data.DataTable>, jego nazwa jest taka sama jak nazwa źródła `DataTable`.</xref:System.Data.DataTable> Ponieważ ta metoda nie umożliwiają określenie podzbiór dostępne kolumny, tabeli wyników zawiera kolumny tabeli wejściowej."
  example:
  - "The following console application example creates a <xref:System.Data.DataTable>, fills the <xref:System.Data.DataTable> with data, creates a filtered view based on the original data, and finally, creates a <xref:System.Data.DataTable> that contains the filtered rows.  \n  \n [!code-cs[DataWorks DataView.ToTableFiltered#1](~/add/codesnippet/csharp/m-system.data.dataview.t_2_1.cs)]\n [!code-vb[DataWorks DataView.ToTableFiltered#1](~/add/codesnippet/visualbasic/m-system.data.dataview.t_2_1.vb)]  \n  \n The example displays the following text in the console window:  \n  \n```  \nOriginal table name: NewTable  \nCurrent Values in Table  \n1, Fruit, Apple, 14  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n4, Fish, Salmon, 12  \n  \nCurrent Values in View  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n  \nTable created from filtered DataView  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n  \nNew table name: NewTable  \n```"
  syntax:
    content: public System.Data.DataTable ToTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Nowy <xref href=&quot;System.Data.DataTable&quot;> </xref> wystąpienia, które zawiera żądane wierszy i kolumn."
  overload: System.Data.DataView.ToTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ToTable(System.String)
  id: ToTable(System.String)
  parent: System.Data.DataView
  langs:
  - csharp
  name: ToTable(String)
  nameWithType: DataView.ToTable(String)
  fullName: System.Data.DataView.ToTable(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tworzy i zwraca nowy <xref href=&quot;System.Data.DataTable&quot;> </xref> oparte na wiersze w istniejącym <xref href=&quot;System.Data.DataView&quot;> </xref>."
  remarks: "Ponieważ ta metoda nie umożliwiają określenie podzbiór dostępne kolumny, tabeli wyników zawiera kolumny tabeli wejściowej."
  example:
  - "The following console application example creates a <xref:System.Data.DataTable>, fills the `DataTable` with data, creates a filtered view based on the original data, and finally creates a `DataTable` with a new name that contains the filtered rows.  \n  \n [!code-vb[DataWorks DataView.ToTableNewName#1](~/add/codesnippet/visualbasic/m-system.data.dataview.t_0_1.vb)]\n [!code-cs[DataWorks DataView.ToTableNewName#1](~/add/codesnippet/csharp/m-system.data.dataview.t_0_1.cs)]  \n  \n The example displays the following text in the console window:  \n  \n```  \nOriginal table name: NewTable  \nCurrent Values in Table  \n1, Fruit, Apple, 14  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n4, Fish, Salmon, 12  \n  \nCurrent Values in View  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n  \nTable created from filtered DataView  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n  \nNew table name: FilteredTable  \n```"
  syntax:
    content: public System.Data.DataTable ToTable (string tableName);
    parameters:
    - id: tableName
      type: System.String
      description: "Nazwa zwróconego elementu <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable
      description: "Nowy <xref href=&quot;System.Data.DataTable&quot;> </xref> wystąpienia, które zawiera żądane wierszy i kolumn."
  overload: System.Data.DataView.ToTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ToTable(System.Boolean,System.String[])
  id: ToTable(System.Boolean,System.String[])
  parent: System.Data.DataView
  langs:
  - csharp
  name: ToTable(Boolean,String[])
  nameWithType: DataView.ToTable(Boolean,String[])
  fullName: System.Data.DataView.ToTable(Boolean,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tworzy i zwraca nowy <xref href=&quot;System.Data.DataTable&quot;> </xref> oparte na wiersze w istniejącym <xref href=&quot;System.Data.DataView&quot;> </xref>."
  remarks: "Ponieważ ta metoda nie pozwala na określenie nazwy dla danych wyjściowych <xref:System.Data.DataTable>jego nazwa jest taka sama jak nazwa źródła <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataTable>"
  example:
  - "The following console application example creates a <xref:System.Data.DataTable>, fills the <xref:System.Data.DataTable>with data, sorts the <xref:System.Data.DataView>, and finally creates a <xref:System.Data.DataTable>with just two columns, limited to rows in which all values are unique.  \n  \n [!code-vb[DataWorks DataView.ToTableUniqueValues#1](~/add/codesnippet/visualbasic/m-system.data.dataview.t_1_1.vb)]\n [!code-cs[DataWorks DataView.ToTableUniqueValues#1](~/add/codesnippet/csharp/m-system.data.dataview.t_1_1.cs)]  \n  \n The example displays the following output in the console window:  \n  \n```  \nOriginal table name: NewTable  \nCurrent Values in Table  \n1, Fruit, Apple, 14  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n4, Fish, Salmon, 12  \n5, Fish, Salmon, 15  \n6, Bread, Croissant, 23  \n  \nCurrent Values in View  \n3, Bread, Muffin, 23  \n6, Bread, Croissant, 23  \n4, Fish, Salmon, 12  \n5, Fish, Salmon, 15  \n1, Fruit, Apple, 14  \n2, Fruit, Orange, 27  \n  \nTable created from sorted DataView  \nBread, 23  \nFish, 12  \nFish, 15  \nFruit, 14  \nFruit, 27  \n  \nNew table name: NewTable  \n```"
  syntax:
    content: public System.Data.DataTable ToTable (bool distinct, string[] columnNames);
    parameters:
    - id: distinct
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, zwracana <xref href=&quot;System.Data.DataTable&quot;> </xref> zawiera wiersze, które mają różne wartości dla wszystkich kolumn. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: columnNames
      type: System.String[]
      description: "Tablica ciągów zawierająca kolumny nazw do uwzględnienia w zwróconym <xref href=&quot;System.Data.DataTable&quot;> </xref>. <xref href=&quot;System.Data.DataTable&quot;> </xref> Zawiera określone kolumny w kolejności ich występowania w tej macierzy."
    return:
      type: System.Data.DataTable
      description: "Nowy <xref href=&quot;System.Data.DataTable&quot;> </xref> wystąpienia, które zawiera żądane wierszy i kolumn."
  overload: System.Data.DataView.ToTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])
  id: ToTable(System.String,System.Boolean,System.String[])
  parent: System.Data.DataView
  langs:
  - csharp
  name: ToTable(String,Boolean,String[])
  nameWithType: DataView.ToTable(String,Boolean,String[])
  fullName: System.Data.DataView.ToTable(String,Boolean,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Tworzy i zwraca nowy <xref href=&quot;System.Data.DataTable&quot;> </xref> oparte na wiersze w istniejącym <xref href=&quot;System.Data.DataView&quot;> </xref>."
  remarks: "Użyj tej wersji przeciążonej <xref:System.Data.DataView.ToTable%2A>metody, jeśli masz można pobrać różne wartości w podzbioru dostępnych kolumn, określając nową nazwę dla zwracanych <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataView.ToTable%2A> Jeśli nie ma potrzeby unikatowe wiersze lub podzestaw kolumn, zobacz <xref:System.Data.DataView.ToTable%2A>.</xref:System.Data.DataView.ToTable%2A>"
  example:
  - "The following console application example creates a <xref:System.Data.DataTable>, fills the <xref:System.Data.DataTable> with data, sorts the <xref:System.Data.DataView>, and finally creates a <xref:System.Data.DataTable>with a new name that contains just two columns, limited to rows in which all values are unique.  \n  \n [!code-vb[DataWorks DataView.ToTableUniqueValuesName#1](~/add/codesnippet/visualbasic/m-system.data.dataview.t_3_1.vb)]\n [!code-cs[DataWorks DataView.ToTableUniqueValuesName#1](~/add/codesnippet/csharp/m-system.data.dataview.t_3_1.cs)]  \n  \n The example displays the following output in the console window:  \n  \n```  \nOriginal table name: NewTable  \nCurrent Values in Table  \n1, Fruit, Apple, 14  \n2, Fruit, Orange, 27  \n3, Bread, Muffin, 23  \n4, Fish, Salmon, 12  \n5, Fish, Salmon, 15  \n6, Bread, Croissant, 23  \n  \nCurrent Values in View  \n3, Bread, Muffin, 23  \n6, Bread, Croissant, 23  \n4, Fish, Salmon, 12  \n5, Fish, Salmon, 15  \n1, Fruit, Apple, 14  \n2, Fruit, Orange, 27  \n  \nTable created from sorted DataView  \nBread, 23  \nFish, 12  \nFish, 15  \nFruit, 14  \nFruit, 27  \n  \nNew table name: UniqueData  \n```"
  syntax:
    content: public System.Data.DataTable ToTable (string tableName, bool distinct, string[] columnNames);
    parameters:
    - id: tableName
      type: System.String
      description: "Nazwa zwróconego elementu <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    - id: distinct
      type: System.Boolean
      description: "Jeśli <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, zwracana <xref href=&quot;System.Data.DataTable&quot;> </xref> zawiera wiersze, które mają różne wartości dla wszystkich kolumn. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: columnNames
      type: System.String[]
      description: "Tablica ciągów zawierająca kolumny nazw do uwzględnienia w zwróconym <xref href=&quot;System.Data.DataTable&quot;> </xref>. <xref uid=&quot;langword_csharp_DataTable&quot; name=&quot;DataTable&quot; href=&quot;&quot;> </xref> Zawiera określone kolumny w kolejności ich występowania w tej macierzy."
    return:
      type: System.Data.DataTable
      description: "Nowy <xref href=&quot;System.Data.DataTable&quot;> </xref> wystąpienia, które zawiera żądane wierszy i kolumn."
  overload: System.Data.DataView.ToTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.UpdateIndex
  id: UpdateIndex
  parent: System.Data.DataView
  langs:
  - csharp
  name: UpdateIndex()
  nameWithType: DataView.UpdateIndex()
  fullName: System.Data.DataView.UpdateIndex()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zastrzeżone wyłącznie do użytku wewnętrznego."
  syntax:
    content: protected void UpdateIndex ();
    parameters: []
  overload: System.Data.DataView.UpdateIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataView.UpdateIndex(System.Boolean)
  id: UpdateIndex(System.Boolean)
  parent: System.Data.DataView
  langs:
  - csharp
  name: UpdateIndex(Boolean)
  nameWithType: DataView.UpdateIndex(Boolean)
  fullName: System.Data.DataView.UpdateIndex(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zastrzeżone wyłącznie do użytku wewnętrznego."
  syntax:
    content: protected virtual void UpdateIndex (bool force);
    parameters:
    - id: force
      type: System.Boolean
      description: "Zastrzeżone wyłącznie do użytku wewnętrznego."
  overload: System.Data.DataView.UpdateIndex*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: System.ComponentModel.MarshalByValueComponent
- uid: System.Data.DataView.#ctor
  parent: System.Data.DataView
  isExternal: false
  name: DataView()
  nameWithType: DataView.DataView()
  fullName: System.Data.DataView.DataView()
- uid: System.Data.DataView.#ctor(System.Data.DataTable)
  parent: System.Data.DataView
  isExternal: false
  name: DataView(DataTable)
  nameWithType: DataView.DataView(DataTable)
  fullName: System.Data.DataView.DataView(DataTable)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)
  parent: System.Data.DataView
  isExternal: false
  name: DataView(DataTable,String,String,DataViewRowState)
  nameWithType: DataView.DataView(DataTable,String,String,DataViewRowState)
  fullName: System.Data.DataView.DataView(DataTable,String,String,DataViewRowState)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataViewRowState
  parent: System.Data
  isExternal: false
  name: DataViewRowState
  nameWithType: DataViewRowState
  fullName: System.Data.DataViewRowState
- uid: System.Data.DataView.AddNew
  parent: System.Data.DataView
  isExternal: false
  name: AddNew()
  nameWithType: DataView.AddNew()
  fullName: System.Data.DataView.AddNew()
- uid: System.Data.DataRowView
  parent: System.Data
  isExternal: false
  name: DataRowView
  nameWithType: DataRowView
  fullName: System.Data.DataRowView
- uid: System.Data.DataView.AllowDelete
  parent: System.Data.DataView
  isExternal: false
  name: AllowDelete
  nameWithType: DataView.AllowDelete
  fullName: System.Data.DataView.AllowDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataView.AllowEdit
  parent: System.Data.DataView
  isExternal: false
  name: AllowEdit
  nameWithType: DataView.AllowEdit
  fullName: System.Data.DataView.AllowEdit
- uid: System.Data.DataView.AllowNew
  parent: System.Data.DataView
  isExternal: false
  name: AllowNew
  nameWithType: DataView.AllowNew
  fullName: System.Data.DataView.AllowNew
- uid: System.Data.DataView.ApplyDefaultSort
  parent: System.Data.DataView
  isExternal: false
  name: ApplyDefaultSort
  nameWithType: DataView.ApplyDefaultSort
  fullName: System.Data.DataView.ApplyDefaultSort
- uid: System.Data.DataView.BeginInit
  parent: System.Data.DataView
  isExternal: false
  name: BeginInit()
  nameWithType: DataView.BeginInit()
  fullName: System.Data.DataView.BeginInit()
- uid: System.Data.DataView.Close
  parent: System.Data.DataView
  isExternal: false
  name: Close()
  nameWithType: DataView.Close()
  fullName: System.Data.DataView.Close()
- uid: System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataView
  isExternal: false
  name: ColumnCollectionChanged(Object,CollectionChangeEventArgs)
  nameWithType: DataView.ColumnCollectionChanged(Object,CollectionChangeEventArgs)
  fullName: System.Data.DataView.ColumnCollectionChanged(Object,CollectionChangeEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Data.DataView.CopyTo(System.Array,System.Int32)
  parent: System.Data.DataView
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DataView.CopyTo(Array,Int32)
  fullName: System.Data.DataView.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataView.Count
  parent: System.Data.DataView
  isExternal: false
  name: Count
  nameWithType: DataView.Count
  fullName: System.Data.DataView.Count
- uid: System.Data.DataView.DataViewManager
  parent: System.Data.DataView
  isExternal: false
  name: DataViewManager
  nameWithType: DataView.DataViewManager
  fullName: System.Data.DataView.DataViewManager
- uid: System.Data.DataViewManager
  parent: System.Data
  isExternal: false
  name: DataViewManager
  nameWithType: DataViewManager
  fullName: System.Data.DataViewManager
- uid: System.Data.DataView.Delete(System.Int32)
  parent: System.Data.DataView
  isExternal: false
  name: Delete(Int32)
  nameWithType: DataView.Delete(Int32)
  fullName: System.Data.DataView.Delete(Int32)
- uid: System.Data.DataView.Dispose(System.Boolean)
  parent: System.Data.DataView
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DataView.Dispose(Boolean)
  fullName: System.Data.DataView.Dispose(Boolean)
- uid: System.Data.DataView.EndInit
  parent: System.Data.DataView
  isExternal: false
  name: EndInit()
  nameWithType: DataView.EndInit()
  fullName: System.Data.DataView.EndInit()
- uid: System.Data.DataView.Equals(System.Data.DataView)
  parent: System.Data.DataView
  isExternal: false
  name: Equals(DataView)
  nameWithType: DataView.Equals(DataView)
  fullName: System.Data.DataView.Equals(DataView)
- uid: System.Data.DataView
  parent: System.Data
  isExternal: false
  name: DataView
  nameWithType: DataView
  fullName: System.Data.DataView
- uid: System.Data.DataView.Find(System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: Find(Object)
  nameWithType: DataView.Find(Object)
  fullName: System.Data.DataView.Find(Object)
- uid: System.Data.DataView.Find(System.Object[])
  parent: System.Data.DataView
  isExternal: false
  name: Find(Object[])
  nameWithType: DataView.Find(Object[])
  fullName: System.Data.DataView.Find(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataView.FindRows(System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: FindRows(Object)
  nameWithType: DataView.FindRows(Object)
  fullName: System.Data.DataView.FindRows(Object)
- uid: System.Data.DataRowView[]
  parent: System.Data
  isExternal: false
  name: DataRowView
  nameWithType: DataRowView
  fullName: System.Data.DataRowView[]
  spec.csharp:
  - uid: System.Data.DataRowView
    name: DataRowView
    nameWithType: DataRowView
    fullName: DataRowView[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataView.FindRows(System.Object[])
  parent: System.Data.DataView
  isExternal: false
  name: FindRows(Object[])
  nameWithType: DataView.FindRows(Object[])
  fullName: System.Data.DataView.FindRows(Object[])
- uid: System.Data.DataView.GetEnumerator
  parent: System.Data.DataView
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataView.GetEnumerator()
  fullName: System.Data.DataView.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)
  parent: System.Data.DataView
  isExternal: false
  name: IndexListChanged(Object,ListChangedEventArgs)
  nameWithType: DataView.IndexListChanged(Object,ListChangedEventArgs)
  fullName: System.Data.DataView.IndexListChanged(Object,ListChangedEventArgs)
- uid: System.ComponentModel.ListChangedEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventArgs
  nameWithType: ListChangedEventArgs
  fullName: System.ComponentModel.ListChangedEventArgs
- uid: System.Data.DataView.Initialized
  parent: System.Data.DataView
  isExternal: false
  name: Initialized
  nameWithType: DataView.Initialized
  fullName: System.Data.DataView.Initialized
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Data.DataView.IsInitialized
  parent: System.Data.DataView
  isExternal: false
  name: IsInitialized
  nameWithType: DataView.IsInitialized
  fullName: System.Data.DataView.IsInitialized
- uid: System.Data.DataView.IsOpen
  parent: System.Data.DataView
  isExternal: false
  name: IsOpen
  nameWithType: DataView.IsOpen
  fullName: System.Data.DataView.IsOpen
- uid: System.Data.DataView.Item(System.Int32)
  parent: System.Data.DataView
  isExternal: false
  name: Item(Int32)
  nameWithType: DataView.Item(Int32)
  fullName: System.Data.DataView.Item(Int32)
- uid: System.Data.DataView.ListChanged
  parent: System.Data.DataView
  isExternal: false
  name: ListChanged
  nameWithType: DataView.ListChanged
  fullName: System.Data.DataView.ListChanged
- uid: System.ComponentModel.ListChangedEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventHandler
  nameWithType: ListChangedEventHandler
  fullName: System.ComponentModel.ListChangedEventHandler
- uid: System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)
  parent: System.Data.DataView
  isExternal: false
  name: OnListChanged(ListChangedEventArgs)
  nameWithType: DataView.OnListChanged(ListChangedEventArgs)
  fullName: System.Data.DataView.OnListChanged(ListChangedEventArgs)
- uid: System.Data.DataView.Open
  parent: System.Data.DataView
  isExternal: false
  name: Open()
  nameWithType: DataView.Open()
  fullName: System.Data.DataView.Open()
- uid: System.Data.DataView.Reset
  parent: System.Data.DataView
  isExternal: false
  name: Reset()
  nameWithType: DataView.Reset()
  fullName: System.Data.DataView.Reset()
- uid: System.Data.DataView.RowFilter
  parent: System.Data.DataView
  isExternal: false
  name: RowFilter
  nameWithType: DataView.RowFilter
  fullName: System.Data.DataView.RowFilter
- uid: System.Data.DataView.RowStateFilter
  parent: System.Data.DataView
  isExternal: false
  name: RowStateFilter
  nameWithType: DataView.RowStateFilter
  fullName: System.Data.DataView.RowStateFilter
- uid: System.Data.DataView.Sort
  parent: System.Data.DataView
  isExternal: false
  name: Sort
  nameWithType: DataView.Sort
  fullName: System.Data.DataView.Sort
- uid: System.Data.DataView.System#Collections#ICollection#IsSynchronized
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataView.System.Collections.ICollection.IsSynchronized
  fullName: System.Data.DataView.System.Collections.ICollection.IsSynchronized
- uid: System.Data.DataView.System#Collections#ICollection#SyncRoot
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataView.System.Collections.ICollection.SyncRoot
  fullName: System.Data.DataView.System.Collections.ICollection.SyncRoot
- uid: System.Data.DataView.System#Collections#IList#Add(System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: DataView.System.Collections.IList.Add(Object)
  fullName: System.Data.DataView.System.Collections.IList.Add(Object)
- uid: System.Data.DataView.System#Collections#IList#Clear
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: DataView.System.Collections.IList.Clear()
  fullName: System.Data.DataView.System.Collections.IList.Clear()
- uid: System.Data.DataView.System#Collections#IList#Contains(System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: DataView.System.Collections.IList.Contains(Object)
  fullName: System.Data.DataView.System.Collections.IList.Contains(Object)
- uid: System.Data.DataView.System#Collections#IList#IndexOf(System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: DataView.System.Collections.IList.IndexOf(Object)
  fullName: System.Data.DataView.System.Collections.IList.IndexOf(Object)
- uid: System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: DataView.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Data.DataView.System.Collections.IList.Insert(Int32,Object)
- uid: System.Data.DataView.System#Collections#IList#IsFixedSize
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataView.System.Collections.IList.IsFixedSize
  fullName: System.Data.DataView.System.Collections.IList.IsFixedSize
- uid: System.Data.DataView.System#Collections#IList#IsReadOnly
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataView.System.Collections.IList.IsReadOnly
  fullName: System.Data.DataView.System.Collections.IList.IsReadOnly
- uid: System.Data.DataView.System#Collections#IList#Item(System.Int32)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: DataView.System.Collections.IList.Item(Int32)
  fullName: System.Data.DataView.System.Collections.IList.Item(Int32)
- uid: System.Data.DataView.System#Collections#IList#Remove(System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: DataView.System.Collections.IList.Remove(Object)
  fullName: System.Data.DataView.System.Collections.IList.Remove(Object)
- uid: System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: DataView.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Data.DataView.System.Collections.IList.RemoveAt(Int32)
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  nameWithType: DataView.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AddNew
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AddNew()
  nameWithType: DataView.System.ComponentModel.IBindingList.AddNew()
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AddNew()
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AllowEdit
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowEdit
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AllowEdit
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowNew
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AllowNew
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowNew
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AllowNew
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AllowRemove
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowRemove
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.AllowRemove
- uid: System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: DataView.System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
- uid: System.ComponentModel.ListSortDirection
  parent: System.ComponentModel
  isExternal: false
  name: ListSortDirection
  nameWithType: ListSortDirection
  fullName: System.ComponentModel.ListSortDirection
- uid: System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  nameWithType: DataView.System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
- uid: System.Data.DataView.System#ComponentModel#IBindingList#IsSorted
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.IsSorted
  nameWithType: DataView.System.ComponentModel.IBindingList.IsSorted
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.IsSorted
- uid: System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  nameWithType: DataView.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
- uid: System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.RemoveSort()
  nameWithType: DataView.System.ComponentModel.IBindingList.RemoveSort()
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.RemoveSort()
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SortDirection
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SortDirection
  nameWithType: DataView.System.ComponentModel.IBindingList.SortDirection
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SortDirection
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SortProperty
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SortProperty
  nameWithType: DataView.System.ComponentModel.IBindingList.SortProperty
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SortProperty
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SupportsChangeNotification
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsChangeNotification
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SupportsChangeNotification
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SupportsSearching
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsSearching
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SupportsSearching
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SupportsSorting
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsSorting
  fullName: System.Data.DataView.System.ComponentModel.IBindingList.SupportsSorting
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection)
  nameWithType: DataView.System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection)
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection)
- uid: System.ComponentModel.ListSortDescriptionCollection
  parent: System.ComponentModel
  isExternal: false
  name: ListSortDescriptionCollection
  nameWithType: ListSortDescriptionCollection
  fullName: System.ComponentModel.ListSortDescriptionCollection
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#Filter
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.Filter
  nameWithType: DataView.System.ComponentModel.IBindingListView.Filter
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.Filter
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.RemoveFilter()
  nameWithType: DataView.System.ComponentModel.IBindingListView.RemoveFilter()
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.RemoveFilter()
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.SortDescriptions
  nameWithType: DataView.System.ComponentModel.IBindingListView.SortDescriptions
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.SortDescriptions
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  nameWithType: DataView.System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.SupportsAdvancedSorting
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.SupportsFiltering
  nameWithType: DataView.System.ComponentModel.IBindingListView.SupportsFiltering
  fullName: System.Data.DataView.System.ComponentModel.IBindingListView.SupportsFiltering
- uid: System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  nameWithType: DataView.System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  fullName: System.Data.DataView.System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  nameWithType: DataView.System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  fullName: System.Data.DataView.System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
- uid: System.Data.DataView.Table
  parent: System.Data.DataView
  isExternal: false
  name: Table
  nameWithType: DataView.Table
  fullName: System.Data.DataView.Table
- uid: System.Data.DataView.ToTable
  parent: System.Data.DataView
  isExternal: false
  name: ToTable()
  nameWithType: DataView.ToTable()
  fullName: System.Data.DataView.ToTable()
- uid: System.Data.DataView.ToTable(System.String)
  parent: System.Data.DataView
  isExternal: false
  name: ToTable(String)
  nameWithType: DataView.ToTable(String)
  fullName: System.Data.DataView.ToTable(String)
- uid: System.Data.DataView.ToTable(System.Boolean,System.String[])
  parent: System.Data.DataView
  isExternal: false
  name: ToTable(Boolean,String[])
  nameWithType: DataView.ToTable(Boolean,String[])
  fullName: System.Data.DataView.ToTable(Boolean,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])
  parent: System.Data.DataView
  isExternal: false
  name: ToTable(String,Boolean,String[])
  nameWithType: DataView.ToTable(String,Boolean,String[])
  fullName: System.Data.DataView.ToTable(String,Boolean,String[])
- uid: System.Data.DataView.UpdateIndex
  parent: System.Data.DataView
  isExternal: false
  name: UpdateIndex()
  nameWithType: DataView.UpdateIndex()
  fullName: System.Data.DataView.UpdateIndex()
- uid: System.Data.DataView.UpdateIndex(System.Boolean)
  parent: System.Data.DataView
  isExternal: false
  name: UpdateIndex(Boolean)
  nameWithType: DataView.UpdateIndex(Boolean)
  fullName: System.Data.DataView.UpdateIndex(Boolean)
- uid: System.Data.DataView.#ctor*
  parent: System.Data.DataView
  isExternal: false
  name: DataView
  nameWithType: DataView.DataView
- uid: System.Data.DataView.AddNew*
  parent: System.Data.DataView
  isExternal: false
  name: AddNew
  nameWithType: DataView.AddNew
- uid: System.Data.DataView.AllowDelete*
  parent: System.Data.DataView
  isExternal: false
  name: AllowDelete
  nameWithType: DataView.AllowDelete
- uid: System.Data.DataView.AllowEdit*
  parent: System.Data.DataView
  isExternal: false
  name: AllowEdit
  nameWithType: DataView.AllowEdit
- uid: System.Data.DataView.AllowNew*
  parent: System.Data.DataView
  isExternal: false
  name: AllowNew
  nameWithType: DataView.AllowNew
- uid: System.Data.DataView.ApplyDefaultSort*
  parent: System.Data.DataView
  isExternal: false
  name: ApplyDefaultSort
  nameWithType: DataView.ApplyDefaultSort
- uid: System.Data.DataView.BeginInit*
  parent: System.Data.DataView
  isExternal: false
  name: BeginInit
  nameWithType: DataView.BeginInit
- uid: System.Data.DataView.Close*
  parent: System.Data.DataView
  isExternal: false
  name: Close
  nameWithType: DataView.Close
- uid: System.Data.DataView.ColumnCollectionChanged*
  parent: System.Data.DataView
  isExternal: false
  name: ColumnCollectionChanged
  nameWithType: DataView.ColumnCollectionChanged
- uid: System.Data.DataView.CopyTo*
  parent: System.Data.DataView
  isExternal: false
  name: CopyTo
  nameWithType: DataView.CopyTo
- uid: System.Data.DataView.Count*
  parent: System.Data.DataView
  isExternal: false
  name: Count
  nameWithType: DataView.Count
- uid: System.Data.DataView.DataViewManager*
  parent: System.Data.DataView
  isExternal: false
  name: DataViewManager
  nameWithType: DataView.DataViewManager
- uid: System.Data.DataView.Delete*
  parent: System.Data.DataView
  isExternal: false
  name: Delete
  nameWithType: DataView.Delete
- uid: System.Data.DataView.Dispose*
  parent: System.Data.DataView
  isExternal: false
  name: Dispose
  nameWithType: DataView.Dispose
- uid: System.Data.DataView.EndInit*
  parent: System.Data.DataView
  isExternal: false
  name: EndInit
  nameWithType: DataView.EndInit
- uid: System.Data.DataView.Equals*
  parent: System.Data.DataView
  isExternal: false
  name: Equals
  nameWithType: DataView.Equals
- uid: System.Data.DataView.Find*
  parent: System.Data.DataView
  isExternal: false
  name: Find
  nameWithType: DataView.Find
- uid: System.Data.DataView.FindRows*
  parent: System.Data.DataView
  isExternal: false
  name: FindRows
  nameWithType: DataView.FindRows
- uid: System.Data.DataView.GetEnumerator*
  parent: System.Data.DataView
  isExternal: false
  name: GetEnumerator
  nameWithType: DataView.GetEnumerator
- uid: System.Data.DataView.IndexListChanged*
  parent: System.Data.DataView
  isExternal: false
  name: IndexListChanged
  nameWithType: DataView.IndexListChanged
- uid: System.Data.DataView.IsInitialized*
  parent: System.Data.DataView
  isExternal: false
  name: IsInitialized
  nameWithType: DataView.IsInitialized
- uid: System.Data.DataView.IsOpen*
  parent: System.Data.DataView
  isExternal: false
  name: IsOpen
  nameWithType: DataView.IsOpen
- uid: System.Data.DataView.Item*
  parent: System.Data.DataView
  isExternal: false
  name: Item
  nameWithType: DataView.Item
- uid: System.Data.DataView.OnListChanged*
  parent: System.Data.DataView
  isExternal: false
  name: OnListChanged
  nameWithType: DataView.OnListChanged
- uid: System.Data.DataView.Open*
  parent: System.Data.DataView
  isExternal: false
  name: Open
  nameWithType: DataView.Open
- uid: System.Data.DataView.Reset*
  parent: System.Data.DataView
  isExternal: false
  name: Reset
  nameWithType: DataView.Reset
- uid: System.Data.DataView.RowFilter*
  parent: System.Data.DataView
  isExternal: false
  name: RowFilter
  nameWithType: DataView.RowFilter
- uid: System.Data.DataView.RowStateFilter*
  parent: System.Data.DataView
  isExternal: false
  name: RowStateFilter
  nameWithType: DataView.RowStateFilter
- uid: System.Data.DataView.Sort*
  parent: System.Data.DataView
  isExternal: false
  name: Sort
  nameWithType: DataView.Sort
- uid: System.Data.DataView.System#Collections#ICollection#IsSynchronized*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataView.System.Collections.ICollection.IsSynchronized
- uid: System.Data.DataView.System#Collections#ICollection#SyncRoot*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataView.System.Collections.ICollection.SyncRoot
- uid: System.Data.DataView.System#Collections#IList#Add*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: DataView.System.Collections.IList.Add
- uid: System.Data.DataView.System#Collections#IList#Clear*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: DataView.System.Collections.IList.Clear
- uid: System.Data.DataView.System#Collections#IList#Contains*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: DataView.System.Collections.IList.Contains
- uid: System.Data.DataView.System#Collections#IList#IndexOf*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: DataView.System.Collections.IList.IndexOf
- uid: System.Data.DataView.System#Collections#IList#Insert*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: DataView.System.Collections.IList.Insert
- uid: System.Data.DataView.System#Collections#IList#IsFixedSize*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataView.System.Collections.IList.IsFixedSize
- uid: System.Data.DataView.System#Collections#IList#IsReadOnly*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataView.System.Collections.IList.IsReadOnly
- uid: System.Data.DataView.System#Collections#IList#Item*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: DataView.System.Collections.IList.Item
- uid: System.Data.DataView.System#Collections#IList#Remove*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: DataView.System.Collections.IList.Remove
- uid: System.Data.DataView.System#Collections#IList#RemoveAt*
  parent: System.Data.DataView
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: DataView.System.Collections.IList.RemoveAt
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AddIndex*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AddIndex
  nameWithType: DataView.System.ComponentModel.IBindingList.AddIndex
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AddNew*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AddNew
  nameWithType: DataView.System.ComponentModel.IBindingList.AddNew
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AllowEdit
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowEdit
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowNew*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AllowNew
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowNew
- uid: System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.AllowRemove
  nameWithType: DataView.System.ComponentModel.IBindingList.AllowRemove
- uid: System.Data.DataView.System#ComponentModel#IBindingList#ApplySort*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.ApplySort
  nameWithType: DataView.System.ComponentModel.IBindingList.ApplySort
- uid: System.Data.DataView.System#ComponentModel#IBindingList#Find*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.Find
  nameWithType: DataView.System.ComponentModel.IBindingList.Find
- uid: System.Data.DataView.System#ComponentModel#IBindingList#IsSorted*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.IsSorted
  nameWithType: DataView.System.ComponentModel.IBindingList.IsSorted
- uid: System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.RemoveIndex
  nameWithType: DataView.System.ComponentModel.IBindingList.RemoveIndex
- uid: System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.RemoveSort
  nameWithType: DataView.System.ComponentModel.IBindingList.RemoveSort
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SortDirection*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SortDirection
  nameWithType: DataView.System.ComponentModel.IBindingList.SortDirection
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SortProperty*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SortProperty
  nameWithType: DataView.System.ComponentModel.IBindingList.SortProperty
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SupportsChangeNotification
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsChangeNotification
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SupportsSearching
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsSearching
- uid: System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingList.SupportsSorting
  nameWithType: DataView.System.ComponentModel.IBindingList.SupportsSorting
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.ApplySort
  nameWithType: DataView.System.ComponentModel.IBindingListView.ApplySort
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#Filter*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.Filter
  nameWithType: DataView.System.ComponentModel.IBindingListView.Filter
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.RemoveFilter
  nameWithType: DataView.System.ComponentModel.IBindingListView.RemoveFilter
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.SortDescriptions
  nameWithType: DataView.System.ComponentModel.IBindingListView.SortDescriptions
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  nameWithType: DataView.System.ComponentModel.IBindingListView.SupportsAdvancedSorting
- uid: System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.IBindingListView.SupportsFiltering
  nameWithType: DataView.System.ComponentModel.IBindingListView.SupportsFiltering
- uid: System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.ITypedList.GetItemProperties
  nameWithType: DataView.System.ComponentModel.ITypedList.GetItemProperties
- uid: System.Data.DataView.System#ComponentModel#ITypedList#GetListName*
  parent: System.Data.DataView
  isExternal: false
  name: System.ComponentModel.ITypedList.GetListName
  nameWithType: DataView.System.ComponentModel.ITypedList.GetListName
- uid: System.Data.DataView.Table*
  parent: System.Data.DataView
  isExternal: false
  name: Table
  nameWithType: DataView.Table
- uid: System.Data.DataView.ToTable*
  parent: System.Data.DataView
  isExternal: false
  name: ToTable
  nameWithType: DataView.ToTable
- uid: System.Data.DataView.UpdateIndex*
  parent: System.Data.DataView
  isExternal: false
  name: UpdateIndex
  nameWithType: DataView.UpdateIndex
