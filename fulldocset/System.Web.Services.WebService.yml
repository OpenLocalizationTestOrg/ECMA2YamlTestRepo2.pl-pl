### YamlMime:ManagedReference
items:
- uid: System.Web.Services.WebService
  id: WebService
  children:
  - System.Web.Services.WebService.#ctor
  - System.Web.Services.WebService.Application
  - System.Web.Services.WebService.Context
  - System.Web.Services.WebService.Server
  - System.Web.Services.WebService.Session
  - System.Web.Services.WebService.SoapVersion
  - System.Web.Services.WebService.User
  langs:
  - csharp
  name: WebService
  nameWithType: WebService
  fullName: System.Web.Services.WebService
  type: Class
  summary: "Określa opcjonalne klasę podstawową dla usług XML sieci Web, która zapewnia bezpośredni dostęp do wspólnych obiektów programu ASP.NET, takich jak stan sesji i aplikacji."
  remarks: "Jeśli nie potrzebujesz dostępu do wspólnych obiektów platformy ASP.NET można tworzyć usługi XML sieci Web bez wynikające z usługi sieci Web. Dodatkowe obiekty ASP.NET jest możliwy za pośrednictwem <xref:System.Web.Services.WebService.Context%2A>.</xref:System.Web.Services.WebService.Context%2A>       Metody usług XML sieci Web, które mają <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A>właściwości albo <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>lub <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>ustawioną `true`, nie mają dostępu do swoich <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> Tak, dostęp do właściwości klasy usługi sieci Web, z w ramach tej metody usług XML sieci Web zwraca `null`.       Jeśli używasz metody usług XML sieci Web w wersji 1.0 .NET Framework, które albo <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>lub <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>Atrybut zastosowany do nich z <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>Właściwości zestawu `true`, nie mają dostępu do ich <xref:System.Web.HttpContext>przy użyciu statycznych <xref:System.Web.HttpContext.Current%2A>Właściwości.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> Aby uzyskać dostęp do <xref:System.Web.HttpContext>, pochodzi z klasy implementacja metody usług XML sieci Web z usługi sieci Web i dostępu <xref:System.Web.Services.WebService.Context%2A>Właściwości.</xref:System.Web.Services.WebService.Context%2A> </xref:System.Web.HttpContext>"
  example:
  - "The example below creates an XML Web service, deriving from WebService, in order to use the <xref:System.Web.Services.WebService.Context%2A> property to obtain the time of the request on the server.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: 'public class WebService : System.ComponentModel.MarshalByValueComponent'
  inheritance:
  - System.Object
  - System.ComponentModel.MarshalByValueComponent
  implements: []
  inheritedMembers:
  - System.ComponentModel.MarshalByValueComponent.Container
  - System.ComponentModel.MarshalByValueComponent.DesignMode
  - System.ComponentModel.MarshalByValueComponent.Dispose
  - System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)
  - System.ComponentModel.MarshalByValueComponent.Disposed
  - System.ComponentModel.MarshalByValueComponent.Events
  - System.ComponentModel.MarshalByValueComponent.GetService(System.Type)
  - System.ComponentModel.MarshalByValueComponent.Site
  - System.ComponentModel.MarshalByValueComponent.ToString
  platform:
  - net462
- uid: System.Web.Services.WebService.#ctor
  id: '#ctor'
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: WebService()
  nameWithType: WebService.WebService()
  fullName: System.Web.Services.WebService.WebService()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.Services.WebService&quot;> </xref> klasy."
  remarks: ''
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public WebService ();
    parameters: []
  overload: System.Web.Services.WebService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebService.Application
  id: Application
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: Application
  nameWithType: WebService.Application
  fullName: System.Web.Services.WebService.Application
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "Pobiera obiekt aplikacji dla bieżącego żądania HTTP."
  remarks: "Usługi XML sieci Web można używać, stan aplikacji i stanu sesji. Stan aplikacji jest obsługiwane we wszystkich sesjach podczas uzyskiwania dostępu do usługi XML sieci Web, niezależnie od tego, czy stan sesji jest wyłączony dla metody (przy użyciu <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A>Właściwość <xref:System.Web.Services.WebMethodAttribute>).</xref:System.Web.Services.WebMethodAttribute> </xref:System.Web.Services.WebMethodAttribute.EnableSession%2A>"
  example:
  - "The example below demonstrates a hit counter, incrementing the count every time a browser calls the XML Web service method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "<xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> Obiektu."
  overload: System.Web.Services.WebService.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebService.Context
  id: Context
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: Context
  nameWithType: WebService.Context
  fullName: System.Web.Services.WebService.Context
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "Pobiera ASP.NET <xref href=&quot;System.Web.HttpContext&quot;> </xref> dla bieżącego żądania, który hermetyzuje wszystkie kontekstu specyficzne dla protokołu HTTP używanego przez serwer HTTP do przetworzenia żądania sieci Web."
  remarks: "Metod usługi XML sieci Web, które albo <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>lub <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>Atrybut zastosowany do nich z <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>Właściwości zestawu `true`, nie mają dostępu do ich <xref:System.Web.HttpContext>przy użyciu statycznych <xref:System.Web.HttpContext.Current%2A>Właściwości.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> </xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> Aby uzyskać dostęp do <xref:System.Web.HttpContext>, pochodzi z klasy implementacja metody usług XML sieci Web z <xref:System.Web.Services.WebService>i uzyskiwać dostęp do właściwości kontekstu.</xref:System.Web.Services.WebService> </xref:System.Web.HttpContext>"
  example:
  - "The Example below uses the Context property to obtain the time of the request on the server.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "ASP.NET <xref href=&quot;System.Web.HttpContext&quot;> </xref> dla bieżącego żądania."
  overload: System.Web.Services.WebService.Context*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<code>Context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Services.WebService.Server
  id: Server
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: Server
  nameWithType: WebService.Server
  fullName: System.Web.Services.WebService.Server
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "Pobiera <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> dla bieżącego żądania."
  remarks: "<xref:System.Web.HttpServerUtility>Klasa udostępnia kilka metod, które mogą służyć do przetworzenia żądania sieci Web, w tym <xref:System.Web.HttpServerUtility.CreateObject%2A>(na potrzeby tworzenia wystąpień obiektów COM).</xref:System.Web.HttpServerUtility.CreateObject%2A> </xref:System.Web.HttpServerUtility>"
  example:
  - "The example below returns the computer name of the Web server using the Server property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "<xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> Obiektu."
  overload: System.Web.Services.WebService.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebService.Session
  id: Session
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: Session
  nameWithType: WebService.Session
  fullName: System.Web.Services.WebService.Session
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "Pobiera <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> wystąpienia dla bieżącego żądania."
  remarks: ''
  example:
  - "The example below uses session state to determine how many times a particular session accesses the XML Web service method `SessionHitCounter`. In this example, the <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> property of the <xref:System.Web.Services.WebMethodAttribute> is set to `true` in order to gain access to session state.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> Reprezentujący obiekt stanu sesji ASP.NET dla bieżącej sesji."
  overload: System.Web.Services.WebService.Session*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebService.SoapVersion
  id: SoapVersion
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: SoapVersion
  nameWithType: WebService.SoapVersion
  fullName: System.Web.Services.WebService.SoapVersion
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "Pobiera wersję protokołu SOAP użyta do zgłoszenia żądania SOAP do usług XML sieci Web."
  remarks: "Jeśli protokołu SOAP nie był używany do komunikowania się z usługi XML sieci Web, takich jak HTTP GET lub POST protokołu HTTP, wartość właściwości SoapVersion jest <xref:System.Web.Services.Protocols.SoapProtocolVersion>.</xref:System.Web.Services.Protocols.SoapProtocolVersion>       Do usług XML sieci Web, które nie pochodzą z <xref:System.Web.Services.WebService>klasy wersja protokołu SOAP użyta do zgłoszenia żądania SOAP XML sieci Web, usługi mogą być również uzyskać dostęp za pomocą wpisu &quot;WebServiceSoapVersion&quot; <xref:System.Web.HttpContext.Items%2A?displayProperty=fullName>Właściwości.</xref:System.Web.HttpContext.Items%2A?displayProperty=fullName> </xref:System.Web.Services.WebService> Ten wpis jest typu <xref:System.Web.Services.Protocols.SoapProtocolVersion>.</xref:System.Web.Services.Protocols.SoapProtocolVersion>"
  syntax:
    content: public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }
    return:
      type: System.Web.Services.Protocols.SoapProtocolVersion
      description: "Jeden z <xref href=&quot;System.Web.Services.Protocols.SoapProtocolVersion&quot;> </xref> wartości. Wartość domyślna to <xref href=&quot;System.Web.Services.Protocols.SoapProtocolVersion&quot;> </xref>."
  overload: System.Web.Services.WebService.SoapVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.WebService.User
  id: User
  parent: System.Web.Services.WebService
  langs:
  - csharp
  name: User
  nameWithType: WebService.User
  fullName: System.Web.Services.WebService.User
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services
  summary: "Pobiera serwera ASP.NET <xref:System.Web.HttpContext.User*>obiektu.</xref:System.Web.HttpContext.User*> Może służyć do uwierzytelniania, czy użytkownik jest autoryzowany do wykonania żądania."
  remarks: "Both Internet Information Services (IIS) and the .NET Framework need to be configured for authentication in order for the User property to be meaningful. Authentication is the process of accepting credentials from a user and validating those credentials against some authority. If the credentials are valid, you have an authenticated identity. Authentication in the .NET Framework is configured by placing entries in the web.config file.  \n  \n The following example demonstrates the entries you place in the web.config file to enable Windows authentication.  \n  \n```  \n<security>  \n <authentication mode=\"Windows\"> <!-- Mode Options are Windows, Cookie, Passport and None or Empty String -->  \n </authentication>  \n </security>  \n```  \n  \n For more information on setting up security for an XML Web service see [&#91;\\<topic://cpconSecuringASPNETWebServices>&#93;](http://msdn.microsoft.com/en-us/354b2ab1-2782-4542-b32a-dc560178b90c)."
  example:
  - "The example below looks up the authenticated user name and returns that name.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "A <xref:System.Security.Principal.IPrincipal>reprezentujący serwera ASP.NET <xref:System.Web.HttpContext.User*>obiektu.</xref:System.Web.HttpContext.User*> </xref:System.Security.Principal.IPrincipal>"
  overload: System.Web.Services.WebService.User*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: System.ComponentModel.MarshalByValueComponent
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Web.Services.WebService.#ctor
  parent: System.Web.Services.WebService
  isExternal: false
  name: WebService()
  nameWithType: WebService.WebService()
  fullName: System.Web.Services.WebService.WebService()
- uid: System.Web.Services.WebService.Application
  parent: System.Web.Services.WebService
  isExternal: false
  name: Application
  nameWithType: WebService.Application
  fullName: System.Web.Services.WebService.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.Services.WebService.Context
  parent: System.Web.Services.WebService
  isExternal: false
  name: Context
  nameWithType: WebService.Context
  fullName: System.Web.Services.WebService.Context
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Services.WebService.Server
  parent: System.Web.Services.WebService
  isExternal: false
  name: Server
  nameWithType: WebService.Server
  fullName: System.Web.Services.WebService.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.Services.WebService.Session
  parent: System.Web.Services.WebService
  isExternal: false
  name: Session
  nameWithType: WebService.Session
  fullName: System.Web.Services.WebService.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.Services.WebService.SoapVersion
  parent: System.Web.Services.WebService
  isExternal: false
  name: SoapVersion
  nameWithType: WebService.SoapVersion
  fullName: System.Web.Services.WebService.SoapVersion
- uid: System.Web.Services.Protocols.SoapProtocolVersion
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapProtocolVersion
  nameWithType: SoapProtocolVersion
  fullName: System.Web.Services.Protocols.SoapProtocolVersion
- uid: System.Web.Services.WebService.User
  parent: System.Web.Services.WebService
  isExternal: false
  name: User
  nameWithType: WebService.User
  fullName: System.Web.Services.WebService.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.Services.WebService.#ctor*
  parent: System.Web.Services.WebService
  isExternal: false
  name: WebService
  nameWithType: WebService.WebService
- uid: System.Web.Services.WebService.Application*
  parent: System.Web.Services.WebService
  isExternal: false
  name: Application
  nameWithType: WebService.Application
- uid: System.Web.Services.WebService.Context*
  parent: System.Web.Services.WebService
  isExternal: false
  name: Context
  nameWithType: WebService.Context
- uid: System.Web.Services.WebService.Server*
  parent: System.Web.Services.WebService
  isExternal: false
  name: Server
  nameWithType: WebService.Server
- uid: System.Web.Services.WebService.Session*
  parent: System.Web.Services.WebService
  isExternal: false
  name: Session
  nameWithType: WebService.Session
- uid: System.Web.Services.WebService.SoapVersion*
  parent: System.Web.Services.WebService
  isExternal: false
  name: SoapVersion
  nameWithType: WebService.SoapVersion
- uid: System.Web.Services.WebService.User*
  parent: System.Web.Services.WebService
  isExternal: false
  name: User
  nameWithType: WebService.User
