### YamlMime:ManagedReference
items:
- uid: System.Windows.SplashScreen
  id: SplashScreen
  children:
  - System.Windows.SplashScreen.#ctor(System.String)
  - System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)
  - System.Windows.SplashScreen.Close(System.TimeSpan)
  - System.Windows.SplashScreen.Show(System.Boolean)
  - System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)
  langs:
  - csharp
  name: SplashScreen
  nameWithType: SplashScreen
  fullName: System.Windows.SplashScreen
  type: Class
  summary: "Zawiera ekranu startowego dla aplikacji Windows Presentation Foundation (WPF)."
  remarks: "Aby wyświetlić obraz w oknie uruchamiania, należy użyć klasy ekranu powitalnego lub *ekranu powitalnego*, po uruchomieniu aplikacji WPF. Wywołanie <xref:System.Windows.SplashScreen.Show%2A>metodę w celu wyświetlenia ekranu powitalnego.</xref:System.Windows.SplashScreen.Show%2A> Wywołanie <xref:System.Windows.SplashScreen.Close%2A>metody, aby zamknąć ekran powitalny.</xref:System.Windows.SplashScreen.Close%2A> Określ obraz do użycia w Konstruktorze ekranu powitalnego.       Klasa ekranu powitalnego można wyświetlić wszelkie format obrazu, który jest obsługiwany przez Windows Imaging Component (WIC). Na przykład można użyć formatu BMP, GIF, JPEG, PNG lub TIFF. Jeśli obraz jest plik PNG i zawiera kanał alfa, obraz jest renderowany przy użyciu zdefiniowanych w kanału alfa przezroczystości.       Na ekranie powitalnym dodanego później w kodzie, nie mogą zawierać tekst zastępczy. Jeśli chcesz uwzględnić tekstu na ekranie powitalnym, należy dodać go do pliku obrazu.      > [!NOTE] > Nie jest konieczne do pisania kodu do wyświetlania ekranu powitalnego. Począwszy od [!INCLUDE[vs_orcas_long](~/add/includes/vs-orcas-long-md.md)] z dodatkiem SP1, można szybko skonfigurować ekranu powitalnego z ustawieniami domyślnymi. Aby uzyskać więcej informacji, zobacz [porady: Dodawanie ekranu powitalnego aplikacji WPF](~/add/includes/ajax-current-ext-md.md).       Klasa ekranu powitalnego wyświetla ekran powitalny jak najszybciej po uruchomieniu aplikacji. Ekran powitalny jest wyświetlany przy użyciu kodu natywnego, przed utworzeniem wystąpienia aplikacji WPF. Ekran powitalny jest wyświetlany w Centrum ekranu. Podczas ładowania aplikacji stopniowo ekranu powitalnego.       Podczas kompilowania aplikacji obrazu jest osadzony jako zasób zarządzany w zestawie. Jeśli aplikacja jest zlokalizowana, obraz jest osadzony w zlokalizowanych satelitarnej biblioteki DLL.      > [!NOTE] > Klasy ekranu powitalnego nie jest dostępna w częściowej relacji zaufania.      > [!NOTE] > Klasy ekranu powitalnego nie można użyć w aplikacji przeglądarki XAML (XBAP), ponieważ używają one architektura uruchomienia różnych."
  example:
  - "The following code example shows how to create and display a startup window by using the SplashScreen class.  \n  \n [!code-cs[System.Windows.SplashScreen#2](~/add/codesnippet/csharp/SplashScreenDemo/App.xaml.cs#2)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class SplashScreen
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.SplashScreen.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.SplashScreen
  langs:
  - csharp
  name: SplashScreen(String)
  nameWithType: SplashScreen.SplashScreen(String)
  fullName: System.Windows.SplashScreen.SplashScreen(String)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.SplashScreen&quot;> </xref> klasy z określonego zasobu."
  remarks: "`resourceName` Parametr regułom zwykle dla zasobów osadzonych. Aby uzyskać więcej informacji zobacz <xref:System.Resources.ResourceManager>klasy.</xref:System.Resources.ResourceManager> `resourceName` Parametr określa nazwę pliku zasobu, a nie identyfikatora URI."
  syntax:
    content: public SplashScreen (string resourceName);
    parameters:
    - id: resourceName
      type: System.String
      description: "Nazwa osadzonego zasobu."
  overload: System.Windows.SplashScreen.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)
  id: '#ctor(System.Reflection.Assembly,System.String)'
  parent: System.Windows.SplashScreen
  langs:
  - csharp
  name: SplashScreen(Assembly,String)
  nameWithType: SplashScreen.SplashScreen(Assembly,String)
  fullName: System.Windows.SplashScreen.SplashScreen(Assembly,String)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.SplashScreen&quot;> </xref> klasy z zestawu określonego zasobu."
  remarks: "`resourceAssembly` i `resourceName` parametrów należy zwykle reguł dotyczących zasobów osadzonych. Aby uzyskać więcej informacji zobacz <xref:System.Resources.ResourceManager>klasy.</xref:System.Resources.ResourceManager> `resourceName` Parametr określa nazwę pliku zasobu, a nie identyfikatora URI."
  syntax:
    content: public SplashScreen (System.Reflection.Assembly resourceAssembly, string resourceName);
    parameters:
    - id: resourceAssembly
      type: System.Reflection.Assembly
      description: "Zestaw, który zawiera osadzony zasób."
    - id: resourceName
      type: System.String
      description: "Nazwa osadzonego zasobu."
  overload: System.Windows.SplashScreen.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.SplashScreen.Close(System.TimeSpan)
  id: Close(System.TimeSpan)
  parent: System.Windows.SplashScreen
  langs:
  - csharp
  name: Close(TimeSpan)
  nameWithType: SplashScreen.Close(TimeSpan)
  fullName: System.Windows.SplashScreen.Close(TimeSpan)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Zamyka ekranu powitalnego."
  remarks: "Jeśli zostanie wywołany <xref:System.Windows.SplashScreen.Show%2A>metody z `autoClose` parametru `true`, nie trzeba wywołać metody Close.</xref:System.Windows.SplashScreen.Show%2A> Ekran powitalny zostanie zamknięte automatycznie po załadowaniu aplikacji. Po zamknięciu ekranu powitalnego, czas spowoduje przejście na jej zanikania jest określany przez wartość domyślną `fadeoutDuration` parametru, który jest 300 MS."
  syntax:
    content: public void Close (TimeSpan fadeoutDuration);
    parameters:
    - id: fadeoutDuration
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>Określa, jak długo trwa dla ekranu powitalnego do zanikania po zainicjowaniu przez operację zamknięcia.</xref:System.TimeSpan>"
  overload: System.Windows.SplashScreen.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.SplashScreen.Show(System.Boolean)
  id: Show(System.Boolean)
  parent: System.Windows.SplashScreen
  langs:
  - csharp
  name: Show(Boolean)
  nameWithType: SplashScreen.Show(Boolean)
  fullName: System.Windows.SplashScreen.Show(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Wyświetla ekran powitalny."
  remarks: "Jeśli należy wywołać metodę Show z `autoClose` ustawioną `true`, nie trzeba wywołać <xref:System.Windows.SplashScreen.Close%2A>metody.</xref:System.Windows.SplashScreen.Close%2A> Ekran powitalny zostanie zamknięte automatycznie po załadowaniu aplikacji. Po zamknięciu ekranu powitalnego, czas spowoduje przejście na jej zanikania jest określany przez wartość domyślną `fadeoutDuration` parametru, który jest 300 MS.       Wywołaj metodę Show z `autoClose` ustawioną `false` Jeśli chcesz podać wartości innych niż domyślne na czas trwania zanikania. Należy wywołać <xref:System.Windows.SplashScreen.Close%2A>metody, aby zamknąć ekran powitalny.</xref:System.Windows.SplashScreen.Close%2A>"
  syntax:
    content: public void Show (bool autoClose);
    parameters:
    - id: autoClose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby automatycznie zamknąć ekran powitalny; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zamknąć ekran powitalny ręcznie."
  overload: System.Windows.SplashScreen.Show*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Nie można odnaleźć zasobu określonego w konstruktorze."
  platform:
  - net462
- uid: System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)
  id: Show(System.Boolean,System.Boolean)
  parent: System.Windows.SplashScreen
  langs:
  - csharp
  name: Show(Boolean,Boolean)
  nameWithType: SplashScreen.Show(Boolean,Boolean)
  fullName: System.Windows.SplashScreen.Show(Boolean,Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Wyświetla ekran powitalny."
  syntax:
    content: public void Show (bool autoClose, bool topMost);
    parameters:
    - id: autoClose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby automatycznie zamknąć ekran powitalny; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zamknąć ekran powitalny ręcznie."
    - id: topMost
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli okno ekranu powitalnego powinien używać ws_ex_topmost — styl; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.SplashScreen.Show*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Windows.SplashScreen.#ctor(System.String)
  parent: System.Windows.SplashScreen
  isExternal: false
  name: SplashScreen(String)
  nameWithType: SplashScreen.SplashScreen(String)
  fullName: System.Windows.SplashScreen.SplashScreen(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)
  parent: System.Windows.SplashScreen
  isExternal: false
  name: SplashScreen(Assembly,String)
  nameWithType: SplashScreen.SplashScreen(Assembly,String)
  fullName: System.Windows.SplashScreen.SplashScreen(Assembly,String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Windows.SplashScreen.Close(System.TimeSpan)
  parent: System.Windows.SplashScreen
  isExternal: false
  name: Close(TimeSpan)
  nameWithType: SplashScreen.Close(TimeSpan)
  fullName: System.Windows.SplashScreen.Close(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.SplashScreen.Show(System.Boolean)
  parent: System.Windows.SplashScreen
  isExternal: false
  name: Show(Boolean)
  nameWithType: SplashScreen.Show(Boolean)
  fullName: System.Windows.SplashScreen.Show(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)
  parent: System.Windows.SplashScreen
  isExternal: false
  name: Show(Boolean,Boolean)
  nameWithType: SplashScreen.Show(Boolean,Boolean)
  fullName: System.Windows.SplashScreen.Show(Boolean,Boolean)
- uid: System.Windows.SplashScreen.#ctor*
  parent: System.Windows.SplashScreen
  isExternal: false
  name: SplashScreen
  nameWithType: SplashScreen.SplashScreen
- uid: System.Windows.SplashScreen.Close*
  parent: System.Windows.SplashScreen
  isExternal: false
  name: Close
  nameWithType: SplashScreen.Close
- uid: System.Windows.SplashScreen.Show*
  parent: System.Windows.SplashScreen
  isExternal: false
  name: Show
  nameWithType: SplashScreen.Show
