### YamlMime:ManagedReference
items:
- uid: System.Net.AuthenticationManager
  id: AuthenticationManager
  children:
  - System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  - System.Net.AuthenticationManager.CredentialPolicy
  - System.Net.AuthenticationManager.CustomTargetNameDictionary
  - System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  - System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  - System.Net.AuthenticationManager.RegisteredModules
  - System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  - System.Net.AuthenticationManager.Unregister(System.String)
  langs:
  - csharp
  name: AuthenticationManager
  nameWithType: AuthenticationManager
  fullName: System.Net.AuthenticationManager
  type: Class
  summary: "Zarządza modułami uwierzytelniania wywołanymi podczas procesu uwierzytelniania klienta."
  remarks: "AuthenticationManager jest Klasa statyczna, która zarządza modułami uwierzytelniania, których używa aplikacja. Po wysłaniu żądania do chronionych zasobów, rozmów AuthenticationManager <xref:System.Net.AuthenticationManager.Authenticate%2A>metodę, aby pobrać <xref:System.Net.Authorization>wystąpienie do użycia w kolejnych żądań.</xref:System.Net.Authorization> </xref:System.Net.AuthenticationManager.Authenticate%2A>       Elementu AuthenticationManager odpytuje każdy moduł uwierzytelniania zarejestrowanych przez wywołanie metody <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>metody dla każdego modułu.</xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName> Pierwszy moduł uwierzytelniania do zwrócenia <xref:System.Net.Authorization>wystąpienia jest używany do uwierzytelniania żądania.</xref:System.Net.Authorization>       Moduły, które zapewniają podstawowe, szyfrowane negocjowania, NTLM, i typy uwierzytelniania Kerberos są zarejestrowane w usłudze elementu AuthenticationManager domyślnie. Moduły dodatkowego uwierzytelniania, które implementują <xref:System.Net.IAuthenticationModule>interfejsu można dodać za pomocą <xref:System.Net.AuthenticationManager.Register%2A>metody.</xref:System.Net.AuthenticationManager.Register%2A> </xref:System.Net.IAuthenticationModule> Moduły uwierzytelniania są wywoływane w kolejności, w jakiej zostały dodane do listy.      > [!NOTE] > Protokołu Kerberos i negocjowanie typ uwierzytelniania nie jest obsługiwany w systemie Windows 95/98 lub Windows NT 4.0."
  example:
  - >-
    [!code-cs[System.Net.Authentication#1](~/add/codesnippet/csharp/t-system.net.authenticat_0_1.cs)]
     [!code-cpp[System.Net.Authentication#1](~/add/codesnippet/cpp/t-system.net.authenticat_0_1.cpp)]
     [!code-vb[System.Net.Authentication#1](~/add/codesnippet/visualbasic/t-system.net.authenticat_0_1.vb)]
  syntax:
    content: public class AuthenticationManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  id: Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Authenticate(String,WebRequest,ICredentials)
  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Wywołuje każdy moduł zarejestrowanych uwierzytelniania można znaleźć pierwszego modułu, który odpowiada na żądania uwierzytelnienia."
  remarks: "Wywołań metod uwierzytelniania <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>metody poszczególnych modułów zarejestrowanych uwierzytelniania, dopóki jeden moduł odpowiada <xref:System.Net.Authorization>wystąpienia.</xref:System.Net.Authorization> </xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=fullName>       Pierwszy <xref:System.Net.Authorization>wystąpienia zwracane jest używany do uwierzytelniania żądania.</xref:System.Net.Authorization> Jeśli moduł uwierzytelniania, nie można uwierzytelnić żądania, zwraca metodę uwierzytelniania `null`.       Moduły uwierzytelniania są wywoływane w kolejności, w którym zostały zarejestrowane przy <xref:System.Net.AuthenticationManager>.</xref:System.Net.AuthenticationManager>"
  syntax:
    content: public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);
    parameters:
    - id: challenge
      type: System.String
      description: "Wyzwanie zwracany przez Internet."
    - id: request
      type: System.Net.WebRequest
      description: "<xref:System.Net.WebRequest>Który zainicjował żądanie uwierzytelnienia.</xref:System.Net.WebRequest>"
    - id: credentials
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>Skojarzony z tym żądaniem.</xref:System.Net.ICredentials>"
    return:
      type: System.Net.Authorization
      description: "Wystąpienie <xref href=&quot;System.Net.Authorization&quot;> </xref> klasa zawierająca wynik próby autoryzacji. Jeśli nie istnieje żadne moduł uwierzytelniania na odpowiedź na pytanie, ta metoda zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.AuthenticationManager.Authenticate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>challenge</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>request</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>credentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.CredentialPolicy
  id: CredentialPolicy
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
  fullName: System.Net.AuthenticationManager.CredentialPolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia zasady poświadczenia do użycia dla zasobu żądania przy użyciu <xref:System.Net.HttpWebRequest>klasy.</xref:System.Net.HttpWebRequest>"
  remarks: "Poświadczenie zasad określa, czy można wysłać poświadczeń podczas wysyłania żądania zasobu sieci, takich jak zawartość strony sieci Web. Jeśli poświadczenia zostaną wysłane, spróbować serwerów, które wymagają uwierzytelniania klienta do uwierzytelniania klienta po otrzymaniu żądania zamiast wysyłania odpowiedzi wskazujący, że są wymagane poświadczenia klienta. Podczas to zapisuje obiegu do serwera, musi to zostać zrównoważone zagrożenie bezpieczeństwa związane z wysyła poświadczenia w sieci. Serwer docelowy nie wymaga uwierzytelniania klienta najlepiej wysyła poświadczenia.       Zasady dostępu do poświadczeń będzie można wywołać tylko dla żądań, które Określ poświadczenia lub użyj <xref:System.Net.WebProxy>obiekt, który określa poświadczenia.</xref:System.Net.WebProxy>"
  example:
  - "The following code example demonstrates setting the credential policy.  \n  \n [!code-cpp[NclCredPolicy#2](~/add/codesnippet/cpp/p-system.net.authenticat_1_1.cpp)]\n [!code-cs[NclCredPolicy#2](~/add/codesnippet/csharp/p-system.net.authenticat_1_1.cs)]"
  syntax:
    content: public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }
    return:
      type: System.Net.ICredentialPolicy
      description: "Obiekt, który implementuje <xref href=&quot;System.Net.ICredentialPolicy&quot;> </xref> interfejs, który określa, czy poświadczenia są wysyłane z żądania. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.AuthenticationManager.CredentialPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary
  id: CustomTargetNameDictionary
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera słownik zawierający nazwy nazwy głównej usługi (SPN), które są używane do identyfikowania hostów podczas uwierzytelniania Kerberos dla żądań wysyłanych za pomocą <xref:System.Net.WebRequest>i jej klas pochodnych.</xref:System.Net.WebRequest>"
  remarks: "Nazwę SPN jest to nazwa, przez którą klient jednoznacznie identyfikuje wystąpienie usługi lub aplikacji na serwerze w celu uwierzytelniania wzajemnego. Zażądano domyślnie wzajemnego uwierzytelniania i można wymagać, ustawiając <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName>do <xref:System.Net.Security.AuthenticationLevel>w żądaniu.</xref:System.Net.Security.AuthenticationLevel> </xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=fullName>       Gdy <xref:System.Net.WebRequest>wymagają uwierzytelniania wzajemnego, główną nazwę usługi, miejsce docelowe muszą być dostarczane przez klienta.</xref:System.Net.WebRequest> Jeśli znasz nazwę SPN, można dodać go do CustomTargetNameDictionary przed wysłaniem żądania. Jeśli nazwa SPN informacje nie zostały dodane do tego słownika <xref:System.Net.AuthenticationManager>używa <xref:System.Net.WebRequest.RequestUri%2A>metody compose najprawdopodobniej SPN; to jest jednak obliczoną wartością i mogą być niepoprawne.</xref:System.Net.WebRequest.RequestUri%2A> </xref:System.Net.AuthenticationManager> Jeśli nastąpiła wzajemnego uwierzytelniania i kończy się niepowodzeniem, można sprawdzić słownik do określenia obliczona główną nazwę usługi. Nie nazwy SPN jest wprowadzany do słownika, jeśli protokołem uwierzytelniania nie obsługuje uwierzytelniania wzajemnego.       Aby dodać wartości nazwy SPN do tego słownika, użyj <xref:System.Uri.AbsoluteUri%2A>z <xref:System.Net.WebRequest.RequestUri%2A>jako klucz.</xref:System.Net.WebRequest.RequestUri%2A> </xref:System.Uri.AbsoluteUri%2A> Wewnętrznie, klucz został obcięty do uwzględnienia <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>i <xref:System.Uri.Port%2A>, jeśli nie jest domyślnym portem.</xref:System.Uri.Port%2A> </xref:System.Uri.Host%2A> </xref:System.Uri.Scheme%2A>      > [!NOTE] > Podczas uzyskiwania dostępu do metody i właściwości CustomTargetNameDictionary wymaga nieograniczony <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission>      > [!NOTE] > Po Kerberos uwierzytelnianie jest wykonywane przez serwer proxy, zarówno serwer proxy, jak i nazwy hosta ultimate muszą zostać rozwiązane do głównej nazwy usługi. Limit czasu rozpoznawania nazw serwera proxy jest chroniony. Rozpoznawanie nazwy hosta ultimate do SPN wymaga wyszukiwania DNS, i nie ma limitu czasu skojarzone bezpośrednio z tą operacją. W związku z tym operacji synchronicznych może trwać dłużej, aby limitu czasu. Aby rozwiązać ten problem, Dodaj prefiks URI ultimate hosta do pamięci podręcznej nazw SPN przed wykonaniem żądania.       W wersji 3.5 z dodatkiem SP1 domyślnie teraz określić nazwę hosta używaną w adresie URL żądania w głównej nazwy usługi w programie exchange uwierzytelniania NTLM (NT LAN Manager), gdy nie ustawiono właściwości CustomTargetNameDictionary. Nazwa hosta używaną w adresie URL żądania mogą być inne niż określony w nagłówek hosta <xref:System.Net.HttpRequestHeader?displayProperty=fullName>w żądaniu klienta.</xref:System.Net.HttpRequestHeader?displayProperty=fullName> Nazwa hosta używaną w adresie URL żądania może być inna niż nazwa hosta serwera, nazwa komputera serwera, adres IP komputera lub adres sprzężenia zwrotnego. W takich przypadkach Windows zakończy się niepowodzeniem żądania uwierzytelniania. Aby rozwiązać ten problem, konieczne może powiadomić systemu Windows, która nazwa hosta używana w adresie URL żądania w kliencie żądania (&quot;contoso&quot;, na przykład) jest rzeczywiście alternatywną nazwę komputera lokalnego."
  example:
  - "The following code example demonstrates displaying the contents of the CustomTargetNameDictionary.  \n  \n [!code-cpp[NclCredPolicy#5](~/add/codesnippet/cpp/p-system.net.authenticat_0_1.cpp)]\n [!code-cs[NclCredPolicy#5](~/add/codesnippet/csharp/p-system.net.authenticat_0_1.cs)]"
  syntax:
    content: public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "Z możliwością zapisu <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> zawierający wartości nazwy SPN kluczy składa się z informacji o hoście."
  overload: System.Net.AuthenticationManager.CustomTargetNameDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  id: PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: PreAuthenticate(WebRequest,ICredentials)
  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Wstępnie uwierzytelnia żądanie."
  remarks: "Jeśli moduł uwierzytelniania można preauthenticate żądania, metoda PreAuthenticate Zwraca wystąpienie uwierzytelniania i wysyła informacje o autoryzacji do serwera preemptively, zamiast czekać na zasób do wydania wyzwania. To zachowanie jest opisane w sekcji 3.3 RFC 2617 (uwierzytelnianie HTTP: Basic i uwierzytelniania szyfrowanego dostępu). Moduły uwierzytelniania wstępnego uwierzytelniania Zezwalaj klientom na poprawić wydajność serwera, unikając dodatkowe rund spowodowane wezwań do uwierzytelnienia.       Moduły autoryzacji, które można preauthenticate żądań zestaw <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName>właściwości `true`.</xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=fullName>"
  syntax:
    content: public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "A <xref:System.Net.WebRequest>do zasobu internetowego.</xref:System.Net.WebRequest>"
    - id: credentials
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>Skojarzone z żądaniem.</xref:System.Net.ICredentials>"
    return:
      type: System.Net.Authorization
      description: "Wystąpienie <xref href=&quot;System.Net.Authorization&quot;> </xref> klasy, jeśli żądanie może być wstępnie uwierzytelniona; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. If <code>credentials</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.AuthenticationManager.PreAuthenticate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  id: Register(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Register(IAuthenticationModule)
  nameWithType: AuthenticationManager.Register(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Rejestruje moduł uwierzytelniania przy użyciu Menedżera uwierzytelniania."
  remarks: "Metoda rejestrująca dodaje moduły uwierzytelniania na końcu listy modułów wywoływane przez <xref:System.Net.AuthenticationManager.Authenticate%2A>metody.</xref:System.Net.AuthenticationManager.Authenticate%2A> Moduły uwierzytelniania są wywoływane w kolejności, w jakiej zostały dodane do listy. Jeśli moduł o tej samej <xref:System.Net.IAuthenticationModule.AuthenticationType%2A>jest już zarejestrowany, ta metoda usuwa zarejestrowanego modułu i dodaje `authenticationModule` na końcu listy.</xref:System.Net.IAuthenticationModule.AuthenticationType%2A>"
  example:
  - "The following example registers an authentication module with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_2_1.cs)]\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_2_1.cpp)]\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_2_1.vb)]"
  syntax:
    content: public static void Register (System.Net.IAuthenticationModule authenticationModule);
    parameters:
    - id: authenticationModule
      type: System.Net.IAuthenticationModule
      description: "<xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> Zarejestrować się w Menedżerze uwierzytelniania."
  overload: System.Net.AuthenticationManager.Register*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationModule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.RegisteredModules
  id: RegisteredModules
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
  fullName: System.Net.AuthenticationManager.RegisteredModules
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera listę modułów uwierzytelniania, które są zarejestrowane w usłudze Menedżer uwierzytelniania."
  remarks: "Właściwość RegisteredModules zapewnia <xref:System.Collections.IEnumerator>wystąpienia, który umożliwia listę zarejestrowanych moduły uwierzytelniania do odczytu.</xref:System.Collections.IEnumerator> <xref:System.Net.AuthenticationManager.Register%2A>Metoda dodaje moduł do listy i <xref:System.Net.AuthenticationManager.Unregister%2A>Metoda usuwa modułów z niego</xref:System.Net.AuthenticationManager.Unregister%2A> </xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the RegisteredModules property to get a list of authentication modules that are registered with the authentication manager. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Authentication#8](~/add/codesnippet/csharp/p-system.net.authenticat_2_1.cs)]\n [!code-cpp[System.Net.Authentication#8](~/add/codesnippet/cpp/p-system.net.authenticat_2_1.cpp)]\n [!code-vb[System.Net.Authentication#8](~/add/codesnippet/visualbasic/p-system.net.authenticat_2_1.vb)]"
  syntax:
    content: public static System.Collections.IEnumerator RegisteredModules { get; }
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>, Który umożliwia moduły uwierzytelniania zarejestrowanych do odczytu.</xref:System.Collections.IEnumerator>"
  overload: System.Net.AuthenticationManager.RegisteredModules*
  exceptions: []
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  id: Unregister(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Unregister(IAuthenticationModule)
  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Usuwa moduł uwierzytelniania określonych na liście zarejestrowanych modułów."
  remarks: "Metoda Unregister usuwa moduł uwierzytelniania określony na liście modułami uwierzytelniania wywołanymi <xref:System.Net.AuthenticationManager.Authenticate%2A>metody.</xref:System.Net.AuthenticationManager.Authenticate%2A> Modułu należy dodać do listy przy użyciu <xref:System.Net.AuthenticationManager.Register%2A>metody można było usunąć z listy.</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the Unregister method to remove the specified authentication module from the list of registered modules. For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.  \n  \n [!code-cs[System.Net.Sockets.Authentication#2](~/add/codesnippet/csharp/m-system.net.authenticat_0_1.cs)]\n [!code-cpp[System.Net.Sockets.Authentication#2](~/add/codesnippet/cpp/m-system.net.authenticat_0_1.cpp)]\n [!code-vb[System.Net.Sockets.Authentication#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_0_1.vb)]"
  syntax:
    content: public static void Unregister (System.Net.IAuthenticationModule authenticationModule);
    parameters:
    - id: authenticationModule
      type: System.Net.IAuthenticationModule
      description: "<xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> Do usunięcia z listy modułów w zarejestrowany."
  overload: System.Net.AuthenticationManager.Unregister*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationModule</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Określony <xref href=&quot;System.Net.IAuthenticationModule&quot;> </xref> nie jest zarejestrowany."
  platform:
  - net462
- uid: System.Net.AuthenticationManager.Unregister(System.String)
  id: Unregister(System.String)
  parent: System.Net.AuthenticationManager
  langs:
  - csharp
  name: Unregister(String)
  nameWithType: AuthenticationManager.Unregister(String)
  fullName: System.Net.AuthenticationManager.Unregister(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Usuwa moduły uwierzytelniania z określony schemat uwierzytelniania na liście zarejestrowanych modułów."
  remarks: "<xref:System.Net.AuthenticationManager.Unregister%2A>Metoda usuwa moduł uwierzytelniania określony schemat uwierzytelniania z listy modułami uwierzytelniania wywołanymi <xref:System.Net.AuthenticationManager.Authenticate%2A>metody.</xref:System.Net.AuthenticationManager.Authenticate%2A> </xref:System.Net.AuthenticationManager.Unregister%2A> Modułu należy dodać do listy przy użyciu <xref:System.Net.AuthenticationManager.Register%2A>metody można było usunąć z listy.</xref:System.Net.AuthenticationManager.Register%2A>"
  example:
  - "The following example uses the <xref:System.Net.AuthenticationManager.Unregister%2A> method to remove an authentication module with the specified authentication scheme from the list of registered modules.  \n  \n [!code-vb[AuthenticationManager_UnRegister2#2](~/add/codesnippet/visualbasic/m-system.net.authenticat_1_1.vb)]\n [!code-cpp[AuthenticationManager_UnRegister2#2](~/add/codesnippet/cpp/m-system.net.authenticat_1_1.cpp)]\n [!code-cs[AuthenticationManager_UnRegister2#2](~/add/codesnippet/csharp/m-system.net.authenticat_1_1.cs)]"
  syntax:
    content: public static void Unregister (string authenticationScheme);
    parameters:
    - id: authenticationScheme
      type: System.String
      description: "Schemat uwierzytelniania modułu do usunięcia."
  overload: System.Net.AuthenticationManager.Unregister*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authenticationScheme</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Modułu schematu uwierzytelniania nie jest zarejestrowany."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Authenticate(String,WebRequest,ICredentials)
  nameWithType: AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.Authenticate(String,WebRequest,ICredentials)
- uid: System.Net.Authorization
  parent: System.Net
  isExternal: false
  name: Authorization
  nameWithType: Authorization
  fullName: System.Net.Authorization
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.AuthenticationManager.CredentialPolicy
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
  fullName: System.Net.AuthenticationManager.CredentialPolicy
- uid: System.Net.ICredentialPolicy
  parent: System.Net
  isExternal: false
  name: ICredentialPolicy
  nameWithType: ICredentialPolicy
  fullName: System.Net.ICredentialPolicy
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
  fullName: System.Net.AuthenticationManager.CustomTargetNameDictionary
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: PreAuthenticate(WebRequest,ICredentials)
  nameWithType: AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
  fullName: System.Net.AuthenticationManager.PreAuthenticate(WebRequest,ICredentials)
- uid: System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Register(IAuthenticationModule)
  nameWithType: AuthenticationManager.Register(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Register(IAuthenticationModule)
- uid: System.Net.IAuthenticationModule
  parent: System.Net
  isExternal: false
  name: IAuthenticationModule
  nameWithType: IAuthenticationModule
  fullName: System.Net.IAuthenticationModule
- uid: System.Net.AuthenticationManager.RegisteredModules
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
  fullName: System.Net.AuthenticationManager.RegisteredModules
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister(IAuthenticationModule)
  nameWithType: AuthenticationManager.Unregister(IAuthenticationModule)
  fullName: System.Net.AuthenticationManager.Unregister(IAuthenticationModule)
- uid: System.Net.AuthenticationManager.Unregister(System.String)
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister(String)
  nameWithType: AuthenticationManager.Unregister(String)
  fullName: System.Net.AuthenticationManager.Unregister(String)
- uid: System.Net.AuthenticationManager.Authenticate*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Authenticate
  nameWithType: AuthenticationManager.Authenticate
- uid: System.Net.AuthenticationManager.CredentialPolicy*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CredentialPolicy
  nameWithType: AuthenticationManager.CredentialPolicy
- uid: System.Net.AuthenticationManager.CustomTargetNameDictionary*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: CustomTargetNameDictionary
  nameWithType: AuthenticationManager.CustomTargetNameDictionary
- uid: System.Net.AuthenticationManager.PreAuthenticate*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: PreAuthenticate
  nameWithType: AuthenticationManager.PreAuthenticate
- uid: System.Net.AuthenticationManager.Register*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Register
  nameWithType: AuthenticationManager.Register
- uid: System.Net.AuthenticationManager.RegisteredModules*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: RegisteredModules
  nameWithType: AuthenticationManager.RegisteredModules
- uid: System.Net.AuthenticationManager.Unregister*
  parent: System.Net.AuthenticationManager
  isExternal: false
  name: Unregister
  nameWithType: AuthenticationManager.Unregister
