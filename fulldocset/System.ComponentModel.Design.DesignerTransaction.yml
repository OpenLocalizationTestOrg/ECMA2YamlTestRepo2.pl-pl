### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerTransaction
  id: DesignerTransaction
  children:
  - System.ComponentModel.Design.DesignerTransaction.#ctor
  - System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)
  - System.ComponentModel.Design.DesignerTransaction.Cancel
  - System.ComponentModel.Design.DesignerTransaction.Canceled
  - System.ComponentModel.Design.DesignerTransaction.Commit
  - System.ComponentModel.Design.DesignerTransaction.Committed
  - System.ComponentModel.Design.DesignerTransaction.Description
  - System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignerTransaction.Finalize
  - System.ComponentModel.Design.DesignerTransaction.OnCancel
  - System.ComponentModel.Design.DesignerTransaction.OnCommit
  - System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose
  langs:
  - csharp
  name: DesignerTransaction
  nameWithType: DesignerTransaction
  fullName: System.ComponentModel.Design.DesignerTransaction
  type: Class
  summary: "Zapewnia sposób grupowania serii czasu projektowania działania w celu zwiększenia wydajności i włączyć większość typów zmian można cofnąć."
  remarks: "Transakcje można śledzić akcje, które można cofnąć później. Anulowanie transakcji, które automatycznie podejmie próbę wstecznego każdej zmianie przez ustawienie każdej zmiany właściwości na wartość zmiany przed można wycofać zmiany wprowadzone podczas transakcji. Transakcje można również poprawić wydajność podczas czynności przez odkładanie aktualizacji do wyświetlenia do momentu zakończenia transakcji.       Gdy transakcja jest w toku, niektóre składniki odroczenie ich przetwarzania, dopóki nie zakończy się transakcji przez nasłuchiwanie w <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>i <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>zdarzeń.</xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> </xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> W oknie właściwości, na przykład nie aktualizuje jego wyświetlania po otwarciu transakcji, dopóki transakcja została zamknięta.       Aby użyć transakcji zmianą lub wiele operacji, należy mieć z projektantem utworzyć DesignerTransaction dla każdej operacji lub seria działań, które powinny być się odwracalne. Uważaj, aby nie wykonywać akcje poza transakcje, które mogą uniemożliwić sekwencję zdarzeń cofania pomyślne zakończenie działania.       Nowe DesignerTransaction można uzyskać przez wywołanie <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>metody <xref:System.ComponentModel.Design.IDesignerHost>.</xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> Pamiętaj uzyskać DesignerTransaction każdego z aktywnego <xref:System.ComponentModel.Design.IDesignerHost>integrowana poprawnie przy użyciu projektanta transakcji przetwarzania mechanizmu, zamiast tworzenia nowej DesignerTransaction bezpośrednio.</xref:System.ComponentModel.Design.IDesignerHost>       Do wykonywania akcji w obrębie transakcji, należy najpierw utworzyć transakcji. Należy wywołać <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>metody, zanim nastąpi jego każdej zmiany lub zestaw zmian i <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>wystąpić metody po każdej zmiany lub zestaw zmian.</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> </xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> Na koniec Ukończ i zamknij transakcji przez wywołanie metody <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A>metody.</xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A>      > [!NOTE] > Podczas wprowadzania zmian wartości właściwości, należy użyć <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>metody <xref:System.ComponentModel.PropertyDescriptor>, który wywołuje metody zmiany składnika <xref:System.ComponentModel.Design.IComponentChangeService>i DesignerTransaction, reprezentująca zmianę automatycznie tworzy.</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>       Do wykonania transakcji, wykonaj następujące kroki: 1.  Wywołanie <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>uzyskanie DesignerTransaction, który może służyć do kontrolowania transakcji.</xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>      2.  W ramach `try` bloku dla każdej akcji, które mają być śledzone z DesignerTransaction, wywołanie <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>metody zmiany lub zmiany, następnie wywołaj <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>— Metoda, która sygnalizuje, że zostały wprowadzone zmiany lub zmiany.</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> </xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>      3.  Aby ukończyć transakcję, połączenie <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A>z poziomu `finally` bloku.</xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A>       W języku C#, można użyć `using` instrukcji zamiast `try/finally` zablokować, takie jak w poniższym przykładzie.      ```   using (host.CreateTransaction() {   // Insert your code here.   }   ```Aby anulować i spróbuj wycofać transakcji, zanim został przekazany, wywołaj <xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A>metody.</xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> Gdy <xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A>wywołania metody, akcje śledzone przez DesignerTransaction są wycofywane prób wycofanie zmian.</xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> Aby cofnąć akcje, które wystąpiły w ramach transakcji wcześniej, należy użyć polecenia Cofnij udostępniane przez środowisko deweloperskie."
  example:
  - "The following code example program demonstrates how to create a DesignerTransaction from a designer. To run this sample, compile the source code into a class library. You must add a reference to the System.Design assembly. In a new project, add a reference to the compiled DLL and add the component in the library to the **Toolbox**.  \n  \n There is extensive support for this feature in Visual Studio.  \n  \n Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](http://msdn.microsoft.com/library/fw694kde\\(v=vs.110\\).aspx).  \n  \n The designer can optionally display notifications about designer transaction events. If you add an instance of the `DTComponent` to a form while in design mode, a message box appears asking whether you would like to receive designer transaction event notifications. You may toggle these notifications using the shortcut menu that appears when you right-click an instance of the `DTComponent`. Transactions are created when you change values using the Properties window. You can also have the designer perform a transaction by clicking **Perform Example Transaction** on the shortcut menu for the component.  \n  \n [!code-cpp[DesignerTransaction Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._6_1.cpp)]\n [!code-vb[DesignerTransaction Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._6_1.vb)]\n [!code-cs[DesignerTransaction Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._6_1.cs)]"
  syntax:
    content: 'public abstract class DesignerTransaction : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: DesignerTransaction()
  nameWithType: DesignerTransaction.DesignerTransaction()
  fullName: System.ComponentModel.Design.DesignerTransaction.DesignerTransaction()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref> klasy bez opisu."
  syntax:
    content: protected DesignerTransaction ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: DesignerTransaction(String)
  nameWithType: DesignerTransaction.DesignerTransaction(String)
  fullName: System.ComponentModel.Design.DesignerTransaction.DesignerTransaction(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref> przy użyciu opisu określonej transakcji."
  remarks: "Ten konstruktor inicjuje transakcję o określonym opisie."
  syntax:
    content: protected DesignerTransaction (string description);
    parameters:
    - id: description
      type: System.String
      description: "Opis dla tej transakcji."
  overload: System.ComponentModel.Design.DesignerTransaction.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Cancel
  id: Cancel
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Cancel()
  nameWithType: DesignerTransaction.Cancel()
  fullName: System.ComponentModel.Design.DesignerTransaction.Cancel()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Anuluje transakcji i próbuje wycofać zmiany wprowadzone przez zdarzenia transakcji."
  syntax:
    content: public void Cancel ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Canceled
  id: Canceled
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Canceled
  nameWithType: DesignerTransaction.Canceled
  fullName: System.ComponentModel.Design.DesignerTransaction.Canceled
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera wartość wskazującą, czy transakcja została anulowana."
  remarks: "Po anulowaniu operacji projektanta mechanizm przetwarzania transakcji próbuje wycofanie zmian, które zostały wprowadzone do tej pory w transakcji. Określa, czy to się powiedzie zależy od takich czynników, jak typ każdej operacji, czy inne operacje zakłócać żadnego związanego kodu stanu oraz czy sekwencję oczekiwane operacje nie można ukończyć."
  syntax:
    content: public bool Canceled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli transakcja została anulowana; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerTransaction.Canceled*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Commit
  id: Commit
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Commit()
  nameWithType: DesignerTransaction.Commit()
  fullName: System.ComponentModel.Design.DesignerTransaction.Commit()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Zatwierdza tej transakcji."
  remarks: "Podczas operacji projektanta dokłada starań, transakcja jest uznawany za ukończone i nie śledzić dalszych zmian.       Po transakcji został przekazany, dalsze wywołania tej metody nic nie rób. Tę metodę należy wywoływać zawsze po utworzeniu transakcji w celu zapewnienia prawidłowego zamknięcia transakcji."
  syntax:
    content: public void Commit ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Committed
  id: Committed
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Committed
  nameWithType: DesignerTransaction.Committed
  fullName: System.ComponentModel.Design.DesignerTransaction.Committed
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera wartość wskazującą, czy transakcja została zatwierdzona."
  remarks: "Podczas operacji projektanta dokłada starań, transakcja jest uznawany za ukończone i nie śledzić dalszych zmian."
  syntax:
    content: public bool Committed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli transakcja została zatwierdzona; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerTransaction.Committed*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Description
  id: Description
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Description
  nameWithType: DesignerTransaction.Description
  fullName: System.ComponentModel.Design.DesignerTransaction.Description
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Pobiera opis dla transakcji."
  remarks: "Transakcja może mieć opis, który jest przydatny do identyfikowania rodzaj operacji."
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "Opis dla transakcji."
  overload: System.ComponentModel.Design.DesignerTransaction.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignerTransaction.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerTransaction.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Zwalnia zasoby niezarządzane używane przez <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref> i opcjonalnie zwalnia zasoby zarządzane."
  remarks: "Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A>metody.</xref:System.Object.Finalize%2A> `Dispose()`wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiona `true`. <xref:System.Object.Finalize%2A>wywołuje `Dispose` z `disposing` ustawioną `false`.</xref:System.Object.Finalize%2A>       Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.ComponentModel.Design.DesignerTransaction>odwołań.</xref:System.ComponentModel.Design.DesignerTransaction> Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.ComponentModel.Design.DesignerTransaction.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Finalize
  id: Finalize
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Finalize()
  nameWithType: DesignerTransaction.Finalize()
  fullName: System.ComponentModel.Design.DesignerTransaction.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Zwalnia zasoby skojarzone z tym obiektem. To zastąpienie zatwierdza tej transakcji, jeśli nie zostały jeszcze zatwierdzone."
  remarks: "Ta metoda zastępuje <xref:System.Object.Finalize%2A?displayProperty=fullName>i czyści zasoby, wywołując `Dispose(false)`.</xref:System.Object.Finalize%2A?displayProperty=fullName> Zastąpienie `Dispose(Boolean)` dostosować czyszczenia.       Kod aplikacji nie powinny wywoływać tej metody; obiekt `Finalize` metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacji przez moduł garbage collector została wyłączona przez wywołanie do <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>metody.</xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>       Aby uzyskać więcej informacji, zobacz [metody Finalize i destruktory](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [czyszczenie zasobów niezarządzanych](~/add/includes/ajax-current-ext-md.md), i [przesłaniania metody Finalize](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~DesignerTransaction ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.OnCancel
  id: OnCancel
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: OnCancel()
  nameWithType: DesignerTransaction.OnCancel()
  fullName: System.ComponentModel.Design.DesignerTransaction.OnCancel()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Zgłasza <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;> </xref> zdarzeń."
  remarks: "Po anulowaniu operacji projektanta mechanizm przetwarzania transakcji próbuje wycofanie zmian, które zostały wprowadzone do tej pory w transakcji. Określa, czy to się powiedzie zależy od takich czynników, jak typ każdej operacji, czy inne operacje zakłócać żadnego związanego kodu stanu oraz czy sekwencję oczekiwane operacje nie można ukończyć."
  syntax:
    content: protected abstract void OnCancel ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.OnCancel*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.OnCommit
  id: OnCommit
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: OnCommit()
  nameWithType: DesignerTransaction.OnCommit()
  fullName: System.ComponentModel.Design.DesignerTransaction.OnCommit()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Wykonuje faktyczną pracę zatwierdzania transakcji."
  remarks: "Podczas operacji projektanta dokłada starań, transakcja jest uznawany za ukończone i nie śledzić dalszych zmian."
  syntax:
    content: protected abstract void OnCommit ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.OnCommit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: DesignerTransaction.System.IDisposable.Dispose()
  fullName: System.ComponentModel.Design.DesignerTransaction.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Zwalnia wszelkie zasoby używane przez <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref>."
  remarks: "Po usunięciu transakcji jest zatwierdzone."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: DesignerTransaction()
  nameWithType: DesignerTransaction.DesignerTransaction()
  fullName: System.ComponentModel.Design.DesignerTransaction.DesignerTransaction()
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: DesignerTransaction(String)
  nameWithType: DesignerTransaction.DesignerTransaction(String)
  fullName: System.ComponentModel.Design.DesignerTransaction.DesignerTransaction(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.DesignerTransaction.Cancel
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Cancel()
  nameWithType: DesignerTransaction.Cancel()
  fullName: System.ComponentModel.Design.DesignerTransaction.Cancel()
- uid: System.ComponentModel.Design.DesignerTransaction.Canceled
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Canceled
  nameWithType: DesignerTransaction.Canceled
  fullName: System.ComponentModel.Design.DesignerTransaction.Canceled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerTransaction.Commit
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Commit()
  nameWithType: DesignerTransaction.Commit()
  fullName: System.ComponentModel.Design.DesignerTransaction.Commit()
- uid: System.ComponentModel.Design.DesignerTransaction.Committed
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Committed
  nameWithType: DesignerTransaction.Committed
  fullName: System.ComponentModel.Design.DesignerTransaction.Committed
- uid: System.ComponentModel.Design.DesignerTransaction.Description
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Description
  nameWithType: DesignerTransaction.Description
  fullName: System.ComponentModel.Design.DesignerTransaction.Description
- uid: System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignerTransaction.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerTransaction.Dispose(Boolean)
- uid: System.ComponentModel.Design.DesignerTransaction.Finalize
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Finalize()
  nameWithType: DesignerTransaction.Finalize()
  fullName: System.ComponentModel.Design.DesignerTransaction.Finalize()
- uid: System.ComponentModel.Design.DesignerTransaction.OnCancel
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: OnCancel()
  nameWithType: DesignerTransaction.OnCancel()
  fullName: System.ComponentModel.Design.DesignerTransaction.OnCancel()
- uid: System.ComponentModel.Design.DesignerTransaction.OnCommit
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: OnCommit()
  nameWithType: DesignerTransaction.OnCommit()
  fullName: System.ComponentModel.Design.DesignerTransaction.OnCommit()
- uid: System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: DesignerTransaction.System.IDisposable.Dispose()
  fullName: System.ComponentModel.Design.DesignerTransaction.System.IDisposable.Dispose()
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: DesignerTransaction
  nameWithType: DesignerTransaction.DesignerTransaction
- uid: System.ComponentModel.Design.DesignerTransaction.Cancel*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Cancel
  nameWithType: DesignerTransaction.Cancel
- uid: System.ComponentModel.Design.DesignerTransaction.Canceled*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Canceled
  nameWithType: DesignerTransaction.Canceled
- uid: System.ComponentModel.Design.DesignerTransaction.Commit*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Commit
  nameWithType: DesignerTransaction.Commit
- uid: System.ComponentModel.Design.DesignerTransaction.Committed*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Committed
  nameWithType: DesignerTransaction.Committed
- uid: System.ComponentModel.Design.DesignerTransaction.Description*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Description
  nameWithType: DesignerTransaction.Description
- uid: System.ComponentModel.Design.DesignerTransaction.Dispose*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Dispose
  nameWithType: DesignerTransaction.Dispose
- uid: System.ComponentModel.Design.DesignerTransaction.Finalize*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Finalize
  nameWithType: DesignerTransaction.Finalize
- uid: System.ComponentModel.Design.DesignerTransaction.OnCancel*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: OnCancel
  nameWithType: DesignerTransaction.OnCancel
- uid: System.ComponentModel.Design.DesignerTransaction.OnCommit*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: OnCommit
  nameWithType: DesignerTransaction.OnCommit
- uid: System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: DesignerTransaction.System.IDisposable.Dispose
