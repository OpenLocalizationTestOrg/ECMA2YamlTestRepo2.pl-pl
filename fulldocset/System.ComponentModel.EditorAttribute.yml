### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EditorAttribute
  id: EditorAttribute
  children:
  - System.ComponentModel.EditorAttribute.#ctor
  - System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  - System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  - System.ComponentModel.EditorAttribute.EditorBaseTypeName
  - System.ComponentModel.EditorAttribute.EditorTypeName
  - System.ComponentModel.EditorAttribute.Equals(System.Object)
  - System.ComponentModel.EditorAttribute.GetHashCode
  - System.ComponentModel.EditorAttribute.TypeId
  langs:
  - csharp
  name: EditorAttribute
  nameWithType: EditorAttribute
  fullName: System.ComponentModel.EditorAttribute
  type: Class
  summary: "Określa użyć, aby zmienić właściwość w edytorze. Ta klasa nie może być dziedziczona."
  remarks: "Podczas edytowania właściwości, Projektant wizualny należy utworzyć nowe wystąpienie klasy edytora określonego za pomocą okna dialogowego lub okna listy rozwijanej.       Użyj <xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A>Właściwości, aby znaleźć ten edytor typu podstawowego.</xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A> Dostępne tylko typ podstawowy jest <xref:System.Drawing.Design.UITypeEditor>.</xref:System.Drawing.Design.UITypeEditor>       Użyj <xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A>Właściwości można pobrać nazwy typu edytora skojarzonego z tym atrybutem.</xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A>       Aby uzyskać ogólne informacje na temat używania atrybutów. zobacz [atrybutów](~/add/includes/ajax-current-ext-md.md). Aby uzyskać więcej informacji dotyczących atrybutów czasu projektowania, zobacz [atrybuty i obsługi w czasie projektowania](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates the `MyImage` class. The class is marked with an EditorAttribute that specifies the <xref:System.Drawing.Design.ImageEditor> as its editor.  \n  \n [!code-cs[Classic EditorAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._81_1.cs)]\n [!code-cpp[Classic EditorAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._81_1.cpp)]\n [!code-vb[Classic EditorAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._81_1.vb)]  \n  \n The following code example creates an instance of the `MyImage` class, gets the attributes for the class, and then prints the name of the editor used by `myNewImage`.  \n  \n [!code-cs[Classic EditorAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._81_2.cs)]\n [!code-cpp[Classic EditorAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._81_2.cpp)]\n [!code-vb[Classic EditorAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._81_2.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=true, Inherited=true)]

      public sealed class EditorAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute()
  nameWithType: EditorAttribute.EditorAttribute()
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref> klasa o Edytorze domyślnego edytora."
  syntax:
    content: public EditorAttribute ();
    parameters: []
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(String,String)
  nameWithType: EditorAttribute.EditorAttribute(String,String)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref> klasy o nazwie typu i nazwa typu podstawowego edytora."
  remarks: "`typeName` Parametr musi być w <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>format.</xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>       <xref:System.Type>Reprezentowany przez `typeName` parametru musi dziedziczyć lub implementować klasę podstawową.</xref:System.Type>       <xref:System.Type>Reprezentowany przez `baseTypeName` parametr jest używany jako klucz można znaleźć określonego edytora, ponieważ typem danych może mieć więcej niż jeden edytor powiązanych z nim</xref:System.Type> Może to być dowolnej klasy, ale jest zwykle <xref:System.Drawing.Design.UITypeEditor>lub <xref:System.ComponentModel.ComponentEditor>.</xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>"
  syntax:
    content: public EditorAttribute (string typeName, string baseTypeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Nazwa FQDN typu edytora."
    - id: baseTypeName
      type: System.String
      description: "Nazwa FQDN typu klasy podstawowej lub interfejsu do użycia jako klucz wyszukiwania edytora. Ta klasa musi być lub pochodzić od <xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>."
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(String,Type)
  nameWithType: EditorAttribute.EditorAttribute(String,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref> klasy o nazwie typu i typu podstawowego."
  remarks: "`typeName` Parametr musi być w <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>format.</xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>       <xref:System.Type>Reprezentowany przez `typeName` musi dziedziczyć lub implementować klasę podstawową.</xref:System.Type>       `baseType` Parametr jest używany jako klucz można znaleźć określonego edytora, ponieważ typem danych może mieć więcej niż jeden edytor skojarzonych z nim."
  syntax:
    content: public EditorAttribute (string typeName, Type baseType);
    parameters:
    - id: typeName
      type: System.String
      description: "Nazwa FQDN typu edytora."
    - id: baseType
      type: System.Type
      description: "<xref:System.Type>Klasy podstawowej lub interfejsu do użycia jako klucz wyszukiwania edytora.</xref:System.Type> Ta klasa musi być lub pochodzić od <xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>."
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  id: '#ctor(System.Type,System.Type)'
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorAttribute(Type,Type)
  nameWithType: EditorAttribute.EditorAttribute(Type,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(Type,Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref> z typu i typu podstawowego."
  remarks: "<xref:System.Type>Reprezentowany przez `type` parametru musi dziedziczyć lub implementować klasę podstawową.</xref:System.Type>       `baseType` Parametr jest używany jako klucz można znaleźć określonego edytora, ponieważ typem danych może mieć więcej niż jeden edytor skojarzonych z nim."
  syntax:
    content: public EditorAttribute (Type type, Type baseType);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>reprezentujący typ edytora.</xref:System.Type>"
    - id: baseType
      type: System.Type
      description: "<xref:System.Type>Klasy podstawowej lub interfejsu do użycia jako klucz wyszukiwania edytora.</xref:System.Type> Ta klasa musi być lub pochodzić od <xref href=&quot;System.Drawing.Design.UITypeEditor&quot;> </xref>."
  overload: System.ComponentModel.EditorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  id: EditorBaseTypeName
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera nazwę klasy podstawowej lub interfejsu służy jako klucz wyszukiwania dla tego edytora."
  remarks: "Właściwość EditorBaseTypeName jest kwalifikowana nazwa typu zestawu. [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] Zawiera zarówno <xref:System.Drawing.Design.UITypeEditor>i <xref:System.ComponentModel.ComponentEditor>jako prawidłowe klasy podstawowej, ale każda wartość jest tutaj prawidłowe.</xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>"
  syntax:
    content: public string EditorBaseTypeName { get; }
    return:
      type: System.String
      description: "Nazwa klasy podstawowej lub interfejsu służy jako klucz wyszukiwania dla tego edytora."
  overload: System.ComponentModel.EditorAttribute.EditorBaseTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.EditorTypeName
  id: EditorTypeName
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorTypeName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera nazwę klasy edytora w &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; format."
  syntax:
    content: public string EditorTypeName { get; }
    return:
      type: System.String
      description: "Nazwa klasy edytora w &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; format."
  overload: System.ComponentModel.EditorAttribute.EditorTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EditorAttribute.Equals(Object)
  fullName: System.ComponentModel.EditorAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca czy wartość dany obiekt jest taki sam, jak bieżący <xref href=&quot;System.ComponentModel.EditorAttribute&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Obiekt do testu równości wartości."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartość danego obiektu jest taki sam jak bieżący obiekt; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.EditorAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EditorAttribute.GetHashCode()
  fullName: System.ComponentModel.EditorAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Zwraca wartość skrótu dla tego wystąpienia."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32-bitowej podpisanej liczby całkowitej wartość skrótu."
  overload: System.ComponentModel.EditorAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EditorAttribute.TypeId
  id: TypeId
  parent: System.ComponentModel.EditorAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: EditorAttribute.TypeId
  fullName: System.ComponentModel.EditorAttribute.TypeId
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Pobiera unikatowy identyfikator dla tego typu atrybutu."
  remarks: "Właściwość TypeId jest używana przez filtrowanie algorytmy do identyfikowania dwa atrybuty, które są tego samego typu. W przypadku większości atrybutów, to po prostu zwraca <xref:System.Type>wystąpienia dla atrybutu.</xref:System.Type> <xref:System.ComponentModel.EditorAttribute>zastąpienia, aby uwzględnić typu typu podstawowego edytora.</xref:System.ComponentModel.EditorAttribute>"
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "Unikatowy identyfikator dla tego typu atrybutu."
  overload: System.ComponentModel.EditorAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.EditorAttribute.#ctor
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute()
  nameWithType: EditorAttribute.EditorAttribute()
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute()
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(String,String)
  nameWithType: EditorAttribute.EditorAttribute(String,String)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(String,Type)
  nameWithType: EditorAttribute.EditorAttribute(String,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute(Type,Type)
  nameWithType: EditorAttribute.EditorAttribute(Type,Type)
  fullName: System.ComponentModel.EditorAttribute.EditorAttribute(Type,Type)
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorBaseTypeName
- uid: System.ComponentModel.EditorAttribute.EditorTypeName
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
  fullName: System.ComponentModel.EditorAttribute.EditorTypeName
- uid: System.ComponentModel.EditorAttribute.Equals(System.Object)
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: EditorAttribute.Equals(Object)
  fullName: System.ComponentModel.EditorAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.EditorAttribute.GetHashCode
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: EditorAttribute.GetHashCode()
  fullName: System.ComponentModel.EditorAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.EditorAttribute.TypeId
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: TypeId
  nameWithType: EditorAttribute.TypeId
  fullName: System.ComponentModel.EditorAttribute.TypeId
- uid: System.ComponentModel.EditorAttribute.#ctor*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorAttribute
  nameWithType: EditorAttribute.EditorAttribute
- uid: System.ComponentModel.EditorAttribute.EditorBaseTypeName*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorBaseTypeName
  nameWithType: EditorAttribute.EditorBaseTypeName
- uid: System.ComponentModel.EditorAttribute.EditorTypeName*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: EditorTypeName
  nameWithType: EditorAttribute.EditorTypeName
- uid: System.ComponentModel.EditorAttribute.Equals*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: Equals
  nameWithType: EditorAttribute.Equals
- uid: System.ComponentModel.EditorAttribute.GetHashCode*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: EditorAttribute.GetHashCode
- uid: System.ComponentModel.EditorAttribute.TypeId*
  parent: System.ComponentModel.EditorAttribute
  isExternal: false
  name: TypeId
  nameWithType: EditorAttribute.TypeId
