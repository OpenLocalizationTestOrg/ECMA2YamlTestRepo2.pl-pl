### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingExpression
  id: BindingExpression
  children:
  - System.Windows.Data.BindingExpression.DataItem
  - System.Windows.Data.BindingExpression.ParentBinding
  - System.Windows.Data.BindingExpression.ResolvedSource
  - System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  - System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  - System.Windows.Data.BindingExpression.UpdateSource
  - System.Windows.Data.BindingExpression.UpdateTarget
  langs:
  - csharp
  name: BindingExpression
  nameWithType: BindingExpression
  fullName: System.Windows.Data.BindingExpression
  type: Class
  summary: "Zawiera informacje dotyczące jednego wystąpienia <xref href=&quot;System.Windows.Data.Binding&quot;> </xref>."
  remarks: "<xref:System.Windows.Data.Binding>Klasa jest klasą wysokiego poziomu dla deklaracji powiązania.</xref:System.Windows.Data.Binding> Klasa operację BindingExpression jest obiekt obsługujący połączenie między powiązanie źródło i cel wiązania. A <xref:System.Windows.Data.Binding>zawiera wszystkie informacje, które mogą być współużytkowane przez kilka obiektów operację BindingExpression.</xref:System.Windows.Data.Binding> Operację BindingExpression jest wyrażeniem wystąpienia nie może być współużytkowana i zawiera wszystkie informacje o wystąpieniu o <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding>       Rozważmy na przykład następujące polecenie, gdzie `myDataObject` jest wystąpieniem `MyData` klasy `myBinding` jest źródłem <xref:System.Windows.Data.Binding>obiektu, i `MyData` klasa jest klasą zdefiniowanych, który zawiera właściwości ciągu o nazwie `MyDataProperty`.</xref:System.Windows.Data.Binding> W tym przykładzie wiąże zawartości tekstu `mytext`, który jest wystąpieniem <xref:System.Windows.Controls.TextBlock>, do `MyDataProperty`.</xref:System.Windows.Controls.TextBlock>       [!code-cs[CodeOnlyBinding&#1;](~/add/codesnippet/csharp/CodeOnlyBinding/binding.cs#1)][!code-vb[CodeOnlyBinding&#1;](~/add/codesnippet/visualbasic/CodeOnlyBinding_VB/App.vb#1) ] można używać tego samego `myBinding` obiekt, aby utworzyć inne powiązania.   Na przykład może użyć `myBinding` do powiązania zawartości tekstowej pola wyboru obiektu `MyDataProperty`. W takim scenariuszu będzie dwa wystąpienia operację BindingExpression, które współużytkują `myBinding` obiektu.       Obiekt operację BindingExpression można uzyskać za pomocą <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>metody lub <xref:System.Windows.FrameworkElement.GetBindingExpression%2A>metody w obiekcie powiązanym z danymi.</xref:System.Windows.FrameworkElement.GetBindingExpression%2A> </xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>"
  syntax:
    content: 'public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener'
  inheritance:
  - System.Object
  - System.Windows.Expression
  - System.Windows.Data.BindingExpressionBase
  implements:
  - System.Windows.IWeakEventListener
  inheritedMembers:
  - System.Windows.Data.BindingExpressionBase.BindingGroup
  - System.Windows.Data.BindingExpressionBase.HasError
  - System.Windows.Data.BindingExpressionBase.HasValidationError
  - System.Windows.Data.BindingExpressionBase.IsDirty
  - System.Windows.Data.BindingExpressionBase.ParentBindingBase
  - System.Windows.Data.BindingExpressionBase.Status
  - System.Windows.Data.BindingExpressionBase.Target
  - System.Windows.Data.BindingExpressionBase.TargetProperty
  - System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate
  - System.Windows.Data.BindingExpressionBase.ValidationError
  - System.Windows.Data.BindingExpressionBase.ValidationErrors
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.DataItem
  id: DataItem
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: DataItem
  nameWithType: BindingExpression.DataItem
  fullName: System.Windows.Data.BindingExpression.DataItem
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera obiekt źródłowy powiązania, który to <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> używa."
  remarks: ''
  example:
  - "The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the DataItem property to access the binding source object.  \n  \n The <xref:System.Windows.Controls.TextBlock> `SavingsText` is the binding target object, and its <xref:System.Windows.Controls.TextBlock.Text%2A> property is the binding target property.  \n  \n [!code-cs[DirectionalBinding#OnRentRaise](~/add/codesnippet/csharp/DirectionalBinding/Page1.xaml.cs#onrentraise)]\n [!code-vb[DirectionalBinding#OnRentRaise](~/add/codesnippet/visualbasic/DirectionalBinding_VB/DirectionalBinding.vb#onrentraise)]"
  syntax:
    content: public object DataItem { get; }
    return:
      type: System.Object
      description: "Obiekt źródłowy powiązanie tego <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> używa."
  overload: System.Windows.Data.BindingExpression.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ParentBinding
  id: ParentBinding
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
  fullName: System.Windows.Data.BindingExpression.ParentBinding
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Zwraca <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> obiektu bieżącego <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>."
  syntax:
    content: public System.Windows.Data.Binding ParentBinding { get; }
    return:
      type: System.Windows.Data.Binding
      description: "<xref href=&quot;System.Windows.Data.Binding&quot;> </xref> Obiektu bieżącego wyrażenia powiązania."
  overload: System.Windows.Data.BindingExpression.ParentBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ResolvedSource
  id: ResolvedSource
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
  fullName: System.Windows.Data.BindingExpression.ResolvedSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera obiekt źródłowy powiązanie dla <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>."
  syntax:
    content: public object ResolvedSource { get; }
    return:
      type: System.Object
      description: "Powiązania obiektu źródłowego dla tego <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>."
  overload: System.Windows.Data.BindingExpression.ResolvedSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  id: ResolvedSourcePropertyName
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
  fullName: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Pobiera nazwę właściwości powiązania źródłowego dla tego <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>."
  syntax:
    content: public string ResolvedSourcePropertyName { get; }
    return:
      type: System.String
      description: "Nazwa właściwości źródła powiązania dla tego <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref>."
  overload: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  id: System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  isEii: true
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ten element członkowski obsługuje [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastrukturę i nie jest przeznaczona do użycia bezpośrednio w kodzie."
  syntax:
    content: bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);
    parameters:
    - id: managerType
      type: System.Type
      description: "Typ <xref href=&quot;System.Windows.WeakEventManager&quot;> </xref> wywołaniem tej metody. Rozpoznaje to tylko obiekty typu Menedżera <xref href=&quot;System.Collections.Specialized.CollectionChangedEventManager&quot;> </xref>."
    - id: sender
      type: System.Object
      description: "Obiekt, który pochodzi zdarzenia."
    - id: e
      type: System.EventArgs
      description: "Dane zdarzenia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli odbiornik obsługi zdarzenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.UpdateSource
  id: UpdateSource
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: UpdateSource()
  nameWithType: BindingExpression.UpdateSource()
  fullName: System.Windows.Data.BindingExpression.UpdateSource()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Wysyła wartość docelowa bieżącego powiązania do powiązania właściwości source w <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref> lub <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref> powiązania."
  remarks: "Ta metoda nie robi nic, gdy <xref:System.Windows.Data.Binding.Mode%2A>powiązania nie jest <xref:System.Windows.Data.BindingMode>ani <xref:System.Windows.Data.BindingMode>.</xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.Binding.Mode%2A>       Jeśli <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>ma ustawioną wartość wiązania <xref:System.Windows.Data.UpdateSourceTrigger>, należy wywołać metodę UpdateSource lub zmiany nie zostaną przeniesione wstecz do źródła.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>"
  syntax:
    content: public override void UpdateSource ();
    parameters: []
  overload: System.Windows.Data.BindingExpression.UpdateSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Powiązanie został odłączony z elementem docelowym."
  platform:
  - net462
- uid: System.Windows.Data.BindingExpression.UpdateTarget
  id: UpdateTarget
  parent: System.Windows.Data.BindingExpression
  langs:
  - csharp
  name: UpdateTarget()
  nameWithType: BindingExpression.UpdateTarget()
  fullName: System.Windows.Data.BindingExpression.UpdateTarget()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Wymusza transfer danych z właściwości source powiązania z właściwością docelową powiązania."
  remarks: "Ta metoda umożliwia wymuszenie transfer danych z źródła właściwości z właściwością docelową. Jeśli obiekt źródłowy implementuje mechanizm właściwego powiadomień zmiany właściwości takich jak <xref:System.ComponentModel.INotifyPropertyChanged>, kierować aktualizacje wykonywane automatycznie.</xref:System.ComponentModel.INotifyPropertyChanged> Istnieje jednak możliwość użycia tej metody można zaktualizować właściwość target jawnie w przypadkach, gdy obiektu źródłowego nie zapewnia prawidłowego powiadomień zmiany właściwości. Tej metody można użyć również, jeśli aplikacja wymaga zaktualizować właściwości obiektu docelowego okresowo."
  syntax:
    content: public override void UpdateTarget ();
    parameters: []
  overload: System.Windows.Data.BindingExpression.UpdateTarget*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Powiązanie został odłączony z elementem docelowym."
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingExpressionBase
  isExternal: false
  name: System.Windows.Data.BindingExpressionBase
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.BindingExpression.DataItem
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: DataItem
  nameWithType: BindingExpression.DataItem
  fullName: System.Windows.Data.BindingExpression.DataItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.BindingExpression.ParentBinding
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
  fullName: System.Windows.Data.BindingExpression.ParentBinding
- uid: System.Windows.Data.Binding
  parent: System.Windows.Data
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
- uid: System.Windows.Data.BindingExpression.ResolvedSource
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
  fullName: System.Windows.Data.BindingExpression.ResolvedSource
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
  fullName: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
  fullName: System.Windows.Data.BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent(Type,Object,EventArgs)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Data.BindingExpression.UpdateSource
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateSource()
  nameWithType: BindingExpression.UpdateSource()
  fullName: System.Windows.Data.BindingExpression.UpdateSource()
- uid: System.Windows.Data.BindingExpression.UpdateTarget
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateTarget()
  nameWithType: BindingExpression.UpdateTarget()
  fullName: System.Windows.Data.BindingExpression.UpdateTarget()
- uid: System.Windows.Data.BindingExpression.DataItem*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: DataItem
  nameWithType: BindingExpression.DataItem
- uid: System.Windows.Data.BindingExpression.ParentBinding*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ParentBinding
  nameWithType: BindingExpression.ParentBinding
- uid: System.Windows.Data.BindingExpression.ResolvedSource*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSource
  nameWithType: BindingExpression.ResolvedSource
- uid: System.Windows.Data.BindingExpression.ResolvedSourcePropertyName*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: ResolvedSourcePropertyName
  nameWithType: BindingExpression.ResolvedSourcePropertyName
- uid: System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: System.Windows.IWeakEventListener.ReceiveWeakEvent
  nameWithType: BindingExpression.System.Windows.IWeakEventListener.ReceiveWeakEvent
- uid: System.Windows.Data.BindingExpression.UpdateSource*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateSource
  nameWithType: BindingExpression.UpdateSource
- uid: System.Windows.Data.BindingExpression.UpdateTarget*
  parent: System.Windows.Data.BindingExpression
  isExternal: false
  name: UpdateTarget
  nameWithType: BindingExpression.UpdateTarget
