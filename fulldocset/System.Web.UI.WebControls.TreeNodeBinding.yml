### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeBinding
  id: TreeNodeBinding
  children:
  - System.Web.UI.WebControls.TreeNodeBinding.#ctor
  - System.Web.UI.WebControls.TreeNodeBinding.DataMember
  - System.Web.UI.WebControls.TreeNodeBinding.Depth
  - System.Web.UI.WebControls.TreeNodeBinding.FormatString
  - System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  - System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  - System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  - System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  - System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  - System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  - System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  - System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  - System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  - System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.TreeNodeBinding.Target
  - System.Web.UI.WebControls.TreeNodeBinding.TargetField
  - System.Web.UI.WebControls.TreeNodeBinding.Text
  - System.Web.UI.WebControls.TreeNodeBinding.TextField
  - System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  - System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  - System.Web.UI.WebControls.TreeNodeBinding.ToString
  - System.Web.UI.WebControls.TreeNodeBinding.Value
  - System.Web.UI.WebControls.TreeNodeBinding.ValueField
  langs:
  - csharp
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding
  fullName: System.Web.UI.WebControls.TreeNodeBinding
  type: Class
  summary: "Definiuje relację między elementem danych i jest on wiązany w węźle <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, gdzie każdy element danych zawiera wiele pól (np. element XML o kilka atrybutów), węzeł zawiera wartość, która jest zwracana w wyniku `ToString` metody elementu danych domyślnie.</xref:System.Web.UI.WebControls.TreeView> W przypadku elementu XML węzła wyświetla nazwy elementu, która zawiera wewnętrzna struktura drzewa, ale nie jest przydatne w przeciwnym razie wartość. Właściwości węzła można powiązać z określonym polem, określając powiązania węzła drzewa. Obiekt TreeNodeBinding definiuje relację między każdego elementu danych i węzeł, który jest wiązany.       <xref:System.Web.UI.WebControls.TreeView>Formant przechowuje jego obiekty TreeNodeBinding w <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>Właściwości i stosuje powiązania ze źródłem danych, aby utworzyć relacje jeden do jednego między hierarchią drzewa i hierarchii źródła danych.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> </xref:System.Web.UI.WebControls.TreeView> Dla każdego elementu danych w źródle danych <xref:System.Web.UI.WebControls.TreeView>kontroli próbuje dopasować element danych na obiekt TreeNodeBinding aby można było utworzyć odpowiednie <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeView>       Podczas tworzenia obiektu TreeNodeBinding, należy określić kryteria dla powiązania. Kryteria wskazuje, kiedy wiązania elementu danych do węzła. Można określić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>lub obu właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> Określenie zarówno jest bardziej wydajne niewielkie. Głębokość węzła określa poziom węzła, który zostaje powiązany. Na przykład następujące oświadczenie TreeNodeBinding wiąże `Name` i `ID` pola źródła danych, aby <xref:System.Web.UI.WebControls.TreeNode.Text%2A>i <xref:System.Web.UI.WebControls.TreeNode.Value%2A>Właściwości, odpowiednio dla wszystkich węzłów o głębi 0: ```   <asp:TreeNodeBinding Depth=&quot;0&quot; TextField=&quot;Name&quot; ValueField=&quot;ID&quot;>   ``` elementu członkowskiego danych określa typ elementu danych w źródle danych, ale może reprezentować różne informacje w zależności od źródła danych.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> Każdy element danych w źródle danych hierarchicznych (reprezentowane przez <xref:System.Web.UI.IHierarchyData?displayProperty=fullName>interfejsu) udostępnia <xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName>właściwość, która określa typ elementu danych.</xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName> </xref:System.Web.UI.IHierarchyData?displayProperty=fullName> Na przykład element członkowski danych elementu XML określa nazwę elementu. Jeśli źródło danych zawiera wiele typów elementów danych, element członkowski danych określa dane, których typ, aby użyć elementu. Wiąże następujące oświadczenie TreeNodeBinding `<Book>` elementy <xref:System.Web.UI.WebControls.XmlDataSource>kontroli do wszystkich węzłów w drzewie, bez względu na lokalizację w hierarchii: ```   <asp:TreeNodeBinding DataMember=&quot;Book&quot; TextField=&quot;Title&quot; ValueField= &quot;ISBN&quot;>   ``` po nawiązaniu kryteria powiązania można następnie powiązać właściwość <xref:System.Web.UI.WebControls.TreeNode>obiekt, który może być powiązana z wartością.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.XmlDataSource> Można powiązać z elementu danych lub wartość statyczną. Powiązany z wartością statyczną wszystkich <xref:System.Web.UI.WebControls.TreeNode>obiektów, do których zastosowano obiekt TreeNodeBinding mają taką samą wartość.</xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Można selektywnie zastąpić powiązania właściwości w <xref:System.Web.UI.WebControls.TreeNode>obiektu ustawiając odpowiednią właściwość bezpośrednio w węźle.</xref:System.Web.UI.WebControls.TreeNode>       W poniższej tabeli wymieniono właściwości klasy TreeNodeBinding, dzięki którym można powiązać właściwości z <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola elementu danych.</xref:System.Web.UI.WebControls.TreeNode>      | Właściwość | Opis elementu |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>| Pola, które można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>| Pola, które można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A>| Pola, które można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A>| Pola, które można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.Text%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A>| Pola, które można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A>| Pola, które można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.Value%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |       W poniższej tabeli wymieniono właściwości klasy TreeNodeBinding, dzięki którym można powiązać właściwości z <xref:System.Web.UI.WebControls.TreeNode>obiektu na wartość statyczną.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>      | Właściwość | Opis elementu |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A>| Wartość statyczna można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>| Wartość statyczna można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>| Wartość statyczna można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>| Wartość statyczna można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A>| Wartość statyczna można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A>| Wartość statyczna można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>| Wartość statyczna można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.Target%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A>| Wartość statyczna można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.Text%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A>| Wartość statyczna można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |   | <xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A>| Wartość statyczna można powiązać z właściwością <xref:System.Web.UI.WebControls.TreeNode.Value%2A>obiektu <xref:System.Web.UI.WebControls.TreeNode>. |       Jeśli konflikt TreeNodeBinding obiekty są zdefiniowane <xref:System.Web.UI.WebControls.TreeView>formantu ma zastosowanie powiązania węzła drzewa w następującej kolejności: 1.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A>  Obiekt TreeNodeBinding definiuje, który jest zgodny zarówno głębokości, jak i element członkowski danych.      2.  Obiekt TreeNodeBinding, który definiuje i zgodny element członkowski danych.      3.  Obiekt TreeNodeBinding, który definiuje i jest zgodna tylko głębokość.      4.  Obiekt TreeNodeBinding, który definiuje element członkowski danych ani głębokość. (Ten typ powiązania węzeł drzewa jest stosowany do wszystkich węzłów w drzewie).      5.  Obiekt TreeNodeBinding, które nie mają odpowiednika w źródle danych. W takim przypadku wartość, która jest zwracana w wyniku `ToString` metody element danych jest następnie związana z <xref:System.Web.UI.WebControls.TreeNode.Text%2A>i <xref:System.Web.UI.WebControls.TreeNode.Value%2A>właściwości węzłów, do których zastosowano obiekt TreeNodeBinding.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>       Klasa TreeNodeBinding umożliwia również formatowania tekstu, który jest wyświetlany w węźle przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.FormatString%2A>"
  example:
  - "The following table shows some example tree node binding declarations.  \n  \n|Example binding|Description|  \n|---------------------|-----------------|  \n|`<asp:TreeNodeBinding TextField=\"Title\" ValueField= \"ID\"/>`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes in the tree to the `Title` and `ID` fields of the data source, respectively. All nodes use this tree node binding declaration because the <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> and <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> properties are not set.|  \n|`<asp:TreeNodeBinding DataMember= \"Book\" TextField= \"Title\" ValueField= \"ID\"/>`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes in the tree to the `Title` and `ID` fields of the `Book` data item in the data source, respectively.|  \n|`<asp:TreeNodeBinding Depth=\"2\" TextField= \"Title\" ValueField= \"ID\"/>`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes with a depth of 2 in the tree to the `Title` and `ID` fields of the data item in the data source, respectively.|  \n|`<asp:TreeNodeBinding DataMember=\"Book\" Depth= \"2\" TextField= \"Title\" ValueField= \"ID\" ImageUrl= \"Image.jpg\">`|Binds the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> and <xref:System.Web.UI.WebControls.TreeNode.Value%2A> properties of all nodes with a depth of 2 in the tree to the `Title` and `ID` fields of the `Book` data item in the data source, respectively. Also binds the <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> property of the nodes to a static value.|  \n  \n This section contains three code examples. The first code example demonstrates how to use TreeNodeBinding objects declaratively to define the relationship between a node and a data item. The second code example demonstrates how to use TreeNodeBinding objects programmatically to define the relationship between a node and a data item. The third code example provides sample XML data for the first and second code examples.  \n  \n The following code example demonstrates how to use TreeNodeBinding objects declaratively to define the relationship between a node and a data item. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_50_1.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_50_1.aspx)]  \n  \n The following code example demonstrates how to use TreeNodeBinding objects programmatically to define the relationship between a node and a data item. For this example to work correctly, you must copy the sample XML data that is provided in the next code example to a file named Book.xml.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_50_2.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_50_2.aspx)]  \n  \n The following code example provides sample XML data for the preceding code examples.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("TextField")]

      public sealed class TreeNodeBinding : ICloneable, System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IDataSourceViewSchemaAccessor
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: TreeNodeBinding()
  nameWithType: TreeNodeBinding.TreeNodeBinding()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TreeNodeBinding()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> klasy."
  remarks: "Użyj konstruktora TreeNodeBinding zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.TreeNodeBinding>klasy.</xref:System.Web.UI.WebControls.TreeNodeBinding> Często jest używany podczas wypełniania dynamicznie <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>Kolekcja <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>"
  example:
  - "The following code example demonstrates how to use the TreeNodeBinding constructor to add a <xref:System.Web.UI.WebControls.TreeNodeBinding> object dynamically to the <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> collection of a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_41_1.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_41_1.aspx)]"
  syntax:
    content: public TreeNodeBinding ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.DataMember
  id: DataMember
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: DataMember
  nameWithType: TreeNodeBinding.DataMember
  fullName: System.Web.UI.WebControls.TreeNodeBinding.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość do dopasowywania &lt;xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName&gt; właściwość elementu danych określić, czy ma być stosowana powiązanie węzła drzewa."
  remarks: "Element członkowski danych określa typ elementu danych w źródle danych, ale może reprezentować różne informacje w zależności od źródła danych. Każdy element danych w źródle danych hierarchicznych (reprezentowane przez <xref:System.Web.UI.IHierarchyData?displayProperty=fullName>obiektu) udostępnia <xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName>właściwość, która określa typ elementu danych.</xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName> </xref:System.Web.UI.IHierarchyData?displayProperty=fullName> Na przykład element członkowski danych elementu XML określa nazwę elementu. Jeśli źródło danych zawiera wiele typów elementów danych, element członkowski danych określa dane, których typ, aby użyć elementu. Następujące <xref:System.Web.UI.WebControls.TreeNodeBinding>wiązania deklaracji `<Book>` elementy <xref:System.Web.UI.WebControls.XmlDataSource>kontroli do wszystkich węzłów w drzewie, bez względu na lokalizację w hierarchii: ```   <asp:TreeNodeBinding DataMember=&quot;Book&quot; TextField=&quot;Title&quot; ValueField= &quot;ISBN&quot;>   ``` podczas tworzenia <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu, należy określić kryteria dla powiązania.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.TreeNodeBinding> Kryteria wskazuje, kiedy wiązania elementu danych do węzła. Można określić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>lub właściwości DataMember lub obu właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> Określenie zarówno jest bardziej wydajne niewielkie.       Po nawiązaniu kryteria powiązania można następnie powiązać właściwość <xref:System.Web.UI.WebControls.TreeNode>obiekt, który może być powiązana z wartością.</xref:System.Web.UI.WebControls.TreeNode> Można powiązać z elementu danych lub wartość statyczną. Powiązany z wartością statyczną wszystkich <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>zastosowano obiekt mają taką samą wartość.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the DataMember property to specify which XML element to bind to a node. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the DataMember property to specify which XML element to bind to a node. For this code example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingDataMember#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_464_1.aspx)]\n [!code-cs[TreeNodeBindingDataMember#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_464_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public string DataMember { get; set; }
    return:
      type: System.String
      description: "Wartość do dopasowania do elementu danych &lt;xref:System.Web.UI.IHierarchyData.Type%2A?displayProperty=fullName&gt; właściwości w celu określenia, czy ma być stosowana powiązanie węzła drzewa. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie ustawiono właściwości DataMember."
  overload: System.Web.UI.WebControls.TreeNodeBinding.DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Depth
  id: Depth
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Depth
  nameWithType: TreeNodeBinding.Depth
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Depth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub Ustawia głębokość węzła, w którym <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu."
  remarks: "Głębokość węzła określa poziom węzła, który zostaje powiązany. Na przykład następująca <xref:System.Web.UI.WebControls.TreeNodeBinding>wiązania deklaracji `Name` i `ID` pola źródła danych, aby <xref:System.Web.UI.WebControls.TreeNode.Text%2A>i <xref:System.Web.UI.WebControls.TreeNode.Value%2A>Właściwości, odpowiednio dla wszystkich węzłów o głębi 0: ```   <asp:TreeNodeBinding Depth=&quot;0&quot; TextField=&quot;Name&quot; ValueField=&quot;ID&quot;>   ``` podczas tworzenia <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu, należy określić kryteria dla powiązania.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding> Kryteria wskazuje, kiedy wiązania elementu danych do węzła. Można określić głębokość lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>lub obu właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> Określenie zarówno jest bardziej wydajne niewielkie.       Po nawiązaniu kryteria powiązania można następnie powiązać właściwość <xref:System.Web.UI.WebControls.TreeNode>obiekt, który może być powiązana z wartością.</xref:System.Web.UI.WebControls.TreeNode> Można powiązać z elementu danych lub wartość statyczną. Powiązany z wartością statyczną wszystkich <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>zastosowano obiekt mają taką samą wartość.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Depth property to apply a <xref:System.Web.UI.WebControls.TreeNodeBinding> object at a specific node depth. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the Depth property to apply a <xref:System.Web.UI.WebControls.TreeNodeBinding> object at a specific node depth. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingDataMember#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_444_1.aspx)]\n [!code-cs[TreeNodeBindingDataMember#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_444_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public int Depth { get; set; }
    return:
      type: System.Int32
      description: "Głębokość węzła, w którym <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu. Wartość domyślna to -1, co oznacza, że nie ustawiono właściwości głębokość."
  overload: System.Web.UI.WebControls.TreeNodeBinding.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.FormatString
  id: FormatString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: FormatString
  nameWithType: TreeNodeBinding.FormatString
  fullName: System.Web.UI.WebControls.TreeNodeBinding.FormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia ciąg, który określa format wyświetlania tekst w węźle, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu."
  remarks: "Właściwości FormatString jest używana do zapewnienia formatu niestandardowego tekstu węzła. Ciąg formatu danych składa się z dwóch części oddzielone dwukropkiem w formie { `A` : `Bxx` }. Na przykład ciąg formatowania `{0:F2}` Wyświetla liczbę stałoprzecinkowe z dwóch miejsc po przecinku.      > [!NOTE] > Cały ciąg musi być ujęta w nawiasy, aby wskazać, że ciąg formatu i nie literału ciągu. Tekst poza nawiasy klamrowe jest wyświetlany jako zwykły tekst.       Wartość przed dwukropkiem (`A` w przykładzie ogólne) określa indeks parametru liczony od zera liście parametrów.      > [!NOTE] > Tę wartość można ustawić tylko na 0, ponieważ istnieje tylko jedna wartość w każdym węźle.       Znak po dwukropkiem (`B` w przykładzie ogólne) określa format wyświetlania wartości. Poniższa tabela zawiera listę typowych formatach.      | Format znak | Wyświetla wartości liczbowe w |   |----------------------|--------------------------------|   | `C`| Formacie waluty. |   | `D`| Format dziesiętny. |   | `E`| Scientific (wykładniczy) format. |   | `F`| Stały format. |   | `G`| Ogólny format. |   | `N`| Format liczby. |   | `X`| Szesnastkowej. |      > [!NOTE] > Z wyjątkiem `X`, format znak nie jest uwzględniana wielkość liter. `X` Format znak Wyświetla znaki szesnastkowe w przypadku, gdy jest określona.       Wartość po znaku formatu (`xx` w przykładzie ogólne) określa liczbę cyfr znaczących lub miejsc dziesiętnych do wyświetlenia.       Aby uzyskać więcej informacji na ciągach formatowania, zobacz [typy formatowania](~/add/includes/ajax-current-ext-md.md).       Wartość tej właściwości jest przechowywany w stanie widoku.       Wartość właściwości FormatString, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the FormatString property to specify a custom display format for the text that is displayed in the root node. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the FormatString property to specify a custom display format for the text that is displayed in the root node. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingFormatString#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_755_1.aspx)]\n [!code-cs[TreeNodeBindingFormatString#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_755_1.aspx)]  \n  \n The following code example is sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public string FormatString { get; set; }
    return:
      type: System.String
      description: "Ciąg formatowania, który określa format wyświetlania tekst w węźle, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie ustawiono właściwości FormatString."
  overload: System.Web.UI.WebControls.TreeNodeBinding.FormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  id: ImageToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageToolTip
  nameWithType: TreeNodeBinding.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia tekst etykietki narzędzia obrazu, który jest wyświetlany obok węzła, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu."
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, określ wartość do powiązania z za pomocą właściwości ImageToolTip <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeView> Określony tekst zawiera urządzenia ułatwianiem opis obrazu, który może służyć do udostępnić formantu.       Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> Gdy obraz jest wyświetlany obok węzła, tekst elementu ToolTip jest wyświetlane, gdy wskaźnik myszy znajduje się na obrazie.      > [!NOTE] > Można selektywnie zastępować właściwość ImageToolTip przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>       Zamiast używać właściwość ImageToolTip powiązać ten sam tekst etykietki narzędzia obrazu węzła, można powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola źródła danych przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>       Wartość tej właściwości jest przechowywany w stanie widoku.       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ImageToolTip property to specify the ToolTip text for the image that is displayed next to a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ImageToolTip property to specify the ToolTip text for the image that is displayed next to a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_796_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_796_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageToolTip { get; set; }
    return:
      type: System.String
      description: "Tekst etykietki narzędzia obrazu, który jest wyświetlany obok węzła, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie ustawiono właściwości P:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip."
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  id: ImageToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageToolTipField
  nameWithType: TreeNodeBinding.ImageToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>"
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, użyj właściwości ImageToolTipField, aby określić nazwę pola, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeView> Określony tekst zawiera urządzenia ułatwianiem opis obrazu, który może służyć do udostępnić formantu.       Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> Gdy obraz jest wyświetlany obok węzła, tekst elementu ToolTip jest wyświetlane, gdy wskaźnik myszy znajduje się na obrazie.      > [!NOTE] > Można selektywnie zastępować właściwość ImageToolTipField przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>       Zamiast za pomocą właściwości ImageToolTipField powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>      > [!NOTE] > Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>Właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ImageToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ImageToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_953_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_953_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageToolTipField { get; set; }
    return:
      type: System.String
      description: "Nazwa pola, które chcesz powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.ImageToolTip*> Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie ustawiono właściwości ImageToolTipField."
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageUrl
  nameWithType: TreeNodeBinding.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia adres URL obrazu, który jest wyświetlany obok węzła, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu."
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, umożliwia określenie niestandardowego obrazu, aby powiązać z właściwością ImageUrl <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> Obraz jest wyświetlany obok węzła i można w dowolnym formacie pliku (jpg, GIF, bmp i tak dalej), tak długo, jak przeglądarka klienta obsługuje tego formatu.      > [!NOTE] > Obrazu dla oddzielnego węzła można zastąpić, ustawiając jego <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>właściwości bezpośrednio.</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>       Zamiast używać tej właściwości można powiązać ten sam obraz na każdym węźle, można powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola źródła danych przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>       Podczas wyświetlania obok węzła z właściwością ImageUrl obrazu, należy również rozważyć ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip%2A> Tekst etykietki narzędzia, który określisz udostępnia urządzeń ułatwianiem opis obrazu, który może służyć do udostępnić formantu.       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> property to apply a <xref:System.Web.UI.WebControls.TreeNodeBinding> object at a specific node depth. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the ImageUrl property to specify a custom image for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_58_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_58_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageUrl { get; set; }
    return:
      type: System.String
      description: "Adres URL obrazu, który jest wyświetlany obok węzła, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu. Nie ustawiono właściwość ImageUrl."
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  id: ImageUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ImageUrlField
  nameWithType: TreeNodeBinding.ImageUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>"
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, określ nazwę pola, które chcesz powiązać za pomocą właściwości ImageUrlField <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> Obraz jest wyświetlany obok węzła i można w dowolnym formacie pliku (jpg, GIF, bmp i tak dalej), tak długo, jak przeglądarka klienta obsługuje format.      > [!NOTE] > Obrazu dla oddzielnego węzła można zastąpić, ustawiając jego <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>właściwości bezpośrednio.</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>       Zamiast używać tej właściwości można powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>      > [!NOTE] > Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>Właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       Podczas wyświetlania obrazu obok węzła z właściwością ImageUrlField, należy również rozważyć ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField%2A> Tekst etykietki narzędzia, który określisz udostępnia urządzeń ułatwianiem opis obrazu, który może służyć do udostępnić formantu.       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ImageUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the ImageUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1012_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1012_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ImageUrlField { get; set; }
    return:
      type: System.String
      description: "Nazwa pola, które chcesz powiązać <xref:System.Web.UI.WebControls.TreeNode.ImageUrl*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.ImageUrl*> Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie ustawiono właściwości ImageUrlField."
  overload: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: TreeNodeBinding.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia adres URL, aby połączyć, gdy węzeł, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> zastosowano obiekt zostanie kliknięty."
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, umożliwia określenie adresu URL, aby powiązać z właściwością NavigateUrl <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> Gdy ta właściwość jest ustawiona, <xref:System.Web.UI.WebControls.TreeView>kontrolka ma wyświetlać hiperłącze tekst węzła, zamiast zwykłego tekstu.</xref:System.Web.UI.WebControls.TreeView> Można również ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>Właściwości w celu określenia okna lub ramki, w której do wyświetlania połączonej zawartości.</xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>      > [!NOTE] > Można selektywnie zastępować właściwość NavigateUrl przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>       Zamiast korzystać z właściwością NavigateUrl powiązać ten sam adres URL do każdego węzła, można powiązać <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola źródła danych przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the NavigateUrl property to specify the URL to link to when a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied is clicked. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the NavigateUrl property to specify the URL to link to when a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied is clicked. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1267_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1267_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "Adres URL, aby połączyć, gdy węzeł, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> zastosowano obiekt zostanie kliknięty. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie jest ustawiona właściwość NavigateUrl."
  overload: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  id: NavigateUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: NavigateUrlField
  nameWithType: TreeNodeBinding.NavigateUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>"
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, użyj właściwości NavigateUrlField, aby określić nazwę pola, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> Gdy ustawiona jest właściwość NavigateUrlField, <xref:System.Web.UI.WebControls.TreeView>kontrolka ma wyświetlać hiperłącze tekst węzła, zamiast zwykłego tekstu.</xref:System.Web.UI.WebControls.TreeView> Można również ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>Właściwości w celu określenia okna lub ramki, w której do wyświetlania połączonej zawartości.</xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>      > [!NOTE] > Można selektywnie zastępować właściwość NavigateUrlField przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>       Zamiast za pomocą właściwości NavigateUrlField powiązać <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>Właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the NavigateUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the NavigateUrlField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1074_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1074_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string NavigateUrlField { get; set; }
    return:
      type: System.String
      description: "Nazwa pola, które chcesz powiązać <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl*> Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie ustawiono właściwości NavigateUrlField."
  overload: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  id: PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: PopulateOnDemand
  nameWithType: TreeNodeBinding.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą czy węzeł, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiekt jest stosowany jest wypełniana dynamicznie."
  remarks: "Czasami nie jest praktyczne statycznie wstępnie struktury drzewa ze względu na rozmiar danych lub niestandardowych zawartość, która jest zależna od danych wejściowych użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView>Sterowanie obsługuje populacji dynamiczne węzła.</xref:System.Web.UI.WebControls.TreeView> Jeśli właściwości PopulateOnDemand jest równa `true`, węzły podrzędne węzła który <xref:System.Web.UI.WebControls.TreeNodeBinding>obiekt jest stosowany do pobiera wypełnione w czasie wykonywania, gdy węzeł jest rozwinięty.</xref:System.Web.UI.WebControls.TreeNodeBinding>       Kiedy wiązania danych są tworzone przez ustawienie <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>z <xref:System.Web.UI.WebControls.TreeView>do kontrolować `true`, powiązania, które są tworzone ma ustawioną wartość właściwości PopulateOnDemand `true`.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> Powiązań danych, które są tworzone deklaratywnie ma ustawioną wartość właściwości PopulateOnDemand `false`. Za pomocą składni deklaratywnej pozwala na kontrolowanie zachowania wiązania danych indywidualnych.      > [!NOTE] > W przeciwieństwie do <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>właściwości <xref:System.Web.UI.WebControls.TreeNode>klasy, właściwości PopulateOnDemand nie wymaga to metoda obsługi zdarzeń do zdefiniowania dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>zdarzeń, jeśli używasz kontroli źródła danych, takich jak <xref:System.Web.UI.WebControls.XmlDataSource>.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> Zamiast tego <xref:System.Web.UI.WebControls.TreeView>kontroli dynamicznie generuje metody obsługi zdarzeń za pomocą właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding>obiekty w <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>kolekcji.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView> Nadal można zdefiniować metody obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>zdarzeń; jednak będzie ona wywoływana po metoda obsługi zdarzeń dla <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>       Obsługiwane przeglądarki można również korzystać z populacji węzła po stronie klienta. Po włączeniu umożliwia to <xref:System.Web.UI.WebControls.TreeView>formantu do wypełnienia węzła dynamicznie na kliencie, gdy ten węzeł jest rozwinięty, uniemożliwia potrzeby publikowania na serwer.</xref:System.Web.UI.WebControls.TreeView> Aby uzyskać więcej informacji dotyczących populacji węzła po stronie klienta zobacz <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> property to specify whether a check box is displayed for a node. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox%2A> property to specify whether a check box is displayed for a node. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeNodeBindingPopulateOnDemand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_426_1.aspx)]\n [!code-vb[TreeNodeBindingPopulateOnDemand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_426_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public bool PopulateOnDemand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wypełnić węzeł, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> dynamicznie; w przeciwnym razie jest stosowany obiekt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  id: SelectAction
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: SelectAction
  nameWithType: TreeNodeBinding.SelectAction
  fullName: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia zdarzenie lub zdarzenia, aby zgłaszał węzeł, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiekt jest stosowany jest zaznaczone."
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, określ wartość do powiązania z za pomocą właściwości SelectAction <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>Właściwość jest używana do określania, które zdarzenie lub zdarzenia wywoływane po wybraniu węzła.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>      > [!NOTE] > Można selektywnie zastępować właściwość SelectAction przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>       W poniższej tabeli wymieniono dostępne opcje.      | `SelectAction` wartość | Opis elementu |   |--------------------------|-----------------|   | `TreeNodeSelectAction.Expand`| Przełącza węzeł między rozwinięty i zwinięty. Zgłasza zdarzenie <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>lub zdarzenia <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>, zależnie od potrzeb. |   | `TreeNodeSelectAction.None`| Zgłasza brak zdarzeń po wybraniu węzła. |   | `TreeNodeSelectAction.Select`| Zgłasza zdarzenie <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>Po wybraniu węzła. |   | `TreeNodeSelectAction.SelectExpand`| Zgłasza zarówno <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>i <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>zdarzeń po wybraniu węzła.</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Węzły tylko są rozwinięte, nigdy nie zwinięte. |      > [!NOTE] > <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>Nie są odtwarzane dla węzła z jego <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ustawioną właściwość `TreeNodeSelectAction.None`.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> </xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeNodeBindingSelectAction#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_346_1.aspx)]\n [!code-vb[TreeNodeBindingSelectAction#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_346_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeNodeSelectAction
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.TreeNodeSelectAction&quot;> </xref> wartości. Wartość domyślna to <xref uid=&quot;langword_csharp_TreeNodeSelectAction.Select&quot; name=&quot;TreeNodeSelectAction.Select&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeBinding.SelectAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  id: ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ShowCheckBox
  nameWithType: TreeNodeBinding.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy pole wyboru jest wyświetlany obok węzła, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu."
  remarks: "Aby zapewnić obsługę wielowęzłowego zaznaczenia w <xref:System.Web.UI.WebControls.TreeView>kontrolka pola wyboru obok obrazu można wyświetlić w węźle.</xref:System.Web.UI.WebControls.TreeView> Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, określ wartość do powiązania z za pomocą właściwości ShowCheckBox <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>Właściwość jest używana do wyświetlenia lub ukrycia pole wyboru dla węzła.</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>      > [!NOTE] > Mimo, że właściwość ShowCheckBox może być używana do wyświetlania pola wyboru, jest bardziej popularne, aby użyć <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>Właściwość <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Jednak <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>właściwość ma wpływ na każdy typ węzła, określonym przez właściwość; w związku z tym właściwość ShowCheckBox jest często używana do zastąpienia tego ustawienia dla węzła, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Można selektywnie zastępować właściwość ShowCheckBox przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ShowCheckBox property to specify whether a check box is displayed for a node. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ShowCheckBox property to specify whether a check box is displayed for a node. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeNodeBindingShowCheckBox#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1341_1.aspx)]\n [!code-vb[TreeNodeBindingShowCheckBox#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1341_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> ShowCheckBox { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wyświetlić pole wyboru obok węzła, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiekt jest stosowane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: TreeNodeBinding.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tworzy kopię <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu."
  remarks: "Metoda ICloneable.Clone jest funkcji pomocnika, która tworzy kopię <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu, z którego ma zostać wywołana metoda ICloneable.Clone.</xref:System.Web.UI.WebControls.TreeNodeBinding>      > [!NOTE] > ICloneable.Clone metoda jest używana głównie przez deweloperów formantu."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Obiekt reprezentujący kopię <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu."
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  id: System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opis tego elementu członkowskiego, zobacz <xref href=&quot;System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema&quot;> </xref>."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.TreeNodeBinding>wystąpienia jest rzutowane na <xref:System.Web.UI.IDataSourceViewSchemaAccessor>interfejsu.</xref:System.Web.UI.IDataSourceViewSchemaAccessor> </xref:System.Web.UI.WebControls.TreeNodeBinding>       Wartość tej właściwości jest przechowywany w stanie widoku."
  syntax:
    content: object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get; set; }
    return:
      type: System.Object
      description: "Obiekt reprezentujący schematu, z którym skojarzony jest <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu."
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opis tego elementu członkowskiego, zobacz <xref href=&quot;System.Web.UI.IStateManager.IsTrackingViewState&quot;> </xref>."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.TreeNodeBinding>wystąpienia jest rzutowane na <xref:System.Web.UI.IStateManager>interfejsu.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.TreeNodeBinding>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli formant jest oznaczony do zapisania stanu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ładuje wcześniej zapisany widok stanu dla węzła."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; zawierający wartości stanu zapisanego widoku."
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zapisuje widoku zmian stanu obiektu."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Obiekt, który zawiera zmian stanu widoku."
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Powoduje, że <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu do śledzenia zmian stanu widoku."
  remarks: "Po wywołaniu metody IStateManager.TrackViewState w formancie serwera <xref:System.Web.UI.Control.IsTrackingViewState%2A>zwraca `true`.</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Target
  id: Target
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Target
  nameWithType: TreeNodeBinding.Target
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia docelowego okna lub ramki, w której można wyświetlić zawartości strony sieci Web, który jest skojarzony z węzłem, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu."
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, określ wartość do powiązania z za pomocą właściwości Target <xref:System.Web.UI.WebControls.TreeNode.Target%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Target%2A>Właściwość jest używana do określania okna lub ramki, w którym można wyświetlić treści sieci Web, który jest połączony z węzeł po kliknięciu tego węzła.</xref:System.Web.UI.WebControls.TreeNode.Target%2A>      > [!NOTE] > Pierwszeństwo przez ustawieniem skonfigurowanym właściwości docelowej <xref:System.Web.UI.WebControls.TreeView.Target%2A>Właściwość <xref:System.Web.UI.WebControls.TreeView>kontroli dla węzłów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.Target%2A> Właściwość Target można selektywnie zastąpić, ustawiając <xref:System.Web.UI.WebControls.TreeNode.Target%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.Target%2A>      > [!NOTE] > Właściwość Target renderuje jako `target` atrybutu. `target` Atrybutu `anchor` elementów nie jest dozwolona w definicji typu dokumentu XHTML 1.1. Nie ustawiaj właściwości docelowych, jeśli przetworzonych wyników dla <xref:System.Web.UI.WebControls.TreeNodeBinding>formantu musi być zgodny z XHTML 1.1.</xref:System.Web.UI.WebControls.TreeNodeBinding> Aby uzyskać więcej informacji, zobacz [standardów XHTML w Visual Studio i ASP.NET](~/add/includes/ajax-current-ext-md.md).   >> Podczas tworzenia stron sieci Web z ułatwieniami dostępu, należy unikać używania właściwość Target pod kątem inne okno. Aby uzyskać więcej informacji, zobacz [NIB: dostępność ASP.NET](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae).       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Target property to specify that the Web page that is associated with the root node should be displayed in a new window. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the Target property to specify that the Web page that is associated with the root node should be displayed in a new window. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-vb[TreeNodeBindingTarget#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_78_1.aspx)]\n [!code-cs[TreeNodeBindingTarget#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_78_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n    <Appendix Heading=\"Appendix A\">  \n    </Appendix>  \n</Book>  \n```"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "Docelowego okna lub ramki, w której można wyświetlić zawartości połączonej strony sieci Web. Wartości musi rozpoczynać się od litery z zakresu od A do Z (bez uwzględniania wielkości liter), z wyjątkiem niektórych wartości specjalne, które zaczynają się od podkreślenia, jak pokazano w poniższej tabeli.       <table><thead><tr><th> Wartość docelowa       </th><th> Opis       </th></tr></thead><tbody><tr><td><xref uid=&quot;langword_csharp__blank&quot; name=&quot;_blank&quot; href=&quot;&quot;></xref></td><td> Renderuje zawartość w nowym oknie bez ramek.       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent&quot; name=&quot;_parent&quot; href=&quot;&quot;></xref></td><td> Renderuje zawartość w obiekcie nadrzędnym natychmiastowego ramek.       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> Renderuje zawartość w okienku wyszukiwania.       </td></tr><tr><td><xref uid=&quot;langword_csharp__self&quot; name=&quot;_self&quot; href=&quot;&quot;></xref></td><td> Renderuje zawartość w ramce z fokusem.       </td></tr><tr><td><xref uid=&quot;langword_csharp__top&quot; name=&quot;_top&quot; href=&quot;&quot;></xref></td><td> Renderuje zawartość w oknie pełny bez ramek.       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    Sprawdź w dokumentacji przeglądarki, aby ustalić, czy <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref> wartość jest obsługiwana.  Na przykład program Microsoft Internet Explorer w wersji 5.0 i nowsze wersje obsługują <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref> wartość docelowa.      </div>       Wartość domyślna to ciąg pusty (&quot;&quot;), który odświeża okna lub ramki z fokusem."
  overload: System.Web.UI.WebControls.TreeNodeBinding.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.TargetField
  id: TargetField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: TargetField
  nameWithType: TreeNodeBinding.TargetField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TargetField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Target*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.Target*>"
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, użyj właściwości TargetField, aby określić nazwę pola, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Target%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeNode.Target%2A>Właściwość jest używana do określania okna lub ramki, w którym można wyświetlić treści sieci Web, który jest połączony z węzeł po kliknięciu tego węzła.</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Można selektywnie zastępować właściwość TargetField przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.Target%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       Zamiast za pomocą właściwości TargetField powiązać <xref:System.Web.UI.WebControls.TreeNode.Target%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.Target%2A>wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.Target%2A> </xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Target%2A>      > [!NOTE] > Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>Właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  syntax:
    content: public string TargetField { get; set; }
    return:
      type: System.String
      description: "Nazwa pola, które chcesz powiązać <xref:System.Web.UI.WebControls.TreeNode.Target*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.Target*> Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie ustawiono właściwości TargetField."
  overload: System.Web.UI.WebControls.TreeNodeBinding.TargetField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Text
  id: Text
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Text
  nameWithType: TreeNodeBinding.Text
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia tekst, który jest wyświetlany dla węzła, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu."
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, określ wartość do powiązania z za pomocą właściwości Text <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwość jest używana do określania tekst wyświetlany w węźle.</xref:System.Web.UI.WebControls.TreeNode.Text%2A>      > [!NOTE] > Można selektywnie zastąpić właściwość Text przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.Text%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.Text%2A>       Zamiast używać właściwości Text powiązać ten sam tekst w każdym węźle, można powiązać <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola źródła danych przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.TextField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>       Wartość tej właściwości jest przechowywany w stanie widoku.       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Text property to specify the value to display for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the Text property to specify the value to display for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_55_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_55_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "Tekst wyświetlany w węźle, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNodeBinding.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.TextField
  id: TextField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: TextField
  nameWithType: TreeNodeBinding.TextField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Text*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.Text*>"
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, określ nazwę pola, aby powiązać za pomocą właściwości TextField <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwość jest używana do określania tekst wyświetlany w węźle.</xref:System.Web.UI.WebControls.TreeNode.Text%2A>      > [!NOTE] > Selektywnie można zastąpić właściwości TextField, ustawiając <xref:System.Web.UI.WebControls.TreeNode.Text%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.Text%2A>       Zamiast za pomocą właściwości TextField powiązać <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.Text%2A>wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.Text%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>      > [!NOTE] > Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>Właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the TextField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the TextField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1062_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1062_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string TextField { get; set; }
    return:
      type: System.String
      description: "Nazwa pola, które chcesz powiązać <xref:System.Web.UI.WebControls.TreeNode.Text*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.Text*> Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie ustawiono właściwości TextField."
  overload: System.Web.UI.WebControls.TreeNodeBinding.TextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ToolTip
  nameWithType: TreeNodeBinding.ToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia tekst etykietki narzędzia dla węzła, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu."
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, określ wartość do powiązania z za pomocą właściwości etykietka narzędzia <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> Tekst etykietki narzędzia jest wyświetlane, gdy wskaźnik myszy znajduje się nad węzłem.      > [!NOTE] > Można selektywnie zastąpić właściwość ToolTip przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>       Zamiast powiązać ten sam tekst etykietki narzędzia dla każdego węzła za pomocą właściwości etykietka narzędzia, możesz powiązać <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola źródła danych przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTipField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>       Wartość tej właściwości jest przechowywany w stanie widoku.       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ToolTip property to specify the ToolTip text for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ToolTip property to specify the ToolTip text for a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_552_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_552_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "Tekst etykietki narzędzia dla węzła, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie jest ustawiona właściwość ToolTip."
  overload: System.Web.UI.WebControls.TreeNodeBinding.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  id: ToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ToolTipField
  nameWithType: TreeNodeBinding.ToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ToolTip*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.ToolTip*>"
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, użyj właściwości ToolTipField, aby określić nazwę pola, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> Tekst etykietki narzędzia jest wyświetlane, gdy wskaźnik myszy znajduje się nad węzłem.      > [!NOTE] > Można selektywnie zastępować właściwość ToolTipField przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>       Zamiast za pomocą właściwości ToolTipField powiązać <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>      > [!NOTE] > Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>Właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ToolTipField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_325_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_325_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ToolTipField { get; set; }
    return:
      type: System.String
      description: "Nazwa pola, które chcesz powiązać <xref:System.Web.UI.WebControls.TreeNode.ToolTip*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.ToolTip*> Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie ustawiono właściwości ToolTipField."
  overload: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToString
  id: ToString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ToString()
  nameWithType: TreeNodeBinding.ToString()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToString()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zwraca <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember*>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember*>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Zwraca <> </> *> właściwości. Jeśli <> </> *> właściwość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciąg pusty (&quot;&quot;), **(pusta)** jest zwracany."
  overload: System.Web.UI.WebControls.TreeNodeBinding.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.Value
  id: Value
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: Value
  nameWithType: TreeNodeBinding.Value
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wyświetlanych, która nie jest wyświetlana, ale jest używany do przechowywania wszelkich dodatkowych danych o węzeł, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu zostanie zastosowana, takich jak dane używane na potrzeby obsługi zdarzenia odświeżania strony."
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, określ wartość do powiązania z za pomocą właściwości Value <xref:System.Web.UI.WebControls.TreeNode.Value%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Value%2A>Właściwość jest używana do uzupełnienia <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwości przechowując wszelkie dodatkowe dane skojarzone z węzłem, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> Ta wartość nie jest wyświetlana w formancie i jest najczęściej używany do przechowywania danych obsługi zdarzenia odświeżania strony.      > [!NOTE] > Selektywnie można zastąpić właściwości Value przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.Value%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.Value%2A>       Zamiast używać właściwości Value powiązać tę samą wartość w każdym węźle, można powiązać <xref:System.Web.UI.WebControls.TreeNode.Value%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola źródła danych przez ustawienie <xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.ValueField%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A>       Wartość tej właściwości jest przechowywany w stanie widoku.       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the Value property to store supplemental data about a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the Value property to store supplemental data about a node to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeBindingText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1097_1.aspx)]\n [!code-cs[TreeNodeBindingText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1097_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "Dodatkowe dane dotyczące węzła, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> zastosowano obiekt; to dane nie są wyświetlane. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNodeBinding.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBinding.ValueField
  id: ValueField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  langs:
  - csharp
  name: ValueField
  nameWithType: TreeNodeBinding.ValueField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ValueField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia nazwę pola ze źródła danych, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Value*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.Value*>"
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, użyj właściwości ValueField, aby określić nazwę pola, aby powiązać <xref:System.Web.UI.WebControls.TreeNode.Value%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeView> Ta relacja powiązania ma wpływ na wszystkie <xref:System.Web.UI.WebControls.TreeNode>obiektów, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.Value%2A>Właściwość jest używana do uzupełnienia <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwości przechowując wszelkie dodatkowe dane skojarzone z węzłem, do którego <xref:System.Web.UI.WebControls.TreeNodeBinding>obiektu.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> Ta wartość nie jest wyświetlana w formancie i jest najczęściej używany do przechowywania danych obsługi zdarzenia odświeżania strony.      > [!NOTE] > Można selektywnie zastępować właściwość ValueField przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.Value%2A>właściwości bezpośrednio do każdego węzła.</xref:System.Web.UI.WebControls.TreeNode.Value%2A>       Zamiast za pomocą właściwości ValueField powiązać <xref:System.Web.UI.WebControls.TreeNode.Value%2A>Właściwość <xref:System.Web.UI.WebControls.TreeNode>obiektu do pola, można ustawić <xref:System.Web.UI.WebControls.TreeNode.Value%2A>wartością stałą, ustawiając dla właściwości <xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNodeBinding.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNode.Value%2A>      > [!NOTE] > Jeśli źródło danych zawiera wiele pól, należy najpierw ustawić <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>lub <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>Właściwości lub obie właściwości, aby można było powiązać z odpowiednim polu.</xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the ValueField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Value%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. The second code example provides sample XML data for the first code example.  \n  \n The following example demonstrates how to use the ValueField property to specify which attribute of an XML element to bind to the <xref:System.Web.UI.WebControls.TreeNode.Value%2A> property of a <xref:System.Web.UI.WebControls.TreeNode> object to which the <xref:System.Web.UI.WebControls.TreeNodeBinding> object is applied. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Booklist.xml.  \n  \n [!code-vb[TreeNodeTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1111_1.aspx)]\n [!code-cs[TreeNodeTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1111_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Books Text=\"Books List\">  \n    <Book Text=\"Book Title One\"  \n        Value=\"1\"   \n        Image=\"Bookimage1.jpg\"  \n        ImageToolTip=\"Book 1 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Book Title 1\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$1.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage1.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n    <Book Text=\"Book Title Two\"  \n        Value=\"2\"   \n        Image=\"Bookimage2.jpg\"  \n        ImageToolTip=\"Book 2 Photo\"   \n        Nav=\"http://www.microsoft.com\"  \n        Tip=\"Click Me\">  \n        <Description Text=\"Book Description\">  \n        </Description>  \n        <Price Value=\"$2.99\">  \n        </Price>  \n        <Author Text=\"Author Name\"  \n            Value=\"LastName\"   \n            Image=\"Authorimage2.jpg\"   \n            Nav=\"http://www.microsoft.com\"  \n            Tip=\"Author Name\">  \n        </Author>  \n    </Book>  \n</Books>  \n```"
  syntax:
    content: public string ValueField { get; set; }
    return:
      type: System.String
      description: "Nazwa pola, które chcesz powiązać <xref:System.Web.UI.WebControls.TreeNode.Value*>Właściwość <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu, do którego <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.TreeNode.Value*> Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie ustawiono właściwości ValueField."
  overload: System.Web.UI.WebControls.TreeNodeBinding.ValueField*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.TreeNodeBinding.#ctor
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TreeNodeBinding()
  nameWithType: TreeNodeBinding.TreeNodeBinding()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TreeNodeBinding()
- uid: System.Web.UI.WebControls.TreeNodeBinding.DataMember
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: DataMember
  nameWithType: TreeNodeBinding.DataMember
  fullName: System.Web.UI.WebControls.TreeNodeBinding.DataMember
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TreeNodeBinding.Depth
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Depth
  nameWithType: TreeNodeBinding.Depth
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeBinding.FormatString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: FormatString
  nameWithType: TreeNodeBinding.FormatString
  fullName: System.Web.UI.WebControls.TreeNodeBinding.FormatString
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNodeBinding.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTipField
  nameWithType: TreeNodeBinding.ImageToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNodeBinding.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrlField
  nameWithType: TreeNodeBinding.ImageUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNodeBinding.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrlField
  nameWithType: TreeNodeBinding.NavigateUrlField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNodeBinding.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: SelectAction
  nameWithType: TreeNodeBinding.SelectAction
  fullName: System.Web.UI.WebControls.TreeNodeBinding.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeSelectAction
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeSelectAction
  nameWithType: TreeNodeSelectAction
  fullName: System.Web.UI.WebControls.TreeNodeSelectAction
- uid: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNodeBinding.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: TreeNodeBinding.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.ICloneable.Clone()
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNodeBinding.Target
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Target
  nameWithType: TreeNodeBinding.Target
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Target
- uid: System.Web.UI.WebControls.TreeNodeBinding.TargetField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TargetField
  nameWithType: TreeNodeBinding.TargetField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TargetField
- uid: System.Web.UI.WebControls.TreeNodeBinding.Text
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Text
  nameWithType: TreeNodeBinding.Text
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Text
- uid: System.Web.UI.WebControls.TreeNodeBinding.TextField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TextField
  nameWithType: TreeNodeBinding.TextField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.TextField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTip
  nameWithType: TreeNodeBinding.ToolTip
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTipField
  nameWithType: TreeNodeBinding.ToolTipField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToString
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToString()
  nameWithType: TreeNodeBinding.ToString()
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ToString()
- uid: System.Web.UI.WebControls.TreeNodeBinding.Value
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Value
  nameWithType: TreeNodeBinding.Value
  fullName: System.Web.UI.WebControls.TreeNodeBinding.Value
- uid: System.Web.UI.WebControls.TreeNodeBinding.ValueField
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ValueField
  nameWithType: TreeNodeBinding.ValueField
  fullName: System.Web.UI.WebControls.TreeNodeBinding.ValueField
- uid: System.Web.UI.WebControls.TreeNodeBinding.#ctor*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding.TreeNodeBinding
- uid: System.Web.UI.WebControls.TreeNodeBinding.DataMember*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: DataMember
  nameWithType: TreeNodeBinding.DataMember
- uid: System.Web.UI.WebControls.TreeNodeBinding.Depth*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Depth
  nameWithType: TreeNodeBinding.Depth
- uid: System.Web.UI.WebControls.TreeNodeBinding.FormatString*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: FormatString
  nameWithType: TreeNodeBinding.FormatString
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTip*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNodeBinding.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageToolTipField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageToolTipField
  nameWithType: TreeNodeBinding.ImageToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrl*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNodeBinding.ImageUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.ImageUrlField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ImageUrlField
  nameWithType: TreeNodeBinding.ImageUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrl*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNodeBinding.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNodeBinding.NavigateUrlField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: NavigateUrlField
  nameWithType: TreeNodeBinding.NavigateUrlField
- uid: System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNodeBinding.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNodeBinding.SelectAction*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: SelectAction
  nameWithType: TreeNodeBinding.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeBinding.ShowCheckBox*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNodeBinding.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#ICloneable#Clone*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: TreeNodeBinding.System.ICloneable.Clone
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: TreeNodeBinding.System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNodeBinding.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.TreeNodeBinding.Target*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Target
  nameWithType: TreeNodeBinding.Target
- uid: System.Web.UI.WebControls.TreeNodeBinding.TargetField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TargetField
  nameWithType: TreeNodeBinding.TargetField
- uid: System.Web.UI.WebControls.TreeNodeBinding.Text*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Text
  nameWithType: TreeNodeBinding.Text
- uid: System.Web.UI.WebControls.TreeNodeBinding.TextField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: TextField
  nameWithType: TreeNodeBinding.TextField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTip*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTip
  nameWithType: TreeNodeBinding.ToolTip
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToolTipField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToolTipField
  nameWithType: TreeNodeBinding.ToolTipField
- uid: System.Web.UI.WebControls.TreeNodeBinding.ToString*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ToString
  nameWithType: TreeNodeBinding.ToString
- uid: System.Web.UI.WebControls.TreeNodeBinding.Value*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: Value
  nameWithType: TreeNodeBinding.Value
- uid: System.Web.UI.WebControls.TreeNodeBinding.ValueField*
  parent: System.Web.UI.WebControls.TreeNodeBinding
  isExternal: false
  name: ValueField
  nameWithType: TreeNodeBinding.ValueField
