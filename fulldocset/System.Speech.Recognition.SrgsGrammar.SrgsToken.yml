### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken
  id: SrgsToken
  children:
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  langs:
  - csharp
  name: SrgsToken
  nameWithType: SrgsToken
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken
  type: Class
  summary: "Reprezentuje wyraz lub frazę krótkie, który może zostać rozpoznany."
  remarks: "Przy użyciu elementów członkowskich klasy SrgsToken, można określić trzy rodzaje wyraz: <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>formularz, <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>formularza i niestandardowej <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>wyrazu.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>       Jeśli wiele słów są przechowywane w jednym obiekcie SrgsToken, każdy traktowane jako inny token wewnętrznie i w wyniku.       Ta klasa reprezentuje `token` elementu zdefiniowanego w sieci World Wide Web konsorcjum W3C [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0.](http://go.microsoft.com/fwlink/?LinkId=201761). Aby uzyskać informacje o SRGS `token` element i szczegółowe informacje o jego obsługa przez System.Speech, zobacz [token elementu](http://msdn.microsoft.com/en-us/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632)."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")]

      public class SrgsToken : System.Speech.Recognition.SrgsGrammar.SrgsElement
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Speech.Recognition.SrgsGrammar.SrgsElement
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: SrgsToken(String)
  nameWithType: SrgsToken.SrgsToken(String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.SrgsToken(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;> </xref> , określa tekst, który ma być rozpoznawane."
  remarks: "Tworzy <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>którego <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>właściwości ustawiono początkowo wartość `text` parametru.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>"
  syntax:
    content: public SrgsToken (string text);
    parameters:
    - id: text
      type: System.String
      description: "Tekst nowego <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;> </xref> wystąpienie klasy."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>text</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>text</code>jest pusty."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  id: Display
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: Display
  nameWithType: SrgsToken.Display
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera lub ustawia wyświetlaną formę tekst, który ma być używany."
  remarks: "Chociaż zazwyczaj reprezentują tę samą wartość, Wyświetl formularz może być inna niż <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>formularz słowo lub frazę w <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> Na przykład, Wyświetl formularz może być skrótem, takie jak &quot;USA&quot;, podczas tekst, który będzie używany i do którego <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>ma zastosowanie, jest &quot;Stanów Zjednoczonych&quot;.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>"
  syntax:
    content: public string Display { get; set; }
    return:
      type: System.String
      description: "Reprezentacja tokenu, w jakiej powinny być wyświetlane."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić wartość wyświetlana jest podejmowana próba <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Aby przypisać pusty ciąg do wyświetlania podejmowana jest próba."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  id: Pronunciation
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: Pronunciation
  nameWithType: SrgsToken.Pronunciation
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera lub ustawia ciąg, który definiuje wymowy dla tokenu."
  remarks: "Telefony są litery i symbole, które opisują dźwięki mowy. System.Speech obsługuje trzy alfabetach fonetyczny służący do określania niestandardowej wymowy: Universal Phone Ustaw (UPS), zestaw Phone mowy interfejsu API (SAPI) i międzynarodowy alfabet fonetyczny (IPA). Telefony określone w wymowie musi odpowiadać alfabet fonetyczny określone w <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A> Zobacz [leksykonów i małych liter fonetyczny](http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) Aby uzyskać więcej informacji.       Telefony określone w wymowie wskazują sposób zawartość <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>powinny występować w przypadku pomyślnego rozpoznawania.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>  Aparat rozpoznawania mowy używa wymowy określone w wymowie w celu dopasowania danych wejściowych mowy i zwraca ciąg zawarty w <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>w wyniku rozpoznawania.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>       Jeśli telefony nie są rozdzielonych spacjami lub podany ciąg zawiera nierozpoznany telefonu, aparat rozpoznawania nie rozpoznaje określonego wymowy jako prawidłowy wymowy Word zawarty w <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>       Określony w wymowie wymowy mają pierwszeństwo przed wymowy określone w leksykonów skojarzonych z gramatyki lub aparatu rozpoznawania. Ponadto wymowy we właściwości wymowy dotyczy tylko pojedyncze wystąpienie wyraz lub frazę zawarty w <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>"
  example:
  - "The grammar in the following example contains slang words and also has an uncommon word: \"whatchamacallit\". Adding a custom, inline pronunciation using the Pronunciation property of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> class can improve the accuracy of recognition for the word \"whatchamacallit\" as well as for the entire phrase that contains it. The example uses phones from the Microsoft Universal Phone Set (UPS) to define the custom pronunciations.  \n  \n```  \nusing System;  \nusing System.Speech.Recognition;  \nusing System.Speech.Recognition.SrgsGrammar;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize an instance of the in-process recognizer.  \n    {  \n      using (SpeechRecognitionEngine recognizer =  \n         new SpeechRecognitionEngine(new System.Globalization.CultureInfo(\"en-US\")))  \n      {  \n  \n        // Build the SrgsOneOf objects with alternative choices for the slang phrase.  \n        SrgsOneOf gimme = new SrgsOneOf(  \n          new string[] { \"give me\", \"gimme\", \"hand me\", \"ha'me\" });  \n        SrgsOneOf the = new SrgsOneOf(new string[] { \"the\", \"duh\" });  \n  \n        // Build the one-of element that contains the pronunciation.  \n        SrgsItem thing = new SrgsItem(\"thingamajig\");  \n        SrgsItem whatcha = new SrgsItem();  \n        SrgsToken callit = new SrgsToken(\"whatchamacallit\");  \n        callit.Pronunciation = \"W AE T CH AE M AE K AA L IH T\";  \n        whatcha.Add(callit);  \n        SrgsOneOf what = new SrgsOneOf(new SrgsItem[] {thing, whatcha});  \n  \n        // Create the rule from the SrgsOneOf objects.  \n        SrgsRule slangRule = new SrgsRule(\"slang\", gimme, the, what);  \n  \n        // Build an SrgsDocument object from the rule and set the phonetic alphabet.  \n        SrgsDocument tokenPron = new SrgsDocument(slangRule);  \n        tokenPron.PhoneticAlphabet = SrgsPhoneticAlphabet.Ups;  \n  \n        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  \n        Grammar g_Slang = new Grammar(tokenPron);  \n        g_Slang.Name = (\"Slang Pronunciation\");  \n        recognizer.LoadGrammarAsync(g_Slang);  \n  \n        // Configure recognizer input.  \n        recognizer.SetInputToDefaultAudioDevice();  \n  \n        // Attach a handler for the SpeechRecognized event.  \n        recognizer.SpeechRecognized +=   \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n  \n        // Start asynchronous recognition.  \n        recognizer.RecognizeAsync();  \n        Console.WriteLine(\"Starting asynchronous recognition...\");  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"Recognized phrase: \" + e.Result.Text);  \n      Console.WriteLine(\"Confidence: \" + e.Result.Confidence);  \n      Console.WriteLine(\"  Word summary: \");  \n      foreach (RecognizedWordUnit word in e.Result.Words)  \n      {  \n        Console.WriteLine(  \n          \"    Lexical form ({1})\" +  \n          \" Pronunciation ({0})\" +  \n          \" Confidence ({2})\",  \n          word.Pronunciation, word.LexicalForm, word.Confidence);  \n      }  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public string Pronunciation { get; set; }
    return:
      type: System.String
      description: "Zwraca ciąg zawierający telefony z alfabet fonetyczny określone w <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*>"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić wymowy podejmowana jest próba <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Aby przypisać pustego ciągu wymowy podejmowana jest próba."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  id: Text
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: Text
  nameWithType: SrgsToken.Text
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Pobiera lub ustawia formie pisemnej programu word, który powinien być używany."
  remarks: "Chociaż zazwyczaj reprezentują tę samą wartość, formularz tekst może być inna niż <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>formularz słowo lub frazę w <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> Na przykład <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>formularza może być skrótem, takie jak &quot;USA&quot;, podczas tekst, który będzie używany i do którego <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>ma zastosowanie, jest &quot;Stanów Zjednoczonych&quot;.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>       Wartość domyślna właściwości Text to ciąg pusty — &quot;&quot;."
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "Tekst zawarty w <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;> </xref> wystąpienie klasy."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Aby ustawić tekst podejmowana jest próba <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Podejmowana jest próba można przypisać pusty ciąg na tekst."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Podejmowana jest próba można przypisać ciąg, który zawiera znak cudzysłowu (&quot;) na tekst."
  platform:
  - net462
references:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsElement
  isExternal: false
  name: System.Speech.Recognition.SrgsGrammar.SrgsElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: SrgsToken(String)
  nameWithType: SrgsToken.SrgsToken(String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.SrgsToken(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Display
  nameWithType: SrgsToken.Display
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Pronunciation
  nameWithType: SrgsToken.Pronunciation
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Text
  nameWithType: SrgsToken.Text
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: SrgsToken
  nameWithType: SrgsToken.SrgsToken
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Display
  nameWithType: SrgsToken.Display
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Pronunciation
  nameWithType: SrgsToken.Pronunciation
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Text
  nameWithType: SrgsToken.Text
