### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerActionList
  id: DesignerActionList
  children:
  - System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionList.AutoShow
  - System.ComponentModel.Design.DesignerActionList.Component
  - System.ComponentModel.Design.DesignerActionList.GetService(System.Type)
  - System.ComponentModel.Design.DesignerActionList.GetSortedActionItems
  langs:
  - csharp
  name: DesignerActionList
  nameWithType: DesignerActionList
  fullName: System.ComponentModel.Design.DesignerActionList
  type: Class
  summary: "Udostępnia klasę podstawową dla typów, które definiują listę elementów, które pozwala utworzyć panelu tagów inteligentnych."
  remarks: "`DesignerAction` Funkcja umożliwia składników i formantów, aby wyświetlić informacje kontekstowe i polecenia. `DesignerAction` Funkcji można traktować jako zamiennik zleceń projektanta, ponieważ <xref:System.ComponentModel.Design.DesignerActionItem>mogą być wyświetlane w panelu tagów inteligentnych, a także w menu skrótów skojarzone z składnika lub kontrolki.</xref:System.ComponentModel.Design.DesignerActionItem> Klasa DesignerActionList reprezentuje głównego punktu interakcji dla deweloperów, którzy chcą dodać obsługę tagów inteligentnych do ich niestandardowych składników i kontrolek.       DesignerActionList jest klasą podstawową, pochodną przez deweloperów składnika, aby wypełnić panelu tagów inteligentnych. Panel tagów inteligentnych reprezentuje interfejs przypominającej menu użytkownika (UI) dla tagów inteligentnych.       Ta klasa pochodna może wdrożyć `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>metody zwrócić kolekcję obiektów pochodzących od <xref:System.ComponentModel.Design.DesignerActionItem>.</xref:System.ComponentModel.Design.DesignerActionItem> </xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Te obiekty reprezentują elementy panelu tagów inteligentnych. Każdy element jest wyświetlany w panelu uwzględnieniu jego typu. Na przykład <xref:System.ComponentModel.Design.DesignerActionTextItem>jest wyświetlany jako etykieta tekst statyczny.</xref:System.ComponentModel.Design.DesignerActionTextItem> Elementy panelu aktywne, reprezentowany przez <xref:System.ComponentModel.Design.DesignerActionPropertyItem>i <xref:System.ComponentModel.Design.DesignerActionMethodItem>typy, ma odpowiednie publicznie właściwości lub metody, odpowiednio, które implementuje funkcje dla tego elementu.</xref:System.ComponentModel.Design.DesignerActionMethodItem> </xref:System.ComponentModel.Design.DesignerActionPropertyItem>       Aby uzyskać więcej informacji na temat dodawania elementów do panelu tagów inteligentnych zobacz <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>metody.</xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>      > [!NOTE] > Formularzach i oknach dialogowych, które mogą być wyświetlane przez klasę pochodną DesignerActionList członków. Domyślnie element nadrzędny te okna, będzie kontenera w oknie panel tagów inteligentnych. Jawnie elementy nadrzędne tych okien podrzędnych na inną usługę lub okna może spowodować tagi inteligentne wyświetlić nieprawidłowo.   >> Panele inteligentnych tag nie obsługują przewijania lub stronicowanie, więc należy uważać, aby nie wypełnić paneli z wielu elementów tagów inteligentnych. Za dużo elementów może spowodować panelu tagów inteligentnych przekraczający granic ekranu."
  example:
  - "The following code example demonstrates how to create a collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects.  \n  \n For a complete explanation of this code example, see [How to: Attach Smart Tags to a Windows Forms Component](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/add/codesnippet/visualbasic/t-system.componentmodel._86_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/add/codesnippet/csharp/t-system.componentmodel._86_1.cs)]"
  syntax:
    content: public class DesignerActionList
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)
  id: '#ctor(System.ComponentModel.IComponent)'
  parent: System.ComponentModel.Design.DesignerActionList
  langs:
  - csharp
  name: DesignerActionList(IComponent)
  nameWithType: DesignerActionList.DesignerActionList(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionList.DesignerActionList(IComponent)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> klasy."
  remarks: "<xref:System.ComponentModel.Design.DesignerActionList>Ustawia konstruktora <xref:System.ComponentModel.Design.DesignerActionList.AutoShow%2A>właściwości `false`.</xref:System.ComponentModel.Design.DesignerActionList.AutoShow%2A> </xref:System.ComponentModel.Design.DesignerActionList>"
  example:
  - "The following code example demonstrates how to create a collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects.  \n  \n For a complete explanation of this code example, see [How to: Attach Smart Tags to a Windows Forms Component](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/add/codesnippet/visualbasic/cc04a767-c5c3-4dc7-99c8-_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/add/codesnippet/csharp/cc04a767-c5c3-4dc7-99c8-_1.cs)]"
  syntax:
    content: public DesignerActionList (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Składnik związane z <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerActionList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionList.AutoShow
  id: AutoShow
  parent: System.ComponentModel.Design.DesignerActionList
  langs:
  - csharp
  name: AutoShow
  nameWithType: DesignerActionList.AutoShow
  fullName: System.ComponentModel.Design.DesignerActionList.AutoShow
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Pobiera lub ustawia wartość wskazującą, czy panel tagów inteligentnych automatycznie powinna być wyświetlana podczas jego tworzenia."
  remarks: "Jeśli ustawiono wartość właściwości `true`, składnika, z której ta <xref:System.ComponentModel.Design.DesignerActionList>zostanie skojarzone automatycznie rozwinąć i wyświetlić panel tagów inteligentnych podczas tworzenia składnika.</xref:System.ComponentModel.Design.DesignerActionList>       Można zrezygnować z tego zachowania, ustawiając <xref:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow%2A?displayProperty=fullName>właściwości `false`.</xref:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to create a collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects.  \n  \n For a complete explanation of this code example, see [How to: Attach Smart Tags to a Windows Forms Component](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/visualbasic/p-system.componentmodel._28_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/csharp/p-system.componentmodel._28_1.cs)]"
  syntax:
    content: public virtual bool AutoShow { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli panelu powinny być wyświetlane podczas tworzenia składnika, do którego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerActionList.AutoShow*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionList.Component
  id: Component
  parent: System.ComponentModel.Design.DesignerActionList
  langs:
  - csharp
  name: Component
  nameWithType: DesignerActionList.Component
  fullName: System.ComponentModel.Design.DesignerActionList.Component
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Pobiera składnik związane z <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref>."
  syntax:
    content: public System.ComponentModel.IComponent Component { get; }
    return:
      type: System.ComponentModel.IComponent
      description: "Składnik związane z <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerActionList.Component*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionList.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.DesignerActionList
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: DesignerActionList.GetService(Type)
  fullName: System.ComponentModel.Design.DesignerActionList.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Zwraca obiekt reprezentujący usługi udostępniane przez składnik skojarzony z <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref>."
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Usługi udostępniane przez <xref href=&quot;System.ComponentModel.Component&quot;> </xref>."
    return:
      type: System.Object
      description: "<xref:System.Object>Reprezentujący oferowane przez <xref href=&quot;System.ComponentModel.Component&quot;> </xref>.</xref:System.Object> Ta wartość jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli <xref href=&quot;System.ComponentModel.Component&quot;> </xref> nie ma określonej usługi."
  overload: System.ComponentModel.Design.DesignerActionList.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems
  id: GetSortedActionItems
  parent: System.ComponentModel.Design.DesignerActionList
  langs:
  - csharp
  name: GetSortedActionItems()
  nameWithType: DesignerActionList.GetSortedActionItems()
  fullName: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Zwraca kolekcję <xref href=&quot;System.ComponentModel.Design.DesignerActionItem&quot;> </xref> obiektów zawartych w liście."
  remarks: "`virtual`Zaimplementowano metody GetSortedActionItems zwrócić w kolejności wyświetlania oczekiwanego kolekcję obiektów pochodzących od <xref:System.ComponentModel.Design.DesignerActionItem>klasy.</xref:System.ComponentModel.Design.DesignerActionItem> Te elementy mogą być następujące określonych typów.      | Typu | Opis elementu |   |----------|-----------------|   | <xref:System.ComponentModel.Design.DesignerActionHeaderItem>| Etykieta grupy wyświetlane wytłuszczonym drukiem. |   | <xref:System.ComponentModel.Design.DesignerActionTextItem>| Etykiety, wyświetlana w zwykły czcionki. |   | <xref:System.ComponentModel.Design.DesignerActionPropertyItem>| Element panel skojarzony z właściwością.</xref:System.ComponentModel.Design.DesignerActionPropertyItem> </xref:System.ComponentModel.Design.DesignerActionTextItem> </xref:System.ComponentModel.Design.DesignerActionHeaderItem> Może być również wyświetlany znacznik wyboru lub Edytor właściwości skojarzone z właściwości. |   | <xref:System.ComponentModel.Design.DesignerActionMethodItem>| Element panelu wyświetlane jako hiperłącze i skojarzonych z metodą. |       Dla każdego <xref:System.ComponentModel.Design.DesignerActionMethodItem>i <xref:System.ComponentModel.Design.DesignerActionPropertyItem>, odpowiedniej metody lub właściwości, które muszą zostać dodane do dostarczone przez programistę klasa pochodzi od <xref:System.ComponentModel.Design.DesignerActionList>klasy.</xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionPropertyItem> </xref:System.ComponentModel.Design.DesignerActionMethodItem> </xref:System.ComponentModel.Design.DesignerActionMethodItem> Każdej metody i właściwości elementu jest wyświetlany jako aktywny wpis; interakcję z nią za pomocą interfejsu użytkownika (UI) wywołuje odpowiedniej metody lub właściwości, odpowiednio.       Elementy właściwości mają interfejsu specjalny element panelu, który umożliwia wyświetlanie i modyfikowanie ich wartości właściwości. Aby uzyskać więcej informacji zobacz <xref:System.ComponentModel.Design.DesignerActionPropertyItem>klasy.</xref:System.ComponentModel.Design.DesignerActionPropertyItem>       Kolejność elementów w tablicy zwrócony odzwierciedla zlecenia, które będą wyświetlane w panelu. Elementy są grupowane według <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A>Właściwości, za pomocą następujących reguł:-Napotkano kategorii pierwszego elementu oznacza początek pierwszą grupę.</xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> Tej grupy będzie nadal występować, jak długo każdy element następne jest tej samej kategorii. W przypadku napotkania elementu kategorii inną, nowy, zostanie utworzona nowa grupa i element znajduje się w nim.      — Jeśli element ma typ inny niż bieżącej grupy, ale został już użyty tej kategorii, element jest umieszczony w pasującego istniejącej kategorii.      — Jeśli element nie ma kategorii, znajduje się w grupie różne na końcu panelu. Ta grupa zawiera również elementy, których <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A>właściwości ustawiono `false`.</xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A>       Metoda GetSortedActionItems jest wywoływana po pierwszym utworzeniu panelu. Należy wywołać <xref:System.ComponentModel.Design.DesignerActionUIService.Refresh%2A>metodę, aby zaktualizować listę elementy wyświetlane w panelu.</xref:System.ComponentModel.Design.DesignerActionUIService.Refresh%2A>"
  example:
  - "The following code example demonstrates how to create a collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects.  \n  \n For a complete explanation of this code example, see [How to: Attach Smart Tags to a Windows Forms Component](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/visualbasic/m-system.componentmodel._19_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/csharp/m-system.componentmodel._19_1.cs)]"
  syntax:
    content: public virtual System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems ();
    parameters: []
    return:
      type: System.ComponentModel.Design.DesignerActionItemCollection
      description: "A <xref href=&quot;System.ComponentModel.Design.DesignerActionItem&quot;> </xref> tablica, która zawiera elementy na tej liście."
  overload: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: DesignerActionList(IComponent)
  nameWithType: DesignerActionList.DesignerActionList(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionList.DesignerActionList(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Design.DesignerActionList.AutoShow
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: AutoShow
  nameWithType: DesignerActionList.AutoShow
  fullName: System.ComponentModel.Design.DesignerActionList.AutoShow
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerActionList.Component
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: Component
  nameWithType: DesignerActionList.Component
  fullName: System.ComponentModel.Design.DesignerActionList.Component
- uid: System.ComponentModel.Design.DesignerActionList.GetService(System.Type)
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: GetService(Type)
  nameWithType: DesignerActionList.GetService(Type)
  fullName: System.ComponentModel.Design.DesignerActionList.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: GetSortedActionItems()
  nameWithType: DesignerActionList.GetSortedActionItems()
  fullName: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems()
- uid: System.ComponentModel.Design.DesignerActionItemCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionItemCollection
  nameWithType: DesignerActionItemCollection
  fullName: System.ComponentModel.Design.DesignerActionItemCollection
- uid: System.ComponentModel.Design.DesignerActionList.#ctor*
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: DesignerActionList
  nameWithType: DesignerActionList.DesignerActionList
- uid: System.ComponentModel.Design.DesignerActionList.AutoShow*
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: AutoShow
  nameWithType: DesignerActionList.AutoShow
- uid: System.ComponentModel.Design.DesignerActionList.Component*
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: Component
  nameWithType: DesignerActionList.Component
- uid: System.ComponentModel.Design.DesignerActionList.GetService*
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: GetService
  nameWithType: DesignerActionList.GetService
- uid: System.ComponentModel.Design.DesignerActionList.GetSortedActionItems*
  parent: System.ComponentModel.Design.DesignerActionList
  isExternal: false
  name: GetSortedActionItems
  nameWithType: DesignerActionList.GetSortedActionItems
