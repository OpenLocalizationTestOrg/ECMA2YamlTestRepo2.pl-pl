### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.StorePermission
  id: StorePermission
  children:
  - System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)
  - System.Security.Permissions.StorePermission.Copy
  - System.Security.Permissions.StorePermission.Flags
  - System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.StorePermission.IsUnrestricted
  - System.Security.Permissions.StorePermission.ToXml
  - System.Security.Permissions.StorePermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: StorePermission
  nameWithType: StorePermission
  fullName: System.Security.Permissions.StorePermission
  type: Class
  summary: "Służy do sterowania dostępem do przechowuje zawierającego certyfikatów X.509. Ta klasa nie może być dziedziczona."
  remarks: "Formanty StorePermission dostęp przez kod jest przyznanych do X.509 przechowuje. Uprawnienie jest oparta na flagi reprezentujący poziomy dostępu, które są stosowane do każdego magazynu."
  syntax:
    content: 'public sealed class StorePermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: StorePermission(PermissionState)
  nameWithType: StorePermission.StorePermission(PermissionState)
  fullName: System.Security.Permissions.StorePermission.StorePermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Permissions.StorePermission&quot;> </xref> klasy ze stanem albo pełni ograniczone lub nieograniczone uprawnienia."
  remarks: "Obiekt uprawnienie zapewnia albo pełni ograniczone (`None`) lub `Unrestricted` dostęp do magazynów X.509. Jeśli pełni ograniczone (`None`), <xref:System.Security.Permissions.StorePermission.Flags%2A>Właściwości można następnie ustawić w celu określenia typu dozwolony dostęp do.</xref:System.Security.Permissions.StorePermission.Flags%2A>"
  syntax:
    content: public StorePermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Jeden z <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> wartości."
  overload: System.Security.Permissions.StorePermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>nie jest prawidłową <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> wartości."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)
  id: '#ctor(System.Security.Permissions.StorePermissionFlags)'
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: StorePermission(StorePermissionFlags)
  nameWithType: StorePermission.StorePermission(StorePermissionFlags)
  fullName: System.Security.Permissions.StorePermission.StorePermission(StorePermissionFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Permissions.StorePermission&quot;> </xref> klasy z określonym dostępu."
  remarks: "`flag` Parametr określa dozwolony dostęp do magazynów X.509. Określony zezwala na uzyskanie dostępu ma zastosowanie do wszystkich magazynów. Nie jest możliwe określenie dostęp do poszczególnych magazynu."
  syntax:
    content: public StorePermission (System.Security.Permissions.StorePermissionFlags flag);
    parameters:
    - id: flag
      type: System.Security.Permissions.StorePermissionFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;> </xref> wartości."
  overload: System.Security.Permissions.StorePermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flag</code>nie jest prawidłową kombinacją <xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;> </xref> wartości."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Copy
  id: Copy
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Copy()
  nameWithType: StorePermission.Copy()
  fullName: System.Security.Permissions.StorePermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Tworzy i zwraca identyczne kopię bieżącego uprawnień."
  remarks: "Kopię uprawnienie reprezentuje takie same prawa dostępu do zasobów oryginalnego uprawnienia."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Kopię bieżącego uprawnień."
  overload: System.Security.Permissions.StorePermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Flags
  id: Flags
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Flags
  nameWithType: StorePermission.Flags
  fullName: System.Security.Permissions.StorePermission.Flags
  type: Property
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Pobiera lub ustawia typ <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Store&quot;> </xref> dozwolone przez bieżące uprawnienia dostępu."
  remarks: "Właściwość flagi określa dozwolony dostęp do magazynów X.509. Magazyny X.509 są magazyny fizyczne używany do utrwalenia i zarządzać certyfikatami X.509."
  syntax:
    content: public System.Security.Permissions.StorePermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.StorePermissionFlags
      description: "Bitowe połączenie <xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;> </xref> wartości."
  overload: System.Security.Permissions.StorePermission.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Podejmowana jest próba, aby ustawić tę właściwość na nieprawidłową wartość. Zobacz <xref href=&quot;System.Security.Permissions.StorePermissionFlags&quot;> </xref> prawidłowe wartości."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: StorePermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StorePermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Rekonstruuje uprawnienie o określonym stanie kodowania XML."
  remarks: "Metoda FromXml rekonstruuje <xref:System.Security.Permissions.StorePermission>obiekt kodowania XML zdefiniowanych przez <xref:System.Security.SecurityElement>klasę.</xref:System.Security.SecurityElement> </xref:System.Security.Permissions.StorePermission> Użyj <xref:System.Security.Permissions.StorePermission.ToXml%2A>do kodowania XML <xref:System.Security.Permissions.StorePermission>, w tym informacje o stanie.</xref:System.Security.Permissions.StorePermission> </xref:System.Security.Permissions.StorePermission.ToXml%2A>"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> zawierający kodowanie na potrzeby rekonstrukcji uprawnienia do pliku XML."
  overload: System.Security.Permissions.StorePermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>nie jest elementem prawidłowego uprawnienia.       - lub - numeru wersji w <code>securityElement</code> jest nieprawidłowy."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: StorePermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StorePermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Tworzy i zwraca uprawnienia, które jest przecięcia bieżące uprawnienia i określony."
  remarks: "Część wspólną dwóch uprawnień jest uprawnienia, które opisano zestaw operacji opisujące wspólnych w obu uprawnień. Tylko zażąda przekazuje oba oryginalnego uprawnienia zostaną spełnione przecięcie."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uprawnienie do intersect z uprawnieniami bieżącego. Należy tego samego typu co bieżący uprawnień."
    return:
      type: System.Security.IPermission
      description: "Nowe uprawnienie reprezentuje część wspólną bieżące uprawnienia i określony. Jest to nowe uprawnienie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli część wspólną jest pusta."
  overload: System.Security.Permissions.StorePermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>s nie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i nie jest taki sam typ jak bieżące uprawnienia."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: StorePermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StorePermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Określa, czy bieżące uprawnienia podzbiór określonego uprawnienia."
  remarks: "Bieżące uprawnienia jest podzbiorem określonego uprawnienia, jeśli uprawnienia bieżącego określa zestaw operacji jest całkowicie zawarty w określonego uprawnienia. Na przykład uprawnienia reprezentujące dostęp do C:\\example.txt jest podzbiorem uprawnienie reprezentujące dostęp do folderu C:\\\\. Jeśli ta metoda zwraca `true`, bieżący uprawnienie reprezentuje nie uzyskać dostęp do chronionych zasobów niż określone uprawnienie."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uprawnienie do testowania dla relacji podzbioru. To uprawnienie musi być tego samego typu co bieżący uprawnień."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżące uprawnienia są podzbiorem określonego uprawnienia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.StorePermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i nie jest taki sam typ jak bieżące uprawnienia."
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: StorePermission.IsUnrestricted()
  fullName: System.Security.Permissions.StorePermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Zwraca wartość wskazującą, czy bieżący uprawnienie jest nieograniczony."
  remarks: "Nieograniczony uprawnienie reprezentuje dostęp do wszystkich zasobów chronionych przez uprawnienia."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli bieżący uprawnienie jest nieograniczony; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.StorePermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: StorePermission.ToXml()
  fullName: System.Security.Permissions.StorePermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Tworzy kodowania XML uprawnienia i swojego bieżącego stanu."
  remarks: "Użyj <xref:System.Security.Permissions.StorePermission.FromXml%2A>metody przywracanie informacji o stanie z <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> </xref:System.Security.Permissions.StorePermission.FromXml%2A>"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> zawierający kodowania XML uprawnienia, łącznie z żadnych informacji o stanie."
  overload: System.Security.Permissions.StorePermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.StorePermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: StorePermission.Union(IPermission)
  fullName: System.Security.Permissions.StorePermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Tworzy uprawnienia, które łączy bieżące uprawnienia i określony."
  remarks: "Wynik wywołania Unii jest uprawnienia, które reprezentuje wszystkie operacje reprezentowany przez bieżące uprawnienia i określonego uprawnienia. Wszelkie żądania, który przekazuje albo uprawnienie przekazuje ich union."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Uprawnienie do łączenia z uprawnieniami bieżącego. Należy tego samego typu co bieżący uprawnień."
    return:
      type: System.Security.IPermission
      description: "Nowe uprawnienie reprezentuje złożenie bieżące uprawnienia i określony."
  overload: System.Security.Permissions.StorePermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>nie jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> i nie jest taki sam typ jak bieżące uprawnienia."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: StorePermission(PermissionState)
  nameWithType: StorePermission.StorePermission(PermissionState)
  fullName: System.Security.Permissions.StorePermission.StorePermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: StorePermission(StorePermissionFlags)
  nameWithType: StorePermission.StorePermission(StorePermissionFlags)
  fullName: System.Security.Permissions.StorePermission.StorePermission(StorePermissionFlags)
- uid: System.Security.Permissions.StorePermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: StorePermissionFlags
  nameWithType: StorePermissionFlags
  fullName: System.Security.Permissions.StorePermissionFlags
- uid: System.Security.Permissions.StorePermission.Copy
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Copy()
  nameWithType: StorePermission.Copy()
  fullName: System.Security.Permissions.StorePermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.StorePermission.Flags
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Flags
  nameWithType: StorePermission.Flags
  fullName: System.Security.Permissions.StorePermission.Flags
- uid: System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: StorePermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.StorePermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: StorePermission.Intersect(IPermission)
  fullName: System.Security.Permissions.StorePermission.Intersect(IPermission)
- uid: System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: StorePermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.StorePermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.StorePermission.IsUnrestricted
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: StorePermission.IsUnrestricted()
  fullName: System.Security.Permissions.StorePermission.IsUnrestricted()
- uid: System.Security.Permissions.StorePermission.ToXml
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: ToXml()
  nameWithType: StorePermission.ToXml()
  fullName: System.Security.Permissions.StorePermission.ToXml()
- uid: System.Security.Permissions.StorePermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: StorePermission.Union(IPermission)
  fullName: System.Security.Permissions.StorePermission.Union(IPermission)
- uid: System.Security.Permissions.StorePermission.#ctor*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: StorePermission
  nameWithType: StorePermission.StorePermission
- uid: System.Security.Permissions.StorePermission.Copy*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Copy
  nameWithType: StorePermission.Copy
- uid: System.Security.Permissions.StorePermission.Flags*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Flags
  nameWithType: StorePermission.Flags
- uid: System.Security.Permissions.StorePermission.FromXml*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: FromXml
  nameWithType: StorePermission.FromXml
- uid: System.Security.Permissions.StorePermission.Intersect*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Intersect
  nameWithType: StorePermission.Intersect
- uid: System.Security.Permissions.StorePermission.IsSubsetOf*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: StorePermission.IsSubsetOf
- uid: System.Security.Permissions.StorePermission.IsUnrestricted*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: StorePermission.IsUnrestricted
- uid: System.Security.Permissions.StorePermission.ToXml*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: ToXml
  nameWithType: StorePermission.ToXml
- uid: System.Security.Permissions.StorePermission.Union*
  parent: System.Security.Permissions.StorePermission
  isExternal: false
  name: Union
  nameWithType: StorePermission.Union
