### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.Ping
  id: Ping
  children:
  - System.Net.NetworkInformation.Ping.#ctor
  - System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  - System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  - System.Net.NetworkInformation.Ping.PingCompleted
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.Send(System.String)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsyncCancel
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  langs:
  - csharp
  name: Ping
  nameWithType: Ping
  fullName: System.Net.NetworkInformation.Ping
  type: Class
  summary: "Umożliwia aplikacji ustalić, czy komputer zdalny jest dostępny za pośrednictwem sieci."
  remarks: "Aplikacje należy użyć klasy Ping do wykrywania, czy komputer zdalny jest nieosiągalny.       Topologia sieci można określić, czy Ping może pomyślnie nawiązać kontakt z hostem zdalnym. Obecność i konfiguracji serwera proxy, urządzeń translacji adresów adresów sieciowych lub zapory uniemożliwia Ping pomyślne. Pomyślne polecenie Ping tylko wskazuje, że host zdalny jest osiągalny w sieci, a obecność wyższej poziomu usług (takich jak serwer sieci Web) na hoście zdalnym nie jest gwarantowana.       Ta klasa udostępnia funkcjonalność podobną do narzędzia wiersza polecenia Ping.exe. <xref:System.Net.NetworkInformation.Ping.Send%2A>i <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metod wysyłania komunikatu żądania echa protokołu komunikatu sterowania Internetem (ICMP) na komputerze zdalnym i czeka na komunikat odpowiedzi echa ICMP z tego komputera.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Aby uzyskać szczegółowy opis komunikatów protokołu ICMP, zapoznaj się z RFC 792, dostępne pod adresem [http://www.ietf.org](http://www.ietf.org/).       Następujące typy są używane w klasie Ping i opisano szczegółowo poniżej.      | **Nazwy typu**|**opis**|   |-------------------|---------------------|   | <xref:System.Net.NetworkInformation.IPStatus>| Definiuje kodów stanu, opisujące wynik komunikatu żądania echa protokołu ICMP. |   | <xref:System.Net.NetworkInformation.PingOptions>| Umożliwia konfigurowanie lub pobrać ustawień, które kontrolują, ile razy pakiet żądania mogą być przekazywane (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>), i czy można ją pofragmentowane (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ). |   | <xref:System.Net.NetworkInformation.PingReply>| Zawiera wyniki żądanie echa ICMP. |   | <xref:System.Net.NetworkInformation.PingException>| Element zgłaszany, gdy wystąpienia nieodwracalnego błędu. |   | <xref:System.Net.NetworkInformation.PingCompletedEventArgs>| Zawiera dane skojarzone z <xref:System.Net.NetworkInformation.Ping.PingCompleted>zdarzenia, które są wywoływane, gdy wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>zakończeniu lub została anulowana. |   | <xref:System.Net.NetworkInformation.PingCompletedEventHandler>| Delegat, który udostępnia metody wywołania zwrotnego wywoływana, gdy wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>zakończeniu lub została anulowana. |       <xref:System.Net.NetworkInformation.Ping.Send%2A>i <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody zwracają odpowiedź w <xref:System.Net.NetworkInformation.PingReply>obiektu.</xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingException> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.PingOptions> </xref:System.Net.NetworkInformation.IPStatus> <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>Zwraca <xref:System.Net.NetworkInformation.IPStatus>wartości wskazującej, wynik żądania.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>       Podczas wysyłania żądania, należy określić komputera zdalnego. Aby to zrobić, podając ciąg nazwy i adresu IP w formacie ciągu hosta lub <xref:System.Net.IPAddress>obiektu.</xref:System.Net.IPAddress>       Można również określić dowolną z następujących informacji:-danych towarzyszący żądaniu. Określanie `buffer` pozwala dowiedzieć się czas wymagany dla pakietu o rozmiarze określonym do i z hosta zdalnego i maksymalna jednostka transmisji ścieżki sieciowej. (Zobacz <xref:System.Net.NetworkInformation.Ping.Send%2A>lub które trwają overloads <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> `buffer` parametru.)      — Czy pakiet Echo protokołu ICMP może pofragmentowany podczas przesyłania.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> (Zobacz właściwości <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>i <xref:System.Net.NetworkInformation.Ping.Send%2A>lub <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overloads, który zająć `options` parametru.)      -Ile razy węzłów routingu, takie jak routery czy bramy, może przekazywać pakiety przed jego albo dociera do komputera docelowego lub zostaną odrzucone.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> (Zobacz <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>i <xref:System.Net.NetworkInformation.Ping.Send%2A>lub które trwają overloads <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> `options` parametru.)      Limit czasu, w którym można odebrać odpowiedzi.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> (Zobacz <xref:System.Net.NetworkInformation.Ping.Send%2A>lub <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overloads które trwają `timeout` parametru.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>       Klasa Ping zapewnia synchroniczne i asynchroniczne metody wysyłania żądania. Jeśli aplikacja powinna zablokować podczas oczekiwania na odpowiedź, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>metod; te metody są synchroniczne.</xref:System.Net.NetworkInformation.Ping.Send%2A> Jeśli aplikacja nie powinny blokować, użycie asynchronicznego <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wykonuje we własnym wątku, który jest automatycznie przydzielone z puli wątków.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Po zakończeniu operacji asynchronicznej, zgłasza <xref:System.Net.NetworkInformation.Ping.PingCompleted>zdarzeń.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Aplikacje używają <xref:System.Net.NetworkInformation.PingCompletedEventHandler>pełnomocnika, aby określić metodę, która jest wywoływana dla <xref:System.Net.NetworkInformation.Ping.PingCompleted>zdarzeń.</xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Należy dodać <xref:System.Net.NetworkInformation.PingCompletedEventHandler>przekazać zdarzeń przed wywołaniem <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Metoda obiektu delegowanego <xref:System.Net.NetworkInformation.PingCompletedEventArgs>obiekt, który zawiera <xref:System.Net.NetworkInformation.PingReply>obiekt, który opisano wynik <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs>       Nie można użyć tego samego wystąpienia klasy Ping do generowania wielu równoczesnych żądań echa protokołu ICMP. Wywoływanie <xref:System.Net.NetworkInformation.Ping.Send%2A>podczas <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołania jest w toku lub wywoływania <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wielokrotnie zanim poprzednich wywołań zakończonych przyczyny <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>"
  example:
  - "The following code example demonstrates using the Ping class synchronously.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_1.cpp)]  \n  \n The following code example demonstrates using the Ping class asynchronously.  \n  \n [!code-cpp[NCLPingASync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_2.cpp)]\n [!code-cs[NCLPingASync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_2.cs)]"
  syntax:
    content: 'public class Ping : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> klasy."
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/m-system.net.networkinfo_4_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/m-system.net.networkinfo_4_1.cs)]"
  syntax:
    content: public Ping ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Zwalnia zasoby niezarządzane używane przez <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> obiektu i opcjonalnie usuwa zarządzane zasoby."
  remarks: "Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.ComponentModel.Component.Finalize%2A>metody.</xref:System.ComponentModel.Component.Finalize%2A> Publicznego `Dispose()` metoda wywołuje metodę Dispose chronionego z `disposing` ustawiona `true`. <xref:System.ComponentModel.Component.Finalize%2A>wywołuje `Dispose` z `disposing` ustawioną `false`.</xref:System.ComponentModel.Component.Finalize%2A>       Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Net.NetworkInformation.Ping>obiektu odwołania.</xref:System.Net.NetworkInformation.Ping> Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> powoduje zwolnienie tylko niezarządzane zasoby."
  overload: System.Net.NetworkInformation.Ping.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  id: OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Zgłasza <xref href=&quot;System.Net.NetworkInformation.Ping.PingCompleted&quot;> </xref> zdarzeń."
  remarks: "Klasy, które dziedziczą z <xref:System.Net.NetworkInformation.Ping>klasy mogą przesłaniać tę metodę do wykonywania dodatkowych zadań, takich jak rejestrowanie danych zawartych w `e` parametru.</xref:System.Net.NetworkInformation.Ping>       Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: wywoływanie zdarzeń](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metoda OnPingCompleted umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  syntax:
    content: protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.NetworkInformation.PingCompletedEventArgs
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingCompletedEventArgs&quot;> </xref> obiekt, który zawiera dane zdarzenia."
  overload: System.Net.NetworkInformation.Ping.OnPingCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  id: PingCompleted
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Występuje, gdy operacja asynchroniczna, aby wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) i odbierać odpowiedniego komunikatu odpowiedzi echa ICMP zakończeniu lub została anulowana."
  remarks: "Aplikacje Użyj zdarzenia PingCompleted, aby uzyskać informacje na temat stanu ukończenia i danych zbieranych przez wywołanie do jednego z <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> <xref:System.Net.NetworkInformation.PingCompletedEventHandler>Delegata zawiera wywołanie wstecz metoda wywoływana, gdy <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>zgłasza to zdarzenie.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler>"
  example:
  - "The following code example demonstrates specifying a callback method for the PingCompleted event. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/e-system.net.networkinfo_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/e-system.net.networkinfo_1.cs)]"
  syntax:
    content: public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;
    return:
      type: System.Net.NetworkInformation.PingCompletedEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  id: Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) do komputera, który ma określony <xref:System.Net.IPAddress>, uprawnia do odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera.</xref:System.Net.IPAddress>"
  remarks: "Ta metoda wysyła do hosta, który jest określony przez `address` 32 <xref:System.Byte>buforu danych z komunikatem echa protokołu ICMP.</xref:System.Byte> Metoda oczekuje&5; sekund dla komunikatu odpowiedzi echa ICMP. Jeśli otrzymasz odpowiedź w tym czasie, zwraca — metoda i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       To przeciążenie używa ustawień domyślnych dla pakietów fragmentacji i przesyłanie dalej pakietów. Pakiet zawierający komunikat echa ICMP może fragmentacji przesyłania Jeśli rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, który może być przesyłany przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi. Aby zapobiec fragmentacji, użyj jednej z <xref:System.Net.NetworkInformation.Ping.Send%2A>metody, która przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>właściwości `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Gdy <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Pakiet lub fragmenty pakietu (gdy pofragmentowany) mogą być przekazywane przez węzły routingu 128 razy zanim zostanie usunięty. Aby zmienić to ustawienie, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>przeciążenia, które przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>na żądaną wartość.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#3](~/add/codesnippet/csharp/m-system.net.networkinfo_5_1.cs)]\n [!code-cpp[NCLPingSampler#3](~/add/codesnippet/cpp/m-system.net.networkinfo_5_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.Net.IPAddress>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> obiektu, który zawiera informacje o komunikatu odpowiedzi echa ICMP, jeśli zostało odebrane lub opisuje przyczynę błędu, jeśli wiadomość nie została odebrana."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  id: Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) na określony komputer i odbierania odpowiedniego ICMP echo komunikat odpowiedzi z tego komputera."
  remarks: "Ta metoda wysyła 32 <xref:System.Byte>buforu danych z komunikatem echa protokołu ICMP.</xref:System.Byte> Metoda oczekuje&5; sekund dla komunikatu odpowiedzi echa ICMP. Jeśli otrzymasz odpowiedź w tym czasie, zwraca — metoda i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       To przeciążenie używa ustawień domyślnych dla pakietów fragmentacji i przesyłanie dalej pakietów. Pakiet zawierający komunikat echa ICMP może fragmentacji przesyłania Jeśli rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, który może być przesyłany przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi. Aby zapobiec fragmentacji, użyj jednej z <xref:System.Net.NetworkInformation.Ping.Send%2A>metody, która przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>właściwości `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Gdy <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Pakiet lub fragmenty pakietu (gdy pofragmentowany) mogą być przekazywane przez węzły routingu 128 razy zanim zostanie usunięty. Aby zmienić to ustawienie, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>przeciążenia, które przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>na żądaną wartość.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#2](~/add/codesnippet/csharp/m-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NCLPingSampler#2](~/add/codesnippet/cpp/m-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.String> Wartość określona dla tego parametru może być nazwa hosta lub adres IP reprezentację ciągu."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> obiekt zawierający informacje o komunikatu odpowiedzi echa ICMP, jeśli zostało odebrane lub udostępnia przyczynę błędu, jeśli wiadomość nie została odebrana."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub jest pustym ciągiem (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  id: Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu do komputera, który ma określony <xref:System.Net.IPAddress>, uprawnia do odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera.</xref:System.Net.IPAddress> Ta metoda służy do określenia wartości limitu czasu dla operacji."
  remarks: "Jeśli w określonym w czasie nie odebrano komunikat odpowiedzi echa ICMP `timeout` parametru echa ICMP kończy się niepowodzeniem i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Podczas określania bardzo małych numerów `timeout`, odpowiedź na polecenie Ping, może zostać odebrany nawet wtedy, gdy `timeout` upłynęły milisekund.       To przeciążenie używa ustawień domyślnych dla pakietów fragmentacji i przesyłanie dalej pakietów. Pakiet zawierający komunikat echa ICMP może fragmentacji przesyłania Jeśli rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, który może być przesyłany przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi. Aby zapobiec fragmentacji, użyj jednej z <xref:System.Net.NetworkInformation.Ping.Send%2A>metody, która przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>właściwości `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Gdy <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Pakiet lub fragmenty pakietów mogą być przekazywane przez węzły routingu 128 razy zanim zostanie usunięty. Aby zmienić to ustawienie, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>przeciążenia, które przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>na żądaną wartość.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> obiekt, który zawiera informacje o komunikatu odpowiedzi echa ICMP, jeśli zostało odebrane lub udostępnia przyczynę błędu, jeśli wiadomość nie została odebrana."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  id: Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) na określony komputer i odbierania odpowiedniego ICMP echo komunikat odpowiedzi z tego komputera. Ta metoda służy do określenia wartości limitu czasu dla operacji."
  remarks: "Jeśli w określonym w czasie nie odebrano komunikat odpowiedzi echa ICMP `timeout` parametru echa ICMP kończy się niepowodzeniem i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Podczas określania bardzo małych numerów `timeout`, odpowiedź na polecenie Ping, może zostać odebrany nawet wtedy, gdy `timeout` upłynęły milisekund.       To przeciążenie używa ustawień domyślnych dla pakietów fragmentacji i przesyłanie dalej pakietów. Pakiet zawierający komunikat echa ICMP może fragmentacji przesyłania Jeśli rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, który może być przesyłany przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi. Aby zapobiec fragmentacji, użyj jednej z <xref:System.Net.NetworkInformation.Ping.Send%2A>metody, która przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>właściwości `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Gdy <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Pakiet lub fragmenty pakietu (gdy pofragmentowany) mogą być przekazywane przez węzły routingu 128 razy zanim zostanie usunięty. Aby zmienić to ustawienie, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>przeciążenia, które przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>na żądaną wartość.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.String> Wartość określona dla tego parametru może być nazwa hosta lub adres IP reprezentację ciągu."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> obiekt, który zawiera informacje o komunikatu odpowiedzi echa ICMP, jeśli zostało odebrane lub udostępnia przyczynę błędu, jeśli wiadomość nie została odebrana."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub jest pustym ciągiem (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu do komputera, który ma określony <xref:System.Net.IPAddress>, uprawnia do odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera.</xref:System.Net.IPAddress> To przeciążenie umożliwia określenie wartości limitu czasu dla operacji."
  remarks: "Jeśli w określonym w czasie nie odebrano komunikat odpowiedzi echa ICMP `timeout` parametru echa ICMP kończy się niepowodzeniem i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Podczas określania bardzo małych numerów `timeout`, odpowiedź na polecenie Ping, może zostać odebrany nawet wtedy, gdy `timeout` upłynęły milisekund.       To przeciążenie używa ustawień domyślnych dla pakietów fragmentacji i przesyłanie dalej pakietów. Pakiet zawierający komunikat echa ICMP może fragmentacji przesyłania Jeśli rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, który może być przesyłany przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi. Aby zapobiec fragmentacji, użyj jednej z <xref:System.Net.NetworkInformation.Ping.Send%2A>metody, która przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>właściwości `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Gdy <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Pakiet lub fragmenty pakietów mogą być przekazywane przez węzły routingu 128 razy zanim zostanie usunięty. Aby zmienić to ustawienie, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>przeciążenia, które przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>na żądaną wartość.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#6](~/add/codesnippet/csharp/b44ef8f6-ad7e-49c2-8af4-_1.cs)]\n [!code-cpp[NCLPingSampler#6](~/add/codesnippet/cpp/b44ef8f6-ad7e-49c2-8af4-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która zawiera dane wysyłane z wiadomością echa ICMP i zwracany w odpowiedzi echa ICMP.</xref:System.Byte> Tablica nie może zawierać więcej niż 65,500 bajtów."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> obiekt zawierający informacje o komunikatu odpowiedzi echa ICMP, jeśli zostało odebrane lub udostępnia przyczynę błędu, jeśli wiadomość nie została odebrana. Metoda zwróci <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> Jeśli pakiet przekracza maksymalna jednostka transmisji (MTU)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rozmiar <code> buffer </code> przekracza 65 500 bajtów."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>buffer</code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, lub <code>buffer</code> rozmiar jest większy niż 65 500 bajtów."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  id: Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu na określonym komputerze i odbierania odpowiedniego ICMP echo komunikat odpowiedzi z tego komputera. To przeciążenie umożliwia określenie wartości limitu czasu dla operacji."
  remarks: "Jeśli w określonym w czasie nie odebrano komunikat odpowiedzi echa ICMP `timeout` parametru echa ICMP kończy się niepowodzeniem i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Podczas określania bardzo małych numerów `timeout`, odpowiedź na polecenie Ping, może zostać odebrany nawet wtedy, gdy `timeout` upłynęły milisekund.       To przeciążenie używa ustawień domyślnych dla pakietów fragmentacji i przesyłanie dalej pakietów. Pakiet zawierający komunikat echa ICMP może fragmentacji przesyłania Jeśli rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, który może być przesyłany przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi. Aby zapobiec fragmentacji, użyj jednej z <xref:System.Net.NetworkInformation.Ping.Send%2A>metody, która przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>właściwości `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Gdy <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Pakiet lub fragmenty pakietów mogą być przekazywane przez węzły routingu 128 razy zanim zostanie usunięty. Aby zmienić to ustawienie, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>przeciążenia, które przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>na żądaną wartość.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.String> Wartość określona dla tego parametru może być nazwa hosta lub adres IP reprezentację ciągu."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która zawiera dane wysyłane z wiadomością echa ICMP i zwracany w odpowiedzi echa ICMP.</xref:System.Byte> Tablica nie może zawierać więcej niż 65,500 bajtów."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> obiekt, który zawiera informacje o komunikatu odpowiedzi echa ICMP, jeśli zostało odebrane lub udostępnia przyczynę błędu, jeśli wiadomość nie została odebrana."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rozmiar <code> buffer </code> przekracza 65 500 bajtów."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub jest pustym ciągiem (&quot;&quot;).       - lub - <code>buffer</code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, lub <code>buffer</code> rozmiar jest większy niż 65 500 bajtów."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu do komputera, który ma określony <xref:System.Net.IPAddress>uprawnia do odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera.</xref:System.Net.IPAddress> To przeciążenie umożliwia określenie wartości limitu czasu dla operacji i fragmentacja kontroli i Time-to-Live wartości dla pakietu komunikatu echa protokołu ICMP."
  remarks: "Jeśli nie odebrano komunikat odpowiedzi echa ICMP w czasie określonym przez `timeout` parametru echa ICMP kończy się niepowodzeniem i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Podczas określania bardzo małych numerów `timeout`, odpowiedź na polecenie Ping, może zostać odebrany nawet wtedy, gdy `timeout` upłynęły milisekund.       Jeśli <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest właściwość `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Użyj <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>właściwość, aby określić maksymalną liczbę razy komunikat echa ICMP może być przekazywany przed osiągnięciem miejsca docelowego.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#5](~/add/codesnippet/csharp/81445dc1-adbd-44fc-b79c-_1.cs)]\n [!code-cpp[NCLPingSampler#5](~/add/codesnippet/cpp/81445dc1-adbd-44fc-b79c-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która zawiera dane wysyłane z wiadomością echa ICMP i zwracany w odpowiedzi echa ICMP.</xref:System.Byte> Tablica nie może zawierać więcej niż 65,500 bajtów."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> obiektu kontrolować fragmentacji i Time-to-Live wartości dla pakietu komunikatu echa protokołu ICMP."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> obiekt zawierający informacje o komunikatu odpowiedzi echa ICMP, jeśli zostało odebrane lub udostępnia przyczynę błędu, jeśli wiadomość nie została odebrana. Metoda zwróci <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> Jeśli pakiet przekracza maksymalna jednostka transmisji (MTU)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rozmiar <code> buffer </code> przekracza 65 500 bajtów."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - lub - <code>buffer</code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, lub <code>buffer</code> rozmiar jest większy niż 65 500 bajtów."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu na określonym komputerze i odbierania odpowiedniego ICMP echo komunikat odpowiedzi z tego komputera. To przeciążenie umożliwia określenie wartości limitu czasu dla operacji i fragmentacja kontroli i Time-to-Live wartości dla pakietów protokołu ICMP."
  remarks: "Jeśli nie odebrano komunikat odpowiedzi echa ICMP w czasie określonym przez `timeout` parametru echa ICMP kończy się niepowodzeniem i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Podczas określania bardzo małych numerów `timeout`, odpowiedź na polecenie Ping, może zostać odebrany nawet wtedy, gdy `timeout` upłynęły milisekund.       Jeśli <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest właściwość `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Użyj <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>właściwość, aby określić maksymalną liczbę razy komunikat echa ICMP może być przekazywany przed osiągnięciem miejsca docelowego.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#4](~/add/codesnippet/csharp/ce144ae4-a1a7-44f3-ac8a-_1.cs)]\n [!code-cpp[NCLPingSampler#4](~/add/codesnippet/cpp/ce144ae4-a1a7-44f3-ac8a-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.String> Wartość określona dla tego parametru może być nazwa hosta lub adres IP reprezentację ciągu."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która zawiera dane wysyłane z wiadomością echa ICMP i zwracany w odpowiedzi echa ICMP.</xref:System.Byte> Tablica nie może zawierać więcej niż 65,500 bajtów."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> obiektu kontrolować fragmentacji i Time-to-Live wartości dla pakietu komunikatu echa protokołu ICMP."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> obiekt, który zawiera informacje o komunikatu odpowiedzi echa ICMP, jeśli zostało odebrane lub udostępnia przyczynę błędu, jeśli wiadomość nie została odebrana."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rozmiar <code> buffer </code> przekracza 65 500 bajtów."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub ciągiem o zerowej długości.       - lub - <code>buffer</code> jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, lub <code>buffer</code> rozmiar jest większy niż 65 500 bajtów."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchronicznie próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) do komputera, który ma określony <xref:System.Net.IPAddress>, uprawnia do odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera.</xref:System.Net.IPAddress>"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Metoda wysyła wiadomość echo asynchronicznie, a po zakończeniu operacji (pomyślnie lub nie), zwraca informacje o stanie aplikacji.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, gdy aplikacja nie powinny blokować.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wykonuje każde wywołanie tej metody w oddzielnym wątku, który jest automatycznie przydzielone z puli wątków. Po zakończeniu operacji asynchronicznej, zgłasza <xref:System.Net.NetworkInformation.Ping.PingCompleted>zdarzeń.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Aby określić metodę, która jest wywoływana po <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>zgłasza zdarzenie, należy dodać <xref:System.Net.NetworkInformation.PingCompletedEventHandler>przekazać zdarzeń przed wywołaniem <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Metoda obiektu delegowanego <xref:System.Net.NetworkInformation.PingCompletedEventArgs>obiekt, który zawiera <xref:System.Net.NetworkInformation.PingReply>obiekt, który opisano wynik <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Obiekt dziedziczy <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>Właściwości.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ta właściwość zawiera `userToken` przekazany obiekt <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Jeśli aplikacja powinna zablokować podczas oczekiwania na odpowiedź, użyj jednej z <xref:System.Net.NetworkInformation.Ping.Send%2A>metod; te metody są synchroniczne.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Ta metoda wysyła 32 <xref:System.Byte>buforu danych z komunikatem echa protokołu ICMP.</xref:System.Byte> Metoda oczekuje&5; sekund dla komunikatu odpowiedzi echa ICMP. Jeśli otrzymasz odpowiedź w tym czasie, zwraca — metoda i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       To przeciążenie używa ustawień domyślnych dla pakietów fragmentacji i przesyłanie dalej pakietów. Pakiet zawierający komunikat echa ICMP może fragmentacji przesyłania Jeśli rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, który może być przesyłany przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi. Aby zapobiec fragmentacji, użyj jednej z <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, która przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>właściwości `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Gdy <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Pakiet lub fragmenty pakietów mogą być przekazywane przez węzły routingu 128 razy zanim zostanie usunięty. Aby zmienić to ustawienie, użyj <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>przeciążenia, które przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>na żądaną wartość.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.Net.IPAddress>"
    - id: userToken
      type: System.Object
      description: "Obiekt, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>Metoda jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nie jest prawidłowym adresem IP."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  id: SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchronicznie próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) na określony komputer i odbierać odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera."
  remarks: "Metoda SendAsync wysyła komunikat echo asynchronicznie, a po zakończeniu operacji (pomyślnie lub nie), zwraca informacje o stanie do aplikacji. Wywołaj metodę SendAsync, gdy aplikacja nie powinny blokować. Wykonuje każde wywołanie tej metody w oddzielnym wątku, który jest automatycznie przydzielone z puli wątków. Po zakończeniu operacji asynchronicznej, zgłasza <xref:System.Net.NetworkInformation.Ping.PingCompleted>zdarzeń.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Aby określić metodę, która jest wywoływana po <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>zgłasza zdarzenie, należy dodać <xref:System.Net.NetworkInformation.PingCompletedEventHandler>przekazać zdarzeń przed wywołaniem <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Metoda obiektu delegowanego <xref:System.Net.NetworkInformation.PingCompletedEventArgs>obiekt, który zawiera <xref:System.Net.NetworkInformation.PingReply>obiekt, który opisano wynik <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Obiekt dziedziczy <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>Właściwości.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ta właściwość zawiera `userToken` przekazany obiekt <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Jeśli aplikacja powinna zablokować podczas oczekiwania na odpowiedź, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>metod; te metody są synchroniczne.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Ta metoda wysyła 32 <xref:System.Byte>buforu danych z komunikatem echa protokołu ICMP.</xref:System.Byte> Metoda oczekuje&5; sekund dla komunikatu odpowiedzi echa ICMP. Jeśli otrzymasz odpowiedź w tym czasie zwraca metody i <xref:System.Net.NetworkInformation.PingReply.Status%2A>właściwości ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       To przeciążenie używa ustawień domyślnych dla pakietów fragmentacji i przesyłanie dalej pakietów. Pakiet zawierający komunikat echa ICMP może fragmentacji przesyłania Jeśli rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, który może być przesyłany przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi. Aby zapobiec fragmentacji, użyj jednej z <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, która przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>właściwości `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Gdy <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Pakiet lub fragmenty pakietów mogą być przekazywane przez węzły routingu 128 razy zanim zostanie usunięty. Aby zmienić to ustawienie, użyj <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>przeciążenia, które przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>na żądaną wartość.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.String> Wartość określona dla tego parametru może być nazwa hosta lub adres IP reprezentację ciągu."
    - id: userToken
      type: System.Object
      description: "Obiekt, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub jest pustym ciągiem (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie metody SendAsync jest w toku."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>Nie można rozpoznać prawidłowy adres IP."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchronicznie próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) do komputera, który ma określony <xref:System.Net.IPAddress>, uprawnia do odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera.</xref:System.Net.IPAddress> To przeciążenie umożliwia określenie wartości limitu czasu dla operacji."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Metoda wysyła wiadomość Echo asynchronicznie, a po zakończeniu operacji (pomyślnie lub nie), zwraca informacje o stanie aplikacji.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, gdy aplikacja nie powinny blokować.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wykonuje każde wywołanie w oddzielnym wątku, który jest automatycznie przydzielone z puli wątków. Po zakończeniu operacji asynchronicznej, zgłasza <xref:System.Net.NetworkInformation.Ping.PingCompleted>zdarzeń.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Aplikacje używają <xref:System.Net.NetworkInformation.PingCompletedEventHandler>pełnomocnika, aby określić metodę, która jest wywoływana po <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołuje zdarzenie.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Należy dodać <xref:System.Net.NetworkInformation.PingCompletedEventHandler>przekazać zdarzeń przed wywołaniem <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Metoda obiektu delegowanego <xref:System.Net.NetworkInformation.PingCompletedEventArgs>obiekt, który zawiera <xref:System.Net.NetworkInformation.PingReply>obiekt, który opisano wynik <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Obiekt dziedziczy <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>Właściwości.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ta właściwość zawiera `userToken` przekazany obiekt <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Jeśli aplikacja powinna zablokować podczas oczekiwania na odpowiedź, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>metod; te metody są synchroniczne.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Jeśli nie odebrano komunikat odpowiedzi echa ICMP w czasie określonym przez `timeout` parametru echa ICMP kończy się niepowodzeniem i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Podczas określania bardzo małych numerów `timeout`, odpowiedź na polecenie Ping, może zostać odebrany nawet wtedy, gdy `timeout` upłynęły milisekund.       To przeciążenie używa ustawień domyślnych dla pakietów fragmentacji i przesyłanie dalej pakietów. Pakiet zawierający komunikat echa ICMP może fragmentacji przesyłania Jeśli rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, który może być przesyłany przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi. Aby zapobiec fragmentacji, użyj jednej z <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, która przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>właściwości `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Gdy <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Pakiet lub fragmenty pakietu (gdy pofragmentowany) mogą być przekazywane przez węzły routingu 128 razy zanim zostanie usunięty. Aby zmienić to ustawienie, użyj <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>przeciążenia, które przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>na żądaną wartość.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "Obiekt, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>Metoda jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nie jest prawidłowym adresem IP."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  id: SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchronicznie próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) na określony komputer i odbierać odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera. To przeciążenie umożliwia określenie wartości limitu czasu dla operacji."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Metoda wysyła wiadomość Echo asynchronicznie, a po zakończeniu operacji (pomyślnie lub nie), zwraca informacje o stanie aplikacji.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, gdy aplikacja nie powinny blokować.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wykonuje każde wywołanie w oddzielnym wątku, który jest automatycznie przydzielone z puli wątków. Po zakończeniu operacji asynchronicznej, zgłasza <xref:System.Net.NetworkInformation.Ping.PingCompleted>zdarzeń.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Aplikacje używają <xref:System.Net.NetworkInformation.PingCompletedEventHandler>pełnomocnika, aby określić metodę, która jest wywoływana po <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołuje zdarzenie.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Należy dodać <xref:System.Net.NetworkInformation.PingCompletedEventHandler>przekazać zdarzeń przed wywołaniem <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Metoda obiektu delegowanego <xref:System.Net.NetworkInformation.PingCompletedEventArgs>obiekt, który zawiera <xref:System.Net.NetworkInformation.PingReply>obiekt, który opisano wynik <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Obiekt dziedziczy <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>Właściwości.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ta właściwość zawiera `userToken` przekazany obiekt <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Jeśli aplikacja powinna zablokować podczas oczekiwania na odpowiedź, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>metod; te metody są synchroniczne.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Jeśli nie odebrano komunikat odpowiedzi echa ICMP w czasie określonym przez `timeout` parametru echa ICMP kończy się niepowodzeniem i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Podczas określania bardzo małych numerów `timeout`, odpowiedź na polecenie Ping, może zostać odebrany nawet wtedy, gdy `timeout` upłynęły milisekund.       To przeciążenie używa ustawień domyślnych dla pakietów fragmentacji i przesyłanie dalej pakietów. Pakiet zawierający komunikat echa ICMP może fragmentacji przesyłania Jeśli rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, który może być przesyłany przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi. Aby zapobiec fragmentacji, użyj jednej z <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, która przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>właściwości `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Gdy <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Pakiet lub fragmenty pakietu (gdy pofragmentowany) mogą być przekazywane przez węzły routingu 128 razy zanim zostanie usunięty. Aby zmienić to ustawienie, użyj <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>przeciążenia, które przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>na żądaną wartość.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.String> Wartość określona dla tego parametru może być nazwa hosta lub adres IP reprezentację ciągu."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "Obiekt, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub jest pustym ciągiem (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>Nie można rozpoznać prawidłowy adres IP."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchronicznie próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu do komputera, który ma określony <xref:System.Net.IPAddress>, uprawnia do odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera.</xref:System.Net.IPAddress> To przeciążenie umożliwia określenie wartości limitu czasu dla operacji."
  remarks: "Ta metoda wysyła komunikat echo asynchronicznie, a po zakończeniu operacji (pomyślnie lub nie), zwraca informacje o stanie do aplikacji. Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, gdy aplikacja nie powinny blokować.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wykonuje każde wywołanie w oddzielnym wątku, który jest automatycznie przydzielone z puli wątków. Po zakończeniu operacji asynchronicznej, zgłasza <xref:System.Net.NetworkInformation.Ping.PingCompleted>zdarzeń.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Aby określić metodę, która jest wywoływana po <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>zgłasza zdarzenie, należy dodać <xref:System.Net.NetworkInformation.PingCompletedEventHandler>przekazać zdarzeń przed wywołaniem <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Metoda obiektu delegowanego <xref:System.Net.NetworkInformation.PingCompletedEventArgs>obiekt, który zawiera <xref:System.Net.NetworkInformation.PingReply>obiekt, który opisano wynik <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Obiekt dziedziczy <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>Właściwości.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ta właściwość zawiera `userToken` przekazany obiekt <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Jeśli aplikacja zablokuje się podczas oczekiwania na odpowiedź, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>metod; te metody są synchroniczne.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Jeśli nie odebrano komunikat odpowiedzi echa ICMP w czasie określonym przez `timeout` parametru echa ICMP kończy się niepowodzeniem i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Podczas określania bardzo małych numerów `timeout`, odpowiedź na polecenie Ping, może zostać odebrany nawet wtedy, gdy `timeout` upłynęły milisekund.       To przeciążenie używa ustawień domyślnych dla pakietów fragmentacji i przesyłanie dalej pakietów. Pakiet zawierający komunikat echa ICMP może fragmentacji przesyłania Jeśli rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, który może być przesyłany przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi. Aby zapobiec fragmentacji, użyj jednej z <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, która przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>właściwości `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Gdy <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Pakiet lub fragmenty pakietu (gdy pofragmentowany) mogą być przekazywane przez węzły routingu 128 razy zanim zostanie usunięty. Aby zmienić to ustawienie, użyj <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>przeciążenia, które przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>na żądaną wartość.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która zawiera dane wysyłane z wiadomością echa ICMP i zwracany w odpowiedzi echa ICMP.</xref:System.Byte> Tablica nie może zawierać więcej niż 65,500 bajtów."
    - id: userToken
      type: System.Object
      description: "Obiekt, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nie jest prawidłowym adresem IP."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rozmiar <code> buffer </code> przekracza 65 500 bajtów."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchronicznie próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu na określonym komputerze i odbierać odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera. To przeciążenie umożliwia określenie wartości limitu czasu dla operacji."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Metoda wysyła wiadomość Echo asynchronicznie, a po zakończeniu operacji (pomyślnie lub nie), zwraca informacje o stanie aplikacji.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, gdy aplikacja nie powinny blokować.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wykonuje każde wywołanie w oddzielnym wątku, który jest automatycznie przydzielone z puli wątków. Po zakończeniu operacji asynchronicznej, zgłasza <xref:System.Net.NetworkInformation.Ping.PingCompleted>zdarzeń.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Aplikacje używają <xref:System.Net.NetworkInformation.PingCompletedEventHandler>pełnomocnika, aby określić metodę, która jest wywoływana po <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołuje zdarzenie.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Należy dodać <xref:System.Net.NetworkInformation.PingCompletedEventHandler>przekazać zdarzeń przed wywołaniem <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Metoda obiektu delegowanego <xref:System.Net.NetworkInformation.PingCompletedEventArgs>obiekt zawierający <xref:System.Net.NetworkInformation.PingReply>obiekt, który opisano wynik <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Obiekt dziedziczy <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>Właściwości.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ta właściwość zawiera `userToken` przekazany obiekt <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Jeśli aplikacja powinna zablokować podczas oczekiwania na odpowiedź, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>metod; te metody są synchroniczne.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Jeśli nie odebrano komunikat odpowiedzi echa ICMP w czasie określonym przez `timeout` parametru echa ICMP kończy się niepowodzeniem i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Podczas określania bardzo małych numerów `timeout`, odpowiedź na polecenie Ping, może zostać odebrany nawet wtedy, gdy `timeout` upłynęły milisekund.       To przeciążenie używa ustawień domyślnych dla pakietów fragmentacji i przesyłanie dalej pakietów. Pakiet zawierający komunikat echa ICMP może fragmentacji przesyłania Jeśli rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, który może być przesyłany przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi. Aby zapobiec fragmentacji, użyj jednej z <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, która przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>właściwości `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Gdy <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Pakiet lub fragmenty pakietu (gdy pofragmentowany) mogą być przekazywane przez węzły routingu 128 razy zanim zostanie usunięty. Aby zmienić to ustawienie, użyj <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>przeciążenia, które przyjmuje `options` parametru i ustaw <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>na żądaną wartość.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.String> Wartość określona dla tego parametru może być nazwa hosta lub adres IP reprezentację ciągu."
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która zawiera dane wysyłane z wiadomością echa ICMP i zwracany w odpowiedzi echa ICMP.</xref:System.Byte> Tablica nie może zawierać więcej niż 65,500 bajtów."
    - id: userToken
      type: System.Object
      description: "Obiekt, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub jest pustym ciągiem (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>Nie można rozpoznać prawidłowy adres IP."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rozmiar <code> buffer </code> przekracza 65 500 bajtów."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchronicznie próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu do komputera, który ma określony <xref:System.Net.IPAddress>, uprawnia do odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera.</xref:System.Net.IPAddress> To przeciążenie umożliwia określenie wartości limitu czasu dla operacji i fragmentacja kontroli i Time-to-Live wartości dla pakietu komunikatu echa protokołu ICMP."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Metoda wysyła wiadomość Echo asynchronicznie, a po zakończeniu operacji (pomyślnie lub nie), zwraca informacje o stanie aplikacji.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, gdy aplikacja nie należy blokować.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wykonuje każde wywołanie w oddzielnym wątku, który jest automatycznie przydzielone z puli wątków. Po zakończeniu operacji asynchronicznej, zgłasza <xref:System.Net.NetworkInformation.Ping.PingCompleted>zdarzeń.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Aplikacje używają <xref:System.Net.NetworkInformation.PingCompletedEventHandler>pełnomocnika, aby określić metodę, która jest wywoływana po <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołuje zdarzenie.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Należy dodać <xref:System.Net.NetworkInformation.PingCompletedEventHandler>przekazać zdarzeń przed wywołaniem <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Metoda obiektu delegowanego <xref:System.Net.NetworkInformation.PingCompletedEventArgs>obiekt, który zawiera <xref:System.Net.NetworkInformation.PingReply>obiekt, który opisano wynik <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Obiekt dziedziczy <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>Właściwości.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ta właściwość zawiera `userToken` przekazany obiekt <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Jeśli aplikacja zablokuje się podczas oczekiwania na odpowiedź, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>metod; te metody są synchroniczne.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Jeśli nie odebrano komunikat odpowiedzi echa ICMP w czasie określonym przez `timeout` parametru echa ICMP kończy się niepowodzeniem i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Podczas określania bardzo małych numerów `timeout`, odpowiedź na polecenie Ping, może zostać odebrany nawet wtedy, gdy `timeout` upłynęły milisekund.       Jeśli <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest właściwość `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Użyj <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>właściwość, aby określić maksymalną liczbę razy komunikat echa ICMP może być przekazywany przed osiągnięciem miejsca docelowego.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method. For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.  \n  \n The following code example requires the following namespaces:  \n  \n [!code-cs[NCLPingSampler#0](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_1.cs)]\n [!code-cpp[NCLPingSampler#0](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_1.cpp)]  \n  \n The following code example sends an ICMP echo message asynchronously.  \n  \n [!code-cs[NCLPingSampler#7](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_2.cs)]\n [!code-cpp[NCLPingSampler#7](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_2.cpp)]"
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>, Które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>Wartość, która określa maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która zawiera dane wysyłane z wiadomością echa ICMP i zwracany w odpowiedzi echa ICMP.</xref:System.Byte> Tablica nie może zawierać więcej niż 65,500 bajtów."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> obiektu kontrolować fragmentacji i Time-to-Live wartości dla pakietu komunikatu echa protokołu ICMP."
    - id: userToken
      type: System.Object
      description: "Obiekt, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nie jest prawidłowym adresem IP."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rozmiar <code> buffer </code> przekracza 65 500 bajtów."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Asynchronicznie próbuje wysłać wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu na określonym komputerze i odbierać odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera. To przeciążenie umożliwia określenie wartości limitu czasu dla operacji i fragmentacja kontroli i Time-to-Live wartości dla pakietów protokołu ICMP."
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>Metoda wysyła wiadomość Echo asynchronicznie, a po zakończeniu operacji (pomyślnie lub nie), zwraca informacje o stanie aplikacji.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metody, gdy aplikacja nie należy blokować.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Wykonuje każde wywołanie w oddzielnym wątku, który jest automatycznie przydzielone z puli wątków. Po zakończeniu operacji asynchronicznej, zgłasza <xref:System.Net.NetworkInformation.Ping.PingCompleted>zdarzeń.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Aplikacje używają <xref:System.Net.NetworkInformation.PingCompletedEventHandler>pełnomocnika, aby określić metodę, która jest wywoływana po <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołuje zdarzenie.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Należy dodać <xref:System.Net.NetworkInformation.PingCompletedEventHandler>przekazać zdarzeń przed wywołaniem <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Metoda obiektu delegowanego <xref:System.Net.NetworkInformation.PingCompletedEventArgs>obiekt, który zawiera <xref:System.Net.NetworkInformation.PingReply>obiekt, który opisano wynik <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> <xref:System.Net.NetworkInformation.PingCompletedEventArgs>Obiekt dziedziczy <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>Właściwości.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ta właściwość zawiera `userToken` przekazany obiekt <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>wywołań.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Jeśli aplikacja powinna zablokować podczas oczekiwania na odpowiedź, użyj <xref:System.Net.NetworkInformation.Ping.Send%2A>metod; te metody są synchroniczne.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Jeśli nie odebrano komunikat odpowiedzi echa ICMP w czasie określonym przez `timeout` parametru echa ICMP kończy się niepowodzeniem i <xref:System.Net.NetworkInformation.PingReply.Status%2A>wartość właściwości jest równa <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Podczas określania bardzo małych numerów `timeout`, odpowiedź na polecenie Ping, może zostać odebrany nawet wtedy, gdy `timeout` upłynęły milisekund.       Jeśli <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>jest właściwość `true` i rozmiar całkowitą pakietu przekracza maksymalny rozmiar pakietu, które mogą być przenoszone przez jeden z węzłów routingu między komputerami lokalnymi i zdalnymi, żądanie echa ICMP kończy się niepowodzeniem.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Użyj <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>właściwość, aby określić maksymalną liczbę razy komunikat echa ICMP może być przekazywany przed osiągnięciem miejsca docelowego.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Jeśli pakiet nie miejsca docelowego, po przesyłane dalej określoną liczbę razy, pakiet zostanie odrzucony, a nie żądania echa protokołu ICMP. W takim wypadku <xref:System.Net.NetworkInformation.PingReply.Status%2A>ustawiono <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cpp[NCLPingAsync#1](~/add/codesnippet/cpp/56cfcaea-d9d5-4c26-9eea-_1.cpp)]\n [!code-cs[NCLPingAsync#1](~/add/codesnippet/csharp/56cfcaea-d9d5-4c26-9eea-_1.cs)]"
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, które identyfikują komputer stanowiący lokalizację docelową dla komunikatu echa ICMP.</xref:System.String> Wartość określona dla tego parametru może być nazwa hosta lub adres IP reprezentację ciągu."
    - id: timeout
      type: System.Int32
      description: "A <xref:System.Byte>Tablica, która zawiera dane wysyłane z wiadomością echa ICMP i zwracany w odpowiedzi echa ICMP.</xref:System.Byte> Tablica nie może zawierać więcej niż 65,500 bajtów."
    - id: buffer
      type: System.Byte[]
      description: "<xref:System.Int32>Wartość, która określa maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP.</xref:System.Int32>"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> obiektu kontrolować fragmentacji i Time-to-Live wartości dla pakietu komunikatu echa protokołu ICMP."
    - id: userToken
      type: System.Object
      description: "Obiekt, który jest przekazywany do metody wywoływane po zakończeniu operacji asynchronicznej."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub jest pustym ciągiem (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> jest adresem IPv6, a komputer jest systemem operacyjnym starszym niż Windows 2000."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>Nie można rozpoznać prawidłowy adres IP."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rozmiar <code> buffer </code> przekracza 65 500 bajtów."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Anuluje wszystkie oczekujące żądania asynchroniczne do wysyłania wiadomości echa protokołu komunikatu sterowania Internetem (ICMP) i odbiera odpowiedniego komunikatu odpowiedzi echa ICMP."
  remarks: "Wywołanie tej metody, aby zakończyć wszelkie wywołania <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>nie zostały wypełnione.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  id: SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Wyślij wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu do komputera, który ma określony <xref:System.Net.IPAddress>i odbiera odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera jako operację asynchroniczną.</xref:System.Net.IPAddress>"
  remarks: "Ta operacja nie powoduje blokowania. Zwrócona <xref:System.Threading.Tasks.Task%601>> obiektu ukończy po wysłaniu pakiet ICMP i odpowiedzi zostały odebrane.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Adres IP, który identyfikuje komputer, który jest miejscem docelowym dla komunikatu echa protokołu ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Zwraca &lt;xref:System.Threading.Tasks.Task%601&gt;.       Obiekt zadania reprezentujący operację asynchroniczną."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nie jest prawidłowym adresem IP."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  id: SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Wysyła kontroli protokołu ICMP (Internet Message) echo wiadomości z określonych danych buforu na określonym komputerze i wyświetlony odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera jako operację asynchroniczną."
  remarks: "Ta operacja nie powoduje blokowania. Zwrócona <xref:System.Threading.Tasks.Task%601>> obiektu ukończy po wysłaniu pakiet ICMP i odpowiedzi zostały odebrane.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Komputer, który jest miejscem docelowym dla komunikatu echa protokołu ICMP. Wartość określona dla tego parametru może być nazwa hosta lub adres IP reprezentację ciągu."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Zwraca &lt;xref:System.Threading.Tasks.Task%601&gt;.       Obiekt zadania reprezentujący operację asynchroniczną."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  id: SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Wyślij wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu do komputera, który ma określony <xref:System.Net.IPAddress>i odbiera odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera jako operację asynchroniczną.</xref:System.Net.IPAddress> To przeciążenie umożliwia określenie wartości limitu czasu dla operacji."
  remarks: "Ta operacja nie powoduje blokowania. Zwrócona <xref:System.Threading.Tasks.Task%601>> obiektu ukończy po wysłaniu pakiet ICMP i odpowiedzi zostały odebrane.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Adres IP, który identyfikuje komputer, który jest miejscem docelowym dla komunikatu echa protokołu ICMP."
    - id: timeout
      type: System.Int32
      description: "Maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Zwraca &lt;xref:System.Threading.Tasks.Task%601&gt;.       Obiekt zadania reprezentujący operację asynchroniczną."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  id: SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Wysyła kontroli protokołu ICMP (Internet Message) echo wiadomości z określonych danych buforu na określonym komputerze i wyświetlony odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera jako operację asynchroniczną. To przeciążenie umożliwia określenie wartości limitu czasu dla operacji."
  remarks: "Ta operacja nie powoduje blokowania. Zwrócona <xref:System.Threading.Tasks.Task%601>> obiektu ukończy po wysłaniu pakiet ICMP i odpowiedzi zostały odebrane.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Komputer, który jest miejscem docelowym dla komunikatu echa protokołu ICMP. Wartość określona dla tego parametru może być nazwa hosta lub adres IP reprezentację ciągu."
    - id: timeout
      type: System.Int32
      description: "Maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Zwraca &lt;xref:System.Threading.Tasks.Task%601&gt;.       Obiekt zadania reprezentujący operację asynchroniczną."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Wyślij wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu do komputera, który ma określony <xref:System.Net.IPAddress>i odbiera odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera jako operację asynchroniczną.</xref:System.Net.IPAddress> To przeciążenie umożliwia określenie wartości limitu czasu dla operacji i buforu do użycia dla operacji wysyłania i odbierania."
  remarks: "Ta operacja nie powoduje blokowania. Zwrócona <xref:System.Threading.Tasks.Task%601>> obiektu ukończy po wysłaniu pakiet ICMP i odpowiedzi zostały odebrane.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Adres IP, który identyfikuje komputer, który jest miejscem docelowym dla komunikatu echa protokołu ICMP."
    - id: timeout
      type: System.Int32
      description: "Maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która zawiera dane wysyłane z wiadomością echa ICMP i zwracany w odpowiedzi echa ICMP.</xref:System.Byte> Tablica nie może zawierać więcej niż 65,500 bajtów."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Zwraca &lt;xref:System.Threading.Tasks.Task%601&gt;.       Obiekt zadania reprezentujący operację asynchroniczną."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nie jest prawidłowym adresem IP."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rozmiar <code> buffer </code> przekracza 65,500 bajtów."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  id: SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Wysyła kontroli protokołu ICMP (Internet Message) echo wiadomości z określonych danych buforu na określonym komputerze i wyświetlony odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera jako operację asynchroniczną. To przeciążenie umożliwia określenie wartości limitu czasu dla operacji i buforu do użycia dla operacji wysyłania i odbierania."
  remarks: "Ta operacja nie powoduje blokowania. Zwrócona <xref:System.Threading.Tasks.Task%601>> obiektu ukończy po wysłaniu pakiet ICMP i odpowiedzi zostały odebrane.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Komputer, który jest miejscem docelowym dla komunikatu echa protokołu ICMP. Wartość określona dla tego parametru może być nazwa hosta lub adres IP reprezentację ciągu."
    - id: timeout
      type: System.Int32
      description: "Maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która zawiera dane wysyłane z wiadomością echa ICMP i zwracany w odpowiedzi echa ICMP.</xref:System.Byte> Tablica nie może zawierać więcej niż 65,500 bajtów."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Zwraca &lt;xref:System.Threading.Tasks.Task%601&gt;.       Obiekt zadania reprezentujący operację asynchroniczną."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Wyślij wiadomość echa protokołu komunikatu sterowania Internetem (ICMP) z określonych danych buforu do komputera, który ma określony <xref:System.Net.IPAddress>i odbiera odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera jako operację asynchroniczną.</xref:System.Net.IPAddress> To przeciążenie umożliwia Określ wartość limitu czasu dla operacji buforu do użycia dla operacji wysyłania i odbierania i Dostosuj fragmentacji i Time-to-Live wartości dla pakietu komunikatu echa protokołu ICMP."
  remarks: "Ta operacja nie powoduje blokowania. Zwrócona <xref:System.Threading.Tasks.Task%601>> obiektu ukończy po wysłaniu pakiet ICMP i odpowiedzi zostały odebrane.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Adres IP, który identyfikuje komputer, który jest miejscem docelowym dla komunikatu echa protokołu ICMP."
    - id: timeout
      type: System.Int32
      description: "Maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która zawiera dane wysyłane z wiadomością echa ICMP i zwracany w odpowiedzi echa ICMP.</xref:System.Byte> Tablica nie może zawierać więcej niż 65,500 bajtów."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> obiektu kontrolować fragmentacji i Time-to-Live wartości dla pakietu komunikatu echa protokołu ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Zwraca &lt;xref:System.Threading.Tasks.Task%601&gt;.       Obiekt zadania reprezentujący operację asynchroniczną."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>jest mniejsza od zera."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywołanie <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>jest w toku.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Wystąpił wyjątek podczas wysyłania i odbierania wiadomości protokołu ICMP. Zobacz wyjątek wewnętrzny, aby dokładnie wyjątek, który został zgłoszony."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nie jest prawidłowym adresem IP."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ten obiekt został usunięty."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rozmiar <code> buffer </code> przekracza 65,500 bajtów."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Wysyła kontroli protokołu ICMP (Internet Message) echo wiadomości z określonych danych buforu na określonym komputerze i wyświetlony odpowiedniego komunikatu odpowiedzi echa ICMP z tego komputera jako operację asynchroniczną. To przeciążenie umożliwia Określ wartość limitu czasu dla operacji buforu do użycia dla operacji wysyłania i odbierania i Dostosuj fragmentacji i Time-to-Live wartości dla pakietu komunikatu echa protokołu ICMP."
  remarks: "Ta operacja nie powoduje blokowania. Zwrócona <xref:System.Threading.Tasks.Task%601>> obiektu ukończy po wysłaniu pakiet ICMP i odpowiedzi zostały odebrane.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "Komputer, który jest miejscem docelowym dla komunikatu echa protokołu ICMP. Wartość określona dla tego parametru może być nazwa hosta lub adres IP reprezentację ciągu."
    - id: timeout
      type: System.Int32
      description: "Maksymalną liczbę milisekund (po wysłaniu wiadomości echo) oczekiwania na komunikat odpowiedzi echa ICMP."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>Tablica, która zawiera dane wysyłane z wiadomością echa ICMP i zwracany w odpowiedzi echa ICMP.</xref:System.Byte> Tablica nie może zawierać więcej niż 65,500 bajtów."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> obiektu kontrolować fragmentacji i Time-to-Live wartości dla pakietu komunikatu echa protokołu ICMP."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Zwraca &lt;xref:System.Threading.Tasks.Task%601&gt;.       Obiekt zadania reprezentujący operację asynchroniczną."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.NetworkInformation.Ping.#ctor
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
- uid: System.Net.NetworkInformation.PingCompletedEventArgs
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventArgs
  nameWithType: PingCompletedEventArgs
  fullName: System.Net.NetworkInformation.PingCompletedEventArgs
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
- uid: System.Net.NetworkInformation.PingCompletedEventHandler
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventHandler
  nameWithType: PingCompletedEventHandler
  fullName: System.Net.NetworkInformation.PingCompletedEventHandler
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
- uid: System.Net.NetworkInformation.PingReply
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<PingReply>
  nameWithType: Task<PingReply>
  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.NetworkInformation.PingReply>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.NetworkInformation.PingReply
    name: PingReply
    nameWithType: PingReply
    fullName: PingReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.#ctor*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping
  nameWithType: Ping.Ping
- uid: System.Net.NetworkInformation.Ping.Dispose*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose
  nameWithType: Ping.Dispose
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted
  nameWithType: Ping.OnPingCompleted
- uid: System.Net.NetworkInformation.Ping.Send*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send
  nameWithType: Ping.Send
- uid: System.Net.NetworkInformation.Ping.SendAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync
  nameWithType: Ping.SendAsync
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel
  nameWithType: Ping.SendAsyncCancel
- uid: System.Net.NetworkInformation.Ping.SendPingAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync
  nameWithType: Ping.SendPingAsync
