### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicRouteExpression
  id: DynamicRouteExpression
  children:
  - System.Web.DynamicData.DynamicRouteExpression.#ctor
  - System.Web.DynamicData.DynamicRouteExpression.ColumnName
  - System.Web.DynamicData.DynamicRouteExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.DynamicData.DynamicRouteExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  langs:
  - csharp
  name: DynamicRouteExpression
  nameWithType: DynamicRouteExpression
  fullName: System.Web.DynamicData.DynamicRouteExpression
  type: Class
  summary: "Pobiera klucz podstawowy z informacje routingu, aby wykonać filtrowanie danych."
  remarks: "Klasa DynamicRouteExpression jest używana z <xref:System.Web.UI.WebControls.QueryExtender>formantu w znaczniku strony.</xref:System.Web.UI.WebControls.QueryExtender> Klasa DynamicRouteExpression klucza podstawowego są pobierane z informacji o routingu, który jest zawarty w żądania sieci Web. <xref:System.Web.UI.WebControls.QueryExtender>Kontroli następnie używa klucza w `Where` klauzuli.</xref:System.Web.UI.WebControls.QueryExtender> Modyfikuje to zapytanie dla źródła danych, która zwraca wiersze tabeli filtrowane według klucza.       Można także filtrować dane przy użyciu klucza obcego, który można określić za pomocą <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A>Właściwości.</xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A>      <a name=&quot;DeclarativeSyntax&quot;></a>## Składnia deklaratywne```   <asp:DynamicRouteExpression     ColumnName=&quot;Name of the foreign key column&quot;/>   ```"
  example:
  - "A Visual Studio project with source code is available to accompany this topic: [Scaffolding Dynamic Data](http://go.microsoft.com/fwlink/?LinkId=168914).  \n  \n The following example shows a custom List.aspx page template for the Products table. It uses the <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> property to specify the ProductCategory foreign key for filtering the Products rows.  \n  \n The custom List.aspx page displays a column that contains links of the categories that are contained by the ProductCategory foreign-key column. When the user clicks one of these links, the List.aspx page displays only the rows that contain the selected category.  \n  \n The example requires the following:  \n  \n-   A Dynamic Data Web site. For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](~/add/includes/ajax-current-ext-md.md).  \n  \n-   The AdventureWorksLT sample database. For more information, see [How to: Connect to the AdventureWorksLT Database using an .MDF File](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.DynamicData.DynamicRouteExpression#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_3_1.aspx)]\n [!code-vb[System.Web.DynamicData.DynamicRouteExpression#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_3_1.aspx)]  \n  \n [!code-vb[System.Web.DynamicData.DynamicRouteExpression#3](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_3_2.vb)]\n [!code-cs[System.Web.DynamicData.DynamicRouteExpression#3](~/add/codesnippet/csharp/t-system.web.dynamicdata_3_2.cs)]"
  syntax:
    content: 'public class DynamicRouteExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicRouteExpression.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicRouteExpression
  langs:
  - csharp
  name: DynamicRouteExpression()
  nameWithType: DynamicRouteExpression.DynamicRouteExpression()
  fullName: System.Web.DynamicData.DynamicRouteExpression.DynamicRouteExpression()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.DynamicData.DynamicRouteExpression&quot;> </xref> klasy."
  remarks: "Zwykle nie wywołuje konstruktor DynamicRouteExpression. Zamiast tego należy użyć <xref:System.Web.DynamicData.DynamicRouteExpression>klasy w znaczniku strony i klasy został zainicjowany podczas ładowania strony.</xref:System.Web.DynamicData.DynamicRouteExpression>"
  syntax:
    content: public DynamicRouteExpression ();
    parameters: []
  overload: System.Web.DynamicData.DynamicRouteExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicRouteExpression.ColumnName
  id: ColumnName
  parent: System.Web.DynamicData.DynamicRouteExpression
  langs:
  - csharp
  name: ColumnName
  nameWithType: DynamicRouteExpression.ColumnName
  fullName: System.Web.DynamicData.DynamicRouteExpression.ColumnName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia nazwę kolumny, która zawiera klucz obcy, służący do zbadać źródło danych."
  remarks: "Właściwość ColumnName reprezentuje klucz obcy. Ten klucz służy do modyfikowania zapytania dla źródła danych."
  example:
  - "The following example shows how to specify the ProductCategory foreign-key column for filtering the products to display. This example is part of the larger example that is provided for the <xref:System.Web.DynamicData.DynamicRouteExpression> class.  \n  \n```  \n<asp:QueryExtender TargetControlID=\"GridDataSource\"   \n    ID=\"GridQueryExtender\" runat=\"server\">  \n  <asp:DynamicRouteExpression ColumnName=\"ProductCategory\" />  \n</asp:QueryExtender>  \n```"
  syntax:
    content: public string ColumnName { get; set; }
    return:
      type: System.String
      description: "Nazwa kolumny klucza obcego."
  overload: System.Web.DynamicData.DynamicRouteExpression.ColumnName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicRouteExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.DynamicRouteExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: DynamicRouteExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.DynamicRouteExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera zapytanie ze źródła danych..."
  remarks: "Zapytanie ze źródła danych reprezentowanego przez `source` parametru jest modyfikowany przez zastosowanie klucz podstawowy lub obcy bieżące informacje o trasie."
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "Zapytania można zmodyfikować."
    return:
      type: System.Linq.IQueryable
      description: "Wystąpienie zmodyfikowane zapytanie."
  overload: System.Web.DynamicData.DynamicRouteExpression.GetQueryable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicRouteExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  id: SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.DynamicRouteExpression
  langs:
  - csharp
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: DynamicRouteExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.DynamicRouteExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ustawia kontekst HTTP <xref href=&quot;System.Web.DynamicData.DynamicRouteExpression&quot;> </xref> obiektu."
  syntax:
    content: public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);
    parameters:
    - id: owner
      type: System.Web.UI.Control
      description: "Formant zawierający <xref href=&quot;System.Web.DynamicData.DynamicRouteExpression&quot;> </xref> wystąpienia. Jest to <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> formantu."
    - id: context
      type: System.Web.HttpContext
      description: "Kontekst żądania sieci Web."
    - id: dataSource
      type: System.Web.UI.WebControls.IQueryableDataSource
      description: "Źródło danych docelowych dla <xref href=&quot;System.Web.DynamicData.DynamicRouteExpression&quot;> </xref> wystąpienia."
  overload: System.Web.DynamicData.DynamicRouteExpression.SetContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.DataSourceExpression
- uid: System.Web.DynamicData.DynamicRouteExpression.#ctor
  parent: System.Web.DynamicData.DynamicRouteExpression
  isExternal: false
  name: DynamicRouteExpression()
  nameWithType: DynamicRouteExpression.DynamicRouteExpression()
  fullName: System.Web.DynamicData.DynamicRouteExpression.DynamicRouteExpression()
- uid: System.Web.DynamicData.DynamicRouteExpression.ColumnName
  parent: System.Web.DynamicData.DynamicRouteExpression
  isExternal: false
  name: ColumnName
  nameWithType: DynamicRouteExpression.ColumnName
  fullName: System.Web.DynamicData.DynamicRouteExpression.ColumnName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicRouteExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.DynamicRouteExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: DynamicRouteExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.DynamicRouteExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.DynamicData.DynamicRouteExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.DynamicRouteExpression
  isExternal: false
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: DynamicRouteExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.DynamicRouteExpression.SetContext(Control,HttpContext,IQueryableDataSource)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.IQueryableDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IQueryableDataSource
  nameWithType: IQueryableDataSource
  fullName: System.Web.UI.WebControls.IQueryableDataSource
- uid: System.Web.DynamicData.DynamicRouteExpression.#ctor*
  parent: System.Web.DynamicData.DynamicRouteExpression
  isExternal: false
  name: DynamicRouteExpression
  nameWithType: DynamicRouteExpression.DynamicRouteExpression
- uid: System.Web.DynamicData.DynamicRouteExpression.ColumnName*
  parent: System.Web.DynamicData.DynamicRouteExpression
  isExternal: false
  name: ColumnName
  nameWithType: DynamicRouteExpression.ColumnName
- uid: System.Web.DynamicData.DynamicRouteExpression.GetQueryable*
  parent: System.Web.DynamicData.DynamicRouteExpression
  isExternal: false
  name: GetQueryable
  nameWithType: DynamicRouteExpression.GetQueryable
- uid: System.Web.DynamicData.DynamicRouteExpression.SetContext*
  parent: System.Web.DynamicData.DynamicRouteExpression
  isExternal: false
  name: SetContext
  nameWithType: DynamicRouteExpression.SetContext
