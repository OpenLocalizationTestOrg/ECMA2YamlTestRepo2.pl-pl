### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.ICustomMarshaler
  id: ICustomMarshaler
  children:
  - System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)
  - System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)
  - System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize
  - System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)
  - System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)
  langs:
  - csharp
  name: ICustomMarshaler
  nameWithType: ICustomMarshaler
  fullName: System.Runtime.InteropServices.ICustomMarshaler
  type: Interface
  summary: "Zawiera niestandardowe otoki obsługi wywołań metody."
  remarks: "Organizator zapewnia mostka między funkcjonalność starych i nowych interfejsów. Przekazywanie niestandardowych zapewnia następujące korzyści:-umożliwia aplikacji klienckich, które zostały zaprojektowane do pracy z interfejsem starego także pracować z serwerów, które implementują nowy interfejs.      — Umożliwia aplikacjom klienta zaprojektowane do pracy z nowego interfejsu do pracy z serwerami, które implementują interfejs stary.       Jeśli masz interfejs powoduje to wprowadzenie różnych zachowanie marshalingu lub które do składnika modelu COM (Object) będzie widoczne w inny sposób, można zaprojektować organizatora niestandardowego zamiast międzyoperacyjnego organizatora. Za pomocą organizatora niestandardowego, można zminimalizować rozróżnianie nowych składników platformy .NET Framework i istniejące składniki COM.       Załóżmy na przykład, czy tworzysz interfejsu zarządzanego o nazwie `INew`. Gdy ten interfejs jest uwidaczniany w modelu COM za pomocą standardowych wywoływana otoka COM (CCW), ma tych samych metod co zarządzanego interfejsu i używa reguł zawiera wbudowane międzyoperacyjnego organizatora. Teraz załóżmy, że wywoływana dobrze znanego interfejsu COM `IOld` już zapewnia te same funkcje co `INew` interfejsu. Projektując organizatora niestandardowego może zapewniać implementację niezarządzane z `IOld` który deleguje po prostu wywołań zarządzaną implementację `INew` interfejsu. W związku z tym organizatora niestandardowego działa jako mostka między interfejsami zarządzane i niezarządzane.      > [!NOTE] > Organizatorów niestandardowych nie są wywoływane, gdy wywołanie z zarządzanego kodu do kodu niezarządzanego interfejsu tylko do wysyłania.      ## Definiowanie przekazywanie typu przed utworzeniem organizatora niestandardowego, należy zdefiniować zarządzane i niezarządzane interfejsy, które będzie można zorganizować. Te interfejsy często wykonywać tę samą funkcję, ale są widoczne w inny sposób do obiektów zarządzanych i niezarządzanych.       Zarządzane kompilatora tworzy zarządzanego interfejsu z metadanych, a wynikowy interfejs wygląda zarządzanego interfejsu. W poniższym przykładzie przedstawiono typowe interfejsu.       [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#1](~/add/codesnippet/cpp/t-system.runtime.interop_8_1.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#1](~/add/codesnippet/csharp/t-system.runtime.interop_8_1.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#1](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_1.vb) ] typ niezarządzany w języku definicji interfejsu (IDL) i skompiluj go przez kompilator Microsoft interfejsu Definition Language (MIDL).     Zdefiniuj interfejs w instrukcji biblioteki i przypisz go Identyfikatora interfejsu z atrybutem uniwersalny, unikatowy identyfikator (UUID), jak w poniższym przykładzie pokazano.      ```    [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]   library OldLib {        [uuid(9B2BAADD-0705-11D3-A0CD-00C04FA35826)]        interface IOld : IUnknown            HRESULT OldMethod();   }   ```Kompilator MIDL tworzy kilka plików wyjściowych. Jeśli interfejs jest zdefiniowany w Old.idl, plik wyjściowy Old_i.c definiuje `const` zmiennej o identyfikatorze interfejsu (IID) interfejsu, jak pokazano w poniższym przykładzie.      ```   const IID IID_IOld = {0x9B2BAADD,0x0705,0x11D3,{0xA0,0xCD,0x00,0xC0,0x4F,0xA3,0x58,0x26}};   ```Plik Old.h również jest generowany przez MIDL. Zawiera ona C++ definicji interfejsu, który można dołączyć do kodu źródłowego języka C++.      ## Implementowanie Your interfejsu ICustomMarshaler organizatora niestandardowego musi implementować interfejs ICustomMarshaler, aby zapewnić odpowiednią otoki do środowiska wykonawczego.       Poniższy kod C# przedstawia podstawowy interfejs, który musi być implementowana przez wszystkie Organizatorzy niestandardowi.       [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#2](~/add/codesnippet/cpp/t-system.runtime.interop_8_2.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#2](~/add/codesnippet/csharp/t-system.runtime.interop_8_2.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#2](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_2.vb) ] interfejsu ICustomMarshaler obejmuje metody udostępniające obsługę konwersji, czyszczenia oraz informacje o danych można zorganizować.          | Typ operacji | Metoda ICustomMarshaler | Opis elementu |   |-----------------------|-----------------------------|-----------------|   | Konwersja (z kodu natywnego do zarządzanego kodu) | <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>| Marshals wskaźnika do natywnej danych do zarządzanego obiektu.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> Ta metoda zwraca niestandardowe wywoływana otoka środowiska uruchomieniowego (otoki RCW), która może kierować niezarządzane interfejs, który jest przekazywany jako argument. Organizator powinien zwrócić wystąpienia niestandardowe otoki RCW dla tego typu. |   | Konwersja (z kodu zarządzanego do natywnego) | <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>| Marshals zarządzanego obiektu na wskaźnik do danych w trybie macierzystym.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> Ta metoda zwraca niestandardowe wywoływana otoka COM (CCW), która może kierować zarządzanego interfejsu, który jest przekazywany jako argument. Organizator powinien zwrócić wystąpienia niestandardowego CCW dla tego typu. |   | Oczyścić (z kodu macierzystego) | <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A>| Włącza organizatora mógł wyczyścić danych natywnych (CCW), który jest zwracany przez metodę <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>. |   | Oczyścić (z kodu zarządzanego) | <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A>| Włącza organizatora czyszczenie danych zarządzanych (otoki RCW), który jest zwracany przez metodę <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>. |   | Informacje (kod natywny) | <xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A>| Zwraca rozmiar niezarządzanych danych zorganizowanie. |      ### Konwersji <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A?displayProperty=fullName>Marshals wskaźnika do natywnej danych do zarządzanego obiektu.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A?displayProperty=fullName> </xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A> Ta metoda zwraca niestandardowe wywoływana otoka środowiska uruchomieniowego (otoki RCW), która może kierować niezarządzane interfejs, który jest przekazywany jako argument. Organizator powinien zwrócić wystąpienia niestandardowe otoki RCW dla tego typu.       <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A?displayProperty=fullName>Marshals zarządzanego obiektu na wskaźnik do danych w trybie macierzystym.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A?displayProperty=fullName> Ta metoda zwraca niestandardowe wywoływana otoka COM (CCW), która może kierować zarządzanego interfejsu, który jest przekazywany jako argument. Organizator powinien zwrócić wystąpienia niestandardowego CCW dla tego typu.      ### Oczyszczanie <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A?displayProperty=fullName>umożliwia Organizator mógł wyczyścić danych natywnych (CCW), który jest zwracany przez <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>metody.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A?displayProperty=fullName>       <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A?displayProperty=fullName>Włącza organizatora czyszczenie danych zarządzanych (otoki RCW) zwracane przez <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>metody.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A></xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A?displayProperty=fullName>      ### Rozmiar informacji <xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A?displayProperty=fullName>zwraca rozmiar niezarządzanych danych zorganizowanie.</xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A?displayProperty=fullName>      ## Implementacja metody GetInstance, oprócz implementowania interfejsu ICustomMarshaler, musi implementować Organizatorzy niestandardowi `static` wywołano metodę `GetInstance` która akceptuje <xref:System.String>jako parametr i ma typ zwracany ICustomMarshaler.</xref:System.String> To `static` metoda jest wywoływana przez środowisko uruchomieniowe języka wspólnego firmy warstwa międzyoperacyjności COM można utworzyć wystąpienia organizatora niestandardowego. Ciąg, który jest przekazywany do `GetInstance` plik cookie, które metody można użyć do dostosowania zwrócony organizatora niestandardowego.      ```   static ICustomMarshaler *GetInstance(String *pstrCookie);   ```## Stosowania atrybut MarshalAsAttribute do używania organizatora niestandardowego, należy najpierw zastosować <xref:System.Runtime.InteropServices.MarshalAsAttribute>atrybut parametru lub pola, które jest są organizowane.</xref:System.Runtime.InteropServices.MarshalAsAttribute>       Należy także podać <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>wartości wyliczenia <xref:System.Runtime.InteropServices.MarshalAsAttribute>konstruktora.</xref:System.Runtime.InteropServices.MarshalAsAttribute> </xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> Ponadto należy określić <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>pole z jednym z następujących nazwanych parametrów:- <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>(wymagane): Nazwa kwalifikowana zestawu organizatora niestandardowego.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> </xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> Przestrzeń nazw i klasy organizatora niestandardowego, należy uwzględnić nazwę. Jeśli organizatora niestandardowego nie jest zdefiniowany w zestawie, który jest używany w, należy określić nazwę zestawu, w którym jest zdefiniowany.          > [!NOTE] > Można użyć <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>pole zamiast <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>pola.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> </xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>pobiera typ, który ułatwia określenie.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>      - <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie>(opcjonalnie): plik cookie, który jest przekazywany do organizatora niestandardowego.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie> Plik cookie umożliwia udostępnienie dodatkowych informacji do organizatora. Na przykład użycie tej samej organizatora o podanie numeru otoki plik cookie identyfikuje określonych otoki. Plik cookie jest przekazywany do `GetInstance` metody organizatora.       <xref:System.Runtime.InteropServices.MarshalAsAttribute>Atrybut określa organizatora niestandardowego, więc może aktywować odpowiednie otoki.</xref:System.Runtime.InteropServices.MarshalAsAttribute> Usługi międzyoperacyjne środowisko uruchomieniowe języka wspólnego firmy następnie sprawdza, czy ten atrybut i tworzy czasu organizatora niestandardowego pierwszego argumentu (parametr lub pole) musi być przekazywane.       Środowisko uruchomieniowe następnie wywołuje <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>i <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>metody dla organizatora niestandardowego, aby aktywować poprawne otoki obsługi wywołań.</xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> </xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>      ## Przy użyciu niestandardowego organizatora podczas organizatora niestandardowego jest pełny, możesz używać go jako niestandardowy otoki dla określonego typu. W poniższym przykładzie przedstawiono definicję `IUserData` zarządzanego interfejsu: [!code-cpp [System.Runtime.InteropServices.ICustomMarshaler#3](~/add/codesnippet/cpp/t-system.runtime.interop_8_3.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#3](~/add/codesnippet/csharp/t-system.runtime.interop_8_3.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#3](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_3.vb) ] w poniższym przykładzie `IUserData` używa interfejsu `NewOldMarshaler` organizatora niestandardowego na potrzeby aplikacji niezarządzanych klienta do przekazywania `IOld` interfejsu do `DoSomeStuff` metody.     Opis zarządzanych `DoSomeStuff` ma metodę `INew` interfejsu, jak pokazano w poprzednim przykładzie, podczas gdy niezarządzana wersja `DoSomeStuff` przyjmuje `IOld` wskaźnika interfejsu, jak pokazano w poniższym przykładzie.      ```   [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]   library UserLib {        [uuid(9B2BABCD-0705-11D3-A0CD-00C04FA35826)]        interface IUserData : IUnknown            HRESULT DoSomeStuff(IUnknown* pIOld);   }   ```Biblioteki typów, generowanego przez wyeksportowanie zarządzanej definicji `IUserData` daje niezarządzane definicji w poniższym przykładzie zamiast standardowego definicji. <xref:System.Runtime.InteropServices.MarshalAsAttribute>Atrybut zastosowany do `INew` zarządzanej definicji argumentu `DoSomeStuff` — metoda wskazuje, że argument używa organizatora niestandardowego, jak przedstawiono na poniższym przykładzie.</xref:System.Runtime.InteropServices.MarshalAsAttribute>       [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#4](~/add/codesnippet/cpp/t-system.runtime.interop_8_4.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#4](~/add/codesnippet/csharp/t-system.runtime.interop_8_4.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#4](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_4.vb)][!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#5](~/add/codesnippet/cpp/t-system.runtime.interop_8_5.cpp)][!code-cs[System.Runtime.InteropServices.ICustomMarshaler#5](~/add/codesnippet/csharp/t-system.runtime.interop_8_5.cs)][!code-vb[System.Runtime.InteropServices.ICustomMarshaler#5](~/add/codesnippet/visualbasic/t-system.runtime.interop_8_5.vb) ] w poprzednich przykładach, pierwszy parametr dostarczony do <xref:System.Runtime.InteropServices.MarshalAsAttribute>atrybutu <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>wartość wyliczenia `UnmanagedType.CustomMarshaler`.</xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> </xref:System.Runtime.InteropServices.MarshalAsAttribute>                      Drugi parametr jest <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType>pola, które zawiera nazwa kwalifikowana zestawu organizatora niestandardowego.</xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> Ta nazwa składa się z przestrzeni nazw i klasy organizatora niestandardowego (`MarshalType=&quot;MyCompany.NewOldMarshaler&quot;`)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ICustomMarshaler
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)
  id: CleanUpManagedData(System.Object)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: CleanUpManagedData(Object)
  nameWithType: ICustomMarshaler.CleanUpManagedData(Object)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Wykonuje niezbędne czyszczenie danych zarządzanych nie jest już potrzebne."
  syntax:
    content: public void CleanUpManagedData (object ManagedObj);
    parameters:
    - id: ManagedObj
      type: System.Object
      description: "Obiektu zarządzanego mają zostać zniszczone."
  overload: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)
  id: CleanUpNativeData(System.IntPtr)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: CleanUpNativeData(IntPtr)
  nameWithType: ICustomMarshaler.CleanUpNativeData(IntPtr)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Wykonuje cleanup konieczne niezarządzanych danych, gdy nie jest już potrzebne."
  syntax:
    content: public void CleanUpNativeData (IntPtr pNativeData);
    parameters:
    - id: pNativeData
      type: System.IntPtr
      description: "Wskaźnik do niezarządzanego dane mają zostać zniszczone."
  overload: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize
  id: GetNativeDataSize
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: GetNativeDataSize()
  nameWithType: ICustomMarshaler.GetNativeDataSize()
  fullName: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Zwraca rozmiar danych w trybie macierzystym zorganizowanie."
  syntax:
    content: public int GetNativeDataSize ();
    parameters: []
    return:
      type: System.Int32
      description: "Rozmiar w bajtach danych w trybie macierzystym."
  overload: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)
  id: MarshalManagedToNative(System.Object)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: MarshalManagedToNative(Object)
  nameWithType: ICustomMarshaler.MarshalManagedToNative(Object)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Konwertuje danych zarządzanych do niezarządzanych danych."
  syntax:
    content: public IntPtr MarshalManagedToNative (object ManagedObj);
    parameters:
    - id: ManagedObj
      type: System.Object
      description: "Zarządzany obiekt ma zostać przekonwertowany."
    return:
      type: System.IntPtr
      description: "Wskaźnik do widoku COM zarządzanego obiektu."
  overload: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)
  id: MarshalNativeToManaged(System.IntPtr)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  langs:
  - csharp
  name: MarshalNativeToManaged(IntPtr)
  nameWithType: ICustomMarshaler.MarshalNativeToManaged(IntPtr)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Konwertuje niezarządzanych danych zarządzanych danych."
  syntax:
    content: public object MarshalNativeToManaged (IntPtr pNativeData);
    parameters:
    - id: pNativeData
      type: System.IntPtr
      description: "Wskaźnik do niezarządzanych danych w celu jej opakowania."
    return:
      type: System.Object
      description: "Obiekt, który reprezentuje zarządzanych widoku danych modelu COM."
  overload: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: CleanUpManagedData(Object)
  nameWithType: ICustomMarshaler.CleanUpManagedData(Object)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: CleanUpNativeData(IntPtr)
  nameWithType: ICustomMarshaler.CleanUpNativeData(IntPtr)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: GetNativeDataSize()
  nameWithType: ICustomMarshaler.GetNativeDataSize()
  fullName: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: MarshalManagedToNative(Object)
  nameWithType: ICustomMarshaler.MarshalManagedToNative(Object)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(Object)
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: MarshalNativeToManaged(IntPtr)
  nameWithType: ICustomMarshaler.MarshalNativeToManaged(IntPtr)
  fullName: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(IntPtr)
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: CleanUpManagedData
  nameWithType: ICustomMarshaler.CleanUpManagedData
- uid: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: CleanUpNativeData
  nameWithType: ICustomMarshaler.CleanUpNativeData
- uid: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: GetNativeDataSize
  nameWithType: ICustomMarshaler.GetNativeDataSize
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: MarshalManagedToNative
  nameWithType: ICustomMarshaler.MarshalManagedToNative
- uid: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged*
  parent: System.Runtime.InteropServices.ICustomMarshaler
  isExternal: false
  name: MarshalNativeToManaged
  nameWithType: ICustomMarshaler.MarshalNativeToManaged
