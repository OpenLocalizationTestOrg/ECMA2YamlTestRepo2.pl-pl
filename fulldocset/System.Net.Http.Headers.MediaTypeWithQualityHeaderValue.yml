### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  id: MediaTypeWithQualityHeaderValue
  children:
  - System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)
  - System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)
  - System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality
  - System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)
  langs:
  - csharp
  name: MediaTypeWithQualityHeaderValue
  nameWithType: MediaTypeWithQualityHeaderValue
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  type: Class
  summary: "Reprezentuje typ nośnika z współczynnik dodatkową jakością, używany w nagłówku Content-Type."
  remarks: "Klasa MediaTypeWithQualityHeaderValue zapewnia obsługę typ nośnika i jakości w nagłówku Content-Type, zgodnie z definicją w [RFC 2616](http://go.microsoft.com/fwlink/?LinkID=241642) przez grupę roboczą IETF.       Zezwalaj na czynniki jakości agenta użytkownika wskazać względną stopień preferencji dla danego typu nośnika w nagłówku Content-Type. Jakość używa skali od 0 do 1. Wartość domyślna to q =&1;.       Ten typ jest pochodną <xref:System.Net.Http.Headers.MediaTypeHeaderValue>.</xref:System.Net.Http.Headers.MediaTypeHeaderValue>"
  syntax:
    content: 'public sealed class MediaTypeWithQualityHeaderValue : System.Net.Http.Headers.MediaTypeHeaderValue, ICloneable'
  inheritance:
  - System.Object
  - System.Net.Http.Headers.MediaTypeHeaderValue
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Net.Http.Headers.MediaTypeHeaderValue.CharSet
  - System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
  - System.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  - System.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  - System.Net.Http.Headers.MediaTypeHeaderValue.ToString
  - System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  langs:
  - csharp
  name: MediaTypeWithQualityHeaderValue(String)
  nameWithType: MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String)
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot;> </xref> klasy."
  syntax:
    content: public MediaTypeWithQualityHeaderValue (string mediaType);
    parameters:
    - id: mediaType
      type: System.String
      description: "A <xref href=&quot;System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot;> </xref> reprezentowany jako ciąg można zainicjować nowego wystąpienia."
  overload: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  langs:
  - csharp
  name: MediaTypeWithQualityHeaderValue(String,Double)
  nameWithType: MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String,Double)
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String,Double)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot;> </xref> klasy."
  syntax:
    content: public MediaTypeWithQualityHeaderValue (string mediaType, double quality);
    parameters:
    - id: mediaType
      type: System.String
      description: "A <xref href=&quot;System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot;> </xref> reprezentowany jako ciąg można zainicjować nowego wystąpienia."
    - id: quality
      type: System.Double
      description: "Jakość skojarzone z tym wartość nagłówka."
  overload: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: MediaTypeWithQualityHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Konwertuje ciąg na <xref href=&quot;System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot;> </xref> wystąpienia."
  syntax:
    content: public static System.Net.Http.Headers.MediaTypeWithQualityHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "Ciąg, który reprezentuje typ nośnika z informacjami o wartości nagłówka jakości."
    return:
      type: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot;> </xref> wystąpienia."
  overload: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> odwołania."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>nie jest typem prawidłowy nośnik z informacjami o wartości nagłówka jakości."
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality
  id: Quality
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  langs:
  - csharp
  name: Quality
  nameWithType: MediaTypeWithQualityHeaderValue.Quality
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Pobrać lub ustawić wartość jakości <xref href=&quot;System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot;> </xref>."
  syntax:
    content: public Nullable<double> Quality { get; set; }
    return:
      type: System.Nullable{System.Double}
      description: "Wartość jakość <xref href=&quot;System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot;> </xref> obiektu."
  overload: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: MediaTypeWithQualityHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Tworzy nowy obiekt, który jest kopią bieżącego <xref href=&quot;System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot;> </xref> wystąpienia."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Kopię bieżącego wystąpienia."
  overload: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  langs:
  - csharp
  name: TryParse(String,MediaTypeWithQualityHeaderValue)
  nameWithType: MediaTypeWithQualityHeaderValue.TryParse(String,MediaTypeWithQualityHeaderValue)
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(String,MediaTypeWithQualityHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Określa, czy ciąg jest prawidłowy <xref href=&quot;System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot;> </xref> informacji."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.MediaTypeWithQualityHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "Ciąg do sprawdzania poprawności."
    - id: parsedValue
      type: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
      description: "<xref href=&quot;System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot;> </xref> Wersję ciągu."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.Headers.MediaTypeHeaderValue
  isExternal: false
  name: System.Net.Http.Headers.MediaTypeHeaderValue
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  isExternal: false
  name: MediaTypeWithQualityHeaderValue(String)
  nameWithType: MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String)
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  isExternal: false
  name: MediaTypeWithQualityHeaderValue(String,Double)
  nameWithType: MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String,Double)
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue(String,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: MediaTypeWithQualityHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: MediaTypeWithQualityHeaderValue
  nameWithType: MediaTypeWithQualityHeaderValue
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  isExternal: false
  name: Quality
  nameWithType: MediaTypeWithQualityHeaderValue.Quality
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: MediaTypeWithQualityHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  isExternal: false
  name: TryParse(String,MediaTypeWithQualityHeaderValue)
  nameWithType: MediaTypeWithQualityHeaderValue.TryParse(String,MediaTypeWithQualityHeaderValue)
  fullName: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(String,MediaTypeWithQualityHeaderValue)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor*
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  isExternal: false
  name: MediaTypeWithQualityHeaderValue
  nameWithType: MediaTypeWithQualityHeaderValue.MediaTypeWithQualityHeaderValue
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse*
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  isExternal: false
  name: Parse
  nameWithType: MediaTypeWithQualityHeaderValue.Parse
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality*
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  isExternal: false
  name: Quality
  nameWithType: MediaTypeWithQualityHeaderValue.Quality
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: MediaTypeWithQualityHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse*
  parent: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: MediaTypeWithQualityHeaderValue.TryParse
