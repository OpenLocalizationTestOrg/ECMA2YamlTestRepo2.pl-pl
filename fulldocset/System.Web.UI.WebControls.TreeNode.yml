### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNode
  id: TreeNode
  children:
  - System.Web.UI.WebControls.TreeNode.#ctor
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.Checked
  - System.Web.UI.WebControls.TreeNode.ChildNodes
  - System.Web.UI.WebControls.TreeNode.Clone
  - System.Web.UI.WebControls.TreeNode.Collapse
  - System.Web.UI.WebControls.TreeNode.CollapseAll
  - System.Web.UI.WebControls.TreeNode.DataBound
  - System.Web.UI.WebControls.TreeNode.DataItem
  - System.Web.UI.WebControls.TreeNode.DataPath
  - System.Web.UI.WebControls.TreeNode.Depth
  - System.Web.UI.WebControls.TreeNode.Expand
  - System.Web.UI.WebControls.TreeNode.ExpandAll
  - System.Web.UI.WebControls.TreeNode.Expanded
  - System.Web.UI.WebControls.TreeNode.ImageToolTip
  - System.Web.UI.WebControls.TreeNode.ImageUrl
  - System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  - System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNode.NavigateUrl
  - System.Web.UI.WebControls.TreeNode.Parent
  - System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  - System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeNode.SaveViewState
  - System.Web.UI.WebControls.TreeNode.Select
  - System.Web.UI.WebControls.TreeNode.SelectAction
  - System.Web.UI.WebControls.TreeNode.Selected
  - System.Web.UI.WebControls.TreeNode.ShowCheckBox
  - System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.TreeNode.Target
  - System.Web.UI.WebControls.TreeNode.Text
  - System.Web.UI.WebControls.TreeNode.ToggleExpandState
  - System.Web.UI.WebControls.TreeNode.ToolTip
  - System.Web.UI.WebControls.TreeNode.TrackViewState
  - System.Web.UI.WebControls.TreeNode.Value
  - System.Web.UI.WebControls.TreeNode.ValuePath
  langs:
  - csharp
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
  type: Class
  summary: "Reprezentuje węzeł w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "<xref:System.Web.UI.WebControls.TreeView>Kontroli składa się z węzłów.</xref:System.Web.UI.WebControls.TreeView> Każdy wpis w drzewie węzeł i jest reprezentowana przez obiekt TreeNode. Węzeł, który zawiera inne węzły jest nazywany *węzła nadrzędnego*. Węzeł, który jest zawarty w innym węźle jest nazywany *podrzędnym*. Węzeł, który nie ma podrzędnych węzłów jest nazywany *węzeł liścia*. Węzeł, który nie jest zawarty w innym węźle, ale jest elementem nadrzędnym dla wszystkich innych węzłów jest *węzła głównego*. Węzeł może być nadrzędną podrzędny, ale głównego i nadrzędnym, a węzłów liści wzajemnie się wykluczają. Kilka właściwości visual i behawioralnych węzłów zależą od tego, czy węzeł jest *głównego*, *nadrzędnej*, lub *liścia* węzła.       Mimo że typowe drzewa ma tylko jeden węzeł główny, <xref:System.Web.UI.WebControls.TreeView>formantu można dodawać wiele węzłów głównych do struktury drzewa.</xref:System.Web.UI.WebControls.TreeView> Jest to przydatne, jeśli chcesz wyświetlić listy elementów bez wyświetlania jednego głównego węzła, tak jak listę kategorii produktów.       Węzeł głównie przechowuje dane w dwóch właściwości <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwości i <xref:System.Web.UI.WebControls.TreeNode.Value%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> Wartość <xref:System.Web.UI.WebControls.TreeNode.Text%2A>właściwość jest wyświetlana w <xref:System.Web.UI.WebControls.TreeView>kontroli i <xref:System.Web.UI.WebControls.TreeNode.Value%2A>właściwość jest używana do przechowywania wszelkich dodatkowych danych dotyczących tego węzła, takich jak dane używane na potrzeby obsługi zdarzenia odświeżania strony.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> Węzeł przechowuje także ścieżki z węzła do węzła głównego w <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>Właściwość wskazuje pozycję węzła węzeł główny.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>      > [!NOTE] > Węzłów na tym samym poziomie musi mieć unikatową wartość <xref:System.Web.UI.WebControls.TreeNode.Value%2A>właściwości; <xref:System.Web.UI.WebControls.TreeView>formantu nie można rozróżnić różnych węzłów na tym samym poziomie, które mają taką samą wartość.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> W tym scenariuszu, gdy użytkownik kliknie węzeł, który ma zduplikowaną wartość węzła który znajduje się w <xref:System.Web.UI.WebControls.TreeView>jest wybrana kontrolka.</xref:System.Web.UI.WebControls.TreeView>       Obiekt TreeNode składają się następujące cztery elementów interfejsu użytkownika (UI), które mogą zostać dostosowany lub ukryte:-ikony wskaźnika węzeł Rozszerzenia używane do wyświetlania, czy węzeł jest rozwinięty, zwinięte lub nie można rozwijać.      -Opcjonalne pola wyboru skojarzone z węzłem.      -Węzeł opcjonalny obraz.      -Tekstu węzła.       Można określić niestandardowego obrazu dla wskaźników rozwijania zwijanej i nie można rozwijać węzła ustawiając <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>i <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>właściwości <xref:System.Web.UI.WebControls.TreeView>klasy</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> Nawet można ukryć ikony wskaźnika węzeł rozszerzenia całkowicie przez ustawienie <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>Właściwość <xref:System.Web.UI.WebControls.TreeView>klasy do `false`.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>       Aby wyświetlić okno wyboru obok węzła, ustaw <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>Właściwość <xref:System.Web.UI.WebControls.TreeView>klasy.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Gdy <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>wartość właściwości jest równa wartości innych niż `TreeNodeType.Node`, są wyświetlane pola wyboru obok typu określonego węzła.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Pole wyboru węzła poszczególnych selektywnie można zastąpić przez ustawienie węzła <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> Gdy pole wyboru jest wyświetlane, użyj <xref:System.Web.UI.WebControls.TreeNode.Checked%2A>Właściwości w celu określenia, czy pole wyboru jest zaznaczone.</xref:System.Web.UI.WebControls.TreeNode.Checked%2A>       Obraz można wyświetlić w węźle przez ustawienie <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> Ten obraz jest wyświetlany obok tekstu węzła.       Tekst węzła w <xref:System.Web.UI.WebControls.TreeView>formant może być w jednym z dwóch trybów: trybu wyboru lub nawigacji.</xref:System.Web.UI.WebControls.TreeView> Domyślnie węzeł jest w trybie wyboru. Aby ustawić węzła trybu nawigacji, ustaw węzła <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>Właściwości na wartość inną niż ciąg pusty (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> Aby przełączyć węzła do trybu wyboru, ustaw węzła <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>Właściwości na pusty ciąg.</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > Niektóre przeglądarki ma ograniczenie, które mogą wpłynąć na wydajność <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Na przykład program Microsoft Internet Explorer 6.0 ma limit znaków adresu URL 2067 znaki, które go zapisuje. Jeśli liczba znaków w adresie URL węzła jest większy niż ten numer, rozwinięcie tego węzła zakończy się niepowodzeniem i nie jest wyjątek.       Domyślnie, klikając węzeł, który jest w trybie wyboru ogłoszeń strony serwera i zgłasza <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>zdarzeń.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Opcjonalnie można określić różne zdarzenia warunków zgłaszania przez ustawienie węzła `SelectAction` właściwości. Aby uzyskać więcej informacji zobacz <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> Aby określić, który węzeł został kliknięty w trybie wyboru, użyj <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>Właściwość <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>       Gdy węzeł jest w trybie nawigacji, wszystkie zdarzenia wyboru są wyłączone dla tego węzła. Kliknięcie węzła w trybie nawigacji kieruje użytkownika pod określony adres URL. Opcjonalnie możesz ustawić <xref:System.Web.UI.WebControls.TreeNode.Target%2A>Właściwości w celu określenia okna lub ramki, w której do wyświetlania połączonej zawartości.</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       Klasa TreeNode zawiera kilka właściwości, które są używane do przechowywania stanu węzła. Użyj <xref:System.Web.UI.WebControls.TreeNode.Selected%2A>Właściwości w celu określenia, czy węzeł jest zaznaczone.</xref:System.Web.UI.WebControls.TreeNode.Selected%2A> Aby określić, czy węzeł jest rozwinięty, użyj <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A>Właściwość jest używana do określenia, czy węzeł jest powiązany z danymi.</xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> Gdy węzeł jest powiązany z danymi, uzyskiwania dostępu do podstawowego elementu danych, za pomocą <xref:System.Web.UI.WebControls.TreeNode.DataItem%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.DataItem%2A>       Ta klasa dostarcza kilka właściwości, które ułatwiają ustalenie Pozycja węzła względem innych węzłów w drzewie. Użyj <xref:System.Web.UI.WebControls.TreeNode.Depth%2A>Właściwości w celu określenia głębokości węzła.</xref:System.Web.UI.WebControls.TreeNode.Depth%2A> Uzyskaniem rozdzielanej listy węzłów z bieżącego węzła do węzła głównego przy użyciu <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Aby określić węzeł nadrzędny węzła, użyj <xref:System.Web.UI.WebControls.TreeNode.Parent%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.Parent%2A> Węzły podrzędne są dostępne przy użyciu <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>kolekcji.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>       Czasami nie jest praktyczne statycznie wstępnie struktury drzewa ze względu na rozmiar danych lub niestandardowych zawartość, która jest zależna od danych wejściowych użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView>Sterowanie obsługuje populacji dynamiczne węzła.</xref:System.Web.UI.WebControls.TreeView> Węzeł mogą być umieszczane w czasie wykonywania, gdy jest rozwinięta. Należy pamiętać, można uzyskać nieoczekiwane zachowanie jeśli będą się powtarzać asynchronicznie utworzony węzłów. Na przykład użycie wątku w tle proces roboczy do asynchronicznego wypełniania węzłów, węzeł drzewa może nie można wypełnić natychmiast że formant będzie kontynuowane z resztą cyklu życia strony. Strony Tworzenie opóźnionych węzłów może spowodować problemy, gdy stan widoku formantu jest załadowane, ale nie zostanie całkowicie wypełnione węzła drzewa.  Uzyskać więcej informacji dotyczących populacji węzła dynamicznej, zobacz <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>       Aby uzyskać listę początkowe wartości właściwości dla wystąpienia elementu TreeNode, zobacz <xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A>konstruktora.</xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A>"
  example:
  - "The following code example demonstrates how to set up the frames for the next code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_106_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_106_1.aspx)]  \n  \n The following code example demonstrates how to use declarative syntax to create TreeNode objects in the <xref:System.Web.UI.WebControls.TreeView> control. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_106_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_106_2.aspx)]"
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true, "ChildNodes")]

      public class TreeNode : ICloneable, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> klasy bez tekstu lub wartości."
  remarks: "Użyj tego konstruktora zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeNode>przy użyciu wartości domyślnych.</xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] >, Jeśli ten konstruktor jest używany, wszystkie właściwości w <xref:System.Web.UI.WebControls.TreeNode>obiektu są ustawione na wartości domyślne.</xref:System.Web.UI.WebControls.TreeNode> Pamiętaj ustawić właściwości, w razie potrzeby, po utworzeniu obiektu."
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_241_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_241_1.aspx)]"
  syntax:
    content: public TreeNode ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> przy użyciu określonego tekstu."
  remarks: "Użyj tego konstruktora zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeNode>przy użyciu tekstu określonego przez `text` parametru.</xref:System.Web.UI.WebControls.TreeNode>       W poniższej tabeli przedstawiono wartości początkowej właściwości dla wystąpienia <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TreeNode.Text%2A>| Wartość `text` parametru. |</xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_234_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_234_1.aspx)]"
  syntax:
    content: public TreeNode (string text);
    parameters:
    - id: text
      type: System.String
      description: "Tekst, który jest wyświetlany w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> kontroli dla węzła."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String)
  nameWithType: TreeNode.TreeNode(String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> przy użyciu określonego tekstu i wartość."
  remarks: "Użyj tego konstruktora zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeNode>przy użyciu tekstu i wartość określoną przez `text` i `value` parametry, odpowiednio.</xref:System.Web.UI.WebControls.TreeNode>       W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TreeNode.Text%2A>| Wartość `text` parametru. |   | <xref:System.Web.UI.WebControls.TreeNode.Value%2A>| Wartość `value` parametru. |</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_51_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_51_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value);
    parameters:
    - id: text
      type: System.String
      description: "Tekst, który jest wyświetlany w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> kontroli dla węzła."
    - id: value
      type: System.String
      description: "Dodatkowe dane skojarzone z węzłem, takich jak dane używane na potrzeby obsługi zdarzenia odświeżania strony."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  id: '#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(TreeView,Boolean)
  nameWithType: TreeNode.TreeNode(TreeView,Boolean)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(TreeView,Boolean)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> przy użyciu określonego właściciela."
  syntax:
    content: protected TreeNode (System.Web.UI.WebControls.TreeView owner, bool isRoot);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.TreeView
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> Który będzie zawierał nowy <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>."
    - id: isRoot
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> jest węzłem głównym; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> przy użyciu określonego tekstu wartości i adres URL."
  remarks: "Użyj tego konstruktora zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeNode>przy użyciu tekstu, wartość i adres URL określony przez `text`, `value`, i `imageUrl` parametry, odpowiednio.</xref:System.Web.UI.WebControls.TreeNode>       W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TreeNode.Text%2A>| Wartość `text` parametru. |   | <xref:System.Web.UI.WebControls.TreeNode.Value%2A>| Wartość `value` parametru. |   | <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>| Wartość `imageUrl` parametru. |</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/3795fa87-8785-4a78-ab89-_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/3795fa87-8785-4a78-ab89-_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value, string imageUrl);
    parameters:
    - id: text
      type: System.String
      description: "Tekst, który jest wyświetlany w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> kontroli dla węzła."
    - id: value
      type: System.String
      description: "Dodatkowe dane skojarzone z węzłem, takich jak dane używane na potrzeby obsługi zdarzenia odświeżania strony."
    - id: imageUrl
      type: System.String
      description: "Adres URL obrazu, który jest wyświetlany obok węzła."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String,String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> przy użyciu określonego tekstu, wartość, adres URL obrazu, adres URL nawigacji i obiekt docelowy."
  remarks: "Użyj tego konstruktora zainicjować nowe wystąpienie klasy <xref:System.Web.UI.WebControls.TreeNode>przy użyciu adresów URL tekstu, wartość, obrazu i nawigacji i wyświetlić docelowy określony przez `text`, `value`, `imageUrl`, `navigateUrl`, i `target` parametry, odpowiednio.</xref:System.Web.UI.WebControls.TreeNode>       W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>      | Właściwość | Nieprawidłowa wartość |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TreeNode.Text%2A>| Wartość `text` parametru. |   | <xref:System.Web.UI.WebControls.TreeNode.Value%2A>| Wartość `value` parametru. |   | <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>| Wartość `imageUrl` parametru. |   | <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>| Wartość `navigateUrl` parametru. |   | <xref:System.Web.UI.WebControls.TreeNode.Target%2A>| Wartość `target` parametru. |</xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/731d6a74-0b18-423b-841c-_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/731d6a74-0b18-423b-841c-_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value, string imageUrl, string navigateUrl, string target);
    parameters:
    - id: text
      type: System.String
      description: "Tekst, który jest wyświetlany w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> kontroli dla węzła."
    - id: value
      type: System.String
      description: "Dodatkowe dane skojarzone z węzłem, takich jak dane używane na potrzeby obsługi zdarzenia odświeżania strony."
    - id: imageUrl
      type: System.String
      description: "Adres URL obrazu, który jest wyświetlany obok węzła."
    - id: navigateUrl
      type: System.String
      description: "Adres URL do odesłania do, gdy węzeł zostanie kliknięty."
    - id: target
      type: System.String
      description: "Docelowego okna lub ramki, w którym można wyświetlić zawartości strony sieci Web połączona, gdy węzeł zostanie kliknięty."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Checked
  id: Checked
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Web.UI.WebControls.TreeNode.Checked
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy zaznaczone jest pole wyboru węzła."
  remarks: "Gdy węzeł Wyświetla pole wyboru, zostanie zmieniona zaznaczona właściwość często służy do określania, czy pole wyboru jest zaznaczone. Zaznaczenie pola wyboru skojarzone z węzłem węzeł jest automatycznie dodawany do <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>Kolekcja <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> Właściwości Checked można również określić, czy pole wyboru jest zaznaczone.      > [!NOTE] > Jest bardziej popularne, aby określić węzły, które w <xref:System.Web.UI.WebControls.TreeView>formant ma swoich pól wyboru wybranych przez iteracja <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>kolekcji.</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> </xref:System.Web.UI.WebControls.TreeView>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the Checked property to specify whether a node's check box is selected. It initializes the check boxes of nodes with a depth of one to a selected state. For this example to work correctly, you must copy the sample XML data below to a file named Newsgroup.xml.  \n  \n [!code-cs[TreeNodeChecked#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_280_1.aspx)]\n [!code-vb[TreeNodeChecked#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_280_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<category name=\"news.microsoft.com\">  \n    <group name=\"microsoft.public.dotnet.framework.aspnet\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.mobile\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.webservices\"/>  \n</category>  \n```"
  syntax:
    content: public bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zaznaczono pole wyboru węzła; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.Checked*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes
  id: ChildNodes
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
  fullName: System.Web.UI.WebControls.TreeNode.ChildNodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> kolekcji, która zawiera węzły podrzędne pierwszego stopnia bieżącego węzła."
  remarks: "Użyj właściwości ChildNodes, aby uzyskać <xref:System.Web.UI.WebControls.TreeNodeCollection>kolekcji, która zawiera węzły podrzędne pierwszego stopnia bieżącego węzła.</xref:System.Web.UI.WebControls.TreeNodeCollection> Ta kolekcja to powszechnie używane Iterowanie wszystkich węzłów podrzędnych pierwszego stopnia lub uzyskać dostępu do określonych pierwszego stopnia podrzędnym bieżącego węzła.       Właściwość ChildNodes mogą służyć do programowego zarządzania węzłów podrzędnych pierwszego stopnia bieżącego węzła. Można dodać, wstawianie, Usuń i pobrać <xref:System.Web.UI.WebControls.TreeNode>obiektów z kolekcji.</xref:System.Web.UI.WebControls.TreeNode> Wszystkie aktualizacje w kolekcji automatycznie zostaną odzwierciedlone w <xref:System.Web.UI.WebControls.TreeView>kontrolować po następnym odświeżeniu strony.</xref:System.Web.UI.WebControls.TreeView>       Aby uzyskać dostęp do węzłów podrzędnych dalsze niżej na drzewie, użyj właściwości ChildNodes węzła podrzędnego następnego poziomu przechodzenia z poziomu węzła."
  example:
  - "The following code example demonstrates how to use the ChildNodes property to traverse the tree.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_95_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_95_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> zawiera węzły podrzędne pierwszego stopnia, bieżącego węzła."
  overload: System.Web.UI.WebControls.TreeNode.ChildNodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Clone
  id: Clone
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tworzy nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> klasy przy użyciu właściwości bieżącego <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> wystąpienia."
  remarks: "Jest to metoda pomocnika obsługującą <xref:System.ICloneable>interfejs implementowany przez <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.ICloneable>"
  syntax:
    content: protected virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> z właściwości bieżącego <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> wystąpienia."
  overload: System.Web.UI.WebControls.TreeNode.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Collapse
  id: Collapse
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Web.UI.WebControls.TreeNode.Collapse()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zwija bieżącego węzła drzewa."
  remarks: "Metoda Zwiń umożliwia wygodne należy Zwiń bieżącego węzła.      > [!NOTE] > Alternatywnie, można również ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>właściwości `false`.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Zwiń bieżący węzeł i wszystkie węzły podrzędne, należy rozważyć użycie <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>metody.</xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>       <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>zostanie zwijanie wszystkich węzłów w drzewie całego.</xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>"
  example:
  - "The following code example demonstrates how to use the Collapse method to programmatically collapse a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpand#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_20_1.aspx)]\n [!code-vb[TreeNodeExpand#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_20_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Collapse ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Collapse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll
  id: CollapseAll
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: CollapseAll()
  nameWithType: TreeNode.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeNode.CollapseAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zwija bieżący węzeł i wszystkich jego węzłów podrzędnych."
  remarks: "Metoda Zwiń wszystko umożliwia wygodne Zwiń bieżącego węzła i wszystkich jego węzłów podrzędnych.      > [!NOTE] > Alternatywnie, można również ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>właściwość bieżącego węzła i wszystkich jego węzłów podrzędnych można `false`.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Zwiń bieżący węzeł, należy rozważyć użycie <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>metody.</xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>       <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>zostanie zwijanie wszystkich węzłów w drzewie całego.</xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>"
  example:
  - "The following code example demonstrates how to use the CollapseAll method to programmatically collapse a node and all its child nodes in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_121_1.aspx)]\n [!code-vb[TreeNodeExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_121_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void CollapseAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.CollapseAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataBound
  id: DataBound
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataBound
  nameWithType: TreeNode.DataBound
  fullName: System.Web.UI.WebControls.TreeNode.DataBound
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera wartość wskazującą, czy węzeł został utworzony za pośrednictwem powiązania danych."
  remarks: "Właściwość z danymi jest używana do programowane wyznaczanie, czy węzeł został utworzony za pośrednictwem powiązania danych. Ponieważ nie można łączyć zawartość dynamiczną i statyczną na tym samym węźle, ta właściwość jest często stosowany podczas wypełniania <xref:System.Web.UI.WebControls.TreeView>kontroli dynamicznie, aby określić, czy węzeł zawiera zawartość statyczna.</xref:System.Web.UI.WebControls.TreeView>       Wartość tej właściwości jest przechowywany w stanie widoku."
  syntax:
    content: public bool DataBound { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli węzeł został utworzony za pośrednictwem powiązania danych; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.DataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataItem
  nameWithType: TreeNode.DataItem
  fullName: System.Web.UI.WebControls.TreeNode.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera element danych jest powiązane z formantem."
  remarks: "Gdy <xref:System.Web.UI.WebControls.TreeView>kontrolka jest powiązana ze źródłem danych, takich jak <xref:System.Web.UI.WebControls.XmlDataSource>obiektu, ta właściwość jest ustawiona na element danych, który jest powiązany z tym określonego węzła.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.TreeView> Ta właściwość jest często używana do wartości elementu danych.      > [!NOTE] > Ta właściwość jest dostępna tylko wtedy, gdy podczas wiązania z danymi."
  syntax:
    content: public object DataItem { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; reprezentujący element danych jest powiązane z formantem. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, co oznacza, że węzeł nie jest powiązany z dowolnego elementu danych."
  overload: System.Web.UI.WebControls.TreeNode.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataPath
  id: DataPath
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataPath
  nameWithType: TreeNode.DataPath
  fullName: System.Web.UI.WebControls.TreeNode.DataPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera ścieżkę do danych związane z węzłem."
  remarks: "Wartość właściwości ścieżki danych jest często używana przy wywoływaniu <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=fullName>Metoda podać ścieżkę do danych powiązana z bieżącego węzła.</xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=fullName> Ta metoda zwraca <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=fullName>obiekt zawierający dane w określonej ścieżce.</xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=fullName>       Wartość tej właściwości jest przechowywany w stanie widoku."
  syntax:
    content: public string DataPath { get; }
    return:
      type: System.String
      description: "Ścieżka do danych powiązane w węźle. Ta wartość pochodzi z danymi hierarchicznymi kontroli źródła, do którego <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantem. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNode.DataPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Depth
  id: Depth
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Depth
  nameWithType: TreeNode.Depth
  fullName: System.Web.UI.WebControls.TreeNode.Depth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera głębokości węzła."
  remarks: "Właściwość głębokości służy do określania głębokości węzła. Głębokość reprezentuje liczbę poziomów hierarchii między węzłem a węzła głównego. Na przykład węzła głównego ma głębokość o wartości zero. Element podrzędny węzła głównego ma głębokość jedno i tak dalej."
  example:
  - "The following code example demonstrates how use the Depth property to determine the depth of a node. It initializes all nodes with a depth of one to a selected state. For this example to work correctly, you must copy the sample XML data below to a file named Newsgroup.xml.  \n  \n [!code-cs[TreeNodeChecked#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1355_1.aspx)]\n [!code-vb[TreeNodeChecked#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1355_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<category name=\"news.microsoft.com\">  \n    <group name=\"microsoft.public.dotnet.framework.aspnet\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.mobile\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.webservices\"/>  \n</category>  \n```"
  syntax:
    content: public int Depth { get; }
    return:
      type: System.Int32
      description: "Głębokość węzła."
  overload: System.Web.UI.WebControls.TreeNode.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Expand
  id: Expand
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Web.UI.WebControls.TreeNode.Expand()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Rozwija bieżącego węzła drzewa."
  remarks: "Metoda rozwiń umożliwia wygodne Rozwinięcie bieżącego węzła.      > [!NOTE] > Alternatywnie, można również ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>właściwości `true`.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Aby rozszerzyć bieżącego węzła i jego węzły podrzędne, należy rozważyć użycie <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>metody.</xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>       <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>rozwinie wszystkich węzłów w drzewie całego.</xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the Expand method to programmatically expand a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpand#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_91_1.aspx)]\n [!code-vb[TreeNodeExpand#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_91_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Expand ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Expand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll
  id: ExpandAll
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeNode.ExpandAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Rozwija bieżącego węzła i wszystkich jego węzłów podrzędnych."
  remarks: "Metoda Rozwiń wszystko umożliwia wygodne rozwiń bieżącego węzła i wszystkich jego węzłów podrzędnych.      > [!NOTE] > Alternatywnie, można również ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>właściwość bieżącego węzła i wszystkich jego węzłów podrzędnych można `true`.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Aby rozszerzyć bieżącego węzła, należy rozważyć użycie <xref:System.Web.UI.WebControls.TreeNode.Expand%2A>metody.</xref:System.Web.UI.WebControls.TreeNode.Expand%2A>       <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>rozwinie wszystkich węzłów w drzewie całego.</xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>"
  example:
  - "The following code example demonstrates how to use the ExpandAll method to programmatically expand a node and all its child nodes in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_213_1.aspx)]\n [!code-vb[TreeNodeExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_213_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void ExpandAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.ExpandAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Expanded
  id: Expanded
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Expanded
  nameWithType: TreeNode.Expanded
  fullName: System.Web.UI.WebControls.TreeNode.Expanded
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy węzeł jest rozwinięty."
  remarks: "Aby określić lub określić, czy węzeł jest rozwinięty, należy użyć właściwości rozwinięte.       Można zwijać i rozwijać węzeł przez wywołanie metody <xref:System.Web.UI.WebControls.TreeNode.Expand%2A>i <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>metod, odpowiednio.</xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> </xref:System.Web.UI.WebControls.TreeNode.Expand%2A> Można również rozwinąć i zwinąć węzeł i wszystkich jego węzłów podrzędnych przez wywołanie metody <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>i <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>metod, odpowiednio.</xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> </xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>       Ponieważ właściwość rozwinięty jest właściwością trzy stanowy, poniższy fragment kodu C# powoduje błąd kompilacji: ```   protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)   {   if (TreeView1.Nodes[0].Expanded)   {   // some work here    }   }   ``` podczas VB.Net niejawnie rzutuje `Boolean` do wartości `NullableBoolean`, C# nie obsługuje. W związku z tym jest najlepszym rozwiązaniem jest jawnie Sprawdź stan właściwości. W poniższych przykładach kodu w języku Visual Basic i C# testu jawnie wartości właściwości rozwinięte.       Poniższy przykład kodu języka Visual Basic testy jawnie wartości właściwości rozwinięte. W tym przykładzie testów, jeśli ustawiono właściwość rozwinięty `True`; w związku z tym `Nothing` i `False` przechodzić `If` instrukcji.      ```   If TreeView1.Nodes(0).Expanded = True Then &quot;some work hereEnd IF   ```W tym przykładzie kodu C# testy jawnie wartości właściwości rozwinięte. W tym przykładzie testów, jeśli ustawiono właściwość rozwinięty `True`; w związku z tym `Null` i `False` przechodzić `If` instrukcji.      ```   if( TreeView1.Nodes[0].Expanded == true ) { //some work here}   ```"
  example:
  - "The following code example demonstrates how to use the Expanded property to programmatically expand a node. It initializes all nodes with a depth of one to an expanded state. Notice that when the root node is expanded, its child nodes are already expanded. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-vb[TreeNodeExpanded#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_746_1.aspx)]\n [!code-cs[TreeNodeExpanded#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_746_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> Expanded { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli węzeł jest rozwinięty, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Jeśli węzeł nie jest rozwinięty, lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.Expanded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip
  id: ImageToolTip
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia tekst etykietki narzędzia obrazu wyświetlanego obok węzła."
  remarks: "Gdy obraz jest wyświetlany obok węzła (gdy <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>ustawiono właściwość), umożliwia określenie etykietka narzędzia wyświetlana, gdy użytkownik umieszcza wskaźnik myszy nad obrazem właściwość ImageToolTip.</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> Określony tekst zawiera urządzenia ułatwianiem opis obrazu, który może służyć do udostępnić formantu.       Wartość tej właściwości jest przechowywany w stanie widoku.       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ImageToolTip property to specify the ToolTip text for an image displayed next to a node. For this example to work correctly, you must provide your own images.  \n  \n [!code-vb[TreeNodeImageToolTip#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_911_1.aspx)]\n [!code-cs[TreeNodeImageToolTip#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_911_1.aspx)]"
  syntax:
    content: public string ImageToolTip { get; set; }
    return:
      type: System.String
      description: "Tekst etykietki narzędzia obrazu wyświetlanego obok węzła. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.UI.WebControls.TreeNode.ImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNode.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia adres URL obrazu, który jest wyświetlany obok węzła."
  remarks: "Umożliwia określenie niestandardowego obrazu dla bieżącego węzła w z właściwością ImageUrl <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> Ten obraz jest wyświetlany obok węzła i można w dowolnym formacie pliku (jpg, GIF, bmp i tak dalej), tak długo, jak przeglądarka klienta obsługuje tego formatu.       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the ImageUrl property to provide a custom image for a node. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeViewTreeNodeDataBound#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1020_1.aspx)]\n [!code-vb[TreeViewTreeNodeDataBound#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1020_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public string ImageUrl { get; set; }
    return:
      type: System.String
      description: "Adres URL niestandardowego obrazu, który jest wyświetlany obok węzła. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.UI.WebControls.TreeNode.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera wartość wskazującą, czy węzeł jest zapisywanie zmian stanu widoku."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli formant jest oznaczony do zapisania stanu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: TreeNode.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ładuje wcześniej zapisany widok stanu węzła."
  remarks: "LoadViewState to metoda pomocnika używana do załadowania wcześniej zapisany widok stanu węzła"
  syntax:
    content: protected virtual void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>Reprezentujący stan węzła.</xref:System.Object>"
  overload: System.Web.UI.WebControls.TreeNode.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNode.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia adres URL nawigacji po kliknięciu węzła."
  remarks: "Tekst węzła może być w jednym z dwóch trybów: trybu wyboru lub nawigacji. Domyślnie węzeł jest w trybie wyboru. W celu uruchomienia trybu nawigacji węzła, należy ustawić właściwość NavigateUrl węzła na wartość inną niż ciąg pusty.       Gdy węzeł jest w trybie nawigacji, wszystkie zdarzenia wyboru są wyłączone dla tego węzła. Kliknięcie węzła w trybie nawigacji użytkownik łączy się z określonym adresem URL. Opcjonalnie możesz ustawić <xref:System.Web.UI.WebControls.TreeNode.Target%2A>Właściwości w celu określenia okna lub ramki, w której do wyświetlania połączonej zawartości.</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to set up the frames for the next code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1054_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1054_1.aspx)]  \n  \n The following code example demonstrates how to use the NavigateUrl property to specify the URL to link to when the node is clicked. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1054_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1054_2.aspx)]"
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "Adres URL nawigacji po kliknięciu węzła. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.UI.WebControls.TreeNode.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Parent
  id: Parent
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Web.UI.WebControls.TreeNode.Parent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera węzła nadrzędnego bieżącego węzła."
  remarks: "Zwraca właściwości nadrzędnej <xref:System.Web.UI.WebControls.TreeNode>obiekt, który reprezentuje węzła nadrzędnego bieżącego węzła.</xref:System.Web.UI.WebControls.TreeNode> To powszechnie używane, aby określić węzeł nadrzędny lub uzyskać dostęp do właściwości węzła nadrzędnego.      > [!NOTE] > Węzła głównego nie ma węzła nadrzędnego.       Aby uzyskać dostęp do węzłów podrzędnych w bieżącym węźle, należy użyć <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>"
  example:
  - "The following code example demonstrates how to use the Parent property to access the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of the current node's parent node.  \n  \n [!code-vb[TreeNodeParent#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_132_1.aspx)]\n [!code-cs[TreeNodeParent#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_132_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode Parent { get; }
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> reprezentujący węzła nadrzędnego bieżącego węzła."
  overload: System.Web.UI.WebControls.TreeNode.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  id: PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy węzeł jest wypełniana dynamicznie."
  remarks: "Czasami nie jest praktyczne statycznie wstępnie struktury drzewa ze względu na rozmiar danych lub niestandardowych zawartość, która jest zależna od danych wejściowych użytkownika. W związku z tym <xref:System.Web.UI.WebControls.TreeView>Sterowanie obsługuje populacji dynamiczne węzła.</xref:System.Web.UI.WebControls.TreeView> Jeśli jest równa właściwości PopulateOnDemand węzła `true`, ten węzeł jest wypełniana w czasie wykonywania za pośrednictwem zdarzenia odświeżania strony, gdy węzeł jest rozwinięty. Aby wypełnić węzła dynamicznie, metody obsługi zdarzeń, która wypełnia węzeł musi być zdefiniowana dla <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>zdarzeń.</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>       Obsługiwane przeglądarki można również korzystać z populacji węzła po stronie klienta. Po włączeniu umożliwia to <xref:System.Web.UI.WebControls.TreeView>formantu dynamicznie wypełnienia węzła na kliencie, gdy ten węzeł jest rozwinięty, co zapobiega konieczności post do serwera.</xref:System.Web.UI.WebControls.TreeView> Aby uzyskać więcej informacji dotyczących populacji węzła po stronie klienta zobacz <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the PopulateOnDemand property to indicate that a node is populated dynamically.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_774_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_774_1.aspx)]"
  syntax:
    content: public bool PopulateOnDemand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wypełnić węzeł dynamicznie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.PopulateOnDemand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  id: RenderPostText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: RenderPostText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPostText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPostText(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Umożliwia deweloperom kontroli dodać dodatkowe renderowania do tego węzła."
  remarks: "Ta metoda może zostać przesłonięta przez deweloperów formantu można dodać dodatkowe renderowania po węzeł jest renderowany."
  syntax:
    content: protected virtual void RenderPostText (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Reprezentujący strumienia wyjściowego używana podczas zapisu zawartości strony sieci Web."
  overload: System.Web.UI.WebControls.TreeNode.RenderPostText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  id: RenderPreText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: RenderPreText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPreText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPreText(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Umożliwia deweloperom kontroli dodać dodatkowe renderowania do tego węzła."
  remarks: "Ta metoda może zostać przesłonięta przez deweloperów formantu można dodać dodatkowe renderowania, przed wyświetleniem tego węzła."
  syntax:
    content: protected virtual void RenderPreText (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Reprezentujący strumienia wyjściowego używana podczas zapisu zawartości strony sieci Web."
  overload: System.Web.UI.WebControls.TreeNode.RenderPreText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: TreeNode.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zapisuje bieżący stan widoku węzła."
  remarks: "Metoda SaveViewState jest wywoływany przez węzeł, aby zapisać jej stan metody pomocnika."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>Zawierającego zapisany stan węzła.</xref:System.Object>"
  overload: System.Web.UI.WebControls.TreeNode.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Select
  id: Select
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Select()
  nameWithType: TreeNode.Select()
  fullName: System.Web.UI.WebControls.TreeNode.Select()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Wybiera bieżącego węzła w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Umożliwia wybranie bieżącego węzła w metodzie Select <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView>       **Uwaga** Alternatywnie, można wybrać bieżącego węzła ustawiając <xref:System.Web.UI.WebControls.TreeNode.Selected%2A>właściwości `true`.</xref:System.Web.UI.WebControls.TreeNode.Selected%2A>"
  example:
  - "The following code example demonstrates how to use the Select method to select a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeSelected2#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_189_1.aspx)]\n [!code-cs[TreeNodeSelected2#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_189_1.aspx)]"
  syntax:
    content: public void Select ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.SelectAction
  id: SelectAction
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: SelectAction
  nameWithType: TreeNode.SelectAction
  fullName: System.Web.UI.WebControls.TreeNode.SelectAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia zdarzenie lub zdarzenia, aby wywołać po wybraniu węzła."
  remarks: "Tekst węzła w <xref:System.Web.UI.WebControls.TreeView>formant może być w jednym z dwóch trybów: trybu wyboru lub nawigacji.</xref:System.Web.UI.WebControls.TreeView> Domyślnie węzeł jest w trybie wyboru. Aby ustawić węzła trybu nawigacji, ustaw węzła <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>Właściwości na wartość inną niż ciąg pusty (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> Aby przełączyć węzła do trybu wyboru, ustaw węzła <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>Właściwości na pusty ciąg.</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > Węzeł jest w trybie nawigacji, wybór zdarzenia są wyłączone dla tego węzła. Klikając węzeł kieruje użytkownika do określonego adresu URL, zamiast zamieszczając strony do serwera i wywoływanie zdarzeń.       Gdy węzeł jest w trybie wyboru, użyj właściwości SelectAction, aby określić, które zdarzenie lub zdarzenia wywoływane po wybraniu węzła. W poniższej tabeli wymieniono dostępne opcje.      | Operacja wyboru | Opis elementu |   |----------------------|-----------------|   | `TreeNodeSelectAction.Expand`| Przełącza węzeł między rozwinięty i zwinięty. Zgłasza zdarzenie <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>lub zdarzenia <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>. |   | `TreeNodeSelectAction.None`| Zgłasza brak zdarzeń po wybraniu węzła. |   | `TreeNodeSelectAction.Select`| Zgłasza zdarzenie <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>Po wybraniu węzła. |   | `TreeNodeSelectAction.SelectExpand`| Zgłasza zarówno <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>i <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>zdarzeń po wybraniu węzła.</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Węzły tylko są rozwinięte, nigdy nie zwinięte. |      > [!NOTE] > <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>Właściwości nie są odtwarzane dla węzła jego właściwość SelectAction `TreeNodeSelectAction.None`.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1227_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1227_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeNodeSelectAction
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.TreeNodeSelectAction&quot;> </xref> wartości. Wartość domyślna to <xref uid=&quot;langword_csharp_TreeNodeSelectAction.Select&quot; name=&quot;TreeNodeSelectAction.Select&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.SelectAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Selected
  id: Selected
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Selected
  nameWithType: TreeNode.Selected
  fullName: System.Web.UI.WebControls.TreeNode.Selected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy węzeł jest zaznaczone."
  remarks: "Użyj właściwości wybrane umożliwiają określenie lub określić, czy węzeł jest zaznaczone.      > [!NOTE] > Mimo, że właściwość może służyć do określenia, czy węzeł jest zaznaczone, jest bardziej popularne, aby użyć <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>       Można wybrać tylko jeden węzeł w danym momencie <xref:System.Web.UI.WebControls.TreeView>sterować przy użyciu tej właściwości.</xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > Alternatywnie, można wybrać węzła przy użyciu <xref:System.Web.UI.WebControls.TreeNode.Select%2A>metody.</xref:System.Web.UI.WebControls.TreeNode.Select%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the Selected property to select a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeSelected2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_559_1.aspx)]\n [!code-cs[TreeNodeSelected2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_559_1.aspx)]"
  syntax:
    content: public bool Selected { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wybrano węzeł; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.Selected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  id: ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartość wskazującą, czy pole wyboru jest wyświetlany obok węzła."
  remarks: "<xref:System.Web.UI.WebControls.TreeView>Sterowanie umożliwia wyświetlanie pole wyboru obok obrazu węzła.</xref:System.Web.UI.WebControls.TreeView> Użyj właściwości ShowCheckBox, aby pokazać lub ukryć pole wyboru dla bieżącego węzła.       Mimo że właściwość ShowCheckBox może być używana do wyświetlania pola wyboru, jest bardziej popularne, aby użyć <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>Właściwość <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName> <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>Właściwość, jednak dotyczy każdy typ węzła określoną przez właściwość; w związku z tym właściwość ShowCheckBox jest często używana do zastąpienia tego ustawienia dla oddzielnego węzła.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>       Ponieważ <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>poniższy fragment kodu C# powoduje błąd kompilacji, właściwość jest właściwością trzy stanowy: ```   protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)   {   if (TreeView1.Nodes[0].Expanded)   {   // some work here    }   }   ``` podczas VB.Net niejawnie rzutuje `Boolean` do wartości `NullableBoolean`, C# nie obsługuje.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName> W związku z tym jest najlepszym rozwiązaniem jest jawnie Sprawdź stan właściwości. Na przykład następujący przykładowy kod w języku Visual Basic i C# jawnie testowania wartości <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Poniższy przykład kodu języka Visual Basic jawnie testów wartość <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> W tym przykładzie testów, jeśli <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>właściwość jest ustawiona na `True`; w związku z tym `Nothing` i `False` przechodzić `If` instrukcji.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>      ```   If TreeView1.Nodes(0).Expanded = True Then &quot;some work hereEnd IF   ```W tym przykładzie kodu C# jawnie testów wartość <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> W tym przykładzie testów, jeśli <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>właściwość jest ustawiona na `True`; w związku z tym `Null` i `False` przechodzić `If` instrukcji.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>      ```   if( TreeView1.Nodes[0].Expanded == true ) { //some work here}   ```Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the ShowCheckBox property to programmatically show and hide the check box for a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-vb[TreeNodeShowCheckBox#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_833_1.aspx)]\n [!code-cs[TreeNodeShowCheckBox#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_833_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> ShowCheckBox { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wyświetlić pole wyboru. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.ShowCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: TreeNode.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tworzy kopię <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu."
  remarks: "Metoda ICloneable.Clone jest używana przez <xref:System.Web.UI.WebControls.TreeNode>klasy do skopiowania siebie samego.</xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>Reprezentujący kopię <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu.</xref:System.Object>"
  overload: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opis tego elementu członkowskiego zobacz <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Web.UI.WebControls.TreeNode>wystąpienia jest rzutowane na <xref:System.Web.UI.IStateManager>interfejsu.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "Wartość, która wskazuje, czy węzeł jest zapisywanie zmian stanu widoku."
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ładunki węzła wcześniej zapisany stan widoku."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; zawierający wartości stanu zapisanego widoku."
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Zapisuje zmiany stanu widoku &lt;xref:System.Object?displayProperty=fullName&gt;."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "&lt;Xref:System.Object?displayProperty=fullName&gt; zawierający zmian stanu widoku."
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Powoduje, że <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> obiektu do śledzenia zmian stanu widoku."
  remarks: "Po wywołaniu tej metody w formancie serwera <xref:System.Web.UI.Control.IsTrackingViewState%2A>zwraca `true`.</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Target
  id: Target
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Target
  nameWithType: TreeNode.Target
  fullName: System.Web.UI.WebControls.TreeNode.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia docelowego okna lub ramki, w którym można wyświetlić zawartości strony sieci Web skojarzony z węzłem."
  remarks: "Właściwość Target umożliwia określenie okna lub ramki, w której można wyświetlić zawartość sieci Web związanych z węzeł po kliknięciu tego węzła.      > [!NOTE] > Ta właściwość zastępuje ustawienie <xref:System.Web.UI.WebControls.TreeView.Target%2A>Właściwość <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.Target%2A>      > [!NOTE] > Właściwość Target renderuje jako `target` atrybutu. `target` Atrybutu `anchor` elementów nie jest dozwolona w definicji typu dokumentu XHTML 1.1. Nie należy ustawiać właściwości docelowych, jeśli przetworzonych wyników dla <xref:System.Web.UI.WebControls.TreeNode>obiekt musi być XHTML 1.1 zgodne.</xref:System.Web.UI.WebControls.TreeNode> Aby uzyskać więcej informacji, zobacz [standardów XHTML w Visual Studio i ASP.NET](~/add/includes/ajax-current-ext-md.md).   >> Podczas tworzenia stron sieci Web z ułatwieniami dostępu, zdecydowanie zaleca się, że należy unikać właściwość Target pod kątem inne okno. Aby uzyskać więcej informacji, zobacz [NIB: dostępność ASP.NET](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae).       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to set up the frames for the next example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_971_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_971_1.aspx)]  \n  \n The following code example demonstrates how to use the Target property to specify the frame in which to display the linked content. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_971_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_971_2.aspx)]"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "Docelowego okna lub ramki, w której można wyświetlić zawartości połączonej strony sieci Web. Wartości muszą zaczynać się literą, w zakresie A do Z, które są (bez uwzględniania wielkości liter), z wyjątkiem niektórych wartości specjalne, które zaczynają się od podkreślenia, jak pokazano w poniższej tabeli.       <table><thead><tr><th> Wartość docelowa       </th><th> Opis       </th></tr></thead><tbody><tr><td><xref uid=&quot;langword_csharp__blank&quot; name=&quot;_blank&quot; href=&quot;&quot;></xref></td><td> Renderuje zawartość w nowym oknie bez ramek.       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent&quot; name=&quot;_parent&quot; href=&quot;&quot;></xref></td><td> Renderuje zawartość w obiekcie nadrzędnym natychmiastowego ramek.       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> Renderuje zawartość w okienku wyszukiwania.       </td></tr><tr><td><xref uid=&quot;langword_csharp__self&quot; name=&quot;_self&quot; href=&quot;&quot;></xref></td><td> Renderuje zawartość w ramce z fokusem.       </td></tr><tr><td><xref uid=&quot;langword_csharp__top&quot; name=&quot;_top&quot; href=&quot;&quot;></xref></td><td> Renderuje zawartość w oknie pełny bez ramek.       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    Zajrzyj do dokumentacji przeglądarki, aby określić, czy <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref> wartość jest obsługiwana. Na przykład program Microsoft Internet Explorer w wersji 5.0 i nowszej obsługują <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref> wartość docelowa.      </div>       Wartość domyślna to ciąg pusty (&quot;&quot;), który odświeża okna lub ramki z fokusem."
  overload: System.Web.UI.WebControls.TreeNode.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Text
  id: Text
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Web.UI.WebControls.TreeNode.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia tekst wyświetlany w węźle w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu."
  remarks: "Użyj właściwości tekst do określania tekst, który jest wyświetlany dla węzła w <xref:System.Web.UI.WebControls.TreeView>kontroli.</xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > Jeśli właściwość Text zawiera `null`, `get` akcesor zwraca wartość <xref:System.Web.UI.WebControls.TreeNode.Value%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> Jeśli <xref:System.Web.UI.WebControls.TreeNode.Value%2A>właściwość, z kolei zawiera `null`, <xref:System.String.Empty>jest zwracana.</xref:System.String.Empty> </xref:System.Web.UI.WebControls.TreeNode.Value%2A>       Wartość tej właściwości jest przechowywany w stanie widoku.       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the text for a node.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_843_1.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_843_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "Tekst wyświetlany w węźle w <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> formantu. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNode.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState
  id: ToggleExpandState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ToggleExpandState()
  nameWithType: TreeNode.ToggleExpandState()
  fullName: System.Web.UI.WebControls.TreeNode.ToggleExpandState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Przełącza między rozwinięte i zwinięte stan węzła."
  remarks: "Użyj metody ToggleExpandState aby rozwinięte i zwinięte stanu dla węzła. Na przykład, jeśli węzeł jest zwinięte, wywołanie metody ToggleExpandState rozwija węzeł i na odwrót.      > [!NOTE] > Alternatywnie, można ustawić <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>właściwości bezpośrednio.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>"
  example:
  - "The following code example demonstrates how to use the ToggleExpandState method to alternate between an expanded and a collapsed state for the root node of a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeToggleExpandState#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_18_1.aspx)]\n [!code-cs[TreeNodeToggleExpandState#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_18_1.aspx)]"
  syntax:
    content: public void ToggleExpandState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.ToggleExpandState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ToolTip
  nameWithType: TreeNode.ToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia tekst etykietki narzędzia dla węzła."
  remarks: "Właściwość ToolTip umożliwia określenie tekst etykietki narzędzia dla węzła. Tekst etykietki narzędzia jest wyświetlane, gdy wskaźnik myszy znajduje się nad węzłem.       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ToolTip property to provide ToolTips for the nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeNodeToolTip#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_69_1.aspx)]\n [!code-vb[TreeNodeToolTip#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_69_1.aspx)]"
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "Tekst etykietki narzędzia dla węzła. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNode.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: TreeNode.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Oznacza punkt początkowy, od której ma rozpocząć śledzenie i Zapisywanie stanu widoku zmian do węzła."
  syntax:
    content: protected void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Value
  id: Value
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Value
  nameWithType: TreeNode.Value
  fullName: System.Web.UI.WebControls.TreeNode.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia wartości niewyświetlanej używany do przechowywania wszelkich dodatkowych danych dotyczących tego węzła, takich jak dane używane na potrzeby obsługi zdarzenia odświeżania strony."
  remarks: "Właściwość wartość jest używana do uzupełnienia <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwości przechowując wszelkie dodatkowe dane skojarzone z węzłem.</xref:System.Web.UI.WebControls.TreeNode.Text%2A> Ta wartość nie jest wyświetlana w formancie i jest najczęściej używany do przechowywania danych obsługi zdarzenia odświeżania strony.      > [!NOTE] > Jeśli zawiera właściwości Value `null`, `get` akcesor zwraca wartość <xref:System.Web.UI.WebControls.TreeNode.Text%2A>Właściwości.</xref:System.Web.UI.WebControls.TreeNode.Text%2A> Jeśli <xref:System.Web.UI.WebControls.TreeNode.Text%2A>właściwość, z kolei zawiera `null`, <xref:System.String.Empty>jest zwracana.</xref:System.String.Empty> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>      > [!NOTE] > Węzłów na tym samym poziomie musi mieć unikatową wartość dla właściwości Value; <xref:System.Web.UI.WebControls.TreeView>formantu nie można rozróżnić różnych węzłów na tym samym poziomie, które mają taką samą wartość.</xref:System.Web.UI.WebControls.TreeView> W tym scenariuszu, gdy użytkownik kliknie węzeł, który ma zduplikowaną wartość węzła który znajduje się w <xref:System.Web.UI.WebControls.TreeView>jest wybrana kontrolka.</xref:System.Web.UI.WebControls.TreeView>       Wartość tej właściwości jest przechowywany w stanie widoku.       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Value property to store the key field.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1316_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1316_1.aspx)]"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "Dodatkowe dane dotyczące węzła, który nie jest wyświetlany. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNode.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ValuePath
  id: ValuePath
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ValuePath
  nameWithType: TreeNode.ValuePath
  fullName: System.Web.UI.WebControls.TreeNode.ValuePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera ścieżkę od węzła głównego do bieżącego węzła."
  remarks: "Właściwość ValuePath zawiera listę rozdzielonych ogranicznikami węzeł wartości, które tworzą ścieżkę od węzła głównego do bieżącego węzła. Użyj <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>Właściwości w celu określenia znak ogranicznika używany do rozdzielania wartości węzła.</xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> Ta wartość jest zazwyczaj używana podczas analizowania listy wartości poszczególnych lub przekazywane jako argument do <xref:System.Web.UI.WebControls.TreeView.FindNode%2A>metody <xref:System.Web.UI.WebControls.TreeView>klasy.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.FindNode%2A>       W zależności od wartości wyświetlanej w <xref:System.Web.UI.WebControls.TreeView>znak ogranicznika kontroli, może być konieczne zmiany, aby uniknąć konfliktów.</xref:System.Web.UI.WebControls.TreeView> Na przykład jeśli ustawisz znak ogranicznika przecinka wyświetlanych wartość nie powinna zawierać żadnych przecinki; w przeciwnym razie nie można przeanalizować dokładnie ValuePath właściwości.      > [!NOTE] > Węzłów na tym samym poziomie musi mieć unikatową wartość <xref:System.Web.UI.WebControls.TreeNode.Value%2A>właściwości; <xref:System.Web.UI.WebControls.TreeView>formantu nie można rozróżnić różnych węzłów na tym samym poziomie, które mają taką samą wartość.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> W tym scenariuszu, gdy użytkownik kliknie węzeł, który ma zduplikowaną wartość węzła który znajduje się w <xref:System.Web.UI.WebControls.TreeView>jest wybrana kontrolka.</xref:System.Web.UI.WebControls.TreeView>"
  example:
  - "The following code example demonstrates how to parse the ValuePath property.  \n  \n [!code-cs[TreeViewPathSeparator2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_230_1.aspx)]\n [!code-vb[TreeViewPathSeparator2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_230_1.aspx)]"
  syntax:
    content: public string ValuePath { get; }
    return:
      type: System.String
      description: "Listę oddzielonych ogranicznik, w węźle wartości, które tworzą ścieżkę od węzła głównego do bieżącego węzła."
  overload: System.Web.UI.WebControls.TreeNode.ValuePath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.TreeNode.#ctor
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode()
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String)
  nameWithType: TreeNode.TreeNode(String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String)
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(TreeView,Boolean)
  nameWithType: TreeNode.TreeNode(TreeView,Boolean)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(TreeView,Boolean)
- uid: System.Web.UI.WebControls.TreeView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeView
  nameWithType: TreeView
  fullName: System.Web.UI.WebControls.TreeView
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String)
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String,String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String,String,String)
- uid: System.Web.UI.WebControls.TreeNode.Checked
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Web.UI.WebControls.TreeNode.Checked
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
  fullName: System.Web.UI.WebControls.TreeNode.ChildNodes
- uid: System.Web.UI.WebControls.TreeNodeCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeNode.Clone
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.Clone()
- uid: System.Web.UI.WebControls.TreeNode.Collapse
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Web.UI.WebControls.TreeNode.Collapse()
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: CollapseAll()
  nameWithType: TreeNode.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeNode.CollapseAll()
- uid: System.Web.UI.WebControls.TreeNode.DataBound
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataBound
  nameWithType: TreeNode.DataBound
  fullName: System.Web.UI.WebControls.TreeNode.DataBound
- uid: System.Web.UI.WebControls.TreeNode.DataItem
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataItem
  nameWithType: TreeNode.DataItem
  fullName: System.Web.UI.WebControls.TreeNode.DataItem
- uid: System.Web.UI.WebControls.TreeNode.DataPath
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataPath
  nameWithType: TreeNode.DataPath
  fullName: System.Web.UI.WebControls.TreeNode.DataPath
- uid: System.Web.UI.WebControls.TreeNode.Depth
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Depth
  nameWithType: TreeNode.Depth
  fullName: System.Web.UI.WebControls.TreeNode.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNode.Expand
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Web.UI.WebControls.TreeNode.Expand()
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeNode.ExpandAll()
- uid: System.Web.UI.WebControls.TreeNode.Expanded
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expanded
  nameWithType: TreeNode.Expanded
  fullName: System.Web.UI.WebControls.TreeNode.Expanded
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNode.ImageUrl
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: TreeNode.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNode.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNode.Parent
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Web.UI.WebControls.TreeNode.Parent
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPostText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPostText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPostText(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPreText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPreText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPreText(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SaveViewState()
  nameWithType: TreeNode.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNode.Select
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Select()
  nameWithType: TreeNode.Select()
  fullName: System.Web.UI.WebControls.TreeNode.Select()
- uid: System.Web.UI.WebControls.TreeNode.SelectAction
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SelectAction
  nameWithType: TreeNode.SelectAction
  fullName: System.Web.UI.WebControls.TreeNode.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeSelectAction
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeSelectAction
  nameWithType: TreeNodeSelectAction
  fullName: System.Web.UI.WebControls.TreeNodeSelectAction
- uid: System.Web.UI.WebControls.TreeNode.Selected
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Selected
  nameWithType: TreeNode.Selected
  fullName: System.Web.UI.WebControls.TreeNode.Selected
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNode.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: TreeNode.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.System.ICloneable.Clone()
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNode.Target
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Target
  nameWithType: TreeNode.Target
  fullName: System.Web.UI.WebControls.TreeNode.Target
- uid: System.Web.UI.WebControls.TreeNode.Text
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Web.UI.WebControls.TreeNode.Text
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToggleExpandState()
  nameWithType: TreeNode.ToggleExpandState()
  fullName: System.Web.UI.WebControls.TreeNode.ToggleExpandState()
- uid: System.Web.UI.WebControls.TreeNode.ToolTip
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToolTip
  nameWithType: TreeNode.ToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ToolTip
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TrackViewState()
  nameWithType: TreeNode.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNode.Value
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Value
  nameWithType: TreeNode.Value
  fullName: System.Web.UI.WebControls.TreeNode.Value
- uid: System.Web.UI.WebControls.TreeNode.ValuePath
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ValuePath
  nameWithType: TreeNode.ValuePath
  fullName: System.Web.UI.WebControls.TreeNode.ValuePath
- uid: System.Web.UI.WebControls.TreeNode.#ctor*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode.TreeNode
- uid: System.Web.UI.WebControls.TreeNode.Checked*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
- uid: System.Web.UI.WebControls.TreeNode.Clone*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Clone
  nameWithType: TreeNode.Clone
- uid: System.Web.UI.WebControls.TreeNode.Collapse*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Collapse
  nameWithType: TreeNode.Collapse
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: CollapseAll
  nameWithType: TreeNode.CollapseAll
- uid: System.Web.UI.WebControls.TreeNode.DataBound*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataBound
  nameWithType: TreeNode.DataBound
- uid: System.Web.UI.WebControls.TreeNode.DataItem*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataItem
  nameWithType: TreeNode.DataItem
- uid: System.Web.UI.WebControls.TreeNode.DataPath*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataPath
  nameWithType: TreeNode.DataPath
- uid: System.Web.UI.WebControls.TreeNode.Depth*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Depth
  nameWithType: TreeNode.Depth
- uid: System.Web.UI.WebControls.TreeNode.Expand*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expand
  nameWithType: TreeNode.Expand
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ExpandAll
  nameWithType: TreeNode.ExpandAll
- uid: System.Web.UI.WebControls.TreeNode.Expanded*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expanded
  nameWithType: TreeNode.Expanded
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: LoadViewState
  nameWithType: TreeNode.LoadViewState
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNode.Parent*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPostText
  nameWithType: TreeNode.RenderPostText
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPreText
  nameWithType: TreeNode.RenderPreText
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SaveViewState
  nameWithType: TreeNode.SaveViewState
- uid: System.Web.UI.WebControls.TreeNode.Select*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Select
  nameWithType: TreeNode.Select
- uid: System.Web.UI.WebControls.TreeNode.SelectAction*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SelectAction
  nameWithType: TreeNode.SelectAction
- uid: System.Web.UI.WebControls.TreeNode.Selected*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Selected
  nameWithType: TreeNode.Selected
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: TreeNode.System.ICloneable.Clone
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.TreeNode.Target*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Target
  nameWithType: TreeNode.Target
- uid: System.Web.UI.WebControls.TreeNode.Text*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToggleExpandState
  nameWithType: TreeNode.ToggleExpandState
- uid: System.Web.UI.WebControls.TreeNode.ToolTip*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToolTip
  nameWithType: TreeNode.ToolTip
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TrackViewState
  nameWithType: TreeNode.TrackViewState
- uid: System.Web.UI.WebControls.TreeNode.Value*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Value
  nameWithType: TreeNode.Value
- uid: System.Web.UI.WebControls.TreeNode.ValuePath*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ValuePath
  nameWithType: TreeNode.ValuePath
