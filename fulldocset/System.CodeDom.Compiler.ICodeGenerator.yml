### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.ICodeGenerator
  id: ICodeGenerator
  children:
  - System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  - System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  - System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  langs:
  - csharp
  name: ICodeGenerator
  nameWithType: ICodeGenerator
  fullName: System.CodeDom.Compiler.ICodeGenerator
  type: Interface
  summary: "Definiuje interfejs dla generowania kodu."
  remarks: "> [!NOTE]> W wersji systemu .NET Framework 1.0 i 1.1 dostawców kodu składają się z implementacji <xref:System.CodeDom.Compiler.CodeDomProvider>, Element ICodeGenerator, <xref:System.CodeDom.Compiler.ICodeParser>i <xref:System.CodeDom.Compiler.ICodeCompiler>.</xref:System.CodeDom.Compiler.ICodeCompiler> </xref:System.CodeDom.Compiler.ICodeParser> </xref:System.CodeDom.Compiler.CodeDomProvider> W [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A>, i <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A>metody są nieaktualne oraz metody Element ICodeGenerator i <xref:System.CodeDom.Compiler.ICodeCompiler>są bezpośrednio dostępne w <xref:System.CodeDom.Compiler.CodeDomProvider>klasie.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.CodeDom.Compiler.ICodeCompiler> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> Należy zastąpić tych metod w implementacji dostawcy kodu i nie mogą wywoływać metod bazowych.       Deweloperzy kompilatory można zaimplementować ten interfejs, aby umożliwić użytkownikom do dynamicznego generowania kodu w określonym języku. To może służyć do różnych celów, takich jak tworzenie kreatorów generowania kodu, tworzenie zestawów dynamicznych z zawartością, która może być debugowany i dla szablonu dokumentów z osadzonym kodem, takich jak ASP.NET.       Implementacja Element ICodeGenerator zwykle są uzyskiwane przez wywołanie do <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>metody <xref:System.CodeDom.Compiler.CodeDomProvider>.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>"
  syntax:
    content: public interface ICodeGenerator
  implements: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  id: CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: CreateEscapedIdentifier(String)
  nameWithType: ICodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Tworzy identyfikator o zmienionym znaczeniu dla określonej wartości."
  remarks: "CreateEscapedIdentifier sprawdza, czy identyfikator powoduje konflikt z zastrzeżonego lub słowa kluczowe języka, a jeśli tak, zwraca takiej nazwie formatowania kodu ucieczki specyficzny dla języka. Jest to określane identyfikatora o zmienionym znaczeniu. Identyfikator o zmienionym znaczeniu będzie zawierać takie same `value` , ale będą miały dodane rozróżnianie identyfikatora z kluczowego formatowania kodu ucieczki. Dwa przykłady wdrożenia są poprzedzających `value` z &quot;@&quot; lub zestawianie `value` z &quot;[&quot; i &quot;]&quot;."
  syntax:
    content: public string CreateEscapedIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "Ciąg do utworzenia dla identyfikatora o zmienionym znaczeniu."
    return:
      type: System.String
      description: "Identyfikator o zmienionym znaczeniu dla wartości."
  overload: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  id: CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: CreateValidIdentifier(String)
  nameWithType: ICodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Tworzy prawidłowy identyfikator dla określonej wartości."
  remarks: "Testy CreateValidIdentifier czy identyfikator jest w konflikcie z zastrzeżonego lub słowa kluczowe języka i zwraca prawidłowy identyfikator nazw, które nie powoduje konfliktu. Zwrócony identyfikator będzie zawierać takie same `value` , ale, powoduje konflikt z zastrzeżone lub słowa kluczowe języka, będą dodane do odróżnienia identyfikator z kluczowego formatowania kodu ucieczki. Zazwyczaj przypadku wartość wymaga modyfikacji, jest zwracana wartość poprzedzającą podkreślenie &quot;_&quot;."
  syntax:
    content: public string CreateValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "Ciąg do generowania prawidłowym identyfikatorem."
    return:
      type: System.String
      description: "Nieprawidłowy identyfikator dla określonej wartości."
  overload: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generuje kod dla określona jednostka kompilacji kodu Document Object Model (CodeDOM) i umieszcza go w określonym składniku zapisywania tekstu przy użyciu podanych opcji."
  syntax:
    content: public void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> do generowania kodu."
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Do kodu danych wyjściowych, aby.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> wskazujące opcje do użycia podczas generowania kodu."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generuje kod dla określonego wyrażenia kodu Document Object Model (CodeDOM) i umieszcza go w określonym składniku zapisywania tekstu."
  syntax:
    content: public void GenerateCodeFromExpression (System.CodeDom.CodeExpression e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> wskazujące, aby wygenerować kod dla wyrażenia."
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Do kodu danych wyjściowych, aby.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> wskazujące opcje do użycia podczas generowania kodu."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generuje kod dla określonego obszaru nazw kodu Document Object Model (CodeDOM) i umieszcza go w określonym składniku zapisywania tekstu przy użyciu podanych opcji."
  syntax:
    content: public void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeNamespace
      description: "A <xref href=&quot;System.CodeDom.CodeNamespace&quot;> </xref> wskazujące, aby wygenerować kod dla przestrzeni nazw."
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Do kodu danych wyjściowych, aby.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> wskazujące opcje do użycia podczas generowania kodu."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generuje kod dla określonej instrukcji kodu Document Object Model (CodeDOM) i umieszcza go w określonym składniku zapisywania tekstu przy użyciu podanych opcji."
  syntax:
    content: public void GenerateCodeFromStatement (System.CodeDom.CodeStatement e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeStatement
      description: "A <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> zawierający elementy CodeDOM do tłumaczenia."
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Do kodu danych wyjściowych, aby.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> wskazujące opcje do użycia podczas generowania kodu."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generuje kod dla określonego deklaracji typu kodu Document Object Model (CodeDOM) i umieszcza go w określonym składniku zapisywania tekstu przy użyciu podanych opcji."
  syntax:
    content: public void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeTypeDeclaration
      description: "A <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> wskazujące, aby wygenerować kod dla typu."
    - id: w
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Do kodu danych wyjściowych, aby.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "A <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> wskazujące opcje do użycia podczas generowania kodu."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  id: GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GetTypeOutput(CodeTypeReference)
  nameWithType: ICodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Pobiera typ wskazuje określony <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>."
  syntax:
    content: public string GetTypeOutput (System.CodeDom.CodeTypeReference type);
    parameters:
    - id: type
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> wskazujące typ do zwrócenia."
    return:
      type: System.String
      description: "Tekst reprezentację określonego typu dla tego generatora kodu jest przeznaczona do generowania kodu języka. Na przykład w języku Visual Basic, przekazywanie typu System.Int32 zwróci &quot;Int&quot;."
  overload: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  id: IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: IsValidIdentifier(String)
  nameWithType: ICodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Pobiera wartość wskazującą, czy określona wartość jest nieprawidłowym identyfikatorem dla bieżącego języka."
  remarks: "Ta metoda sprawdza, czy identyfikator jest nieprawidłowy. Podczas implementowania IsValidIdentifier w klasie pochodnej, projektowania metody do testowania przekazanej do niego wartości i zwraca `true` tylko wtedy, gdy wartość pasuje do reguły języka i nie powoduje konflikt ze słowem kluczowym."
  syntax:
    content: public bool IsValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "Wartość do testowania jest prawidłowym identyfikatorem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> value </code> parametr jest prawidłowy identyfikator; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  id: Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: Supports(GeneratorSupport)
  nameWithType: ICodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Pobiera wartość wskazującą, czy generator zapewnia obsługę funkcji języka reprezentowany przez określony <xref href=&quot;System.CodeDom.Compiler.GeneratorSupport&quot;> </xref> obiektu."
  remarks: "Ta metoda może być wywołana z liczbą <xref:System.CodeDom.Compiler.GeneratorSupport>flagi jednocześnie w celu zbadania zestaw funkcji, dołączając zestaw flag odpowiednia możliwość wraz z pliku binarnego operatora &quot;Lub&quot; (|).</xref:System.CodeDom.Compiler.GeneratorSupport>"
  syntax:
    content: public bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);
    parameters:
    - id: supports
      type: System.CodeDom.Compiler.GeneratorSupport
      description: "Możliwości, aby przetestować generator."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli określonych możliwości są obsługiwane; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.ICodeGenerator.Supports*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  id: ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: ValidateIdentifier(String)
  nameWithType: ICodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Zgłasza wyjątek, jeśli określona wartość nie jest prawidłowym identyfikatorem."
  remarks: "Zamiast zwracać wartość, ta metoda zgłasza wyjątek, jeśli określony identyfikator nie jest prawidłowa zgodnie z implementacji metody. Zazwyczaj wyjątek jest <xref:System.ArgumentException>.</xref:System.ArgumentException> Ta metoda umożliwia generator kodu, który implementuje tę metodę, aby utworzyć komunikat informacyjny o błędzie na podstawie wartości nieprawidłowy identyfikator."
  syntax:
    content: public void ValidateIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "Identyfikator do sprawdzania poprawności."
  overload: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Identyfikator jest nieprawidłowy."
  platform:
  - net462
references:
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateEscapedIdentifier(String)
  nameWithType: ICodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateValidIdentifier(String)
  nameWithType: ICodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.CodeDom.Compiler.CodeGeneratorOptions
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeGeneratorOptions
  nameWithType: CodeGeneratorOptions
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeNamespace
  parent: System.CodeDom
  isExternal: false
  name: CodeNamespace
  nameWithType: CodeNamespace
  fullName: System.CodeDom.CodeNamespace
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GetTypeOutput(CodeTypeReference)
  nameWithType: ICodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: IsValidIdentifier(String)
  nameWithType: ICodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: Supports(GeneratorSupport)
  nameWithType: ICodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
- uid: System.CodeDom.Compiler.GeneratorSupport
  parent: System.CodeDom.Compiler
  isExternal: false
  name: GeneratorSupport
  nameWithType: GeneratorSupport
  fullName: System.CodeDom.Compiler.GeneratorSupport
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: ValidateIdentifier(String)
  nameWithType: ICodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateEscapedIdentifier
  nameWithType: ICodeGenerator.CreateEscapedIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateValidIdentifier
  nameWithType: ICodeGenerator.CreateValidIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromCompileUnit
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromExpression
  nameWithType: ICodeGenerator.GenerateCodeFromExpression
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromNamespace
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromStatement
  nameWithType: ICodeGenerator.GenerateCodeFromStatement
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromType
  nameWithType: ICodeGenerator.GenerateCodeFromType
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GetTypeOutput
  nameWithType: ICodeGenerator.GetTypeOutput
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: IsValidIdentifier
  nameWithType: ICodeGenerator.IsValidIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: Supports
  nameWithType: ICodeGenerator.Supports
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: ValidateIdentifier
  nameWithType: ICodeGenerator.ValidateIdentifier
