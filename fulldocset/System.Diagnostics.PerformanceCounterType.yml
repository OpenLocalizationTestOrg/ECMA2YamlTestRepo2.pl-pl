### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceCounterType
  id: PerformanceCounterType
  children:
  - System.Diagnostics.PerformanceCounterType.AverageBase
  - System.Diagnostics.PerformanceCounterType.AverageCount64
  - System.Diagnostics.PerformanceCounterType.AverageTimer32
  - System.Diagnostics.PerformanceCounterType.CounterDelta32
  - System.Diagnostics.PerformanceCounterType.CounterDelta64
  - System.Diagnostics.PerformanceCounterType.CounterMultiBase
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  - System.Diagnostics.PerformanceCounterType.CounterTimer
  - System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  - System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  - System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  - System.Diagnostics.PerformanceCounterType.ElapsedTime
  - System.Diagnostics.PerformanceCounterType.NumberOfItems32
  - System.Diagnostics.PerformanceCounterType.NumberOfItems64
  - System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  - System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  - System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  - System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  - System.Diagnostics.PerformanceCounterType.RawBase
  - System.Diagnostics.PerformanceCounterType.RawFraction
  - System.Diagnostics.PerformanceCounterType.SampleBase
  - System.Diagnostics.PerformanceCounterType.SampleCounter
  - System.Diagnostics.PerformanceCounterType.SampleFraction
  - System.Diagnostics.PerformanceCounterType.Timer100Ns
  - System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  langs:
  - csharp
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
  type: Enum
  summary: "Określa formułę używane do obliczania <xref:System.Diagnostics.PerformanceCounter.NextValue*>metodę <xref href=&quot;System.Diagnostics.PerformanceCounter&quot;> </xref> wystąpienia.</xref:System.Diagnostics.PerformanceCounter.NextValue*>"
  remarks: "Niektóre typy licznik reprezentuje nieprzetworzone dane, podczas gdy inne reprezentują wartości obliczeniowe, które są oparte na co najmniej jeden próbek licznika. Następujące kategorie klasyfikować typy dostępnych liczników.      — Średnia: pomiar wartość wraz z upływem czasu i wyświetlić średnią z ostatnich dwóch pomiarów. Skojarzone z każdym licznika średni jest podstawowy licznik, który śledzi liczbę próbek związane.      -Różnica: odjąć ostatniego pomiaru od poprzedniego i wyświetlić różnica, jeśli jest dodatnią; Jeśli jest ujemna, wyświetlają wartość zero.      -Natychmiastowe: Wyświetl najnowsze pomiaru.      -Procent: wyświetlić obliczone wartości w procentach.      -Rate: Przykładowe zwiększa liczbę zdarzeń w czasie i dzielenia zmianę wartości liczby przez zmianę w czasie, aby wyświetlić szybkość działania.       Podczas pobierania próbek danych licznika wydajności, przy użyciu typu licznika, który reprezentuje średnią wprowadzić dane pierwotne wartości przydatne do użycia. Na przykład licznik nieprzetworzone dane `NumberOfItems64` mogą uwidaczniać jest dość losowej próbki przykładowych danych. Formuła do obliczania średniej wartości, które zwraca licznika będzie mieć (X 0 + X 1 +... + X n) / n, gdzie każdy X i jest przykładowe pierwotnych liczników.       Liczniki współczynnik są podobne do uśrednienia liczników, ale bardziej użyteczna w przypadku sytuacji, w których częstotliwość zwiększa jako zasób jest używany. Formuła, której szybko oblicza średnią jest ((X n - 0) / (T n -T 0)) / częstotliwości, gdzie każdy X i jest próbkę licznika oraz każdego T i to czas, który odpowiednie próbki. Wynik jest średnie użycie w ciągu sekundy.      > [!NOTE] > O ile nie wskazano inaczej, podstawowy czas jest w sekundach.       Podczas instrumentacji aplikacji (Tworzenie i zapisywanie niestandardowe liczniki wydajności), może być Praca z typami licznika wydajności, które opierają się na towarzyszący podstawowy licznik, który jest używany w obliczeniach. Podstawowy licznik musi być natychmiast po jego skojarzony licznik <xref:System.Diagnostics.CounterCreationDataCollection>aplikacja korzysta z kolekcji.</xref:System.Diagnostics.CounterCreationDataCollection> W poniższej tabeli wymieniono liczników typu podstawowego z jako odpowiednie typy licznika wydajności.      | Podstawowy typ licznika | Typy liczników wydajności |   |-----------------------|-------------------------------|   |`AverageBase`|`AverageTimer32`<br /><br /> `AverageCount64`|   |`CounterMultiBase`|`CounterMultiTimer`<br /><br /> `CounterMultiTimerInverse`<br /><br /> `CounterMultiTimer100Ns`<br /><br /> `CounterMultiTimer100NsInverse`|   |`RawBase`|`RawFraction`|   |`SampleBase`|`SampleFraction`|"
  example:
  - "The following examples demonstrate several of the counter types in the PerformanceCounterType enumeration.  \n  \n `AverageCount64`  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_1.vb)]  \n  \n `AverageTimer32`  \n  \n [!code-vb[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_2.vb)]\n [!code-cpp[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/cpp/t-system.diagnostics.per_1_2.cpp)]\n [!code-cs[PerformanceCounterType.AverageTimer32#2](~/add/codesnippet/csharp/t-system.diagnostics.per_1_2.cs)]  \n  \n `ElapsedTime`  \n  \n [!code-cs[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/csharp/t-system.diagnostics.per_1_3.cs)]\n [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/cpp/t-system.diagnostics.per_1_3.cpp)]\n [!code-vb[PerformanceCounterType.ElapsedTime#2](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_3.vb)]  \n  \n `NumberOfItems32`  \n  \n [!code-cs[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_4.cs)]\n [!code-cpp[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_4.cpp)]\n [!code-vb[PerformanceCounterType.NumberOfItems32#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_4.vb)]  \n  \n `NumberOfItems64`  \n  \n [!code-cpp[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_5.cpp)]\n [!code-cs[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_5.cs)]\n [!code-vb[PerformanceCounterType.NumberOfItems64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_5.vb)]  \n  \n `SampleFraction`  \n  \n [!code-vb[PerformanceCounterType.SampleFraction#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_6.vb)]\n [!code-cs[PerformanceCounterType.SampleFraction#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_6.cs)]  \n  \n `RateOfCountsPerSecond32`  \n  \n [!code-cs[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_7.cs)]\n [!code-vb[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_7.vb)]\n [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_7.cpp)]  \n  \n `RateOfCountsPerSecond64`  \n  \n [!code-vb[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_8.vb)]\n [!code-cs[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_8.cs)]\n [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_8.cpp)]  \n  \n `RawFraction`  \n  \n [!code-cs[PerformanceCounterType.RawFraction#1](~/add/codesnippet/csharp/t-system.diagnostics.per_1_9.cs)]\n [!code-cpp[PerformanceCounterType.RawFraction#1](~/add/codesnippet/cpp/t-system.diagnostics.per_1_9.cpp)]\n [!code-vb[PerformanceCounterType.RawFraction#1](~/add/codesnippet/visualbasic/t-system.diagnostics.per_1_9.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Diagnostics.AlphabeticalEnumConverter))]

      public enum PerformanceCounterType
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageBase
  id: AverageBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageBase
  nameWithType: PerformanceCounterType.AverageBase
  fullName: System.Diagnostics.PerformanceCounterType.AverageBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Podstawowy licznik, który jest używany w obliczeniach średnie czasu lub liczby, takich jak <xref uid=&quot;langword_csharp_AverageTimer32&quot; name=&quot;AverageTimer32&quot; href=&quot;&quot;> </xref> i <xref uid=&quot;langword_csharp_AverageCount64&quot; name=&quot;AverageCount64&quot; href=&quot;&quot;> </xref>. Przechowuje denominator obliczania licznik do obecne &quot;czasu na operację&quot; lub &quot;liczba na operację&quot;."
  syntax:
    content: AverageBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageCount64
  id: AverageCount64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageCount64
  nameWithType: PerformanceCounterType.AverageCount64
  fullName: System.Diagnostics.PerformanceCounterType.AverageCount64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Średnia licznik, który pokazuje, ile elementów są przetwarzane przeciętnie podczas operacji. Liczniki tego typu Wyświetlanie stosunek elementów przetworzonych liczba ukończonych operacji. Stosunek jest obliczane przez porównanie liczby elementów przetworzone podczas ostatniego interwału do liczby operacji ukończony podczas ostatniego interwału."
  remarks: "Formula: (N 1 -N 0)/(B 1 -B 0), where N 1 and N 0 are performance counter readings, and the B 1 and B 0 are their corresponding `AverageBase` values. Thus, the numerator represents the numbers of items processed during the sample interval, and the denominator represents the number of operations completed during the sample interval.  \n  \n Counters of this type include PhysicalDisk\\ Avg. Disk Bytes/Transfer."
  syntax:
    content: AverageCount64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.AverageTimer32
  id: AverageTimer32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: AverageTimer32
  nameWithType: PerformanceCounterType.AverageTimer32
  fullName: System.Diagnostics.PerformanceCounterType.AverageTimer32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Średnia licznik, który mierzy czas trwania, średnio do ukończenia procesu lub operacji. Liczniki tego typu wyświetlany stosunek całkowity czas w przykładowym przedziale czasu liczba procesów lub operacje zakończyły się w tym samym czasie. Ten typ licznika mierzy czas w Takty zegara systemowego."
  remarks: "Formula: ((N 1 -N 0)/F)/(B 1 -B 0), where N 1 and N 0 are performance counter readings, B 1 and B 0 are their corresponding `AverageBase` values, and F is the number of ticks per second. The value of F is factored into the equation so that the result can be displayed in seconds. Thus, the numerator represents the numbers of ticks counted during the last sample interval, F represents the frequency of the ticks, and the denominator represents the number of operations completed during the last sample interval.  \n  \n Counters of this type include PhysicalDisk\\ Avg. Disk sec/Transfer."
  syntax:
    content: AverageTimer32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta32
  id: CounterDelta32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterDelta32
  nameWithType: PerformanceCounterType.CounterDelta32
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznik różnica, który przedstawia zmiany w atrybucie zmierzone między dwa najnowszych interwałów próbkowania."
  remarks: 'Formuła: N 1 -N 0, gdzie N 1 i N 0 są odczyty liczników wydajności.'
  syntax:
    content: CounterDelta32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta64
  id: CounterDelta64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterDelta64
  nameWithType: PerformanceCounterType.CounterDelta64
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznik różnica, który przedstawia zmiany w atrybucie zmierzone między dwa najnowszych interwałów próbkowania. Jest taka sama jak <xref uid=&quot;langword_csharp_CounterDelta32&quot; name=&quot;CounterDelta32&quot; href=&quot;&quot;> </xref> Typ licznika, z wyjątkiem jest używa większych pól w celu uwzględnienia większej wartości."
  remarks: 'Formuła: N 1 -N 0, gdzie N 1 i N 0 są odczyty liczników wydajności.'
  syntax:
    content: CounterDelta64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  id: CounterMultiBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiBase
  nameWithType: PerformanceCounterType.CounterMultiBase
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Podstawowy licznik wskazuje liczbę elementów w próbce. Jest używany jako mianownik w obliczeniach uzyskać średnią wśród elementów próbkowany podejmując chronometrażu wiele, ale podobnych elementów. Used with <xref uid=&quot;langword_csharp_CounterMultiTimer&quot; name=&quot;CounterMultiTimer&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimerInverse&quot; name=&quot;CounterMultiTimerInverse&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CounterMultiTimer100Ns&quot; name=&quot;CounterMultiTimer100Ns&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_CounterMultiTimer100NsInverse&quot; name=&quot;CounterMultiTimer100NsInverse&quot; href=&quot;&quot;></xref>."
  syntax:
    content: CounterMultiBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  id: CounterMultiTimer
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer
  nameWithType: PerformanceCounterType.CounterMultiTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznika procent, który wyświetla czas aktywności jednego lub więcej składników jako procent całkowitego czasu interwału próbkowania. Ponieważ licznik rejestruje czas aktywności składników działających równocześnie, wynikowy procent może przekroczyć 100 procent."
  remarks: "Ten licznik jest multitimer. Multitimers zbierania danych z więcej niż jedno wystąpienie składnika, takie jak procesor lub dysku. Ten typ licznika różni się od `CounterMultiTimer100Ns` w tym mierzy czas w jednostkach Takty licznik wydajności systemu, a nie w 100 nanosekund jednostek.       Formuła: ((1 N - N 0) / (1 D - D 0)) x 100 / B, gdzie N 1 i N 0 są odczyty liczników wydajności, D 1 i D 0 są ich odpowiednich odczyty czasu w taktach licznik wydajności systemu i zmiennej B oznacza podstawowy licznik dla monitorowanych składników (przy użyciu Licznik bazowy typu `CounterMultiBase`). W związku z tym licznik reprezentuje części w przykładowym przedziale czasu, w którym monitorowanych składników były aktywne i mianownika reprezentuje całkowity czas interwału próbkowania."
  syntax:
    content: CounterMultiTimer
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  id: CounterMultiTimer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer100Ns
  nameWithType: PerformanceCounterType.CounterMultiTimer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznika procent, który przedstawia czas aktywności jednego lub więcej składników jako procent całkowitego czasu interwału próbkowania. Mierzony w 100 nanosekund (ns) czas."
  remarks: "Typ tego licznika jest multitimer. Multitimers zostały zaprojektowane do monitorowania więcej niż jedno wystąpienie składnika, takie jak procesor lub dysku.       Formuła: ((1 N - N 0) / (1 D - D 0)) x 100 / B, gdzie N 1 i N 0 są odczyty liczników wydajności, D 1 i D 0 są ich odpowiednich odczyty czasie w jednostkach 100-nanosekundowych i zmienna B oznacza podstawowy licznik dla monitorowanych składników (przy użyciu Licznik bazowy typu `CounterMultiBase`). W związku z tym licznik reprezentuje części w przykładowym przedziale czasu, w którym monitorowanych składników były aktywne i mianownika reprezentuje całkowity czas interwału próbkowania."
  syntax:
    content: CounterMultiTimer100Ns
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  id: CounterMultiTimer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimer100NsInverse
  nameWithType: PerformanceCounterType.CounterMultiTimer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznika procent, który przedstawia czas aktywności jednego lub więcej składników jako procent całkowitego czasu interwału próbkowania. Liczniki tego typu pomiaru w 100 nanosekund (ns) czas. Pochodzą one czas aktywności pomiaru czasu, który składniki nie są aktywne i odjęcie wyniku pomnożenie 100 procent liczby monitorowanych obiektów."
  remarks: "Typ tego licznika jest odwrotny multitimer. Multitimers zostały zaprojektowane do monitorowania więcej niż jedno wystąpienie składnika, takie jak procesor lub dysku. Liczniki odwrotny pomiar czasu, który składnik nie jest aktywne i pochodną jego czas aktywności pomiar czasu nieaktywne formuła: (B - ((1 N - N 0) / (1 D - D 0))) x 100, gdzie mianownika reprezentuje całkowity czas interwału próbkowania licznik reprezentuje czas w interwale po monitorowanych składników zostały nieaktywnych, a B reprezentuje liczbę monitorowanych składników , przy użyciu Licznik bazowy typu `CounterMultiBase`."
  syntax:
    content: CounterMultiTimer100NsInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  id: CounterMultiTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterMultiTimerInverse
  nameWithType: PerformanceCounterType.CounterMultiTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznika procent, który przedstawia czas aktywności jednego lub więcej składników jako procent całkowitego czasu interwału próbkowania. Czas aktywności pochodzi pomiaru czasu, który składniki nie są aktywne i odjęcie wyniku 100 procent liczby monitorowanych obiektów."
  remarks: "Typ tego licznika jest odwrotny multitimer. Multitimers monitorować więcej niż jedno wystąpienie składnika, takie jak procesor lub dysku. Liczniki odwrotny pomiar czasu, który składnik nie jest aktywne i pochodzi z pomiaru jego czas aktywności.       Ten licznik różni się od `CounterMultiTimer100NsInverse` w tym mierzy czas w jednostkach Takty licznik wydajności systemu, a nie w 100 nanosekund jednostek.       Formuła: (B - ((1 N - N 0) / (1 D - D 0))) x 100, gdzie mianownika reprezentuje całkowity czas interwału próbkowania reprezentuje licznik czasu przedział czasu, gdy monitorowanych składników zostały nieaktywnych, a B reprezentuje liczbę składników monitorowane, przy użyciu Licznik bazowy typu `CounterMultiBase`."
  syntax:
    content: CounterMultiTimerInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterTimer
  id: CounterTimer
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterTimer
  nameWithType: PerformanceCounterType.CounterTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimer
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznika procent, który pokazuje średni czas, czy składnik jest aktywny jako procent całkowitej przedziału czasu."
  remarks: 'Formuła: (1 N - N 0) / (1 D - D 0), gdzie N 1 i N 0 wskazań liczników wydajności, a ich odpowiednich odczyty czasu są D 1 i D 0. W związku z tym licznik reprezentuje części w przykładowym przedziale czasu, w którym monitorowanych składników były aktywne i mianownika reprezentuje całkowity czas interwału próbkowania.'
  syntax:
    content: CounterTimer
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  id: CounterTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CounterTimerInverse
  nameWithType: PerformanceCounterType.CounterTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznika procent, który przedstawia średnią wartość procentową czasu active zaobserwowaną w przykładowym przedziale czasu. Wartości tych liczników jest obliczana przez monitorowanie procent czasu, który usługa była nieaktywna, a następnie odjęcie tej wartości od 100%."
  remarks: "Jest to typ odwrotny licznika. Miara odwrotny liczniki czas, co składnik Zanotuj active i pochodzi z pomiaru czas aktywności. Typ tego licznika jest taka sama jak `CounterTimer100NsInv` z tą różnicą, że mierzy czas w jednostkach Takty licznik wydajności systemu, a nie w 100 nanosekund jednostek.       Formuła: (1 - ((1 N - N 0) / (1 D - D 0))) x 100, gdy licznik reprezentuje czas w interwale po monitorowanych składników zostały nieaktywnych, a mianownika reprezentuje całkowity czas interwału próbkowania."
  syntax:
    content: CounterTimerInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  id: CountPerTimeInterval32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CountPerTimeInterval32
  nameWithType: PerformanceCounterType.CountPerTimeInterval32
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznik Średni zaprojektowane do monitorowania średnia długość kolejki do zasobu w czasie. Przedstawia on różnica między długości kolejki zaobserwowaną ostatnich dwóch interwałów próbkowania podzielona przez długość interwału. Ten typ licznika zazwyczaj umożliwia śledzić liczbę elementów, które są umieszczone w kolejce oczekiwania."
  remarks: 'Formuła: (1 N - N 0) / (1 D - D 0), gdy licznik przedstawia liczbę elementów w kolejce i mianownika reprezentuje czas, który upłynął podczas ostatniego interwału próbkowania.'
  syntax:
    content: CountPerTimeInterval32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  id: CountPerTimeInterval64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: CountPerTimeInterval64
  nameWithType: PerformanceCounterType.CountPerTimeInterval64
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Średni licznik, który monitoruje średnia długość kolejki do zasobu w czasie. Liczniki tego typu wyświetlenia różnicy między długości kolejki zaobserwowaną ostatnich dwóch interwałów próbkowania, podzielona przez długość interwału. Typ tego licznika jest taka sama jak <xref uid=&quot;langword_csharp_CountPerTimeInterval32&quot; name=&quot;CountPerTimeInterval32&quot; href=&quot;&quot;> </xref> z tym, że używa większych pól do uwzględnienia większej wartości. Ten typ licznika zwykle jest używana do śledzenia dużych lub bardzo dużą liczbę elementów, które są umieszczone w kolejce lub oczekiwania."
  remarks: 'Formuła: (1 N - N 0) / (1 D - D 0), gdy licznik przedstawia liczbę elementów w kolejce i mianownika reprezentuje czas, który upłynął podczas interwału próbkowania.'
  syntax:
    content: CountPerTimeInterval64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.ElapsedTime
  id: ElapsedTime
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: ElapsedTime
  nameWithType: PerformanceCounterType.ElapsedTime
  fullName: System.Diagnostics.PerformanceCounterType.ElapsedTime
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Przedstawia całkowity czas od uruchomienia składnik lub procesu i czasu, gdy ta wartość jest obliczana czasomierza różnicy."
  remarks: "Formula: (D 0 - N 0) / F, where D 0 represents the current time, N 0 represents the time the object was started, and F represents the number of time units that elapse in one second. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ System Up Time."
  syntax:
    content: ElapsedTime
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  id: NumberOfItems32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItems32
  nameWithType: PerformanceCounterType.NumberOfItems32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Natychmiastowe licznika, który pokazuje najbardziej ostatnio odczytaną wartość. Używany na przykład do obsługi prostego liczba elementów lub operacji."
  remarks: "Formula: None. Does not display an average, but shows the raw data as it is collected.  \n  \n Counters of this type include Memory\\Available Bytes."
  syntax:
    content: NumberOfItems32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  id: NumberOfItems64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItems64
  nameWithType: PerformanceCounterType.NumberOfItems64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Natychmiastowe licznika, który pokazuje najbardziej ostatnio odczytaną wartość. Używany na przykład do obsługi prostego liczbę bardzo dużą liczbę elementów lub operacji. Jest taka sama jak <xref uid=&quot;langword_csharp_NumberOfItems32&quot; name=&quot;NumberOfItems32&quot; href=&quot;&quot;> </xref> z tym, że używa większych pól do uwzględnienia większej wartości."
  remarks: 'Formuła: Brak. Średnia nie są wyświetlane, ale zawiera dane pierwotne, zgodnie z ich zebraniu.'
  syntax:
    content: NumberOfItems64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  id: NumberOfItemsHEX32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItemsHEX32
  nameWithType: PerformanceCounterType.NumberOfItemsHEX32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Natychmiastowe licznika, który pokazuje najbardziej ostatnio odczytaną wartość w formacie szesnastkowym. Używany na przykład do obsługi prostego liczba elementów lub operacji."
  remarks: 'Formuła: Brak. Średnia nie są wyświetlane, ale zawiera dane pierwotne, zgodnie z ich zebraniu.'
  syntax:
    content: NumberOfItemsHEX32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  id: NumberOfItemsHEX64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: NumberOfItemsHEX64
  nameWithType: PerformanceCounterType.NumberOfItemsHEX64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Natychmiastowe licznika, który pokazuje najbardziej ostatnio odczytaną wartość. Używany na przykład do obsługi prostego liczbę bardzo dużą liczbę elementów lub operacji. Jest taka sama jak <xref uid=&quot;langword_csharp_NumberOfItemsHEX32&quot; name=&quot;NumberOfItemsHEX32&quot; href=&quot;&quot;> </xref> z tym, że używa większych pól do uwzględnienia większej wartości."
  remarks: 'Formuła: Brak. Jest to wartość średnia nie są wyświetlane, ale zawiera dane pierwotne, zgodnie z ich zebraniu'
  syntax:
    content: NumberOfItemsHEX64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  id: RateOfCountsPerSecond32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RateOfCountsPerSecond32
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond32
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznik różnica, który pokazuje średnią liczbę operacji ukończone w ciągu każdej sekundy interwału próbkowania. Liczniki tego typu pomiaru czasu w Takty zegara systemowego."
  remarks: "Formula: (N 1 - N 0) / ((D 1 -D 0) / F), where N 1 and N 0 are performance counter readings, D 1 and D 0 are their corresponding time readings, and F represents the number of ticks per second. Thus, the numerator represents the number of operations performed during the last sample interval, the denominator represents the number of ticks elapsed during the last sample interval, and F is the frequency of the ticks. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ File Read Operations/sec."
  syntax:
    content: RateOfCountsPerSecond32
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  id: RateOfCountsPerSecond64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RateOfCountsPerSecond64
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond64
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznik różnica, który pokazuje średnią liczbę operacji ukończone w ciągu każdej sekundy interwału próbkowania. Liczniki tego typu pomiaru czasu w Takty zegara systemowego. Typ tego licznika jest taka sama jak <xref uid=&quot;langword_csharp_RateOfCountsPerSecond32&quot; name=&quot;RateOfCountsPerSecond32&quot; href=&quot;&quot;> </xref> typu, ale używa większych pól w celu uwzględnienia większej wartości do śledzenia dużych liczba elementów lub operacji na sekundę, takich jak szybkość transmisji bajtów."
  remarks: "Formula: (N 1 - N 0) / ((D 1 -D 0) / F), where N 1 and N 0 are performance counter readings, D 1 and D 0 are their corresponding time readings, and F represents the number of ticks per second. Thus, the numerator represents the number of operations performed during the last sample interval, the denominator represents the number of ticks elapsed during the last sample interval, and F is the frequency of the ticks. The value of F is factored into the equation so that the result can be displayed in seconds.  \n  \n Counters of this type include System\\ File Read Bytes/sec."
  syntax:
    content: RateOfCountsPerSecond64
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RawBase
  id: RawBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RawBase
  nameWithType: PerformanceCounterType.RawBase
  fullName: System.Diagnostics.PerformanceCounterType.RawBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Podstawowy licznik przechowuje mianownika licznika, który przedstawia ogólne ułamek arytmetyczne. Sprawdź, czy ta wartość jest większa niż zero, aby móc używać go jako mianownik w <xref uid=&quot;langword_csharp_RawFraction&quot; name=&quot;RawFraction&quot; href=&quot;&quot;> </xref> wartość obliczeń."
  syntax:
    content: RawBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.RawFraction
  id: RawFraction
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: RawFraction
  nameWithType: PerformanceCounterType.RawFraction
  fullName: System.Diagnostics.PerformanceCounterType.RawFraction
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznika procent natychmiastowe, który pokazuje współczynnik podzestawu do jego zestawu jako procent. Na przykład porównuje liczbę bajtów w użyciu na dysku całkowitą liczbę bajtów na dysku. Liczniki tego typu jest wyświetlany bieżący procent, nie średnią wraz z upływem czasu."
  remarks: "Formula: (N 0 / D 0) x 100, where D 0 represents a measured attribute (using a base counter of type `RawBase`) and N 0 represents one component of that attribute.  \n  \n Counters of this type include Paging File\\\\% Usage Peak."
  syntax:
    content: RawFraction
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleBase
  id: SampleBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleBase
  nameWithType: PerformanceCounterType.SampleBase
  fullName: System.Diagnostics.PerformanceCounterType.SampleBase
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Podstawowy licznik przechowywana jest liczba próbek przerywa podjęte i jest używany jako mianownik w ułamek próbkowania. Ułamek próbkowania jest liczba próbek, które były 1 (lub <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>) dla przerwań próbki. Sprawdź, czy ta wartość jest większa niż zero, przed użyciem go jako denominator obliczania <xref uid=&quot;langword_csharp_SampleFraction&quot; name=&quot;SampleFraction&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: SampleBase
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleCounter
  id: SampleCounter
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleCounter
  nameWithType: PerformanceCounterType.SampleCounter
  fullName: System.Diagnostics.PerformanceCounterType.SampleCounter
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Średnia licznik, który pokazuje średnią liczbę operacji zostało ukończone w ciągu sekundy. Gdy licznik tego typu przykłady, danych, każda próbkowania przerwań zwraca co najmniej zero. Dane liczników jest liczbę tych, które zostały poddane próbkowaniu. Mierzy czasie w jednostkach Takty licznik wydajności systemu."
  remarks: 'Formuła: (1 N — N 0) / ((1 D-D 0) / F), gdy licznik (N) reprezentuje liczba ukończonych operacji denominator (D) reprezentuje czas, który upłynął jednostki Takty licznik wydajności systemu i F reprezentuje liczbę znaczników, które upłynąć w ciągu sekundy. F jest brana pod uwagę w równanie tak, aby wyniki mogą być wyświetlane w sekundach.'
  syntax:
    content: SampleCounter
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.SampleFraction
  id: SampleFraction
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: SampleFraction
  nameWithType: PerformanceCounterType.SampleFraction
  fullName: System.Diagnostics.PerformanceCounterType.SampleFraction
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznika procent, który pokazuje średni współczynnik trafień do wszystkich operacji w ciągu ostatnich dwóch interwałów próbkowania."
  remarks: "Formula: ((N 1 - N 0) / (D 1 - D 0)) x 100, where the numerator represents the number of successful operations during the last sample interval, and the denominator represents the change in the number of all operations (of the type measured) completed during the sample interval, using counters of type `SampleBase`.  \n  \n Counters of this type include Cache\\Pin Read Hits %."
  syntax:
    content: SampleFraction
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.Timer100Ns
  id: Timer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: Timer100Ns
  nameWithType: PerformanceCounterType.Timer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.Timer100Ns
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznika procent, który przedstawia czas aktywności składnika jako procent całkowity czas interwału próbkowania. Mierzy czas w jednostkach 100 nanosekund (ns). Liczniki tego typu są przeznaczone do mierzenia w czasie działania jeden składnik."
  remarks: "Formula: (N 1 - N 0) / (D 1 - D 0) x 100, where the numerator represents the portions of the sample interval during which the monitored components were active, and the denominator represents the total elapsed time of the sample interval.  \n  \n Counters of this type include Processor\\ % User Time."
  syntax:
    content: Timer100Ns
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  id: Timer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  name: Timer100NsInverse
  nameWithType: PerformanceCounterType.Timer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Licznika procent, który przedstawia średnią wartość procentową czasu aktywności zaobserwowaną w przykładowym przedziale czasu."
  remarks: "This is an inverse counter. Counters of this type calculate active time by measuring the time that the service was inactive and then subtracting the percentage of active time from 100 percent.  \n  \n Formula: (1- ((N 1 - N 0) / (D 1 - D 0))) x 100, where the numerator represents the time during the interval when the monitored components were inactive, and the denominator represents the total elapsed time of the sample interval.  \n  \n Counters of this type include Processor\\ % Processor Time."
  syntax:
    content: Timer100NsInverse
    return:
      type: System.Diagnostics.PerformanceCounterType
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Diagnostics.PerformanceCounterType.AverageBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageBase
  nameWithType: PerformanceCounterType.AverageBase
  fullName: System.Diagnostics.PerformanceCounterType.AverageBase
- uid: System.Diagnostics.PerformanceCounterType
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterType
  nameWithType: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
- uid: System.Diagnostics.PerformanceCounterType.AverageCount64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageCount64
  nameWithType: PerformanceCounterType.AverageCount64
  fullName: System.Diagnostics.PerformanceCounterType.AverageCount64
- uid: System.Diagnostics.PerformanceCounterType.AverageTimer32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: AverageTimer32
  nameWithType: PerformanceCounterType.AverageTimer32
  fullName: System.Diagnostics.PerformanceCounterType.AverageTimer32
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterDelta32
  nameWithType: PerformanceCounterType.CounterDelta32
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta32
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterDelta64
  nameWithType: PerformanceCounterType.CounterDelta64
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta64
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiBase
  nameWithType: PerformanceCounterType.CounterMultiBase
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiBase
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer
  nameWithType: PerformanceCounterType.CounterMultiTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer100Ns
  nameWithType: PerformanceCounterType.CounterMultiTimer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimer100NsInverse
  nameWithType: PerformanceCounterType.CounterMultiTimer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterMultiTimerInverse
  nameWithType: PerformanceCounterType.CounterMultiTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
- uid: System.Diagnostics.PerformanceCounterType.CounterTimer
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterTimer
  nameWithType: PerformanceCounterType.CounterTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimer
- uid: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CounterTimerInverse
  nameWithType: PerformanceCounterType.CounterTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CountPerTimeInterval32
  nameWithType: PerformanceCounterType.CountPerTimeInterval32
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: CountPerTimeInterval64
  nameWithType: PerformanceCounterType.CountPerTimeInterval64
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
- uid: System.Diagnostics.PerformanceCounterType.ElapsedTime
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: ElapsedTime
  nameWithType: PerformanceCounterType.ElapsedTime
  fullName: System.Diagnostics.PerformanceCounterType.ElapsedTime
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItems32
  nameWithType: PerformanceCounterType.NumberOfItems32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems32
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItems64
  nameWithType: PerformanceCounterType.NumberOfItems64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems64
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItemsHEX32
  nameWithType: PerformanceCounterType.NumberOfItemsHEX32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: NumberOfItemsHEX64
  nameWithType: PerformanceCounterType.NumberOfItemsHEX64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RateOfCountsPerSecond32
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond32
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RateOfCountsPerSecond64
  nameWithType: PerformanceCounterType.RateOfCountsPerSecond64
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
- uid: System.Diagnostics.PerformanceCounterType.RawBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RawBase
  nameWithType: PerformanceCounterType.RawBase
  fullName: System.Diagnostics.PerformanceCounterType.RawBase
- uid: System.Diagnostics.PerformanceCounterType.RawFraction
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: RawFraction
  nameWithType: PerformanceCounterType.RawFraction
  fullName: System.Diagnostics.PerformanceCounterType.RawFraction
- uid: System.Diagnostics.PerformanceCounterType.SampleBase
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleBase
  nameWithType: PerformanceCounterType.SampleBase
  fullName: System.Diagnostics.PerformanceCounterType.SampleBase
- uid: System.Diagnostics.PerformanceCounterType.SampleCounter
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleCounter
  nameWithType: PerformanceCounterType.SampleCounter
  fullName: System.Diagnostics.PerformanceCounterType.SampleCounter
- uid: System.Diagnostics.PerformanceCounterType.SampleFraction
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: SampleFraction
  nameWithType: PerformanceCounterType.SampleFraction
  fullName: System.Diagnostics.PerformanceCounterType.SampleFraction
- uid: System.Diagnostics.PerformanceCounterType.Timer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: Timer100Ns
  nameWithType: PerformanceCounterType.Timer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.Timer100Ns
- uid: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  isExternal: false
  name: Timer100NsInverse
  nameWithType: PerformanceCounterType.Timer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
