### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  id: IRemoteTypeContract
  children:
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  - System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  langs:
  - csharp
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
  type: Interface
  summary: "Definiuje kontrakt składniki umożliwiają dostęp do informacji o typie i wywoływać elementy członkowskie między granicami domeny i procesu aplikacji."
  remarks: "Aby uzyskać IRemoteTypeContract, składniki można wywołać <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>metody obiektu, który implementuje <xref:System.AddIn.Contract.Automation.IRemoteObjectContract>interfejsu.</xref:System.AddIn.Contract.Automation.IRemoteObjectContract> </xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>       Aby uzyskać informacje o typie obiektu, wywołaj składniki <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A>metody.</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A>       Aby uzyskać informacje o elementach członkowskich obiektu, składniki wywołać jednej z metod, które zwraca informacje dotyczące określonego rodzaju elementu członkowskiego. Na przykład, aby uzyskać informacje o zdarzeniach obiektu, składniki można użyć <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A>lub <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A>metody.</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> </xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A>       Aby wywołać element członkowski obiektu, należy użyć składników <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A>metody.</xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A>"
  syntax:
    content: 'public interface IRemoteTypeContract : System.AddIn.Contract.IContract'
  implements:
  - System.AddIn.Contract.IContract
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  id: GetCanonicalName
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetCanonicalName()
  nameWithType: IRemoteTypeContract.GetCanonicalName()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca bieżącą nazwą <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  remarks: "The canonical name is a globally unique name, such as a fully qualified type name. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public string GetCanonicalName ();
    parameters: []
    return:
      type: System.String
      description: "Nazwa kanoniczna bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvent(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> , który zapewnia dostęp do określonego zdarzenia bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent (string name, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa zdarzenia bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Bitowe połączenie <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> wartości, które określają sposób wyszukiwania dla zdarzenia."
    return:
      type: System.AddIn.Contract.Automation.IRemoteEventInfoContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> , Który zapewnia dostęp do określonego zdarzenia, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvents(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca kolekcję <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> obiektów, które zapewnia dostęp do określonych zdarzeń bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract> GetEvents (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Bitowe połączenie <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> wartości, które określa sposób wyszukać zdarzenia."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteEventInfoContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; z <xref href=&quot;System.AddIn.Contract.Automation.IRemoteEventInfoContract&quot;> </xref> obiektów, które zapewnia dostęp do zdarzeń, które są zgodne z określonymi ograniczeniami wiązania; w przeciwnym razie wartość pustą &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetField(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> , który zapewnia dostęp do określonego pola bieżącej <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField (string name, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa pola z bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Bitowe połączenie <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> wartości, które określają sposób wyszukiwania dla pola."
    return:
      type: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> , Który zapewnia dostęp do określonego pola, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: IRemoteTypeContract.GetFields(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca kolekcję <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> obiektów, które zapewnia dostęp do określonego pola bieżącej <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract> GetFields (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Bitowe połączenie <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> wartości, które określają sposób wyszukiwania dla pól."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteFieldInfoContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; z <xref href=&quot;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&quot;> </xref> obiektów, które zapewnia dostęp do pola, które są zgodne z określonymi ograniczeniami wiązania; w przeciwnym razie wartość pustą &lt;xref:System.AddIn.Contract.Collections.IArrayContract%601&gt;."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  id: GetInterface(System.String)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetInterface(String)
  nameWithType: IRemoteTypeContract.GetInterface(String)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(String)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca interfejs, który jest implementowany przez bieżący <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  remarks: "A canonical name is a globally unique name, such as a GUID. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface (string canonicalName);
    parameters:
    - id: canonicalName
      type: System.String
      description: "Nazwa kanoniczna interfejsu implementowanego przez bieżący <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    return:
      type: System.AddIn.Contract.Automation.IRemoteTypeContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> Czy reprezentuje interfejs z określonym canonical nazwa tego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> implementuje. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> nie implementuje interfejsu o określonej nazwie kanonicznej."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  id: GetInterfaces
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: IRemoteTypeContract.GetInterfaces()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca interfejsy implementowane przez bieżący <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> GetInterfaces ();
    parameters: []
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; z <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> obiekty reprezentujące wszystkie interfejsy implementowane przez bieżący <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca kolekcję <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> obiektów, które zapewnia dostęp do wszystkich członków określonego typu określonego elementu członkowskiego w bieżącym <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>, korzystanie z określonymi ograniczeniami wiązania."
  remarks: "Ta metoda może służyć do pobrania pojedynczego elementu członkowskiego lub wiele elementów członkowskich, które mają taką samą nazwę, np. przeciążenia konstruktora lub metody."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract> GetMember (string name, System.Reflection.MemberTypes memberTypes, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa elementu członkowskiego bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>. Nazwa może reprezentować wiele elementów członkowskich, które mają taką samą nazwę."
    - id: memberTypes
      type: System.Reflection.MemberTypes
      description: "Bitowe połączenie <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> wartości, które określa elementy członkowskie do wyszukania."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Bitowe połączenie <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> wartości, które określają sposób wyszukiwania elementów członkowskich."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; z <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> obiekty reprezentujące członków bieżącej <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> tym określonej nazwy, który spełnia kryteria określone przez <code> memberTypes </code> i <code> bindingFlags </code> parametrów."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMembers(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca kolekcję <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> obiektów, które zapewnia dostęp do wszystkich elementów członkowskich w bieżącym <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> zgodnego z określonymi ograniczeniami wiązania."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract> GetMembers (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Bitowe połączenie <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> wartości, które określają sposób wyszukiwania elementów członkowskich."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; z <xref href=&quot;System.AddIn.Contract.IContract&quot;> </xref> obiektów, które zapewnia dostęp do członków bieżącej <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> zgodne z określonymi ograniczeniami wiązania."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> , który zapewnia dostęp do określonej metody bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> remoteTypes);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa metody bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Bitowe połączenie <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> wartości, które określają sposób wyszukiwania dla metody."
    - id: remoteTypes
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; z <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> obiektów, które reprezentują numer, kolejność i typy parametrów dla metody, aby uzyskać."
    return:
      type: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> , Który zapewnia dostęp do określonej metody, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMethods(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca kolekcję <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> obiektów, które zapewnia dostęp do określonych metod bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract> GetMethods (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Bitowe połączenie <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> wartości, które określają sposób wyszukiwania dla metod."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteMethodInfoContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; z <xref href=&quot;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&quot;> </xref> obiektów, które zapewnia dostęp do metody, które są zgodne z określonymi ograniczeniami wiązania."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: IRemoteTypeContract.GetProperties(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca kolekcję <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> obiektów, które zapewnia dostęp do określonych właściwości bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract> GetProperties (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Bitowe połączenie <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> wartości, które określają sposób wyszukiwania właściwości."
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemotePropertyInfoContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; z <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> obiektów, które zapewnia dostęp do właściwości, które są zgodne z określonymi ograniczeniami wiązania."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca <xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> , który zapewnia dostęp do określonej właściwości bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> remoteTypes);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa właściwości bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Bitowe połączenie <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> wartości, które określają sposób wyszukiwania dla metody."
    - id: remoteReturnType
      type: System.AddIn.Contract.Automation.IRemoteTypeContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> , Który określa zwracany typ właściwości."
    - id: remoteTypes
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: "&lt;Xref:System.AddIn.Contract.Collections.IArrayContract%601&gt; z <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> obiektów, które reprezentują parametry dla określonej właściwości."
    return:
      type: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&quot;> </xref> , Który zapewnia dostęp do określonej właściwości, jeśli je znaleziono; w przeciwnym razie <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  id: GetTypeData
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetTypeData()
  nameWithType: IRemoteTypeContract.GetTypeData()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Zwraca wartość typu informacji o obiekcie bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> identyfikuje."
  syntax:
    content: public System.AddIn.Contract.Automation.RemoteTypeData GetTypeData ();
    parameters: []
    return:
      type: System.AddIn.Contract.Automation.RemoteTypeData
      description: "A <xref href=&quot;System.AddIn.Contract.Automation.RemoteTypeData&quot;> </xref> zawierający informacje o obiekcie, który bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref> identyfikuje."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  nameWithType: IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: "Wywołuje określony element członkowski bieżącego <xref href=&quot;System.AddIn.Contract.Automation.IRemoteTypeContract&quot;> </xref>."
  remarks: "`remoteArgModifiers` Parametr jest używany tylko dla składników, które zostały napisane przy użyciu modelu COM. Każda wartość w `remoteArgModifiers` parametr wskazuje, czy odpowiednie wartości w `remoteArgs` parametr jest przekazywany przez odwołanie. Długość `remoteArgModifiers` powinna być taka sama jak długość `remoteArgs`.       W przypadku przekazania `null` dla `remoteArgModifiers`, ta metoda używa domyślnej logiki w celu określenia, czy argument jest przekazywany przez odwołanie."
  syntax:
    content: public System.AddIn.Contract.RemoteArgument InvokeMember (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteObjectContract target, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int localeId);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa elementu członkowskiego do wywołania."
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: "Bitowe połączenie <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> wartości, które określają sposób wyszukiwania dla elementu członkowskiego."
    - id: target
      type: System.AddIn.Contract.Automation.IRemoteObjectContract
      description: "<xref href=&quot;System.AddIn.Contract.Automation.IRemoteObjectContract&quot;> </xref> Do wywołania określonego elementu członkowskiego."
    - id: remoteArgs
      type: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
      description: "<xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentArrayContract&quot;> </xref> Zawiera argumenty do przekazania do elementu członkowskiego do wywołania."
    - id: remoteArgModifiers
      type: System.Boolean[]
      description: "Tablica wartości logiczne, które wskazują czy każdy z `remoteArgs` wartości jest przekazywana przez odwołanie."
    - id: localeId
      type: System.Int32
      description: "Identyfikator ustawień regionalnych na potrzeby konwersje specyficzne dla ustawień regionalnych, które mogą zostać wykonane przez wywołany element."
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "A <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> reprezentujący wartość zwracaną wywołany element członkowski."
  overload: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember*
  exceptions: []
  platform:
  - net462
references:
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetCanonicalName()
  nameWithType: IRemoteTypeContract.GetCanonicalName()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvent(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(String,BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteEventInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteEventInfoContract
  nameWithType: IRemoteEventInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteEventInfoContract
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvents(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteEventInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteEventInfoContract>
  nameWithType: IArrayContract<IRemoteEventInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteEventInfoContract
    name: IRemoteEventInfoContract
    nameWithType: IRemoteEventInfoContract
    fullName: IRemoteEventInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetField(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(String,BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteFieldInfoContract
  nameWithType: IRemoteFieldInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: IRemoteTypeContract.GetFields(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteFieldInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteFieldInfoContract>
  nameWithType: IArrayContract<IRemoteFieldInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
    name: IRemoteFieldInfoContract
    nameWithType: IRemoteFieldInfoContract
    fullName: IRemoteFieldInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterface(String)
  nameWithType: IRemoteTypeContract.GetInterface(String)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(String)
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterfaces()
  nameWithType: IRemoteTypeContract.GetInterfaces()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces()
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteTypeContract>
  nameWithType: IArrayContract<IRemoteTypeContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteTypeContract
    name: IRemoteTypeContract
    nameWithType: IRemoteTypeContract
    fullName: IRemoteTypeContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IContract>
  nameWithType: IArrayContract<IContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.IContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.IContract
    name: IContract
    nameWithType: IContract
    fullName: IContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMembers(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteMethodInfoContract
  nameWithType: IRemoteMethodInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMethods(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteMethodInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteMethodInfoContract>
  nameWithType: IArrayContract<IRemoteMethodInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
    name: IRemoteMethodInfoContract
    nameWithType: IRemoteMethodInfoContract
    fullName: IRemoteMethodInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: IRemoteTypeContract.GetProperties(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemotePropertyInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemotePropertyInfoContract>
  nameWithType: IArrayContract<IRemotePropertyInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract>
  spec.csharp:
  - uid: System.AddIn.Contract.Collections.IArrayContract`1
    name: IArrayContract
    nameWithType: IArrayContract
    fullName: IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
    name: IRemotePropertyInfoContract
    nameWithType: IRemotePropertyInfoContract
    fullName: IRemotePropertyInfoContract
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
- uid: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemotePropertyInfoContract
  nameWithType: IRemotePropertyInfoContract
  fullName: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetTypeData()
  nameWithType: IRemoteTypeContract.GetTypeData()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData()
- uid: System.AddIn.Contract.Automation.RemoteTypeData
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: RemoteTypeData
  nameWithType: RemoteTypeData
  fullName: System.AddIn.Contract.Automation.RemoteTypeData
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  nameWithType: IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.AddIn.Contract.Automation.IRemoteObjectContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteObjectContract
  nameWithType: IRemoteObjectContract
  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IRemoteArgumentArrayContract
  nameWithType: IRemoteArgumentArrayContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
- uid: System.Boolean[]
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean[]
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetCanonicalName
  nameWithType: IRemoteTypeContract.GetCanonicalName
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvent
  nameWithType: IRemoteTypeContract.GetEvent
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvents
  nameWithType: IRemoteTypeContract.GetEvents
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetField
  nameWithType: IRemoteTypeContract.GetField
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetFields
  nameWithType: IRemoteTypeContract.GetFields
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterface
  nameWithType: IRemoteTypeContract.GetInterface
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterfaces
  nameWithType: IRemoteTypeContract.GetInterfaces
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMember
  nameWithType: IRemoteTypeContract.GetMember
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMembers
  nameWithType: IRemoteTypeContract.GetMembers
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethod
  nameWithType: IRemoteTypeContract.GetMethod
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethods
  nameWithType: IRemoteTypeContract.GetMethods
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperties
  nameWithType: IRemoteTypeContract.GetProperties
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperty
  nameWithType: IRemoteTypeContract.GetProperty
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetTypeData
  nameWithType: IRemoteTypeContract.GetTypeData
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember*
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: InvokeMember
  nameWithType: IRemoteTypeContract.InvokeMember
