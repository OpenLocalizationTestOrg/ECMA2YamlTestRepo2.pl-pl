### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.HttpSessionState
  id: HttpSessionState
  children:
  - System.Web.SessionState.HttpSessionState.Abandon
  - System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  - System.Web.SessionState.HttpSessionState.Clear
  - System.Web.SessionState.HttpSessionState.CodePage
  - System.Web.SessionState.HttpSessionState.Contents
  - System.Web.SessionState.HttpSessionState.CookieMode
  - System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.HttpSessionState.Count
  - System.Web.SessionState.HttpSessionState.GetEnumerator
  - System.Web.SessionState.HttpSessionState.IsCookieless
  - System.Web.SessionState.HttpSessionState.IsNewSession
  - System.Web.SessionState.HttpSessionState.IsReadOnly
  - System.Web.SessionState.HttpSessionState.IsSynchronized
  - System.Web.SessionState.HttpSessionState.Item(System.Int32)
  - System.Web.SessionState.HttpSessionState.Item(System.String)
  - System.Web.SessionState.HttpSessionState.Keys
  - System.Web.SessionState.HttpSessionState.LCID
  - System.Web.SessionState.HttpSessionState.Mode
  - System.Web.SessionState.HttpSessionState.Remove(System.String)
  - System.Web.SessionState.HttpSessionState.RemoveAll
  - System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  - System.Web.SessionState.HttpSessionState.SessionID
  - System.Web.SessionState.HttpSessionState.StaticObjects
  - System.Web.SessionState.HttpSessionState.SyncRoot
  - System.Web.SessionState.HttpSessionState.Timeout
  langs:
  - csharp
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
  type: Class
  summary: "Zapewnia dostęp do wartości stanu sesji oraz ustawienia poziomu sesji i metod zarządzania okres istnienia."
  remarks: "Program ASP.NET udostępnia Zarządzanie stanu sesji, aby umożliwić można przechowywać informacje związane z sesji unikatowe przeglądarki dla wielu żądań. Może przechowywać Kolekcja wartości nazwy klucza lub indeksu liczbowego. Dostęp do wartości sesji i funkcjonalność jest dostępne przy użyciu klasy HttpSessionState, która jest dostępna za pośrednictwem <xref:System.Web.HttpContext.Session%2A>właściwości bieżącego <xref:System.Web.HttpContext>, lub <xref:System.Web.UI.Page.Session%2A>właściwości <xref:System.Web.UI.Page>.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.Session%2A> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Session%2A>       Dane sesji jest skojarzona z sesji przeglądarki określonego za pomocą unikatowego identyfikatora. Domyślnie ten identyfikator jest przechowywana w pliku cookie sesji nie wygasa w przeglądarce, ale można również skonfigurować aplikację do przechowywania identyfikatora sesji w adresie URL przez ustawienie `cookieless` atrybutu `true` lub <xref:System.Web.HttpCookieMode>w elemencie konfiguracji aplikacji.</xref:System.Web.HttpCookieMode> Program ASP.NET, określić, czy pliki cookie są obsługiwane przez przeglądarkę, określając wartość <xref:System.Web.HttpCookieMode>dla `cookieless` atrybutu.</xref:System.Web.HttpCookieMode> Może także zawierać ASP.NET, czy pliki cookie są włączone dla przeglądarki, określając wartość <xref:System.Web.HttpCookieMode>dla `cookieless` atrybutu.</xref:System.Web.HttpCookieMode> Jeśli pliki cookie są obsługiwane podczas <xref:System.Web.HttpCookieMode>jest określony lub włączona, gdy <xref:System.Web.HttpCookieMode>jest określony, a następnie sesji identyfikator będzie przechowywana w pliku cookie; w przeciwnym razie identyfikator sesji będzie przechowywany w adresie URL.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode>       Sesje są uruchamiane podczas pierwszego żądania i wartości sesji zostanie utrzymana tak długo, jak nowe żądanie zostało utworzone przez przeglądarkę przed liczbę minut określoną w <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>Właściwości zaewidencjonowania</xref:System.Web.SessionState.HttpSessionState.Timeout%2A> Rozpoczęcia nowej sesji, sesja <xref:System.Web.SessionState.SessionStateModule.Start>zdarzenie jest wywoływane.</xref:System.Web.SessionState.SessionStateModule.Start> To zdarzenie służy do wykonania żadnych dodatkowych działań na początku sesji, takie jak ustawienie domyślne wartości sesji. Gdy wygaśnie sesja <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>Metoda jest wywoływana lub aplikacji ASP.NET jest wyłączony, sesja <xref:System.Web.SessionState.SessionStateModule.End>zdarzenie jest wywoływane.</xref:System.Web.SessionState.SessionStateModule.End> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> To zdarzenie służy do wykonania niezbędnych oczyszczania. <xref:System.Web.SessionState.SessionStateModule.End>Zdarzenie jest wywoływane tylko wtedy, gdy stan sesji `mode` ustawiono <xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateModule.End>       Aby zwiększyć wydajność, sesje, które używają plików cookie nie zostanie przydzielona magazynu sesji do momentu rzeczywistości przechowywania danych w <xref:System.Web.UI.Page.Session%2A>obiektu.</xref:System.Web.UI.Page.Session%2A> Aby uzyskać więcej informacji, zobacz <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>Właściwości.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       Stan sesji nie zmieniają się w granicach aplikacji ASP.NET. Jeśli przeglądarką przechodzi do innej aplikacji, informacji o sesji nie jest dostępny w nowej aplikacji.       Wartości sesji są domyślnie przechowywane w pamięci na serwerze sieci Web. Można również przechowywać wartości sesji w bazie danych programu SQL Server, serwer stanu ASP.NET lub niestandardowy serwer. Dzięki temu można zachować wartości sesji w przypadkach, gdy ponowne uruchomienie procesu ASP.NET lub usługi IIS lub w aplikacji ASP.NET i udostępnić sesji wartości na wszystkich serwerach w kolektywie serwerów sieci Web. To zachowanie jest skonfigurowana przez ustawienie `mode` atrybutu do prawidłowej <xref:System.Web.SessionState.SessionStateMode>wartość w elemencie konfiguracji aplikacji.</xref:System.Web.SessionState.SessionStateMode> Aby uzyskać więcej informacji, zobacz [tryby stanu sesji](~/add/includes/ajax-current-ext-md.md).       Alternatywy dla stanu sesji obejmują stan aplikacji (zobacz właściwości <xref:System.Web.HttpApplication.Application%2A>) i pamięci podręcznej programu ASP.NET (zobacz <xref:System.Web.Caching>przestrzeni nazw), który przechowywania zmiennych, które są dostępne dla wszystkich użytkowników aplikacji platformy ASP.NET, profilu platformy ASP.NET (zobacz <xref:System.Web.Profile>przestrzeni nazw), który będzie się powtarzał wartości użytkownika w magazynie danych bez wygasa je za pomocą limit czasu; ASP.NET <xref:System.Web.UI.WebControls?displayProperty=fullName>, utrwalić wartości formantu w <xref:System.Web.UI.Control.ViewState%2A>; <xref:System.Web.HttpResponse.Cookies%2A>; <xref:System.Web.HttpRequest.QueryString%2A>Właściwość; i pola formularza HTML, które są dostępne z protokołu HTTP `POST` przy użyciu <xref:System.Web.HttpRequest.Form%2A>kolekcji.</xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpResponse.Cookies%2A> </xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.WebControls?displayProperty=fullName> </xref:System.Web.Profile> </xref:System.Web.Caching> </xref:System.Web.HttpApplication.Application%2A> Więcej szczegółów na temat różnic między stan sesji i alternatywnych Zarządzanie stanem, zobacz [zalecenia dotyczące zarządzania stanu ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example sets and retrieves values from session state.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#30](~/add/codesnippet/csharp/t-system.web.sessionstat_5_1.aspx)]\n [!code-vb[HttpSessionState#30](~/add/codesnippet/visualbasic/t-system.web.sessionstat_5_1.aspx)]"
  syntax:
    content: 'public sealed class HttpSessionState : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Abandon
  id: Abandon
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Anuluje bieżącą sesję."
  remarks: "Gdy wywoływana jest metoda Abandon, bieżącej sesji nie jest już prawidłowe, i będzie można uruchomić nowej sesji. Porzuć przyczyny <xref:System.Web.SessionState.SessionStateModule.End>się zdarzenia.</xref:System.Web.SessionState.SessionStateModule.End> Nowy <xref:System.Web.SessionState.SessionStateModule.Start>zdarzeń zostanie wygenerowany, przy następnym żądaniu.</xref:System.Web.SessionState.SessionStateModule.Start>       Identyfikatory sesji porzuconych wygasłych sesji są poddawane recyklingowi domyślnie. Oznacza to jeśli żądanie zawiera identyfikator sesji dla sesji wygasły lub porzucone, nowej sesji jest uruchomiony przy użyciu tego samego identyfikatora sesji. Można wyłączyć tę opcję, ustawiając `regenerateExpiredSessionId` atrybutu elementu konfiguracji, aby `true`. Aby uzyskać więcej informacji, zobacz [identyfikatory sesji](~/add/includes/ajax-current-ext-md.md).       <xref:System.Web.SessionState.SessionStateModule.End>Zdarzeń jest obsługiwana tylko wtedy, gdy <xref:System.Web.SessionState.HttpSessionState.Mode%2A>wartość właściwości jest równa <xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> </xref:System.Web.SessionState.SessionStateModule.End>"
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Dodaje nowy element do kolekcji stanu sesji."
  remarks: "Jeśli `name` parametr odwołuje się do istniejącego elementu stanu sesji, istniejący element jest zastępowany z określonym `value`."
  example:
  - "The following example shows how to store values in session state by using the Add method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_16_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_16_1.aspx)]"
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa elementu, aby dodać do kolekcji stanu sesji."
    - id: value
      type: System.Object
      description: "Wartość elementu do dodania do kolekcji stanu sesji."
  overload: System.Web.SessionState.HttpSessionState.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Clear
  id: Clear
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Usuwa wszystkie klucze i wartości z kolekcji stanu sesji."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CodePage
  id: CodePage
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera lub ustawia identyfikator zestawu znaków dla bieżącej sesji."
  remarks: "Zestaw znaków (strona kodowa) służy do interpretowania danych znakowych wielobajtowego, określającą wartość znaku i w związku z tym porządek sortowania. Strona kodowa ustawienia dotyczą tylko danych znakowych wielobajtowego, a nie danych znakowych Unicode.       To <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A>właściwości zapewnia zgodność z wcześniejszymi wersjami programu ASP tylko.</xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> Jeśli nie trzeba zachować zgodność z poprzednimi wersjami z strony ASP, użyj <xref:System.Web.HttpResponse.ContentEncoding%2A>Właściwości zamiast.</xref:System.Web.HttpResponse.ContentEncoding%2A>"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "Identyfikator zestawu znaków dla bieżącej sesji."
  overload: System.Web.SessionState.HttpSessionState.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Contents
  id: Contents
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera odwołanie do bieżącego obiektu stanu sesji."
  remarks: "Właściwość zawartości jest zapewnia zgodność z wcześniejszymi wersjami programu ASP."
  example:
  - "The following code example lists the item names and values in the Contents property.  \n  \n [!code-cs[HttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_8_1.aspx)]\n [!code-vb[HttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_8_1.aspx)]"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Contents { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "Bieżący <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.Contents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera wartość wskazującą, czy aplikacja jest skonfigurowana pod kątem sesje bez plików cookie."
  remarks: "Gdy <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>jest `true`, właściwość CookieMode zwraca <xref:System.Web.HttpCookieMode>; w przeciwnym razie zwraca wartość właściwości CookieMode <xref:System.Web.HttpCookieMode>.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> </xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - "The following code example sets the `cookieless` session attribute to `true` in the Web.config file. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "Jeden z <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> wartości, które wskazują, czy aplikacja jest skonfigurowana pod kątem sesje bez plików cookie. Wartość domyślna to <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Kopiuje kolekcję wartości stanu sesji jednowymiarowej tablicy, zaczynając od określonego indeksu tablicy."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array>Odbierająca wartości sesji.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w `array` , od którego rozpocznie się kopiowanie."
  overload: System.Web.SessionState.HttpSessionState.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Count
  id: Count
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera liczbę elementów w kolekcji stanu sesji."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Liczba elementów w kolekcji."
  overload: System.Web.SessionState.HttpSessionState.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Zwraca moduł wyliczający, który może służyć do odczytu wszystkich nazwy zmiennych stanu sesji w bieżącej sesji."
  remarks: ''
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The GetEnumerator method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_14_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_14_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Który iterację nazwy zmiennych w kolekcji stanu sesji.</xref:System.Collections.IEnumerator>"
  overload: System.Web.SessionState.HttpSessionState.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera wartość wskazującą, czy identyfikator sesji jest osadzony w adresie URL lub przechowywane w pliku cookie HTTP."
  remarks: "ASP.NET unikatowo identyfikuje sesje z każdą przeglądarkę. Domyślnie unikatowy identyfikator sesji są przechowywane w pliku cookie sesji nie wygasa w przeglądarce. Można określić, że identyfikatory sesji nie można zapisać w pliku cookie przez ustawienie `cookieless` atrybutu `true` w elemencie konfiguracji.      > [!NOTE] > Dotyczące poprawy zabezpieczeń aplikacji, aplikacji należy umożliwić użytkownikom Wyloguj się, w którym powinny wywoływać <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metody.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Zmniejsza to potencjalnie niechciane źródła przy użyciu Unikatowy identyfikator w adresie URL można pobrać prywatnych danych przechowywanych w sesji użytkownika.       ASP.NET przechowuje stan sesji bez plików cookie przez automatyczne wstawianie Unikatowy identyfikator sesji do adresu URL strony. Na przykład następujący adres URL został zmodyfikowany przez platformę ASP.NET, aby uwzględnić lit3py55t21z5v55vlm25s55 identyfikator sesji unikatowy: ```   http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx   ``` ASP.NET modyfikuje linkami na wszystkich stronach żądanych poprzez zastosowanie wartości Identyfikatora sesji łącza przed wysłaniem każdej strony w przeglądarce. Stan sesji jest zachowywana tak długo, jak długo użytkownik wykonuje ścieżkę łącza, które udostępnia lokacji. Jednak jeśli agent użytkownika ponownie zapisuje adresu URL, wystąpienie stanu sesji zostaną utracone.       Identyfikator sesji jest osadzony w adresie URL po ukośnika, który następuje nazwa aplikacji, a przed wszelkie pozostałe identyfikator pliku lub katalogu wirtualnego. Dzięki temu program ASP.NET do rozpoznania nazwy aplikacji przed obejmujące <xref:System.Web.SessionState.SessionStateModule>w żądaniu.</xref:System.Web.SessionState.SessionStateModule>       Domyślnie identyfikatory sesji używane w sesji bez plików cookie są odzyskiwane. Oznacza to jeśli żądanie jest identyfikatorem sesji, który wygasł, w nowej sesji jest uruchomiony przy użyciu Identyfikatora sesji dostarczone z żądaniem. To zachowanie może spowodować niepożądane udostępniania danych sesji, gdy łącza, który zawiera identyfikator sesji bez plików cookie jest udostępniany różnych przeglądarkach, być może przez aparat wyszukiwania lub inny program. Można zmniejszyć prawdopodobieństwo wystąpienia dane sesji jest udostępniany przez wielu klientów, wyłączając odtwarzania identyfikatorów sesji. Aby to zrobić, ustaw `regenerateExpiredSessionId` atrybutu elementu konfiguracji, aby `true`. Spowoduje to nowy identyfikator sesji generowany, gdy żądanie sesji bez plików cookie z identyfikatorem wygasłych sesji. Należy pamiętać, że jeśli żądanie o identyfikatorze wygasłych sesji używa HTTP `POST` metody, a następnie wszystkie przesłane dane zostaną utracone `regenerateExpiredSessionId` jest `true`, ponieważ ASP.NET wykonuje przekierowanie do upewnij się, że przeglądarka ma identyfikator nowej sesji w adresie URL.      > [!NOTE] > Podczas ustawienie `regenerateExpiredSessionId` atrybutu `true` zmniejsza prawdopodobieństwo niechciane udostępniania danych sesji nie chroni przed źródła niechciane uzyskanie dostępu do sesji innego użytkownika, uzyskując <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>wartość i dołączenie go do żądań do serwera.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Jeśli w stanie sesji są przechowywane informacje poufne lub prywatnych, zaleca się używać protokołu SSL do szyfrowania wszelkich komunikacji między przeglądarką i serwerem, który zawiera <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>"
  example:
  - "The following code example sets the `cookieless` session attribute to true in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli sesja jest osadzony w adresie URL; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera wartość wskazującą, czy sesja została utworzona z bieżącego żądania."
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli sesja została utworzona z bieżącym żądaniem; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera wartość wskazującą, czy sesja jest tylko do odczytu."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli sesja jest tylko do odczytu. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera wartość wskazującą, czy dostęp do kolekcji wartości stanu sesji jest zsynchronizowany (wielowątkowość)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dostęp do kolekcji jest synchronizowane (wielowątkowość); w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera lub ustawia wartość sesji przez indeksu liczbowego."
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Indeksu liczbowego wartości sesji."
    return:
      type: System.Object
      description: "Wartość stanu sesji przechowywaną w określonym indeksie lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli element nie istnieje."
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera lub ustawia wartość sesji według nazwy."
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "Nazwa klucza sesji wartości."
    return:
      type: System.Object
      description: "Wartość stanu sesji o określonej nazwie lub <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Jeśli element nie istnieje."
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Keys
  id: Keys
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera kolekcję kluczy dla wszystkich wartości przechowywane w kolekcji stanu sesji."
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "<xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>Zawierający klucze sesji.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Web.SessionState.HttpSessionState.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.LCID
  id: LCID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera lub ustawia identyfikator ustawień regionalnych (LCID) w bieżącej sesji."
  remarks: "Właściwość LCID jest zapewnia zgodność z wcześniejszymi wersjami programu ASP tylko. Jeśli nie trzeba zachować zgodność z poprzednimi wersjami z strony ASP, użyj <xref:System.Globalization.CultureInfo.LCID%2A>Właściwości zamiast.</xref:System.Globalization.CultureInfo.LCID%2A>       Program ASP.NET nie przechowuje identyfikator ustawień regionalnych w stanie sesji. Właściwość LCID uzyskuje dostęp do <xref:System.Globalization.CultureInfo.LCID%2A>właściwości do pobierania i ustawiania identyfikatora.</xref:System.Globalization.CultureInfo.LCID%2A>"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Globalization.CultureInfo>wystąpienia, który określa kulturę bieżącej sesji.</xref:System.Globalization.CultureInfo>"
  overload: System.Web.SessionState.HttpSessionState.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Mode
  id: Mode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera bieżący tryb stanu sesji."
  remarks: "Aby uzyskać informacje o sposobie konfigurowania serwera na potrzeby <xref:System.Web.SessionState.SessionStateMode>lub <xref:System.Web.SessionState.SessionStateMode>magazynu stanu sesji, zobacz [przegląd stanu sesji ASP.NET](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode>"
  example:
  - "The following code example sets the `mode` session attribute to <xref:System.Web.SessionState.SessionStateMode> in the Web.config file. For SQL Server session mode, the `sqlConnectionString` attribute is also required.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"SQLServer\"  \n      sqlConnectionString=\"Data Source=localhost;Integrated Security=SSPI\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "Jeden z <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> wartości."
  overload: System.Web.SessionState.HttpSessionState.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Usuwa element z kolekcji stanu sesji."
  remarks: "Jeśli kolekcja stan sesji nie zawiera element z określonym `name`, połączenie pozostaje niezmieniona. Nie wyjątek."
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the Remove method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_6_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_6_1.aspx)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa elementu do usunięcia z kolekcji stanu sesji."
  overload: System.Web.SessionState.HttpSessionState.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Usuwa wszystkie klucze i wartości z kolekcji stanu sesji."
  remarks: "RemoveAll wykonuje taką samą funkcję jak <xref:System.Web.SessionState.HttpSessionState.Clear%2A>.</xref:System.Web.SessionState.HttpSessionState.Clear%2A>"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Usuwa element pod określonym indeksem z kolekcji stanu sesji."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indeks elementu do usunięcia z kolekcji stanu sesji."
  overload: System.Web.SessionState.HttpSessionState.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is equal to or greater than <xref:System.Web.SessionState.HttpSessionState.Count*>."
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SessionID
  id: SessionID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera unikatowy identyfikator sesji."
  remarks: "Identyfikator sesji jest używana do unikatowej identyfikacji przeglądarki z danych sesji na serwerze. Wartość identyfikatora sesji jest losowo generowany przez platformę ASP.NET i przechowywane w pliku cookie sesji nie wygasa w przeglądarce. Wartość identyfikatora sesji zostanie przesłany w pliku cookie z każdego żądania do aplikacji ASP.NET.       Aby zablokować używanie plików cookie w aplikacji ASP.NET i nadal należy używać stanu sesji, można skonfigurować aplikację do przechowywania identyfikatora sesji w adresie URL zamiast pliku cookie, ustawiając `cookieless` atrybutu elementu konfiguracji, aby `true`, lub do <xref:System.Web.HttpCookieMode>, w pliku Web.config aplikacji.</xref:System.Web.HttpCookieMode> Program ASP.NET, określić, czy pliki cookie są obsługiwane przez przeglądarkę, określając wartość <xref:System.Web.HttpCookieMode>dla `cookieless` atrybutu.</xref:System.Web.HttpCookieMode> Może także zawierać ASP.NET, czy pliki cookie są włączone dla przeglądarki, określając wartość <xref:System.Web.HttpCookieMode>dla `cookieless` atrybutu.</xref:System.Web.HttpCookieMode> Jeśli pliki cookie są obsługiwane podczas <xref:System.Web.HttpCookieMode>jest określony lub włączona, gdy <xref:System.Web.HttpCookieMode>jest określony, a następnie sesji identyfikator będzie przechowywana w pliku cookie; w przeciwnym razie identyfikator sesji będzie przechowywany w adresie URL.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> Aby uzyskać więcej informacji, zobacz <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>Właściwości.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>       Identyfikator sesji jest wysyłany między serwerem i przeglądarki w postaci zwykłego tekstu, w pliku cookie lub w adresie URL. W związku z tym źródłem niechciane może uzyskać dostęp do sesji innego użytkownika uzyskując wartość identyfikatora sesji i dołączenie go do żądań do serwera. Jeśli w stanie sesji są przechowywane informacje poufne lub prywatnych, zaleca się używać protokołu SSL do szyfrowania wszelkich komunikacji między przeglądarką i serwerem, który zawiera identyfikator sesji.       Korzystając z stanu sesji na podstawie plików cookie, ASP.NET nie przydzielić magazyn danych sesji do <xref:System.Web.UI.Page.Session%2A>obiekt jest używany.</xref:System.Web.UI.Page.Session%2A> W związku z tym nowy identyfikator sesji jest generowany dla każdego żądania strony, aż do uzyskiwania dostępu do obiektu session. Jeśli aplikacja wymaga Identyfikatora sesji statycznych dla całej sesji, możesz albo zaimplementuj `Session_Start` metody w pliku Global.asax aplikacji i przechowywać dane w <xref:System.Web.UI.Page.Session%2A>obiekt ustalenie identyfikator sesji lub kod w innej części aplikacji służy do jawnie przechowywania danych w <xref:System.Web.UI.Page.Session%2A>obiektu.</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.Page.Session%2A>       Jeśli aplikacja używa stanu sesji bez plików cookie, identyfikator sesji jest generowany na pierwszy widok strony i jest zachowywana na potrzeby całej sesji."
  example:
  - "The following code example shows a Web.config file that configures session state to use cookieless session identifiers. For more information, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "Identyfikator unikatowy sesji."
  overload: System.Web.SessionState.HttpSessionState.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera kolekcję obiektów deklarowana przez <xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;> </xref> tagów w pliku Global.asax aplikacji ASP.NET."
  remarks: "Jeśli obiekt na stronie nie obsługuje serializacji i <xref:System.Web.SessionState.HttpSessionState.Mode%2A>jest out-of-process (<xref:System.Web.SessionState.SessionStateMode> lub <xref:System.Web.SessionState.SessionStateMode>), obiekt nie zostanie utworzona i nie zostanie dodany do tej kolekcji.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       Właściwość StaticObjects jest zapewnia zgodność z wcześniejszymi wersjami programu ASP."
  example:
  - "The following code example lists the `id` and object type of the objects in the StaticObjects collection.  \n  \n [!code-cs[HttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_9_1.aspx)]\n [!code-vb[HttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_9_1.aspx)]"
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "<xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> Zawierających obiekty zadeklarowany w pliku Global.asax."
  overload: System.Web.SessionState.HttpSessionState.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera obiekt, który może służyć do synchronizujący dostęp do kolekcji wartości stanu sesji."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Obiekt, który może służyć do synchronizujący dostęp do kolekcji."
  overload: System.Web.SessionState.HttpSessionState.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Timeout
  id: Timeout
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Pobiera i ustawia ilość czasu (w minutach) między żądań przed dostawcę stanu sesji zakończenia sesji."
  remarks: "Można ustawić właściwości Timeout w pliku Web.config aplikacji przy użyciu `timeout` atrybut element konfiguracji, lub można ustawić wartości właściwości Timeout bezpośrednio przy użyciu kodu aplikacji.       Właściwości Timeout nie można ustawić na wartość większą niż 525,600 minut (1 rok). Wartość domyślna to 20 minut."
  example:
  - "The following code example sets the `timeout` session attribute to 30 minutes in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "Okres limitu czasu w minutach."
  overload: System.Web.SessionState.HttpSessionState.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.SessionState.HttpSessionState.Abandon
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.HttpSessionState.Clear
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
- uid: System.Web.SessionState.HttpSessionState.CodePage
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.HttpSessionState.Contents
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.HttpSessionState.Count
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
- uid: System.Web.SessionState.HttpSessionState.Keys
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.HttpSessionState.LCID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
- uid: System.Web.SessionState.HttpSessionState.SessionID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
- uid: System.Web.SessionState.HttpSessionState.Abandon*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon
  nameWithType: HttpSessionState.Abandon
- uid: System.Web.SessionState.HttpSessionState.Add*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add
  nameWithType: HttpSessionState.Add
- uid: System.Web.SessionState.HttpSessionState.Clear*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear
  nameWithType: HttpSessionState.Clear
- uid: System.Web.SessionState.HttpSessionState.CodePage*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
- uid: System.Web.SessionState.HttpSessionState.Contents*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState.CookieMode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo
  nameWithType: HttpSessionState.CopyTo
- uid: System.Web.SessionState.HttpSessionState.Count*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpSessionState.GetEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
- uid: System.Web.SessionState.HttpSessionState.IsNewSession*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item
  nameWithType: HttpSessionState.Item
- uid: System.Web.SessionState.HttpSessionState.Keys*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
- uid: System.Web.SessionState.HttpSessionState.LCID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
- uid: System.Web.SessionState.HttpSessionState.Remove*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove
  nameWithType: HttpSessionState.Remove
- uid: System.Web.SessionState.HttpSessionState.RemoveAll*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll
  nameWithType: HttpSessionState.RemoveAll
- uid: System.Web.SessionState.HttpSessionState.RemoveAt*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt
  nameWithType: HttpSessionState.RemoveAt
- uid: System.Web.SessionState.HttpSessionState.SessionID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
- uid: System.Web.SessionState.HttpSessionState.SyncRoot*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
