### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationPropertyAttribute
  id: ConfigurationPropertyAttribute
  children:
  - System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
  - System.Configuration.ConfigurationPropertyAttribute.DefaultValue
  - System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
  - System.Configuration.ConfigurationPropertyAttribute.IsKey
  - System.Configuration.ConfigurationPropertyAttribute.IsRequired
  - System.Configuration.ConfigurationPropertyAttribute.Name
  - System.Configuration.ConfigurationPropertyAttribute.Options
  langs:
  - csharp
  name: ConfigurationPropertyAttribute
  nameWithType: ConfigurationPropertyAttribute
  fullName: System.Configuration.ConfigurationPropertyAttribute
  type: Class
  summary: "Deklaratywnie program .NET Framework w celu utworzenia wystąpienia właściwości konfiguracji. Ta klasa nie może być dziedziczona."
  remarks: "ConfigurationPropertyAttribute służy do dekoracji właściwości konfiguracji, które zostanie nakazać .NET Framework, można utworzyć wystąpienia i zainicjuj właściwość za pomocą wartości parametru decorating.      > [!NOTE] > Najprostszym sposobem, aby utworzyć element konfiguracji niestandardowej jest użycie oparte na atrybutach modelu (deklaratywne). Deklarowanie niestandardowe właściwości publiczne i dekoracji je z atrybutem ConfigurationPropertyAttribute. Dla każdej właściwości z tym atrybutem programu .NET Framework używa odbicia do odczytu decorating parametrów i tworzenie powiązanych <xref:System.Configuration.ConfigurationProperty>wystąpienia.</xref:System.Configuration.ConfigurationProperty> Można również użyć programowe modelu, w tym przypadku jest obowiązek zadeklarować niestandardowe właściwości publiczne i zwracać ich kolekcji.       System konfiguracji .NET Framework zapewnia typy atrybutów, których można użyć podczas tworzenia elementów konfiguracji niestandardowej. Istnieją dwa rodzaje typy atrybutów: 1.  Typy poinstruowanie sposobu tworzenia wystąpienia właściwości niestandardowych elementu konfiguracji programu .NET Framework. Należą do:- <xref:System.Configuration.ConfigurationCollectionAttribute>-ConfigurationPropertyAttribute 2.</xref:System.Configuration.ConfigurationCollectionAttribute>  Typy poinstruowanie sprawdzania poprawności właściwości niestandardowych elementu konfiguracji programu .NET Framework. These types include:          -   <xref:System.Configuration.IntegerValidatorAttribute>          -   <xref:System.Configuration.LongValidatorAttribute>          -   <xref:System.Configuration.RegexStringValidatorAttribute>          -   <xref:System.Configuration.StringValidatorAttribute>          -   <xref:System.Configuration.TimeSpanValidatorAttribute></xref:System.Configuration.TimeSpanValidatorAttribute></xref:System.Configuration.StringValidatorAttribute></xref:System.Configuration.RegexStringValidatorAttribute></xref:System.Configuration.LongValidatorAttribute></xref:System.Configuration.IntegerValidatorAttribute>"
  example:
  - "The following example shows how to define the properties of a custom <xref:System.Configuration.ConfigurationSection> object using the ConfigurationPropertyAttribute attribute.  \n  \n The example contains two classes. The `UrlsSection` custom class uses the ConfigurationPropertyAttribute to define its own properties. The `UsingConfigurationPropertyAttribute` class uses the `UrlsSection` to read and write the custom section in the application configuration file.  \n  \n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#1](~/add/codesnippet/csharp/t-system.configuration.c_21_1.cs)]\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#1](~/add/codesnippet/visualbasic/t-system.configuration.c_21_1.vb)]  \n  \n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#21](~/add/codesnippet/visualbasic/t-system.configuration.c_21_2.vb)]\n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#21](~/add/codesnippet/csharp/t-system.configuration.c_21_2.cs)]  \n  \n The following is an excerpt of the configuration file containing the custom section as defined in the previous sample.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<configuration>  \n    <configSections>  \n        <section name=\"CustomSection\" type=\"UrlsSection, UsingConfigurationPropertyAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" />  \n    </configSections>  \n    <CustomSection name=\"Contoso\" url=\"http://www.contoso.com\" />  \n</configuration>  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property)]

      public sealed class ConfigurationPropertyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: ConfigurationPropertyAttribute(String)
  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)
  fullName: System.Configuration.ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Configuration.ConfigurationPropertyAttribute&quot;> </xref> klasy."
  syntax:
    content: public ConfigurationPropertyAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> obiekt zdefiniowany."
  overload: System.Configuration.ConfigurationPropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue
  id: DefaultValue
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ConfigurationPropertyAttribute.DefaultValue
  fullName: System.Configuration.ConfigurationPropertyAttribute.DefaultValue
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia wartość domyślna właściwości dekorowany."
  remarks: ''
  example:
  - "The following example shows how to use the DefaultValue property.  \n  \n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/csharp/p-system.configuration.c_19_1.cs)]\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/visualbasic/p-system.configuration.c_19_1.vb)]"
  syntax:
    content: public object DefaultValue { get; set; }
    return:
      type: System.Object
      description: "Obiekt reprezentujący wartość domyślna właściwości ozdobione element konfiguracji."
  overload: System.Configuration.ConfigurationPropertyAttribute.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
  id: IsDefaultCollection
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: IsDefaultCollection
  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia wartość wskazującą, czy jest to domyślny zbiór właściwości dla właściwości ozdobione konfiguracji."
  remarks: "Wartość właściwości IsDefaultCollection jest ignorowana, jeśli właściwość ozdobione nie jest kolekcją."
  syntax:
    content: public bool IsDefaultCollection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli właściwość reprezentuje domyślnej kolekcji elementu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey
  id: IsKey
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: IsKey
  nameWithType: ConfigurationPropertyAttribute.IsKey
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsKey
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia wartość wskazującą, czy jest właściwością klucza dla właściwości ozdobione elementu."
  remarks: "Właściwość IsKey jest stosowana tylko wtedy, gdy właściwość, którą można dekoracji jest kolekcją. Nie ma żadnego efektu, jeśli właściwość nie jest kolekcją. Wiele elementów może być oznaczony jako IsKey."
  example:
  - "The following example shows how to use the IsKey property.  \n  \n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#2](~/add/codesnippet/csharp/p-system.configuration.c_4_1.cs)]\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#2](~/add/codesnippet/visualbasic/p-system.configuration.c_4_1.vb)]"
  syntax:
    content: public bool IsKey { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli właściwość jest właściwością klucza dla elementu kolekcji; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationPropertyAttribute.IsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired
  id: IsRequired
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: IsRequired
  nameWithType: ConfigurationPropertyAttribute.IsRequired
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia wartość wskazującą, czy właściwość ozdobione element jest wymagany."
  remarks: ''
  example:
  - "The following example shows how to use the <xref:System.Configuration.ConfigurationPropertyAttribute.DefaultValue%2A> property.  \n  \n [!code-cs[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/csharp/p-system.configuration.c_44_1.cs)]\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#3](~/add/codesnippet/visualbasic/p-system.configuration.c_44_1.vb)]"
  syntax:
    content: public bool IsRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli właściwość jest wymagana; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationPropertyAttribute.IsRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.Name
  id: Name
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ConfigurationPropertyAttribute.Name
  fullName: System.Configuration.ConfigurationPropertyAttribute.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera nazwę właściwości ozdobione element konfiguracji."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Nazwa właściwości ozdobione element konfiguracji."
  overload: System.Configuration.ConfigurationPropertyAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPropertyAttribute.Options
  id: Options
  parent: System.Configuration.ConfigurationPropertyAttribute
  langs:
  - csharp
  name: Options
  nameWithType: ConfigurationPropertyAttribute.Options
  fullName: System.Configuration.ConfigurationPropertyAttribute.Options
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Pobiera lub ustawia <xref href=&quot;System.Configuration.ConfigurationPropertyOptions&quot;> </xref> dla właściwości ozdobione element konfiguracji."
  syntax:
    content: public System.Configuration.ConfigurationPropertyOptions Options { get; set; }
    return:
      type: System.Configuration.ConfigurationPropertyOptions
      description: "Jeden z <xref href=&quot;System.Configuration.ConfigurationPropertyOptions&quot;> </xref> skojarzony z właściwością wartości wyliczenia."
  overload: System.Configuration.ConfigurationPropertyAttribute.Options*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: ConfigurationPropertyAttribute(String)
  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)
  fullName: System.Configuration.ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ConfigurationPropertyAttribute.DefaultValue
  fullName: System.Configuration.ConfigurationPropertyAttribute.DefaultValue
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsDefaultCollection
  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsKey
  nameWithType: ConfigurationPropertyAttribute.IsKey
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsKey
- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsRequired
  nameWithType: ConfigurationPropertyAttribute.IsRequired
  fullName: System.Configuration.ConfigurationPropertyAttribute.IsRequired
- uid: System.Configuration.ConfigurationPropertyAttribute.Name
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ConfigurationPropertyAttribute.Name
  fullName: System.Configuration.ConfigurationPropertyAttribute.Name
- uid: System.Configuration.ConfigurationPropertyAttribute.Options
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: Options
  nameWithType: ConfigurationPropertyAttribute.Options
  fullName: System.Configuration.ConfigurationPropertyAttribute.Options
- uid: System.Configuration.ConfigurationPropertyOptions
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyOptions
  nameWithType: ConfigurationPropertyOptions
  fullName: System.Configuration.ConfigurationPropertyOptions
- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: ConfigurationPropertyAttribute
  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute
- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: DefaultValue
  nameWithType: ConfigurationPropertyAttribute.DefaultValue
- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsDefaultCollection
  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection
- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsKey
  nameWithType: ConfigurationPropertyAttribute.IsKey
- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: IsRequired
  nameWithType: ConfigurationPropertyAttribute.IsRequired
- uid: System.Configuration.ConfigurationPropertyAttribute.Name*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: Name
  nameWithType: ConfigurationPropertyAttribute.Name
- uid: System.Configuration.ConfigurationPropertyAttribute.Options*
  parent: System.Configuration.ConfigurationPropertyAttribute
  isExternal: false
  name: Options
  nameWithType: ConfigurationPropertyAttribute.Options
