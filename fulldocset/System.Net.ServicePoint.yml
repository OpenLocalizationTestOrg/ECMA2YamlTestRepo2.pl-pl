### YamlMime:ManagedReference
items:
- uid: System.Net.ServicePoint
  id: ServicePoint
  children:
  - System.Net.ServicePoint.Address
  - System.Net.ServicePoint.BindIPEndPointDelegate
  - System.Net.ServicePoint.Certificate
  - System.Net.ServicePoint.ClientCertificate
  - System.Net.ServicePoint.CloseConnectionGroup(System.String)
  - System.Net.ServicePoint.ConnectionLeaseTimeout
  - System.Net.ServicePoint.ConnectionLimit
  - System.Net.ServicePoint.ConnectionName
  - System.Net.ServicePoint.CurrentConnections
  - System.Net.ServicePoint.Expect100Continue
  - System.Net.ServicePoint.IdleSince
  - System.Net.ServicePoint.MaxIdleTime
  - System.Net.ServicePoint.ProtocolVersion
  - System.Net.ServicePoint.ReceiveBufferSize
  - System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  - System.Net.ServicePoint.SupportsPipelining
  - System.Net.ServicePoint.UseNagleAlgorithm
  langs:
  - csharp
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
  type: Class
  summary: "Umożliwia zarządzanie połączenia dla połączenia HTTP."
  remarks: "Klasa ServicePoint obsługuje połączenia z zasobem internetowym na podstawie informacji o hoście przekazane w zasobu URI Uniform Resource Identifier (). Początkowego połączenia z zasobem określa obiekt ServicePoint zachowuje, który następnie jest współużytkowana przez wszystkie kolejne żądania do tego zasobu informacji.       Obiekty ServicePoint są zarządzane przez <xref:System.Net.ServicePointManager>klasy i są tworzone, jeśli jest to konieczne, <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName>metody.</xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName> </xref:System.Net.ServicePointManager> Obiekty ServicePoint nigdy nie są tworzone bezpośrednio, ale są zawsze tworzone i zarządzane przez <xref:System.Net.ServicePointManager>klasę.</xref:System.Net.ServicePointManager> Maksymalna liczba obiektów ServicePoint, które mogą być tworzone jest ustawiana przez <xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName>Właściwości.</xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName>       Każdy obiekt ServicePoint obsługuje połączenia z zasobem internetowym dopóki zostanie bezczynności dłużej niż przez czas określony w <xref:System.Net.ServicePoint.MaxIdleTime%2A>Właściwości.</xref:System.Net.ServicePoint.MaxIdleTime%2A> Gdy przekracza ServicePoint <xref:System.Net.ServicePoint.MaxIdleTime%2A>wartość, może być przetworzony ponownie, aby inne połączenie.</xref:System.Net.ServicePoint.MaxIdleTime%2A> Wartość domyślna <xref:System.Net.ServicePoint.MaxIdleTime%2A>jest ustawiana przez <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName>Właściwości.</xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> </xref:System.Net.ServicePoint.MaxIdleTime%2A>       Gdy <xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A>właściwość jest ustawiona na wartość inną niż -1, a po upływie określonego czasu, ServicePoint aktywne połączenie jest zamknięte po jej usług następnego żądania.</xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A> Jest to przydatne w przypadku aplikacji, które nie wymagają aktywnych połączeń, które są otwierane przez czas nieokreślony, ponieważ są one domyślnie.      > [!NOTE] > W warunkach wysokie obciążenie niektórych aplikacji może zabraknąć wolnych wątków w puli wątków, co może prowadzić do wydajności niską systemu (na przykład razy transakcji wysokiej i zmiennej). Zobacz [http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) liczby zmian konfiguracji, możesz wprowadzić, aby rozwiązać ten problem."
  example:
  - "The following code example creates a ServicePoint object that connects to the URI www.contoso.com.  \n  \n [!code-cpp[System.Net.ServicePoint#1](~/add/codesnippet/cpp/t-system.net.servicepoint_1.cpp)]\n [!code-vb[System.Net.ServicePoint#1](~/add/codesnippet/visualbasic/t-system.net.servicepoint_1.vb)]\n [!code-cs[System.Net.ServicePoint#1](~/add/codesnippet/csharp/t-system.net.servicepoint_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.CompilerServices.FriendAccessAllowed]

      public class ServicePoint
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.ServicePoint.Address
  id: Address
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: Address
  nameWithType: ServicePoint.Address
  fullName: System.Net.ServicePoint.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera jednolity identyfikator zasobów (URI) serwera, który to <xref href=&quot;System.Net.ServicePoint&quot;> </xref> łączy się z obiektu."
  remarks: ''
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#2](~/add/codesnippet/cpp/p-system.net.servicepoin_3_1.cpp)]\n [!code-vb[System.Net.ServicePoint#2](~/add/codesnippet/visualbasic/p-system.net.servicepoin_3_1.vb)]\n [!code-cs[System.Net.ServicePoint#2](~/add/codesnippet/csharp/p-system.net.servicepoin_3_1.cs)]"
  syntax:
    content: public Uri Address { get; }
    return:
      type: System.Uri
      description: "Wystąpienie <xref:System.Uri>klasę, która zawiera identyfikator URI serwera internetowego tego <xref href=&quot;System.Net.ServicePoint&quot;> </xref> łączy się z obiektu.</xref:System.Uri>"
  overload: System.Net.ServicePoint.Address*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Net.ServicePoint&quot;> </xref> Jest w trybie hosta."
  platform:
  - net462
- uid: System.Net.ServicePoint.BindIPEndPointDelegate
  id: BindIPEndPointDelegate
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: BindIPEndPointDelegate
  nameWithType: ServicePoint.BindIPEndPointDelegate
  fullName: System.Net.ServicePoint.BindIPEndPointDelegate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Określa pełnomocnika, aby skojarzyć lokalnym <xref:System.Net.IPEndPoint>z <xref href=&quot;System.Net.ServicePoint&quot;> </xref>.</xref:System.Net.IPEndPoint>"
  remarks: "Niektóre techniki równoważenia obciążenia wymagają klienta do używania określonych lokalnego IP adres i numer portu, a nie <xref:System.Net.IPAddress.Any?displayProperty=fullName>(lub <xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName>dla Internet Protocol wersja 6) i portu tymczasowych</xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName> </xref:System.Net.IPAddress.Any?displayProperty=fullName> BindIPEndPointDelegate użytkownika spełnia tego wymagania."
  syntax:
    content: public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }
    return:
      type: System.Net.BindIPEndPoint
      description: "Delegata, który wymusza <xref href=&quot;System.Net.ServicePoint&quot;> </xref> do używania konkretnego lokalnego protokołu internetowego (IP) adres i numer portu. Wartość domyślna to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.BindIPEndPointDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.Certificate
  id: Certificate
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: Certificate
  nameWithType: ServicePoint.Certificate
  fullName: System.Net.ServicePoint.Certificate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera certyfikat odebrany w tym <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiektu."
  remarks: "Mimo że <xref:System.Net.ServicePoint>obiektu można wprowadzać wiele połączeń do zasobu internetowego, można zachować tylko jeden certyfikat.</xref:System.Net.ServicePoint>"
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_1_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_1_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_1_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Wystąpienie <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> klasy, który zawiera certyfikat zabezpieczeń otrzymano dla tego <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiektu."
  overload: System.Net.ServicePoint.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.ClientCertificate
  id: ClientCertificate
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ClientCertificate
  nameWithType: ServicePoint.ClientCertificate
  fullName: System.Net.ServicePoint.ClientCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera ostatniego certyfikatu klienta wysłanego do serwera."
  remarks: ''
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_19_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_19_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_19_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> Obiekt, który zawiera wartości publicznych ostatniego certyfikatu klienta wysłane do serwera."
  overload: System.Net.ServicePoint.ClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.CloseConnectionGroup(System.String)
  id: CloseConnectionGroup(System.String)
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: CloseConnectionGroup(String)
  nameWithType: ServicePoint.CloseConnectionGroup(String)
  fullName: System.Net.ServicePoint.CloseConnectionGroup(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Usuwa grupę określonego połączenia z tym <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiektu."
  remarks: "Grupy połączeń skojarzyć zbiór żądań z danego połączenia lub zestawu połączeń. Ta metoda usuwa i zamknięcie wszystkich połączeń, które należą do grupy określonego połączenia."
  syntax:
    content: public bool CloseConnectionGroup (string connectionGroupName);
    parameters:
    - id: connectionGroupName
      type: System.String
      description: "Nazwa grupy połączenie, zawierający połączenia, aby zamknąć, a następnie usuń z tego punktu usługi."
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>wartość, która wskazuje, czy grupa połączenie zostało zamknięte.</xref:System.Boolean>"
  overload: System.Net.ServicePoint.CloseConnectionGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.ConnectionLeaseTimeout
  id: ConnectionLeaseTimeout
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ConnectionLeaseTimeout
  nameWithType: ServicePoint.ConnectionLeaseTimeout
  fullName: System.Net.ServicePoint.ConnectionLeaseTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia liczbę milisekund, po którym aktywnego <xref href=&quot;System.Net.ServicePoint&quot;> </xref> połączenie jest zamknięte."
  remarks: "Ta właściwość służy do zapewnienia, że <xref:System.Net.ServicePoint>obiektu aktywnych połączeń nie pozostawać otwarte przez czas nieograniczony.</xref:System.Net.ServicePoint> Ta właściwość jest przeznaczony do scenariuszy, w którym porzucić i ponownie ustanowić okresowo, takich jak scenariusze równoważenia obciążenia połączeń.       Domyślnie gdy <xref:System.Net.FtpWebRequest.KeepAlive%2A>jest `true` dla żądania, <xref:System.Net.ServicePoint.MaxIdleTime%2A>właściwość ustawia limit czasu zamknięcia <xref:System.Net.ServicePoint>połączenia z powodu nieaktywności.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.FtpWebRequest.KeepAlive%2A> Jeśli <xref:System.Net.ServicePoint>ma aktywnych połączeń <xref:System.Net.ServicePoint.MaxIdleTime%2A>nie obowiązuje i połączeń pozostawać otwarte przez czas nieograniczony.</xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.ServicePoint>       Gdy właściwość ConnectionLeaseTimeout jest ustawiona na wartość inną niż-1, a po określonym czasie, upłynie aktywnego <xref:System.Net.ServicePoint>połączenie jest zamknięte po obsługi żądania przez ustawienie <xref:System.Net.FtpWebRequest.KeepAlive%2A>do `false` w tym żądaniu.</xref:System.Net.FtpWebRequest.KeepAlive%2A> </xref:System.Net.ServicePoint>       Ustawienie tej wartości ma wpływ na wszystkie połączenia zarządza <xref:System.Net.ServicePoint>obiektu.</xref:System.Net.ServicePoint>"
  example:
  - "The following code example sets the value of this property.  \n  \n [!code-cs[NCLServicePoint#1](~/add/codesnippet/csharp/p-system.net.servicepoin_15_1.cs)]\n [!code-vb[NCLServicePoint#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_15_1.vb)]\n [!code-cpp[NCLServicePoint#1](~/add/codesnippet/cpp/p-system.net.servicepoin_15_1.cpp)]"
  syntax:
    content: public int ConnectionLeaseTimeout { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>wyrażony w milisekundach czas, który określa który aktywnego <xref href=&quot;System.Net.ServicePoint&quot;> </xref> połączenie pozostanie otwarte.</xref:System.Int32> Wartość domyślna to -1, dzięki czemu aktywnego <xref href=&quot;System.Net.ServicePoint&quot;> </xref> połączenia, aby pozostać połączony przez nieograniczony czas. Ustaw tę właściwość na wartość 0, aby wymusić <xref href=&quot;System.Net.ServicePoint&quot;> </xref> połączeń, aby zamknąć po obsługi żądania."
  overload: System.Net.ServicePoint.ConnectionLeaseTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość określona dla operacji set jest liczbą ujemną, mniejsza niż -1."
  platform:
  - net462
- uid: System.Net.ServicePoint.ConnectionLimit
  id: ConnectionLimit
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ConnectionLimit
  nameWithType: ServicePoint.ConnectionLimit
  fullName: System.Net.ServicePoint.ConnectionLimit
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia maksymalną liczbę połączeń dozwolonych na tym <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiektu."
  remarks: "Właściwość ConnectionLimit Ustawia maksymalną liczbę połączeń <xref:System.Net.ServicePoint>obiektu mogą wysyłać do zasobu internetowego.</xref:System.Net.ServicePoint> Wartość właściwości ConnectionLimit ma ustawioną wartość <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName>właściwości podczas <xref:System.Net.ServicePoint>obiekt jest tworzony; kolejne zmiany <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>nie mają wpływu na istniejące <xref:System.Net.ServicePoint>obiektów.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> </xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName>"
  example:
  - "The following code example uses the ConnectionLimit property to check the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to the specified Uniform Resource Identifier (URI).  \n  \n [!code-cpp[System.Net.ServicePoint#4](~/add/codesnippet/cpp/p-system.net.servicepoin_6_1.cpp)]\n [!code-vb[System.Net.ServicePoint#4](~/add/codesnippet/visualbasic/p-system.net.servicepoin_6_1.vb)]\n [!code-cs[System.Net.ServicePoint#4](~/add/codesnippet/csharp/p-system.net.servicepoin_6_1.cs)]"
  syntax:
    content: public int ConnectionLimit { get; set; }
    return:
      type: System.Int32
      description: "Maksymalna liczba połączeń dozwolone na tym <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiektu."
  overload: System.Net.ServicePoint.ConnectionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Limit połączeń jest równa lub mniejsza niż 0."
  platform:
  - net462
- uid: System.Net.ServicePoint.ConnectionName
  id: ConnectionName
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ConnectionName
  nameWithType: ServicePoint.ConnectionName
  fullName: System.Net.ServicePoint.ConnectionName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera nazwę połączenia."
  remarks: "Jeśli <xref:System.Net.ServicePoint>obiekt został skonstruowany przy <xref:System.Uri>obiektu ( <xref:System.Net.ServicePointManager.FindServicePoint%2A>lub <xref:System.Net.ServicePointManager.FindServicePoint%2A>metod, na przykład), następnie właściwość ConnectionName reprezentuje <xref:System.Uri.Scheme%2A>Właściwość <xref:System.Uri>obiekt używany.</xref:System.Uri> </xref:System.Uri.Scheme%2A> </xref:System.Net.ServicePointManager.FindServicePoint%2A> </xref:System.Net.ServicePointManager.FindServicePoint%2A> </xref:System.Uri> </xref:System.Net.ServicePoint>       Jeśli <xref:System.Net.ServicePoint>obiekt został skonstruowany na podstawie sieci hosta i port, właściwość ConnectionName zawiera ciąg reprezentujący hosta i sieci portu</xref:System.Net.ServicePoint> Jeśli ustawiono właściwość ConnectionName, gdy utworzone na podstawie nazwy hosta i portu tylko <xref:System.Net.WebRequest>obiektów z takimi samymi <xref:System.Net.WebRequest.ConnectionGroupName%2A>wartość mogą używać tego <xref:System.Net.ServicePoint>obiektu.</xref:System.Net.ServicePoint> </xref:System.Net.WebRequest.ConnectionGroupName%2A> </xref:System.Net.WebRequest>"
  example:
  - >-
    [!code-cpp[System.Net.ServicePoint#4](~/add/codesnippet/cpp/p-system.net.servicepoin_0_1.cpp)]
     [!code-vb[System.Net.ServicePoint#4](~/add/codesnippet/visualbasic/p-system.net.servicepoin_0_1.vb)]
     [!code-cs[System.Net.ServicePoint#4](~/add/codesnippet/csharp/p-system.net.servicepoin_0_1.cs)]
  syntax:
    content: public string ConnectionName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>reprezentujący nazwę połączenia.</xref:System.String>"
  overload: System.Net.ServicePoint.ConnectionName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.CurrentConnections
  id: CurrentConnections
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: CurrentConnections
  nameWithType: ServicePoint.CurrentConnections
  fullName: System.Net.ServicePoint.CurrentConnections
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera liczbę otwartych połączeń skojarzony z tym <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiektu."
  remarks: "Właściwość CurrentConnections zawiera liczbę otwartych połączeń internetowych skojarzony z tym <xref:System.Net.ServicePoint>obiektu.</xref:System.Net.ServicePoint> Wartość CurrentConnections nie może przekraczać który <xref:System.Net.ServicePoint.ConnectionLimit%2A>.</xref:System.Net.ServicePoint.ConnectionLimit%2A>"
  example:
  - "The following code example uses the CurrentConnections property to determine the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object.  \n  \n [!code-cpp[System.Net.ServicePoint#2](~/add/codesnippet/cpp/p-system.net.servicepoin_2_1.cpp)]\n [!code-vb[System.Net.ServicePoint#2](~/add/codesnippet/visualbasic/p-system.net.servicepoin_2_1.vb)]\n [!code-cs[System.Net.ServicePoint#2](~/add/codesnippet/csharp/p-system.net.servicepoin_2_1.cs)]"
  syntax:
    content: public int CurrentConnections { get; }
    return:
      type: System.Int32
      description: "Liczba otwartych połączeń skojarzony z tym <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiektu."
  overload: System.Net.ServicePoint.CurrentConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.Expect100Continue
  id: Expect100Continue
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: Expect100Continue
  nameWithType: ServicePoint.Expect100Continue
  fullName: System.Net.ServicePoint.Expect100Continue
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia <xref:System.Boolean>wartość, która określa, czy 100-kontynuować zachowanie jest używany.</xref:System.Boolean>"
  remarks: "Jeśli ta właściwość jest skonfigurowana `true`, klient żąda używające `POST` metoda oczekuje się 100-kontynuować odpowiedzi od serwera, aby wskazać, że klient ma wysłać zostać przesłane dane. Mechanizm ten umożliwia klientom unikać wysyłania dużych ilości danych za pośrednictwem sieci, gdy serwer od nagłówków żądań zamierza odrzucić żądanie.       Załóżmy na przykład, właściwość Expect100Continue jest `false`. Po wysłaniu żądania do serwera zawiera dane. Jeśli po odczytaniu nagłówków żądań, serwera wymaga uwierzytelniania i wysyła odpowiedzi 401, klient musi ponownie dane z nagłówkami właściwe uwierzytelnienie.       Jeśli właściwość Expect100Continue jest `true`, nagłówki żądania są wysyłane do serwera. Jeśli serwer nie zaakceptował żądania, wysyła 100-kontynuować odpowiedzi sygnalizowania, że mogą być przesyłane dane. Jeśli tak jak w poprzednim przykładzie serwer wymaga uwierzytelnienia, wysyłania odpowiedzi 401 i klienta nie ma niepotrzebnie przekazywane dane.       Zmiana wartości tej właściwości nie ma wpływu na istniejące połączenia. Dotyczy tylko nowych połączeń utworzony po zmianie.       Expect 100-kontynuować zachowanie szczegółowo opisano w sekcji IETF RFC 2616 10.1.1."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#9](~/add/codesnippet/cpp/p-system.net.servicepoin_4_1.cpp)]\n [!code-vb[System.Net.ServicePoint#9](~/add/codesnippet/visualbasic/p-system.net.servicepoin_4_1.vb)]\n [!code-cs[System.Net.ServicePoint#9](~/add/codesnippet/csharp/p-system.net.servicepoin_4_1.cs)]"
  syntax:
    content: public bool Expect100Continue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>można oczekiwać 100-kontynuować odpowiedzi dla <xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;> </xref> żądań; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.Expect100Continue*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.IdleSince
  id: IdleSince
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: IdleSince
  nameWithType: ServicePoint.IdleSince
  fullName: System.Net.ServicePoint.IdleSince
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera datę i godzinę, która <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiekt ostatnio był połączony z hostem."
  remarks: "Właściwość IdleSince rejestruje ostatniej daty i czasu, jaką punktu usługi został odłączony od hosta. Jeśli różnica między bieżącym czasem i IdleSince przekracza wartość <xref:System.Net.ServicePoint.MaxIdleTime%2A>, <xref:System.Net.ServicePoint>obiekt jest dostępny dla odtwarzania do innego połączenia.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.MaxIdleTime%2A>"
  example:
  - "The following code example uses the IdleSince property to set and retrieve the date and time that the <xref:System.Net.ServicePoint> object was last connected to a host.  \n  \n [!code-cpp[System.Net.ServicePoint#3](~/add/codesnippet/cpp/p-system.net.servicepoin_7_1.cpp)]\n [!code-vb[System.Net.ServicePoint#3](~/add/codesnippet/visualbasic/p-system.net.servicepoin_7_1.vb)]\n [!code-cs[System.Net.ServicePoint#3](~/add/codesnippet/csharp/p-system.net.servicepoin_7_1.cs)]"
  syntax:
    content: public DateTime IdleSince { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>obiekt, który zawiera datę i godzinę, o której <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiekt ostatnio był połączony.</xref:System.DateTime>"
  overload: System.Net.ServicePoint.IdleSince*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.MaxIdleTime
  id: MaxIdleTime
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: MaxIdleTime
  nameWithType: ServicePoint.MaxIdleTime
  fullName: System.Net.ServicePoint.MaxIdleTime
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia czas połączenia skojarzone z <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiektu może pozostawać bezczynne, zanim połączenie jest zamknięte."
  remarks: "Możesz ustawić MaxIdleTime <xref:System.Threading.Timeout.Infinite?displayProperty=fullName>Aby wskazać, że połączenie skojarzone z <xref:System.Net.ServicePoint>obiektu nigdy nie powinien limitu czasu.</xref:System.Net.ServicePoint> </xref:System.Threading.Timeout.Infinite?displayProperty=fullName>       Wartość jest wartością domyślną właściwości MaxIdleTime <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName>właściwości podczas <xref:System.Net.ServicePoint>obiekt jest tworzony.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> Kolejne zmiany do <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A>Właściwości nie mają wpływu na istniejące <xref:System.Net.ServicePoint>obiektów.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A>       Gdy MaxIdleTime połączenia skojarzone z <xref:System.Net.ServicePoint>jest przekraczana, połączenie pozostaje otwarty do momentu aplikacja próbuje korzystać z połączenia.</xref:System.Net.ServicePoint> W tym czasie ramach zamyka połączenie i tworzy nowe połączenie z hostem zdalnym."
  example:
  - "The following code example uses the MaxIdleTime property to set and retrieve the <xref:System.Net.ServicePoint> idle time.  \n  \n [!code-cpp[System.Net.ServicePoint#3](~/add/codesnippet/cpp/p-system.net.servicepoin_11_1.cpp)]\n [!code-vb[System.Net.ServicePoint#3](~/add/codesnippet/visualbasic/p-system.net.servicepoin_11_1.vb)]\n [!code-cs[System.Net.ServicePoint#3](~/add/codesnippet/csharp/p-system.net.servicepoin_11_1.cs)]"
  syntax:
    content: public int MaxIdleTime { get; set; }
    return:
      type: System.Int32
      description: "Czas (w milisekundach), które połączenie skojarzone z <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiektu może pozostawać bezczynne, zanim zostanie zamknięta i użyć ponownie dla innego połączenia."
  overload: System.Net.ServicePoint.MaxIdleTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Ustawiono MaxIdleTime mniej niż &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt; lub większa niż &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.ServicePoint.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: ServicePoint.ProtocolVersion
  fullName: System.Net.ServicePoint.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera wersję protokołu HTTP, który <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiekt zastosowań."
  remarks: "Wersji protokołu HTTP są HTTP/1.0 i HTTP/1.1."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_22_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_22_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_22_1.cs)]"
  syntax:
    content: public virtual Version ProtocolVersion { get; }
    return:
      type: System.Version
      description: "A <xref:System.Version>obiekt, który zawiera wersji protokołu HTTP który <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiekt używa.</xref:System.Version>"
  overload: System.Net.ServicePoint.ProtocolVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: ServicePoint.ReceiveBufferSize
  fullName: System.Net.ServicePoint.ReceiveBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia rozmiar buforu odbierania dla gniazda używanych przez to <xref href=&quot;System.Net.ServicePoint&quot;> </xref>."
  remarks: "Aby uzyskać dodatkowe informacje zobacz <xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>.</xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>"
  example:
  - "The following code example sets the value of this property.  \n  \n [!code-cs[NCLServicePoint#1](~/add/codesnippet/csharp/p-system.net.servicepoin_9_1.cs)]\n [!code-vb[NCLServicePoint#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_9_1.vb)]\n [!code-cpp[NCLServicePoint#1](~/add/codesnippet/cpp/p-system.net.servicepoin_9_1.cpp)]"
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>zawierający rozmiar w bajtach buforu odbioru.</xref:System.Int32> Wartość domyślna to 8192."
  overload: System.Net.ServicePoint.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość określona dla operacji set jest większa niż <xref:System.Int32>.</xref:System.Int32>"
  platform:
  - net462
- uid: System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  id: SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Włącza lub wyłącza opcję podtrzymania połączenia TCP."
  remarks: "Aplikacja może zażądać dostawcy TCP/IP korzystanie z pakietów podtrzymania połączenia TCP. Wartość domyślna to, że korzystanie z pakietów podtrzymania połączenia TCP jest wyłączone.       Domyślne ustawienia gniazda TCP jest zainicjowany limitu czasu zestawy keep-alive 2 godziny i keep-alive interwał na 1 sekundę. `keepAliveTime` Parametr określa limit czasu w milisekundach, bez żadnych działań, dopóki wysłaniu pierwszego pakietu keep-alive. `keepAliveInterval` Parametr określa interwał w milisekundach między podczas kolejnych keep-alive pakiety są wysyłane w przypadku nieodebrania bez potwierdzenia. Liczba keep-alive sond nie można zmienić i jest ustawiony na 10.       Jeśli połączenie TCP zostało przerwane w wyniku utrzymywania aktywności <xref:System.Net.Sockets.SocketError>z <xref:System.Net.Sockets.SocketError>jest zwracana do żadnych wywołań w toku w gnieździe, i kolejnych wywołań zakończy się niepowodzeniem z <xref:System.Net.Sockets.SocketError> <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);
    parameters:
    - id: enabled
      type: System.Boolean
      description: "Jeśli wartość true, a następnie keep-alive opcji TCP za pośrednictwem połączenia TCP zostanie włączona przy użyciu określonego `keepAliveTime` i `keepAliveInterval` wartości.       Jeśli ma wartość false, a następnie opcję keep-alive TCP jest wyłączone, a pozostałe parametry są ignorowane.       Wartość domyślna to false."
    - id: keepAliveTime
      type: System.Int32
      description: "Określa limit czasu w milisekundach, bez żadnych działań, dopóki wysłaniu pierwszego pakietu keep-alive.       Wartość musi być większa niż 0.  Jeśli została przekazana wartość mniejszą niż lub równa zero <xref:System.ArgumentOutOfRangeException>jest generowany.</xref:System.ArgumentOutOfRangeException>"
    - id: keepAliveInterval
      type: System.Int32
      description: "Określa interwał w milisekundach między kolejnymi keep-alive pakiety są wysyłane w przypadku nieodebrania bez potwierdzenia.       Wartość musi być większa niż 0.  Jeśli została przekazana wartość mniejszą niż lub równa zero <xref:System.ArgumentOutOfRangeException>jest generowany.</xref:System.ArgumentOutOfRangeException>"
  overload: System.Net.ServicePoint.SetTcpKeepAlive*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Wartość określona dla <code> keepAliveTime </code> lub <code> keepAliveInterval </code> parametr jest mniejsza niż lub równa 0."
  platform:
  - net462
- uid: System.Net.ServicePoint.SupportsPipelining
  id: SupportsPipelining
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: SupportsPipelining
  nameWithType: ServicePoint.SupportsPipelining
  fullName: System.Net.ServicePoint.SupportsPipelining
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Wskazuje, czy <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiektu obsługuje połączenia w trybie potokowym."
  remarks: "Przetwarzanie potokowe umożliwia klientom przesyłania trwałe połączenie wielu żądań bez oczekiwania na każdym odpowiedzi z serwera. Serwer wysyła odpowiedzi w tej samej kolejności, ponieważ żądania zostały odebrane.       Przetwarzanie potokowe opisano szczegółowo w IETF RFC 2616 sekcji 8.1.2.2."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_18_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_18_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_18_1.cs)]"
  syntax:
    content: public bool SupportsPipelining { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiektu obsługuje potokowej połączenia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.SupportsPipelining*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.UseNagleAlgorithm
  id: UseNagleAlgorithm
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: UseNagleAlgorithm
  nameWithType: ServicePoint.UseNagleAlgorithm
  fullName: System.Net.ServicePoint.UseNagleAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Pobiera lub ustawia <xref:System.Boolean>wartość, która określa, czy w przypadku połączeń zarządzanych przez ten jest używany algorytm Nagle&quot;a <xref href=&quot;System.Net.ServicePoint&quot;> </xref> obiektu.</xref:System.Boolean>"
  remarks: "Aby buforować małe pakiety danych i przekazuje je jako pojedynczy pakiet jest używany algorytm Nagle&quot;a. Ten proces, nazywany &quot;nagling,&quot; jest powszechnie używany, ponieważ zmniejsza liczbę pakietów wysłanych i zmniejsza narzut na pakiet.       Zmiana wartości tej właściwości nie ma wpływu na istniejące połączenia. Dotyczy tylko nowych połączeń utworzony po zmianie.       Algorytm Nagle&quot;a szczegółowo opisano w IETF RFC 896."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#9](~/add/codesnippet/cpp/p-system.net.servicepoin_16_1.cpp)]\n [!code-vb[System.Net.ServicePoint#9](~/add/codesnippet/visualbasic/p-system.net.servicepoin_16_1.vb)]\n [!code-cs[System.Net.ServicePoint#9](~/add/codesnippet/csharp/p-system.net.servicepoin_16_1.cs)]"
  syntax:
    content: public bool UseNagleAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby używać algorytmu Nagle&quot;a; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.UseNagleAlgorithm*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.ServicePoint.Address
  parent: System.Net.ServicePoint
  isExternal: false
  name: Address
  nameWithType: ServicePoint.Address
  fullName: System.Net.ServicePoint.Address
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.ServicePoint.BindIPEndPointDelegate
  parent: System.Net.ServicePoint
  isExternal: false
  name: BindIPEndPointDelegate
  nameWithType: ServicePoint.BindIPEndPointDelegate
  fullName: System.Net.ServicePoint.BindIPEndPointDelegate
- uid: System.Net.BindIPEndPoint
  parent: System.Net
  isExternal: false
  name: BindIPEndPoint
  nameWithType: BindIPEndPoint
  fullName: System.Net.BindIPEndPoint
- uid: System.Net.ServicePoint.Certificate
  parent: System.Net.ServicePoint
  isExternal: false
  name: Certificate
  nameWithType: ServicePoint.Certificate
  fullName: System.Net.ServicePoint.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.ServicePoint.ClientCertificate
  parent: System.Net.ServicePoint
  isExternal: false
  name: ClientCertificate
  nameWithType: ServicePoint.ClientCertificate
  fullName: System.Net.ServicePoint.ClientCertificate
- uid: System.Net.ServicePoint.CloseConnectionGroup(System.String)
  parent: System.Net.ServicePoint
  isExternal: false
  name: CloseConnectionGroup(String)
  nameWithType: ServicePoint.CloseConnectionGroup(String)
  fullName: System.Net.ServicePoint.CloseConnectionGroup(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.ServicePoint.ConnectionLeaseTimeout
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLeaseTimeout
  nameWithType: ServicePoint.ConnectionLeaseTimeout
  fullName: System.Net.ServicePoint.ConnectionLeaseTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.ServicePoint.ConnectionLimit
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLimit
  nameWithType: ServicePoint.ConnectionLimit
  fullName: System.Net.ServicePoint.ConnectionLimit
- uid: System.Net.ServicePoint.ConnectionName
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionName
  nameWithType: ServicePoint.ConnectionName
  fullName: System.Net.ServicePoint.ConnectionName
- uid: System.Net.ServicePoint.CurrentConnections
  parent: System.Net.ServicePoint
  isExternal: false
  name: CurrentConnections
  nameWithType: ServicePoint.CurrentConnections
  fullName: System.Net.ServicePoint.CurrentConnections
- uid: System.Net.ServicePoint.Expect100Continue
  parent: System.Net.ServicePoint
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePoint.Expect100Continue
  fullName: System.Net.ServicePoint.Expect100Continue
- uid: System.Net.ServicePoint.IdleSince
  parent: System.Net.ServicePoint
  isExternal: false
  name: IdleSince
  nameWithType: ServicePoint.IdleSince
  fullName: System.Net.ServicePoint.IdleSince
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Net.ServicePoint.MaxIdleTime
  parent: System.Net.ServicePoint
  isExternal: false
  name: MaxIdleTime
  nameWithType: ServicePoint.MaxIdleTime
  fullName: System.Net.ServicePoint.MaxIdleTime
- uid: System.Net.ServicePoint.ProtocolVersion
  parent: System.Net.ServicePoint
  isExternal: false
  name: ProtocolVersion
  nameWithType: ServicePoint.ProtocolVersion
  fullName: System.Net.ServicePoint.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.ServicePoint.ReceiveBufferSize
  parent: System.Net.ServicePoint
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: ServicePoint.ReceiveBufferSize
  fullName: System.Net.ServicePoint.ReceiveBufferSize
- uid: System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePoint
  isExternal: false
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
- uid: System.Net.ServicePoint.SupportsPipelining
  parent: System.Net.ServicePoint
  isExternal: false
  name: SupportsPipelining
  nameWithType: ServicePoint.SupportsPipelining
  fullName: System.Net.ServicePoint.SupportsPipelining
- uid: System.Net.ServicePoint.UseNagleAlgorithm
  parent: System.Net.ServicePoint
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePoint.UseNagleAlgorithm
  fullName: System.Net.ServicePoint.UseNagleAlgorithm
- uid: System.Net.ServicePoint.Address*
  parent: System.Net.ServicePoint
  isExternal: false
  name: Address
  nameWithType: ServicePoint.Address
- uid: System.Net.ServicePoint.BindIPEndPointDelegate*
  parent: System.Net.ServicePoint
  isExternal: false
  name: BindIPEndPointDelegate
  nameWithType: ServicePoint.BindIPEndPointDelegate
- uid: System.Net.ServicePoint.Certificate*
  parent: System.Net.ServicePoint
  isExternal: false
  name: Certificate
  nameWithType: ServicePoint.Certificate
- uid: System.Net.ServicePoint.ClientCertificate*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ClientCertificate
  nameWithType: ServicePoint.ClientCertificate
- uid: System.Net.ServicePoint.CloseConnectionGroup*
  parent: System.Net.ServicePoint
  isExternal: false
  name: CloseConnectionGroup
  nameWithType: ServicePoint.CloseConnectionGroup
- uid: System.Net.ServicePoint.ConnectionLeaseTimeout*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLeaseTimeout
  nameWithType: ServicePoint.ConnectionLeaseTimeout
- uid: System.Net.ServicePoint.ConnectionLimit*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLimit
  nameWithType: ServicePoint.ConnectionLimit
- uid: System.Net.ServicePoint.ConnectionName*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionName
  nameWithType: ServicePoint.ConnectionName
- uid: System.Net.ServicePoint.CurrentConnections*
  parent: System.Net.ServicePoint
  isExternal: false
  name: CurrentConnections
  nameWithType: ServicePoint.CurrentConnections
- uid: System.Net.ServicePoint.Expect100Continue*
  parent: System.Net.ServicePoint
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePoint.Expect100Continue
- uid: System.Net.ServicePoint.IdleSince*
  parent: System.Net.ServicePoint
  isExternal: false
  name: IdleSince
  nameWithType: ServicePoint.IdleSince
- uid: System.Net.ServicePoint.MaxIdleTime*
  parent: System.Net.ServicePoint
  isExternal: false
  name: MaxIdleTime
  nameWithType: ServicePoint.MaxIdleTime
- uid: System.Net.ServicePoint.ProtocolVersion*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ProtocolVersion
  nameWithType: ServicePoint.ProtocolVersion
- uid: System.Net.ServicePoint.ReceiveBufferSize*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: ServicePoint.ReceiveBufferSize
- uid: System.Net.ServicePoint.SetTcpKeepAlive*
  parent: System.Net.ServicePoint
  isExternal: false
  name: SetTcpKeepAlive
  nameWithType: ServicePoint.SetTcpKeepAlive
- uid: System.Net.ServicePoint.SupportsPipelining*
  parent: System.Net.ServicePoint
  isExternal: false
  name: SupportsPipelining
  nameWithType: ServicePoint.SupportsPipelining
- uid: System.Net.ServicePoint.UseNagleAlgorithm*
  parent: System.Net.ServicePoint
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePoint.UseNagleAlgorithm
