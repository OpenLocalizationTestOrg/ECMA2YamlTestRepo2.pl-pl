### YamlMime:ManagedReference
items:
- uid: System.Data.UniqueConstraint
  id: UniqueConstraint
  children:
  - System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)
  - System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])
  - System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)
  - System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)
  - System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)
  - System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])
  - System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)
  - System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)
  - System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)
  - System.Data.UniqueConstraint.Columns
  - System.Data.UniqueConstraint.Equals(System.Object)
  - System.Data.UniqueConstraint.GetHashCode
  - System.Data.UniqueConstraint.IsPrimaryKey
  - System.Data.UniqueConstraint.Table
  langs:
  - csharp
  name: UniqueConstraint
  nameWithType: UniqueConstraint
  fullName: System.Data.UniqueConstraint
  type: Class
  summary: "Reprezentuje ograniczenie zestawu kolumn, w których wszystkie wartości muszą być unikatowe."
  remarks: "UniqueConstraint są wymuszane w pojedynczej kolumny (lub kolumny), aby upewnić się, że wartości klucza podstawowego jest unikatowa.       Ograniczenia nie są wymuszane, chyba że <xref:System.Data.DataSet.EnforceConstraints%2A>ma ustawioną właściwość `true`.</xref:System.Data.DataSet.EnforceConstraints%2A>       Gdy <xref:System.Data.DataSet>jest scalany z drugiej <xref:System.Data.DataSet>, ograniczenia nie są wymuszane, do momentu zakończenia wszystkich scaleń.</xref:System.Data.DataSet> </xref:System.Data.DataSet>"
  example:
  - "The following example adds a UniqueConstraint to a <xref:System.Data.DataSet> and sets the <xref:System.Data.DataSet.EnforceConstraints%2A> property to `true`.  \n  \n [!code-vb[Classic WebData UniqueConstraint Example#1](~/add/codesnippet/visualbasic/t-system.data.uniquecons_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("ConstraintName")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.UniqueConstraintEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class UniqueConstraint : System.Data.Constraint
  inheritance:
  - System.Object
  - System.Data.Constraint
  implements: []
  inheritedMembers:
  - System.Data.Constraint._DataSet
  - System.Data.Constraint.CheckStateForProperty
  - System.Data.Constraint.ConstraintName
  - System.Data.Constraint.ExtendedProperties
  - System.Data.Constraint.SetDataSet(System.Data.DataSet)
  - System.Data.Constraint.ToString
  platform:
  - net462
- uid: System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)
  id: '#ctor(System.Data.DataColumn)'
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: UniqueConstraint(DataColumn)
  nameWithType: UniqueConstraint.UniqueConstraint(DataColumn)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(DataColumn)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> klasy z określonym <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.UniqueConstraint> and assigns it to the <xref:System.Data.DataRelation.ParentKeyConstraint%2A> property of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData UniqueConstraint.UniqueConstraint Example#1](~/add/codesnippet/visualbasic/m-system.data.uniquecons_0_1.vb)]"
  syntax:
    content: public UniqueConstraint (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> Aby ograniczyć."
  overload: System.Data.UniqueConstraint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])
  id: '#ctor(System.Data.DataColumn[])'
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: UniqueConstraint(DataColumn[])
  nameWithType: UniqueConstraint.UniqueConstraint(DataColumn[])
  fullName: System.Data.UniqueConstraint.UniqueConstraint(DataColumn[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> klasy z danej tablicy <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów."
  syntax:
    content: public UniqueConstraint (System.Data.DataColumn[] columns);
    parameters:
    - id: columns
      type: System.Data.DataColumn[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów, aby ograniczyć."
  overload: System.Data.UniqueConstraint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)
  id: '#ctor(System.Data.DataColumn,System.Boolean)'
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: UniqueConstraint(DataColumn,Boolean)
  nameWithType: UniqueConstraint.UniqueConstraint(DataColumn,Boolean)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(DataColumn,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> klasy z <xref href=&quot;System.Data.DataColumn&quot;> </xref> Aby ograniczyć, a wartość określającą, czy ograniczenie jest kluczem podstawowym."
  syntax:
    content: public UniqueConstraint (System.Data.DataColumn column, bool isPrimaryKey);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> Aby ograniczyć."
    - id: isPrimaryKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, czy ograniczenie jest kluczem podstawowym; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.UniqueConstraint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)
  id: '#ctor(System.Data.DataColumn[],System.Boolean)'
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: UniqueConstraint(DataColumn[],Boolean)
  nameWithType: UniqueConstraint.UniqueConstraint(DataColumn[],Boolean)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(DataColumn[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> klasy z tablicą <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów, aby ograniczyć, a wartość określającą, czy ograniczenie jest kluczem podstawowym."
  syntax:
    content: public UniqueConstraint (System.Data.DataColumn[] columns, bool isPrimaryKey);
    parameters:
    - id: columns
      type: System.Data.DataColumn[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów, aby ograniczyć."
    - id: isPrimaryKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, czy ograniczenie jest kluczem podstawowym; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.UniqueConstraint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)
  id: '#ctor(System.String,System.Data.DataColumn)'
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: UniqueConstraint(String,DataColumn)
  nameWithType: UniqueConstraint.UniqueConstraint(String,DataColumn)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(String,DataColumn)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> klasy o określonej nazwie i <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.UniqueConstraint> and assigns it to the <xref:System.Data.DataRelation.ParentKeyConstraint%2A> property of a <xref:System.Data.DataRelation>.  \n  \n [!code-vb[Classic WebData UniqueConstraint.UniqueConstraint Example#1](~/add/codesnippet/visualbasic/m-system.data.uniquecons_2_1.vb)]"
  syntax:
    content: public UniqueConstraint (string name, System.Data.DataColumn column);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa ograniczenia."
    - id: column
      type: System.Data.DataColumn
      description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> Aby ograniczyć."
  overload: System.Data.UniqueConstraint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])
  id: '#ctor(System.String,System.Data.DataColumn[])'
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: UniqueConstraint(String,DataColumn[])
  nameWithType: UniqueConstraint.UniqueConstraint(String,DataColumn[])
  fullName: System.Data.UniqueConstraint.UniqueConstraint(String,DataColumn[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> z określoną nazwą i tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Data.DataTable> with two columns, and adds a new <xref:System.Data.UniqueConstraint> to the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData UniqueConstraint.UniqueConstraint2 Example#1](~/add/codesnippet/visualbasic/m-system.data.uniquecons_3_1.vb)]\n [!code-cs[Classic WebData UniqueConstraint.UniqueConstraint2 Example#1](~/add/codesnippet/csharp/m-system.data.uniquecons_3_1.cs)]"
  syntax:
    content: public UniqueConstraint (string name, System.Data.DataColumn[] columns);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa ograniczenia."
    - id: columns
      type: System.Data.DataColumn[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów, aby ograniczyć."
  overload: System.Data.UniqueConstraint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)
  id: '#ctor(System.String,System.Data.DataColumn,System.Boolean)'
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: UniqueConstraint(String,DataColumn,Boolean)
  nameWithType: UniqueConstraint.UniqueConstraint(String,DataColumn,Boolean)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(String,DataColumn,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> klasy o określonej nazwie <xref href=&quot;System.Data.DataColumn&quot;> </xref> Aby ograniczyć, a wartość określającą, czy ograniczenie jest kluczem podstawowym."
  syntax:
    content: public UniqueConstraint (string name, System.Data.DataColumn column, bool isPrimaryKey);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa ograniczenia."
    - id: column
      type: System.Data.DataColumn
      description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> Aby ograniczyć."
    - id: isPrimaryKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, czy ograniczenie jest kluczem podstawowym; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.UniqueConstraint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)
  id: '#ctor(System.String,System.Data.DataColumn[],System.Boolean)'
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: UniqueConstraint(String,DataColumn[],Boolean)
  nameWithType: UniqueConstraint.UniqueConstraint(String,DataColumn[],Boolean)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(String,DataColumn[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> klasy o określonej nazwie tablicę <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów, aby ograniczyć, a wartość określającą, czy ograniczenie jest kluczem podstawowym."
  syntax:
    content: public UniqueConstraint (string name, System.Data.DataColumn[] columns, bool isPrimaryKey);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa ograniczenia."
    - id: columns
      type: System.Data.DataColumn[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów, aby ograniczyć."
    - id: isPrimaryKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, czy ograniczenie jest kluczem podstawowym; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.UniqueConstraint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)
  id: '#ctor(System.String,System.String[],System.Boolean)'
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: UniqueConstraint(String,String[],Boolean)
  nameWithType: UniqueConstraint.UniqueConstraint(String,String[],Boolean)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(String,String[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> klasy o określonej nazwie tablicę <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów, aby ograniczyć, a wartość określającą, czy ograniczenie jest kluczem podstawowym."
  remarks: "Ten konstruktor zapewnia obsługę w czasie projektowania w środowisku Visual Studio .NET. <xref:System.Data.UniqueConstraint>obiekty utworzone za pomocą tego konstruktora należy następnie dodać do kolekcji za pomocą <xref:System.Data.ConstraintCollection.AddRange%2A>.</xref:System.Data.ConstraintCollection.AddRange%2A></xref:System.Data.UniqueConstraint> Kolumn z określonymi nazwami musi istnieć w momencie wywołania metody, lub jeśli <xref:System.Data.DataTable.BeginInit%2A>została wywołana przed wywołaniem tego konstruktora kolumn z określonymi nazwami musi istnieć w czasie który <xref:System.Data.DataTable.EndInit%2A>jest wywoływana.</xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A>"
  syntax:
    content: public UniqueConstraint (string name, string[] columnNames, bool isPrimaryKey);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa ograniczenia."
    - id: columnNames
      type: System.String[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów, aby ograniczyć."
    - id: isPrimaryKey
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby wskazać, czy ograniczenie jest kluczem podstawowym; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.UniqueConstraint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.Columns
  id: Columns
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: Columns
  nameWithType: UniqueConstraint.Columns
  fullName: System.Data.UniqueConstraint.Columns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera tablicę kolumny, których dotyczy to ograniczenie."
  remarks: ''
  example:
  - "The following example returns the <xref:System.Data.DataColumn> objects that the <xref:System.Data.UniqueConstraint> constrains.  \n  \n [!code-vb[Classic WebData UniqueConstraint.Columns Example#1](~/add/codesnippet/visualbasic/p-system.data.uniquecons_0_1.vb)]"
  syntax:
    content: public virtual System.Data.DataColumn[] Columns { get; }
    return:
      type: System.Data.DataColumn[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów."
  overload: System.Data.UniqueConstraint.Columns*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: UniqueConstraint.Equals(Object)
  fullName: System.Data.UniqueConstraint.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Porównuje to ograniczenie do drugiej do ustalenia, czy zarówno są identyczne."
  remarks: "Dwa ograniczenia są takie same, jeśli ich ograniczyć te same kolumny."
  example:
  - "The following example compares two UiqueConstraint objects.  \n  \n [!code-vb[Classic WebData UniqueConstraint.Equals Example#1](~/add/codesnippet/visualbasic/m-system.data.uniquecons_1_1.vb)]"
  syntax:
    content: public override bool Equals (object key2);
    parameters:
    - id: key2
      type: System.Object
      description: "Obiekt, do której należy <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> są porównywane."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli ograniczenia są równe; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.UniqueConstraint.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.GetHashCode
  id: GetHashCode
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: UniqueConstraint.GetHashCode()
  fullName: System.Data.UniqueConstraint.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość skrótu dla tego wystąpienia <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> obiektu."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32-bitowej podpisanej liczby całkowitej wartość skrótu."
  overload: System.Data.UniqueConstraint.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.IsPrimaryKey
  id: IsPrimaryKey
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: IsPrimaryKey
  nameWithType: UniqueConstraint.IsPrimaryKey
  fullName: System.Data.UniqueConstraint.IsPrimaryKey
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy ograniczenie jest na kluczu podstawowym."
  remarks: "Tabela obejmuje zazwyczaj klucza podstawowego, który zapewnia, że każdy wiersz jest unikatowa. W niektórych tabelach klucz podstawowy może składać się z więcej niż jedną kolumnę. Na przykład klucz podstawowy dla tabeli nazw może składać się z obu imiona i nazwiska oraz. Aby utworzyć klucz podstawowy zawiera więcej niż jedną kolumnę, należy ustawić właściwości kolumny na tablicę obiektów DataColumn."
  example:
  - "The following example checks the IsPrimaryKey property.  \n  \n [!code-vb[Classic WebData UniqueConstraint.IsPrimaryKey Example#1](~/add/codesnippet/visualbasic/p-system.data.uniquecons_1_1.vb)]"
  syntax:
    content: public bool IsPrimaryKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, jeśli jest ograniczenie przy użyciu klucza podstawowego; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.UniqueConstraint.IsPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.UniqueConstraint.Table
  id: Table
  parent: System.Data.UniqueConstraint
  langs:
  - csharp
  name: Table
  nameWithType: UniqueConstraint.Table
  fullName: System.Data.UniqueConstraint.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera tabeli, do której należy to ograniczenie."
  remarks: ''
  example:
  - "The following example returns a <xref:System.Data.UniqueConstraint> object's <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData UniqueConstraint.Table Example#1](~/add/codesnippet/visualbasic/p-system.data.uniquecons_2_1.vb)]"
  syntax:
    content: public override System.Data.DataTable Table { get; }
    return:
      type: System.Data.DataTable
      description: "<xref href=&quot;System.Data.DataTable&quot;> </xref> Do której należy ograniczenia."
  overload: System.Data.UniqueConstraint.Table*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Constraint
  isExternal: false
  name: System.Data.Constraint
- uid: System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: UniqueConstraint(DataColumn)
  nameWithType: UniqueConstraint.UniqueConstraint(DataColumn)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: UniqueConstraint(DataColumn[])
  nameWithType: UniqueConstraint.UniqueConstraint(DataColumn[])
  fullName: System.Data.UniqueConstraint.UniqueConstraint(DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: UniqueConstraint(DataColumn,Boolean)
  nameWithType: UniqueConstraint.UniqueConstraint(DataColumn,Boolean)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(DataColumn,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: UniqueConstraint(DataColumn[],Boolean)
  nameWithType: UniqueConstraint.UniqueConstraint(DataColumn[],Boolean)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(DataColumn[],Boolean)
- uid: System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: UniqueConstraint(String,DataColumn)
  nameWithType: UniqueConstraint.UniqueConstraint(String,DataColumn)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(String,DataColumn)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: UniqueConstraint(String,DataColumn[])
  nameWithType: UniqueConstraint.UniqueConstraint(String,DataColumn[])
  fullName: System.Data.UniqueConstraint.UniqueConstraint(String,DataColumn[])
- uid: System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: UniqueConstraint(String,DataColumn,Boolean)
  nameWithType: UniqueConstraint.UniqueConstraint(String,DataColumn,Boolean)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(String,DataColumn,Boolean)
- uid: System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: UniqueConstraint(String,DataColumn[],Boolean)
  nameWithType: UniqueConstraint.UniqueConstraint(String,DataColumn[],Boolean)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(String,DataColumn[],Boolean)
- uid: System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: UniqueConstraint(String,String[],Boolean)
  nameWithType: UniqueConstraint.UniqueConstraint(String,String[],Boolean)
  fullName: System.Data.UniqueConstraint.UniqueConstraint(String,String[],Boolean)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.UniqueConstraint.Columns
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: Columns
  nameWithType: UniqueConstraint.Columns
  fullName: System.Data.UniqueConstraint.Columns
- uid: System.Data.UniqueConstraint.Equals(System.Object)
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: Equals(Object)
  nameWithType: UniqueConstraint.Equals(Object)
  fullName: System.Data.UniqueConstraint.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.UniqueConstraint.GetHashCode
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: GetHashCode()
  nameWithType: UniqueConstraint.GetHashCode()
  fullName: System.Data.UniqueConstraint.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.UniqueConstraint.IsPrimaryKey
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: IsPrimaryKey
  nameWithType: UniqueConstraint.IsPrimaryKey
  fullName: System.Data.UniqueConstraint.IsPrimaryKey
- uid: System.Data.UniqueConstraint.Table
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: Table
  nameWithType: UniqueConstraint.Table
  fullName: System.Data.UniqueConstraint.Table
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.UniqueConstraint.#ctor*
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: UniqueConstraint
  nameWithType: UniqueConstraint.UniqueConstraint
- uid: System.Data.UniqueConstraint.Columns*
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: Columns
  nameWithType: UniqueConstraint.Columns
- uid: System.Data.UniqueConstraint.Equals*
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: Equals
  nameWithType: UniqueConstraint.Equals
- uid: System.Data.UniqueConstraint.GetHashCode*
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: GetHashCode
  nameWithType: UniqueConstraint.GetHashCode
- uid: System.Data.UniqueConstraint.IsPrimaryKey*
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: IsPrimaryKey
  nameWithType: UniqueConstraint.IsPrimaryKey
- uid: System.Data.UniqueConstraint.Table*
  parent: System.Data.UniqueConstraint
  isExternal: false
  name: Table
  nameWithType: UniqueConstraint.Table
