### YamlMime:ManagedReference
items:
- uid: System.Data.DataRow
  id: DataRow
  children:
  - System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  - System.Data.DataRow.AcceptChanges
  - System.Data.DataRow.BeginEdit
  - System.Data.DataRow.CancelEdit
  - System.Data.DataRow.ClearErrors
  - System.Data.DataRow.Delete
  - System.Data.DataRow.EndEdit
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  - System.Data.DataRow.GetChildRows(System.String)
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  - System.Data.DataRow.GetColumnError(System.Int32)
  - System.Data.DataRow.GetColumnError(System.String)
  - System.Data.DataRow.GetColumnsInError
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRow(System.String)
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRows(System.String)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.HasErrors
  - System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  - System.Data.DataRow.IsNull(System.Data.DataColumn)
  - System.Data.DataRow.IsNull(System.Int32)
  - System.Data.DataRow.IsNull(System.String)
  - System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Data.DataColumn)
  - System.Data.DataRow.Item(System.Int32)
  - System.Data.DataRow.Item(System.String)
  - System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.ItemArray
  - System.Data.DataRow.RejectChanges
  - System.Data.DataRow.RowError
  - System.Data.DataRow.RowState
  - System.Data.DataRow.SetAdded
  - System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  - System.Data.DataRow.SetColumnError(System.Int32,System.String)
  - System.Data.DataRow.SetColumnError(System.String,System.String)
  - System.Data.DataRow.SetModified
  - System.Data.DataRow.SetNull(System.Data.DataColumn)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  - System.Data.DataRow.Table
  langs:
  - csharp
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
  type: Class
  summary: "Reprezentuje wiersza danych w <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "Element DataRow i <xref:System.Data.DataColumn>obiekty są podstawowymi składnikami <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> Użyj obiektu DataRow i jego właściwości i metody, aby pobrać i ocenić; Wstawianie, usuwanie i zaktualizuj wartości <xref:System.Data.DataTable>.</xref:System.Data.DataTable> <xref:System.Data.DataRowCollection>Reprezentuje rzeczywistych obiektów DataRow w <xref:System.Data.DataTable>i <xref:System.Data.DataColumnCollection>zawiera <xref:System.Data.DataColumn>obiekty, które opisują schematu <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataColumnCollection> </xref:System.Data.DataTable> </xref:System.Data.DataRowCollection> Przeciążone <xref:System.Data.DataRow.Item%2A>Właściwości zwracać lub ustaw wartość <xref:System.Data.DataColumn>.</xref:System.Data.DataColumn> </xref:System.Data.DataRow.Item%2A>       Użyj <xref:System.Data.DataRow.HasVersion%2A>i <xref:System.Data.DataRow.IsNull%2A>Właściwości, aby określić stan wartość określonego wiersza i <xref:System.Data.DataRow.RowState%2A>Właściwości można określić stanu elementu względem jego elementu nadrzędnego <xref:System.Data.DataTable>.</xref:System.Data.DataTable> wiersza</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.IsNull%2A> </xref:System.Data.DataRow.HasVersion%2A>       Aby utworzyć nowej klasy DataRow, użyj <xref:System.Data.DataTable.NewRow%2A>metody <xref:System.Data.DataTable>obiektu.</xref:System.Data.DataTable> </xref:System.Data.DataTable.NewRow%2A> Po utworzeniu nowej klasy DataRow, należy użyć <xref:System.Data.DataRowCollection.Add%2A>metody w celu dodania nowej klasy DataRow do <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Add%2A> Na koniec wywołania <xref:System.Data.DataRow.AcceptChanges%2A>metody <xref:System.Data.DataTable>obiektu, aby potwierdzić dodanie.</xref:System.Data.DataTable> </xref:System.Data.DataRow.AcceptChanges%2A> Aby uzyskać więcej informacji na temat dodawania danych do <xref:System.Data.DataTable>, zobacz [Dodawanie danych do elementu DataTable](~/add/includes/ajax-current-ext-md.md).</xref:System.Data.DataTable>       Możesz usunąć DataRow z <xref:System.Data.DataRowCollection>przez wywołanie metody <xref:System.Data.DataRowCollection.Remove%2A>metody <xref:System.Data.DataRowCollection>, lub przez wywołanie metody <xref:System.Data.DataRow.Delete%2A>metody obiektu DataRow.</xref:System.Data.DataRow.Delete%2A> </xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Remove%2A> </xref:System.Data.DataRowCollection> <xref:System.Data.DataRowCollection.Remove%2A>Metoda usuwa wiersz z kolekcji.</xref:System.Data.DataRowCollection.Remove%2A> Z kolei <xref:System.Data.DataRow.Delete%2A>oznacza DataRow do usunięcia.</xref:System.Data.DataRow.Delete%2A> Rzeczywiste usunięcie występuje po wywołaniu <xref:System.Data.DataRow.AcceptChanges%2A>metody.</xref:System.Data.DataRow.AcceptChanges%2A> Wywołując <xref:System.Data.DataRow.Delete%2A>, można programowo sprawdzić wiersze, które są oznaczone do usunięcia przed ich usuwania rzeczywiście.</xref:System.Data.DataRow.Delete%2A> Aby uzyskać więcej informacji, zobacz [usunięcia DataRow](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a new DataRow by calling the <xref:System.Data.DataTable.NewRow%2A> method of the <xref:System.Data.DataTable> object.  \n  \n [!code-vb[Classic WebData DataRow Example#1](~/add/codesnippet/visualbasic/t-system.data.datarow_1.vb)]\n [!code-cs[Classic WebData DataRow Example#1](~/add/codesnippet/csharp/t-system.data.datarow_1.cs)]"
  syntax:
    content: public class DataRow
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  id: '#ctor(System.Data.DataRowBuilder)'
  parent: System.Data.DataRow
  langs:
  - csharp
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: System.Data.DataRow.DataRow(DataRowBuilder)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicjuje nowe wystąpienie klasy DataRow. Tworzy wiersza z konstruktora. Tylko do użytku wewnętrznego."
  syntax:
    content: protected DataRow (System.Data.DataRowBuilder builder);
    parameters:
    - id: builder
      type: System.Data.DataRowBuilder
      description: "Konstruktor"
  overload: System.Data.DataRow.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.AcceptChanges
  id: AcceptChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: System.Data.DataRow.AcceptChanges()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Zatwierdza wszystkie zmiany wprowadzone od czasu ostatniego została wywołana metoda AcceptChanges tego wiersza."
  remarks: "Podczas wywoływania AcceptChanges, <xref:System.Data.DataRow.EndEdit%2A>wywoływana jest metoda niejawnie zakończyć wszystkie edycje.</xref:System.Data.DataRow.EndEdit%2A> Jeśli <xref:System.Data.DataRow.RowState%2A>wiersz został dodany lub zmodyfikowany, <xref:System.Data.DataRow.RowState%2A>staje się Unchanged.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A> Jeśli <xref:System.Data.DataRow.RowState%2A>został usunięty, wiersza zostanie usunięty.</xref:System.Data.DataRow.RowState%2A>       Zobacz <xref:System.Data.DataRow.BeginEdit%2A>metody, aby uzyskać więcej informacji.</xref:System.Data.DataRow.BeginEdit%2A>       <xref:System.Data.DataTable>Klasa ma również <xref:System.Data.DataTable.AcceptChanges%2A>metodę, która wpływa na zmiany w całej tabeli.</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataTable> Więcej informacji oraz przykładowy kod, który demonstruje sposób zaakceptować lub odrzucić zmiany do wierszy poszczególnych danych, zobacz [AcceptChanges i RejectChanges](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its <xref:System.Data.DataRow.RowState%2A> is printed.  \n  \n [!code-cs[Classic WebData DataRow.AcceptChanges Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ac_1.cs)]\n [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ac_1.vb)]"
  syntax:
    content: public void AcceptChanges ();
    parameters: []
  overload: System.Data.DataRow.AcceptChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do tabeli."
  platform:
  - net462
- uid: System.Data.DataRow.BeginEdit
  id: BeginEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: System.Data.DataRow.BeginEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Rozpoczyna operację edycji na <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektu."
  remarks: "Umieść przy użyciu metody BeginEdit <xref:System.Data.DataRow>w trybie edycji.</xref:System.Data.DataRow> W tym trybie zdarzenia są tymczasowo wstrzymane, przez użytkownika zmiany więcej niż jeden wiersz, bez wyzwalania reguł sprawdzania poprawności. Na przykład jeśli musi upewnij się, że wartość w kolumnie dla całkowita ilość jest równa wartości dla DT i kolumn w wierszu karty kredytowej, możesz umieścić każdego wiersza w trybie edycji wstrzymania walidacji wartości wierszy, dopóki użytkownik spróbuje przekazać wartości.       Metoda BeginEdit jest wywoływana niejawnie, gdy użytkownik zmieni wartość formantu powiązanego z danymi; <xref:System.Data.DataRow.EndEdit%2A>wywoływana jest metoda niejawnie po wywołaniu <xref:System.Data.DataTable.AcceptChanges%2A>metodę <xref:System.Data.DataTable>obiektu.</xref:System.Data.DataTable> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> W tym trybie edycji <xref:System.Data.DataRow>przechowuje reprezentacje oryginalne i nowe proponowane wartości.</xref:System.Data.DataRow> W związku z tym tak długo, jak <xref:System.Data.DataRow.EndEdit%2A>nie wywołano metody, przekazując albo można pobrać oryginalnej lub proponowanych wersji `DataRowVersion.Original` lub `DataRowVersion.Proposed` dla `version` parametr <xref:System.Data.DataRow.Item%2A>Właściwości.</xref:System.Data.DataRow.Item%2A> </xref:System.Data.DataRow.EndEdit%2A> Można również anulować wszelkie zmiany w tym momencie, wywołując <xref:System.Data.DataRow.CancelEdit%2A>metody.</xref:System.Data.DataRow.CancelEdit%2A>       Aby zobaczyć, czy wiersz zawiera wartość oryginalnej lub proponowanych, należy wywołać <xref:System.Data.DataRow.HasVersion%2A>metody.</xref:System.Data.DataRow.HasVersion%2A>      > [!NOTE] > BeginEdit tymczasowo wstrzymuje <xref:System.Data.DataTable.RowChanging>zdarzeń, ale `delete` nie obsługuje operacji.</xref:System.Data.DataTable.RowChanging>"
  example:
  - "The example creates a simple <xref:System.Data.DataTable> with one <xref:System.Data.DataColumn> and five <xref:System.Data.DataRow> objects, and a <xref:System.Data.UniqueConstraint>. A <xref:System.Data.DataTable.RowChanged> event handler is also added to monitor when the row's value is changing. After invoking BeginEdit on the existing rows, the constraint and event are temporarily disabled and the original and proposed values are printed. The BeginEdit is again invoked to set two rows to the same value. When <xref:System.Data.DataRow.EndEdit%2A> is called, the <xref:System.Data.UniqueConstraint> is enforced on the identical values.  \n  \n [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.be_1.vb)]\n [!code-cs[Classic WebData DataRow.BeginEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.be_1.cs)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Data.DataRow.BeginEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "Metoda została wywołana wewnątrz <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> zdarzeń."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Metoda została wywołana po usuniętym wierszu."
  platform:
  - net462
- uid: System.Data.DataRow.CancelEdit
  id: CancelEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: System.Data.DataRow.CancelEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Anuluje bieżący edycji w tym wierszu."
  remarks: "Zobacz <xref:System.Data.DataRow.BeginEdit%2A>metody, aby uzyskać więcej informacji.</xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example edits the value of one column in the last row of a <xref:System.Windows.Forms.DataGrid> control. The example uses the <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, methods to edit the column's value and commit the change to the row.  \n  \n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ca_1.vb)]\n [!code-cs[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ca_1.cs)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Data.DataRow.CancelEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "Metoda została wywołana wewnątrz <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> zdarzeń."
  platform:
  - net462
- uid: System.Data.DataRow.ClearErrors
  id: ClearErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: System.Data.DataRow.ClearErrors()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Usuwa błędy wiersza. Obejmuje to <> </> *> i błędy ustawiony za pomocą <> </> *>."
  remarks: "Użyj <xref:System.Data.DataRow.SetColumnError%2A>i <xref:System.Data.DataRow.GetColumnError%2A>do Ustawianie i zwracanie błędów dla poszczególnych kolumn.</xref:System.Data.DataRow.GetColumnError%2A> </xref:System.Data.DataRow.SetColumnError%2A>       Ustaw <xref:System.Data.DataRow.RowError%2A>Właściwości można ustawić błąd, który ma zastosowanie do całego wiersza.</xref:System.Data.DataRow.RowError%2A>       Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A>metody.</xref:System.Data.DataRow.HasErrors%2A> W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A>metodę, aby pobrać wszystkie kolumny z błędami.</xref:System.Data.DataRow.GetColumnsInError%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The ClearErrors method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/csharp/m-system.data.datarow.cl_1.cs)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.cl_1.vb)]"
  syntax:
    content: public void ClearErrors ();
    parameters: []
  overload: System.Data.DataRow.ClearErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.Delete
  id: Delete
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: System.Data.DataRow.Delete()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Usuwa <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  remarks: "Jeśli <xref:System.Data.DataRow.RowState%2A>wiersza zostanie dodany, <xref:System.Data.DataRow.RowState%2A>staje się `Detached` i usunięciu wiersza z tabeli po wywołaniu <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A>       <xref:System.Data.DataRow.RowState%2A>Staje się `Deleted` po użyciu metody Delete na istniejących <xref:System.Data.DataRow>.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowState%2A> Pozostaje `Deleted` czasu wywołania <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> W tej chwili <xref:System.Data.DataRow>zostanie usunięty z tabeli.</xref:System.Data.DataRow>       Usuń nie powinna być wywoływana w pętli foreach podczas iteracji <xref:System.Data.DataRowCollection>obiektu.</xref:System.Data.DataRowCollection> Usuń modyfikuje stan kolekcji.       Usuniętym wierszu można odzyskać za pomocą <xref:System.Data.DataRow.RejectChanges%2A>.</xref:System.Data.DataRow.RejectChanges%2A>      > [!NOTE] > <xref:System.Data.DataRow.BeginEdit%2A>Tymczasowo wstrzymuje <xref:System.Data.DataTable.RowChanging>zdarzeń, ale operacja usuwania nie.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with two columns and ten rows. After deleting several <xref:System.Data.DataRow> items with the Delete method, one of the rows is undeleted by invoking <xref:System.Data.DataRow.RejectChanges%2A>.  \n  \n [!code-vb[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.de_1.vb)]\n [!code-cs[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/csharp/m-system.data.datarow.de_1.cs)]"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.Data.DataRow.Delete*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "<xref href=&quot;System.Data.DataRow&quot;> </xref> Został już usunięty."
  platform:
  - net462
- uid: System.Data.DataRow.EndEdit
  id: EndEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: System.Data.DataRow.EndEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kończy się Edycja występujących w tym wierszu."
  remarks: "Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.RowChanging>zdarzeń.</xref:System.Data.DataTable.RowChanging>"
  example:
  - "The following example uses the EndEdit method to end the edit of a <xref:System.Data.DataRow> value if the validation function returns true.  \n  \n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.en_1.vb)]\n [!code-cs[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.en_1.cs)]"
  syntax:
    content: public void EndEdit ();
    parameters: []
  overload: System.Data.DataRow.EndEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "Metoda została wywołana wewnątrz <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> zdarzeń."
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "Edycja spowodowało przerwanie ograniczenia."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "Wiersz należy do tabeli i Edycja próbowała zmienić wartość kolumny tylko do odczytu."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Edycja próbował umieścić wartość null w kolumnie gdzie <xref:System.Data.DataColumn.AllowDBNull*>ma wartość false.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  id: GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: System.Data.DataRow.GetChildRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera to wiersze podrzędne <xref href=&quot;System.Data.DataRow&quot;> </xref> przy użyciu określonego <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "<xref:System.Data.DataTable>Również zawiera kolekcję <xref:System.Data.DataRelation>obiektów, które są zwracane przez <xref:System.Data.DataTable.ChildRelations%2A>Właściwości.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-cs[Classic WebData DataRow.GetChildRows2 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_8_1.cs)]\n [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_8_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow[]
      description: "Tablica <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów lub tablicą o zerowej długości."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relacja i wiersz nie należą do tej samej tabeli."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Relacja <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do tabeli."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Wiersz nie ma tej wersji danych."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.String)
  id: GetChildRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: System.Data.DataRow.GetChildRows(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wiersze podrzędne <xref href=&quot;System.Data.DataRow&quot;> </xref> przy użyciu określonego <xref:System.Data.DataRelation.RelationName*>z <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "<xref:System.Data.DataTable>Również zawiera kolekcję <xref:System.Data.DataRelation>obiektów, które są zwracane przez <xref:System.Data.DataTable.ChildRelations%2A>Właściwości.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "<xref:System.Data.DataRelation.RelationName*>z <xref href=&quot;System.Data.DataRelation&quot;> </xref> do użycia.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow[]
      description: "Tablica <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów lub tablicą o zerowej długości."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relacja i wiersz nie należą do tej samej tabeli."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do tabeli."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wiersze podrzędne <xref href=&quot;System.Data.DataRow&quot;> </xref> przy użyciu określonego <xref href=&quot;System.Data.DataRelation&quot;> </xref>, i <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "<xref:System.Data.DataTable>Również zawiera kolekcję <xref:System.Data.DataRelation>obiektów, które są zwracane przez <xref:System.Data.DataTable.ChildRelations%2A>Właściwości.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Użyj <xref:System.Data.DataRow.HasVersion%2A>Umożliwia określenie, czy <xref:System.Data.DataRowVersion>mają istnieje.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>       Jeśli <xref:System.Data.DataRowVersion>jest określony, zależy od wersji, która jest używana <xref:System.Data.DataRow.RowState%2A>wiersza, w którym `GetChildRows` jest wywoływany.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRowVersion> Jeśli wiersz, w którym `GetChildRows` jest wywoływana ma `RowState` z `Modified`, `New`, lub `Unchanged`, <xref:System.Data.DataRowVersion>wersji wiersza służy do pobierania wierszy podrzędnych z takimi samymi wartościami w ich bieżącej wersji.</xref:System.Data.DataRowVersion> Jeśli wiersz, w którym `GetChildRows` jest wywoływana ma `RowState` z `Deleted`, <xref:System.Data.DataRowVersion>wersji wiersza służy do pobierania wierszy podrzędnych z takimi samymi wartościami w wersjach oryginalnych.</xref:System.Data.DataRowVersion>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column with the specified version in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/add/codesnippet/visualbasic/47f0f4a3-cc08-456d-98cc-_1.vb)]\n [!code-cs[Classic WebData DataRow.GetChildRows3 Example#1](~/add/codesnippet/csharp/47f0f4a3-cc08-456d-98cc-_1.cs)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "Jeden z <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> określanie wersji danych można pobrać wartości. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "Tablica <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relacja i wiersz nie należą do tej samej tabeli."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do tabeli."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Wiersz nie ma żądanego <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  id: GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String,DataRowVersion)
  nameWithType: DataRow.GetChildRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wiersze podrzędne <xref href=&quot;System.Data.DataRow&quot;> </xref> przy użyciu określonego <xref:System.Data.DataRelation.RelationName*>z <xref href=&quot;System.Data.DataRelation&quot;> </xref>, i <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "<xref:System.Data.DataTable>Również zawiera kolekcję <xref:System.Data.DataRelation>obiektów, które są zwracane przez <xref:System.Data.DataTable.ChildRelations%2A>Właściwości.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Użyj <xref:System.Data.DataRow.HasVersion%2A>Umożliwia określenie, czy <xref:System.Data.DataRowVersion>mają istnieje.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>       Jeśli <xref:System.Data.DataRowVersion>jest określony, zależy od wersji, która jest używana <xref:System.Data.DataRow.RowState%2A>wiersza, w którym `GetChildRows` jest wywoływany.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRowVersion> Jeśli wiersz, w którym `GetChildRows` jest wywoływana ma `RowState` z `Modified`, `New`, lub `Unchanged`, <xref:System.Data.DataRowVersion>wersji wiersza służy do pobierania wierszy podrzędnych z takimi samymi wartościami w ich bieżącej wersji.</xref:System.Data.DataRowVersion> Jeśli wiersz, w którym `GetChildRows` jest wywoływana ma `RowState` z `Deleted`, <xref:System.Data.DataRowVersion>wersji wiersza służy do pobierania wierszy podrzędnych z takimi samymi wartościami w wersjach oryginalnych.</xref:System.Data.DataRowVersion>"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "<xref:System.Data.DataRelation.RelationName*>z <xref href=&quot;System.Data.DataRelation&quot;> </xref> do użycia.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "Jeden z <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> określanie wersji danych można pobrać wartości. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "Tablica <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów lub tablicą o zerowej długości."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relacja i wiersz nie należą do tej samej tabeli."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do tabeli."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Wiersz nie ma żądanego <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  id: GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: System.Data.DataRow.GetColumnError(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera opis błędu o określonym <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Użyj <xref:System.Data.DataRow.SetColumnError%2A>metodę, aby ustawić kolumny błędy.</xref:System.Data.DataRow.SetColumnError%2A>       Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A>metody.</xref:System.Data.DataRow.HasErrors%2A> W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A>metodę, aby pobrać wszystkie kolumny z błędami.</xref:System.Data.DataRow.GetColumnsInError%2A> Alternatywnie <xref:System.Data.DataTable.GetErrors%2A>Metoda <xref:System.Data.DataTable>zwraca wszystkie wiersze z błędami.</xref:System.Data.DataTable> </xref:System.Data.DataTable.GetErrors%2A>       Aby wyczyścić wszystkich błędów dla kolekcji kolumn, użyj <xref:System.Data.DataRow.ClearErrors%2A>metody.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_1_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_1_1.vb)]"
  syntax:
    content: public string GetColumnError (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    return:
      type: System.String
      description: "Tekst opisu błędu."
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  id: GetColumnError(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: System.Data.DataRow.GetColumnError(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera opis błędu dla kolumny określone przez indeks."
  remarks: "Użyj <xref:System.Data.DataRow.SetColumnError%2A>metodę, aby ustawić kolumny błędy.</xref:System.Data.DataRow.SetColumnError%2A>       Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A>metody.</xref:System.Data.DataRow.HasErrors%2A> W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A>metodę, aby pobrać wszystkie kolumny z błędami.</xref:System.Data.DataRow.GetColumnsInError%2A>       Aby wyczyścić wszystkich błędów dla kolekcji kolumn, użyj <xref:System.Data.DataRow.ClearErrors%2A>metody.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_6_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_6_1.vb)]"
  syntax:
    content: public string GetColumnError (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Liczony od zera indeks kolumny."
    return:
      type: System.String
      description: "Tekst opisu błędu."
  overload: System.Data.DataRow.GetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code> columnIndex </code> Argument jest spoza zakresu."
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.String)
  id: GetColumnError(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: System.Data.DataRow.GetColumnError(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera opis błędu dla kolumny, określony przez nazwę."
  remarks: "Użyj <xref:System.Data.DataRow.SetColumnError%2A>metodę, aby ustawić kolumny błędy.</xref:System.Data.DataRow.SetColumnError%2A>       Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A>metody.</xref:System.Data.DataRow.HasErrors%2A> W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A>metodę, aby pobrać wszystkie kolumny z błędami.</xref:System.Data.DataRow.GetColumnsInError%2A>       Aby wyczyścić wszystkich błędów dla kolekcji kolumn, użyj <xref:System.Data.DataRow.ClearErrors%2A>metody.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_0_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_0_1.vb)]"
  syntax:
    content: public string GetColumnError (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "Nazwa kolumny."
    return:
      type: System.String
      description: "Tekst opisu błędu."
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnsInError
  id: GetColumnsInError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: System.Data.DataRow.GetColumnsInError()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera tablicę kolumny, które mają błędy."
  remarks: "GetColumnsInError pozwala zmniejszyć liczbę <xref:System.Data.DataColumn>obiektów, które muszą zostać przetworzone przez zwrócenie tylko kolumny, które mają błąd błędy.</xref:System.Data.DataColumn> Błędy może być ustawiony na poszczególnych kolumn z <xref:System.Data.DataRow.SetColumnError%2A>metody.</xref:System.Data.DataRow.SetColumnError%2A> Aby jeszcze bardziej ograniczyć liczbę przetwarzania, należy sprawdzić <xref:System.Data.DataRow.HasErrors%2A>Właściwość <xref:System.Data.DataRow>klasę, aby określić czy <xref:System.Data.DataRow>zawiera błędy przed wywołaniem GetColumnsInError.</xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DataRow.HasErrors%2A>       Użyj <xref:System.Data.DataRow.ClearErrors%2A>metodę, aby wyczyścić wszystkie błędy na wiersz.</xref:System.Data.DataRow.ClearErrors%2A> Dotyczy to również <xref:System.Data.DataRow.RowError%2A>.</xref:System.Data.DataRow.RowError%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the GetColumnsInError method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_5_1.cs)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_5_1.vb)]"
  syntax:
    content: public System.Data.DataColumn[] GetColumnsInError ();
    parameters: []
    return:
      type: System.Data.DataColumn[]
      description: "Tablica <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiektów, które zawierają błędy."
  overload: System.Data.DataRow.GetColumnsInError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  id: GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: System.Data.DataRow.GetParentRow(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wiersza nadrzędnego <xref href=&quot;System.Data.DataRow&quot;> </xref> przy użyciu określonego <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation>obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A>metody.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>Również zawiera kolekcję <xref:System.Data.DataRelation>obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A>Właściwości.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-cs[Classic WebData DataRow.GetParentRow2 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_3_1.cs)]\n [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_3_1.vb)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow
      description: "Element nadrzędny <xref href=&quot;System.Data.DataRow&quot;> </xref> bieżącego wiersza."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> relation </code> Nie należy do <xref href=&quot;System.Data.DataTable&quot;> </xref>.       The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Wiersz podrzędny ma wiele elementów nadrzędnych."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Ten wiersz nie należy do tabeli podrzędnej <xref href=&quot;System.Data.DataRelation&quot;> </xref> obiektu."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do tabeli."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.String)
  id: GetParentRow(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: System.Data.DataRow.GetParentRow(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wiersza nadrzędnego <xref href=&quot;System.Data.DataRow&quot;> </xref> przy użyciu określonego <xref:System.Data.DataRelation.RelationName*>z <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation>obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A>metody.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>Również zawiera kolekcję <xref:System.Data.DataRelation>obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A>Właściwości.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the GetParentRow to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataRow.GetParentRow Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_4_1.cs)]\n [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_4_1.vb)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow
      description: "Element nadrzędny <xref href=&quot;System.Data.DataRow&quot;> </xref> bieżącego wiersza."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relacja i wiersz nie należą do tej samej tabeli."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Wiersz podrzędny ma wiele elementów nadrzędnych."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do tabeli."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wiersza nadrzędnego <xref href=&quot;System.Data.DataRow&quot;> </xref> przy użyciu określonego <xref href=&quot;System.Data.DataRelation&quot;> </xref>, i <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation>obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A>metody.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>Również zawiera kolekcję <xref:System.Data.DataRelation>obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A>Właściwości.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Użyj <xref:System.Data.DataRow.HasVersion%2A>Umożliwia określenie, czy <xref:System.Data.DataRowVersion>mają istnieje.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/add/codesnippet/visualbasic/a16d1012-4e05-4bd8-9275-_1.vb)]\n [!code-cs[Classic WebData DataRow.GetParentRow3 Example#1](~/add/codesnippet/csharp/a16d1012-4e05-4bd8-9275-_1.cs)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "Jeden z <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> określanie wersji danych można pobrać wartości."
    return:
      type: System.Data.DataRow
      description: "Element nadrzędny <xref href=&quot;System.Data.DataRow&quot;> </xref> bieżącego wiersza."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       <code> relation </code> Nie należy do tej tabeli nadrzędnej relacji."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Wiersz podrzędny ma wiele elementów nadrzędnych."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Tabelą podrzędną dla relacji nie jest tabelą, którego należy wiersz."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do tabeli."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Wiersz nie ma tej wersji danych."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  id: GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String,DataRowVersion)
  nameWithType: DataRow.GetParentRow(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wiersza nadrzędnego <xref href=&quot;System.Data.DataRow&quot;> </xref> przy użyciu określonego <xref:System.Data.DataRelation.RelationName*>z <xref href=&quot;System.Data.DataRelation&quot;> </xref>, i <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation>obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A>metody.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>Również zawiera kolekcję <xref:System.Data.DataRelation>obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A>Właściwości.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Użyj <xref:System.Data.DataRow.HasVersion%2A>Umożliwia określenie, czy <xref:System.Data.DataRowVersion>mają istnieje.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_7_1.vb)]\n [!code-cs[Classic WebData DataRow.GetParentRow1 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_7_1.cs)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "Jeden z <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> wartości."
    return:
      type: System.Data.DataRow
      description: "Element nadrzędny <xref href=&quot;System.Data.DataRow&quot;> </xref> bieżącego wiersza."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relacja i wiersz nie należą do tej samej tabeli."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Wiersz podrzędny ma wiele elementów nadrzędnych."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do tabeli."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Wiersz nie ma żądanego <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  id: GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: System.Data.DataRow.GetParentRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera element nadrzędny wiersze <xref href=&quot;System.Data.DataRow&quot;> </xref> przy użyciu określonego <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation>obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A>metody.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>Również zawiera kolekcję <xref:System.Data.DataRelation>obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A>Właściwości.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_2_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow[]
      description: "Tablica <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów lub tablicą o zerowej długości."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Data.DataRelation&quot;> </xref> Nie należy do tego wiersza <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Tabelą podrzędną dla relacji nie jest tabelą, którego należy wiersz."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.String)
  id: GetParentRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: System.Data.DataRow.GetParentRows(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera element nadrzędny wiersze <xref href=&quot;System.Data.DataRow&quot;> </xref> przy użyciu określonego <xref:System.Data.DataRelation.RelationName*>z <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation>obiektów dla zestawu danych jest zwracany przez metodę GetParentRows.</xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>Również zawiera kolekcję <xref:System.Data.DataRelation>obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A>Właściwości.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow[]
      description: "Tablica <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów lub tablicą o zerowej długości."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relacja i wiersz nie należą do tej samej tabeli."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do tabeli."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera element nadrzędny wiersze <xref href=&quot;System.Data.DataRow&quot;> </xref> przy użyciu określonego <xref href=&quot;System.Data.DataRelation&quot;> </xref>, i <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation>obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A>metody.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>Również zawiera kolekcję <xref:System.Data.DataRelation>obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A>Właściwości.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Użyj <xref:System.Data.DataRow.HasVersion%2A>Umożliwia określenie, czy <xref:System.Data.DataRowVersion>mają istnieje.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/add/codesnippet/visualbasic/14f3e3ca-84f4-434d-94fa-_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "Jeden z <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> określanie wersji danych można pobrać wartości."
    return:
      type: System.Data.DataRow[]
      description: "Tablica <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów lub tablicą o zerowej długości."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Data.DataRelation&quot;> </xref> Nie należy do tego wiersza <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Tabelą podrzędną dla relacji nie jest tabelą, którego należy wiersz."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Wiersz nie ma żądanego <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  id: GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String,DataRowVersion)
  nameWithType: DataRow.GetParentRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera element nadrzędny wiersze <xref href=&quot;System.Data.DataRow&quot;> </xref> przy użyciu określonego <xref:System.Data.DataRelation.RelationName*>z <xref href=&quot;System.Data.DataRelation&quot;> </xref>, i <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "W <xref:System.Data.DataSet>, kolekcji nadrzędnej wszystkich <xref:System.Data.DataRelation>obiektów dla zestawu danych jest zwracany przez <xref:System.Data.DataRow.GetParentRows%2A>metody.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       <xref:System.Data.DataTable>Również zawiera kolekcję <xref:System.Data.DataRelation>obiekty zwrócone przez <xref:System.Data.DataTable.ParentRelations%2A>Właściwości.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Użyj <xref:System.Data.DataRow.HasVersion%2A>Umożliwia określenie, czy <xref:System.Data.DataRowVersion>mają istnieje.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "Jeden z <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> określanie wersji danych można pobrać wartości. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "Tablica <xref href=&quot;System.Data.DataRow&quot;> </xref> obiektów lub tablicą o zerowej długości."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relacja i wiersz nie należą do tej samej tabeli."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do tabeli."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Wiersz nie ma żądanego <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.HasErrors
  id: HasErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: System.Data.DataRow.HasErrors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy występują błędy w wierszu."
  remarks: "`HasErrors`Zwraca `true` ewentualne <xref:System.Data.DataColumn>obiekt w wierszu zawiera błąd, lub jeśli <xref:System.Data.DataRow.RowError%2A>Właściwość <xref:System.Data.DataRow>nie jest ciągiem pustym.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowError%2A> </xref:System.Data.DataColumn>       Podczas sprawdzania poprawności danych, można ustawić błąd według dowolnej kolumny w wierszu. Takie kolumny, gdy wyświetlana w <xref:System.Windows.Forms.DataGrid?displayProperty=fullName>sterowania, jest oznaczony atrybutem czerwonego wykrzyknika sygnalizują dla użytkownika, czy kolumna jest błędny.</xref:System.Windows.Forms.DataGrid?displayProperty=fullName>       Użyj <xref:System.Data.DataRow.SetColumnError%2A>można ustawić błąd dla każdej kolumny.</xref:System.Data.DataRow.SetColumnError%2A>       Użyj <xref:System.Data.DataRow.GetColumnError%2A>i `GetColumnsInError` metody zwraca kolumn z błędami.</xref:System.Data.DataRow.GetColumnError%2A>       <xref:System.Data.DataRow.ClearErrors%2A>Metody spowoduje wyczyszczenie wszystkich błędów dla wiersza.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example uses the HasErrors to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.HasErrors Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ha_1.cs)]\n [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ha_1.vb)]"
  syntax:
    content: public bool HasErrors { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wiersz zawiera błąd; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.HasErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  id: HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: System.Data.DataRow.HasVersion(DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy istnieje określona wersja."
  remarks: "Zobacz <xref:System.Data.DataRow.BeginEdit%2A>metody, aby uzyskać więcej informacji.</xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example uses the HasVersion method to determine whether the current value of a column and the proposed value are the same. If so, the edit is canceled. Otherwise, the <xref:System.Data.DataRow.AcceptChanges%2A> method is called to end the edit.  \n  \n [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ha_1.vb)]"
  syntax:
    content: public bool HasVersion (System.Data.DataRowVersion version);
    parameters:
    - id: version
      type: System.Data.DataRowVersion
      description: "Jeden z <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> wartości, które określa wersję wiersza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wersja istnieje; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.HasVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  id: IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: System.Data.DataRow.IsNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy określony <xref href=&quot;System.Data.DataColumn&quot;> </xref> zawiera wartość null."
  remarks: ''
  example:
  - "The following example prints each column of each row in each table of a <xref:System.Data.DataSet>. If the row is set to a null value, the value is not printed.  \n  \n [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_2_1.vb)]"
  syntax:
    content: public bool IsNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli kolumna zawiera wartości null; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Int32)
  id: IsNull(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: System.Data.DataRow.IsNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy kolumna pod określonym indeksem zawiera wartość null."
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the IsNull method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_1_1.vb)]"
  syntax:
    content: public bool IsNull (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Liczony od zera indeks kolumny."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli kolumna zawiera wartości null; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.String)
  id: IsNull(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: System.Data.DataRow.IsNull(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy kolumna o nazwie zawiera wartość null."
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the <xref:System.Data.DataRow.IsNull%2A> method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_0_1.vb)]"
  syntax:
    content: public bool IsNull (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "Nazwa kolumny."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli kolumna zawiera wartości null; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  id: IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn,DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.IsNull(DataColumn,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera wartość wskazującą, czy określony <xref href=&quot;System.Data.DataColumn&quot;> </xref> i <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> zawiera wartość null."
  syntax:
    content: public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    - id: version
      type: System.Data.DataRowVersion
      description: "Jeden z <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> wartości, które określa wersję wiersza. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli kolumna zawiera wartości null; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  id: Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: System.Data.DataRow.Item(DataColumn)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia dane przechowywane w określonej <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.ColumnChanging>zdarzeń.</xref:System.Data.DataTable.ColumnChanging>       Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A>Wyjątki, które mogą być generowane.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this2 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_3_1.vb)]"
  syntax:
    content: public object this[System.Data.DataColumn column] { get; set; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;> </xref> zawierający dane."
    return:
      type: System.Object
      description: "<xref:System.Object>Zawierający dane.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Kolumna nie należy do tej tabeli."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> is null."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Próbowano ustawić wartość na wiersz usunięty."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typy danych wartości i kolumny nie są zgodne."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: System.Data.DataRow.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia dane przechowywane w kolumnie określonej przez indeks."
  remarks: "Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.ColumnChanging>zdarzeń.</xref:System.Data.DataTable.ColumnChanging>       Jeśli jest to edycji, zobacz <xref:System.Data.DataRow.EndEdit%2A>Wyjątki, które mogą być generowane.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the Item property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-vb[Classic WebData DataRow.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_0_1.vb)]\n [!code-cs[Classic WebData DataRow.this Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_0_1.cs)]"
  syntax:
    content: public object this[int columnIndex] { get; set; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Liczony od zera indeks kolumny."
    return:
      type: System.Object
      description: "<xref:System.Object>Zawierający dane.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Występuje, gdy spróbujesz ustawić wartości dla usuniętych wierszy."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code> columnIndex </code> Argument jest spoza zakresu."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Występuje, gdy ustawiona wartość i nowa wartość <xref:System.Type>jest niezgodna z <xref:System.Data.DataColumn.DataType*>.</xref:System.Data.DataColumn.DataType*> </xref:System.Type>"
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: System.Data.DataRow.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia dane przechowywane w kolumnie określonej przez nazwę."
  remarks: "Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.ColumnChanging>zdarzeń.</xref:System.Data.DataTable.ColumnChanging>       Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A>Wyjątki, które mogą być generowane.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_2_1.vb)]\n [!code-cs[Classic WebData DataRow.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_2_1.cs)]"
  syntax:
    content: public object this[string columnName] { get; set; }
    parameters:
    - id: columnName
      type: System.String
      description: "Nazwa kolumny."
    return:
      type: System.Object
      description: "<xref:System.Object>Zawierający dane.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Kolumna określona przez <code> columnName </code> nie można odnaleźć."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Występuje, gdy spróbujesz ustawić wartości dla usuniętych wierszy."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Występuje, gdy ustawiona wartość i <xref:System.Type>jest niezgodny z <xref:System.Data.DataColumn.DataType*>.</xref:System.Data.DataColumn.DataType*> </xref:System.Type>"
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Występuje, gdy zostanie podjęta próba wstawienia wartości null do kolumny gdzie <xref:System.Data.DataColumn.AllowDBNull*>ustawiono <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  id: Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn,DataRowVersion)
  nameWithType: DataRow.Item(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.Item(DataColumn,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera określoną wersję danych przechowywanych w określonym <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "`version` Nie należy mylić z <xref:System.Data.DataRow.RowState%2A>Właściwości.</xref:System.Data.DataRow.RowState%2A> `version` Argument opisuje stan danych, który jest zawarty w kolumnie względem oryginalnej wartości w kolumnie.       Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.ColumnChanging>zdarzeń.</xref:System.Data.DataTable.ColumnChanging>       Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A>Wyjątki, które mogą być generowane.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current value of a clicked cell in the <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-cs[Classic WebData DataRow.this5 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_6_1.cs)]\n [!code-vb[Classic WebData DataRow.this5 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_6_1.vb)]"
  syntax:
    content: public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;> </xref> zawierający informacje dotyczące kolumny."
    - id: version
      type: System.Data.DataRowVersion
      description: "Jeden z <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> wartości, które określa wersję wiersza, który ma. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "<xref:System.Object>Zawierający dane.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Kolumna nie należy do tabeli."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> column </code> Argument zawiera wartość null."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Wiersz nie ma tej wersji danych."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  id: Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32,DataRowVersion)
  nameWithType: DataRow.Item(Int32,DataRowVersion)
  fullName: System.Data.DataRow.Item(Int32,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera dane przechowywane w kolumnie, określony przez indeks i wersji danych do pobrania."
  remarks: "Można tylko utworzyć lub zaktualizować wiersza po wywołaniu <xref:System.Data.DataRow.BeginEdit%2A>metody; podobnie, <xref:System.Data.DataRow.EndEdit%2A>Metoda musi zostać wywołana w celu zatwierdzenia Edytuj</xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRow.BeginEdit%2A> Po wywołaniu metody <xref:System.Data.DataRow.EndEdit%2A>metody i przed wywołaniem <xref:System.Data.DataRow.AcceptChanges%2A>metody wewnętrznej reprezentacji oryginału i nowe proponowane wartości są przechowywane.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> W związku z tym czasu wywołania <xref:System.Data.DataRow.AcceptChanges%2A>, można użyć `version` argumentu, aby określić, która wersja wartość kolumny potrzebujesz, albo `DataRowVersion.Original` lub `DataRowVersion.Proposed`.</xref:System.Data.DataRow.AcceptChanges%2A> Jednak niezwłocznie po wywołaniu <xref:System.Data.DataRow.AcceptChanges%2A>metody przekształcenia wersji kolumny `DataRowVersion.Original`.</xref:System.Data.DataRow.AcceptChanges%2A> W przypadku nowego wiersza, można również przekazać `DataRowVersion.Default` dla parametru, aby pobrać wartość domyślna w kolumnie. Podczas przekazywania `DataRowVersion.Current`, właściwość zwraca bieżącą wartość, niezależnie od jego wersja może być.      > [!NOTE] > <xref:System.Data.DataRow.BeginEdit%2A>Wywoływana jest metoda niejawnie po zmianie wartości formantu powiązanego z danymi, lub gdy <xref:System.Data.DataRow>obiekt jest dodawany do <xref:System.Data.DataRowCollection>; <xref:System.Data.DataRow.EndEdit%2A>wywoływana jest metoda niejawnie podczas wywoływania następujące metody: <xref:System.Data.DataRow.AcceptChanges%2A>metody <xref:System.Data.DataRow>obiektu, <xref:System.Data.DataTable.AcceptChanges%2A>metody <xref:System.Data.DataTable>obiektu, lub <xref:System.Data.DataRow.CancelEdit%2A>— Metoda.</xref:System.Data.DataRow.CancelEdit%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRowCollection> </xref:System.Data.DataRow> </xref:System.Data.DataRow.BeginEdit%2A>       Z kolei <xref:System.Data.DataRowVersion>wyliczenie `Current` zwraca informacje o wersji danych po <xref:System.Data.DataRow.EndEdit%2A>została wywołana metoda.</xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRowVersion>       `version` Argument nie należy mylić z <xref:System.Data.DataRow.RowState%2A>Właściwości.</xref:System.Data.DataRow.RowState%2A> `version` Argument opisuje stan danych, który jest zawarty w kolumnie względem oryginalnej wartości w kolumnie. <xref:System.Data.DataRow.RowState%2A>Właściwość opisuje stan całego wiersza względem jego elementu nadrzędnego <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow.RowState%2A>       Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.ColumnChanging>zdarzeń.</xref:System.Data.DataTable.ColumnChanging>       Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A>Wyjątki, które mogą być generowane.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current value of a column through the <xref:System.Data.DataRow.Item%2A> property of the <xref:System.Data.DataRow> object.  \n  \n [!code-vb[Classic WebData DataRow.this3 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_4_1.vb)]"
  syntax:
    content: public object this[int columnIndex, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Liczony od zera indeks kolumny."
    - id: version
      type: System.Data.DataRowVersion
      description: "Jeden z <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> wartości, które określa wersję wiersza, który ma. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "<xref:System.Object>Zawierający dane.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code> columnIndex </code> Argument jest spoza zakresu."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typy danych wartości i kolumny nie są zgodne."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Wiersz nie ma tej wersji danych."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Próbowano ustawić wartość na wiersz usunięty."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  id: Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String,DataRowVersion)
  nameWithType: DataRow.Item(String,DataRowVersion)
  fullName: System.Data.DataRow.Item(String,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera określoną wersję danych przechowywanych w kolumnie o nazwie."
  remarks: "Wersja nie należy mylić z <xref:System.Data.DataRow.RowState%2A>Właściwości.</xref:System.Data.DataRow.RowState%2A> `version` Argument opisuje stan danych, który jest zawarty w kolumnie względem oryginalnej wartości w kolumnie. <xref:System.Data.DataRow.RowState%2A>Właściwość opisuje stan całego wiersza względem jego elementu nadrzędnego <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow.RowState%2A>       Po ustawieniu właściwości wyjątek jest generowany w przypadku wystąpienia wyjątku w <xref:System.Data.DataTable.ColumnChanging>zdarzeń.</xref:System.Data.DataTable.ColumnChanging>       Jeśli jest to bezpośredniego edytowania, zobacz <xref:System.Data.DataRow.EndEdit%2A>Wyjątki, które mogą być generowane.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current version of data at a clicked cell of a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-vb[Classic WebData DataRow.this4 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_5_1.vb)]\n [!code-cs[Classic WebData DataRow.this4 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_5_1.cs)]"
  syntax:
    content: public object this[string columnName, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnName
      type: System.String
      description: "Nazwa kolumny."
    - id: version
      type: System.Data.DataRowVersion
      description: "Jeden z <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> wartości, które określa wersję wiersza, który ma. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "<xref:System.Object>Zawierający dane.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Kolumna określona przez <code> columnName </code> nie można odnaleźć."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typy danych wartości i kolumny nie są zgodne."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "Wiersz nie ma tej wersji danych."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Wiersz został usunięty."
  platform:
  - net462
- uid: System.Data.DataRow.ItemArray
  id: ItemArray
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: System.Data.DataRow.ItemArray
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia wszystkie wartości dla tego wiersza za pomocą tablicy."
  remarks: "Ta właściwość służy ustawić lub pobrać wartości dla tego wiersza za pomocą tablicy. Jeśli używasz tej właściwości można ustawić wartości tablicy musi mieć taki sam rozmiar i kolejność jako kolekcji kolumn. Przekazywanie `null` w ItemArray wskazuje, czy wartość nie została określona.       Użytkownicy mogą generować wyjątków w <xref:System.Data.DataTable.ColumnChanging>zdarzenia lub <xref:System.Data.DataTable.RowChanging>zdarzeń.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataTable.ColumnChanging>"
  example:
  - "The following examples show how to get and set values using the ItemArray property.  \n  \n [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_1_1.vb)]\n [!code-cs[Classic WebData DataRow.ItemArray Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_1_1.cs)]"
  syntax:
    content: public object[] ItemArray { get; set; }
    return:
      type: System.Object[]
      description: "Tablica typu <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.DataRow.ItemArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Tablica jest większa niż liczba kolumn w tabeli."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Wartość w tablicy nie odpowiada jego <xref:System.Data.DataColumn.DataType*>w jego odpowiednie <xref href=&quot;System.Data.DataColumn&quot;> </xref>.</xref:System.Data.DataColumn.DataType*>"
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "Edytuj spowodowało przerwanie ograniczenia."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "Edytuj próbował zmienić wartość kolumny tylko do odczytu."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Edytuj próbował umieścić wartość null w kolumnie gdzie <xref:System.Data.DataColumn.AllowDBNull*>z <xref href=&quot;System.Data.DataColumn&quot;> </xref> obiekt jest <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataColumn.AllowDBNull*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Wiersz został usunięty."
  platform:
  - net462
- uid: System.Data.DataRow.RejectChanges
  id: RejectChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: System.Data.DataRow.RejectChanges()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Odrzuca wszystkie zmiany wprowadzone do wiersza od <xref:System.Data.DataRow.AcceptChanges*>ostatniego została wywołana.</xref:System.Data.DataRow.AcceptChanges*>"
  remarks: "Po wywołaniu metody RejectChanges <xref:System.Data.DataRow.CancelEdit%2A>wywoływana jest metoda niejawnie anulować wszelkie zmiany.</xref:System.Data.DataRow.CancelEdit%2A> Jeśli <xref:System.Data.DataRow.RowState%2A>został usunięty lub zmodyfikowany, wiersz zostanie przywrócony do jego poprzedniej wartości, i <xref:System.Data.DataRow.RowState%2A>staje się bez zmian.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A> Jeśli <xref:System.Data.DataRow.RowState%2A>zostanie dodany wiersz zostanie usunięty.</xref:System.Data.DataRow.RowState%2A>"
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with 2 columns and 10 rows. After several <xref:System.Data.DataRow> items are deleted with the <xref:System.Data.DataRow.Delete%2A> method, one of the rows is undeleted by invoking RejectChanges.  \n  \n [!code-vb[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.re_1.vb)]\n [!code-cs[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/csharp/m-system.data.datarow.re_1.cs)]"
  syntax:
    content: public void RejectChanges ();
    parameters: []
  overload: System.Data.DataRow.RejectChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Wiersz nie należy do tabeli."
  platform:
  - net462
- uid: System.Data.DataRow.RowError
  id: RowError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowError
  nameWithType: DataRow.RowError
  fullName: System.Data.DataRow.RowError
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera lub ustawia opis błędu niestandardowego wiersza."
  remarks: "Używa <xref:System.Data.DataRow.HasErrors%2A>Właściwości określenie, czy <xref:System.Data.DataRow>zawiera błędy.</xref:System.Data.DataRow> </xref:System.Data.DataRow.HasErrors%2A>"
  example:
  - "The following example sets error text for ten rows of a table displayed in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-cs[Classic WebData DataRow.RowError Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ro_1_1.cs)]\n [!code-vb[Classic WebData DataRow.RowError Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ro_1_1.vb)]"
  syntax:
    content: public string RowError { get; set; }
    return:
      type: System.String
      description: "Tekst opisujący błąd."
  overload: System.Data.DataRow.RowError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.RowState
  id: RowState
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowState
  nameWithType: DataRow.RowState
  fullName: System.Data.DataRow.RowState
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera bieżący stan wiersza w odniesieniu do jego relacji z <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  remarks: 'Wartość RowState zależy od dwa składniki: rodzaj operacji ma zostać wykonane w tym wierszu i czy <xref:System.Data.DataRow.AcceptChanges%2A>została wywołana dla <xref:System.Data.DataRow>.</xref:System.Data.DataRow> </xref:System.Data.DataRow.AcceptChanges%2A>'
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its RowState is printed.  \n  \n [!code-vb[Classic WebData DataRow.RowState Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ro_0_1.vb)]\n [!code-cs[Classic WebData DataRow.RowState Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ro_0_1.cs)]"
  syntax:
    content: public System.Data.DataRowState RowState { get; }
    return:
      type: System.Data.DataRowState
      description: "Jeden z <xref href=&quot;System.Data.DataRowState&quot;> </xref> wartości."
  overload: System.Data.DataRow.RowState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetAdded
  id: SetAdded
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: System.Data.DataRow.SetAdded()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Changes the <xref:System.Data.DataRow.Rowstate*> of a <xref href=&quot;System.Data.DataRow&quot;></xref> to <xref uid=&quot;langword_csharp_Added&quot; name=&quot;Added&quot; href=&quot;&quot;></xref>.</xref:System.Data.DataRow.Rowstate*>"
  remarks: "Zmiany <xref:System.Data.DataRow.RowState%2A>z <xref:System.Data.DataRow>do `Added`.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowState%2A> Jeśli bieżący wiersz nie znajduje się w jednej `Unchanged` lub `Added` stanu zgłasza <xref:System.InvalidOperationException>komunikat o który `SetAdded` można wywołać tylko na `DataRow` wystąpienie where `RowState` jest `Unchanged`.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetAdded ();
    parameters: []
  overload: System.Data.DataRow.SetAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  id: SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(DataColumn,String)
  nameWithType: DataRow.SetColumnError(DataColumn,String)
  fullName: System.Data.DataRow.SetColumnError(DataColumn,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ustawia opis błędu dla kolumny określone jako <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Aby zbadać opisów błędów, użyj <xref:System.Data.DataRow.GetColumnError%2A>metody.</xref:System.Data.DataRow.GetColumnError%2A>       Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A>Właściwości.</xref:System.Data.DataRow.HasErrors%2A> W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A>metodę, aby pobrać wszystkie kolumny z błędami.</xref:System.Data.DataRow.GetColumnsInError%2A>       Jeśli `null` lub ciąg pusty jest przekazywany jako `error` parametru <xref:System.Data.DataRow>zachowuje się tak, jakby błąd nie została ustawiona i <xref:System.Data.DataRow.HasErrors%2A>Właściwości zwróci wartość false.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       Aby ustawić opis błędu niestandardowego do całego wiersza, użyj <xref:System.Data.DataRow.RowError%2A>Właściwości.</xref:System.Data.DataRow.RowError%2A>       Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A>metody.</xref:System.Data.DataRow.HasErrors%2A>       Aby wyczyścić wszystkich błędów dla kolekcji kolumn, użyj <xref:System.Data.DataRow.ClearErrors%2A>metody.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_3_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_3_1.vb)]"
  syntax:
    content: public void SetColumnError (System.Data.DataColumn column, string error);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "<xref href=&quot;System.Data.DataColumn&quot;> </xref> Można ustawić opisu błędu."
    - id: error
      type: System.String
      description: "Opis błędu."
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  id: SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(Int32,String)
  nameWithType: DataRow.SetColumnError(Int32,String)
  fullName: System.Data.DataRow.SetColumnError(Int32,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ustawia opis błędu dla kolumny określone przez indeks."
  remarks: "Metoda służy do ustawić opisy błędów niestandardowych dla określonej kolumny. Można użyć <xref:System.Windows.Forms.ErrorProvider>formantu, aby wyświetlić tekst błędu.</xref:System.Windows.Forms.ErrorProvider>       Aby zbadać opisów błędów, użyj <xref:System.Data.DataRow.GetColumnError%2A>metody.</xref:System.Data.DataRow.GetColumnError%2A>       Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A>Właściwości.</xref:System.Data.DataRow.HasErrors%2A> W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A>metodę, aby pobrać wszystkie kolumny z błędami.</xref:System.Data.DataRow.GetColumnsInError%2A>       Jeśli `null` lub ciąg pusty jest przekazywany jako `error` parametru <xref:System.Data.DataRow>zachowuje się tak, jakby błąd nie została ustawiona i <xref:System.Data.DataRow.HasErrors%2A>Właściwości zwróci wartość false.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       Aby ustawić opis błędu niestandardowego do całego wiersza, użyj <xref:System.Data.DataRow.RowError%2A>Właściwości.</xref:System.Data.DataRow.RowError%2A>       Aby wyczyścić wszystkich błędów dla kolekcji kolumn, użyj <xref:System.Data.DataRow.ClearErrors%2A>metody.</xref:System.Data.DataRow.ClearErrors%2A>       Tekst błędu, która ma zastosowanie do całego wiersza ustawia <xref:System.Data.DataRow.RowError%2A>Właściwości.</xref:System.Data.DataRow.RowError%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_0_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_0_1.vb)]"
  syntax:
    content: public void SetColumnError (int columnIndex, string error);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Liczony od zera indeks kolumny."
    - id: error
      type: System.String
      description: "Opis błędu."
  overload: System.Data.DataRow.SetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code> columnIndex </code> Argument jest spoza zakresu"
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  id: SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(String,String)
  nameWithType: DataRow.SetColumnError(String,String)
  fullName: System.Data.DataRow.SetColumnError(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ustawia opis błędu dla określonego za pomocą nazwy kolumny."
  remarks: "Nazwa kolumny jest ustawiona <xref:System.Data.DataColumn.ColumnName%2A>Właściwość <xref:System.Data.DataColumn>klasy.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.ColumnName%2A>       Aby zbadać opisów błędów, użyj <xref:System.Data.DataRow.GetColumnError%2A>metody.</xref:System.Data.DataRow.GetColumnError%2A>       Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A>Właściwości.</xref:System.Data.DataRow.HasErrors%2A> W związku z tym, można użyć <xref:System.Data.DataRow.GetColumnsInError%2A>metodę, aby pobrać wszystkie kolumny z błędami.</xref:System.Data.DataRow.GetColumnsInError%2A>       Jeśli `null` lub ciąg pusty jest przekazywany jako `error` parametru <xref:System.Data.DataRow>zachowuje się tak, jakby błąd nie została ustawiona i <xref:System.Data.DataRow.HasErrors%2A>Właściwości zwróci wartość false.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       Aby ustawić opis błędu niestandardowego do całego wiersza, użyj <xref:System.Data.DataRow.RowError%2A>Właściwości.</xref:System.Data.DataRow.RowError%2A>       Aby określić, czy błędy istnieją dla kolekcji kolumn, użyj <xref:System.Data.DataRow.HasErrors%2A>metody.</xref:System.Data.DataRow.HasErrors%2A>       Aby wyczyścić wszystkich błędów dla kolekcji kolumn, użyj <xref:System.Data.DataRow.ClearErrors%2A>metody.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_1_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_1_1.vb)]"
  syntax:
    content: public void SetColumnError (string columnName, string error);
    parameters:
    - id: columnName
      type: System.String
      description: "Nazwa kolumny."
    - id: error
      type: System.String
      description: "Opis błędu."
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetModified
  id: SetModified
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: System.Data.DataRow.SetModified()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Changes the <xref:System.Data.DataRow.Rowstate*> of a <xref href=&quot;System.Data.DataRow&quot;></xref> to <xref uid=&quot;langword_csharp_Modified&quot; name=&quot;Modified&quot; href=&quot;&quot;></xref>.</xref:System.Data.DataRow.Rowstate*>"
  remarks: "Zmiany <xref:System.Data.DataRow.Rowstate%2A>z <xref:System.Data.DataRow>do `Modified`.</xref:System.Data.DataRow> </xref:System.Data.DataRow.Rowstate%2A> Jeśli bieżący wiersz nie znajduje się w jednej `Unchanged` lub `Added` stanu zgłasza <xref:System.InvalidOperationException>komunikat o który `SetModified` można wywołać tylko na `DataRow` wystąpienie where `RowState` jest `Unchanged`.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetModified ();
    parameters: []
  overload: System.Data.DataRow.SetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  id: SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: System.Data.DataRow.SetNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ustawia wartość określonego <xref href=&quot;System.Data.DataColumn&quot;> </xref> ma wartość null."
  remarks: "Użyj <xref:System.Data.DataRow.IsNull%2A>metodę, aby określić, czy kolumna zawiera wartości null.</xref:System.Data.DataRow.IsNull%2A>"
  syntax:
    content: protected void SetNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
  overload: System.Data.DataRow.SetNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  id: SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: System.Data.DataRow.SetParentRow(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ustawia wiersz nadrzędnego <xref href=&quot;System.Data.DataRow&quot;> </xref> z określonego elementu nadrzędnego nowy <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: "Nadrzędną <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DataRow.SetParentRow*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  id: SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow,DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow,DataRelation)
  fullName: System.Data.DataRow.SetParentRow(DataRow,DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ustawia wiersz nadrzędnego <xref href=&quot;System.Data.DataRow&quot;> </xref> z określonego elementu nadrzędnego nowy <xref href=&quot;System.Data.DataRow&quot;> </xref> i <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: ''
  example:
  - "The following example sets the parent row of a specific child row.  \n  \n [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_2_1.vb)]"
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: "Nadrzędną <xref href=&quot;System.Data.DataRow&quot;> </xref>."
    - id: relation
      type: System.Data.DataRelation
      description: "Relacja <xref href=&quot;System.Data.DataRelation&quot;> </xref> do użycia."
  overload: System.Data.DataRow.SetParentRow*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Jeden z wierszy nie należy do tabeli"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jeden z wierszy jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Relacja nie należy do <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref> z <xref href=&quot;System.Data.DataSet&quot;> </xref> obiektu."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Podrzędne dla relacji <xref href=&quot;System.Data.DataTable&quot;> </xref> nie jest ten wiersz należy do tabeli."
  platform:
  - net462
- uid: System.Data.DataRow.Table
  id: Table
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Table
  nameWithType: DataRow.Table
  fullName: System.Data.DataRow.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Pobiera <xref href=&quot;System.Data.DataTable&quot;> </xref> dla której ten wiersz ma schematu."
  remarks: "A <xref:System.Data.DataRow>niekoniecznie nie należy do dowolnej tabeli Kolekcja wierszy.</xref:System.Data.DataRow> Ten problem występuje, gdy <xref:System.Data.DataRow>została utworzona, ale nie zostały dodane do <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataRow> Jeśli <xref:System.Data.DataRow.RowState%2A>zwraca `DataRowState.Detached`, wiersz nie znajduje się w żadnej kolekcji.</xref:System.Data.DataRow.RowState%2A>"
  example:
  - "The following example uses the Table property to return a reference to the columns collection of the <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataRow.Table Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ta_1.cs)]\n [!code-vb[Classic WebData DataRow.Table Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ta_1.vb)]"
  syntax:
    content: public System.Data.DataTable Table { get; }
    return:
      type: System.Data.DataTable
      description: "<xref href=&quot;System.Data.DataTable&quot;> </xref> Do której należy ten wiersz."
  overload: System.Data.DataRow.Table*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.RowNotInTableException
  parent: System.Data
  isExternal: false
  name: RowNotInTableException
  nameWithType: RowNotInTableException
  fullName: System.Data.RowNotInTableException
- uid: System.Data.InRowChangingEventException
  parent: System.Data
  isExternal: false
  name: InRowChangingEventException
  nameWithType: InRowChangingEventException
  fullName: System.Data.InRowChangingEventException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.Data.ConstraintException
  parent: System.Data
  isExternal: false
  name: ConstraintException
  nameWithType: ConstraintException
  fullName: System.Data.ConstraintException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.Data.NoNullAllowedException
  parent: System.Data
  isExternal: false
  name: NoNullAllowedException
  nameWithType: NoNullAllowedException
  fullName: System.Data.NoNullAllowedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.VersionNotFoundException
  parent: System.Data
  isExternal: false
  name: VersionNotFoundException
  nameWithType: VersionNotFoundException
  fullName: System.Data.VersionNotFoundException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataException
  parent: System.Data
  isExternal: false
  name: DataException
  nameWithType: DataException
  fullName: System.Data.DataException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: System.Data.DataRow.DataRow(DataRowBuilder)
- uid: System.Data.DataRowBuilder
  parent: System.Data
  isExternal: false
  name: DataRowBuilder
  nameWithType: DataRowBuilder
  fullName: System.Data.DataRowBuilder
- uid: System.Data.DataRow.AcceptChanges
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: System.Data.DataRow.AcceptChanges()
- uid: System.Data.DataRow.BeginEdit
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: System.Data.DataRow.BeginEdit()
- uid: System.Data.DataRow.CancelEdit
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: System.Data.DataRow.CancelEdit()
- uid: System.Data.DataRow.ClearErrors
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: System.Data.DataRow.ClearErrors()
- uid: System.Data.DataRow.Delete
  parent: System.Data.DataRow
  isExternal: false
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: System.Data.DataRow.Delete()
- uid: System.Data.DataRow.EndEdit
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: System.Data.DataRow.EndEdit()
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: System.Data.DataRow.GetChildRows(DataRelation)
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataRow.GetChildRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: System.Data.DataRow.GetChildRows(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(DataRelation,DataRowVersion)
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String,DataRowVersion)
  nameWithType: DataRow.GetChildRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(String,DataRowVersion)
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: System.Data.DataRow.GetColumnError(DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: System.Data.DataRow.GetColumnError(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRow.GetColumnError(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: System.Data.DataRow.GetColumnError(String)
- uid: System.Data.DataRow.GetColumnsInError
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: System.Data.DataRow.GetColumnsInError()
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: System.Data.DataRow.GetParentRow(DataRelation)
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DataRow.GetParentRow(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: System.Data.DataRow.GetParentRow(String)
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(DataRelation,DataRowVersion)
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String,DataRowVersion)
  nameWithType: DataRow.GetParentRow(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(String,DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: System.Data.DataRow.GetParentRows(DataRelation)
- uid: System.Data.DataRow.GetParentRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: System.Data.DataRow.GetParentRows(String)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(DataRelation,DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String,DataRowVersion)
  nameWithType: DataRow.GetParentRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(String,DataRowVersion)
- uid: System.Data.DataRow.HasErrors
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: System.Data.DataRow.HasErrors
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: System.Data.DataRow.HasVersion(DataRowVersion)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: System.Data.DataRow.IsNull(DataColumn)
- uid: System.Data.DataRow.IsNull(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: System.Data.DataRow.IsNull(Int32)
- uid: System.Data.DataRow.IsNull(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: System.Data.DataRow.IsNull(String)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn,DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.IsNull(DataColumn,DataRowVersion)
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: System.Data.DataRow.Item(DataColumn)
- uid: System.Data.DataRow.Item(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: System.Data.DataRow.Item(Int32)
- uid: System.Data.DataRow.Item(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: System.Data.DataRow.Item(String)
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn,DataRowVersion)
  nameWithType: DataRow.Item(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.Item(DataColumn,DataRowVersion)
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32,DataRowVersion)
  nameWithType: DataRow.Item(Int32,DataRowVersion)
  fullName: System.Data.DataRow.Item(Int32,DataRowVersion)
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String,DataRowVersion)
  nameWithType: DataRow.Item(String,DataRowVersion)
  fullName: System.Data.DataRow.Item(String,DataRowVersion)
- uid: System.Data.DataRow.ItemArray
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: System.Data.DataRow.ItemArray
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.RejectChanges
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: System.Data.DataRow.RejectChanges()
- uid: System.Data.DataRow.RowError
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
  fullName: System.Data.DataRow.RowError
- uid: System.Data.DataRow.RowState
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
  fullName: System.Data.DataRow.RowState
- uid: System.Data.DataRowState
  parent: System.Data
  isExternal: false
  name: DataRowState
  nameWithType: DataRowState
  fullName: System.Data.DataRowState
- uid: System.Data.DataRow.SetAdded
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: System.Data.DataRow.SetAdded()
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(DataColumn,String)
  nameWithType: DataRow.SetColumnError(DataColumn,String)
  fullName: System.Data.DataRow.SetColumnError(DataColumn,String)
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(Int32,String)
  nameWithType: DataRow.SetColumnError(Int32,String)
  fullName: System.Data.DataRow.SetColumnError(Int32,String)
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(String,String)
  nameWithType: DataRow.SetColumnError(String,String)
  fullName: System.Data.DataRow.SetColumnError(String,String)
- uid: System.Data.DataRow.SetModified
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: System.Data.DataRow.SetModified()
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: System.Data.DataRow.SetNull(DataColumn)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: System.Data.DataRow.SetParentRow(DataRow)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow,DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow,DataRelation)
  fullName: System.Data.DataRow.SetParentRow(DataRow,DataRelation)
- uid: System.Data.DataRow.Table
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
  fullName: System.Data.DataRow.Table
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataRow.#ctor*
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow
  nameWithType: DataRow.DataRow
- uid: System.Data.DataRow.AcceptChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges
  nameWithType: DataRow.AcceptChanges
- uid: System.Data.DataRow.BeginEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit
  nameWithType: DataRow.BeginEdit
- uid: System.Data.DataRow.CancelEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit
  nameWithType: DataRow.CancelEdit
- uid: System.Data.DataRow.ClearErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors
  nameWithType: DataRow.ClearErrors
- uid: System.Data.DataRow.Delete*
  parent: System.Data.DataRow
  isExternal: false
  name: Delete
  nameWithType: DataRow.Delete
- uid: System.Data.DataRow.EndEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit
  nameWithType: DataRow.EndEdit
- uid: System.Data.DataRow.GetChildRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows
  nameWithType: DataRow.GetChildRows
- uid: System.Data.DataRow.GetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError
  nameWithType: DataRow.GetColumnError
- uid: System.Data.DataRow.GetColumnsInError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError
  nameWithType: DataRow.GetColumnsInError
- uid: System.Data.DataRow.GetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow
  nameWithType: DataRow.GetParentRow
- uid: System.Data.DataRow.GetParentRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows
  nameWithType: DataRow.GetParentRows
- uid: System.Data.DataRow.HasErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
- uid: System.Data.DataRow.HasVersion*
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion
  nameWithType: DataRow.HasVersion
- uid: System.Data.DataRow.IsNull*
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull
  nameWithType: DataRow.IsNull
- uid: System.Data.DataRow.Item*
  parent: System.Data.DataRow
  isExternal: false
  name: Item
  nameWithType: DataRow.Item
- uid: System.Data.DataRow.ItemArray*
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
- uid: System.Data.DataRow.RejectChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges
  nameWithType: DataRow.RejectChanges
- uid: System.Data.DataRow.RowError*
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
- uid: System.Data.DataRow.RowState*
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
- uid: System.Data.DataRow.SetAdded*
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded
  nameWithType: DataRow.SetAdded
- uid: System.Data.DataRow.SetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError
  nameWithType: DataRow.SetColumnError
- uid: System.Data.DataRow.SetModified*
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified
  nameWithType: DataRow.SetModified
- uid: System.Data.DataRow.SetNull*
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull
  nameWithType: DataRow.SetNull
- uid: System.Data.DataRow.SetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow
  nameWithType: DataRow.SetParentRow
- uid: System.Data.DataRow.Table*
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
