### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.HybridDictionary
  id: HybridDictionary
  children:
  - System.Collections.Specialized.HybridDictionary.#ctor
  - System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)
  - System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)
  - System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)
  - System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)
  - System.Collections.Specialized.HybridDictionary.Clear
  - System.Collections.Specialized.HybridDictionary.Contains(System.Object)
  - System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.HybridDictionary.Count
  - System.Collections.Specialized.HybridDictionary.GetEnumerator
  - System.Collections.Specialized.HybridDictionary.IsFixedSize
  - System.Collections.Specialized.HybridDictionary.IsReadOnly
  - System.Collections.Specialized.HybridDictionary.IsSynchronized
  - System.Collections.Specialized.HybridDictionary.Item(System.Object)
  - System.Collections.Specialized.HybridDictionary.Keys
  - System.Collections.Specialized.HybridDictionary.Remove(System.Object)
  - System.Collections.Specialized.HybridDictionary.SyncRoot
  - System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Specialized.HybridDictionary.Values
  langs:
  - csharp
  name: HybridDictionary
  nameWithType: HybridDictionary
  fullName: System.Collections.Specialized.HybridDictionary
  type: Class
  summary: "Implementuje <xref uid=&quot;langword_csharp_IDictionary&quot; name=&quot;IDictionary&quot; href=&quot;&quot;> </xref> za pomocą <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> gdy kolekcja jest mały, a następnie przechodząc do <xref href=&quot;System.Collections.Hashtable&quot;> </xref> podczas dużych pobiera kolekcji."
  remarks: "Ta klasa jest zalecane w przypadku, gdy liczba elementów w słowniku jest nieznany. Korzysta z zwiększonej wydajności <xref:System.Collections.Specialized.ListDictionary>z kolekcjami małe i zapewnia elastyczność przełączania, <xref:System.Collections.Hashtable>który obsługuje większą kolekcje lepszym rozwiązaniem niż <xref:System.Collections.Specialized.ListDictionary>.</xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary>       Jeśli początkowy rozmiar kolekcji jest większa niż optymalny rozmiar dla <xref:System.Collections.Specialized.ListDictionary>kolekcji są przechowywane w <xref:System.Collections.Hashtable>Aby uniknąć ponoszenia dodatkowych nakładów kopiowanie elementów z <xref:System.Collections.Specialized.ListDictionary>do <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary>       Konstruktor akceptuje parametrem logicznym, który umożliwia użytkownikowi określenie, czy kolekcja ignoruje wielkość liter podczas porównywania ciągów. Jeśli kolekcja jest rozróżniana wielkość liter, używa klucza implementacji i <xref:System.Object.GetHashCode%2A?displayProperty=fullName> <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> Jeśli kolekcja jest rozróżniana wielkość liter, wykonuje proste porównania bez uwzględniania wielkości liter porządkowej, który przestrzega zasad wielkości liter Niezmienna kultura. Domyślnie kolekcja jest rozróżniana wielkość liter. Aby uzyskać więcej informacji dotyczących Niezmienna kultura zobacz <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName>       Klucz nie może mieć wartości null, ale można wartość.       `foreach` Instrukcji języka C# (`For Each` w języku Visual Basic) zwraca obiekt typu elementów w kolekcji. Ponieważ każdy element HybridDictionary parę klucz/wartość, typ elementu nie jest typu klucza lub typ wartości. Zamiast tego typu jest <xref:System.Collections.DictionaryEntry>.</xref:System.Collections.DictionaryEntry> Na przykład: [!code-cpp [System.Collections.Specialized.HybridDictionary2#2](~/add/codesnippet/cpp/t-system.collections.spe_3_1.cpp)][!code-cs[System.Collections.Specialized.HybridDictionary2#2](~/add/codesnippet/csharp/t-system.collections.spe_3_1.cs)][!code-vb[System.Collections.Specialized.HybridDictionary2#2](~/add/codesnippet/visualbasic/t-system.collections.spe_3_1.vb) ] `foreach` instrukcja jest otokę moduł wyliczający, który zezwala tylko odczyt z bez zapisywania do kolekcji.    "
  example:
  - "The following code example demonstrates several of the properties and methods of HybridDictionary.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/cpp/t-system.collections.spe_3_2.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/csharp/t-system.collections.spe_3_2.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_3_2.vb)]"
  syntax:
    content: 'public class HybridDictionary : System.Collections.IDictionary'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: HybridDictionary()
  nameWithType: HybridDictionary.HybridDictionary()
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Tworzy pustą z uwzględnieniem wielkości liter <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "Domyślnie kolekcji jest rozróżniana wielkość liter i używa klucza stosowania <xref:System.Object.GetHashCode%2A?displayProperty=fullName>jako dostawcy kodu wyznaczania wartości skrótu i stosowania klucza <xref:System.Object.Equals%2A?displayProperty=fullName>jako funkcja porównująca.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Moduł porównujący Określa, czy dwa klucze są takie same. Każdy klucz w <xref:System.Collections.Specialized.HybridDictionary>muszą być unikatowe.</xref:System.Collections.Specialized.HybridDictionary>       Ten konstruktor jest operacją O(1)."
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/cpp/m-system.collections.spe_9_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/csharp/m-system.collections.spe_9_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/visualbasic/m-system.collections.spe_9_1.vb)]"
  syntax:
    content: public HybridDictionary ();
    parameters: []
  overload: System.Collections.Specialized.HybridDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: HybridDictionary(Boolean)
  nameWithType: HybridDictionary.HybridDictionary(Boolean)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Tworzy pustą <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> z określonym uwzględniana wielkość liter."
  remarks: "Jeśli `caseInsensitive` jest `false`, Kolekcja używa klucza implementacji i <xref:System.Object.GetHashCode%2A?displayProperty=fullName> <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> Jeśli `caseInsensitive` jest `true`, kolekcji wykonuje proste porównania bez uwzględniania wielkości liter porządkowej, który przestrzega zasad wielkości liter Niezmienna kultura. Aby uzyskać więcej informacji dotyczących Niezmienna kultura zobacz <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName>       Ten konstruktor jest operacją O(1)."
  syntax:
    content: public HybridDictionary (bool caseInsensitive);
    parameters:
    - id: caseInsensitive
      type: System.Boolean
      description: "Wartość logiczna, która określa, czy <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> nie uwzględnia wielkości liter."
  overload: System.Collections.Specialized.HybridDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: HybridDictionary(Int32)
  nameWithType: HybridDictionary.HybridDictionary(Int32)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Tworzy uwzględniającego wielkość liter <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> o określonym rozmiarze początkowej."
  remarks: "Jeśli początkowy rozmiar kolekcji jest większa niż optymalny rozmiar dla <xref:System.Collections.Specialized.ListDictionary>kolekcji są przechowywane w <xref:System.Collections.Hashtable>Aby uniknąć ponoszenia dodatkowych nakładów kopiowanie elementów z <xref:System.Collections.Specialized.ListDictionary>do <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary>       Domyślnie kolekcji jest rozróżniana wielkość liter i używa klucza stosowania <xref:System.Object.GetHashCode%2A?displayProperty=fullName>jako dostawcy kodu wyznaczania wartości skrótu i stosowania klucza <xref:System.Object.Equals%2A?displayProperty=fullName>jako funkcja porównująca.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName>       Moduł porównujący Określa, czy dwa klucze są takie same. Każdy klucz w <xref:System.Collections.Specialized.HybridDictionary>muszą być unikatowe.</xref:System.Collections.Specialized.HybridDictionary>       Ten konstruktor jest O (`n`) operację, której `n` jest `initialSize`."
  syntax:
    content: public HybridDictionary (int initialSize);
    parameters:
    - id: initialSize
      type: System.Int32
      description: "Przybliżoną liczbę wpisów który <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> początkowo może zawierać."
  overload: System.Collections.Specialized.HybridDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: HybridDictionary(Int32,Boolean)
  nameWithType: HybridDictionary.HybridDictionary(Int32,Boolean)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Int32,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Tworzy <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> z określonym początkowy rozmiar i uwzględnianie wielkości liter."
  remarks: "Jeśli początkowy rozmiar kolekcji jest większa niż optymalny rozmiar dla <xref:System.Collections.Specialized.ListDictionary>kolekcji są przechowywane w <xref:System.Collections.Hashtable>Aby uniknąć ponoszenia dodatkowych nakładów kopiowanie elementów z <xref:System.Collections.Specialized.ListDictionary>do <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary>       Jeśli `caseInsensitive` jest `false`, Kolekcja używa klucza implementacji i <xref:System.Object.GetHashCode%2A?displayProperty=fullName> <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> Jeśli `caseInsensitive` jest `true`, kolekcji wykonuje proste porównania bez uwzględniania wielkości liter porządkowej, który przestrzega zasad wielkości liter Niezmienna kultura. Aby uzyskać więcej informacji dotyczących Niezmienna kultura zobacz <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName>       Ten konstruktor jest O (`n`) operację, której `n` jest `initialSize`."
  syntax:
    content: public HybridDictionary (int initialSize, bool caseInsensitive);
    parameters:
    - id: initialSize
      type: System.Int32
      description: "Przybliżoną liczbę wpisów który <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> początkowo może zawierać."
    - id: caseInsensitive
      type: System.Boolean
      description: "Wartość logiczna, która określa, czy <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> nie uwzględnia wielkości liter."
  overload: System.Collections.Specialized.HybridDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: HybridDictionary.Add(Object,Object)
  fullName: System.Collections.Specialized.HybridDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Dodaje wpis z określonym kluczem i wartością w <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "Zazwyczaj obiekt, który ma korelacja stanu i jego wartość kodu skrótu nie zostać użyta jako klucz. Na przykład ciąg obiekty są lepszym rozwiązaniem niż obiekty StringBuilder do użycia jako klucze.       Klucz nie może być `null`, ale wartość można.       Można również użyć <xref:System.Collections.Specialized.HybridDictionary.Item%2A>Właściwości, aby dodać nowe elementy za pomocą ustawienia wartości klucza, który nie istnieje w <xref:System.Collections.Specialized.HybridDictionary>, na przykład `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.Specialized.HybridDictionary.Item%2A> Jednak jeśli określony klucz już istnieje w <xref:System.Collections.Specialized.HybridDictionary>, ustawienie <xref:System.Collections.Specialized.HybridDictionary.Item%2A>stara wartość jest zastąpienie właściwości.</xref:System.Collections.Specialized.HybridDictionary.Item%2A> </xref:System.Collections.Specialized.HybridDictionary> Z kolei metody Add nie modyfikuje istniejące elementy.       Gdy liczba elementów staje się większa niż optymalny rozmiar <xref:System.Collections.Specialized.ListDictionary>elementy są kopiowane z <xref:System.Collections.Specialized.ListDictionary>do <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Specialized.ListDictionary> Jednak to występuje tylko raz. Jeśli kolekcja jest już zapisana w <xref:System.Collections.Hashtable>i liczby elementów spadnie poniżej optymalny rozmiar <xref:System.Collections.Specialized.ListDictionary>pozostaje kolekcji <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable>       Ta metoda jest operacją O(1)."
  example:
  - "The following code example adds to and removes elements from a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/cpp/200580ad-8659-4e63-8e92-_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/csharp/200580ad-8659-4e63-8e92-_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/visualbasic/200580ad-8659-4e63-8e92-_1.vb)]"
  syntax:
    content: public void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "Klucz wpisu do dodania."
    - id: value
      type: System.Object
      description: "Wartość wpisu do dodania. Wartość może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Wpis z tym samym kluczem już istnieje w <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Clear
  id: Clear
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: HybridDictionary.Clear()
  fullName: System.Collections.Specialized.HybridDictionary.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Usuwa wszystkie wpisy z <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.HybridDictionary.Count%2A>jest ustawiany na zero, a ponadto są również zwalniane odwołania do innych obiektów z elementów kolekcji.</xref:System.Collections.Specialized.HybridDictionary.Count%2A>       Jeśli kolekcja jest już zapisana w <xref:System.Collections.Hashtable>połączenie pozostaje w <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable>       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.HybridDictionary.Count%2A>.</xref:System.Collections.Specialized.HybridDictionary.Count%2A>"
  example:
  - "The following code example adds to and removes elements from a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_31_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_31_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_31_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.Specialized.HybridDictionary.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: HybridDictionary.Contains(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Określa, czy <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> zawiera określony klucz."
  remarks: "Ta metoda jest operacją O(1).       Począwszy od programu .NET Framework 2.0, ta metoda używa kolekcji obiektów <xref:System.Object.Equals%2A>i <xref:System.IComparable.CompareTo%2A>metody `key` ustalenie, czy `item` istnieje.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu <xref:System.Object.Equals%2A>i <xref:System.IComparable.CompareTo%2A>metody `item` parametrów dla obiektów w kolekcji.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches for an element in a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Contains#1](~/add/codesnippet/cpp/m-system.collections.spe_37_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Contains#1](~/add/codesnippet/csharp/m-system.collections.spe_37_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Contains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_37_1.vb)]"
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Klucz do zlokalizowania w <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> zawiera wpis z określonym kluczem, a w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HybridDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.HybridDictionary.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Kopie <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> wpisy na jednowymiarowe <xref:System.Array>wystąpienia pod określonym indeksem.</xref:System.Array>"
  remarks: "<xref:System.Array>w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Collections.Specialized.HybridDictionary>.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Array> są kopiowane elementy       Aby skopiować tylko klucze w <xref:System.Collections.Specialized.HybridDictionary>, użyj `HybridDictionary.Keys.CopyTo`.</xref:System.Collections.Specialized.HybridDictionary>       Aby skopiować tylko wartości w <xref:System.Collections.Specialized.HybridDictionary>, użyj `HybridDictionary.Values.CopyTo`.</xref:System.Collections.Specialized.HybridDictionary>       Ta metoda jest O (`n`) operację, której `n` <xref:System.Collections.Specialized.HybridDictionary.Count%2A>.</xref:System.Collections.Specialized.HybridDictionary.Count%2A>"
  example:
  - "The following code example copies the elements of a <xref:System.Collections.Specialized.HybridDictionary> to an array.  \n  \n [!code-cs[System.Collections.Specialized.HybridDictionary_CopyTo#1](~/add/codesnippet/csharp/0bfe553c-62f4-44ed-b908-_1.cs)]\n [!code-cpp[System.Collections.Specialized.HybridDictionary_CopyTo#1](~/add/codesnippet/cpp/0bfe553c-62f4-44ed-b908-_1.cpp)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_CopyTo#1](~/add/codesnippet/visualbasic/0bfe553c-62f4-44ed-b908-_1.vb)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Jednowymiarowa <xref:System.Array>czyli miejsce docelowe <xref:System.Collections.DictionaryEntry>obiektów kopiowanych ze <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.DictionaryEntry> </xref:System.Array> <xref:System.Array>Musi mieć indeksowania liczony od zera.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks w `array` od rozpoczyna się kopiowanie które."
  overload: System.Collections.Specialized.HybridDictionary.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>jest mniejsza od zera."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>jest wielowymiarowy.       - lub - liczba elementów w źródle <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> jest większa niż dostępne miejsce od <code>arrayIndex</code> do końca tablicy docelowej <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Typ źródła <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> nie można automatycznie rzutować na typ docelowy <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Count
  id: Count
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Count
  nameWithType: HybridDictionary.Count
  fullName: System.Collections.Specialized.HybridDictionary.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera liczbę par klucz/wartość zawartych w <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_9_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_9_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_9_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Liczba par klucz/wartość zawartych w <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.       Pobieranie wartości tej właściwości jest operacją O(1)."
  overload: System.Collections.Specialized.HybridDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HybridDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Zwraca <xref:System.Collections.IDictionaryEnumerator>który iteruje <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "`foreach` Instrukcji języka C# (`for each` w języku Visual Basic) ukrywa złożoność wyliczenia.  W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.       Moduły wyliczające może służyć do odczytywania danych w kolekcji, ale nie może służyć do modyfikowania kolekcji źródłowej.       Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji. <xref:System.Collections.IEnumerator.Reset%2A>również wprowadzono moduł wyliczający wróć do tej pozycji.</xref:System.Collections.IEnumerator.Reset%2A>  W tym miejscu <xref:System.Collections.IEnumerator.Current%2A>jest niezdefiniowany.</xref:System.Collections.IEnumerator.Current%2A> W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A>można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytaniem wartość <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A>lub <xref:System.Collections.IEnumerator.Reset%2A>jest wywoływana.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Ustawia <xref:System.Collections.IEnumerator.Current%2A>do następnego elementu.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A>przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A>zwraca `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.IEnumerator.MoveNext%2A>zwracają również `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Jeśli przez ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A>zwrócił `false`, <xref:System.Collections.IEnumerator.Current%2A>jest niezdefiniowany.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Aby ustawić <xref:System.Collections.IEnumerator.Current%2A>pierwszy element w kolekcji, należy wywołać, <xref:System.Collections.IEnumerator.Reset%2A>następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       Moduł wyliczający pozostaje ważny tak długo, jak kolekcji pozostaje niezmieniona. Jeśli wprowadzono zmiany w kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie nieważne i jego zachowanie jest niezdefiniowana.       Moduł wyliczający nie ma wyłączny dostęp do kolekcji; w związku z tym wyliczania kolekcji leżą nie jest bezpieczne wątkowo procedurą.  W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, można zablokować kolekcję podczas całej wyliczenia.  Aby zezwolić na dostęp przez wiele wątków do odczytu i zapisu do kolekcji, musi implementować własne synchronizacji.       Ta metoda jest operacją O(1)."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/m-system.collections.spe_19_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/m-system.collections.spe_19_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/m-system.collections.spe_19_1.vb)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "An <xref:System.Collections.IDictionaryEnumerator> for the <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;></xref>.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Collections.Specialized.HybridDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: HybridDictionary.IsFixedSize
  fullName: System.Collections.Specialized.HybridDictionary.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> ma stały rozmiar."
  remarks: "<xref:System.Collections.Specialized.HybridDictionary>implementuje właściwości IsFixedSize, ponieważ jest to wymagane przez <xref:System.Collections.IDictionary?displayProperty=fullName>interfejsu.</xref:System.Collections.IDictionary?displayProperty=fullName></xref:System.Collections.Specialized.HybridDictionary>       Kolekcja o stałym rozmiarze nie zezwala na dodawanie i usuwanie elementów po utworzeniu kolekcji, ale umożliwia modyfikowanie istniejących elementów.       Kolekcja o stałym rozmiarze jest po prostu kolekcji z otoką, który uniemożliwia Dodawanie i usuwanie elementów; w związku z tym zmian w źródłowej kolekcji, włączając Dodawanie lub usuwanie elementów z kolekcji o stałym rozmiarze odzwierciedla te zmiany.       Pobieranie wartości tej właściwości jest operacją O(1)."
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "Ta właściwość zawsze zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HybridDictionary.IsReadOnly
  fullName: System.Collections.Specialized.HybridDictionary.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> jest tylko do odczytu."
  remarks: "<xref:System.Collections.Specialized.HybridDictionary>implementuje właściwości IsReadOnly, ponieważ jest to wymagane przez <xref:System.Collections.IDictionary?displayProperty=fullName>interfejsu.</xref:System.Collections.IDictionary?displayProperty=fullName></xref:System.Collections.Specialized.HybridDictionary>       Kolekcja, która jest tylko do odczytu uniemożliwia dodawania, usuwania lub modyfikowania elementów po utworzeniu kolekcji.       Kolekcja, która jest tylko do odczytu jest po prostu kolekcji z otoką, co uniemożliwia ich modyfikowania kolekcji; w związku z tym jeśli wprowadzono zmiany w źródłowej kolekcji, kolekcji tylko do odczytu odzwierciedla te zmiany.       Pobieranie wartości tej właściwości jest operacją O(1)."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Ta właściwość zawsze zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HybridDictionary.IsSynchronized
  fullName: System.Collections.Specialized.HybridDictionary.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera wartość wskazującą czy <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> jest synchronizowane (wielowątkowość)."
  remarks: "<xref:System.Collections.Specialized.HybridDictionary>implementuje właściwości IsSynchronized, ponieważ jest to wymagane przez <xref:System.Collections.ICollection?displayProperty=fullName>interfejsu.</xref:System.Collections.ICollection?displayProperty=fullName></xref:System.Collections.Specialized.HybridDictionary>       Klasy pochodne zapewniają zsynchronizowanej wersji <xref:System.Collections.Specialized.HybridDictionary>przy użyciu <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A>Właściwości.</xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A> </xref:System.Collections.Specialized.HybridDictionary>       Wyliczanie za pomocą kolekcji leżą nie jest procedurą wątkowo. Nawet jeśli kolekcja jest synchronizowane, inne wątki mogą modyfikować kolekcji, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A> during the entire enumeration.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/cpp/p-system.collections.spe_5_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/csharp/p-system.collections.spe_5_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/visualbasic/p-system.collections.spe_5_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Ta właściwość zawsze zwraca <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Item(Object)
  nameWithType: HybridDictionary.Item(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Item(Object)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera lub ustawia wartość skojarzoną z określonym kluczem."
  remarks: "Ta właściwość umożliwia dostęp do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[key]`.       Umożliwia także właściwości elementu można dodawać nowe elementy za pomocą ustawienia wartości klucza, który nie istnieje w <xref:System.Collections.Specialized.HybridDictionary>, na przykład `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.Specialized.HybridDictionary> Jednak jeśli określony klucz już istnieje w <xref:System.Collections.Specialized.HybridDictionary>, ustawienie właściwości elementu zastępuje stara wartość.</xref:System.Collections.Specialized.HybridDictionary> Z kolei <xref:System.Collections.Specialized.HybridDictionary.Add%2A>— Metoda nie modyfikuje istniejące elementy.</xref:System.Collections.Specialized.HybridDictionary.Add%2A>       Klucz nie może być `null`, ale wartość można. Aby odróżnić `null` który jest zwracany, ponieważ nie odnaleziono określonego klucza i `null` który jest zwracany, ponieważ wartość określony klucz jest `null`, użyj <xref:System.Collections.Specialized.HybridDictionary.Contains%2A>metodę, aby określić, czy klucz znajduje się na liście.</xref:System.Collections.Specialized.HybridDictionary.Contains%2A>       W języku C# używa słowa kluczowego do definiowania indeksatory zamiast Implementowanie właściwości elementu. Visual Basic implementuje element jako domyślna właściwość, która zapewnia te same funkcje indeksowania.       Pobieranie wartości tej właściwości jest operacją O(1); Ustawienie właściwości jest również O(1) operacji."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_27_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_27_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_27_1.vb)]"
  syntax:
    content: public object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "Klucz wartości, których można pobrać lub ustawić."
    return:
      type: System.Object
      description: "Wartość skojarzona z określonym kluczem. Jeśli określony klucz nie zostanie znaleziony, próby pobrania jej zwraca <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a próba skonfigurowania go tworzy nowy wpis przy użyciu określonego klucza."
  overload: System.Collections.Specialized.HybridDictionary.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Keys
  id: Keys
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: HybridDictionary.Keys
  fullName: System.Collections.Specialized.HybridDictionary.Keys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera <xref:System.Collections.ICollection>zawierającą klucze ze słownika <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Wartości w <xref:System.Collections.ICollection>jest nieokreślony, ale takiej samej kolejności jak skojarzone wartości w <xref:System.Collections.ICollection>zwrócony przez <xref:System.Collections.Specialized.HybridDictionary.Values%2A>metody.</xref:System.Collections.Specialized.HybridDictionary.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       Zwrócona <xref:System.Collections.ICollection>nie jest statyczna kopia; zamiast tego <xref:System.Collections.ICollection>odwołuje się do kluczy w oryginalnym <xref:System.Collections.Specialized.HybridDictionary>.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Dlatego zmiany <xref:System.Collections.Specialized.HybridDictionary>zostaną odzwierciedlone w <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> w dalszym ciągu</xref:System.Collections.Specialized.HybridDictionary>       Pobieranie wartości tej właściwości jest operacją O(1)."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_20_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_20_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_20_1.vb)]"
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Zawierającą klucze ze słownika <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Specialized.HybridDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: HybridDictionary.Remove(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Usuwa wpis z określonym kluczem z <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "Jeśli <xref:System.Collections.Specialized.HybridDictionary>nie zawiera element z określonym kluczem <xref:System.Collections.Specialized.HybridDictionary>pozostaje niezmieniona.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.Specialized.HybridDictionary> Nie wyjątek.       Jeśli kolekcja jest już zapisana w <xref:System.Collections.Hashtable>i liczby elementów spadnie poniżej optymalny rozmiar <xref:System.Collections.Specialized.ListDictionary>pozostaje kolekcji, <xref:System.Collections.Hashtable>Aby uniknąć ponoszenia dodatkowych nakładów kopiowanie elementów z <xref:System.Collections.Hashtable>powrotem do <xref:System.Collections.Specialized.ListDictionary>.</xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable>       Ta metoda jest operacją O(1)."
  example:
  - "The following code example adds to and removes elements from a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_0_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_0_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_0_1.vb)]"
  syntax:
    content: public void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Klucz wpisu do usunięcia."
  overload: System.Collections.Specialized.HybridDictionary.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.SyncRoot
  id: SyncRoot
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HybridDictionary.SyncRoot
  fullName: System.Collections.Specialized.HybridDictionary.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera obiekt, który może służyć do synchronizujący dostęp do <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "Klasy pochodne zapewniają własne zsynchronizowanej wersji <xref:System.Collections.Specialized.HybridDictionary>za pomocą właściwości SyncRoot.</xref:System.Collections.Specialized.HybridDictionary> Synchronizowanie kodu musi wykonywać operacje na SyncRoot z <xref:System.Collections.Specialized.HybridDictionary>, bezpośrednio na <xref:System.Collections.Specialized.HybridDictionary>.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.Specialized.HybridDictionary> Zapewnia to poprawne działanie kolekcje, które pochodzą od innych obiektów. W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <xref:System.Collections.Specialized.HybridDictionary>obiektu.</xref:System.Collections.Specialized.HybridDictionary>       Wyliczanie za pomocą kolekcji leżą nie jest procedurą wątkowo. Nawet jeśli kolekcja jest synchronizowane, inne wątki mogą modyfikować kolekcji, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki."
  example:
  - "The following code example shows how to lock the collection using the SyncRoot during the entire enumeration.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/cpp/p-system.collections.spe_22_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/csharp/p-system.collections.spe_22_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/visualbasic/p-system.collections.spe_22_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Obiekt, który może służyć do synchronizujący dostęp do <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Zwraca <xref:System.Collections.IEnumerator>który iteruje <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "`foreach` Instrukcji języka C# (`for each` w języku Visual Basic) ukrywa złożoność wyliczenia.  W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.       Moduły wyliczające może służyć do odczytywania danych w kolekcji, ale nie może służyć do modyfikowania kolekcji źródłowej.       Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji. <xref:System.Collections.IEnumerator.Reset%2A>również wprowadzono moduł wyliczający wróć do tej pozycji.</xref:System.Collections.IEnumerator.Reset%2A> At to pozycja, wywoływania <xref:System.Collections.IEnumerator.Current%2A>zgłasza wyjątek.</xref:System.Collections.IEnumerator.Current%2A> W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A>można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytaniem wartość <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A>lub <xref:System.Collections.IEnumerator.Reset%2A>jest wywoływana.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Ustawia <xref:System.Collections.IEnumerator.Current%2A>do następnego elementu.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A>przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A>zwraca `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.IEnumerator.MoveNext%2A>zwracają również `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Jeśli przez ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A>zwrócił `false`, wywoływania <xref:System.Collections.IEnumerator.Current%2A>zgłasza wyjątek.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Aby ustawić <xref:System.Collections.IEnumerator.Current%2A>pierwszy element w kolekcji, należy wywołać, <xref:System.Collections.IEnumerator.Reset%2A>następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       Moduł wyliczający pozostaje ważny tak długo, jak kolekcji pozostaje niezmieniona. Jeśli wprowadzono zmiany w kolekcji, takich jak dodawanie, modyfikowanie lub usuwanie elementów, spowoduje nieodwracalne unieważnienie modułu wyliczającego i następnego wywołania lub <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>zgłasza <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Jeśli kolekcja jest zmodyfikowany między <xref:System.Collections.IEnumerator.MoveNext%2A>i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>zwraca element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       Moduł wyliczający nie ma wyłączny dostęp do kolekcji; w związku z tym wyliczania kolekcji leżą nie jest bezpieczne wątkowo procedurą. Nawet jeśli kolekcja jest synchronizowane, inne wątki mogą modyfikować kolekcji, co powoduje, że moduł wyliczający, który ma zostać zgłoszony wyjątek. W celu zagwarantowania bezpieczeństwa wątków podczas wyliczania, możesz zablokować kolekcji podczas wyliczania całego lub przechwytują wyjątki wynikające ze zmian wprowadzonych przez inne wątki.       Ta metoda jest operacją O(1)."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/cfcf8780-64b5-47b8-8217-_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/cfcf8780-64b5-47b8-8217-_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/cfcf8780-64b5-47b8-8217-_1.vb)]"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Values
  id: Values
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Values
  nameWithType: HybridDictionary.Values
  fullName: System.Collections.Specialized.HybridDictionary.Values
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Pobiera <xref:System.Collections.ICollection>zawierający wartości w <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Kolejność wartości na liście <xref:System.Collections.ICollection>jest nieokreślony, ale takiej samej kolejności jak skojarzonych kluczy w <xref:System.Collections.ICollection>zwrócony przez <xref:System.Collections.Specialized.HybridDictionary.Keys%2A>— Metoda.</xref:System.Collections.Specialized.HybridDictionary.Keys%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       Zwrócona <xref:System.Collections.ICollection>nie jest statyczny kopii; zamiast tego <xref:System.Collections.ICollection>odwołuje się do wartości w oryginalnym <xref:System.Collections.Specialized.HybridDictionary>.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Dlatego zmiany <xref:System.Collections.Specialized.HybridDictionary>zostaną odzwierciedlone w <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> w dalszym ciągu</xref:System.Collections.Specialized.HybridDictionary>       Pobieranie wartości tej właściwości jest operacją O(1)."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_14_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_14_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_14_1.vb)]"
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Zawierający wartości w <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Specialized.HybridDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Collections.Specialized.HybridDictionary.#ctor
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary()
  nameWithType: HybridDictionary.HybridDictionary()
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary()
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary(Boolean)
  nameWithType: HybridDictionary.HybridDictionary(Boolean)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary(Int32)
  nameWithType: HybridDictionary.HybridDictionary(Int32)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary(Int32,Boolean)
  nameWithType: HybridDictionary.HybridDictionary(Int32,Boolean)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Int32,Boolean)
- uid: System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Add(Object,Object)
  nameWithType: HybridDictionary.Add(Object,Object)
  fullName: System.Collections.Specialized.HybridDictionary.Add(Object,Object)
- uid: System.Collections.Specialized.HybridDictionary.Clear
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Clear()
  nameWithType: HybridDictionary.Clear()
  fullName: System.Collections.Specialized.HybridDictionary.Clear()
- uid: System.Collections.Specialized.HybridDictionary.Contains(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Contains(Object)
  nameWithType: HybridDictionary.Contains(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Contains(Object)
- uid: System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HybridDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.HybridDictionary.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.HybridDictionary.Count
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Count
  nameWithType: HybridDictionary.Count
  fullName: System.Collections.Specialized.HybridDictionary.Count
- uid: System.Collections.Specialized.HybridDictionary.GetEnumerator
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: HybridDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.Specialized.HybridDictionary.IsFixedSize
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: HybridDictionary.IsFixedSize
  fullName: System.Collections.Specialized.HybridDictionary.IsFixedSize
- uid: System.Collections.Specialized.HybridDictionary.IsReadOnly
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: HybridDictionary.IsReadOnly
  fullName: System.Collections.Specialized.HybridDictionary.IsReadOnly
- uid: System.Collections.Specialized.HybridDictionary.IsSynchronized
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: HybridDictionary.IsSynchronized
  fullName: System.Collections.Specialized.HybridDictionary.IsSynchronized
- uid: System.Collections.Specialized.HybridDictionary.Item(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Item(Object)
  nameWithType: HybridDictionary.Item(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Item(Object)
- uid: System.Collections.Specialized.HybridDictionary.Keys
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Keys
  nameWithType: HybridDictionary.Keys
  fullName: System.Collections.Specialized.HybridDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Specialized.HybridDictionary.Remove(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Remove(Object)
  nameWithType: HybridDictionary.Remove(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Remove(Object)
- uid: System.Collections.Specialized.HybridDictionary.SyncRoot
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: HybridDictionary.SyncRoot
  fullName: System.Collections.Specialized.HybridDictionary.SyncRoot
- uid: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.HybridDictionary.Values
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Values
  nameWithType: HybridDictionary.Values
  fullName: System.Collections.Specialized.HybridDictionary.Values
- uid: System.Collections.Specialized.HybridDictionary.#ctor*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary
  nameWithType: HybridDictionary.HybridDictionary
- uid: System.Collections.Specialized.HybridDictionary.Add*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Add
  nameWithType: HybridDictionary.Add
- uid: System.Collections.Specialized.HybridDictionary.Clear*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Clear
  nameWithType: HybridDictionary.Clear
- uid: System.Collections.Specialized.HybridDictionary.Contains*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Contains
  nameWithType: HybridDictionary.Contains
- uid: System.Collections.Specialized.HybridDictionary.CopyTo*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: CopyTo
  nameWithType: HybridDictionary.CopyTo
- uid: System.Collections.Specialized.HybridDictionary.Count*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Count
  nameWithType: HybridDictionary.Count
- uid: System.Collections.Specialized.HybridDictionary.GetEnumerator*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: HybridDictionary.GetEnumerator
- uid: System.Collections.Specialized.HybridDictionary.IsFixedSize*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: HybridDictionary.IsFixedSize
- uid: System.Collections.Specialized.HybridDictionary.IsReadOnly*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: HybridDictionary.IsReadOnly
- uid: System.Collections.Specialized.HybridDictionary.IsSynchronized*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: HybridDictionary.IsSynchronized
- uid: System.Collections.Specialized.HybridDictionary.Item*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Item
  nameWithType: HybridDictionary.Item
- uid: System.Collections.Specialized.HybridDictionary.Keys*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Keys
  nameWithType: HybridDictionary.Keys
- uid: System.Collections.Specialized.HybridDictionary.Remove*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Remove
  nameWithType: HybridDictionary.Remove
- uid: System.Collections.Specialized.HybridDictionary.SyncRoot*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: HybridDictionary.SyncRoot
- uid: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HybridDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.Specialized.HybridDictionary.Values*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Values
  nameWithType: HybridDictionary.Values
