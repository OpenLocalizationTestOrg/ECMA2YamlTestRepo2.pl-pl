### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ButtonField
  id: ButtonField
  children:
  - System.Web.UI.WebControls.ButtonField.#ctor
  - System.Web.UI.WebControls.ButtonField.CommandName
  - System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.ButtonField.CreateField
  - System.Web.UI.WebControls.ButtonField.DataTextField
  - System.Web.UI.WebControls.ButtonField.DataTextFormatString
  - System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  - System.Web.UI.WebControls.ButtonField.ImageUrl
  - System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.ButtonField.Text
  - System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  langs:
  - csharp
  name: ButtonField
  nameWithType: ButtonField
  fullName: System.Web.UI.WebControls.ButtonField
  type: Class
  summary: "Reprezentuje pole, który jest wyświetlany jako przycisk w formancie powiązane z danymi."
  remarks: "Klasa ButtonField jest używana przez formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.GridView>i <xref:System.Web.UI.WebControls.DetailsView>) do wyświetlania przycisku dla każdego rekordu, który jest wyświetlany.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Obiekt ButtonField są wyświetlane inaczej w zależności od kontrolki powiązania danych, w którym jest używana. Na przykład <xref:System.Web.UI.WebControls.GridView>kontrolka ma wyświetlać jako kolumny, obiekt ButtonField podczas <xref:System.Web.UI.WebControls.DetailsView>kontroli wyświetla go jako wiersz.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Kliknięcie przycisku w polu przycisk wywołuje zdarzenie polecenia nadrzędnego formantu powiązanego z danymi. Możesz podać niestandardowe procedury do wykonania po kliknięciu przycisku polecenia przez zapewnienie obsługi zdarzeń dla zdarzenia polecenia.      > [!NOTE] > <xref:System.Web.UI.WebControls.GridView>Kontrolować zgłasza <xref:System.Web.UI.WebControls.GridView.RowCommand>zdarzenia podczas <xref:System.Web.UI.WebControls.DetailsView>kontrolować zgłasza <xref:System.Web.UI.WebControls.DetailsView.ItemCommand>zdarzeń.</xref:System.Web.UI.WebControls.DetailsView.ItemCommand> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView.RowCommand> </xref:System.Web.UI.WebControls.GridView>       Aby określić indeks rekordu, który wywołuje zdarzenie polecenia, użyj <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>Właściwości argument zdarzenia, który jest przekazywany do polecenia zdarzeń formantu powiązanego z danymi.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> Klasa ButtonField automatycznie wypełni <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>właściwość z wartością odpowiedni indeks.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>       Aby określić typ przycisku do wyświetlenia, użyj <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>Właściwości.</xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Podczas wyświetlania łącza lub przycisku polecenia, użyj <xref:System.Web.UI.WebControls.ButtonField.Text%2A>Właściwości w celu określenia podpis do wyświetlenia na przyciskach.</xref:System.Web.UI.WebControls.ButtonField.Text%2A>      > [!NOTE] > Jeśli ustawisz <xref:System.Web.UI.WebControls.ButtonField.Text%2A>Właściwości, wszystkie przyciski w udziale ButtonField sam podpis.</xref:System.Web.UI.WebControls.ButtonField.Text%2A>       Alternatywnie można powiązać obiektu ButtonField pole w źródle danych. Dzięki temu można wyświetlać różne podpisy przycisków w obiekcie ButtonField. Wartości, które znajdują się w określonym polu są używane do podpisy przycisków. Ustaw <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>właściwości do powiązania obiektu ButtonField pole w źródle danych.</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       Podczas wyświetlania obrazu przycisku, użyj <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>Właściwości w celu określenia obraz do wyświetlania przycisków w obiekcie ButtonField.</xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>      > [!NOTE] > Wszystkich przycisków w obiekcie ButtonField udostępniać ten sam obraz.       Obiekt ButtonField w formancie powiązane z danymi można ukryć, ustawiając <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>właściwości `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A>       Obiekt ButtonField umożliwia dostosowanie jego nagłówku i stopce sekcji. Aby wyświetlić podpisu w nagłówku lub stopce strony sekcji, ustaw <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>lub <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>Właściwości, odpowiednio.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> Wyświetlanie tekstu w nagłówku sekcji, a nie można wyświetlić obrazu ustawiając <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>Właściwości.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> Aby ukryć sekcji nagłówka w obiekcie ButtonField, ustaw <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>właściwości `false`.</xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>      > [!NOTE] > Niektóre formanty powiązane z danymi (takich jak <xref:System.Web.UI.WebControls.GridView>kontroli) można wyświetlić lub ukryć tylko sekcji cały nagłówek formantu.</xref:System.Web.UI.WebControls.GridView> Nie obsługują tych kontrolek powiązanych z danymi <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>Właściwości pola przycisku poszczególnych.</xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> Pokaż lub Ukryj sekcji całego nagłówka formantu powiązanego z danymi (jeśli jest dostępny), użyj `ShowHeader` właściwości formantu.       Możesz również dostosować wygląd obiektu ButtonField (kolor czcionki, kolor tła itd.) przez ustawienie właściwości stylu dla różnych części pola. W poniższej tabeli wymieniono właściwości inny styl.      | Właściwość style | Ustawienia stylu dla |   |--------------------|----------------------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| Formanty serwera sieci Web podrzędne ButtonField. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| Stopce ButtonField. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| Nagłówki ButtonField. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| Elementy danych w ButtonField. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to use a ButtonField object to display a column of command buttons in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_176_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_176_1.aspx)]"
  syntax:
    content: 'public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  - System.Web.UI.WebControls.ButtonFieldBase
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.ButtonFieldBase.ButtonType
  - System.Web.UI.WebControls.ButtonFieldBase.CausesValidation
  - System.Web.UI.WebControls.ButtonFieldBase.ShowHeader
  - System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ButtonField()
  nameWithType: ButtonField.ButtonField()
  fullName: System.Web.UI.WebControls.ButtonField.ButtonField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> klasy."
  remarks: "Użyj konstruktora ButtonField zainicjować nowe wystąpienie <xref:System.Web.UI.WebControls.ButtonField>klasy.</xref:System.Web.UI.WebControls.ButtonField> Ten konstruktor jest często stosowany podczas dodawania pól do utworzony dynamicznie formantu powiązanego z danymi.       Aby dodać <xref:System.Web.UI.WebControls.ButtonField>dynamicznie obiektu do formantu powiązanego z danymi, Utwórz nową <xref:System.Web.UI.WebControls.ButtonField>obiektów, ustawienia swoich właściwości i dodać go do kolekcji pól dla formantu powiązanego z danymi.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> Na przykład, jeśli używasz <xref:System.Web.UI.WebControls.GridView>kontrolować, Dodaj <xref:System.Web.UI.WebControls.ButtonField>do obiektu <xref:System.Web.UI.WebControls.GridView.Columns%2A>kolekcji.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > Chociaż można dodawać pola dynamicznie do formantu powiązanego z danymi pola powinna być zadeklarowana statycznie, a następnie mogą być pokazano lub ukryty, gdzie to konieczne. Statycznie deklarowanie wszystkich pól zmniejsza rozmiar stan widoku formantu nadrzędnego powiązane z danymi."
  example:
  - "The following code example demonstrates how to use the M:System.Web.UI.WebControls.ButtonField.#ctor constructor to add a <xref:System.Web.UI.WebControls.ButtonField> object dynamically to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[ButtonFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public ButtonField ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CommandName
  nameWithType: ButtonField.CommandName
  fullName: System.Web.UI.WebControls.ButtonField.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia ciąg, który reprezentuje akcję do wykonania, gdy przycisk w <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> obiekt zostanie kliknięty."
  remarks: "Użyj właściwości CommandName do skojarzenia nazwa polecenia, takich jak `&quot;Add&quot;` lub `&quot;Remove&quot;`, za pomocą przycisków w <xref:System.Web.UI.WebControls.ButtonField>obiektu.</xref:System.Web.UI.WebControls.ButtonField> Można ustawić właściwości CommandName na dowolny ciąg, który identyfikuje akcję do wykonania po kliknięciu przycisku polecenia. Można programowo określić nazwę polecenia w obsłudze zdarzeń i wykonać odpowiednie działania.      > [!NOTE] > Wszystkich przycisków w <xref:System.Web.UI.WebControls.ButtonField>obiektu tej samej nazwie polecenia.</xref:System.Web.UI.WebControls.ButtonField>       Formanty powiązane z danymi rozpoznawać nazwy niektórych poleceń i automatycznie podnieść i obsługiwać odpowiednie zdarzenia dla formantu. Następujące nazwy polecenia są rozpoznawane:- `&quot;Cancel&quot;`       -    `&quot;Delete&quot;`       -    `&quot;Edit&quot;`       -    `&quot;Insert&quot;`       -    `&quot;New&quot;`       -    `&quot;Page&quot;`       -    `&quot;Select&quot;`       -    `&quot;Sort&quot;`       -    `&quot;Update&quot;` aby wywołać stronicowanie, ustaw CommandName `&quot;Page&quot;` i <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>zamkniętego <xref:System.Web.UI.WebControls.Button>formant `&quot;First&quot;`, `&quot;Last&quot;`, `&quot;Prev&quot;`, `&quot;Next&quot;`, lub numer strony.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Ponieważ jednak <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>dla <xref:System.Web.UI.WebControls.ButtonField>formant zawsze jest liczba całkowita indeks wiersza, <xref:System.Web.UI.WebControls.ButtonField>formantu nie nadaje się do wywoływania stronicowania.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Podobnie, podczas gdy można wywołać sortowanie ustawiając CommandName `&quot;Sort&quot;`, <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>Właściwość <xref:System.Web.UI.WebControls.ButtonField>formant zawsze jest liczba całkowita indeks wiersza.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Z tego powodu <xref:System.Web.UI.WebControls.ButtonField>formantu nie nadaje się do wywoływania sortowanie.</xref:System.Web.UI.WebControls.ButtonField> Dla niestandardowych poleceń nazwy, takie jak `&quot;Add&quot;` i `&quot;Remove&quot;`, należy napisać kod zdarzenia można sprawdzić nazwę polecenia i wykonanie akcji niestandardowych. Aby uzyskać więcej informacji zobacz <xref:System.Web.UI.WebControls.DataControlCommands>.</xref:System.Web.UI.WebControls.DataControlCommands>      > [!NOTE] > Nie wszystkie polecenia nazwy są rozpoznawane przez co formanty powiązane z danymi. Na przykład `&quot;New&quot;` nie jest rozpoznawany przez <xref:System.Web.UI.WebControls.GridView>kontroli i `&quot;Select&quot;` nie jest rozpoznawany przez <xref:System.Web.UI.WebControls.DetailsView>kontroli.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the CommandName property to specify a command name for the buttons in a <xref:System.Web.UI.WebControls.ButtonField> object of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_922_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_922_1.aspx)]"
  syntax:
    content: public virtual string CommandName { get; set; }
    return:
      type: System.String
      description: "Nazwa akcji do wykonania, gdy przycisk w <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> zostanie kliknięty."
  overload: System.Web.UI.WebControls.ButtonField.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: ButtonField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ButtonField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Kopiuje właściwości bieżącego <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> obiektu do określonego <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> obiektu."
  remarks: "<xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>Metoda jest używany przez metodę Pomocnika <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>metodę, aby skopiować właściwości bieżącego <xref:System.Web.UI.WebControls.ButtonFieldBase>-pochodnych obiektu <xref:System.Web.UI.WebControls.DataControlField>obiekt, który został utworzony przez <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>— Metoda.</xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.ButtonFieldBase> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> Do którego należy skopiować właściwości bieżącego <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>."
  overload: System.Web.UI.WebControls.ButtonField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CreateField()
  nameWithType: ButtonField.CreateField()
  fullName: System.Web.UI.WebControls.ButtonField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Tworzy i zwraca nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> klasy."
  remarks: "Metoda CreateField jest używany przez metodę Pomocnika <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>metody klasy podstawowej, aby utworzyć pustą <xref:System.Web.UI.WebControls.ButtonField>obiektu, do którego należy skopiować właściwości bieżącego <xref:System.Web.UI.WebControls.ButtonField>-pochodzi z obiektu.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "Nowe wystąpienie klasy <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> klasy."
  overload: System.Web.UI.WebControls.ButtonField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.DataTextField
  id: DataTextField
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: DataTextField
  nameWithType: ButtonField.DataTextField
  fullName: System.Web.UI.WebControls.ButtonField.DataTextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia nazwę pola danych, dla którego wartość jest powiązany z <xref:System.Web.UI.WebControls.Button.Text*>Właściwość <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> formantu realizowanego przez <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> obiektu.</xref:System.Web.UI.WebControls.Button.Text*>"
  remarks: "Gdy <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>Właściwość <xref:System.Web.UI.WebControls.ButtonField>obiektu ma ustawioną wartość <xref:System.Web.UI.WebControls.ButtonType>lub <xref:System.Web.UI.WebControls.ButtonType>wartość, użyj właściwości DataTextField do określenia nazwy pola, które chcesz powiązać <xref:System.Web.UI.WebControls.ButtonField>obiektu.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Wartości pola są następnie wyświetlane jako tekst przycisków w <xref:System.Web.UI.WebControls.ButtonField>obiektu.</xref:System.Web.UI.WebControls.ButtonField> Opcjonalnie można sformatować tekstu wyświetlanego przez ustawienie <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>Właściwości.</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>       Zamiast za pomocą właściwości DataTextField powiązać <xref:System.Web.UI.WebControls.ButtonField>obiekt do pola źródła danych, można użyć <xref:System.Web.UI.WebControls.ButtonField.Text%2A>właściwość, aby wyświetlić tekst statyczny tekst przycisków w <xref:System.Web.UI.WebControls.ButtonField>obiektu.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField.Text%2A> </xref:System.Web.UI.WebControls.ButtonField> Gdy <xref:System.Web.UI.WebControls.ButtonField.Text%2A>właściwość jest używana, każdy przycisk udziały sam podpis.</xref:System.Web.UI.WebControls.ButtonField.Text%2A>      > [!NOTE] > Jeśli DataTextField i <xref:System.Web.UI.WebControls.ButtonField.Text%2A>Właściwości są ustawione, pierwszeństwo ma właściwość DataTextField.</xref:System.Web.UI.WebControls.ButtonField.Text%2A>       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the DataTextField property to specify which field to display in a <xref:System.Web.UI.WebControls.ButtonField> column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[ButtonFieldDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1139_1.aspx)]\n [!code-vb[ButtonFieldDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1139_1.aspx)]"
  syntax:
    content: public virtual string DataTextField { get; set; }
    return:
      type: System.String
      description: "Nazwa pola, które chcesz powiązać <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że nie ustawiono właściwości DataTextField."
  overload: System.Web.UI.WebControls.ButtonField.DataTextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  id: DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia ciąg, który określa format wyświetlania wartości pola."
  remarks: "Umożliwia określenie niestandardowych formatów wyświetlania wartości, które są wyświetlane w właściwości DataTextFormatString <xref:System.Web.UI.WebControls.ButtonField>obiektu.</xref:System.Web.UI.WebControls.ButtonField> Jeśli nie ustawiono właściwości DataTextFormatString, wartość w polu jest wyświetlana bez żadnego formatowania.      > [!NOTE] > Ciąg formatu, który jest stosowany tylko wtedy, gdy <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>właściwość jest ustawiona.</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       Ciąg formatu, który może być dowolnym ciągiem literału i zwykle zawiera symbol zastępczy wartości dla pola. Na przykład w ciągu formatu `&quot;Item Value: {0}&quot;`, `{0}` symbol zastępczy jest zastępowany wartość w polu wyświetlanym w <xref:System.Web.UI.WebControls.ButtonField>obiektu.</xref:System.Web.UI.WebControls.ButtonField> Pozostała część ciągu formatu jest wyświetlany jako zwykły tekst.      > [!NOTE] > Jeśli ciąg formatu nie zawiera symbol zastępczy, wartość pola ze źródła danych nie jest objęta końcowego wyświetlany tekst.       Symbol zastępczy składa się z dwóch części oddzielone dwukropkiem i ujęte w nawiasy klamrowe w formie { `A` : `Bxx` }. Wartość przed dwukropkiem (`A` w przykładzie ogólne) określa indeks wartości pola liczony od zera listę parametrów.      > [!NOTE] > To `A` parametru jest częścią formatowania składni. Ponieważ istnieje tylko jedno pole wartość każdej komórki, tę wartość można ustawić tylko na 0.       Dwukropek i wartości po dwukropku są opcjonalne. Znak po dwukropkiem (`B` w przykładzie ogólne) określa format wyświetlania wartości. Poniższa tabela zawiera listę typowych formatach.      | Format znak | Opis elementu |   |----------------------|-----------------|   | `C`| Wyświetla wartości liczbowe w formacie waluty. |   | `D`| Wyświetla wartości liczbowe w formacie dziesiętnym. |   | `E`| Wyświetla wartości liczbowe w formacie (wykładniczej) naukowych. |   | `F`| Wyświetla wartości liczbowe w formacie. |   | `G`| Wyświetla wartości liczbowe w formacie Ogólne. |   | `N`| Wyświetla wartości liczbowe w formacie liczb. |   | `X`| Wyświetla wartości liczbowe w formacie szesnastkowym. |      > [!NOTE] > Z wyjątkiem `X`, znaki formatu nie jest uwzględniana. `X` Format znak Wyświetla znaki szesnastkowe w przypadku, gdy jest określona.       Wartość po znaku formatu (`xx` w przykładzie ogólne) określa liczbę cyfr znaczących lub miejsc dziesiętnych do wyświetlenia. Na przykład ciąg formatu `&quot;{0:F2}&quot;` Wyświetla liczbę stałoprzecinkowe z dwóch miejsc po przecinku.       Aby uzyskać więcej informacji na ciągach formatowania, zobacz [typy formatowania](~/add/includes/ajax-current-ext-md.md).       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the DataTextFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[ButtonFieldDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_654_1.aspx)]\n [!code-vb[ButtonFieldDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_654_1.aspx)]"
  syntax:
    content: public virtual string DataTextFormatString { get; set; }
    return:
      type: System.String
      description: "Ciąg formatu, który określa format wyświetlania wartości pola. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że specjalne formatowanie nie jest stosowane do wartości pola."
  overload: System.Web.UI.WebControls.ButtonField.DataTextFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  id: FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: FormatDataTextValue(Object)
  nameWithType: ButtonField.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Formatuje wartość określonego pola dla komórki w <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> obiektu."
  remarks: "Metoda FormatDataTextValue jest używany do transformacji wartość pola do formatu, który jest określony przez metodę Pomocnika <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>Właściwości.</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>"
  syntax:
    content: protected virtual string FormatDataTextValue (object dataTextValue);
    parameters:
    - id: dataTextValue
      type: System.Object
      description: "Wartość pola do formatowania."
    return:
      type: System.String
      description: "Wartość pola konwertowana na format określonego przez <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString*>Właściwości.</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString*>"
  overload: System.Web.UI.WebControls.ButtonField.FormatDataTextValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
  fullName: System.Web.UI.WebControls.ButtonField.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia obraz do wyświetlania dla każdego przycisku w <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> obiektu."
  remarks: "Gdy <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>Właściwość <xref:System.Web.UI.WebControls.ButtonField>obiektu ma ustawioną wartość <xref:System.Web.UI.WebControls.ButtonType>wartość, z właściwością ImageUrl umożliwia określenie obraz do wyświetlania dla każdego przycisku.</xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Ten obraz można w dowolnym formacie pliku (jpg, GIF, bmp i tak dalej), tak długo, jak przeglądarka klienta obsługuje tego formatu.       Wartość tej właściwości jest przechowywany w stanie widoku."
  example:
  - "The following code example demonstrates how to use the ImageUrl property to specify an image to display for each button in the <xref:System.Web.UI.WebControls.ButtonField> object. For this code example to display, you must provide your own image.  \n  \n [!code-vb[ButtonFieldImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_99_1.aspx)]\n [!code-cs[ButtonFieldImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_99_1.aspx)]"
  syntax:
    content: public virtual string ImageUrl { get; set; }
    return:
      type: System.String
      description: "Obraz do wyświetlania dla każdego przycisku w <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że właściwość ImageUrl nie została ustawiona."
  overload: System.Web.UI.WebControls.ButtonField.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: ButtonField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ButtonField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje bieżące <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> obiektu."
  remarks: "Metoda inicjowania jest wywoływana przez formant danych, z którym <xref:System.Web.UI.WebControls.ButtonField>obiekt jest skojarzony z zainicjować obiektu podstawowego dla wystąpień pola, zanim pole jest kiedykolwiek dodana do kolekcji wierszy.</xref:System.Web.UI.WebControls.ButtonField> Określa dane, takie jak <xref:System.Web.UI.WebControls.DetailsView>i <xref:System.Web.UI.WebControls.GridView>, wywołaj <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>metody w ich `CreateChildControls` metod przed innych metod, takich jak `CreateRow`, są wywoływane w celu utworzenia określonych wierszy z danymi.</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       Wywołaj metodę Initialize, pisząc kontrolki powiązane z danymi niestandardowej, która używa <xref:System.Web.UI.WebControls.TableCell>obiektów w celu przeprowadzenia podstawowego inicjowania dla <xref:System.Web.UI.WebControls.ButtonField>obiektu.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.TableCell> Zaimplementuj tę metodę, jeśli Twoje <xref:System.Web.UI.WebControls.ButtonField>— Typ pochodny wymaga inicjowanie obiektu przed wypełnia <xref:System.Web.UI.WebControls.TableCell>obiekty z danymi lub formantów w <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>— Metoda.</xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.ButtonField>"
  syntax:
    content: public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);
    parameters:
    - id: sortingEnabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby włączyć sortowanie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: control
      type: System.Web.UI.Control
      description: "Formant danych, który jest właścicielem <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, co oznacza formant nie trzeba ponownie powiązać z danymi."
  overload: System.Web.UI.WebControls.ButtonField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicjuje określony <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> obiektu do stanu określonego wiersza."
  remarks: "Metoda InitializeCell tworzy określoną przez typ przycisku <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>Właściwości i dodaje go do <xref:System.Web.UI.Control.Controls%2A>Kolekcja <xref:System.Web.UI.WebControls.DataControlFieldCell>obiektu.</xref:System.Web.UI.WebControls.DataControlFieldCell> </xref:System.Web.UI.Control.Controls%2A> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>Właściwość <xref:System.Web.UI.WebControls.Button>ma ustawioną wartość formantu `rowIndex`.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.CommandArgument%2A>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> Zainicjować."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> wartość, która wskazuje typ wiersza (nagłówek, stopka lub danych)."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Jeden z <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> wartości."
    - id: rowIndex
      type: System.Int32
      description: "Liczony od zera indeks wiersza."
  overload: System.Web.UI.WebControls.ButtonField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.Text
  id: Text
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: Text
  nameWithType: ButtonField.Text
  fullName: System.Web.UI.WebControls.ButtonField.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pobiera lub ustawia podpis statycznych, która jest wyświetlana dla każdego przycisku w <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> obiektu."
  remarks: "Gdy <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>Właściwość <xref:System.Web.UI.WebControls.ButtonField>obiektu ma ustawioną wartość <xref:System.Web.UI.WebControls.ButtonType>lub <xref:System.Web.UI.WebControls.ButtonType>wartość, należy użyć właściwości tekst do wyświetlania tekstu statycznego dla podpisu przycisków w <xref:System.Web.UI.WebControls.ButtonField>.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonType> </xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Każdy przycisk udostępnia sam podpis.       Zamiast używać właściwości Text do wyświetlania tekstu statycznego w <xref:System.Web.UI.WebControls.ButtonField>obiektu, można użyć <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>właściwości do powiązania <xref:System.Web.UI.WebControls.ButtonField>pole w źródle danych.</xref:System.Web.UI.WebControls.ButtonField> </xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> </xref:System.Web.UI.WebControls.ButtonField> Wartości pola są następnie wyświetlane jako podpisy przycisków.      > [!NOTE] > Jeśli <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>i tekst właściwości są ustawione, <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>właściwości ma pierwszeństwo przed.</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> </xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>       Wartość tej właściwości jest przechowywany w stanie widoku.       Wartość tej właściwości, gdy są ustawione, można zapisać automatycznie plik zasobów przy użyciu narzędzia Projektant. Aby uzyskać więcej informacji, zobacz <xref:System.ComponentModel.LocalizableAttribute>i [lokalizacja i globalizacja](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption to display for each button in a <xref:System.Web.UI.WebControls.ButtonField> object.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_489_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_489_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "Podpis wyświetlany dla przycisku w <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>. Wartość domyślna to ciąg pusty (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ButtonField.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: ButtonField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Określa, czy formanty, które są zawarte w <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref> obiektu wywołania zwrotne pomocy technicznej."
  remarks: "Metoda ValidateSupportsCallback jest metodę pomocnika, którą należy ustalić, czy formanty zawarte w <xref:System.Web.UI.WebControls.ButtonField>obiekt obsługę wywołań zwrotnych.</xref:System.Web.UI.WebControls.ButtonField> Ta metoda jest implementowany jako empty — metoda (metody, która nie zawiera żadnego kodu) aby wskazać, że wywołania zwrotne są obsługiwane.      > [!NOTE] > ValidateSupportsCallback metoda jest używana głównie przez deweloperów formantu."
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.ButtonFieldBase
  isExternal: false
  name: System.Web.UI.WebControls.ButtonFieldBase
- uid: System.Web.UI.WebControls.ButtonField.#ctor
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ButtonField()
  nameWithType: ButtonField.ButtonField()
  fullName: System.Web.UI.WebControls.ButtonField.ButtonField()
- uid: System.Web.UI.WebControls.ButtonField.CommandName
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CommandName
  nameWithType: ButtonField.CommandName
  fullName: System.Web.UI.WebControls.ButtonField.CommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: ButtonField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ButtonField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.ButtonField.CreateField
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CreateField()
  nameWithType: ButtonField.CreateField()
  fullName: System.Web.UI.WebControls.ButtonField.CreateField()
- uid: System.Web.UI.WebControls.ButtonField.DataTextField
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextField
  nameWithType: ButtonField.DataTextField
  fullName: System.Web.UI.WebControls.ButtonField.DataTextField
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonField.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: FormatDataTextValue(Object)
  nameWithType: ButtonField.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
  fullName: System.Web.UI.WebControls.ButtonField.ImageUrl
- uid: System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: ButtonField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ButtonField.Initialize(Boolean,Control)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ButtonField.Text
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Text
  nameWithType: ButtonField.Text
  fullName: System.Web.UI.WebControls.ButtonField.Text
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: ButtonField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.ButtonField.#ctor*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ButtonField
  nameWithType: ButtonField.ButtonField
- uid: System.Web.UI.WebControls.ButtonField.CommandName*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CommandName
  nameWithType: ButtonField.CommandName
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CopyProperties
  nameWithType: ButtonField.CopyProperties
- uid: System.Web.UI.WebControls.ButtonField.CreateField*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CreateField
  nameWithType: ButtonField.CreateField
- uid: System.Web.UI.WebControls.ButtonField.DataTextField*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextField
  nameWithType: ButtonField.DataTextField
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: FormatDataTextValue
  nameWithType: ButtonField.FormatDataTextValue
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
- uid: System.Web.UI.WebControls.ButtonField.Initialize*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Initialize
  nameWithType: ButtonField.Initialize
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: InitializeCell
  nameWithType: ButtonField.InitializeCell
- uid: System.Web.UI.WebControls.ButtonField.Text*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Text
  nameWithType: ButtonField.Text
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: ButtonField.ValidateSupportsCallback
