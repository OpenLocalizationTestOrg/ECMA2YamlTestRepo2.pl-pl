### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.PolyBezierSegment
  id: PolyBezierSegment
  children:
  - System.Windows.Media.PolyBezierSegment.#ctor
  - System.Windows.Media.PolyBezierSegment.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Boolean)
  - System.Windows.Media.PolyBezierSegment.Clone
  - System.Windows.Media.PolyBezierSegment.CloneCurrentValue
  - System.Windows.Media.PolyBezierSegment.CreateInstanceCore
  - System.Windows.Media.PolyBezierSegment.Points
  - System.Windows.Media.PolyBezierSegment.PointsProperty
  langs:
  - csharp
  name: PolyBezierSegment
  nameWithType: PolyBezierSegment
  fullName: System.Windows.Media.PolyBezierSegment
  type: Class
  summary: "Reprezentuje jeden lub więcej sześcienny krzywych Beziera."
  remarks: "Użyj <xref:System.Windows.Media.PathFigure>obiektu do przechowywania obiektów PolyBezierSegment i inne segmenty.</xref:System.Windows.Media.PathFigure>       Trzeciego krzywej Beziera jest definiowana za pomocą czterech punktów: punkt początkowy i punkt końcowy dwa punkty kontrolne. PolyBezierSegment określa co najmniej jeden sześcienny krzywych Beziera przez ustawienie <xref:System.Windows.Media.PolyBezierSegment.Points%2A>właściwości do kolekcji punktów.</xref:System.Windows.Media.PolyBezierSegment.Points%2A> Dla co trzy punkty w kolekcji punktów pierwszego i drugiego określ punkty kontrolne dwóch krzywej i trzeciego punktu określa punkt końcowy. Należy pamiętać, że nie start krzywej określono punktu ponieważ punkt początkowy jest taka sama jak punkt końcowy ostatni segment.       Punkty kontrolne dwóch sześcienny krzywej Beziera przypominają pól, korzystające z części co byłoby prostej kierunku się i tworzenie krzywą. Pierwszy punkt kontrolny ma wpływ na początku części krzywej; drugi punkt kontrolny dotyczy końcowy części krzywej. Należy pamiętać, że krzywej nie musi przechodzić przez jednego z punktów kontrolnych; Każdy punkt kontrolny przenosi jego część wiersza do samej siebie, ale nie do samej siebie."
  example:
  - "The following example shows how to use a PolyBezierSegment to draw two cubic Bezier curves.  \n  \n [!code-xml[GeometriesMiscSnippets_snip#PolyBezierSegmentExampleWholePage](~/add/codesnippet/xaml/GeometriesMiscSnippets_snip.GeometriesMiscSnippets/PolyBezierSegmentExample.xaml#polybeziersegmentexamplewholepage)]  \n  \n [!code-cs[GeometriesMiscSnippets_procedural_snip#PolyBezierSegmentCodeExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/PolyBezierSegmentExample.cs#polybeziersegmentcodeexamplewholepage)]\n [!code-vb[GeometriesMiscSnippets_procedural_snip#PolyBezierSegmentCodeExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/polybeziersegmentexample.vb#polybeziersegmentcodeexamplewholepage)]"
  syntax:
    content: 'public sealed class PolyBezierSegment : System.Windows.Media.PathSegment'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.PathSegment
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.PathSegment.IsSmoothJoin
  - System.Windows.Media.PathSegment.IsSmoothJoinProperty
  - System.Windows.Media.PathSegment.IsStroked
  - System.Windows.Media.PathSegment.IsStrokedProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.PolyBezierSegment.#ctor
  id: '#ctor'
  parent: System.Windows.Media.PolyBezierSegment
  langs:
  - csharp
  name: PolyBezierSegment()
  nameWithType: PolyBezierSegment.PolyBezierSegment()
  fullName: System.Windows.Media.PolyBezierSegment.PolyBezierSegment()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Media.PolyBezierSegment&quot;> </xref> klasy."
  syntax:
    content: public PolyBezierSegment ();
    parameters: []
  overload: System.Windows.Media.PolyBezierSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PolyBezierSegment.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Boolean)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Boolean)'
  parent: System.Windows.Media.PolyBezierSegment
  langs:
  - csharp
  name: PolyBezierSegment(IEnumerable<Point>,Boolean)
  nameWithType: PolyBezierSegment.PolyBezierSegment(IEnumerable<Point>,Boolean)
  fullName: System.Windows.Media.PolyBezierSegment.PolyBezierSegment(IEnumerable<Point>,Boolean)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Windows.Media.PolyBezierSegment&quot;> </xref> klasy z określonej kolekcji <xref href=&quot;System.Windows.Point&quot;> </xref> obiektów i wartość określającą, czy segmenty malowania."
  syntax:
    content: public PolyBezierSegment (System.Collections.Generic.IEnumerable<System.Windows.Point> points, bool isStroked);
    parameters:
    - id: points
      type: System.Collections.Generic.IEnumerable{System.Windows.Point}
      description: "Kolekcja punktów określające geometrii trzeciego stopnia krzywej Beziera."
    - id: isStroked
      type: System.Boolean
      description: "Wartość określającą, czy segmenty malowania."
  overload: System.Windows.Media.PolyBezierSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PolyBezierSegment.Clone
  id: Clone
  parent: System.Windows.Media.PolyBezierSegment
  langs:
  - csharp
  name: Clone()
  nameWithType: PolyBezierSegment.Clone()
  fullName: System.Windows.Media.PolyBezierSegment.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Tworzy modyfikowalną klonu tego <xref href=&quot;System.Windows.Media.PolyBezierSegment&quot;> </xref>, tworzenie bezpośrednich kopii wartości tego obiektu. Podczas kopiowania właściwości zależności, ta metoda umożliwia skopiowanie powiązania odwołań i dane zasobów, ale nie rozpoznają może ale animacje lub ich bieżącymi wartościami."
  remarks: "Ta metoda służy do tworzenia kopii można modyfikować zablokowane <xref:System.Windows.Freezable>obiektów (lub dowolnej <xref:System.Windows.Freezable>obiektu).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Dla wygody ta metoda zasłania dziedziczone wersji z silnie typizowaną implementację.       Aby uzyskać więcej informacji zobacz <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.PolyBezierSegment Clone ();
    parameters: []
    return:
      type: System.Windows.Media.PolyBezierSegment
      description: "Można modyfikować klonowania bieżącego obiektu. Sklonowany obiekt <> </> *> właściwość będzie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> nawet wtedy, gdy źródło <> </> *> właściwość<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.PolyBezierSegment.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PolyBezierSegment.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.PolyBezierSegment
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: PolyBezierSegment.CloneCurrentValue()
  fullName: System.Windows.Media.PolyBezierSegment.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Tworzy modyfikowalną klonu tego <xref href=&quot;System.Windows.Media.PolyBezierSegment&quot;> </xref> obiekt Tworzenie bezpośrednich kopii wartości bieżących tego obiektu. Odwołania do zasobu, powiązania danych i animacji nie są kopiowane, ale są ich bieżącymi wartościami."
  remarks: "Ta metoda służy do tworzenia kopii można modyfikować zablokowane <xref:System.Windows.Freezable>obiektów (lub dowolnej <xref:System.Windows.Freezable>obiektu).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Dla wygody ta metoda zasłania dziedziczone wersji z silnie typizowaną implementację.       Aby uzyskać więcej informacji zobacz <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.PolyBezierSegment CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.PolyBezierSegment
      description: "Można modyfikować klonowania bieżącego obiektu. Sklonowany obiekt <> </> *> właściwość będzie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> nawet wtedy, gdy źródło <> </> *> właściwość <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.PolyBezierSegment.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PolyBezierSegment.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.PolyBezierSegment
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: PolyBezierSegment.CreateInstanceCore()
  fullName: System.Windows.Media.PolyBezierSegment.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "Do dodania."
  overload: System.Windows.Media.PolyBezierSegment.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PolyBezierSegment.Points
  id: Points
  parent: System.Windows.Media.PolyBezierSegment
  langs:
  - csharp
  name: Points
  nameWithType: PolyBezierSegment.Points
  fullName: System.Windows.Media.PolyBezierSegment.Points
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Pobiera lub ustawia <xref href=&quot;System.Windows.Media.PointCollection&quot;> </xref> definiują to <xref href=&quot;System.Windows.Media.PolyBezierSegment&quot;> </xref> obiektu."
  remarks: "<a name=&quot;dependencyPropertyInfo_Points&quot;></a>## Informacje dotyczące właściwości zależności |||   |-|-|   | Pole identyfikatora | <xref:System.Windows.Media.PolyBezierSegment.PointsProperty>|   | Wartość właściwości metadanych `true`| None |</xref:System.Windows.Media.PolyBezierSegment.PointsProperty>"
  example:
  - "The following example shows how to use the Points property of a <xref:System.Windows.Media.PolyBezierSegment> that defines two cubic Bezier curves.  \n  \n [!code-xml[GeometriesMiscSnippets_snip#PolyBezierSegmentExampleWholePage](~/add/codesnippet/xaml/GeometriesMiscSnippets_snip.GeometriesMiscSnippets/PolyBezierSegmentExample.xaml#polybeziersegmentexamplewholepage)]  \n  \n [!code-cs[GeometriesMiscSnippets_procedural_snip#PolyBezierSegmentCodeExampleWholePage](~/add/codesnippet/csharp/GeometriesMiscSnippets_procedural/PolyBezierSegmentExample.cs#polybeziersegmentcodeexamplewholepage)]\n [!code-vb[GeometriesMiscSnippets_procedural_snip#PolyBezierSegmentCodeExampleWholePage](~/add/codesnippet/visualbasic/geometriesmiscsnippets_procedural/polybeziersegmentexample.vb#polybeziersegmentcodeexamplewholepage)]"
  syntax:
    content: public System.Windows.Media.PointCollection Points { get; set; }
    return:
      type: System.Windows.Media.PointCollection
      description: "Kolekcja, która określa się to <xref href=&quot;System.Windows.Media.PolyBezierSegment&quot;> </xref> obiektu."
  overload: System.Windows.Media.PolyBezierSegment.Points*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PolyBezierSegment.PointsProperty
  id: PointsProperty
  parent: System.Windows.Media.PolyBezierSegment
  langs:
  - csharp
  name: PointsProperty
  nameWithType: PolyBezierSegment.PointsProperty
  fullName: System.Windows.Media.PolyBezierSegment.PointsProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identyfikuje <xref:System.Windows.Media.PolyBezierSegment.Points*>Właściwości zależności.</xref:System.Windows.Media.PolyBezierSegment.Points*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PointsProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.PathSegment
  isExternal: false
  name: System.Windows.Media.PathSegment
- uid: System.Windows.Media.PolyBezierSegment.#ctor
  parent: System.Windows.Media.PolyBezierSegment
  isExternal: false
  name: PolyBezierSegment()
  nameWithType: PolyBezierSegment.PolyBezierSegment()
  fullName: System.Windows.Media.PolyBezierSegment.PolyBezierSegment()
- uid: System.Windows.Media.PolyBezierSegment.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Boolean)
  parent: System.Windows.Media.PolyBezierSegment
  isExternal: false
  name: PolyBezierSegment(IEnumerable<Point>,Boolean)
  nameWithType: PolyBezierSegment.PolyBezierSegment(IEnumerable<Point>,Boolean)
  fullName: System.Windows.Media.PolyBezierSegment.PolyBezierSegment(IEnumerable<Point>,Boolean)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Point}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Point>
  nameWithType: IEnumerable<Point>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Point>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Point>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Point
    name: Point
    nameWithType: Point
    fullName: Point
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.PolyBezierSegment.Clone
  parent: System.Windows.Media.PolyBezierSegment
  isExternal: false
  name: Clone()
  nameWithType: PolyBezierSegment.Clone()
  fullName: System.Windows.Media.PolyBezierSegment.Clone()
- uid: System.Windows.Media.PolyBezierSegment
  parent: System.Windows.Media
  isExternal: false
  name: PolyBezierSegment
  nameWithType: PolyBezierSegment
  fullName: System.Windows.Media.PolyBezierSegment
- uid: System.Windows.Media.PolyBezierSegment.CloneCurrentValue
  parent: System.Windows.Media.PolyBezierSegment
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: PolyBezierSegment.CloneCurrentValue()
  fullName: System.Windows.Media.PolyBezierSegment.CloneCurrentValue()
- uid: System.Windows.Media.PolyBezierSegment.CreateInstanceCore
  parent: System.Windows.Media.PolyBezierSegment
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: PolyBezierSegment.CreateInstanceCore()
  fullName: System.Windows.Media.PolyBezierSegment.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.PolyBezierSegment.Points
  parent: System.Windows.Media.PolyBezierSegment
  isExternal: false
  name: Points
  nameWithType: PolyBezierSegment.Points
  fullName: System.Windows.Media.PolyBezierSegment.Points
- uid: System.Windows.Media.PointCollection
  parent: System.Windows.Media
  isExternal: false
  name: PointCollection
  nameWithType: PointCollection
  fullName: System.Windows.Media.PointCollection
- uid: System.Windows.Media.PolyBezierSegment.PointsProperty
  parent: System.Windows.Media.PolyBezierSegment
  isExternal: false
  name: PointsProperty
  nameWithType: PolyBezierSegment.PointsProperty
  fullName: System.Windows.Media.PolyBezierSegment.PointsProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.PolyBezierSegment.#ctor*
  parent: System.Windows.Media.PolyBezierSegment
  isExternal: false
  name: PolyBezierSegment
  nameWithType: PolyBezierSegment.PolyBezierSegment
- uid: System.Windows.Media.PolyBezierSegment.Clone*
  parent: System.Windows.Media.PolyBezierSegment
  isExternal: false
  name: Clone
  nameWithType: PolyBezierSegment.Clone
- uid: System.Windows.Media.PolyBezierSegment.CloneCurrentValue*
  parent: System.Windows.Media.PolyBezierSegment
  isExternal: false
  name: CloneCurrentValue
  nameWithType: PolyBezierSegment.CloneCurrentValue
- uid: System.Windows.Media.PolyBezierSegment.CreateInstanceCore*
  parent: System.Windows.Media.PolyBezierSegment
  isExternal: false
  name: CreateInstanceCore
  nameWithType: PolyBezierSegment.CreateInstanceCore
- uid: System.Windows.Media.PolyBezierSegment.Points*
  parent: System.Windows.Media.PolyBezierSegment
  isExternal: false
  name: Points
  nameWithType: PolyBezierSegment.Points
