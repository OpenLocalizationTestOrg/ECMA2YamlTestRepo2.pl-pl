### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter
  id: SymDocumentWriter
  children:
  - System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*)
  - System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose
  - System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize
  - System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged
  - System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(System.Guid,System.Byte[])
  - System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(System.Byte[])
  langs:
  - csharp
  name: SymDocumentWriter
  nameWithType: SymDocumentWriter
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter
  type: Class
  summary: "Udostępnia metody do zapisywania dokumentu odwołuje się magazynu symboli."
  remarks: "Dokument jest zdefiniowany przez adres URL i identyfikator GUID typu dokumentu. Opcjonalnie dokument źródłowy mogą być przechowywane w magazynie symboli."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymDocumentWriter : System.Diagnostics.SymbolStore.SymDocumentWriterBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolDocumentWriter
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymDocumentWriterBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolDocumentWriter
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymDocumentWriterBase.{dtor}
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*)
  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*)'
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  langs:
  - csharp
  name: SymDocumentWriter(ISymUnmanagedDocumentWriter*)
  nameWithType: SymDocumentWriter.SymDocumentWriter(ISymUnmanagedDocumentWriter*)
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.SymDocumentWriter(ISymUnmanagedDocumentWriter*)
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  syntax:
    content: public SymDocumentWriter (System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter* pDocumentWriter);
    parameters:
    - id: pDocumentWriter
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*
      description: "Do dodania."
  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymDocumentWriter.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Zwalnia zasoby używane przez bieżące wystąpienie klasy <xref href=&quot;System.Diagnostics.SymbolStore.SymDocumentWriter&quot;> </xref> klasy."
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymDocumentWriter.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Wywoływane przez <> </> *> i <> </> *> metod, aby zwolnić zasoby zarządzane i niezarządzane używane przez bieżące wystąpienie klasy <xref href=&quot;System.Diagnostics.SymbolStore.SymBinder&quot;> </xref> klasy."
  remarks: "Ta metoda jest wywoływana tylko przez metodę publiczną <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose%2A>i <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize%2A>metod; nie należy wywoływać tej metody bezpośrednio.</xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize%2A> </xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose%2A>"
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zwolnić zasoby zarządzane i niezarządzane; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> aby zwolnić tylko zasoby niezarządzane."
  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymDocumentWriter.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Zwalnia zasoby niezarządzane, a następnie wykonuje inne operacje oczyszczania przed <xref href=&quot;System.Diagnostics.SymbolStore.SymDocumentWriter&quot;> </xref> jest odzyskana przez wyrzucanie elementów bezużytecznych."
  remarks: "Ta metoda zastępuje <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Kod aplikacji nie powinny wywoływać tej metody; obiekt `Finalize` metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacji przez moduł garbage collector została wyłączona przez wywołanie do <xref:System.GC.SuppressFinalize%2A>metody.</xref:System.GC.SuppressFinalize%2A>"
  syntax:
    content: ~SymDocumentWriter ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged
  id: GetUnmanaged
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  langs:
  - csharp
  name: GetUnmanaged()
  nameWithType: SymDocumentWriter.GetUnmanaged()
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  syntax:
    content: public System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter* GetUnmanaged ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*
      description: "Do dodania."
  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(System.Guid,System.Byte[])
  id: SetCheckSum(System.Guid,System.Byte[])
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  langs:
  - csharp
  name: SetCheckSum(Guid,Byte[])
  nameWithType: SymDocumentWriter.SetCheckSum(Guid,Byte[])
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(Guid,Byte[])
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Zgłasza wyjątek <xref:System.NotImplementedException>we wszystkich przypadkach.</xref:System.NotImplementedException>"
  syntax:
    content: public virtual void SetCheckSum (Guid algorithmId, byte[] source);
    parameters:
    - id: algorithmId
      type: System.Guid
      description: "Ten parametr nie jest używany."
    - id: source
      type: System.Byte[]
      description: "Ten parametr nie jest używany."
  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "We wszystkich przypadkach."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(System.Byte[])
  id: SetSource(System.Byte[])
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  langs:
  - csharp
  name: SetSource(Byte[])
  nameWithType: SymDocumentWriter.SetSource(Byte[])
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(Byte[])
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Zgłasza wyjątek <xref:System.NotSupportedException>we wszystkich przypadkach.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual void SetSource (byte[] source);
    parameters:
    - id: source
      type: System.Byte[]
      description: "Ten parametr nie jest używany."
  overload: System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "We wszystkich przypadkach."
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.SymDocumentWriterBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymDocumentWriterBase
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*)
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: SymDocumentWriter(ISymUnmanagedDocumentWriter*)
  nameWithType: SymDocumentWriter.SymDocumentWriter(ISymUnmanagedDocumentWriter*)
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.SymDocumentWriter(ISymUnmanagedDocumentWriter*)
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: Dispose()
  nameWithType: SymDocumentWriter.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose()
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymDocumentWriter.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: Finalize()
  nameWithType: SymDocumentWriter.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize()
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: GetUnmanaged()
  nameWithType: SymDocumentWriter.GetUnmanaged()
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged()
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(System.Guid,System.Byte[])
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: SetCheckSum(Guid,Byte[])
  nameWithType: SymDocumentWriter.SetCheckSum(Guid,Byte[])
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(Guid,Byte[])
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(System.Byte[])
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: SetSource(Byte[])
  nameWithType: SymDocumentWriter.SetSource(Byte[])
  fullName: System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(Byte[])
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor*
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: SymDocumentWriter
  nameWithType: SymDocumentWriter.SymDocumentWriter
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose*
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: Dispose
  nameWithType: SymDocumentWriter.Dispose
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize*
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: Finalize
  nameWithType: SymDocumentWriter.Finalize
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged*
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: GetUnmanaged
  nameWithType: SymDocumentWriter.GetUnmanaged
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum*
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: SetCheckSum
  nameWithType: SymDocumentWriter.SetCheckSum
- uid: System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource*
  parent: System.Diagnostics.SymbolStore.SymDocumentWriter
  isExternal: false
  name: SetSource
  nameWithType: SymDocumentWriter.SetSource
