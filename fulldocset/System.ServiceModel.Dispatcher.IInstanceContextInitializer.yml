### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  id: IInstanceContextInitializer
  children:
  - System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  langs:
  - csharp
  name: IInstanceContextInitializer
  nameWithType: IInstanceContextInitializer
  fullName: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  type: Interface
  summary: "Definiuje metody konieczne inspekcja lub modyfikowanie tworzenie <xref:System.ServiceModel.InstanceContext>obiektów na żądanie.</xref:System.ServiceModel.InstanceContext>"
  remarks: "Aby sprawdzić lub zmodyfikować <xref:System.ServiceModel.InstanceContext>obiektów po ich utworzeniu implementować interfejs IInstanceContextInitializer i użyj <xref:System.ServiceModel.Description.IContractBehavior>je dodać <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A>Właściwości.</xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> </xref:System.ServiceModel.Description.IContractBehavior> </xref:System.ServiceModel.InstanceContext>       Może to być dowolna liczba inicjatorów kontekst dla usługi. Zazwyczaj IInstanceContextInitializer jest dodawany do Dołącz rozszerzenie <xref:System.ServiceModel.InstanceContext>obiektu jako mechanizm przekazywania danych w całej aplikacji.</xref:System.ServiceModel.InstanceContext>       Jeśli chcesz uczestniczyć w udostępnianiu lub wybierając <xref:System.ServiceModel.InstanceContext>obiekt, który przetwarza wiadomości, zobacz <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=fullName>.</xref:System.ServiceModel.Dispatcher.IInstanceContextProvider?displayProperty=fullName> </xref:System.ServiceModel.InstanceContext>"
  syntax:
    content: public interface IInstanceContextInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  id: Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  langs:
  - csharp
  name: Initialize(InstanceContext,Message)
  nameWithType: IInstanceContextInitializer.Initialize(InstanceContext,Message)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(InstanceContext,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Zapewnia możliwość modyfikowania nowo utworzony <xref:System.ServiceModel.InstanceContext>obiektu.</xref:System.ServiceModel.InstanceContext>"
  remarks: "Metoda inicjowania jest wywoływane, gdy <xref:System.ServiceModel.InstanceContext>obiekt jest tworzony.</xref:System.ServiceModel.InstanceContext> Zwykle ta metoda jest używana, można dołączyć rozszerzenia, dzięki czemu dane niestandardowe są dostępne w całej aplikacji."
  syntax:
    content: public void Initialize (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "Kontekst wystąpienia dostarczony przez system."
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Komunikat, który powoduje utworzenie wystąpienia kontekstu."
  overload: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  isExternal: false
  name: Initialize(InstanceContext,Message)
  nameWithType: IInstanceContextInitializer.Initialize(InstanceContext,Message)
  fullName: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(InstanceContext,Message)
- uid: System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: true
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize*
  parent: System.ServiceModel.Dispatcher.IInstanceContextInitializer
  isExternal: false
  name: Initialize
  nameWithType: IInstanceContextInitializer.Initialize
