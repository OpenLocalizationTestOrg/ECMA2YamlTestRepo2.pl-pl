### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SHA1Managed
  id: SHA1Managed
  children:
  - System.Security.Cryptography.SHA1Managed.#ctor
  - System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA1Managed.HashFinal
  - System.Security.Cryptography.SHA1Managed.Initialize
  langs:
  - csharp
  name: SHA1Managed
  nameWithType: SHA1Managed
  fullName: System.Security.Cryptography.SHA1Managed
  type: Class
  summary: "Oblicza <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref> wartość skrótu dla danych wejściowych przy użyciu biblioteki zarządzanej."
  remarks: "Skrót jest używana jako unikatowy o stałym rozmiarze reprezentujący dużej ilości danych. Skróty dwóch zestawów danych powinien być zgodny tylko wtedy, gdy zgodny odpowiednich danych. Niewielkie zmiany w wyniku danych w dużych zmian nieprzewidywalne mieszania.       Jest to czysto zarządzaną implementację <xref:System.Security.Cryptography.SHA1>nie zawija CAPI.</xref:System.Security.Cryptography.SHA1>       Rozmiar wyznaczania wartości skrótu dla algorytmu SHA1Managed jest 160 bitów."
  example:
  - "The following example computes the SHA1Managed hash for `data` and stores it in `result`. This example assumes that there is a predefined constant `DATA_SIZE`.  \n  \n [!code-cpp[Classic SHA1Managed Example#1](~/add/codesnippet/cpp/t-system.security.crypto_56_1.cpp)]\n [!code-cs[Classic SHA1Managed Example#1](~/add/codesnippet/csharp/t-system.security.crypto_56_1.cs)]\n [!code-vb[Classic SHA1Managed Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_56_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SHA1Managed : System.Security.Cryptography.SHA1
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.SHA1
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.SHA1.Create
  - System.Security.Cryptography.SHA1.Create(System.String)
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1Managed.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SHA1Managed
  langs:
  - csharp
  name: SHA1Managed()
  nameWithType: SHA1Managed.SHA1Managed()
  fullName: System.Security.Cryptography.SHA1Managed.SHA1Managed()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Cryptography.SHA1Managed&quot;> </xref> klasy."
  syntax:
    content: public SHA1Managed ();
    parameters: []
  overload: System.Security.Cryptography.SHA1Managed.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ta klasa nie jest zgodne z algorytmu FIPS."
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA1Managed
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA1Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA1Managed.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Kieruje dane zapisywane do obiektu do <xref href=&quot;System.Security.Cryptography.SHA1Managed&quot;> </xref> algorytmem wyznaczania wartości skrótu obliczania skrótu."
  syntax:
    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "Dane wejściowe."
    - id: ibStart
      type: System.Int32
      description: "Przesunięcie do tablicy typu byte, z którego można rozpocząć korzystanie z danych."
    - id: cbSize
      type: System.Int32
      description: "Liczba bajtów w tablicy, która ma być używana jako dane."
  overload: System.Security.Cryptography.SHA1Managed.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1Managed.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.SHA1Managed
  langs:
  - csharp
  name: HashFinal()
  nameWithType: SHA1Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA1Managed.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Zwraca obliczoną <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref> wartość skrótu po wszystkie dane zostały zapisane w obiekt."
  syntax:
    content: protected override byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Obliczona wartość skrótu."
  overload: System.Security.Cryptography.SHA1Managed.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.SHA1Managed.Initialize
  id: Initialize
  parent: System.Security.Cryptography.SHA1Managed
  langs:
  - csharp
  name: Initialize()
  nameWithType: SHA1Managed.Initialize()
  fullName: System.Security.Cryptography.SHA1Managed.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicjuje wystąpienie klasy <xref href=&quot;System.Security.Cryptography.SHA1Managed&quot;> </xref>."
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.SHA1Managed.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.SHA1
  isExternal: false
  name: System.Security.Cryptography.SHA1
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.SHA1Managed.#ctor
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: SHA1Managed()
  nameWithType: SHA1Managed.SHA1Managed()
  fullName: System.Security.Cryptography.SHA1Managed.SHA1Managed()
- uid: System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: SHA1Managed.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.SHA1Managed.HashCore(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.SHA1Managed.HashFinal
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: HashFinal()
  nameWithType: SHA1Managed.HashFinal()
  fullName: System.Security.Cryptography.SHA1Managed.HashFinal()
- uid: System.Security.Cryptography.SHA1Managed.Initialize
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: Initialize()
  nameWithType: SHA1Managed.Initialize()
  fullName: System.Security.Cryptography.SHA1Managed.Initialize()
- uid: System.Security.Cryptography.SHA1Managed.#ctor*
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: SHA1Managed
  nameWithType: SHA1Managed.SHA1Managed
- uid: System.Security.Cryptography.SHA1Managed.HashCore*
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: HashCore
  nameWithType: SHA1Managed.HashCore
- uid: System.Security.Cryptography.SHA1Managed.HashFinal*
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: HashFinal
  nameWithType: SHA1Managed.HashFinal
- uid: System.Security.Cryptography.SHA1Managed.Initialize*
  parent: System.Security.Cryptography.SHA1Managed
  isExternal: false
  name: Initialize
  nameWithType: SHA1Managed.Initialize
