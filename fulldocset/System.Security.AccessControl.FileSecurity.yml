### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSecurity
  id: FileSecurity
  children:
  - System.Security.AccessControl.FileSecurity.#ctor
  - System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)
  langs:
  - csharp
  name: FileSecurity
  nameWithType: FileSecurity
  fullName: System.Security.AccessControl.FileSecurity
  type: Class
  summary: "Reprezentuje kontroli dostępu i inspekcji zabezpieczeń dla pliku. Ta klasa nie może być dziedziczona."
  remarks: "Klasa FileSecurity określa prawa dostępu do plików systemu i jak są poddawane inspekcji prób dostępu.  Ta klasa reprezentuje prawa dostępu i inspekcji jako zestaw reguł. Każda reguła dostępu jest reprezentowana przez <xref:System.Security.AccessControl.FileSystemAccessRule>obiektu, gdy każda reguła inspekcji jest reprezentowana przez <xref:System.Security.AccessControl.FileSystemAuditRule>obiektu.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       Klasa FileSecurity jest abstrakcję źródłowy system Microsoft Windows plik zabezpieczeń. W tym systemie każdy plik ma listy kontroli dostępu (DACL), która kontroluje dostęp do pliku, a system listę kontroli dostępu (SACL), który określa próby kontroli dostępu, które są poddawane inspekcji.  <xref:System.Security.AccessControl.FileSystemAccessRule>i <xref:System.Security.AccessControl.FileSystemAuditRule>klasy są abstrakcje wpisów kontroli dostępu (ACE), które obejmują listy DACL i SACL.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       Klasa FileSecurity ukrywa wiele informacji poufnych list kontroli dostępu i SACL; nie masz martwić się o ACE porządkowanie lub DACL wartości null.       Aby pobrać, dodać lub zmienić reguł dostępu, które reprezentują DACL i SACL pliku, należy użyć klasy FileSecurity.       Aby zachować dostęp do nowych lub zmienionych lub inspekcji reguł do pliku, użyj <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> Aby pobrać dostępu lub inspekcji reguły z istniejącego pliku, użyj <xref:System.IO.FileInfo.GetAccessControl%2A>metody.</xref:System.IO.FileInfo.GetAccessControl%2A>"
  example:
  - "The following code example uses the FileSecurity class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_2_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_2_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_2_1.cpp)]"
  syntax:
    content: 'public sealed class FileSecurity : System.Security.AccessControl.FileSystemSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  - System.Security.AccessControl.FileSystemSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AccessRightType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.FileSecurity.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.FileSecurity
  langs:
  - csharp
  name: FileSecurity()
  nameWithType: FileSecurity.FileSecurity()
  fullName: System.Security.AccessControl.FileSecurity.FileSecurity()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> klasy."
  remarks: "Użyj tego konstruktora, jeśli chcesz utworzyć pustą <xref:System.Security.AccessControl.FileSecurity>obiekt, który nie jest oparty na istniejący plik.</xref:System.Security.AccessControl.FileSecurity>  Można wypełnić obiektu o informacje dotyczące kontroli dostępu i zastosować je do pliku.       Można dodawać dostępu i inspekcji reguł <xref:System.Security.AccessControl.FileSecurity>przy użyciu <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A>metody.</xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> </xref:System.Security.AccessControl.FileSecurity> Można usunąć dostępu lub przy użyciu zasad inspekcji <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>metody.</xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>       Aby zachować dostęp do nowych lub zmienionych lub inspekcji reguł do pliku, użyj <xref:System.IO.File.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Aby pobrać dostępu lub inspekcji reguły z istniejącego pliku, użyj <xref:System.IO.File.GetAccessControl%2A>lub <xref:System.IO.FileInfo.GetAccessControl%2A>metody.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>"
  syntax:
    content: public FileSecurity ();
    parameters: []
  overload: System.Security.AccessControl.FileSecurity.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Bieżący system operacyjny nie jest Microsoft Windows 2000 lub nowszym."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)
  id: '#ctor(System.String,System.Security.AccessControl.AccessControlSections)'
  parent: System.Security.AccessControl.FileSecurity
  langs:
  - csharp
  name: FileSecurity(String,AccessControlSections)
  nameWithType: FileSecurity.FileSecurity(String,AccessControlSections)
  fullName: System.Security.AccessControl.FileSecurity.FileSecurity(String,AccessControlSections)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> klasy z określonego pliku przy użyciu określonej wartości <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> wyliczenia."
  remarks: "Ten konstruktor pobiera informacje dotyczące kontroli dostępu do określonego pliku, a następnie tworzy <xref:System.Security.AccessControl.FileSecurity>obiekt hermetyzujący informacje.</xref:System.Security.AccessControl.FileSecurity>  Następnie można sprawdzić, dodać lub usunąć informacje dotyczące kontroli dostępu do określonego pliku.       Można dodawać dostępu i inspekcji reguł <xref:System.Security.AccessControl.FileSecurity>przy użyciu <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A>metody.</xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> </xref:System.Security.AccessControl.FileSecurity> Można usunąć dostępu lub przy użyciu zasad inspekcji <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>metody.</xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>       Aby zachować dostęp do nowych lub zmienionych lub inspekcji reguł do pliku, użyj <xref:System.IO.File.SetAccessControl%2A>lub <xref:System.IO.FileInfo.SetAccessControl%2A>metody.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Aby pobrać dostępu lub inspekcji reguły z istniejącego pliku, użyj <xref:System.IO.File.GetAccessControl%2A>lub <xref:System.IO.FileInfo.GetAccessControl%2A>metody.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>"
  syntax:
    content: public FileSecurity (string fileName, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: fileName
      type: System.String
      description: "Lokalizacja pliku w celu utworzenia <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> obiekt z."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Jeden z <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> wartości, które określają typ dostępu kontrolować listę kontroli dostępu (ACL) informacje do pobrania."
  overload: System.Security.AccessControl.FileSecurity.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> fileName </code> Parametr jest ciągiem o zerowej długości, zawiera tylko biały znak lub zawiera jeden lub więcej nieprawidłowych znaków, zgodnie z definicją <xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Określona ścieżka jest nieprawidłowa, (na przykład na mapowany dysk)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Plik określony w <code> fileName </code> nie znaleziono parametru."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Wystąpił błąd We/Wy podczas otwierania pliku."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>jest w nieprawidłowym formacie."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>fileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Bieżący system operacyjny nie jest Microsoft Windows 2000 lub nowszym."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Określona ścieżka i nazwa pliku przekracza maksymalną długość zdefiniowana w systemie. Na przykład na platformach opartych na systemie Windows, ścieżki musi być mniejsza niż 248 znaków i nazwy pliku musi być mniejsza niż 260 znaków."
  - type: System.Security.AccessControl.PrivilegeNotHeldException
    commentId: T:System.Security.AccessControl.PrivilegeNotHeldException
    description: "Bieżące konto system nie ma uprawnień administracyjnych."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Nie można odnaleźć pliku."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code> fileName </code> Parametr określony plik jest tylko do odczytu.       - lub - tej operacji nie jest obsługiwane na bieżącej platformie.       - lub - <code> fileName </code> katalog określony parametr.       - lub - obiekt wywołujący nie ma wymaganych uprawnień."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: System.Security.AccessControl.FileSystemSecurity
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Runtime.InteropServices.SEHException
  isExternal: true
  name: System.Runtime.InteropServices.SEHException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.Security.AccessControl.PrivilegeNotHeldException
  parent: System.Security.AccessControl
  isExternal: false
  name: PrivilegeNotHeldException
  nameWithType: PrivilegeNotHeldException
  fullName: System.Security.AccessControl.PrivilegeNotHeldException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.Security.AccessControl.FileSecurity.#ctor
  parent: System.Security.AccessControl.FileSecurity
  isExternal: false
  name: FileSecurity()
  nameWithType: FileSecurity.FileSecurity()
  fullName: System.Security.AccessControl.FileSecurity.FileSecurity()
- uid: System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.FileSecurity
  isExternal: false
  name: FileSecurity(String,AccessControlSections)
  nameWithType: FileSecurity.FileSecurity(String,AccessControlSections)
  fullName: System.Security.AccessControl.FileSecurity.FileSecurity(String,AccessControlSections)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.Security.AccessControl.FileSecurity.#ctor*
  parent: System.Security.AccessControl.FileSecurity
  isExternal: false
  name: FileSecurity
  nameWithType: FileSecurity.FileSecurity
