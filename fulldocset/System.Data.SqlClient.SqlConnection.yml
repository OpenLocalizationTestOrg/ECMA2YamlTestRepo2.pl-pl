### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlConnection
  id: SqlConnection
  children:
  - System.Data.SqlClient.SqlConnection.#ctor
  - System.Data.SqlClient.SqlConnection.#ctor(System.String)
  - System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)
  - System.Data.SqlClient.SqlConnection.AccessToken
  - System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.SqlClient.SqlConnection.BeginTransaction
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  - System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  - System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)
  - System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  - System.Data.SqlClient.SqlConnection.ClearAllPools
  - System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlConnection.ClientConnectionId
  - System.Data.SqlClient.SqlConnection.Close
  - System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  - System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  - System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  - System.Data.SqlClient.SqlConnection.ConnectionString
  - System.Data.SqlClient.SqlConnection.ConnectionTimeout
  - System.Data.SqlClient.SqlConnection.CreateCommand
  - System.Data.SqlClient.SqlConnection.CreateDbCommand
  - System.Data.SqlClient.SqlConnection.Credential
  - System.Data.SqlClient.SqlConnection.Database
  - System.Data.SqlClient.SqlConnection.DataSource
  - System.Data.SqlClient.SqlConnection.DbProviderFactory
  - System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  - System.Data.SqlClient.SqlConnection.GetSchema
  - System.Data.SqlClient.SqlConnection.GetSchema(System.String)
  - System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])
  - System.Data.SqlClient.SqlConnection.InfoMessage
  - System.Data.SqlClient.SqlConnection.Open
  - System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlConnection.PacketSize
  - System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  - System.Data.SqlClient.SqlConnection.ResetStatistics
  - System.Data.SqlClient.SqlConnection.RetrieveStatistics
  - System.Data.SqlClient.SqlConnection.ServerVersion
  - System.Data.SqlClient.SqlConnection.State
  - System.Data.SqlClient.SqlConnection.StatisticsEnabled
  - System.Data.SqlClient.SqlConnection.System#ICloneable#Clone
  - System.Data.SqlClient.SqlConnection.WorkstationId
  langs:
  - csharp
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
  type: Class
  summary: "Reprezentuje otwarte połączenie [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] bazy danych. Ta klasa nie może być dziedziczona."
  remarks: "A SqlConnection object represents a unique session to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] data source. With a client/server database system, it is equivalent to a network connection to the server. SqlConnection is used together with <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlCommand> to increase performance when connecting to a Microsoft [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database. For all third-party [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] products, and other OLE DB-supported data sources, use <xref:System.Data.OleDb.OleDbConnection>.  \n  \n When you create an instance of SqlConnection, all properties are set to their initial values. For a list of these values, see the SqlConnection constructor.  \n  \n See <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> for a list of the keywords in a connection string.  \n  \n If the SqlConnection goes out of scope, it won't be closed. Therefore, you must explicitly close the connection by calling `Close` or `Dispose`. `Close` and `Dispose` are functionally equivalent. If the connection pooling value `Pooling` is set to `true` or `yes`, the underlying connection is returned back to the connection pool. On the other hand, if `Pooling` is set to `false` or `no`, the underlying connection to the server is actually closed.  \n  \n> [!NOTE]\n>  Login and logout events will not be raised on the server when a connection is fetched from or returned to the connection pool, because the connection is not actually closed when it is returned to the connection pool. For more information, see [SQL Server Connection Pooling (ADO.NET)](~/add/includes/ajax-current-ext-md.md).  \n  \n To ensure that connections are always closed, open the connection inside of a `using` block, as shown in the following code fragment. Doing so ensures that the connection is automatically closed when the code exits the block.  \n  \n```vb#  \nUsing connection As New SqlConnection(connectionString)  \n    connection.Open()  \n    ' Do work here; connection closed on following line.  \nEnd Using  \n  \n```  \n  \n```c#  \nusing (SqlConnection connection = new SqlConnection(connectionString))  \n    {  \n        connection.Open();  \n        // Do work here; connection closed on following line.  \n    }  \n```  \n  \n> [!NOTE]\n>  To deploy high-performance applications, you must use connection pooling. When you use the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], you do not have to enable connection pooling because the provider manages this automatically, although you can modify some settings. For more information, see [SQL Server Connection Pooling (ADO.NET)](../Topic/SQL%20Server%20Connection%20Pooling%20\\(ADO.NET\\).md).  \n  \n If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the SqlConnection remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the SqlConnection. However, the user can reopen the connection and continue.  \n  \n An application that creates an instance of the SqlConnection object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands. SqlConnection makes security demands using the <xref:System.Data.SqlClient.SqlClientPermission> object. Users can verify that their code has sufficient permissions by using the <xref:System.Data.SqlClient.SqlClientPermissionAttribute> object. Users and administrators can also use the [Caspol.exe (Code Access Security Policy Tool)](~/add/includes/ajax-current-ext-md.md) to modify security policy at the machine, user, and enterprise levels. For more information, see [Security](~/add/includes/ajax-current-ext-md.md). For an example demonstrating how to use security demands, see [Code Access Security and ADO.NET](~/add/includes/ajax-current-ext-md.md).  \n  \n For more information about handling warning and informational messages from the server, see [Connection Events](~/add/includes/ajax-current-ext-md.md). [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] engine errors and error messages are documented in [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.  \n  \n> [!CAUTION]\n>  You can force TCP instead of shared memory. You can do that by prefixing tcp: to the server name in the connection string or you can use localhost."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and a SqlConnection. The SqlConnection is opened and set as the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> for the <xref:System.Data.SqlClient.SqlCommand>. The example then calls <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. To accomplish this, the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is a [!INCLUDE[tsql](~/add/includes/tsql-md.md)] INSERT statement. The connection is closed automatically when the code exits the using block.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._4_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: SqlConnection()
  nameWithType: SqlConnection.SqlConnection()
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> klasy."
  remarks: "Jeśli nowe wystąpienie klasy <xref:System.Data.SqlClient.SqlConnection>utworzeniu odczytu/zapisu właściwości są ustawione na następujące wartości początkowej, o ile nie są specjalnie ustawiane przy użyciu ich skojarzone słów kluczowych w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>Właściwości.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>| pusty ciąg (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.SqlClient.SqlConnection.Database%2A>| pusty ciąg (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>| pusty ciąg (&quot;&quot;) |       Wartości tych właściwości można zmienić tylko za pomocą <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>Właściwości.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection.DataSource%2A> </xref:System.Data.SqlClient.SqlConnection.Database%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> <xref:System.Data.SqlClient.SqlConnectionStringBuilder>Klasa udostępnia funkcje tworzenia i zarządzania nimi zawartość parametry połączenia.</xref:System.Data.SqlClient.SqlConnectionStringBuilder>"
  example:
  - "The following example creates and opens a <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._17_1.vb)]\n [!code-cs[Classic WebData SqlConnection.SqlConnection Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._17_1.cs)]"
  syntax:
    content: public SqlConnection ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: SqlConnection(String)
  nameWithType: SqlConnection.SqlConnection(String)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> klasy, gdy ciąg, który zawiera ciąg połączenia."
  remarks: "Jeśli nowe wystąpienie klasy <xref:System.Data.SqlClient.SqlConnection>utworzeniu odczytu/zapisu właściwości są ustawione na następujące wartości początkowej, o ile nie są specjalnie ustawiane przy użyciu ich skojarzone słów kluczowych w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>Właściwości.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection>      | Właściwości | Nieprawidłowa wartość |   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>| `connectionString`|   | <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.SqlClient.SqlConnection.Database%2A>| pusty ciąg (&quot;&quot;) |   | <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>| pusty ciąg (&quot;&quot;) |       Wartości tych właściwości można zmienić tylko za pomocą <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>Właściwości.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection.DataSource%2A> </xref:System.Data.SqlClient.SqlConnection.Database%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> <xref:System.Data.SqlClient.SqlConnection>Klasa udostępnia funkcje tworzenia i zarządzania nimi zawartość parametry połączenia.</xref:System.Data.SqlClient.SqlConnection>"
  example:
  - "The following example creates and opens a <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._38_1.vb)]\n [!code-cs[Classic WebData SqlConnection.SqlConnection1 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._38_1.cs)]"
  syntax:
    content: public SqlConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Użyty do otwarcia połączenia [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] bazy danych."
  overload: System.Data.SqlClient.SqlConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)
  id: '#ctor(System.String,System.Data.SqlClient.SqlCredential)'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: SqlConnection(String,SqlCredential)
  nameWithType: SqlConnection.SqlConnection(String,SqlCredential)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String,SqlCredential)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> klasy podany ciąg połączenia, które nie są używane <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref> i <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> obiekt, który zawiera identyfikator użytkownika i hasło."
  syntax:
    content: public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);
    parameters:
    - id: connectionString
      type: System.String
      description: 'Ciąg połączenia, który nie używa żadnego z następujących słów kluczowych ciąg połączenia: <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_UserId&quot; name=&quot;UserId&quot; href=&quot;&quot;> </xref>, lub <xref uid=&quot;langword_csharp_Password&quot; name=&quot;Password&quot; href=&quot;&quot;> </xref>; lub które nie używają <xref uid=&quot;langword_csharp_ContextConnection = true&quot; name=&quot;ContextConnection = true&quot; href=&quot;&quot;> </xref>.'
    - id: credential
      type: System.Data.SqlClient.SqlCredential
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref> object. Jeśli `credential` jest pusta, element SqlConnection jest funkcjonalnym odpowiednikiem &lt;xref:System.Data.SqlClient.SqlConnection.%23ctor%2A&gt;."
  overload: System.Data.SqlClient.SqlConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.AccessToken
  id: AccessToken
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: AccessToken
  nameWithType: SqlConnection.AccessToken
  fullName: System.Data.SqlClient.SqlConnection.AccessToken
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia token dostępu dla połączenia."
  syntax:
    content: public string AccessToken { get; set; }
    return:
      type: System.String
      description: "Token dostępu dla połączenia."
  overload: System.Data.SqlClient.SqlConnection.AccessToken*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Do dodania."
    return:
      type: System.Data.Common.DbTransaction
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: SqlConnection.BeginTransaction()
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uruchamia transakcji bazy danych."
  remarks: "To polecenie mapuje [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] implementacji BEGIN TRANSACTION.       Należy jawnie przekazać ani wycofać, przy użyciu transakcji <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>lub <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>metody.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Aby upewnić się, że [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transakcji model zarządzania wykonuje się poprawnie, należy unikać innych modeli zarządzania transakcji, takie jak udostępnione przez [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Jeśli nie określisz poziom izolacji, używany jest domyślny poziom izolacji. Określa poziom izolacji z <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>metody, użyj przeciążenia, które przyjmuje `iso` parametr (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>).</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> </xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> Poziom izolacji dla transakcji będzie się powtarzać, po zakończeniu transakcji i do momentu połączenia jest zamknięty lub usunięty. Ustawienie poziomu izolacji **migawki** w bazie danych, których nie włączono poziom izolacji migawki nie zgłasza wyjątek. Transakcja zostanie zakończony, przy użyciu poziomu izolacji domyślne.      > [!CAUTION] > Transakcji jest uruchomiona na serwerze zachodzi poziom 16 lub wyższej błąd, transakcja zostanie nie wycofana do <xref:System.Data.SqlClient.SqlDataReader.Read%2A>wywołania metody.</xref:System.Data.SqlClient.SqlDataReader.Read%2A> Żaden wyjątek jest zgłaszany **ExecuteReader**.      > [!CAUTION] > Gdy kwerenda zwraca dużą ilość danych i wywołania `BeginTransaction`, <xref:System.Data.SqlClient.SqlException>jest generowany, gdy [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] nie zezwalają równoległych transakcji, gdy przy użyciu MARS.</xref:System.Data.SqlClient.SqlException> Aby uniknąć tego problemu, zawsze skojarzyć transakcji z polecenia i/lub połączenie przed żadnych czytników są otwarte.       Aby uzyskać więcej informacji na temat [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transakcji, zobacz &quot;Jawnych transakcji&quot; i &quot;kodowania wydajne&quot; w [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] — książki Online."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the BeginTransaction, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._1_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._1_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Obiekt reprezentujący nowej transakcji."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Równoległych transakcji nie są dozwolone w przypadku korzystania z wielu aktywnych zestawów wyników (MARS)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transakcje równoległe są nieobsługiwane."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Rozpoczyna się poziom izolacji określony od transakcji bazy danych."
  remarks: "To polecenie mapuje [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] implementacji BEGIN TRANSACTION.       Należy jawnie przekazać ani wycofać, przy użyciu transakcji <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>lub <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>metody.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Aby upewnić się, że [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transakcji model zarządzania wykonuje się poprawnie, należy unikać innych modeli zarządzania transakcji, takie jak udostępnione przez [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Po zatwierdzeniu lub wycofana transakcji poziom izolacji transakcji będzie nadal wszystkie kolejne polecenia, które są w trybie autozatwierdzania ( [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] domyślną). To może spowodować nieoczekiwane wyniki, takie jak poziom izolacji REPEATABLE READ utrwalanie i blokowania innych użytkowników poza wierszem. Aby zresetować poziom izolacji domyślne (READ COMMITTED), należy wykonać [!INCLUDE[tsql](~/add/includes/tsql-md.md)] USTAWIONA transakcji izolacji poziom READ COMMITTED instrukcji lub wywołanie <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName>od razu następuje <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName>.</xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName> </xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName> Aby uzyskać więcej informacji na temat [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] poziomów izolacji, zobacz &quot;Izolacji poziomy w aparat bazy danych&quot; w [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] — książki Online.       Aby uzyskać więcej informacji na temat [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transakcji, zobacz &quot;Jawnych transakcji&quot; i &quot;kodowania wydajne&quot; w [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] — książki Online.      > [!CAUTION] > Gdy kwerenda zwraca dużą ilość danych i wywołania `BeginTransaction`, <xref:System.Data.SqlClient.SqlException>jest generowany, gdy [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] nie zezwalają równoległych transakcji, gdy przy użyciu MARS.</xref:System.Data.SqlClient.SqlException> Aby uniknąć tego problemu, zawsze skojarzyć transakcji z polecenia i/lub połączenie przed żadnych czytników są otwarte."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/add/codesnippet/visualbasic/b09ea924-5f89-4203-b010-_1.vb)]\n [!code-cs[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/add/codesnippet/csharp/b09ea924-5f89-4203-b010-_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);
    parameters:
    - id: iso
      type: System.Data.IsolationLevel
      description: "Poziom izolacji transakcji powinien uruchamiania."
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Obiekt reprezentujący nowej transakcji."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Równoległych transakcji nie są dozwolone w przypadku korzystania z wielu aktywnych zestawów wyników (MARS)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transakcje równoległe są nieobsługiwane."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  id: BeginTransaction(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction(String)
  nameWithType: SqlConnection.BeginTransaction(String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Uruchomienie transakcji bazy danych o nazwie określonej transakcji."
  remarks: "To polecenie mapuje [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] implementacji BEGIN TRANSACTION.       Długość `transactionName` parametru nie może przekraczać 32 znaków; w przeciwnym razie zwracany wyjątek.       Wartość w `transactionName` parametr może zostać użyty w późniejszym wywołaniach <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>i w `savePoint` parametr <xref:System.Data.SqlClient.SqlTransaction.Save%2A>metody.</xref:System.Data.SqlClient.SqlTransaction.Save%2A> </xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>       Należy jawnie przekazać ani wycofać, przy użyciu transakcji <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>lub <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>metody.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Aby upewnić się, że [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transakcji model zarządzania wykonuje się poprawnie, należy unikać innych modeli zarządzania transakcji, takie jak udostępnione przez [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].       Aby uzyskać więcej informacji na temat [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transakcji, zobacz &quot;Jawnych transakcji&quot; i &quot;kodowania wydajne&quot; w [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] — książki Online.      > [!CAUTION] > Gdy kwerenda zwraca dużą ilość danych i wywołania `BeginTransaction`, <xref:System.Data.SqlClient.SqlException>jest generowany, gdy [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] nie zezwalają równoległych transakcji, gdy przy użyciu MARS.</xref:System.Data.SqlClient.SqlException> Aby uniknąć tego problemu, zawsze skojarzyć transakcji z polecenia i/lub połączenie przed żadnych czytników są otwarte."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._36_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._36_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);
    parameters:
    - id: transactionName
      type: System.String
      description: "Nazwa transakcji."
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Obiekt reprezentujący nowej transakcji."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Równoległych transakcji nie są dozwolone w przypadku korzystania z wielu aktywnych zestawów wyników (MARS)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transakcje równoległe są nieobsługiwane."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  id: BeginTransaction(System.Data.IsolationLevel,System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel,String)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel,String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Rozpoczyna się od nazwy transakcji i poziom izolacji określony transakcji bazy danych."
  remarks: "To polecenie mapuje [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] implementacji BEGIN TRANSACTION.       Wartość w `transactionName` parametr może zostać użyty w późniejszym wywołaniach <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>i w `savePoint` parametr <xref:System.Data.SqlClient.SqlTransaction.Save%2A>metody.</xref:System.Data.SqlClient.SqlTransaction.Save%2A> </xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>       Należy jawnie przekazać ani wycofać, przy użyciu transakcji <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>lub <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>metody.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Aby upewnić się, że [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transakcji model zarządzania wykonuje się poprawnie, należy unikać innych modeli zarządzania transakcji, takie jak udostępnione przez [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Po zatwierdzeniu lub wycofana transakcji poziom izolacji transakcji będzie nadal wszystkie kolejne polecenia, które są w trybie autozatwierdzania ( [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] domyślną). To może spowodować nieoczekiwane wyniki, takie jak poziom izolacji REPEATABLE READ utrwalanie i blokowania innych użytkowników poza wierszem. Aby zresetować poziom izolacji domyślne (READ COMMITTED), należy wykonać [!INCLUDE[tsql](~/add/includes/tsql-md.md)] USTAWIONA transakcji izolacji poziom READ COMMITTED instrukcji lub wywołanie <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName>od razu następuje <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName>.</xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName> </xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName> Aby uzyskać więcej informacji na temat [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] poziomów izolacji, zobacz &quot;Izolacji poziomy w aparat bazy danych&quot; w [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] — książki Online.       Aby uzyskać więcej informacji na temat [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] transakcji, zobacz &quot;Jawnych transakcji&quot; i &quot;kodowania wydajne&quot; w [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] — książki Online.      > [!CAUTION] > Gdy kwerenda zwraca dużą ilość danych i wywołania `BeginTransaction`, <xref:System.Data.SqlClient.SqlException>jest generowany, gdy [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] nie zezwalają równoległych transakcji, gdy przy użyciu MARS.</xref:System.Data.SqlClient.SqlException> Aby uniknąć tego problemu, zawsze skojarzyć transakcji z polecenia i/lub połączenie przed żadnych czytników są otwarte."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/add/codesnippet/csharp/1f00ab5d-aff7-46ea-8f1d-_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/add/codesnippet/visualbasic/1f00ab5d-aff7-46ea-8f1d-_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);
    parameters:
    - id: iso
      type: System.Data.IsolationLevel
      description: "Poziom izolacji transakcji powinien uruchamiania."
    - id: transactionName
      type: System.String
      description: "Nazwa transakcji."
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Obiekt reprezentujący nowej transakcji."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Równoległych transakcji nie są dozwolone w przypadku korzystania z wielu aktywnych zestawów wyników (MARS)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Transakcje równoległe są nieobsługiwane."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: SqlConnection.ChangeDatabase(String)
  fullName: System.Data.SqlClient.SqlConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zmiany bieżącej bazy danych dla otwartego <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: "Wartość podana w `database` parametr musi być prawidłową nazwę bazy danych. `database` Parametr nie może zawierać wartości null, ciągiem pustym lub ciągiem o tylko pustych znaków."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._10_1.cs)]\n [!code-vb[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._10_1.vb)]"
  syntax:
    content: public override void ChangeDatabase (string database);
    parameters:
    - id: database
      type: System.String
      description: "Nazwa bazy danych do użycia zamiast bieżącej bazy danych."
  overload: System.Data.SqlClient.SqlConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nazwa bazy danych jest nieprawidłowa."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Połączenie nie jest otwarty."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Nie można zmienić bazy danych."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)
  id: ChangePassword(System.String,System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ChangePassword(String,String)
  nameWithType: SqlConnection.ChangePassword(String,String)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zmiany [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] hasło dla użytkownika wskazanego w parametrach połączenia, aby dostarczony nowe hasło."
  remarks: "W przypadku używania [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] w systemie Windows Server, deweloperzy mogą wykorzystać funkcje umożliwiające aplikacji klienckiej podawaj jednocześnie bieżącą, jak i nowe hasło w celu zmiany istniejącego hasła. Aplikacje można wdrożyć funkcje, takie jak monitowania użytkownika o nowe hasło podczas początkowego logowania, jeśli stare hasło wygasło i można wykonać tej operacji bez interwencji administratora.       Element ChangePassword zmiany metody [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] hasło dla użytkownika wskazanego w podane `connectionString` parametru na wartość podana w `newPassword` parametru. Jeśli parametry połączenia zawiera opcję Zintegrowane zabezpieczenia (oznacza to, &quot;Integrated Security = True&quot; lub jego odpowiednik), jest zgłaszany wyjątek.       Aby określić, że hasło wygasło, wywołanie <xref:System.Data.SqlClient.SqlConnection.Open%2A>metody zgłasza <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> </xref:System.Data.SqlClient.SqlConnection.Open%2A> Aby wskazać, że musi zresetować hasło, które są zawarte w parametrach połączenia, <xref:System.Data.SqlClient.SqlException.Number%2A>Właściwość wyjątek zawiera wartość stanu 18487 lub 18488.</xref:System.Data.SqlClient.SqlException.Number%2A> Pierwsza wartość (18487) wskazuje, że hasło wygasło i drugą (18488) wskazuje, że można zresetować hasła przed zalogowaniem się.       Otwiera połączenie z serwerem, żądań zmiany hasła i zamyka połączenie zaraz po zakończeniu tej metody. To połączenie nie jest pobierana z ani zwracane, [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] puli połączeń."
  example:
  - "The following is a simple example of changing a password:  \n  \n```  \nclass Program {  \n   static void Main(string[] args) {  \n      System.Data.SqlClient.SqlConnection.ChangePassword(  \n        \"Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password\",   \n       \"new_password\");  \n   }  \n}  \n  \n```  \n  \n```  \nModule Module1  \n    Sub Main()  \nSystem.Data.SqlClient.SqlConnection.ChangePassword(  \n        \"Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password\",   \n       \"new_password\")  \n    End Sub  \nEnd Module  \n  \n```  \n  \n The following console application demonstrates the issues involved in changing a user's password because the current password has expired.  \n  \n [!code-cs[DataWorks SqlConnection.ChangePassword#1](~/add/codesnippet/csharp/7b66f468-c7fc-4a76-bd4e-_1.cs)]\n [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/add/codesnippet/visualbasic/7b66f468-c7fc-4a76-bd4e-_1.vb)]"
  syntax:
    content: public static void ChangePassword (string connectionString, string newPassword);
    parameters:
    - id: connectionString
      type: System.String
      description: "Parametry połączenia, który zawiera wystarczających informacji do łączenia się z serwerem, który ma. Parametry połączenia muszą zawierać nazwę użytkownika i bieżącego hasła."
    - id: newPassword
      type: System.String
      description: "Aby ustawić nowe hasło. Hasło musi spełniać wszystkie zasady zabezpieczeń haseł na serwerze, w tym minimalnej długości i wymagania dotyczące określonych znaków i tak dalej."
  overload: System.Data.SqlClient.SqlConnection.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Parametry połączenia zawiera opcję Użyj zintegrowanych zabezpieczeń.       Lub <code> newPassword </code> więcej niż 128 znaków."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Albo <code> connectionString </code> lub <code> newPassword </code> parametr ma wartość null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  id: ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ChangePassword(String,SqlCredential,SecureString)
  nameWithType: SqlConnection.ChangePassword(String,SqlCredential,SecureString)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,SqlCredential,SecureString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zmiany [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] hasło dla użytkownika wskazanego w <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> obiektu."
  syntax:
    content: public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);
    parameters:
    - id: connectionString
      type: System.String
      description: 'Parametry połączenia, który zawiera wystarczających informacji do nawiązania połączenia z serwerem. Parametry połączenia nie należy używać następujące słowa kluczowe parametrów połączenia: <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_UserId&quot; name=&quot;UserId&quot; href=&quot;&quot;> </xref>, lub <xref uid=&quot;langword_csharp_Password&quot; name=&quot;Password&quot; href=&quot;&quot;> </xref>; lub <xref uid=&quot;langword_csharp_ContextConnection = true&quot; name=&quot;ContextConnection = true&quot; href=&quot;&quot;> </xref>.'
    - id: credential
      type: System.Data.SqlClient.SqlCredential
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref> object."
    - id: newSecurePassword
      type: System.Security.SecureString
      description: "Nowe hasło. `newSecurePassword`musi być tylko do odczytu. Hasło musi spełniać wszystkie zasady zabezpieczeń haseł na serwerze (na przykład minimalnej długości i wymagania dotyczące określonych znaków)."
  overload: System.Data.SqlClient.SqlConnection.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "1.Parametry połączenia zawierają dowolną kombinację <xref uid=&quot;langword_csharp_UserId&quot; name=&quot;UserId&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Password&quot; name=&quot;Password&quot; href=&quot;&quot;> </xref>, lub <xref uid=&quot;langword_csharp_Integrated Security=true&quot; name=&quot;Integrated Security=true&quot; href=&quot;&quot;> </xref>.      2.  Parametry połączenia zawierają <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;> </xref>.      3.  <code>newSecurePassword</code>jest większe niż 128 znaków.      4.  <code>newSecurePassword</code>to nie tylko do odczytu.      5.  <code>newSecurePassword</code>jest pustym ciągiem."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One of the parameters (<code>connectionString</code>, <code>credential</code>, or <code>newSecurePassword</code>) is null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools
  id: ClearAllPools
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ClearAllPools()
  nameWithType: SqlConnection.ClearAllPools()
  fullName: System.Data.SqlClient.SqlConnection.ClearAllPools()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opróżnia puli połączeń."
  remarks: "ClearAllPools resetuje lub opróżnia puli połączeń. W przypadku połączeń używana w momencie wywołania są odpowiednio oznaczone, a zostaną odrzucone (a nie zostały zwrócone do puli) po <xref:System.Data.SqlClient.SqlConnection.Close%2A>nazywa się na nich.</xref:System.Data.SqlClient.SqlConnection.Close%2A>"
  syntax:
    content: public static void ClearAllPools ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.ClearAllPools*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  id: ClearPool(System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ClearPool(SqlConnection)
  nameWithType: SqlConnection.ClearPool(SqlConnection)
  fullName: System.Data.SqlClient.SqlConnection.ClearPool(SqlConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Opróżnia puli połączeń skojarzone z określonego połączenia."
  remarks: "ClearPool czyści puli połączeń, z którym skojarzony jest `connection`. Jeśli dodatkowe połączenia skojarzony z `connection` jest używana w momencie wywołania, są odpowiednio oznaczone, a zostaną odrzucone (a nie zostały zwrócone do puli), gdy <xref:System.Data.SqlClient.SqlConnection.Close%2A>jest wywoływana na nich.</xref:System.Data.SqlClient.SqlConnection.Close%2A>"
  syntax:
    content: public static void ClearPool (System.Data.SqlClient.SqlConnection connection);
    parameters:
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "<xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> Do wyczyszczenia z puli."
  overload: System.Data.SqlClient.SqlConnection.ClearPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId
  id: ClientConnectionId
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ClientConnectionId
  nameWithType: SqlConnection.ClientConnectionId
  fullName: System.Data.SqlClient.SqlConnection.ClientConnectionId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Identyfikator połączenia ostatniej próby połączenia, niezależnie od tego, czy próba powodzeniem lub niepowodzeniem."
  remarks: "ClientConnectionId działa niezależnie od wersji serwera nawiązywania połączenia, ale dzienniki zdarzeń rozszerzonych i wpis na błędy bufor pierścień połączenia nie będą obecne w [!INCLUDE[sskatmai_r2](~/add/includes/ajax-current-ext-md.md)] i starszych wersji.       Identyfikator połączenia można znaleźć w dzienniku zdarzeń rozszerzonych, jeśli został błędu na serwerze, jeśli włączono zdarzeń rozszerzonych rejestrowanie identyfikator połączenia. Możesz również znaleźć Identyfikatora połączenia w buforze pierścień połączenia ([rozwiązywania problemów z łącznością programu SQL Server 2008 buforem pierścienia łączności](http://go.microsoft.com/fwlink/?LinkId=207752)) dla niektórych błędów dotyczących połączeń. Jeśli identyfikator połączenia, który nie jest w buforze pierścień połączenia, można założyć błędu sieci."
  syntax:
    content: public Guid ClientConnectionId { get; }
    return:
      type: System.Guid
      description: "Próba połączenia identyfikator ostatniego połączenia."
  overload: System.Data.SqlClient.SqlConnection.ClientConnectionId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Close
  id: Close
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Close()
  nameWithType: SqlConnection.Close()
  fullName: System.Data.SqlClient.SqlConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zamyka połączenie z bazą danych. Jest to preferowana metoda zamknięcia wszystkie otwarte połączenia."
  remarks: "Close — metoda wycofuje wszystkie transakcje oczekujące. Następnie go zwalnia połączenia z puli połączeń lub zamyka połączenie, jeśli buforowanie połączeń jest wyłączone.      > [!NOTE] > Uruchomiony przy użyciu transakcje oczekujące [!INCLUDE[tsql](~/add/includes/tsql-md.md)] lub <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>są automatycznie wycofana przy połączenia jest resetowany, jeśli buforowanie połączeń jest włączone.</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> Jeśli buforowanie połączeń jest wyłączona, transakcja zostanie wycofana po `SqlConnection.Close` jest wywoływana. Transakcje uruchomione za pomocą <xref:System.Transactions>są kontrolowane przez `System.Transactions` infrastruktury i do których nie dotyczy `SqlConnection.Close`.</xref:System.Transactions>       Aplikację można wywołać zamknięcia więcej niż jeden raz. Wyjątek nie zostanie wygenerowany.       Jeśli <xref:System.Data.SqlClient.SqlConnection>umieszczane poza zakres, nie będzie można go zamknąć.</xref:System.Data.SqlClient.SqlConnection> W związku z tym należy jawnie zamknąć połączenie przez wywołanie metody `Close` lub `Dispose`. `Close`i `Dispose` działają tak samo. Jeśli pula połączeń wartość `Pooling` ustawiono `true` lub `yes`, połączenie znajdujące się poniżej jest przywracane do puli połączeń. Z drugiej strony Jeśli `Pooling` ustawiono `false` lub `no`, połączenie z serwerem znajdujące się poniżej zostało zamknięte.      > [!NOTE] > Zdarzenia logowania i wylogowywania nie będą zgłaszane na serwerze gdy połączenie jest pobranych z lub zwrócony do puli połączeń, ponieważ połączenie nie jest w rzeczywistości zamknięte zwracanie do puli połączeń. Aby uzyskać więcej informacji, zobacz [programu SQL Server połączenia buforowanie (ADO.NET)](~/add/includes/ajax-current-ext-md.md).      > [!CAUTION] > Nie wywołuj `Close` lub `Dispose` na połączenie, DataReader lub innego obiektu zarządzanego w `Finalize` metody klasy. W finalizator należy tylko Zwolnij niezarządzane zasoby, które bezpośrednio należą do klasy. Jeśli klasa nie ma żadnych niezarządzanych zasobów, nie dołączaj `Finalize` metody w definicji klasy. Aby uzyskać więcej informacji, zobacz [wyrzucanie elementów bezużytecznych](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, opens it, displays some of its properties. The connection is automatically closed at the end of the `using` block.  \n  \n [!code-vb[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._20_1.vb)]\n [!code-cs[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._20_1.cs)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.Close*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Błąd połączenia na poziomie, który wystąpił podczas otwierania połączenia."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  id: ColumnEncryptionKeyCacheTtl
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ColumnEncryptionKeyCacheTtl
  nameWithType: SqlConnection.ColumnEncryptionKeyCacheTtl
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia time-to-live szyfrowania kolumny klucza wpisów w buforze kluczy szyfrowania kolumn dla [zawsze zaszyfrowane](https://msdn.microsoft.com/library/mt163865.aspx) funkcji. Wartość domyślna to 2 godziny. wartość&0; oznacza nie buforowania na wszystkich."
  syntax:
    content: public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }
    return:
      type: System.TimeSpan
      description: "Przedział czasu."
  overload: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  id: ColumnEncryptionQueryMetadataCacheEnabled
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ColumnEncryptionQueryMetadataCacheEnabled
  nameWithType: SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia wartość wskazującą, czy jest włączone buforowanie metadanych zapytań (true) czy nie (false) w zapytaniach parametrycznych uruchamiania [zawsze zaszyfrowane](https://msdn.microsoft.com/library/mt163865.aspx) włączone baz danych. Wartość domyślna to true."
  remarks: "W zapytaniach parametrycznych SqlClient sprawia, że obie strony do programu SQL Server dla parametru metadanych, aby zobaczyć, których parametr należy szyfrować i w jaki sposób (które kluczy i algorytmów powinny być używane). Jeśli aplikacja wymaga tego samego zapytania wiele razy, dodatkowe obie strony jest kierowane do serwera poszczególnych czas, który powoduje spadek wydajności aplikacji.       Z **ColumnEncryptionQueryMetadataCacheEnabled** ustawioną wartość PRAWDA, jeśli to samo zapytanie jest wywołana wiele razy, komunikacja dwukierunkowa na serwerze zostaną wprowadzone tylko raz. Pamięć podręczna zawiera niemożliwą do skonfigurowania parametr rozmiar maksymalny, który ma ustawioną wartość kwerendy 2000."
  syntax:
    content: public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }
    return:
      type: System.Boolean
      description: "Zwraca wartość PRAWDA, jeśli jest włączone buforowanie metadanych zapytań; w przeciwnym razie wartość false. wartość true, jest ustawieniem domyślnym."
  overload: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  id: ColumnEncryptionTrustedMasterKeyPaths
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ColumnEncryptionTrustedMasterKeyPaths
  nameWithType: SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Umożliwia ustalenie listy Zaufane ścieżki klucza dla serwera bazy danych. Jeśli podczas przetwarzania zapytania aplikacji sterownika odbiera ścieżki klucza, który nie znajduje się na liście, zapytanie nie powiedzie się. Ta właściwość zapewnia dodatkową ochronę przed takimi atakami, obejmujących serwer SQL złamany zapewniający fałszywych klucza ścieżki, które mogą prowadzić do wyciek poświadczeń magazynu kluczy."
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,System.Collections.Generic.IList<string>> ColumnEncryptionTrustedMasterKeyPaths { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}}
      description: "Lista ścieżek zaufany klucz główny szyfrowania kolumny."
  overload: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: SqlConnection.ConnectionString
  fullName: System.Data.SqlClient.SqlConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia ciąg używany do otwierania [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] bazy danych."
  remarks: "Elemencie ConnectionString jest podobny do ciągu połączenia OLE DB, ale nie są identyczne. W odróżnieniu od OLE DB i ADO, ciąg połączenia, który jest zwracany jest taka sama jak ConnectionString ustawiono użytkownika, bez informacji o zabezpieczeniach Jeśli ustawiono wartość Persist Security Info `false` (ustawienie domyślne). [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] Dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] trwałe i nie zwrócić hasła w parametrach połączenia, chyba że ustawioną Persist Security Info `true`.       Właściwości ConnectionString służy do połączenia z bazą danych. Poniższy przykład przedstawia typowe parametry.      ```   &quot;Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)&quot;   ```Użyj nowych <xref:System.Data.SqlClient.SqlConnectionStringBuilder>utworzyć prawidłowe połączenie ciągów w czasie wykonywania.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Aby uzyskać więcej informacji, zobacz [Konstruktorzy ciągów połączenia](~/add/includes/ajax-current-ext-md.md).       Właściwości ConnectionString można ustawić tylko wtedy, gdy połączenie jest zamknięte. Wiele wartości parametrów połączeń ma odpowiednie właściwości tylko do odczytu. Po ciągu połączenia jest ustawiona, te właściwości zostaną zaktualizowane, z wyjątkiem przypadków, gdy zostanie wykryty błąd. W takim przypadku żadnej właściwości zostały zaktualizowane. <xref:System.Data.SqlClient.SqlConnection>właściwości zwraca tylko te ustawienia, które są zawarte w elemencie ConnectionString.</xref:System.Data.SqlClient.SqlConnection>       Aby połączyć się z komputerem lokalnym, określ &quot;(local)&quot; dla serwera. Jeśli nie określono nazwy serwera, połączenie nastąpi próba domyślnego wystąpienia na komputerze lokalnym.       Resetowanie ConnectionString na połączenie zamknięte resetuje wszystkie wartości parametrów połączeń (i powiązanych właściwości) zawiera hasło. Na przykład jeśli ustawisz ciąg połączenia, który zawiera &quot;bazy danych = AdventureWorks&quot;, a następnie zresetować parametry połączenia do &quot;źródła danych = MójSerwer; Integrated Security = true&quot;, <xref:System.Data.SqlClient.SqlConnection.Database%2A>właściwość nie jest ustawiona na &quot;AdventureWorks&quot;.</xref:System.Data.SqlClient.SqlConnection.Database%2A>       Natychmiast po ustawiany jest przeanalizować parametrów połączenia. W przypadku znalezienia błędów w składni podczas analizowania, wyjątek czasu wykonywania, takie jak <xref:System.ArgumentException>, jest generowany.</xref:System.ArgumentException> Inne błędy, znajduje się tylko w przypadku próby otwarcia połączenia.       Podstawowe formaty parametry połączenia zawiera serię par — słowo kluczowe i wartości, oddziel je średnikami. Znak równości (=) łączy każde słowo kluczowe i jego wartość. Aby uwzględnić wartości, które zawiera średnik, znak pojedynczego cudzysłowu ani znaków podwójnego cudzysłowu, wartość musi być ujęta w znaki podwójnego cudzysłowu. Jeśli wartość zawiera średnik i znaku podwójnego cudzysłowu, wartość mogą być ujęte w apostrofy. Znak pojedynczego cudzysłowu jest również przydatne, jeśli wartość rozpoczyna się od znaku podwójnego cudzysłowu. Z drugiej strony podwójny cudzysłów służy Jeśli wartość rozpoczyna się od pojedynczego cudzysłowu. Jeśli wartość zawiera znak pojedynczego cudzysłowu jak podwójnego cudzysłowu, znak cudzysłowu, ujmij wartość musi być podwójny za każdym razem, gdy ma miejsce w wartości.       Aby spacji ani na końcu w wartości ciągu, wartość musi być ujęta w znaki apostrofu lub podwójny cudzysłów. Spacji wiodących lub końcowych wokół liczba całkowita, wartość logiczna lub wartości wyliczenia są ignorowane, nawet jeśli ujęty w cudzysłów. Jednak spacje wewnątrz — słowo kluczowe literału ciągu lub wartość są zachowywane. Pojedynczy lub podwójny cudzysłów może być używana w ciągu połączenia bez użycia ogranicznik (na przykład źródło danych = my&quot;Server lub źródło danych = my &quot;Server), chyba że znak cudzysłowu jest pierwszy i ostatni znak w wartości.       Słowa kluczowe nie jest uwzględniana wielkość liter.       W poniższej tabeli wymieniono prawidłowe nazwy dla wartości słów kluczowych w elemencie ConnectionString.        Poniższa lista zawiera prawidłowe nazwy połączenia buforowanie wartości w elemencie ConnectionString. Aby uzyskać więcej informacji, zobacz [programu SQL Server połączenia buforowanie (ADO.NET)](~/add/includes/ajax-current-ext-md.md).      -Okres istnienia połączenia (lub limit czasu równoważenia obciążenia) - zarejestrować — maksymalny rozmiar puli - minimalny rozmiar puli — buforowanie przy ustawienie — słowo kluczowe lub wartości, które wymagają wartość logiczną buforowania połączeń, korzystając z &quot;Tak&quot; zamiast &quot;true&quot; i &quot;nie&quot; zamiast &quot;false&quot;. Liczby całkowite są reprezentowane jako ciągi.      > [!NOTE] > [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] Dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] używany do komunikacji z własnego protokołu [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]. W związku z tym nie obsługuje korzystanie z nazwą źródła danych (DSN) ODBC podczas łączenia się [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] , ponieważ nie powoduje dodania warstwy ODBC.      > [!NOTE] > Universal data link (UDL) plików nie są obsługiwane dla [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!CAUTION] > W tej wersji aplikacji należy zachować ostrożność podczas konstruowania parametry połączenia oparte na dane wejściowe użytkownika (na przykład podczas pobierania informacji o ID i hasło użytkownika z okno dialogowe i dołączenie go w parametrach połączenia). Aplikacji należy upewnić się, użytkownik nie można osadzić dodatkowych ciąg parametrów połączenia w tych wartości (na przykład wprowadzania hasła jako &quot;validpassword; baza danych = somedb&quot; w celu dołączenia do innej bazy danych). Aby utworzyć parametry połączenia oparte na danych wejściowych użytkownika, należy użyć nowego <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, która weryfikuje ciąg połączenia i pomoże wyeliminować ten problem.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Zobacz [Konstruktorzy ciągów połączenia](../Topic/Connection%20String%20Builders.md) Aby uzyskać więcej informacji."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and sets the ConnectionString property before opening the connection.  \n  \n [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._24_1.vb)]\n [!code-cs[Classic WebData SqlConnection.ConnectionString Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._24_1.cs)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "Parametry połączenia, Nazwa źródłowej bazy danych i inne parametry wymagane do ustanowienia połączenia początkowego. Wartość domyślna to ciąg pusty."
  overload: System.Data.SqlClient.SqlConnection.ConnectionString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Podano nieprawidłowe połączenie argument ciągu lub nie został podany argument ciągu połączenia wymagane."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: SqlConnection.ConnectionTimeout
  fullName: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera czas oczekiwania podczas próby nawiązania połączenia przed zakończeniem próby i wygenerowaniem błędu."
  remarks: "Należy określić ilość czasu oczekiwania połączenia limitu czasu przy użyciu `Connect``Timeout` lub `Connection Timeout` słów kluczowych w parametrach połączenia. Wartość 0 oznacza brak limitu i należy unikać w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>ponieważ próby nawiązania połączenia przez nieokreślony czas oczekiwania.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and sets the `Connection Timeout` to 30 seconds in the connection string. The code opens the connection and displays the ConnectionTimeout property in the console window.  \n  \n [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._28_1.vb)]\n [!code-cs[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._28_1.cs)]"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "Czas (w sekundach) oczekiwania na połączenie, aby otworzyć. Wartość domyślna to 15 sekund."
  overload: System.Data.SqlClient.SqlConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Podana wartość jest mniejsza niż 0."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: SqlConnection.CreateCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Tworzy i zwraca <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> obiekt skojarzony z <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: ''
  example:
  - >-
    [!code-vb[SqlConnection_CreateCommand#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._32_1.vb)]
     [!code-cs[SqlConnection_CreateCommand#1](~/add/codesnippet/csharp/m-system.data.sqlclient._32_1.cs)]
  syntax:
    content: public System.Data.SqlClient.SqlCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> object."
  overload: System.Data.SqlClient.SqlConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: SqlConnection.CreateDbCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Credential
  id: Credential
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Credential
  nameWithType: SqlConnection.Credential
  fullName: System.Data.SqlClient.SqlConnection.Credential
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> obiekt dla tego połączenia."
  remarks: "`Persist Security Info = true`jest wymagane do pobrania wartości <xref:System.Data.SqlClient.SqlCredential>obiektu z poświadczeniami.</xref:System.Data.SqlClient.SqlCredential>       Wartość domyślna poświadczeń ma wartość null.       <xref:System.InvalidOperationException>Zostanie zgłoszony wyjątek: — w przypadku wybrania poświadczeń dla otwartego połączenia.</xref:System.InvalidOperationException>      — Jeśli poświadczenia jest ustawiana podczas `Context Connection=true`.      — Jeśli poświadczenia jest ustawiana podczas `Integrated Security = true`.      — Jeśli poświadczenia jest ustawiona, gdy używa ciągu połączenia `Password`.      — Jeśli poświadczenia jest ustawiona, gdy używa ciągu połączenia `UserID`."
  syntax:
    content: public System.Data.SqlClient.SqlCredential Credential { get; set; }
    return:
      type: System.Data.SqlClient.SqlCredential
      description: "<xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> Obiekt dla tego połączenia."
  overload: System.Data.SqlClient.SqlConnection.Credential*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Database
  id: Database
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Database
  nameWithType: SqlConnection.Database
  fullName: System.Data.SqlClient.SqlConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera nazwę bieżącej bazy danych lub baza danych ma być używany po otwarciu połączenia."
  remarks: "Właściwości bazy danych aktualizacje dynamiczne. W przypadku zmiany w bieżącej bazie danych przy użyciu [!INCLUDE[tsql](~/add/includes/tsql-md.md)] instrukcji lub <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>, wysyłany jest komunikat informacyjny i właściwość jest aktualizowane automatycznie.</xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._26_1.cs)]\n [!code-vb[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._26_1.vb)]"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "Nazwa bieżącej bazy danych lub nazwa bazy danych do użycia po otwarciu połączenia. Wartość domyślna to ciąg pusty."
  overload: System.Data.SqlClient.SqlConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.DataSource
  id: DataSource
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: SqlConnection.DataSource
  fullName: System.Data.SqlClient.SqlConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera nazwę wystąpienia [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] do połączenia."
  remarks: >-
    > [!NOTE]

    >  The DataSource property returns `null` if the connection string for the <xref:System.Data.SqlClient.SqlConnection> is "context connection=true".
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._62_1.vb)]\n [!code-cs[Classic WebData SqlConnection.DataSource Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._62_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "Nazwa wystąpienia [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] do połączenia. Wartość domyślna to ciąg pusty."
  overload: System.Data.SqlClient.SqlConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.DbProviderFactory
  id: DbProviderFactory
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: DbProviderFactory
  nameWithType: SqlConnection.DbProviderFactory
  fullName: System.Data.SqlClient.SqlConnection.DbProviderFactory
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }
    return:
      type: System.Data.Common.DbProviderFactory
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlConnection.DbProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlConnection.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Do dodania."
  overload: System.Data.SqlClient.SqlConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: SqlConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Rejestruje w określonym transakcji jako transakcji rozproszonej."
  remarks: "Można użyć <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A>metody można zarejestrować transakcji rozproszonej.</xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction>wystąpienia, **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions>przestrzeni nazw do zarządzania rozproszonego transakcji, dzięki czemu preferowane **EnlistDistributedTransaction** w tym celu.</xref:System.Transactions> </xref:System.Transactions.Transaction> Aby uzyskać więcej informacji, zobacz [transakcji rozproszonych](~/add/includes/ajax-current-ext-md.md).       Możesz zarejestrować się w istniejących przy użyciu transakcji rozproszonej **EnlistDistributedTransaction** metody po wyłączeniu automatycznej rejestracji. Rejestrowanie w istniejącej transakcji rozproszonej upewnia się, że, jeśli transakcja jest zatwierdzona lub wycofana, zmiany dokonane przez kod w źródle danych są również zatwierdzenia lub wycofania.       `EnlistDistributedTransaction`Zwraca wyjątek, jeśli <xref:System.Data.SqlClient.SqlConnection>została już rozpoczęta transakcji za pomocą <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> </xref:System.Data.SqlClient.SqlConnection> Jednak jeśli transakcja jest transakcji lokalnej rozpoczęty o godzinie źródło danych (na przykład, wykonując jawnie za pomocą instrukcji BEGIN TRANSACTION <xref:System.Data.SqlClient.SqlCommand>obiektu), **EnlistDistributedTransaction** wycofuje transakcji lokalnej i powoduje zarejestrowanie w istniejącej transakcji rozproszonej, zgodnie z żądaniem.</xref:System.Data.SqlClient.SqlCommand> Nie otrzymasz powiadomienie, że lokalne transakcja została wycofana i są odpowiedzialny za zarządzanie wszystkich transakcji lokalnej nie została uruchomiona przy użyciu <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);
    parameters:
    - id: transaction
      type: System.EnterpriseServices.ITransaction
      description: "Odwołanie do istniejącej <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> w którym można zarejestrować."
  overload: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: SqlConnection.EnlistTransaction(Transaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Rejestruje w określonym transakcji jako transakcji rozproszonej."
  remarks: 'Metoda EnlistTransaction można zarejestrować transakcji rozproszonej. Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction>wystąpienia, **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions>przestrzeni nazw do zarządzania rozproszonego transakcji, dzięki czemu preferowane **EnlistDistributedTransaction**, który korzysta z **System.EnterpriseServices.ITransaction** obiektu.</xref:System.Transactions> </xref:System.Transactions.Transaction> Ma również semantyki nieco inne: po połączenie jawnie jest zarejestrowana w transakcji, nie może być unenlisted lub zarejestrowany w innej transakcji, dopóki nie zakończy Pierwsza transakcja. Aby uzyskać więcej informacji na temat transakcji rozproszonych, zobacz [transakcje rozproszone](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Odwołanie do istniejącej <xref href=&quot;System.Transactions.Transaction&quot;> </xref> w którym można zarejestrować."
  overload: System.Data.SqlClient.SqlConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  id: FireInfoMessageEventOnUserErrors
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: FireInfoMessageEventOnUserErrors
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
  fullName: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera lub ustawia właściwość FireInfoMessageEventOnUserErrors."
  remarks: "Po ustawieniu FireInfoMessageEventOnUserErrors `true`, błędów, które wcześniej były traktowane jako wyjątki są teraz obsługiwane jako <xref:System.Data.SqlClient.SqlConnection.InfoMessage>zdarzeń.</xref:System.Data.SqlClient.SqlConnection.InfoMessage> Wszystkie zdarzenia wyzwalać natychmiast i będą obsługiwane przez program obsługi zdarzeń. Jeśli jest FireInfoMessageEventOnUserErrors ustawiono `false`, następnie <xref:System.Data.SqlClient.SqlConnection.InfoMessage>na końcu procedury obsługi zdarzeń.</xref:System.Data.SqlClient.SqlConnection.InfoMessage>      > [!NOTE] > Błąd z poziomu ważności lub 17, który powoduje, że serwer zatrzymania przetwarzania polecenia musi być obsługiwana jako wyjątek. W takim przypadku jest zwracany wyjątek, niezależnie od sposobu obsługi błędu w <xref:System.Data.SqlClient.SqlConnection.InfoMessage>zdarzeń.</xref:System.Data.SqlClient.SqlConnection.InfoMessage>       Aby uzyskać więcej informacji dotyczących pracy ze zdarzeniami, zobacz [zdarzeń połączenia](~/add/includes/ajax-current-ext-md.md). Aby uzyskać więcej informacji o błędach wygenerowanych przez [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] aparat, zobacz [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] — książki Online."
  syntax:
    content: public bool FireInfoMessageEventOnUserErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli ustawiono właściwość FireInfoMessageEventOnUserErrors; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.GetSchema
  id: GetSchema
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: SqlConnection.GetSchema()
  fullName: System.Data.SqlClient.SqlConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zwraca informacje o schemacie dla źródła danych to <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>. Aby uzyskać więcej informacji na temat schematu, zobacz [kolekcje schematów programu SQL Server](http://msdn.microsoft.com/library/ms254969.aspx)."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> zawierający informacje o schemacie."
  overload: System.Data.SqlClient.SqlConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: SqlConnection.GetSchema(String)
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zwraca informacje o schemacie dla źródła danych to <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> przy użyciu określonego ciągu dla nazwy schematu."
  remarks: "Informacje o schemacie bazy danych, tabel lub kolumn może być konieczne. W tym przykładzie:-używa GetSchema, aby uzyskać informacje o schemacie.      -Użyj schematu ograniczenia, aby uzyskać informacje podane.      -Pobiera informacje o schemacie bazy danych, tabele i kolumny.       Przed uruchomieniem próbki, należy utworzyć przykładowej bazy danych, użycie następujących [!INCLUDE[tsql](~/add/includes/tsql-md.md)]: ```   USE [master]   GO      CREATE DATABASE [MySchool]       GO      USE [MySchool]   GO      SET ANSI_NULLS ON   GO   SET QUOTED_IDENTIFIER ON   GO   CREATE TABLE [dbo].[Course](~/add/includes/ajax-current-ext-md.md [nvarchar](10) NOT NULL,   [Year] [smallint] NOT NULL,   [Title] [nvarchar](100) NOT NULL,   [Credits] [int] NOT NULL,   [DepartmentID] [int] NOT NULL,    CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED    (   [CourseID] ASC,   [Year] ASC   )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]      GO      SET ANSI_NULLS ON   GO   SET QUOTED_IDENTIFIER ON   GO   CREATE TABLE [dbo].[Department](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,   [Name] [nvarchar](50) NOT NULL,   [Budget] [money] NOT NULL,   [StartDate] [datetime] NOT NULL,   [Administrator] [int] NULL,    CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED    (   [DepartmentID] ASC   )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]      GO      INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C1045&quot;, 2012, N&quot;Calculus&quot;, 4, 7)   INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C1061&quot;, 2012, N&quot;Physics&quot;, 4, 1)   INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C2021&quot;, 2012, N&quot;Composition&quot;, 3, 2)   INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C2042&quot;, 2012, N&quot;Literature&quot;, 4, 2)      SET IDENTITY_INSERT [dbo].[Department] ON       INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N&quot;Engineering&quot;, 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)   INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N&quot;English&quot;, 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)   INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N&quot;Economics&quot;, 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)   INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N&quot;Mathematics&quot;, 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)   SET IDENTITY_INSERT [dbo].[Department] OFF      ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])   REFERENCES [dbo].[Department] ([DepartmentID])   GO   ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]   GO   ``` [jak uzyskać informacji schematu z bazy danych](http://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2) ma C# i Visual Basic wersje tego przykładu kodu w projektach Visual Studio.             ```   using System;   using System.Data;   using System.Data.SqlClient;      class Program {      static void Main(string[] args) {            using (SqlConnection conn = new SqlConnection(&quot;Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;&quot;)) {            conn.Open();               // Get the Meta Data for Supported Schema Collections            DataTable metaDataTable = conn.GetSchema(&quot;MetaDataCollections&quot;);               Console.WriteLine(&quot;Meta Data for Supported Schema Collections:&quot;);            ShowDataTable(metaDataTable, 25);            Console.WriteLine();               // Get the schema information of Databases in your instance            DataTable databasesSchemaTable = conn.GetSchema(&quot;Databases&quot;);               Console.WriteLine(&quot;Schema Information of Databases:&quot;);            ShowDataTable(databasesSchemaTable, 25);            Console.WriteLine();               // First, get schema information of all the tables in current database;            DataTable allTablesSchemaTable = conn.GetSchema(&quot;Tables&quot;);               Console.WriteLine(&quot;Schema Information of All Tables:&quot;);            ShowDataTable(allTablesSchemaTable, 20);            Console.WriteLine();               // You can specify the Catalog, Schema, Table Name, Table Type to get             // the specified table(s).            // You can use four restrictions for Table, so you should create a 4 members array.            String[] tableRestrictions = new String[4];               // For the array, 0-member represents Catalog; 1-member represents Schema;             // 2-member represents Table Name; 3-member represents Table Type.             // Now we specify the Table Name of the table what we want to get schema information.            tableRestrictions[2] = &quot;Course&quot;;               DataTable courseTableSchemaTable = conn.GetSchema(&quot;Tables&quot;, tableRestrictions);               Console.WriteLine(&quot;Schema Information of Course Tables:&quot;);            ShowDataTable(courseTableSchemaTable, 20);            Console.WriteLine();               // First, get schema information of all the columns in current database.            DataTable allColumnsSchemaTable = conn.GetSchema(&quot;Columns&quot;);               Console.WriteLine(&quot;Schema Information of All Columns:&quot;);            ShowColumns(allColumnsSchemaTable);            Console.WriteLine();               // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).            // You can use four restrictions for Column, so you should create a 4 members array.            String[] columnRestrictions = new String[4];               // For the array, 0-member represents Catalog; 1-member represents Schema;             // 2-member represents Table Name; 3-member represents Column Name.             // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.            columnRestrictions[2] = &quot;Course&quot;;            columnRestrictions[3] = &quot;DepartmentID&quot;;               DataTable departmentIDSchemaTable = conn.GetSchema(&quot;Columns&quot;, columnRestrictions);               Console.WriteLine(&quot;Schema Information of DepartmentID Column in Course Table:&quot;);            ShowColumns(departmentIDSchemaTable);            Console.WriteLine();               // First, get schema information of all the IndexColumns in current database            DataTable allIndexColumnsSchemaTable = conn.GetSchema(&quot;IndexColumns&quot;);               Console.WriteLine(&quot;Schema Information of All IndexColumns:&quot;);            ShowIndexColumns(allIndexColumnsSchemaTable);            Console.WriteLine();               // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to             // get the specified column(s).            // You can use five restrictions for Column, so you should create a 5 members array.            String[] indexColumnsRestrictions = new String[5];               // For the array, 0-member represents Catalog; 1-member represents Schema;             // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.             // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.            indexColumnsRestrictions[2] = &quot;Course&quot;;            indexColumnsRestrictions[4] = &quot;CourseID&quot;;               DataTable courseIdIndexSchemaTable = conn.GetSchema(&quot;IndexColumns&quot;, indexColumnsRestrictions);               Console.WriteLine(&quot;Index Schema Information of CourseID Column in Course Table:&quot;);            ShowIndexColumns(courseIdIndexSchemaTable);            Console.WriteLine();         }            Console.WriteLine(&quot;Please press any key to exit...&quot;);         Console.ReadKey();      }         private static void ShowDataTable(DataTable table, Int32 length) {         foreach (DataColumn col in table.Columns) {            Console.Write(&quot;{0,-&quot; + length + &quot;}&quot;, col.ColumnName);         }         Console.WriteLine();            foreach (DataRow row in table.Rows) {            foreach (DataColumn col in table.Columns) {               if (col.DataType.Equals(typeof(DateTime)))                  Console.Write(&quot;{0,-&quot; + length + &quot;:d}&quot;, row[col]);               else if (col.DataType.Equals(typeof(Decimal)))                  Console.Write(&quot;{0,-&quot; + length + &quot;:C}&quot;, row[col]);               else                  Console.Write(&quot;{0,-&quot; + length + &quot;}&quot;, row[col]);            }            Console.WriteLine();         }      }         private static void ShowDataTable(DataTable table) {         ShowDataTable(table, 14);      }         private static void ShowColumns(DataTable columnsTable) {         var selectedRows = from info in columnsTable.AsEnumerable()                            select new {                               TableCatalog = info[&quot;TABLE_CATALOG&quot;],                               TableSchema = info[&quot;TABLE_SCHEMA&quot;],                               TableName = info[&quot;TABLE_NAME&quot;],                               ColumnName = info[&quot;COLUMN_NAME&quot;],                               DataType = info[&quot;DATA_TYPE&quot;]                            };            Console.WriteLine(&quot;{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}&quot;, &quot;TableCatalog&quot;, &quot;TABLE_SCHEMA&quot;,             &quot;TABLE_NAME&quot;, &quot;COLUMN_NAME&quot;, &quot;DATA_TYPE&quot;);         foreach (var row in selectedRows) {            Console.WriteLine(&quot;{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}&quot;, row.TableCatalog,                row.TableSchema, row.TableName, row.ColumnName, row.DataType);         }      }         private static void ShowIndexColumns(DataTable indexColumnsTable) {         var selectedRows = from info in indexColumnsTable.AsEnumerable()                            select new {                               TableSchema = info[&quot;table_schema&quot;],                               TableName = info[&quot;table_name&quot;],                               ColumnName = info[&quot;column_name&quot;],                               ConstraintSchema = info[&quot;constraint_schema&quot;],                               ConstraintName = info[&quot;constraint_name&quot;],                               KeyType = info[&quot;KeyType&quot;]                            };            Console.WriteLine(&quot;{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}&quot;, &quot;table_schema&quot;, &quot;table_name&quot;, &quot;column_name&quot;, &quot;constraint_schema&quot;, &quot;constraint_name&quot;, &quot;KeyType&quot;);         foreach (var row in selectedRows) {            Console.WriteLine(&quot;{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}&quot;, row.TableSchema,                row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);         }      }   }   ```"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Określa nazwę schematu do zwrócenia."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> zawierający informacje o schemacie."
  overload: System.Data.SqlClient.SqlConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>jest określony jako wartość null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: SqlConnection.GetSchema(String,String[])
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zwraca informacje o schemacie dla źródła danych to <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> przy użyciu określonego ciągu dla nazwy schematu i tablicy określony ciąg wartości ograniczeń."
  remarks: "`restrictionValues` Można podać parametru *n* głębokość wartości, które są określone przez kolekcji ograniczeń dla określonej kolekcji. Aby ustawić wartości dla danego ograniczeń i nie ustawić wartości właściwości inne ograniczenia, należy ustawić poprzednich ograniczeń `null` , a następnie przekaż odpowiednią wartość w ograniczenia, które chcesz określić wartość.       Na przykład jest kolekcją &quot;Tabele&quot;. Kolekcja &quot;Tabele&quot; ma trzy ograniczenia — bazy danych, właściciela, nazwy tabeli--i chcesz odzyskać tylko w tabelach, które są skojarzone z właścicielem &quot;Carl&quot;, musisz przekazać w następujących wartości: null, &quot;Carl&quot;. Jeśli wartość ograniczenia nie jest przekazany, wartości domyślne są używane dla tego ograniczenia. To tego samego mapowania jako przekazywanie `null`, który jest inny niż przekazywanie w ciągu pustego wartość parametru. W takim przypadku ciąg pusty (&quot;&quot;) jest traktowany jako wartość parametru określony.       Prezentacja GetSchema przykładowy kod zobacz <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>.</xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Określa nazwę schematu do zwrócenia."
    - id: restrictionValues
      type: System.String[]
      description: "Zestaw wartości ograniczeń dla żądanego schematu."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> zawierający informacje o schemacie."
  overload: System.Data.SqlClient.SqlConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>jest określony jako wartość null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: SqlConnection.InfoMessage
  fullName: System.Data.SqlClient.SqlConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Występuje, gdy [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] zwraca komunikat ostrzeżenia lub informacji."
  remarks: "Klienci, w których chcesz przetworzyć ostrzeżenia i komunikaty informacyjne wysyłane przez serwer powinien utworzyć <xref:System.Data.SqlClient.SqlInfoMessageEventHandler>delegata nasłuchiwanie z tym zdarzeniem.</xref:System.Data.SqlClient.SqlInfoMessageEventHandler>       Zdarzenie InfoMessage występuje, gdy wiadomość z o wadze 10 lub mniej zwróconego przez [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]. Komunikaty o wadze od 11 do 20 Zgłoś błąd i komunikaty o ważności za pośrednictwem 20 przyczyny połączenia, aby zamknąć. Aby uzyskać więcej informacji na temat [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] poziomów błędów, zobacz &quot;Wag błąd aparatu bazy danych&quot; w [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] — książki Online.       Aby uzyskać więcej informacji i przykład zobacz [zdarzeń połączenia](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.SqlClient.SqlInfoMessageEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Open
  id: Open
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Open()
  nameWithType: SqlConnection.Open()
  fullName: System.Data.SqlClient.SqlConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Otwiera połączenie z bazą danych przy użyciu ustawień właściwości określone przez <xref:System.Data.SqlClient.SqlConnection.ConnectionString*>.</xref:System.Data.SqlClient.SqlConnection.ConnectionString*>"
  remarks: "<xref:System.Data.SqlClient.SqlConnection>Rysuje otwartego połączenia z puli połączeń, jeśli jest dostępny.</xref:System.Data.SqlClient.SqlConnection> W przeciwnym razie nawiązaniem nowego połączenia z wystąpieniem [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Jeśli <xref:System.Data.SqlClient.SqlConnection>umieszczane poza zakres, nie jest ono zamknięte.</xref:System.Data.SqlClient.SqlConnection> W związku z tym należy jawnie zamknąć połączenie przez wywołanie metody <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</xref:System.Data.SqlClient.SqlConnection.Close%2A>      > [!NOTE] > Jeśli określisz numeru portu innego niż 1433, gdy użytkownik próbuje połączyć się z wystąpieniem programu [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] i za pomocą protokołu innego niż TCP/IP niepowodzenia metody Open. Aby określić numer portu innego niż 1433, obejmują &quot;serwer = machinename, numer portu&quot; w ciągu połączenia, a protokół TCP/IP używany.      > [!NOTE] > [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] Dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] wymaga uprawnień zabezpieczeń &quot;Umożliwia wywołania zestawy niezarządzanych&quot; włączone (<xref:System.Security.Permissions.SecurityPermission> z <xref:System.Security.Permissions.SecurityPermissionFlag>ustawioną `UnmanagedCode`) można otworzyć <xref:System.Data.SqlClient.SqlConnection>z włączonym debugowaniem SQL.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Security.Permissions.SecurityPermissionFlag> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, opens it, and displays some of its properties. The connection is automatically closed at the end of the `using` block.  \n  \n [!code-vb[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._18_1.vb)]\n [!code-cs[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._18_1.cs)]"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nie można otworzyć połączenia bez określania źródła danych lub serwera.       lub połączenie jest już otwarte."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Wystąpił błąd na poziomie połączenia podczas otwierania połączenia. Jeśli <> </> *> właściwość zawiera wartość 18487 lub 18488, oznacza to, że określone hasło wygasło lub musi zostać zresetowany. Zobacz <> </> *> metody, aby uzyskać więcej informacji.       <xref uid=&quot;langword_csharp_&lt;system.data.localdb&gt;&quot; name=&quot;&lt;system.data.localdb&gt;&quot; href=&quot;&quot;> </xref> Znacznika w pliku app.config ma nieprawidłową lub nieznaną elementów."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Istnieją dwa wpisy o takiej samej nazwie w <xref uid=&quot;langword_csharp_&lt;localdbinstances&gt;&quot; name=&quot;&lt;localdbinstances&gt;&quot; href=&quot;&quot;> </xref> sekcji."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  id: OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: OpenAsync(CancellationToken)
  nameWithType: SqlConnection.OpenAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wersja asynchroniczna elementu <> </> *>, która otwiera połączenie z bazą danych przy użyciu ustawień właściwości określone przez <> </> *>. Token anulowania może służyć do żądania porzucony operację zanim upłynie limit czasu połączenia.  Wyjątki będą przekazywane za pośrednictwem zwrócone zadania. Jeśli upłynie limit czasu połączenia bez uzyskania połączenia, zwrócone zadania zostanie oznaczony jako błąd z powodu wyjątku. Implementacja zwraca klasę Task, bez blokowania wątek wywołujący dla puli i niebuforowanych połączeń."
  remarks: "Po wywołaniu metody OpenAsync, <xref:System.Data.SqlClient.SqlConnection.State%2A>musi zwracać <xref:System.Data.ConnectionState>do zwróconego <xref:System.Threading.Tasks.Task>zostało zakończone.</xref:System.Threading.Tasks.Task> </xref:System.Data.ConnectionState> </xref:System.Data.SqlClient.SqlConnection.State%2A> Następnie, jeśli połączenie zakończyło się pomyślnie, <xref:System.Data.SqlClient.SqlConnection.State%2A>musi zwracać <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> </xref:System.Data.SqlClient.SqlConnection.State%2A> Jeśli połączenie nie powiedzie się, <xref:System.Data.SqlClient.SqlConnection.State%2A>musi zwracać <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> </xref:System.Data.SqlClient.SqlConnection.State%2A>       Wywołanie <xref:System.Data.SqlClient.SqlConnection.Close%2A>podejmie próbę anulowania lub zamknąć odpowiedniego wywołania OpenAsync.</xref:System.Data.SqlClient.SqlConnection.Close%2A>       Aby uzyskać więcej informacji na temat programowania asynchronicznego w [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dostawcy danych dla [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], zobacz [programowania asynchronicznego](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Instrukcja anulowania."
    return:
      type: System.Threading.Tasks.Task
      description: "Zadanie reprezentujące operację asynchroniczną."
  overload: System.Data.SqlClient.SqlConnection.OpenAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Wywoływanie OpenAsync więcej niż raz dla tego samego wystąpienia przed ukończeniem zadania.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>określono w parametrach połączenia.       Połączenie nie jest dostępna z puli połączeń przed upływem limitu czasu połączenia."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Błędu zwrócony przez [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] który wystąpił podczas otwierania połączenia."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.PacketSize
  id: PacketSize
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: PacketSize
  nameWithType: SqlConnection.PacketSize
  fullName: System.Data.SqlClient.SqlConnection.PacketSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera rozmiar (w bajtach) pakietów sieciowych używanych do komunikowania się z wystąpieniem [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]."
  remarks: "Jeśli aplikacja wykonuje operacje kopiowania masowego, lub wysyła lub odbiera duże ilości danych tekstowych lub graficznych, rozmiar pakietu jest większy niż domyślny może zwiększyć wydajność, ponieważ powoduje ona mniejszą liczbę sieci operacje odczytu i zapisu. Jeśli aplikacja wysyła i odbiera małe ilości danych, możesz ustawić rozmiar pakietu do 512 bajtów (przy użyciu wartości rozmiaru pakietu w <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>), która jest wystarczające dla większości operacji transferu danych.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> W przypadku większości aplikacji najlepiej jest domyślny rozmiar pakietu.       PacketSize może być wartością z zakresu bajtów 512 do 32767. Wyjątek jest generowany, jeśli wartość jest poza tym zakresem.       Ustawienie wartości domyślnej na liczbę większą niż 8000 spowoduje, że pakiety do użycia programu przydzielania wielostronicowe w wystąpieniu [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] zamiast bardziej efektywnego przydzielania SinglePage, zmniejszyć ogólną skalowalność [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]. Aby uzyskać więcej informacji na temat [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] korzysta z pamięci, zobacz [Memory Architecture](http://go.microsoft.com/fwlink/?LinkId=143705) w [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] — książki Online."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, including setting the `Packet Size` to 512 in the connection string. It displays the PacketSize and <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> properties in the console window.  \n  \n [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._63_1.vb)]\n [!code-cs[Classic WebData SqlConnection.PacketSize Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._63_1.cs)]"
  syntax:
    content: public int PacketSize { get; }
    return:
      type: System.Int32
      description: "Rozmiar (w bajtach) pakietów sieciowych. Wartość domyślna to 8000."
  overload: System.Data.SqlClient.SqlConnection.PacketSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  id: RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  nameWithType: SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  fullName: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Rejestruje dostawców magazynu kluczy szyfrowania kolumn."
  syntax:
    content: public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary<string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider> customProviders);
    parameters:
    - id: customProviders
      type: System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider}
      description: "Dostawcy niestandardowi"
  overload: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics
  id: ResetStatistics
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ResetStatistics()
  nameWithType: SqlConnection.ResetStatistics()
  fullName: System.Data.SqlClient.SqlConnection.ResetStatistics()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Jeśli włączono zbierania statystyk, wszystkie wartości są resetowane do zera."
  remarks: "Błąd nie jest generowany, jeśli zbierania statystyk nie jest włączona, ta metoda jest wywoływana."
  syntax:
    content: public void ResetStatistics ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.ResetStatistics*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics
  id: RetrieveStatistics
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: RetrieveStatistics()
  nameWithType: SqlConnection.RetrieveStatistics()
  fullName: System.Data.SqlClient.SqlConnection.RetrieveStatistics()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Zwraca kolekcję pary wartości nazwy statystyk w punkcie w czasie, gdy zostanie wywołana metoda."
  remarks: "Gdy ta metoda jest wywoływana, wartości pobierane, są lokalizacje w bieżącym punkcie w czasie. Jeśli będziesz kontynuować, przy użyciu połączenia, wartości są niepoprawne. Musisz ponownie wykonaj metodę, aby uzyskać najbardziej aktualne wartości."
  syntax:
    content: public System.Collections.IDictionary RetrieveStatistics ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "Zwraca odwołanie typu <xref:System.Collections.IDictionary>z <xref:System.Collections.DictionaryEntry>elementów.</xref:System.Collections.DictionaryEntry> </xref:System.Collections.IDictionary>"
  overload: System.Data.SqlClient.SqlConnection.RetrieveStatistics*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: SqlConnection.ServerVersion
  fullName: System.Data.SqlClient.SqlConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera ciąg, który zawiera wersję wystąpienia [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] połączony jest klient."
  remarks: "Wersja jest w formie *##. ##. ###*, gdzie pierwsze dwie cyfry są wersji głównej obok dwie cyfry są wersja pomocnicza i wersji są cztery ostatnie cyfry. Ten ciąg ma postać *major.minor.build*, gdzie jest to główna i pomocnicza są dokładnie dwie cyfry i kompilacja jest dokładnie cztery cyfry.       ServerVersion została wywołana w czasie zwrócony zadanie nie zostało ukończone i połączenie nie zostało ono otwarte po wywołaniu <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>.</xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays the ServerVersion property.  \n  \n [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._30_1.vb)]\n [!code-cs[Classic WebData ISqlConnection.ServerVersion Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._30_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "Wersja wystąpienia programu [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]."
  overload: System.Data.SqlClient.SqlConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Połączenie jest zamknięte.       ServerVersion została wywołana w czasie zwrócony zadanie nie zostało ukończone i połączenie nie zostało ono otwarte po wywołaniu <xref:System.Data.SqlClient.SqlConnection.OpenAsync*>.</xref:System.Data.SqlClient.SqlConnection.OpenAsync*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.State
  id: State
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: State
  nameWithType: SqlConnection.State
  fullName: System.Data.SqlClient.SqlConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Wskazuje stan <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> podczas ostatniej operacji sieciowej wykonywane w ramach połączenia."
  remarks: "Zwraca <xref:System.Data.ConnectionState>Wyliczenie wskazujące stan <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.ConnectionState> Zamknąć i otworzyć ponownie połączenia zostaną odświeżone wartość stanu."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "<xref href=&quot;System.Data.ConnectionState&quot;> </xref> Wyliczenia."
  overload: System.Data.SqlClient.SqlConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  id: StatisticsEnabled
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: StatisticsEnabled
  nameWithType: SqlConnection.StatisticsEnabled
  fullName: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Jeśli wartość <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, statystyk umożliwia zbieranie dla bieżącego połączenia."
  remarks: "Włączenie zbierania statystyk ma pomocniczej, ale zauważalnego wpływu na wydajność i w związku z tym powinna być włączona tylko wtedy, gdy jest to wymagane."
  syntax:
    content: public bool StatisticsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "Zwraca <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli zbierania statystyk jest włączone; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>jest ustawieniem domyślnym."
  overload: System.Data.SqlClient.SqlConnection.StatisticsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlConnection.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Tworzy nowy obiekt, który jest kopią bieżącego wystąpienia."
  remarks: "Ten element jest jawną implementacją elementu interfejsu. Można go używać tylko wtedy, gdy <xref:System.Data.SqlClient.SqlConnection>wystąpienia jest rzutowane na <xref:System.ICloneable>interfejsu.</xref:System.ICloneable> </xref:System.Data.SqlClient.SqlConnection>       Ten element członkowski jest obsługiwana tylko przez program .NET Compact Framework."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Nowy obiekt, który jest kopią tego wystąpienia."
  overload: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.WorkstationId
  id: WorkstationId
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: WorkstationId
  nameWithType: SqlConnection.WorkstationId
  fullName: System.Data.SqlClient.SqlConnection.WorkstationId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Pobiera ciąg, który identyfikuje klienta bazy danych."
  remarks: "Ciąg zawiera zwykle nazwę sieciową klienta. Właściwość WorkstationId odpowiada `Workstation ID` właściwość parametrów połączenia."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays the WorkstationId property.  \n  \n [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._7_1.vb)]\n [!code-cs[Classic WebData SqlConnection.WorkstationId Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._7_1.cs)]"
  syntax:
    content: public string WorkstationId { get; }
    return:
      type: System.String
      description: "Ciąg, który identyfikuje klienta bazy danych. Jeśli nie zostanie określony, nazwa komputera klienckiego. Jeśli nie określono wartość jest ciągiem pustym."
  overload: System.Data.SqlClient.SqlConnection.WorkstationId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Data.SqlClient.SqlConnection.#ctor
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection()
  nameWithType: SqlConnection.SqlConnection()
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection()
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection(String)
  nameWithType: SqlConnection.SqlConnection(String)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection(String,SqlCredential)
  nameWithType: SqlConnection.SqlConnection(String,SqlCredential)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String,SqlCredential)
- uid: System.Data.SqlClient.SqlCredential
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCredential
  nameWithType: SqlCredential
  fullName: System.Data.SqlClient.SqlCredential
- uid: System.Data.SqlClient.SqlConnection.AccessToken
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: AccessToken
  nameWithType: SqlConnection.AccessToken
  fullName: System.Data.SqlClient.SqlConnection.AccessToken
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: SqlConnection.BeginTransaction()
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction()
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  nameWithType: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction(String)
  nameWithType: SqlConnection.BeginTransaction(String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(String)
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel,String)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel,String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel,String)
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: SqlConnection.ChangeDatabase(String)
  fullName: System.Data.SqlClient.SqlConnection.ChangeDatabase(String)
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangePassword(String,String)
  nameWithType: SqlConnection.ChangePassword(String,String)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,String)
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangePassword(String,SqlCredential,SecureString)
  nameWithType: SqlConnection.ChangePassword(String,SqlCredential,SecureString)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,SqlCredential,SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearAllPools()
  nameWithType: SqlConnection.ClearAllPools()
  fullName: System.Data.SqlClient.SqlConnection.ClearAllPools()
- uid: System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearPool(SqlConnection)
  nameWithType: SqlConnection.ClearPool(SqlConnection)
  fullName: System.Data.SqlClient.SqlConnection.ClearPool(SqlConnection)
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlConnection.ClientConnectionId
  fullName: System.Data.SqlClient.SqlConnection.ClientConnectionId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.SqlClient.SqlConnection.Close
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Close()
  nameWithType: SqlConnection.Close()
  fullName: System.Data.SqlClient.SqlConnection.Close()
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionKeyCacheTtl
  nameWithType: SqlConnection.ColumnEncryptionKeyCacheTtl
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionQueryMetadataCacheEnabled
  nameWithType: SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionTrustedMasterKeyPaths
  nameWithType: SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
- uid: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,IList<String>>
  nameWithType: IDictionary<String,IList<String>>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Collections.Generic.IList<System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Collections.Generic.IList<System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlConnection.ConnectionString
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionString
  nameWithType: SqlConnection.ConnectionString
  fullName: System.Data.SqlClient.SqlConnection.ConnectionString
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: SqlConnection.ConnectionTimeout
  fullName: System.Data.SqlClient.SqlConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlConnection.CreateCommand
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: SqlConnection.CreateCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateCommand()
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: SqlConnection.CreateDbCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.SqlClient.SqlConnection.Credential
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Credential
  nameWithType: SqlConnection.Credential
  fullName: System.Data.SqlClient.SqlConnection.Credential
- uid: System.Data.SqlClient.SqlConnection.Database
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Database
  nameWithType: SqlConnection.Database
  fullName: System.Data.SqlClient.SqlConnection.Database
- uid: System.Data.SqlClient.SqlConnection.DataSource
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DataSource
  nameWithType: SqlConnection.DataSource
  fullName: System.Data.SqlClient.SqlConnection.DataSource
- uid: System.Data.SqlClient.SqlConnection.DbProviderFactory
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: SqlConnection.DbProviderFactory
  fullName: System.Data.SqlClient.SqlConnection.DbProviderFactory
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlConnection.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlConnection.Dispose(Boolean)
- uid: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: SqlConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: SqlConnection.EnlistTransaction(Transaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: FireInfoMessageEventOnUserErrors
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
  fullName: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
- uid: System.Data.SqlClient.SqlConnection.GetSchema
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema()
  nameWithType: SqlConnection.GetSchema()
  fullName: System.Data.SqlClient.SqlConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: SqlConnection.GetSchema(String)
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String)
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: SqlConnection.GetSchema(String,String[])
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlConnection.InfoMessage
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: InfoMessage
  nameWithType: SqlConnection.InfoMessage
  fullName: System.Data.SqlClient.SqlConnection.InfoMessage
- uid: System.Data.SqlClient.SqlInfoMessageEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlInfoMessageEventHandler
  nameWithType: SqlInfoMessageEventHandler
  fullName: System.Data.SqlClient.SqlInfoMessageEventHandler
- uid: System.Data.SqlClient.SqlConnection.Open
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Open()
  nameWithType: SqlConnection.Open()
  fullName: System.Data.SqlClient.SqlConnection.Open()
- uid: System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: OpenAsync(CancellationToken)
  nameWithType: SqlConnection.OpenAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlConnection.PacketSize
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnection.PacketSize
  fullName: System.Data.SqlClient.SqlConnection.PacketSize
- uid: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  nameWithType: SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  fullName: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,SqlColumnEncryptionKeyStoreProvider>
  nameWithType: IDictionary<String,SqlColumnEncryptionKeyStoreProvider>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
    name: SqlColumnEncryptionKeyStoreProvider
    nameWithType: SqlColumnEncryptionKeyStoreProvider
    fullName: SqlColumnEncryptionKeyStoreProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ResetStatistics()
  nameWithType: SqlConnection.ResetStatistics()
  fullName: System.Data.SqlClient.SqlConnection.ResetStatistics()
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RetrieveStatistics()
  nameWithType: SqlConnection.RetrieveStatistics()
  fullName: System.Data.SqlClient.SqlConnection.RetrieveStatistics()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Data.SqlClient.SqlConnection.ServerVersion
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ServerVersion
  nameWithType: SqlConnection.ServerVersion
  fullName: System.Data.SqlClient.SqlConnection.ServerVersion
- uid: System.Data.SqlClient.SqlConnection.State
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: State
  nameWithType: SqlConnection.State
  fullName: System.Data.SqlClient.SqlConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: StatisticsEnabled
  nameWithType: SqlConnection.StatisticsEnabled
  fullName: System.Data.SqlClient.SqlConnection.StatisticsEnabled
- uid: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlConnection.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlConnection.WorkstationId
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: WorkstationId
  nameWithType: SqlConnection.WorkstationId
  fullName: System.Data.SqlClient.SqlConnection.WorkstationId
- uid: System.Data.SqlClient.SqlConnection.#ctor*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection.SqlConnection
- uid: System.Data.SqlClient.SqlConnection.AccessToken*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: AccessToken
  nameWithType: SqlConnection.AccessToken
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: SqlConnection.BeginDbTransaction
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: SqlConnection.BeginTransaction
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: SqlConnection.ChangeDatabase
- uid: System.Data.SqlClient.SqlConnection.ChangePassword*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangePassword
  nameWithType: SqlConnection.ChangePassword
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearAllPools
  nameWithType: SqlConnection.ClearAllPools
- uid: System.Data.SqlClient.SqlConnection.ClearPool*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearPool
  nameWithType: SqlConnection.ClearPool
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlConnection.ClientConnectionId
- uid: System.Data.SqlClient.SqlConnection.Close*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Close
  nameWithType: SqlConnection.Close
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionKeyCacheTtl
  nameWithType: SqlConnection.ColumnEncryptionKeyCacheTtl
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionQueryMetadataCacheEnabled
  nameWithType: SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionTrustedMasterKeyPaths
  nameWithType: SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
- uid: System.Data.SqlClient.SqlConnection.ConnectionString*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionString
  nameWithType: SqlConnection.ConnectionString
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: SqlConnection.ConnectionTimeout
- uid: System.Data.SqlClient.SqlConnection.CreateCommand*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateCommand
  nameWithType: SqlConnection.CreateCommand
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: SqlConnection.CreateDbCommand
- uid: System.Data.SqlClient.SqlConnection.Credential*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Credential
  nameWithType: SqlConnection.Credential
- uid: System.Data.SqlClient.SqlConnection.Database*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Database
  nameWithType: SqlConnection.Database
- uid: System.Data.SqlClient.SqlConnection.DataSource*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DataSource
  nameWithType: SqlConnection.DataSource
- uid: System.Data.SqlClient.SqlConnection.DbProviderFactory*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: SqlConnection.DbProviderFactory
- uid: System.Data.SqlClient.SqlConnection.Dispose*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Dispose
  nameWithType: SqlConnection.Dispose
- uid: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: SqlConnection.EnlistDistributedTransaction
- uid: System.Data.SqlClient.SqlConnection.EnlistTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: SqlConnection.EnlistTransaction
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: FireInfoMessageEventOnUserErrors
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
- uid: System.Data.SqlClient.SqlConnection.GetSchema*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema
  nameWithType: SqlConnection.GetSchema
- uid: System.Data.SqlClient.SqlConnection.Open*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Open
  nameWithType: SqlConnection.Open
- uid: System.Data.SqlClient.SqlConnection.OpenAsync*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: OpenAsync
  nameWithType: SqlConnection.OpenAsync
- uid: System.Data.SqlClient.SqlConnection.PacketSize*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnection.PacketSize
- uid: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RegisterColumnEncryptionKeyStoreProviders
  nameWithType: SqlConnection.RegisterColumnEncryptionKeyStoreProviders
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ResetStatistics
  nameWithType: SqlConnection.ResetStatistics
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RetrieveStatistics
  nameWithType: SqlConnection.RetrieveStatistics
- uid: System.Data.SqlClient.SqlConnection.ServerVersion*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ServerVersion
  nameWithType: SqlConnection.ServerVersion
- uid: System.Data.SqlClient.SqlConnection.State*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: State
  nameWithType: SqlConnection.State
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: StatisticsEnabled
  nameWithType: SqlConnection.StatisticsEnabled
- uid: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlConnection.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlConnection.WorkstationId*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: WorkstationId
  nameWithType: SqlConnection.WorkstationId
