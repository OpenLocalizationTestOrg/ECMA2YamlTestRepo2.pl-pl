### YamlMime:ManagedReference
items:
- uid: System.Management.Instrumentation.ManagementEntityAttribute
  id: ManagementEntityAttribute
  children:
  - System.Management.Instrumentation.ManagementEntityAttribute.#ctor
  - System.Management.Instrumentation.ManagementEntityAttribute.External
  - System.Management.Instrumentation.ManagementEntityAttribute.Name
  - System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  langs:
  - csharp
  name: ManagementEntityAttribute
  nameWithType: ManagementEntityAttribute
  fullName: System.Management.Instrumentation.ManagementEntityAttribute
  type: Class
  summary: "Ten atrybut ManagementEntity wskazuje, że klasa dostarcza informacji zarządzania udostępniany przez dostawcę WMI.       Uwaga: do bibliotek WMI .NET są teraz wziąć pod uwagę stanu końcowego, a nie dalszy rozwój, ulepszenia lub aktualizacje będą dostępne dla problemy związane z zabezpieczeniami wpływu na te biblioteki. [API MI](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) powinna być używana do wszystkich nowych wdrożeń."
  remarks: "Klasy oznaczona przez atrybut musi być publiczna."
  example:
  - "The following example shows how to use the ManagementEntity attribute to mark a class.  \n  \n```  \n// Use the ManagementEntity attribute on the class to specify that this // class contains management information that is available from  \n// provider.  \n  \n    [ManagementEntity(Name = \"MortgageCalc\")]  \n    public class MortgageCalcWMIProvider  \n    {  \n    }  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]

      public sealed class ManagementEntityAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor
  id: '#ctor'
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: ManagementEntityAttribute()
  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute()
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.ManagementEntityAttribute()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Inicjuje nowe wystąpienie <xref:System.Management.ManagementEntityAttribute>klasy.</xref:System.Management.ManagementEntityAttribute> Jest to domyślny konstruktor."
  remarks: "Ten konstruktor nie przyjmuje parametr name. Jeśli nie określisz nazwy przy użyciu [nazwa](~/add/includes/ajax-current-ext-md.md) parametru nazwę klasy WMI skojarzone domyślnie zostanie ustawiona nazwa klasy oparte na atrybutach."
  syntax:
    content: public ManagementEntityAttribute ();
    parameters: []
  overload: System.Management.Instrumentation.ManagementEntityAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.External
  id: External
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: External
  nameWithType: ManagementEntityAttribute.External
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.External
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Pobiera lub ustawia wartość określającą, czy klasa reprezentuje klasę WMI dostawcy zaimplementowana zewnętrznych do bieżącego zestawu."
  remarks: "To jest używany podczas implementowania dostawcy zawierający implementację klasy, które rozszerzyć istniejących klas abstrakcyjnych usługi WMI."
  syntax:
    content: public bool External { get; set; }
    return:
      type: System.Boolean
      description: "Wartość logiczna, która ma wartość true, jeśli klasa reprezentuje zewnętrzne klasy usługi WMI i wartość false w przeciwnym razie wartość."
  overload: System.Management.Instrumentation.ManagementEntityAttribute.External*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name
  id: Name
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ManagementEntityAttribute.Name
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Name
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Pobiera lub ustawia nazwę klasy usługi WMI."
  remarks: "Jeśli nie określisz nazwy klasy usługi WMI przez ustawienie dla tej właściwości, klasy usługi WMI domyślnie zostanie ustawiona nazwa klasy oparte na atrybutach."
  example:
  - "In the following example, the Name parameter is used to set the name of the WMI class represented by the MortgageCalcWMIProvider class. It sets the name to MortgageCalculator. If the Name parameter is not used, the corresponding C# class name, MortgageCalcWMIProvider in this case, is used as the WMI class name.  \n  \n```  \n[ManagementEntity(Name = \"MortgageCalculator\")]  \npublic class MortgageCalcWMIProvider  \n{  \n}  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Ciąg zawierający nazwę klasy usługi WMI."
  overload: System.Management.Instrumentation.ManagementEntityAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  id: Singleton
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: Singleton
  nameWithType: ManagementEntityAttribute.Singleton
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Określa, czy skojarzona klasa reprezentuje pojedynczą klasę WMI."
  remarks: "Pojedyncza klasa usługi WMI jest jednym którego tylko kiedykolwiek można pojedynczego wystąpienia. Mimo że można kodem logiki, aby upewnić się, że kiedykolwiek tworzony jest tylko jedno wystąpienie klasy WMI, ten atrybut parametru zapewnia ustawić zadanie prosty i spójny.       Podczas pracy z pojedynczego wystąpienia klasy usługi WMI, aplikacje klienckie należy użyć składni specjalnych. Aby uzyskać więcej informacji, zobacz Describing wystąpienia obiektu ścieżka tematu w bibliotece MSDN online na [http://www.msdn.com](http://www.msdn.com/)."
  example:
  - "The following code snippet demonstrates how to use the Singleton parameter to indicate that a C# class corresponds to a singleton WMI class.  \n  \n```  \n[ManagementEntity(Singleton=true)]  \npublic class SingletonSample  \n```  \n  \n For a complete, working example of a provider that implements a singleton class, see [How to: Create a Basic Decoupled Provider](http://msdn.microsoft.com/en-us/1dabd442-c1ff-40a1-bb0e-d7b3566c2300)."
  syntax:
    content: public bool Singleton { get; set; }
    return:
      type: System.Boolean
      description: "Wartość logiczna, która ma wartość true, jeśli klasa reprezentuje pojedyncze klasy usługi WMI i wartość false w przeciwnym razie wartość."
  overload: System.Management.Instrumentation.ManagementEntityAttribute.Singleton*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: ManagementEntityAttribute()
  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute()
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.ManagementEntityAttribute()
- uid: System.Management.Instrumentation.ManagementEntityAttribute.External
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: External
  nameWithType: ManagementEntityAttribute.External
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.External
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Name
  nameWithType: ManagementEntityAttribute.Name
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Singleton
  nameWithType: ManagementEntityAttribute.Singleton
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: ManagementEntityAttribute
  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute
- uid: System.Management.Instrumentation.ManagementEntityAttribute.External*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: External
  nameWithType: ManagementEntityAttribute.External
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Name
  nameWithType: ManagementEntityAttribute.Name
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Singleton
  nameWithType: ManagementEntityAttribute.Singleton
