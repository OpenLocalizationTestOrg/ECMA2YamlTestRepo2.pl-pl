### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ObjectStateManager
  id: ObjectStateManager
  children:
  - System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  - System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  - System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  - System.Data.Objects.ObjectStateManager.MetadataWorkspace
  - System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  - System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  - System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  - System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  langs:
  - csharp
  name: ObjectStateManager
  nameWithType: ObjectStateManager
  fullName: System.Data.Objects.ObjectStateManager
  type: Class
  summary: "Obsługuje zarządzanie stanu i tożsamości obiektu dla wystąpień typów jednostek i wystąpienia relacji."
  remarks: "Śledzi ObjectStateManager wyniki zapytania i zawiera logikę do scalenia wielu nakładające się wyników zapytania. Wykonuje także śledzenia, gdy użytkownik wstawia, usuwania lub modyfikuje obiekty i udostępnia zestaw aktualizacji zmian zmian w pamięci. Ten zestaw zmian jest używany przez procesor zmiany aby utrwalić zmiany.       Ta klasa jest zwykle używana przez <xref:System.Data.Objects.ObjectContext>bezpośrednio w aplikacji.</xref:System.Data.Objects.ObjectContext>"
  example:
  - "These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n The following example gets the ObjectStateManager from the <xref:System.Data.Objects.ObjectContext> and uses the state manager to access an object in the context.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstatemanager)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstatemanager)]  \n  \n The following example uses the <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> method on the returned ObjectStateManager to get an object based on its entity key.  \n  \n [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#applyitemupdates)]\n [!code-cs[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#applyitemupdates)]"
  syntax:
    content: public class ObjectStateManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  id: '#ctor(System.Data.Metadata.Edm.MetadataWorkspace)'
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ObjectStateManager(MetadataWorkspace)
  nameWithType: ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref> klasy."
  syntax:
    content: public ObjectStateManager (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);
    parameters:
    - id: metadataWorkspace
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "<xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref>, Który dostarcza informacji dotyczących mapowania i metadanych."
  overload: System.Data.Objects.ObjectStateManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  id: ChangeObjectState(System.Object,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeObjectState(Object,EntityState)
  nameWithType: ObjectStateManager.ChangeObjectState(Object,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeObjectState(Object,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Zmienia stan <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> dla konkretnego obiektu do określonego <code> entityState </code>."
  remarks: "Wywołanie metody ChangeObjectState można zmienić stanu obiektu <xref:System.Data.EntityState>nie powoduje powiązane obiekty w relacji ograniczone do usunięcia.</xref:System.Data.EntityState>       Zmiana stanu obiektu nie wpływa na obiekty powiązane w grafie obiektu.       Po zmianie <xref:System.Data.EntityState>wpisu do obiektu jednostki <xref:System.Data.EntityState>, wszystkie właściwości obiektu są oznaczane jako zmodyfikowane, niezależnie od bieżącej lub oryginalnej wartości.</xref:System.Data.EntityState> </xref:System.Data.EntityState>       Gdy <xref:System.Data.EntityState>obiektu jednostki wpisu jest zmieniana na <xref:System.Data.EntityState>, <xref:System.Data.EntityState>, lub <xref:System.Data.EntityState>, wpisów relacji dla obiektu również zostaną zaktualizowane.</xref:System.Data.EntityState> </xref:System.Data.EntityState> </xref:System.Data.EntityState> </xref:System.Data.EntityState>"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeObjectState (object entity, System.Data.EntityState entityState);
    parameters:
    - id: entity
      type: System.Object
      description: "Dla którego można zmienić stanu obiektu."
    - id: entityState
      type: System.Data.EntityState
      description: "Nowy stan obiektu."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "The <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref> for the supplied <code>entity</code>."
  overload: System.Data.Objects.ObjectStateManager.ChangeObjectState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>entity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Gdy obiekt nie jest odłączony i nie ma pozycji w Menedżer stanów.       - lub - podczas próby zmiany stanu do <xref href=&quot;System.Data.EntityState&quot;> </xref> z wszystkimi innymi <xref:System.Data.EntityState.>- lub - gdy <code> state </code> nie jest prawidłową <xref href=&quot;System.Data.EntityState&quot;> </xref> wartość.</xref:System.Data.EntityState.>"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  id: ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(Object,Object,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Zmiany stan relacji między dwoma obiektami jednostki, które jest określone na podstawie dwóch powiązanych obiektów i nazwa właściwości nawigacji."
  remarks: "Wpisy dla obiektów na obu końcach określonej relacji musi istnieć w <xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager>      > [!NOTE] > Ta metoda nie jest obsługiwana dla relacji oparte na to skojarzenie klucza obcego."
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string navigationProperty, System.Data.EntityState relationshipState);
    parameters:
    - id: sourceEntity
      type: System.Object
      description: "Wystąpienie obiektu lub <xref href=&quot;System.Data.EntityKey&quot;> </xref> jednostki źródłowej w jeden element end relacji."
    - id: targetEntity
      type: System.Object
      description: "Wystąpienie obiektu lub <xref href=&quot;System.Data.EntityKey&quot;> </xref> obiektu docelowego na drugim końcu relacji."
    - id: navigationProperty
      type: System.String
      description: "Nazwa właściwości nawigacji na `source` zwraca wartość określonego `target`."
    - id: relationshipState
      type: System.Data.EntityState
      description: "Żądany <xref href=&quot;System.Data.EntityState&quot;> </xref> określonej relacji."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> Dla relacji, która została zmieniona."
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code> or <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podczas próby zmiany stanu relacji na stan inny niż <xref href=&quot;System.Data.EntityState&quot;> </xref> lub <xref href=&quot;System.Data.EntityState&quot;> </xref> podczas albo <code> source </code> lub <code> target </code> w <xref href=&quot;System.Data.EntityState&quot;> </xref> stanu.       Podczas próby zmiany stanu relacji na stan inny niż - lub - <xref href=&quot;System.Data.EntityState&quot;> </xref> lub <xref href=&quot;System.Data.EntityState&quot;> </xref> podczas albo <code> source </code> lub <code> target </code> w <xref href=&quot;System.Data.EntityState&quot;> </xref> stanu.       - lub - gdy <code> state </code> nie jest prawidłową <xref href=&quot;System.Data.EntityState&quot;> </xref> wartości."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  id: ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(Object,Object,String,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Zmiany stanu relacji między dwoma obiektami jednostki, które jest określone na podstawie dwóch powiązanych obiektów i właściwości relacji."
  remarks: "Wpisy dla obiektów na obu końcach określonej relacji musi istnieć w <xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager>      > [!NOTE] > Ta metoda nie jest obsługiwana dla relacji, które są oparte na to skojarzenie klucza obcego. Aby uzyskać więcej informacji, zobacz [definiujący i zarządzanie relacjami](http://msdn.microsoft.com/en-us/2c92c097-56bd-4145-989e-16d92475ecda)"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, System.Data.EntityState relationshipState);
    parameters:
    - id: sourceEntity
      type: System.Object
      description: "Wystąpienie obiektu lub <xref href=&quot;System.Data.EntityKey&quot;> </xref> jednostki źródłowej w jeden element end relacji."
    - id: targetEntity
      type: System.Object
      description: "Wystąpienie obiektu lub <xref href=&quot;System.Data.EntityKey&quot;> </xref> obiektu docelowego na drugim końcu relacji."
    - id: relationshipName
      type: System.String
      description: "Nazwa relacji."
    - id: targetRoleName
      type: System.String
      description: "Nazwa roli w `target` end relacji."
    - id: relationshipState
      type: System.Data.EntityState
      description: "Żądany <xref href=&quot;System.Data.EntityState&quot;> </xref> określonej relacji."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> Dla relacji, która została zmieniona."
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code> or <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Podczas próby zmiany stanu relacji na stan inny niż <xref href=&quot;System.Data.EntityState&quot;> </xref> lub <xref href=&quot;System.Data.EntityState&quot;> </xref> podczas albo <code> source </code> lub <code> target </code> w <xref href=&quot;System.Data.EntityState&quot;> </xref> stanu.       Podczas próby zmiany stanu relacji na stan inny niż - lub - <xref href=&quot;System.Data.EntityState&quot;> </xref> lub <xref href=&quot;System.Data.EntityState&quot;> </xref> podczas albo <code> source </code> lub <code> target </code> w <xref href=&quot;System.Data.EntityState&quot;> </xref> stanu.       - lub - gdy <code> state </code> nie jest prawidłową <xref href=&quot;System.Data.EntityState&quot;> </xref> wartości."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  id: ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: 'public System.Data.Objects.ObjectStateEntry ChangeRelationshipState<TEntity> (TEntity sourceEntity, object targetEntity, System.Linq.Expressions.Expression<Func<TEntity,object>> navigationPropertySelector, System.Data.EntityState relationshipState) where TEntity : class;'
    parameters:
    - id: sourceEntity
      type: TEntity
      description: "Do dodania."
    - id: targetEntity
      type: System.Object
      description: "Do dodania."
    - id: navigationPropertySelector
      type: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}
      description: "Do dodania."
    - id: relationshipState
      type: System.Data.EntityState
      description: "Do dodania."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "Do dodania."
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState<TEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  id: GetObjectStateEntries(System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntries(EntityState)
  nameWithType: ObjectStateManager.GetObjectStateEntries(EntityState)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Zwraca kolekcję <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> obiektów dla obiektów lub relacje z danym stanie."
  remarks: "<xref:System.Data.EntityState>Jest polem bitowym, więc wpisy stanu dla wielu stanów można pobrać w jednym wywołaniu wykonując bitowej lub więcej niż jedną <xref:System.Data.EntityState>wartości.</xref:System.Data.EntityState> </xref:System.Data.EntityState>"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectStateEntry> GetObjectStateEntries (System.Data.EntityState state);
    parameters:
    - id: state
      type: System.Data.EntityState
      description: "<xref href=&quot;System.Data.EntityState&quot;> </xref> Używane do filtrowania zwróconego <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> obiektów."
    return:
      type: System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry}
      description: "Kolekcja <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> obiektów w danym <xref href=&quot;System.Data.EntityState&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntries*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "When <code>state</code> is <xref href=&quot;System.Data.EntityState&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  id: GetObjectStateEntry(System.Data.EntityKey)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntry(EntityKey)
  nameWithType: ObjectStateManager.GetObjectStateEntry(EntityKey)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(EntityKey)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Zwraca <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> dla obiekt lub relacji wpisu z określonym kluczem."
  remarks: "Użyj <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>metodę, aby zwrócić <xref:System.Data.Objects.ObjectStateEntry>obiektu bez konieczności obsługi <xref:System.InvalidOperationException>wywoływane przez metodę GetObjectStateEntry.</xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example gets the <xref:System.Data.Objects.ObjectStateEntry> for the given <xref:System.Data.EntityKey> from the <xref:System.Data.Objects.ObjectStateManager>. Then it gets the current value of the `SalesOrderHeader.PurchaseOrderNumber` property, changes the property's value, and enumerates through the collection of modified properties.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateEntry](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstateentry)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateEntry](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstateentry)]"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (System.Data.EntityKey key);
    parameters:
    - id: key
      type: System.Data.EntityKey
      description: "The <xref href=&quot;System.Data.EntityKey&quot;></xref>."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "Odpowiednie <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> dla danego <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Gdy określonego <code> key </code> nie można odnaleźć w Menedżer stanów."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Brak jednostki z określonym <xref href=&quot;System.Data.EntityKey&quot;> </xref> istnieje w <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  id: GetObjectStateEntry(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntry(Object)
  nameWithType: ObjectStateManager.GetObjectStateEntry(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Zwraca <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> dla określonego obiektu."
  remarks: "Użyj <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29>metodę, aby zwrócić <xref:System.Data.Objects.ObjectStateEntry>obiektu bez konieczności obsługi <xref:System.InvalidOperationException>wywoływane przez metodę GetObjectStateEntry.</xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29>"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "<xref:System.Object>Któremu pobranej <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> należy.</xref:System.Object>"
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "Odpowiednie <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> dla danego <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Brak jednostki dla określonego <xref:System.Object>istnieje w <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>.</xref:System.Object>"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  id: GetRelationshipManager(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetRelationshipManager(Object)
  nameWithType: ObjectStateManager.GetRelationshipManager(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetRelationshipManager(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Zwraca <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> używany przez określony obiekt."
  remarks: "Wywołanie metody GetRelationshipManager jest taka sama jak wywołanie <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>metody, z wyjątkiem tego, że ta metoda zgłasza wyjątek, zamiast zwracać `false`.</xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>       Wywołanie <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>metody w celu uniknięcia Obsługa <xref:System.InvalidOperationException>występuje podczas <xref:System.Data.Objects.DataClasses.RelationshipManager>dla przekazana jednostka nie może być zwracany.</xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>"
  syntax:
    content: public System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Obiekt, dla którego ma zostać zwrócona <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref>."
    return:
      type: System.Data.Objects.DataClasses.RelationshipManager
      description: "<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> Dla określonego obiektu."
  overload: System.Data.Objects.ObjectStateManager.GetRelationshipManager*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Gdy <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> nie może być zwracany w określonym <code> entity </code>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  id: MetadataWorkspace
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
  fullName: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Pobiera <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> skojarzone z tym Menedżer stanów."
  remarks: "<xref:System.Data.Metadata.Edm.MetadataWorkspace>Klasą jest centralny interfejsu programowania, które służy do interakcji z metadanych modelu danych jednostki (EDM) w czasie wykonywania, jak i w kontekście aplikacji.</xref:System.Data.Metadata.Edm.MetadataWorkspace>"
  syntax:
    content: public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }
    return:
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "<xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> Skojarzony z tym <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.MetadataWorkspace*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  id: ObjectStateManagerChanged
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ObjectStateManagerChanged
  nameWithType: ObjectStateManager.ObjectStateManagerChanged
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  type: Event
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Występuje, gdy jednostki są dodane lub usunięte przez menedżera stanu."
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  id: TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Próbuje pobrać odpowiadającego <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> dla obiekt lub relacji z określonym <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  remarks: "Użyj TryGetObjectStateEntry, aby zwrócić <xref:System.Data.Objects.ObjectStateEntry>bez konieczności obsługi <xref:System.InvalidOperationException>zgłoszone przez <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29>metody.</xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry>"
  example:
  - "The examples in this topic are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n The example attempts to retrieve the corresponding <xref:System.Data.Objects.ObjectStateEntry> for the given <xref:System.Data.EntityKey>.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstatemanager)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstatemanager)]  \n  \n The following example uses the TryGetObjectStateEntry method on the returned <xref:System.Data.Objects.ObjectStateManager> to get an object based on its entity key.  \n  \n [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#applyitemupdates)]\n [!code-cs[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#applyitemupdates)]"
  syntax:
    content: public bool TryGetObjectStateEntry (System.Data.EntityKey key, out System.Data.Objects.ObjectStateEntry entry);
    parameters:
    - id: key
      type: System.Data.EntityKey
      description: "Podany <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
    - id: entry
      type: System.Data.Objects.ObjectStateEntry
      description: "Po powrocie z tej metody zawiera <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> dla danego <xref href=&quot;System.Data.EntityKey&quot;> </xref> ten parametr jest przekazywany jako niezainicjowany."
    return:
      type: System.Boolean
      description: "Wartość logiczna, która jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli istnieje, odpowiadający jej <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> dla danego <xref href=&quot;System.Data.EntityKey&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> w języku Visual Basic) wartość jest podana dla <code> key </code>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  id: TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetObjectStateEntry(Object,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Próbuje pobrać odpowiadającego <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> dla określonego <xref:System.Object>.</xref:System.Object>"
  remarks: "Zwracany przy użyciu metody TryGetObjectStateEntry <xref:System.Data.Objects.ObjectStateEntry>bez konieczności obsługi <xref:System.InvalidOperationException>zgłoszone przez <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29>metody.</xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry>"
  syntax:
    content: public bool TryGetObjectStateEntry (object entity, out System.Data.Objects.ObjectStateEntry entry);
    parameters:
    - id: entity
      type: System.Object
      description: "<xref:System.Object>Któremu pobranej <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> należy.</xref:System.Object>"
    - id: entry
      type: System.Data.Objects.ObjectStateEntry
      description: "Po powrocie z tej metody zawiera <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> dla danego <xref href=&quot;System.Data.EntityKey&quot;> </xref> ten parametr jest przekazywany jako niezainicjowany."
    return:
      type: System.Boolean
      description: "Wartość logiczna, która jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Jeśli istnieje, odpowiadający jej <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> dla danego obiektu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  id: TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetRelationshipManager(Object,RelationshipManager)
  nameWithType: ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  fullName: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Zwraca <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> używany przez określony obiekt."
  remarks: "<xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>Metoda jest używana do uzyskania <xref:System.Data.Objects.DataClasses.RelationshipManager>dla obiektów, które są ignorujących trwałość.</xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> Gdy zaimplementować obiekty <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>lub dziedziczyć <xref:System.Data.Objects.DataClasses.EntityObject>, <xref:System.Data.Objects.DataClasses.RelationshipManager>jest dostępny z <xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A>Właściwości.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A> </xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.Data.Objects.DataClasses.EntityObject> </xref:System.Data.Objects.DataClasses.IEntityWithRelationships>       <xref:System.Data.Objects.DataClasses.RelationshipManager>Nie może być zwracany, gdy obiekt jest w <xref:System.Data.EntityState>Stan.</xref:System.Data.EntityState> </xref:System.Data.Objects.DataClasses.RelationshipManager>       Wywołanie metody TryGetRelationshipManager jest taka sama jak wywołanie <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>metody, z wyjątkiem tego, że ta metoda zwraca `false` zamiast generowanie wyjątków.</xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>"
  syntax:
    content: public bool TryGetRelationshipManager (object entity, out System.Data.Objects.DataClasses.RelationshipManager relationshipManager);
    parameters:
    - id: entity
      type: System.Object
      description: "Obiekt, dla którego ma zostać zwrócona <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref>."
    - id: relationshipManager
      type: System.Data.Objects.DataClasses.RelationshipManager
      description: "Po powrocie z tej metody zawiera <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> dla `entity`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> zostało zwrócone wystąpienie wybranych <code> entity </code>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManager(MetadataWorkspace)
  nameWithType: ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManager(MetadataWorkspace)
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeObjectState(Object,EntityState)
  nameWithType: ObjectStateManager.ChangeObjectState(Object,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeObjectState(Object,EntityState)
- uid: System.Data.Objects.ObjectStateEntry
  parent: System.Data.Objects
  isExternal: false
  name: ObjectStateEntry
  nameWithType: ObjectStateEntry
  fullName: System.Data.Objects.ObjectStateEntry
- uid: System.Data.EntityState
  parent: System.Data
  isExternal: false
  name: EntityState
  nameWithType: EntityState
  fullName: System.Data.EntityState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(Object,Object,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(Object,Object,String,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
- uid: TEntity
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TEntity,Object>>
  nameWithType: Expression<Func<TEntity,Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity,System.Object>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TEntity,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<TEntity,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntries(EntityState)
  nameWithType: ObjectStateManager.GetObjectStateEntries(EntityState)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(EntityState)
- uid: System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ObjectStateEntry>
  nameWithType: IEnumerable<ObjectStateEntry>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectStateEntry>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Objects.ObjectStateEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Objects.ObjectStateEntry
    name: ObjectStateEntry
    nameWithType: ObjectStateEntry
    fullName: ObjectStateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry(EntityKey)
  nameWithType: ObjectStateManager.GetObjectStateEntry(EntityKey)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(EntityKey)
- uid: System.Data.EntityKey
  parent: System.Data
  isExternal: false
  name: EntityKey
  nameWithType: EntityKey
  fullName: System.Data.EntityKey
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry(Object)
  nameWithType: ObjectStateManager.GetObjectStateEntry(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(Object)
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetRelationshipManager(Object)
  nameWithType: ObjectStateManager.GetRelationshipManager(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetRelationshipManager(Object)
- uid: System.Data.Objects.DataClasses.RelationshipManager
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: RelationshipManager
  nameWithType: RelationshipManager
  fullName: System.Data.Objects.DataClasses.RelationshipManager
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
  fullName: System.Data.Objects.ObjectStateManager.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManagerChanged
  nameWithType: ObjectStateManager.ObjectStateManagerChanged
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry(Object,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetRelationshipManager(Object,RelationshipManager)
  nameWithType: ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  fullName: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
- uid: System.Data.Objects.ObjectStateManager.#ctor*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManager
  nameWithType: ObjectStateManager.ObjectStateManager
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeObjectState
  nameWithType: ObjectStateManager.ChangeObjectState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState
  nameWithType: ObjectStateManager.ChangeRelationshipState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState<TEntity>*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState<TEntity>
  nameWithType: ObjectStateManager.ChangeRelationshipState<TEntity>
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntries
  nameWithType: ObjectStateManager.GetObjectStateEntries
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry
  nameWithType: ObjectStateManager.GetObjectStateEntry
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetRelationshipManager
  nameWithType: ObjectStateManager.GetRelationshipManager
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry
  nameWithType: ObjectStateManager.TryGetObjectStateEntry
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetRelationshipManager
  nameWithType: ObjectStateManager.TryGetRelationshipManager
