### YamlMime:ManagedReference
items:
- uid: System.Device.Location.CivicAddress
  id: CivicAddress
  children:
  - System.Device.Location.CivicAddress.#ctor
  - System.Device.Location.CivicAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  - System.Device.Location.CivicAddress.AddressLine1
  - System.Device.Location.CivicAddress.AddressLine2
  - System.Device.Location.CivicAddress.Building
  - System.Device.Location.CivicAddress.City
  - System.Device.Location.CivicAddress.CountryRegion
  - System.Device.Location.CivicAddress.FloorLevel
  - System.Device.Location.CivicAddress.IsUnknown
  - System.Device.Location.CivicAddress.PostalCode
  - System.Device.Location.CivicAddress.StateProvince
  - System.Device.Location.CivicAddress.Unknown
  langs:
  - csharp
  name: CivicAddress
  nameWithType: CivicAddress
  fullName: System.Device.Location.CivicAddress
  type: Class
  summary: "Reprezentuje obywatelskiej adres. Adres obywatelskiej mogą zawierać pól, takie jak adres, kod pocztowy, Województwo i kraju lub regionu."
  remarks: "Obywatelskiej adres dla lokalizacji można uzyskać <xref:System.Device.Location.GeoCoordinate>za pomocą klasy, która implementuje <xref:System.Device.Location.ICivicAddressResolver>.</xref:System.Device.Location.ICivicAddressResolver> </xref:System.Device.Location.GeoCoordinate>       <xref:System.Device.Location.CivicAddressResolver>Klasa udostępnia domyślną implementację, która zwraca obywatelskiej adres, który odpowiada <xref:System.Device.Location.GeoCoordinate>, jeśli źródło lokalizacji zawiera zarówno koordynować danych, a także adres obywatelskiej danych.</xref:System.Device.Location.GeoCoordinate> </xref:System.Device.Location.CivicAddressResolver>       <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A>Zwraca CivicAddress dla bieżącej lokalizacji.</xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A>  Jeśli źródło lokalizacji jest nie można rozpoznać adresu obywatelskiej współrzędnych pozycji <xref:System.Device.Location.CivicAddress.Unknown>jest zwracana.</xref:System.Device.Location.CivicAddress.Unknown>"
  example:
  - "The following example shows how to resolve a CivicAddress from a <xref:System.Device.Location.GeoCoordinate> location synchronously.  \n  \n [!code-cs[System.Device.Location.ResolveCivicAddressSync#1](~/add/codesnippet/csharp/resolveaddresssync/resolvecivicaddresssync.cs#1)]\n [!code-vb[System.Device.Location.ResolveCivicAddressSync#1](~/add/codesnippet/visualbasic/resolvecivicaddresssync/resolvecivicaddresssync.vb#1)]  \n  \n The following example shows how to resolve a CivicAddress from a <xref:System.Device.Location.GeoCoordinate> location asynchronously.  \n  \n [!code-cs[System.Device.Location.ResolveCivicAddressAsync#1](~/add/codesnippet/csharp/resolveaddressasync/resolvecivicaddressasync.cs#1)]\n [!code-vb[System.Device.Location.ResolveCivicAddressAsync#1](~/add/codesnippet/visualbasic/resolvecivicaddressasync/resolvecivicaddressasync.vb#1)]"
  syntax:
    content: public class CivicAddress
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Device.Location.CivicAddress.#ctor
  id: '#ctor'
  parent: System.Device.Location.CivicAddress
  langs:
  - csharp
  name: CivicAddress()
  nameWithType: CivicAddress.CivicAddress()
  fullName: System.Device.Location.CivicAddress.CivicAddress()
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Device.Location.CivicAddress&quot;> </xref> klasy."
  remarks: "Wszystkie pola są inicjowane na <xref:System.String.Empty>.</xref:System.String.Empty>"
  syntax:
    content: public CivicAddress ();
    parameters: []
  overload: System.Device.Location.CivicAddress.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.CivicAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)'
  parent: System.Device.Location.CivicAddress
  langs:
  - csharp
  name: CivicAddress(String,String,String,String,String,String,String,String)
  nameWithType: CivicAddress.CivicAddress(String,String,String,String,String,String,String,String)
  fullName: System.Device.Location.CivicAddress.CivicAddress(String,String,String,String,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Device.Location.CivicAddress&quot;> </xref> przy użyciu informacji o adresie."
  syntax:
    content: public CivicAddress (string addressLine1, string addressLine2, string building, string city, string countryRegion, string floorLevel, string postalCode, string stateProvince);
    parameters:
    - id: addressLine1
      type: System.String
      description: "Ciąg zawierający pierwszy wiersz adresu."
    - id: addressLine2
      type: System.String
      description: "Ciąg zawierający drugi wiersz adresu."
    - id: building
      type: System.String
      description: "Ciąg zawierający nazwę budynku lub numer."
    - id: city
      type: System.String
      description: "Ciąg zawierający nazwę miasta."
    - id: countryRegion
      type: System.String
      description: "Ciąg zawierający kraju lub regionu."
    - id: floorLevel
      type: System.String
      description: "Ciąg zawierający numer piętra."
    - id: postalCode
      type: System.String
      description: "Ciąg zawierający kod pocztowy."
    - id: stateProvince
      type: System.String
      description: "Ciąg zawierający województwa."
  overload: System.Device.Location.CivicAddress.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Co najmniej jeden parametr musi być niepustym ciągiem."
  platform:
  - net462
- uid: System.Device.Location.CivicAddress.AddressLine1
  id: AddressLine1
  parent: System.Device.Location.CivicAddress
  langs:
  - csharp
  name: AddressLine1
  nameWithType: CivicAddress.AddressLine1
  fullName: System.Device.Location.CivicAddress.AddressLine1
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Pobiera lub ustawia pierwszy wiersz adresu."
  syntax:
    content: public string AddressLine1 { get; set; }
    return:
      type: System.String
      description: "Zwraca pierwszy wiersz adresu. Jeśli nie podano danych, zwraca <xref:System.String>.</xref:System.String>"
  overload: System.Device.Location.CivicAddress.AddressLine1*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.CivicAddress.AddressLine2
  id: AddressLine2
  parent: System.Device.Location.CivicAddress
  langs:
  - csharp
  name: AddressLine2
  nameWithType: CivicAddress.AddressLine2
  fullName: System.Device.Location.CivicAddress.AddressLine2
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Pobiera lub ustawia drugi wiersz adresu."
  syntax:
    content: public string AddressLine2 { get; set; }
    return:
      type: System.String
      description: "Zwraca drugi wiersz adresu. Jeśli nie podano danych, zwraca<xref:System.String.Empty.></xref:System.String.Empty.>"
  overload: System.Device.Location.CivicAddress.AddressLine2*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.CivicAddress.Building
  id: Building
  parent: System.Device.Location.CivicAddress
  langs:
  - csharp
  name: Building
  nameWithType: CivicAddress.Building
  fullName: System.Device.Location.CivicAddress.Building
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Pobiera lub ustawia nazwę budynku lub numer."
  syntax:
    content: public string Building { get; set; }
    return:
      type: System.String
      description: "Zwraca numer lub nazwa budynku. Jeśli nie podano danych, zwraca <xref:System.String>.</xref:System.String>"
  overload: System.Device.Location.CivicAddress.Building*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.CivicAddress.City
  id: City
  parent: System.Device.Location.CivicAddress
  langs:
  - csharp
  name: City
  nameWithType: CivicAddress.City
  fullName: System.Device.Location.CivicAddress.City
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Pobiera lub ustawia nazwę miasta."
  syntax:
    content: public string City { get; set; }
    return:
      type: System.String
      description: "Zwraca nazwę miasta. Jeśli nie podano danych, zwraca <xref:System.String>.</xref:System.String>"
  overload: System.Device.Location.CivicAddress.City*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.CivicAddress.CountryRegion
  id: CountryRegion
  parent: System.Device.Location.CivicAddress
  langs:
  - csharp
  name: CountryRegion
  nameWithType: CivicAddress.CountryRegion
  fullName: System.Device.Location.CivicAddress.CountryRegion
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Pobiera lub ustawia kraj lub region lokalizacji."
  remarks: "Kraj lub region jest zazwyczaj reprezentowany przez kod kraju normy ISO&3166; dwuliterowych."
  syntax:
    content: public string CountryRegion { get; set; }
    return:
      type: System.String
      description: "Zwraca numer kierunkowy kraju lub regionu. Jeśli nie podano danych, zwraca <xref:System.String>.</xref:System.String>"
  overload: System.Device.Location.CivicAddress.CountryRegion*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.CivicAddress.FloorLevel
  id: FloorLevel
  parent: System.Device.Location.CivicAddress
  langs:
  - csharp
  name: FloorLevel
  nameWithType: CivicAddress.FloorLevel
  fullName: System.Device.Location.CivicAddress.FloorLevel
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Pobiera lub ustawia poziom piętro lokalizacji."
  syntax:
    content: public string FloorLevel { get; set; }
    return:
      type: System.String
      description: "Zwraca ciąg zawierający poziom piętra. Jeśli nie podano danych, zwraca <xref:System.String>.</xref:System.String>"
  overload: System.Device.Location.CivicAddress.FloorLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.CivicAddress.IsUnknown
  id: IsUnknown
  parent: System.Device.Location.CivicAddress
  langs:
  - csharp
  name: IsUnknown
  nameWithType: CivicAddress.IsUnknown
  fullName: System.Device.Location.CivicAddress.IsUnknown
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Pobiera wartość wskazującą, czy <xref href=&quot;System.Device.Location.CivicAddress&quot;> </xref> zawiera dane."
  remarks: ''
  example:
  - "The following example uses IsUnknown to check the <xref:System.Device.Location.CivicAddress> that is returned from <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> before the civic address is printed out.  \n  \n [!code-cs[System.Device.Location.ResolveCivicAddressSync#2](~/add/codesnippet/csharp/resolveaddresssync/resolvecivicaddresssync.cs#2)]\n [!code-vb[System.Device.Location.ResolveCivicAddressSync#2](~/add/codesnippet/visualbasic/resolvecivicaddresssync/resolvecivicaddresssync.vb#2)]"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Device.Location.CivicAddress&quot;></xref> is equal to <xref href=&quot;System.Device.Location.CivicAddress.Unknown&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Device.Location.CivicAddress.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.CivicAddress.PostalCode
  id: PostalCode
  parent: System.Device.Location.CivicAddress
  langs:
  - csharp
  name: PostalCode
  nameWithType: CivicAddress.PostalCode
  fullName: System.Device.Location.CivicAddress.PostalCode
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Pobiera lub ustawia kod pocztowy lokalizacji."
  syntax:
    content: public string PostalCode { get; set; }
    return:
      type: System.String
      description: "Zwraca kod pocztowy lokalizacji. Jeśli nie podano danych, zwraca <xref:System.String>.</xref:System.String>"
  overload: System.Device.Location.CivicAddress.PostalCode*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.CivicAddress.StateProvince
  id: StateProvince
  parent: System.Device.Location.CivicAddress
  langs:
  - csharp
  name: StateProvince
  nameWithType: CivicAddress.StateProvince
  fullName: System.Device.Location.CivicAddress.StateProvince
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Pobiera lub ustawia województwa lokalizacji."
  syntax:
    content: public string StateProvince { get; set; }
    return:
      type: System.String
      description: "Zwraca województwa lokalizacji. Jeśli nie podano danych, zwraca <xref:System.String>.</xref:System.String>"
  overload: System.Device.Location.CivicAddress.StateProvince*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.CivicAddress.Unknown
  id: Unknown
  parent: System.Device.Location.CivicAddress
  langs:
  - csharp
  name: Unknown
  nameWithType: CivicAddress.Unknown
  fullName: System.Device.Location.CivicAddress.Unknown
  type: Field
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Reprezentuje <xref href=&quot;System.Device.Location.CivicAddress&quot;> </xref> który nie zawiera żadnych danych."
  remarks: "Użyj <xref:System.Device.Location.CivicAddress.IsUnknown%2A>Aby sprawdzić, czy <xref:System.Device.Location.CivicAddress>zawiera dane.</xref:System.Device.Location.CivicAddress> </xref:System.Device.Location.CivicAddress.IsUnknown%2A>"
  example:
  - "The following example uses <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to check the <xref:System.Device.Location.CivicAddress> that is returned from <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> before the civic address is printed out.  \n  \n [!code-cs[System.Device.Location.ResolveCivicAddressSync#2](~/add/codesnippet/csharp/resolveaddresssync/resolvecivicaddresssync.cs#2)]\n [!code-vb[System.Device.Location.ResolveCivicAddressSync#2](~/add/codesnippet/visualbasic/resolvecivicaddresssync/resolvecivicaddresssync.vb#2)]"
  syntax:
    content: public static readonly System.Device.Location.CivicAddress Unknown;
    return:
      type: System.Device.Location.CivicAddress
      description: "Do dodania."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Device.Location.CivicAddress.#ctor
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: CivicAddress()
  nameWithType: CivicAddress.CivicAddress()
  fullName: System.Device.Location.CivicAddress.CivicAddress()
- uid: System.Device.Location.CivicAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: CivicAddress(String,String,String,String,String,String,String,String)
  nameWithType: CivicAddress.CivicAddress(String,String,String,String,String,String,String,String)
  fullName: System.Device.Location.CivicAddress.CivicAddress(String,String,String,String,String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Device.Location.CivicAddress.AddressLine1
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: AddressLine1
  nameWithType: CivicAddress.AddressLine1
  fullName: System.Device.Location.CivicAddress.AddressLine1
- uid: System.Device.Location.CivicAddress.AddressLine2
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: AddressLine2
  nameWithType: CivicAddress.AddressLine2
  fullName: System.Device.Location.CivicAddress.AddressLine2
- uid: System.Device.Location.CivicAddress.Building
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: Building
  nameWithType: CivicAddress.Building
  fullName: System.Device.Location.CivicAddress.Building
- uid: System.Device.Location.CivicAddress.City
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: City
  nameWithType: CivicAddress.City
  fullName: System.Device.Location.CivicAddress.City
- uid: System.Device.Location.CivicAddress.CountryRegion
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: CountryRegion
  nameWithType: CivicAddress.CountryRegion
  fullName: System.Device.Location.CivicAddress.CountryRegion
- uid: System.Device.Location.CivicAddress.FloorLevel
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: FloorLevel
  nameWithType: CivicAddress.FloorLevel
  fullName: System.Device.Location.CivicAddress.FloorLevel
- uid: System.Device.Location.CivicAddress.IsUnknown
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: IsUnknown
  nameWithType: CivicAddress.IsUnknown
  fullName: System.Device.Location.CivicAddress.IsUnknown
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Device.Location.CivicAddress.PostalCode
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: PostalCode
  nameWithType: CivicAddress.PostalCode
  fullName: System.Device.Location.CivicAddress.PostalCode
- uid: System.Device.Location.CivicAddress.StateProvince
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: StateProvince
  nameWithType: CivicAddress.StateProvince
  fullName: System.Device.Location.CivicAddress.StateProvince
- uid: System.Device.Location.CivicAddress.Unknown
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: Unknown
  nameWithType: CivicAddress.Unknown
  fullName: System.Device.Location.CivicAddress.Unknown
- uid: System.Device.Location.CivicAddress
  parent: System.Device.Location
  isExternal: false
  name: CivicAddress
  nameWithType: CivicAddress
  fullName: System.Device.Location.CivicAddress
- uid: System.Device.Location.CivicAddress.#ctor*
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: CivicAddress
  nameWithType: CivicAddress.CivicAddress
- uid: System.Device.Location.CivicAddress.AddressLine1*
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: AddressLine1
  nameWithType: CivicAddress.AddressLine1
- uid: System.Device.Location.CivicAddress.AddressLine2*
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: AddressLine2
  nameWithType: CivicAddress.AddressLine2
- uid: System.Device.Location.CivicAddress.Building*
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: Building
  nameWithType: CivicAddress.Building
- uid: System.Device.Location.CivicAddress.City*
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: City
  nameWithType: CivicAddress.City
- uid: System.Device.Location.CivicAddress.CountryRegion*
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: CountryRegion
  nameWithType: CivicAddress.CountryRegion
- uid: System.Device.Location.CivicAddress.FloorLevel*
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: FloorLevel
  nameWithType: CivicAddress.FloorLevel
- uid: System.Device.Location.CivicAddress.IsUnknown*
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: IsUnknown
  nameWithType: CivicAddress.IsUnknown
- uid: System.Device.Location.CivicAddress.PostalCode*
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: PostalCode
  nameWithType: CivicAddress.PostalCode
- uid: System.Device.Location.CivicAddress.StateProvince*
  parent: System.Device.Location.CivicAddress
  isExternal: false
  name: StateProvince
  nameWithType: CivicAddress.StateProvince
