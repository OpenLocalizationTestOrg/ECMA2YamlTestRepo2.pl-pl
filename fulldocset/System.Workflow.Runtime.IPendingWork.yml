### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.IPendingWork
  id: IPendingWork
  children:
  - System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)
  - System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)
  - System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)
  langs:
  - csharp
  name: IPendingWork
  nameWithType: IPendingWork
  fullName: System.Workflow.Runtime.IPendingWork
  type: Interface
  summary: "Udostępnia metody do udziału w wsadu roboczego."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Interfejs IPendingWork jest dostępna dla usług, które mają należeć aparatu wykonawczego workflow przetwarzanie wsadowe mechanizmu. Przetwarzanie wsadowe mechanizm jest szczególnie przydatna w przypadku usług korzystających z magazynu trwałego. Często jest to istotne w takich przypadkach do zapewniania spójności między trwałe Magazyn używany przez usługę i stan wewnętrzny aparatu środowiska uruchomieniowego przepływu pracy.       Jeśli chcesz uczestniczyć w dostarczonych przez partie transakcji przepływu pracy z usługą <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, musi implementować metody zdefiniowane przez interfejs IPendingWork.</xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> Wywoła aparatu wykonawczego workflow <xref:System.Workflow.Runtime.IPendingWork.Commit%2A>metody w usłudze można przekazać partii.</xref:System.Workflow.Runtime.IPendingWork.Commit%2A>       <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>Klasa implementuje interfejs IPendingWork.</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public interface IPendingWork
  implements: []
  platform:
  - net462
- uid: System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)
  id: Commit(System.Transactions.Transaction,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  langs:
  - csharp
  name: Commit(Transaction,ICollection)
  nameWithType: IPendingWork.Commit(Transaction,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Zatwierdza lista elementów roboczych przy użyciu określonego <xref href=&quot;System.Transactions.Transaction&quot;> </xref> obiektu."
  remarks: "Aparatu wykonawczego workflow wywołuje metodę Commit podczas jego semantyki dyktowania, że oczekujące pracy w trybie wsadowym pracy powinny być zatwierdzone. Po osiągnięciu punktu zatwierdzania, aparatu wykonawczego workflow wywołuje metodę zatwierdzania na każdym <xref:System.Workflow.Runtime.IPendingWork>obiektu w jego wsadu roboczego; aparatu wykonawczego workflow przekazuje metody Commit kolekcji elementów, skojarzonego z tym <xref:System.Workflow.Runtime.IPendingWork>obiektu.</xref:System.Workflow.Runtime.IPendingWork> </xref:System.Workflow.Runtime.IPendingWork> Wszystkie informacje o pracy w partii zakończy się powodzeniem, albo żadna z jej zakończy się pomyślnie. Powinien zgłosić wyjątek, jeśli dowolne elementy pracy przekazywany do metody Commit w implementacji nie można zatwierdzić. W zależności od implementacji może być konieczne wykonanie pewnych wycofywania w metodę zatwierdzania, jeśli nie można przekazać jej elementów roboczych. Jeśli pomyślnie aparatu wykonawczego workflow zatwierdza wszystkie informacje o pracy w trybie wsadowym pracy, wywołuje metodę <xref:System.Workflow.Runtime.IPendingWork.Complete%2A>z `succeeded` ustawiona `true`; w przeciwnym razie wywołuje <xref:System.Workflow.Runtime.IPendingWork.Complete%2A>z `succeeded` ustawioną `false`.</xref:System.Workflow.Runtime.IPendingWork.Complete%2A> </xref:System.Workflow.Runtime.IPendingWork.Complete%2A>"
  syntax:
    content: public void Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "<xref href=&quot;System.Transactions.Transaction&quot;> </xref> Skojarzone z pracą oczekujące."
    - id: items
      type: System.Collections.ICollection
      description: "Elementy robocze można zatwierdzić."
  overload: System.Workflow.Runtime.IPendingWork.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)
  id: Complete(System.Boolean,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  langs:
  - csharp
  name: Complete(Boolean,ICollection)
  nameWithType: IPendingWork.Complete(Boolean,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Wywoływane, gdy transakcja została ukończona."
  remarks: "Jeśli `succeeded` jest `true`, transakcja zakończyła się pomyślnie i można zwolnić zasoby używane przez wsadu roboczego. Jeśli `succeeded` jest `false`, transakcji nie powiodło się. W zależności od implementacji można wykonać żadnych odpowiednich zbiorczego do pracy w trybie wsadowym pracy po transakcji nie powiodło się."
  syntax:
    content: public void Complete (bool succeeded, System.Collections.ICollection items);
    parameters:
    - id: succeeded
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli transakcja zakończyła się pomyślnie; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: items
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Elementów roboczych.</xref:System.Collections.ICollection>"
  overload: System.Workflow.Runtime.IPendingWork.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)
  id: MustCommit(System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  langs:
  - csharp
  name: MustCommit(ICollection)
  nameWithType: IPendingWork.MustCommit(ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Umożliwia elementów wsadu roboczego do potwierdzenia, czy ich musi zatwierdzić natychmiast."
  remarks: "Jeśli zwróci MustCommit `false`, pracy można odroczyć do przyszłych zatwierdzenia punktu. Jeśli dowolny z elementów muszą być zatwierdzone, zwracany jest `true` i wszystkie elementy zostaną przekazane do bieżącego punkt zatwierdzania. Aby uzyskać informacje dotyczące zatwierdzania możliwych punktów zobacz <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>klasy.</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>"
  syntax:
    content: public bool MustCommit (System.Collections.ICollection items);
    parameters:
    - id: items
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Elementów roboczych.</xref:System.Collections.ICollection>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dowolny element w kolekcji musi być zatwierdzone natychmiast; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Runtime.IPendingWork.MustCommit*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Commit(Transaction,ICollection)
  nameWithType: IPendingWork.Commit(Transaction,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Commit(Transaction,ICollection)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Complete(Boolean,ICollection)
  nameWithType: IPendingWork.Complete(Boolean,ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.Complete(Boolean,ICollection)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: MustCommit(ICollection)
  nameWithType: IPendingWork.MustCommit(ICollection)
  fullName: System.Workflow.Runtime.IPendingWork.MustCommit(ICollection)
- uid: System.Workflow.Runtime.IPendingWork.Commit*
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Commit
  nameWithType: IPendingWork.Commit
- uid: System.Workflow.Runtime.IPendingWork.Complete*
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: Complete
  nameWithType: IPendingWork.Complete
- uid: System.Workflow.Runtime.IPendingWork.MustCommit*
  parent: System.Workflow.Runtime.IPendingWork
  isExternal: false
  name: MustCommit
  nameWithType: IPendingWork.MustCommit
