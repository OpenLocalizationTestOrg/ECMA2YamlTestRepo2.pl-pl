### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.Evidence
  id: Evidence
  children:
  - System.Security.Policy.Evidence.#ctor
  - System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)
  - System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])
  - System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])
  - System.Security.Policy.Evidence.AddAssembly(System.Object)
  - System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)
  - System.Security.Policy.Evidence.AddHost(System.Object)
  - System.Security.Policy.Evidence.AddHostEvidence``1(``0)
  - System.Security.Policy.Evidence.Clear
  - System.Security.Policy.Evidence.Clone
  - System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)
  - System.Security.Policy.Evidence.Count
  - System.Security.Policy.Evidence.GetAssemblyEnumerator
  - System.Security.Policy.Evidence.GetAssemblyEvidence``1
  - System.Security.Policy.Evidence.GetEnumerator
  - System.Security.Policy.Evidence.GetHostEnumerator
  - System.Security.Policy.Evidence.GetHostEvidence``1
  - System.Security.Policy.Evidence.IsReadOnly
  - System.Security.Policy.Evidence.IsSynchronized
  - System.Security.Policy.Evidence.Locked
  - System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)
  - System.Security.Policy.Evidence.RemoveType(System.Type)
  - System.Security.Policy.Evidence.SyncRoot
  langs:
  - csharp
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
  type: Class
  summary: "Definiuje zestaw informacje, które stanowi wejściowych do decyzji dotyczących zasad zabezpieczeń. Ta klasa nie może być dziedziczona."
  remarks: "Często występującą formą dowód obejmują podpisów i lokalizacja źródła kodu, ale potencjalnie może być dowolna. Obiekty dowolnego typu, które są rozpoznawane przez zasady zabezpieczeń przedstawić dowody.       Zasady zabezpieczeń składa się z grup kodów; określonego zestawu (podstawowa jednostka kodu przyznawania uprawnień zabezpieczeń) jest członkiem grupy kodów spełnia warunek członkostwa grupy kodu. Dowód jest zestawem danych wejściowych do zasad, które warunki członkostwa umożliwia określenie, do których grup kodów należy zestawu.       Klasa dowód jest kolekcją (zobacz <xref:System.Collections.ICollection>) zawierający zestaw obiektów, które reprezentują dowód.</xref:System.Collections.ICollection> Ta klasa zawiera dwa zestawy, które odpowiadają źródło dowody: host dowód i świadectwa zestawu.       Zasady można uzyskać dowód z dwóch różnych źródeł, oceniając uprawnienia dla kodu.      - `Host evidence` jest udostępniany przez hosta i jest dostępny tylko przez hosty, które zostały przyznane <xref:System.Security.Permissions.SecurityPermissionFlag>uprawnień.</xref:System.Security.Permissions.SecurityPermissionFlag> Zazwyczaj jest to świadectwo pochodzenia kodu i podpisy cyfrowe w zestawie. Zwykle zawiera dowody dotyczące pochodzenia <xref:System.Security.Policy.Url>, <xref:System.Security.Policy.Site>, i <xref:System.Security.Policy.Zone>dowód.</xref:System.Security.Policy.Zone> </xref:System.Security.Policy.Site> </xref:System.Security.Policy.Url> Podpisy odwoływać się do wydawcy oprogramowania (podpis AuthentiCode X.509v3) i tożsamości silnej nazwy. Oba rodzaje tożsamości na podstawie podpisu cyfrowego są wbudowane w zestawie, ale musi być zweryfikowany i przekazanego zasadami przez hosta; Po załadowaniu systemu zabezpieczeń weryfikuje podpis. Następnie system tworzy odpowiedni dowód i przekazuje je do zasad tylko wtedy, gdy odpowiedni podpis jest nieprawidłowy.      - `Assembly evidence` wchodzi w skład zestawu. Deweloperzy i Administratorzy można dołączyć dowód niestandardowych do zestawu do rozszerzania zbiór dowody dla zasad. Świadectwa zestawu mogą być dodawane tylko w czasie generowania zestawu, który występuje przed zestaw jest podpisany. Domyślne zasady zabezpieczeń systemu ignoruje dowód dostarczony do zestawu, ale zasady można rozszerzyć, aby zaakceptować."
  example:
  - "The following code example demonstrates how to create new Evidence classes with both host evidence and assembly evidence.  \n  \n [!code-vb[System.Security.Policy.Evidence#1](~/add/codesnippet/visualbasic/t-system.security.policy_1_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#1](~/add/codesnippet/cpp/t-system.security.policy_1_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#1](~/add/codesnippet/csharp/t-system.security.policy_1_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class Evidence : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.#ctor
  id: '#ctor'
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Evidence()
  nameWithType: Evidence.Evidence()
  fullName: System.Security.Policy.Evidence.Evidence()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicjuje nowe puste wystąpienie elementu <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> klasy."
  remarks: ''
  example:
  - "The following code example shows the use of the Evidence constructor. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#15](~/add/codesnippet/visualbasic/m-system.security.policy_14_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#15](~/add/codesnippet/cpp/m-system.security.policy_14_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#15](~/add/codesnippet/csharp/m-system.security.policy_14_1.cs)]"
  syntax:
    content: public Evidence ();
    parameters: []
  overload: System.Security.Policy.Evidence.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)
  id: '#ctor(System.Security.Policy.Evidence)'
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Evidence(Evidence)
  nameWithType: Evidence.Evidence(Evidence)
  fullName: System.Security.Policy.Evidence.Evidence(Evidence)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> klasy z kopia pobieżna istniejącej."
  remarks: ''
  example:
  - "The following code example shows the use of the Evidence constructor. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#12](~/add/codesnippet/visualbasic/m-system.security.policy_31_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#12](~/add/codesnippet/cpp/m-system.security.policy_31_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#12](~/add/codesnippet/csharp/m-system.security.policy_31_1.cs)]"
  syntax:
    content: public Evidence (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> Wystąpienie, z którym chcesz utworzyć nowe wystąpienie. To wystąpienie nie jest bezpośrednie kopiowane."
  overload: System.Security.Policy.Evidence.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> evidence </code> Parametr nie jest prawidłowym wystąpieniem <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])
  id: '#ctor(System.Object[],System.Object[])'
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Evidence(Object[],Object[])
  nameWithType: Evidence.Evidence(Object[],Object[])
  fullName: System.Security.Policy.Evidence.Evidence(Object[],Object[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> klasy pochodzące z wielu zestawów hosta i zestawu dowody."
  remarks: ''
  example:
  - "The following code example shows the use of the Evidence constructor. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#3](~/add/codesnippet/visualbasic/m-system.security.policy_2_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#3](~/add/codesnippet/cpp/m-system.security.policy_2_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#3](~/add/codesnippet/csharp/m-system.security.policy_2_1.cs)]"
  syntax:
    content: public Evidence (object[] hostEvidence, object[] assemblyEvidence);
    parameters:
    - id: hostEvidence
      type: System.Object[]
      description: "Dowód hosta, z którym chcesz utworzyć nowe wystąpienie."
    - id: assemblyEvidence
      type: System.Object[]
      description: "Świadectwa zestawu, w którym można utworzyć nowego wystąpienia."
  overload: System.Security.Policy.Evidence.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])
  id: '#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])'
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Evidence(EvidenceBase[],EvidenceBase[])
  nameWithType: Evidence.Evidence(EvidenceBase[],EvidenceBase[])
  fullName: System.Security.Policy.Evidence.Evidence(EvidenceBase[],EvidenceBase[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> klasy pochodzące z wielu zestawów hosta i zestawu dowody."
  remarks: "Ten konstruktor tworzy nowe wystąpienie klasy przy użyciu obiektów dowody, które dziedziczą z <xref:System.Security.Policy.EvidenceBase>klasy.</xref:System.Security.Policy.EvidenceBase>"
  syntax:
    content: public Evidence (System.Security.Policy.EvidenceBase[] hostEvidence, System.Security.Policy.EvidenceBase[] assemblyEvidence);
    parameters:
    - id: hostEvidence
      type: System.Security.Policy.EvidenceBase[]
      description: "Dowód hosta, z którym chcesz utworzyć nowe wystąpienie."
    - id: assemblyEvidence
      type: System.Security.Policy.EvidenceBase[]
      description: "Świadectwa zestawu, w którym można utworzyć nowego wystąpienia."
  overload: System.Security.Policy.Evidence.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.AddAssembly(System.Object)
  id: AddAssembly(System.Object)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: AddAssembly(Object)
  nameWithType: Evidence.AddAssembly(Object)
  fullName: System.Security.Policy.Evidence.AddAssembly(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Dodaje dowód określonego zestawu z zestawem świadectwo."
  remarks: "Ta metoda dowodu pochodzące z zestawu.      > [!NOTE] > Tej metody nie przeprowadza wyboru, aby zapobiec dodaniu zduplikowane typy dowodu. Wiele obiektów świadectwa zestawu może istnieć w tym samym czasie."
  example:
  - "The following code example shows the use of the AddAssembly method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#4](~/add/codesnippet/visualbasic/m-system.security.policy_12_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#4](~/add/codesnippet/cpp/m-system.security.policy_12_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#4](~/add/codesnippet/csharp/m-system.security.policy_12_1.cs)]"
  syntax:
    content: public void AddAssembly (object id);
    parameters:
    - id: id
      type: System.Object
      description: "Dowolny obiekt dowód."
  overload: System.Security.Policy.Evidence.AddAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>ma wartość null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>id</code>nie jest możliwy do serializacji."
  platform:
  - net462
- uid: System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)
  id: AddAssemblyEvidence``1(``0)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: AddAssemblyEvidence(T)
  nameWithType: Evidence.AddAssemblyEvidence(T)
  fullName: System.Security.Policy.Evidence.AddAssemblyEvidence(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: 'public void AddAssemblyEvidence<T> (T evidence) where T : System.Security.Policy.EvidenceBase;'
    parameters:
    - id: evidence
      type: T
      description: "Do dodania."
  overload: System.Security.Policy.Evidence.AddAssemblyEvidence<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.AddHost(System.Object)
  id: AddHost(System.Object)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: AddHost(Object)
  nameWithType: Evidence.AddHost(Object)
  fullName: System.Security.Policy.Evidence.AddHost(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Dodaje określony dowodów dostarczonych przez hosta z zestawem świadectwo."
  remarks: "Użyj tej metody dla dowody dostarczone przez hosta.      > [!NOTE] > Tej metody nie przeprowadza wyboru, aby zapobiec dodaniu zduplikowane typy dowodu. Wiele hosta dowód, że obiekty może istnieć w tym samym czasie."
  example:
  - "The following code example shows the use of the AddHost method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#2](~/add/codesnippet/visualbasic/m-system.security.policy_20_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#2](~/add/codesnippet/cpp/m-system.security.policy_20_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#2](~/add/codesnippet/csharp/m-system.security.policy_20_1.cs)]"
  syntax:
    content: public void AddHost (object id);
    parameters:
    - id: id
      type: System.Object
      description: "Dowolny obiekt dowód."
  overload: System.Security.Policy.Evidence.AddHost*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>ma wartość null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>id</code>nie jest możliwy do serializacji."
  platform:
  - net462
- uid: System.Security.Policy.Evidence.AddHostEvidence``1(``0)
  id: AddHostEvidence``1(``0)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: AddHostEvidence(T)
  nameWithType: Evidence.AddHostEvidence(T)
  fullName: System.Security.Policy.Evidence.AddHostEvidence(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: 'public void AddHostEvidence<T> (T evidence) where T : System.Security.Policy.EvidenceBase;'
    parameters:
    - id: evidence
      type: T
      description: "Do dodania."
  overload: System.Security.Policy.Evidence.AddHostEvidence<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Clear
  id: Clear
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Clear()
  nameWithType: Evidence.Clear()
  fullName: System.Security.Policy.Evidence.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Usuwa dowód hosta i zestawu z zestawem świadectwo."
  remarks: "Wyczyść usuwa dowody wyliczenia hosta i zestawu zarówno ustawienie `null`."
  example:
  - "The following code example shows the use of the Clear method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#13](~/add/codesnippet/visualbasic/m-system.security.policy_16_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#13](~/add/codesnippet/cpp/m-system.security.policy_16_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#13](~/add/codesnippet/csharp/m-system.security.policy_16_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Policy.Evidence.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Clone
  id: Clone
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Clone()
  nameWithType: Evidence.Clone()
  fullName: System.Security.Policy.Evidence.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Zwraca kopię tego obiektu dowód."
  remarks: "Duplikat jest kompletna kopia, która obejmuje wszystkie obiekty dowód w kolekcji."
  syntax:
    content: public System.Security.Policy.Evidence Clone ();
    parameters: []
    return:
      type: System.Security.Policy.Evidence
      description: "Kopię tego obiektu dowód."
  overload: System.Security.Policy.Evidence.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: Evidence.CopyTo(Array,Int32)
  fullName: System.Security.Policy.Evidence.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Kopie dowody obiektów do <xref:System.Array>.</xref:System.Array>"
  remarks: ''
  example:
  - "The following code example shows the use of the CopyTo method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#6](~/add/codesnippet/visualbasic/m-system.security.policy_0_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#6](~/add/codesnippet/cpp/m-system.security.policy_0_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#6](~/add/codesnippet/csharp/m-system.security.policy_0_1.cs)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Tablica docelowa, do którego zostaną skopiowane dowód obiektów."
    - id: index
      type: System.Int32
      description: "Liczony od zera pozycja w macierzy, do którego należy zacząć kopiowanie dowód obiektów."
  overload: System.Security.Policy.Evidence.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>ma wartość null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index </code>jest spoza zakresu tablicy docelowej<code>.</code>"
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Count
  id: Count
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Count
  nameWithType: Evidence.Count
  fullName: System.Security.Policy.Evidence.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera liczbę obiektów dowód w zestawie dowód."
  remarks: ''
  example:
  - "The following code example shows the use of the Count property. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#12](~/add/codesnippet/visualbasic/p-system.security.policy_13_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#12](~/add/codesnippet/cpp/p-system.security.policy_13_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#12](~/add/codesnippet/csharp/p-system.security.policy_13_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Liczba obiektów dowód w zestawie dowód."
  overload: System.Security.Policy.Evidence.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetAssemblyEnumerator
  id: GetAssemblyEnumerator
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetAssemblyEnumerator()
  nameWithType: Evidence.GetAssemblyEnumerator()
  fullName: System.Security.Policy.Evidence.GetAssemblyEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Wylicza dowodów przez zestaw."
  remarks: ''
  example:
  - "The following example shows the use of the GetAssemblyEnumerator method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#3](~/add/codesnippet/visualbasic/m-system.security.policy_22_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#3](~/add/codesnippet/cpp/m-system.security.policy_22_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#3](~/add/codesnippet/csharp/m-system.security.policy_22_1.cs)]"
  syntax:
    content: public System.Collections.IEnumerator GetAssemblyEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Moduł wyliczający dowodu dodane przez <xref:System.Security.Policy.Evidence.AddAssembly*>metody.</xref:System.Security.Policy.Evidence.AddAssembly*>"
  overload: System.Security.Policy.Evidence.GetAssemblyEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetAssemblyEvidence``1
  id: GetAssemblyEvidence``1
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetAssemblyEvidence()
  nameWithType: Evidence.GetAssemblyEvidence()
  fullName: System.Security.Policy.Evidence.GetAssemblyEvidence()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: 'public T GetAssemblyEvidence<T> () where T : System.Security.Policy.EvidenceBase;'
    parameters: []
    return:
      type: T
      description: "Do dodania."
  overload: System.Security.Policy.Evidence.GetAssemblyEvidence<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Evidence.GetEnumerator()
  fullName: System.Security.Policy.Evidence.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Wylicza wszystkie dowody w zestawie, zarówno zapewnianej przez hosta i zapewnianej przez zestaw."
  remarks: ''
  example:
  - "The following code example shows the use of the GetEnumerator method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#14](~/add/codesnippet/visualbasic/m-system.security.policy_5_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#14](~/add/codesnippet/cpp/m-system.security.policy_5_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#14](~/add/codesnippet/csharp/m-system.security.policy_5_1.cs)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Moduł wyliczający dowodu dodane przez oba <> </> *> — metoda i <> </> *> metody."
  overload: System.Security.Policy.Evidence.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetHostEnumerator
  id: GetHostEnumerator
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetHostEnumerator()
  nameWithType: Evidence.GetHostEnumerator()
  fullName: System.Security.Policy.Evidence.GetHostEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Wylicza dowody dostarczone przez hosta."
  remarks: ''
  example:
  - "The following example shows the use of the GetHostEnumerator method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#2](~/add/codesnippet/visualbasic/m-system.security.policy_35_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#2](~/add/codesnippet/cpp/m-system.security.policy_35_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#2](~/add/codesnippet/csharp/m-system.security.policy_35_1.cs)]"
  syntax:
    content: public System.Collections.IEnumerator GetHostEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Moduł wyliczający dowodu dodane przez <xref:System.Security.Policy.Evidence.AddHost*>metody.</xref:System.Security.Policy.Evidence.AddHost*>"
  overload: System.Security.Policy.Evidence.GetHostEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetHostEvidence``1
  id: GetHostEvidence``1
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetHostEvidence()
  nameWithType: Evidence.GetHostEvidence()
  fullName: System.Security.Policy.Evidence.GetHostEvidence()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: 'public T GetHostEvidence<T> () where T : System.Security.Policy.EvidenceBase;'
    parameters: []
    return:
      type: T
      description: "Do dodania."
  overload: System.Security.Policy.Evidence.GetHostEvidence<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.IsReadOnly
  id: IsReadOnly
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: Evidence.IsReadOnly
  fullName: System.Security.Policy.Evidence.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera wartość wskazującą, czy zestaw dowód jest przeznaczony tylko do odczytu."
  remarks: "Kod aplikacji nie korzysta z zwykle tej właściwości."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Zawsze <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, ponieważ tylko do odczytu dowód zestawy nie są obsługiwane."
  overload: System.Security.Policy.Evidence.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.IsSynchronized
  id: IsSynchronized
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: Evidence.IsSynchronized
  fullName: System.Security.Policy.Evidence.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera wartość wskazującą, czy zestaw dowód jest bezpieczne wątkowo."
  remarks: "Kod aplikacji nie korzysta z zwykle tej właściwości."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Zawsze <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> wątkowo dowód zestawy nie są obsługiwane."
  overload: System.Security.Policy.Evidence.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Locked
  id: Locked
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Locked
  nameWithType: Evidence.Locked
  fullName: System.Security.Policy.Evidence.Locked
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera lub ustawia wartość wskazującą, czy dowody ma być zablokowana."
  remarks: ''
  example:
  - "The following code example shows the use of the Locked property. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#7](~/add/codesnippet/visualbasic/p-system.security.policy_2_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#7](~/add/codesnippet/cpp/p-system.security.policy_2_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#7](~/add/codesnippet/csharp/p-system.security.policy_2_1.cs)]"
  syntax:
    content: public bool Locked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli dowody jest zablokowany; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.Evidence.Locked*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)
  id: Merge(System.Security.Policy.Evidence)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Merge(Evidence)
  nameWithType: Evidence.Merge(Evidence)
  fullName: System.Security.Policy.Evidence.Merge(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Scala dowody określonego zestawu do bieżącego zestawu dowód."
  remarks: "Każdy obiekt dowód w zestawie dowód określony jest dodawana do zestawu i hosta zestawy bieżącego zestawu dowód, zgodnie z zestawów, z których pochodzą.      > [!NOTE] > Tej metody nie przeprowadza wyboru, aby zapobiec dodaniu zduplikowane typy dowodu. Wiele zestawów i obiektów dowód hosta może istnieć w tym samym czasie."
  example:
  - "The following code example shows the use of the Merge method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#10](~/add/codesnippet/visualbasic/m-system.security.policy_9_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#10](~/add/codesnippet/cpp/m-system.security.policy_9_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#10](~/add/codesnippet/csharp/m-system.security.policy_9_1.cs)]"
  syntax:
    content: public void Merge (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Dowody ustawioną można scalić w bieżącym zestawie dowód."
  overload: System.Security.Policy.Evidence.Merge*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> evidence </code> Parametr nie jest prawidłowym wystąpieniem <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<xref:System.Security.Policy.Evidence.Locked*>jest <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, nie ma kod, który wywołuje tę metodę <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>i <code> evidence </code> parametr ma listy hostów, który nie jest pusty.</xref:System.Security.Policy.Evidence.Locked*>"
  platform:
  - net462
- uid: System.Security.Policy.Evidence.RemoveType(System.Type)
  id: RemoveType(System.Type)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: RemoveType(Type)
  nameWithType: Evidence.RemoveType(Type)
  fullName: System.Security.Policy.Evidence.RemoveType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Usuwa dowody dla danego typu z hosta i zestawu wyliczenia."
  remarks: "Można potwierdzić wyniki wykonania metody RemoveType przy użyciu <xref:System.Security.Policy.Evidence.GetAssemblyEnumerator%2A>— Metoda i <xref:System.Security.Policy.Evidence.GetHostEnumerator%2A>metody.</xref:System.Security.Policy.Evidence.GetHostEnumerator%2A> </xref:System.Security.Policy.Evidence.GetAssemblyEnumerator%2A>"
  example:
  - "The following code example shows the use of the RemoveType method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#11](~/add/codesnippet/visualbasic/m-system.security.policy_36_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#11](~/add/codesnippet/cpp/m-system.security.policy_36_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#11](~/add/codesnippet/csharp/m-system.security.policy_36_1.cs)]"
  syntax:
    content: public void RemoveType (Type t);
    parameters:
    - id: t
      type: System.Type
      description: "Typ dowodu do usunięcia."
  overload: System.Security.Policy.Evidence.RemoveType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>t</code>ma wartość null."
  platform:
  - net462
- uid: System.Security.Policy.Evidence.SyncRoot
  id: SyncRoot
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: SyncRoot
  nameWithType: Evidence.SyncRoot
  fullName: System.Security.Policy.Evidence.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Pobiera głównego synchronizacji."
  remarks: "Ta właściwość nie jest zwykle używana przez kod aplikacji."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Zawsze <xref uid=&quot;langword_csharp_this&quot; name=&quot;this&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Me&quot; name=&quot;Me&quot; href=&quot;&quot;> </xref> w języku Visual Basic), ponieważ synchronizacja dowód zestawów nie jest obsługiwana."
  overload: System.Security.Policy.Evidence.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Security.Policy.Evidence.#ctor
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence()
  nameWithType: Evidence.Evidence()
  fullName: System.Security.Policy.Evidence.Evidence()
- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence(Evidence)
  nameWithType: Evidence.Evidence(Evidence)
  fullName: System.Security.Policy.Evidence.Evidence(Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence(Object[],Object[])
  nameWithType: Evidence.Evidence(Object[],Object[])
  fullName: System.Security.Policy.Evidence.Evidence(Object[],Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence(EvidenceBase[],EvidenceBase[])
  nameWithType: Evidence.Evidence(EvidenceBase[],EvidenceBase[])
  fullName: System.Security.Policy.Evidence.Evidence(EvidenceBase[],EvidenceBase[])
- uid: System.Security.Policy.EvidenceBase[]
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase[]
  spec.csharp:
  - uid: System.Security.Policy.EvidenceBase
    name: EvidenceBase
    nameWithType: EvidenceBase
    fullName: EvidenceBase[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.Evidence.AddAssembly(System.Object)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddAssembly(Object)
  nameWithType: Evidence.AddAssembly(Object)
  fullName: System.Security.Policy.Evidence.AddAssembly(Object)
- uid: System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddAssemblyEvidence(T)
  nameWithType: Evidence.AddAssemblyEvidence(T)
  fullName: System.Security.Policy.Evidence.AddAssemblyEvidence(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Security.Policy.Evidence.AddHost(System.Object)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddHost(Object)
  nameWithType: Evidence.AddHost(Object)
  fullName: System.Security.Policy.Evidence.AddHost(Object)
- uid: System.Security.Policy.Evidence.AddHostEvidence``1(``0)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddHostEvidence(T)
  nameWithType: Evidence.AddHostEvidence(T)
  fullName: System.Security.Policy.Evidence.AddHostEvidence(T)
- uid: System.Security.Policy.Evidence.Clear
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Clear()
  nameWithType: Evidence.Clear()
  fullName: System.Security.Policy.Evidence.Clear()
- uid: System.Security.Policy.Evidence.Clone
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Clone()
  nameWithType: Evidence.Clone()
  fullName: System.Security.Policy.Evidence.Clone()
- uid: System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: Evidence.CopyTo(Array,Int32)
  fullName: System.Security.Policy.Evidence.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.Evidence.Count
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Count
  nameWithType: Evidence.Count
  fullName: System.Security.Policy.Evidence.Count
- uid: System.Security.Policy.Evidence.GetAssemblyEnumerator
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetAssemblyEnumerator()
  nameWithType: Evidence.GetAssemblyEnumerator()
  fullName: System.Security.Policy.Evidence.GetAssemblyEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.Policy.Evidence.GetAssemblyEvidence``1
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetAssemblyEvidence()
  nameWithType: Evidence.GetAssemblyEvidence()
  fullName: System.Security.Policy.Evidence.GetAssemblyEvidence()
- uid: System.Security.Policy.Evidence.GetEnumerator
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetEnumerator()
  nameWithType: Evidence.GetEnumerator()
  fullName: System.Security.Policy.Evidence.GetEnumerator()
- uid: System.Security.Policy.Evidence.GetHostEnumerator
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetHostEnumerator()
  nameWithType: Evidence.GetHostEnumerator()
  fullName: System.Security.Policy.Evidence.GetHostEnumerator()
- uid: System.Security.Policy.Evidence.GetHostEvidence``1
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetHostEvidence()
  nameWithType: Evidence.GetHostEvidence()
  fullName: System.Security.Policy.Evidence.GetHostEvidence()
- uid: System.Security.Policy.Evidence.IsReadOnly
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: IsReadOnly
  nameWithType: Evidence.IsReadOnly
  fullName: System.Security.Policy.Evidence.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.Evidence.IsSynchronized
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: IsSynchronized
  nameWithType: Evidence.IsSynchronized
  fullName: System.Security.Policy.Evidence.IsSynchronized
- uid: System.Security.Policy.Evidence.Locked
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Locked
  nameWithType: Evidence.Locked
  fullName: System.Security.Policy.Evidence.Locked
- uid: System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Merge(Evidence)
  nameWithType: Evidence.Merge(Evidence)
  fullName: System.Security.Policy.Evidence.Merge(Evidence)
- uid: System.Security.Policy.Evidence.RemoveType(System.Type)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: RemoveType(Type)
  nameWithType: Evidence.RemoveType(Type)
  fullName: System.Security.Policy.Evidence.RemoveType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Policy.Evidence.SyncRoot
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: SyncRoot
  nameWithType: Evidence.SyncRoot
  fullName: System.Security.Policy.Evidence.SyncRoot
- uid: System.Security.Policy.Evidence.#ctor*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence
  nameWithType: Evidence.Evidence
- uid: System.Security.Policy.Evidence.AddAssembly*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddAssembly
  nameWithType: Evidence.AddAssembly
- uid: System.Security.Policy.Evidence.AddAssemblyEvidence<T>*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddAssemblyEvidence<T>
  nameWithType: Evidence.AddAssemblyEvidence<T>
- uid: System.Security.Policy.Evidence.AddHost*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddHost
  nameWithType: Evidence.AddHost
- uid: System.Security.Policy.Evidence.AddHostEvidence<T>*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddHostEvidence<T>
  nameWithType: Evidence.AddHostEvidence<T>
- uid: System.Security.Policy.Evidence.Clear*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Clear
  nameWithType: Evidence.Clear
- uid: System.Security.Policy.Evidence.Clone*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Clone
  nameWithType: Evidence.Clone
- uid: System.Security.Policy.Evidence.CopyTo*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: CopyTo
  nameWithType: Evidence.CopyTo
- uid: System.Security.Policy.Evidence.Count*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Count
  nameWithType: Evidence.Count
- uid: System.Security.Policy.Evidence.GetAssemblyEnumerator*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetAssemblyEnumerator
  nameWithType: Evidence.GetAssemblyEnumerator
- uid: System.Security.Policy.Evidence.GetAssemblyEvidence<T>*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetAssemblyEvidence<T>
  nameWithType: Evidence.GetAssemblyEvidence<T>
- uid: System.Security.Policy.Evidence.GetEnumerator*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetEnumerator
  nameWithType: Evidence.GetEnumerator
- uid: System.Security.Policy.Evidence.GetHostEnumerator*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetHostEnumerator
  nameWithType: Evidence.GetHostEnumerator
- uid: System.Security.Policy.Evidence.GetHostEvidence<T>*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetHostEvidence<T>
  nameWithType: Evidence.GetHostEvidence<T>
- uid: System.Security.Policy.Evidence.IsReadOnly*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: IsReadOnly
  nameWithType: Evidence.IsReadOnly
- uid: System.Security.Policy.Evidence.IsSynchronized*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: IsSynchronized
  nameWithType: Evidence.IsSynchronized
- uid: System.Security.Policy.Evidence.Locked*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Locked
  nameWithType: Evidence.Locked
- uid: System.Security.Policy.Evidence.Merge*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Merge
  nameWithType: Evidence.Merge
- uid: System.Security.Policy.Evidence.RemoveType*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: RemoveType
  nameWithType: Evidence.RemoveType
- uid: System.Security.Policy.Evidence.SyncRoot*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: SyncRoot
  nameWithType: Evidence.SyncRoot
