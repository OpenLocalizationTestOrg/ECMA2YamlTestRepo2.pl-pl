### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicControl
  id: DynamicControl
  children:
  - System.Web.DynamicData.DynamicControl.#ctor
  - System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)
  - System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  - System.Web.DynamicData.DynamicControl.Column
  - System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  - System.Web.DynamicData.DynamicControl.CssClass
  - System.Web.DynamicData.DynamicControl.DataField
  - System.Web.DynamicData.DynamicControl.DataFormatString
  - System.Web.DynamicData.DynamicControl.FieldTemplate
  - System.Web.DynamicData.DynamicControl.GetAttribute(System.String)
  - System.Web.DynamicData.DynamicControl.HtmlEncode
  - System.Web.DynamicData.DynamicControl.Mode
  - System.Web.DynamicData.DynamicControl.NullDisplayText
  - System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)
  - System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)
  - System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  - System.Web.DynamicData.DynamicControl.Table
  - System.Web.DynamicData.DynamicControl.UIHint
  - System.Web.DynamicData.DynamicControl.ValidationGroup
  langs:
  - csharp
  name: DynamicControl
  nameWithType: DynamicControl
  fullName: System.Web.DynamicData.DynamicControl
  type: Class
  summary: "Wyświetla zawartość, która jest zdefiniowana dla pola w formantach powiązanych z danymi szablonem, za pomocą funkcji danych dynamicznych platformy ASP.NET."
  remarks: "W tym temacie:- [wprowadzenie](#introduction)      -   [składni deklaratywnej](#declarative_syntax) <a name=&quot;introduction&quot;> </a> ## kontroli wprowadzenie w obiekcie DynamicControl jest używany przez opartego na szablonie formanty powiązane z danymi, takie jak <xref:System.Web.UI.WebControls.FormView>lub <xref:System.Web.UI.WebControls.ListView>, aby wyświetlić pola danych, który używa funkcji danych dynamicznych platformy ASP.NET w niestandardowej strony.</xref:System.Web.UI.WebControls.ListView> </xref:System.Web.UI.WebControls.FormView>       Można również użyć formantu w obiekcie DynamicControl <xref:System.Web.UI.WebControls.TemplateField>pole <xref:System.Web.UI.WebControls.GridView>lub <xref:System.Web.UI.WebControls.DetailsView>kontroli.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.TemplateField>       Formant DynamicControl formant zawiera funkcję, która jest podobna do <xref:System.Web.DynamicData.DynamicField>pola.</xref:System.Web.DynamicData.DynamicField> Jednak ponieważ formant formant DynamicControl jest używana tylko wewnątrz szablonów, daje większą elastyczność kontroli, jak dane są wyświetlane, ponieważ można dodać inne elementy HTML wokół pola. Użycie formantu formant DynamicControl, można korzystać z następujących funkcji danych dynamicznych: - automatycznie renderowania kontroli dla pola przy użyciu szablonów pól na podstawie typu danych. Szablony pól można globalnie modyfikować dla całej aplikacji.      -Udostępnianie danych wbudowanych weryfikacji na podstawie schematu bazy danych. Można również dodać typy sprawdzania poprawności, dostosowując modelu danych.      -Dostosowywanie Renderowanie danych dla poszczególnych pól za pomocą atrybutów w modelu danych lub za pomocą <xref:System.Web.DynamicData.DynamicField.UIHint%2A>Właściwości.</xref:System.Web.DynamicData.DynamicField.UIHint%2A>       Aby określić pola do wyświetlenia w formancie formant DynamicControl, ustaw <xref:System.Web.DynamicData.DynamicControl.DataField%2A>dla właściwości nazwy pola.</xref:System.Web.DynamicData.DynamicControl.DataField%2A> Można zastosować niestandardowy ciąg formatowania do wartości pola przez ustawienie <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>Właściwości.</xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> Domyślnie jest stosowany do wartości pola ciąg formatowania, tylko wtedy, gdy formant powiązany z danymi jest w trybie tylko do odczytu. Aby zastosować ciągu formatowania wartości wyświetlane, gdy formant powiązany z danymi jest w trybie edycji, ustaw <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A>właściwości `true`.</xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> Jeśli pole ma wartość `null`, podpis niestandardowego można wyświetlić, ustawiając <xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A>Właściwości.</xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> Formant DynamicControl formantu może również automatycznie przekonwertować pustego ciągu (&quot;&quot;) pola przez ustawienie wartości do wartości null <xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A>właściwości `true`.</xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A>       Formant DynamicControl formantu obsługuje trybów wyświetlania. Aby określić tryb wyświetlania formantu formant DynamicControl, ustaw <xref:System.Web.DynamicData.DynamicControl.Mode%2A>Właściwości.</xref:System.Web.DynamicData.DynamicControl.Mode%2A> W poniższej tabeli przedstawiono różne tryby.       <xref:System.Web.UI.WebControls.DataBoundControlMode>dla trybu wyświetlania.</xref:System.Web.UI.WebControls.DataBoundControlMode> Uniemożliwia to modyfikowanie wartości pola danych lub rekordu użytkownika. Może służyć w tych szablonów.       <xref:System.Web.UI.WebControls.DataBoundControlMode>w trybie edycji.</xref:System.Web.UI.WebControls.DataBoundControlMode> Dzięki temu użytkownicy zaktualizować wartości istniejącego rekordu. Jest on używany w szablonie edycji (zwykle o nazwie `EditItemTemplate`).       <xref:System.Web.UI.WebControls.DataBoundControlMode>w trybie wstawiania.</xref:System.Web.UI.WebControls.DataBoundControlMode> Umożliwia to użytkownikom na wprowadzanie wartości dla nowego rekordu. Jest on używany w szablonie Wstaw (zwykle o nazwie `InsertItemTemplate`).       Formant DynamicControl formantu w formancie powiązane z danymi można ukryć, ustawiając <xref:System.Web.UI.Control.Visible%2A>właściwości `false`.</xref:System.Web.UI.Control.Visible%2A>      <a name=&quot;declarative_syntax&quot;></a>## Składnia deklaratywne```   <asp:DynamicControl       ApplyFormatInEditMode=&quot;True|False&quot;       ConvertEmptyStringToNull=&quot;True|False&quot;       CssClass=&quot;string&quot;       DataField=&quot;string&quot;       DataFormatString=&quot;string&quot;       EnableViewState=&quot;True|False&quot;       HtmlEncode=&quot;True|False&quot;       ID=&quot;string&quot;       Mode=&quot;Edit|Insert|ReadOnly&quot;       NullDisplayText=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       UIHint=&quot;string&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;   >   </asp:DynamicControl>   ```"
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl).  \n  \n The following example demonstrates how to use the DynamicControl control in a <xref:System.Web.UI.WebControls.ListView> control to display, insert, delete and edit values from a database table. It is important to notice that in order to make the insert operation to work, the <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> property of the `rowguid` and `ModifiedDate` columns are set to `true`.  \n  \n [!code-vb[System.Web.DynamicData.DynamicControl#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_0_1.aspx)]\n [!code-cs[System.Web.DynamicData.DynamicControl#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_0_1.aspx)]"
  syntax:
    content: >-
      [System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicControl), "DynamicControl.bmp")]

      public class DynamicControl : System.Web.UI.Control, System.Web.DynamicData.IFieldFormattingOptions, System.Web.DynamicData.IFieldTemplateHost, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.DynamicData.IFieldFormattingOptions
  - System.Web.DynamicData.IFieldTemplateHost
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DynamicControl()
  nameWithType: DynamicControl.DynamicControl()
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> klasy."
  syntax:
    content: public DynamicControl ();
    parameters: []
  overload: System.Web.DynamicData.DynamicControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)
  id: '#ctor(System.Web.UI.WebControls.DataBoundControlMode)'
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DynamicControl(DataBoundControlMode)
  nameWithType: DynamicControl.DynamicControl(DataBoundControlMode)
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl(DataBoundControlMode)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicjuje nowe wystąpienie klasy <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> klasy z określonym trybem."
  syntax:
    content: public DynamicControl (System.Web.UI.WebControls.DataBoundControlMode mode);
    parameters:
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "Jedna z wartości wyliczenia, które określa tryb formantu."
  overload: System.Web.DynamicData.DynamicControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: DynamicControl.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia wartość wskazującą, czy ciąg formatowania określone przez <xref:System.Web.DynamicData.DynamicControl.DataFormatString*>właściwość jest stosowana do wartości pola, gdy pole jest w trybie edycji.</xref:System.Web.DynamicData.DynamicControl.DataFormatString*>"
  remarks: "<xref:System.Web.DynamicData.DynamicControl>Formantem i trybów wyświetlania, które umożliwiają użytkownikom do odczytu, edytować lub Wstaw.</xref:System.Web.DynamicData.DynamicControl> Domyślnie ten ciąg formatowania określony przez <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>właściwość jest stosowana do wartości pola tylko wtedy, gdy <xref:System.Web.DynamicData.DynamicControl>formant jest w trybie tylko do odczytu.</xref:System.Web.DynamicData.DynamicControl> </xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> Aby zastosować ciągu formatowania wartości wyświetlane, gdy formant powiązany z danymi jest w trybie edycji, ustaw właściwość ApplyFormatInEditMode `true`.      > [!NOTE] > <xref:System.Web.DynamicData.DynamicControl>Formantu nie są automatycznie usuwane formatowania po zaktualizowaniu pole w źródle danych.</xref:System.Web.DynamicData.DynamicControl> Jeśli nie chcesz formatowania wartości przechowywanej w ramach, konieczne będzie usunięcie formatowania programowo."
  syntax:
    content: public bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli zastosowano ciągu formatowania; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Column
  id: Column
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Column
  nameWithType: DynamicControl.Column
  fullName: System.Web.DynamicData.DynamicControl.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia obiekt kolumn, który jest skojarzony z formantem."
  remarks: "Jako wartość właściwości Column służy do uzyskiwania informacji metadanych o określonej kolumny. Właściwość kolumna jest automatycznie ustawiana <xref:System.Web.DynamicData.DynamicControl>formant oparty na nazwę pola przewidzianych <xref:System.Web.DynamicData.DynamicControl.DataField%2A>Właściwości.</xref:System.Web.DynamicData.DynamicControl.DataField%2A> </xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: public System.Web.DynamicData.MetaColumn Column { get; set; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "Obiekt kolumn, który jest skojarzony z formantem."
  overload: System.Web.DynamicData.DynamicControl.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: DynamicControl.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia wartość wskazującą, czy puste ciągi (&quot;&quot;) są automatycznie konwertowane do wartości null po zaktualizowaniu pole danych w źródle danych."
  remarks: "<xref:System.Web.UI.WebControls.Parameter>Obiekt formantu źródła danych ma również właściwość o nazwie <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter> Ta właściwość działa tak samo. Upewnij się, że obie właściwości są ustawione właściwie."
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli wartości pustego ciągu zostaną automatycznie przekonwertowane na wartości null. w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.CssClass
  id: CssClass
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: CssClass
  nameWithType: DynamicControl.CssClass
  fullName: System.Web.DynamicData.DynamicControl.CssClass
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia klasę kaskadowych arkuszy stylów (CSS), który określa style dla <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> kontroli zawartości."
  syntax:
    content: public virtual string CssClass { get; set; }
    return:
      type: System.String
      description: "Nazwa klasy CSS."
  overload: System.Web.DynamicData.DynamicControl.CssClass*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.DataField
  id: DataField
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DataField
  nameWithType: DynamicControl.DataField
  fullName: System.Web.DynamicData.DynamicControl.DataField
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia nazwę pola danych, które <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> formant jest powiązany."
  remarks: "Umożliwia określenie pole danych, aby powiązać właściwość DataField <xref:System.Web.DynamicData.DynamicControl>kontroli.</xref:System.Web.DynamicData.DynamicControl> W polu danych może być kolumna nazwie lub dla kolumny klucza obcego, Nazwa relacji.       Domyślnie, wyświetlane jest pole określone dane, przez <xref:System.Web.DynamicData.DynamicControl>sterować przy użyciu szablonu pola, która jest skojarzona z typem danych pola.</xref:System.Web.DynamicData.DynamicControl> Można zmienić szablonu pola, który jest renderowany w polu danych przez ustawienie <xref:System.Web.DynamicData.DynamicControl.UIHint%2A>Właściwości.</xref:System.Web.DynamicData.DynamicControl.UIHint%2A> Można również sformatować tekstu wyświetlanego przez ustawienie <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>Właściwości.</xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>       **Uwaga** Jeśli chcesz zmienić globalnie wyświetlania i zachowanie pola danych, należy zastosować atrybutów do modelu danych zamiast to ustawienie w konkretnego wystąpienia <xref:System.Web.DynamicData.DynamicControl>kontroli.</xref:System.Web.DynamicData.DynamicControl> Aby uzyskać więcej informacji, zobacz [danych dynamicznych platformy ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the DataField property to specify which field to display in a <xref:System.Web.DynamicData.DynamicControl> control.  \n  \n [!code-cs[System.Web.DynamicData.DynamicControl.DataField#1](~/add/codesnippet/csharp/p-system.web.dynamicdata_4_1.aspx)]\n [!code-vb[System.Web.DynamicData.DynamicControl.DataField#1](~/add/codesnippet/visualbasic/p-system.web.dynamicdata_4_1.aspx)]"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "Nazwa pola danych do powiązania <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> formant. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.DynamicData.DynamicControl.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.DataFormatString
  id: DataFormatString
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DataFormatString
  nameWithType: DynamicControl.DataFormatString
  fullName: System.Web.DynamicData.DynamicControl.DataFormatString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia ciąg, który określa format wyświetlania wartości pola."
  remarks: "Umożliwia określenie niestandardowych formatów wyświetlania wartości wyświetlanych w właściwości DataFormatString <xref:System.Web.DynamicData.DynamicControl>kontroli.</xref:System.Web.DynamicData.DynamicControl> Jeśli nie ustawiono właściwości DataFormatString, wartość pola jest wyświetlany bez żadnego formatowania.       Domyślnie ten ciąg formatowania jest stosowany do wartości pola tylko wtedy, gdy <xref:System.Web.DynamicData.DynamicControl.Mode%2A>wartość właściwości jest równa <xref:System.Web.UI.WebControls.DataBoundControlMode>.</xref:System.Web.UI.WebControls.DataBoundControlMode> </xref:System.Web.DynamicData.DynamicControl.Mode%2A> Aby zastosować ciąg formatowania do wartości pola w trybie edycji, ustaw <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A>właściwości `true`.</xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A>       Format wyświetlania można określić za pomocą właściwości DataFormatString jest specyficzna dla tego wystąpienia <xref:System.Web.DynamicData.DynamicControl>kontroli.</xref:System.Web.DynamicData.DynamicControl> Format wyświetlania dla pola danych można zmienić w całej aplikacji, stosując <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>do modelu danych i ustawienie <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName>nazwany parametr w konstruktorze.</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> Aby uzyskać więcej informacji, zobacz [danych dynamicznych platformy ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string DataFormatString { get; set; }
    return:
      type: System.String
      description: "Ciąg formatowania, który określa format wyświetlania wartości pola. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że specjalne formatowanie nie jest stosowane do wartości pola."
  overload: System.Web.DynamicData.DynamicControl.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.FieldTemplate
  id: FieldTemplate
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: FieldTemplate
  nameWithType: DynamicControl.FieldTemplate
  fullName: System.Web.DynamicData.DynamicControl.FieldTemplate
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera szablon pola, dla którego utworzono <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> formantu."
  syntax:
    content: public System.Web.UI.Control FieldTemplate { get; }
    return:
      type: System.Web.UI.Control
      description: "Szablon pola, dla którego utworzono <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> formantu."
  overload: System.Web.DynamicData.DynamicControl.FieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: DynamicControl.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicControl.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera wartość atrybutu przy użyciu określonego klucza."
  remarks: "Jeśli zbieranie atrybutów jest `null`, ta metoda zwraca pusty ciąg."
  syntax:
    content: public string GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "Nazwa atrybutu."
    return:
      type: System.String
      description: "Wartość atrybutu."
  overload: System.Web.DynamicData.DynamicControl.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.HtmlEncode
  id: HtmlEncode
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: DynamicControl.HtmlEncode
  fullName: System.Web.DynamicData.DynamicControl.HtmlEncode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia wartość wskazującą, czy w danych dla formantu jest kodowany w formacie HTML przed renderowaniem."
  remarks: "Właściwość HtmlEncode umożliwia określenie, czy wartości pól są kodowany w formacie HTML do ich odpowiednich ciąg oświadczenia zanim zostaną one wyświetlone.      > [!NOTE] > Wartości pola kodowanie HTML pomaga zapobiegać wyświetlaniu ataków skryptów między witrynami i złośliwej zawartości. Ta właściwość powinna być włączona, jeśli to możliwe. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli danych dla formantu jest kodowany w formacie HTML przed renderowaniem; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Wartość domyślna to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicControl.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Mode
  id: Mode
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Mode
  nameWithType: DynamicControl.Mode
  fullName: System.Web.DynamicData.DynamicControl.Mode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia tryb renderowania."
  remarks: "Umożliwia określenie tryb renderowania, który zostanie użyty do wyświetlenia właściwości Mode <xref:System.Web.DynamicData.DynamicControl>kontroli.</xref:System.Web.DynamicData.DynamicControl> W poniższej tabeli przedstawiono różne tryby.      | Tryb | Opis elementu |   |----------|-----------------|   | <xref:System.Web.UI.WebControls.DataBoundControlMode>| dla trybu wyświetlania.</xref:System.Web.UI.WebControls.DataBoundControlMode> Uniemożliwia to modyfikowanie wartości pola danych lub rekordu użytkownika. Może służyć w tych szablonów. Jest to wartość domyślna. |   | <xref:System.Web.UI.WebControls.DataBoundControlMode>| dla trybu edycji.</xref:System.Web.UI.WebControls.DataBoundControlMode> Dzięki temu użytkownicy zaktualizować wartości istniejącego rekordu. Jest on używany w `EditItemTemplate` szablonu. |   | <xref:System.Web.UI.WebControls.DataBoundControlMode>| w trybie wstawiania.</xref:System.Web.UI.WebControls.DataBoundControlMode> Umożliwia to użytkownikom na wprowadzanie wartości dla nowego rekordu. Jest on używany w `InsertItemTemplate` szablonu. |"
  syntax:
    content: public System.Web.UI.WebControls.DataBoundControlMode Mode { get; set; }
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "Jedna z wartości wyliczenia, które określa tryb renderowania dla formantu. Wartość domyślna to <xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicControl.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.NullDisplayText
  id: NullDisplayText
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: DynamicControl.NullDisplayText
  fullName: System.Web.DynamicData.DynamicControl.NullDisplayText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia Podpis wyświetlany dla pola danych, wartość pola jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Czasami wartość pola jest przechowywana jako wartość null w źródle danych. Można określić niestandardowe podpis ma być wyświetlany dla pola, które mają wartość null, ustawiając właściwość NullDisplayText. Jeśli ta właściwość nie jest ustawiona, wartości null pola są wyświetlane jako puste ciągi (&quot;&quot;)."
  syntax:
    content: public string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "Podpis wyświetlany dla pola danych, wartość pola jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że ta właściwość nie jest ustawiona."
  overload: System.Web.DynamicData.DynamicControl.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: DynamicControl.OnInit(EventArgs)
  fullName: System.Web.DynamicData.DynamicControl.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Zgłasza <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> zdarzeń."
  remarks: "Wywoływanie zdarzeń wywołuje program obsługi zdarzeń za pośrednictwem pełnomocnika. Aby uzyskać więcej informacji, zobacz [NIB: wywoływanie zdarzeń](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Metody OnInit umożliwia także klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Dane zdarzenia."
  overload: System.Web.DynamicData.DynamicControl.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.DynamicData.DynamicControl.DataField*>Nie ustawiono właściwości.</xref:System.Web.DynamicData.DynamicControl.DataField*>"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: DynamicControl.Render(HtmlTextWriter)
  fullName: System.Web.DynamicData.DynamicControl.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Renderuje <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> kontroli zawartości do przeglądarki klienta przy użyciu określonego <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> obiektu."
  remarks: "Metoda renderowania jest głównie używana przez deweloperów formant do rozszerzenia <xref:System.Web.DynamicData.DynamicControl>kontroli.</xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Obiekt, który jest używany do renderowania <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> kontrolowanie zawartości w przeglądarce klienta."
  overload: System.Web.DynamicData.DynamicControl.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: DynamicControl.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicControl.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Ustawia określoną wartość określonego atrybutu."
  syntax:
    content: public void SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "Nazwa atrybutu, aby ustawić."
    - id: value
      type: System.String
      description: "Wartość do przypisania do atrybutu."
  overload: System.Web.DynamicData.DynamicControl.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  id: System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  isEii: true
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  nameWithType: DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  fullName: System.Web.DynamicData.DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Opis tego elementu członkowskiego zobacz <xref:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions*>.</xref:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions*>"
  syntax:
    content: System.Web.DynamicData.IFieldFormattingOptions System.Web.DynamicData.IFieldTemplateHost.FormattingOptions { get; }
    return:
      type: System.Web.DynamicData.IFieldFormattingOptions
      description: "Opcje formatowania, który ma zostać zastosowany do szablonu pola."
  overload: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Table
  id: Table
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Table
  nameWithType: DynamicControl.Table
  fullName: System.Web.DynamicData.DynamicControl.Table
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera obiekt tabeli, który jest skojarzony z formantem."
  remarks: "Użyj właściwości tabeli uzyskanie dostępu do metadanych informacji o tabeli, która jest skojarzona z formantem powiązane z danymi, który zawiera <xref:System.Web.DynamicData.DynamicControl>kontroli.</xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: public virtual System.Web.DynamicData.MetaTable Table { get; }
    return:
      type: System.Web.DynamicData.MetaTable
      description: "Obiekt tabeli, który jest skojarzony z formantem."
  overload: System.Web.DynamicData.DynamicControl.Table*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> Formant znajduje się wewnątrz kontrolki powiązania danych, który nie jest powiązany z kontrolą źródła danych, który implementuje <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref> interfejsu."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.UIHint
  id: UIHint
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: UIHint
  nameWithType: DynamicControl.UIHint
  fullName: System.Web.DynamicData.DynamicControl.UIHint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia nazwę szablonu pola, który zostanie użyty do wyświetlenia w polu danych."
  remarks: "Właściwość UIHint umożliwia określenie pola szablon zostanie użyty do wyświetlenia interfejsu użytkownika dla pola danych. Szablony pól domyślnie są kontrolek użytkownika i ich nazwy zawierają sufiks, aby zidentyfikować szablony pola, które są używane dla operacji Edytuj i liczba operacji wstawienia. Sufiksy są odpowiednio _edytuj i _Wstaw. Po ustawieniu wartości dla właściwości UIHint należy ustawić nazwę bez sufiksy. Identyfikuje tryb danych dynamicznych wyniku obliczenia <xref:System.Web.DynamicData.DynamicControl.Mode%2A>właściwości wartość i będzie renderowania szablonu poprawnym polem.</xref:System.Web.DynamicData.DynamicControl.Mode%2A>       Jeśli nie ustawiono właściwości UIHint, domyślnie danych dynamicznych spowoduje, że szablon pole na podstawie typu pola. Aby uzyskać więcej informacji, zobacz [funkcja szkieletów danych dynamicznych ASP.NET](~/add/includes/ajax-current-ext-md.md).       Szablon pola, określonym przez użytkownika za pomocą właściwości UIHint jest specyficzne dla tego wystąpienia <xref:System.Web.DynamicData.DynamicControl>kontroli.</xref:System.Web.DynamicData.DynamicControl> Możesz również zmienić szablonu pola używane przez pola danych w całej aplikacji, stosując <xref:System.ComponentModel.DataAnnotations.UIHintAttribute>do modelu danych.</xref:System.ComponentModel.DataAnnotations.UIHintAttribute> Ustawienie właściwości UIHint zastępuje metadane zastosowano do modelu danych. Aby uzyskać więcej informacji na temat atrybutów metadanych, zobacz [danych dynamicznych platformy ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl.UIHint).  \n  \n The following example shows how you can specify a data field to use a different field template to render its contents. The second example shows the custom field template specified by the UIHint property.  \n  \n [!code-cs[System.Web.DynamicData.DynamicControl.UIHint#1](~/add/codesnippet/csharp/p-system.web.dynamicdata_2_1.aspx)]\n [!code-vb[System.Web.DynamicData.DynamicControl.UIHint#1](~/add/codesnippet/visualbasic/p-system.web.dynamicdata_2_1.aspx)]  \n  \n [!code-vb[System.Web.DynamicData.DynamicControl.UIHint#2](~/add/codesnippet/visualbasic/p-system.web.dynamicdata_2_2.ascx)]\n [!code-cs[System.Web.DynamicData.DynamicControl.UIHint#2](~/add/codesnippet/csharp/p-system.web.dynamicdata_2_2.ascx)]"
  syntax:
    content: public virtual string UIHint { get; set; }
    return:
      type: System.String
      description: "Nazwa szablonu pola, który zostanie użyty do wyświetlenia w polu danych. Wartość domyślna to ciąg pusty (&quot;&quot;), co oznacza, że szablon pole będzie renderowany na podstawie typu pola danych lub informacji o metadanych zastosowano do modelu danych."
  overload: System.Web.DynamicData.DynamicControl.UIHint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.ValidationGroup
  id: ValidationGroup
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: DynamicControl.ValidationGroup
  fullName: System.Web.DynamicData.DynamicControl.ValidationGroup
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Pobiera lub ustawia nazwę grupy sprawdzania poprawności dla formantu."
  remarks: "Sprawdzanie poprawności grupy umożliwiają przypisywanie weryfikacji formantów na stronie do jednej konkretnej kategorii. Każda grupa sprawdzania poprawności można zweryfikować niezależnie od innych grup sprawdzania poprawności na stronie. Aby określić nazwę grupy walidacji, dla którego należy użyć właściwości ValidationGroup <xref:System.Web.DynamicData.DynamicControl>formant powoduje weryfikacji po stronie ogłoszenia na serwerze.</xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "Nazwa grupy walidacji formantu."
  overload: System.Web.DynamicData.DynamicControl.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Web.DynamicData.DynamicControl.#ctor
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DynamicControl()
  nameWithType: DynamicControl.DynamicControl()
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl()
- uid: System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DynamicControl(DataBoundControlMode)
  nameWithType: DynamicControl.DynamicControl(DataBoundControlMode)
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl(DataBoundControlMode)
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicControl.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicControl.Column
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Column
  nameWithType: DynamicControl.Column
  fullName: System.Web.DynamicData.DynamicControl.Column
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicControl.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicControl.CssClass
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: CssClass
  nameWithType: DynamicControl.CssClass
  fullName: System.Web.DynamicData.DynamicControl.CssClass
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicControl.DataField
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataField
  nameWithType: DynamicControl.DataField
  fullName: System.Web.DynamicData.DynamicControl.DataField
- uid: System.Web.DynamicData.DynamicControl.DataFormatString
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicControl.DataFormatString
  fullName: System.Web.DynamicData.DynamicControl.DataFormatString
- uid: System.Web.DynamicData.DynamicControl.FieldTemplate
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: FieldTemplate
  nameWithType: DynamicControl.FieldTemplate
  fullName: System.Web.DynamicData.DynamicControl.FieldTemplate
- uid: System.Web.DynamicData.DynamicControl.GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: GetAttribute(String)
  nameWithType: DynamicControl.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicControl.GetAttribute(String)
- uid: System.Web.DynamicData.DynamicControl.HtmlEncode
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicControl.HtmlEncode
  fullName: System.Web.DynamicData.DynamicControl.HtmlEncode
- uid: System.Web.DynamicData.DynamicControl.Mode
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Mode
  nameWithType: DynamicControl.Mode
  fullName: System.Web.DynamicData.DynamicControl.Mode
- uid: System.Web.DynamicData.DynamicControl.NullDisplayText
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicControl.NullDisplayText
  fullName: System.Web.DynamicData.DynamicControl.NullDisplayText
- uid: System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: DynamicControl.OnInit(EventArgs)
  fullName: System.Web.DynamicData.DynamicControl.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: DynamicControl.Render(HtmlTextWriter)
  fullName: System.Web.DynamicData.DynamicControl.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: DynamicControl.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicControl.SetAttribute(String,String)
- uid: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  nameWithType: DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  fullName: System.Web.DynamicData.DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
- uid: System.Web.DynamicData.IFieldFormattingOptions
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldFormattingOptions
  nameWithType: IFieldFormattingOptions
  fullName: System.Web.DynamicData.IFieldFormattingOptions
- uid: System.Web.DynamicData.DynamicControl.Table
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Table
  nameWithType: DynamicControl.Table
  fullName: System.Web.DynamicData.DynamicControl.Table
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.DynamicControl.UIHint
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: UIHint
  nameWithType: DynamicControl.UIHint
  fullName: System.Web.DynamicData.DynamicControl.UIHint
- uid: System.Web.DynamicData.DynamicControl.ValidationGroup
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicControl.ValidationGroup
  fullName: System.Web.DynamicData.DynamicControl.ValidationGroup
- uid: System.Web.DynamicData.DynamicControl.#ctor*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DynamicControl
  nameWithType: DynamicControl.DynamicControl
- uid: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicControl.ApplyFormatInEditMode
- uid: System.Web.DynamicData.DynamicControl.Column*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Column
  nameWithType: DynamicControl.Column
- uid: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicControl.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicControl.CssClass*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: CssClass
  nameWithType: DynamicControl.CssClass
- uid: System.Web.DynamicData.DynamicControl.DataField*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataField
  nameWithType: DynamicControl.DataField
- uid: System.Web.DynamicData.DynamicControl.DataFormatString*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicControl.DataFormatString
- uid: System.Web.DynamicData.DynamicControl.FieldTemplate*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: FieldTemplate
  nameWithType: DynamicControl.FieldTemplate
- uid: System.Web.DynamicData.DynamicControl.GetAttribute*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: GetAttribute
  nameWithType: DynamicControl.GetAttribute
- uid: System.Web.DynamicData.DynamicControl.HtmlEncode*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicControl.HtmlEncode
- uid: System.Web.DynamicData.DynamicControl.Mode*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Mode
  nameWithType: DynamicControl.Mode
- uid: System.Web.DynamicData.DynamicControl.NullDisplayText*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicControl.NullDisplayText
- uid: System.Web.DynamicData.DynamicControl.OnInit*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: OnInit
  nameWithType: DynamicControl.OnInit
- uid: System.Web.DynamicData.DynamicControl.Render*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Render
  nameWithType: DynamicControl.Render
- uid: System.Web.DynamicData.DynamicControl.SetAttribute*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: SetAttribute
  nameWithType: DynamicControl.SetAttribute
- uid: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  nameWithType: DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
- uid: System.Web.DynamicData.DynamicControl.Table*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Table
  nameWithType: DynamicControl.Table
- uid: System.Web.DynamicData.DynamicControl.UIHint*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: UIHint
  nameWithType: DynamicControl.UIHint
- uid: System.Web.DynamicData.DynamicControl.ValidationGroup*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicControl.ValidationGroup
