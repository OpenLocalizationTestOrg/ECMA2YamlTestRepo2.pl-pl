### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.PropertyChangedEventManager
  id: PropertyChangedEventManager
  children:
  - System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  - System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  - System.ComponentModel.PropertyChangedEventManager.NewListenerList
  - System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  - System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  - System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  - System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)
  - System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)
  langs:
  - csharp
  name: PropertyChangedEventManager
  nameWithType: PropertyChangedEventManager
  fullName: System.ComponentModel.PropertyChangedEventManager
  type: Class
  summary: "Udostępnia <xref href=&quot;System.Windows.WeakEventManager&quot;> </xref> implementacji, dzięki czemu można dołączyć odbiorników dla za pomocą wzorca &quot;odbiornik zdarzeń słabe&quot; <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>zdarzeń.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  remarks: "Aby mogła być odbiorników w tym wzorcu, obiektów odbiornika musi implementować <xref:System.Windows.IWeakEventListener>.</xref:System.Windows.IWeakEventListener> Nie musisz wdrożyć <xref:System.Windows.IWeakEventListener>dla klasy, który jest źródłem zdarzeń.</xref:System.Windows.IWeakEventListener>"
  syntax:
    content: 'public class PropertyChangedEventManager : System.Windows.WeakEventManager'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.WeakEventManager
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)
  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)
  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)
  - System.Windows.WeakEventManager.Item(System.Object)
  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ReadLock
  - System.Windows.WeakEventManager.Remove(System.Object)
  - System.Windows.WeakEventManager.ScheduleCleanup
  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)
  - System.Windows.WeakEventManager.WriteLock
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  id: AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: AddHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  nameWithType: PropertyChangedEventManager.AddHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.AddHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Dodaje obsługi określonego zdarzenia, który jest wywoływany, gdy określonego źródła, podnosi <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>zdarzenia dla określonej właściwości.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  remarks: "Ta metoda służy do określania obsługi zdarzenia, którego chcesz użyć, aby subskrybować <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>zdarzenia.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>  Gdy ta metoda obiektu odbiornika nie muszą implementować <xref:System.Windows.IWeakEventListener>interfejsu.</xref:System.Windows.IWeakEventListener>"
  syntax:
    content: public static void AddHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler<System.ComponentModel.PropertyChangedEventArgs> handler, string propertyName);
    parameters:
    - id: source
      type: System.ComponentModel.INotifyPropertyChanged
      description: "Źródłowego obiektu, który generuje <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>zdarzeń.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
    - id: handler
      type: System.EventHandler{System.ComponentModel.PropertyChangedEventArgs}
      description: "Delegat, który obsługuje <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>zdarzeń.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
    - id: propertyName
      type: System.String
      description: "Nazwa właściwości, która istnieje na `source` umożliwiającego nasłuchiwania zmian. Wartość <xref:System.String>wskazująca &quot;żadnej właściwości&quot;.</xref:System.String>"
  overload: System.ComponentModel.PropertyChangedEventManager.AddHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handler</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Więcej niż jednej metody jest skojarzony z <code> handler </code>."
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  id: AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: AddListener(INotifyPropertyChanged,IWeakEventListener,String)
  nameWithType: PropertyChangedEventManager.AddListener(INotifyPropertyChanged,IWeakEventListener,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.AddListener(INotifyPropertyChanged,IWeakEventListener,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Dodaje określony odbiornik do listy odbiorników w określonym źródle."
  syntax:
    content: public static void AddListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);
    parameters:
    - id: source
      type: System.ComponentModel.INotifyPropertyChanged
      description: "Obiekt ze zdarzeniem."
    - id: listener
      type: System.Windows.IWeakEventListener
      description: "Obiekt do dodania jako odbiornik."
    - id: propertyName
      type: System.String
      description: "Nazwa właściwości, która istnieje na `source` umożliwiającego nasłuchiwania zmian. Wartość <xref:System.String>wskazująca &quot;żadnej właściwości&quot;.</xref:System.String>"
  overload: System.ComponentModel.PropertyChangedEventManager.AddListener*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.NewListenerList
  id: NewListenerList
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: NewListenerList()
  nameWithType: PropertyChangedEventManager.NewListenerList()
  fullName: System.ComponentModel.PropertyChangedEventManager.NewListenerList()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zwraca nowy obiekt, który zawiera odbiorników do <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>zdarzeń.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  syntax:
    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();
    parameters: []
    return:
      type: System.Windows.WeakEventManager.ListenerList
      description: "Nowy obiekt, który zawiera odbiorników do <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>zdarzeń.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  overload: System.ComponentModel.PropertyChangedEventManager.NewListenerList*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  id: Purge(System.Object,System.Object,System.Boolean)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: Purge(Object,Object,Boolean)
  nameWithType: PropertyChangedEventManager.Purge(Object,Object,Boolean)
  fullName: System.ComponentModel.PropertyChangedEventManager.Purge(Object,Object,Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Usuwa odbiorników, które nie są już aktywne dla podanego źródła danych."
  syntax:
    content: protected override bool Purge (object source, object data, bool purgeAll);
    parameters:
    - id: source
      type: System.Object
      description: "Obiekt źródłowy, aby usunąć wszystkie odbiorników z."
    - id: data
      type: System.Object
      description: "Dane do przeczyszczenia. To powinien być <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
    - id: purgeAll
      type: System.Boolean
      description: "Ustaw <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> zatrzymania nasłuchiwania i aby całkowicie usunąć wszystkie dane."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli niektóre wpisy zostały usunięte; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.PropertyChangedEventManager.Purge*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  id: RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: RemoveHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  nameWithType: PropertyChangedEventManager.RemoveHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.RemoveHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Usuwa obsługi określonego zdarzenia pochodzących z określonego źródła."
  syntax:
    content: public static void RemoveHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler<System.ComponentModel.PropertyChangedEventArgs> handler, string propertyName);
    parameters:
    - id: source
      type: System.ComponentModel.INotifyPropertyChanged
      description: "Źródłowego obiektu, który generuje <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>zdarzeń.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
    - id: handler
      type: System.EventHandler{System.ComponentModel.PropertyChangedEventArgs}
      description: "Delegat, który obsługuje <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>zdarzeń.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
    - id: propertyName
      type: System.String
      description: "Nazwa właściwości, która istnieje na `source` po której należy zakończyć nasłuchiwanie zmian. Wartość <xref:System.String>wskazująca &quot;żadnej właściwości&quot;.</xref:System.String>"
  overload: System.ComponentModel.PropertyChangedEventManager.RemoveHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handler</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Więcej niż jednej metody jest skojarzony z <code> handler </code>."
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  id: RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: RemoveListener(INotifyPropertyChanged,IWeakEventListener,String)
  nameWithType: PropertyChangedEventManager.RemoveListener(INotifyPropertyChanged,IWeakEventListener,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.RemoveListener(INotifyPropertyChanged,IWeakEventListener,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Usuwa określony odbiornik z listy odbiorników dla podanego źródła."
  syntax:
    content: public static void RemoveListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);
    parameters:
    - id: source
      type: System.ComponentModel.INotifyPropertyChanged
      description: "Aby usunąć odbiornik z obiektu."
    - id: listener
      type: System.Windows.IWeakEventListener
      description: "Odbiornik do usunięcia."
    - id: propertyName
      type: System.String
      description: "Nazwa właściwości, która istnieje na `source` po której należy zakończyć nasłuchiwanie zmian. Wartość <xref:System.String>wskazująca &quot;żadnej właściwości&quot;.</xref:System.String>"
  overload: System.ComponentModel.PropertyChangedEventManager.RemoveListener*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: PropertyChangedEventManager.StartListening(Object)
  fullName: System.ComponentModel.PropertyChangedEventManager.StartListening(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Rozpoczyna nasłuchiwanie <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>zdarzenia dla podanego źródła.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  remarks: "Nie określono właściwości; Po rozpoczęciu Menedżer zdarzeń ma wszystkie właściwości w źródle <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>powiadomień włączone.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  syntax:
    content: protected override void StartListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: "Obiekt, na którym należy rozpocząć nasłuchiwania dla <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  overload: System.ComponentModel.PropertyChangedEventManager.StartListening*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.ComponentModel.PropertyChangedEventManager
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: PropertyChangedEventManager.StopListening(Object)
  fullName: System.ComponentModel.PropertyChangedEventManager.StopListening(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Zatrzymuje nasłuchiwanie <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>zdarzenia dla podanego źródła.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  syntax:
    content: protected override void StopListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: "Obiekt źródłowy, na której należy zakończyć nasłuchiwanie <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>.</xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>"
  overload: System.ComponentModel.PropertyChangedEventManager.StopListening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.WeakEventManager
  isExternal: false
  name: System.Windows.WeakEventManager
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: AddHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  nameWithType: PropertyChangedEventManager.AddHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.AddHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
- uid: System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.EventHandler{System.ComponentModel.PropertyChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<PropertyChangedEventArgs>
  nameWithType: EventHandler<PropertyChangedEventArgs>
  fullName: System.EventHandler<System.ComponentModel.PropertyChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ComponentModel.PropertyChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    nameWithType: PropertyChangedEventArgs
    fullName: PropertyChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: AddListener(INotifyPropertyChanged,IWeakEventListener,String)
  nameWithType: PropertyChangedEventManager.AddListener(INotifyPropertyChanged,IWeakEventListener,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.AddListener(INotifyPropertyChanged,IWeakEventListener,String)
- uid: System.Windows.IWeakEventListener
  parent: System.Windows
  isExternal: false
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: System.Windows.IWeakEventListener
- uid: System.ComponentModel.PropertyChangedEventManager.NewListenerList
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: NewListenerList()
  nameWithType: PropertyChangedEventManager.NewListenerList()
  fullName: System.ComponentModel.PropertyChangedEventManager.NewListenerList()
- uid: System.Windows.WeakEventManager.ListenerList
  parent: System.Windows
  isExternal: false
  name: WeakEventManager+ListenerList
  nameWithType: WeakEventManager+ListenerList
  fullName: System.Windows.WeakEventManager+ListenerList
- uid: System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: Purge(Object,Object,Boolean)
  nameWithType: PropertyChangedEventManager.Purge(Object,Object,Boolean)
  fullName: System.ComponentModel.PropertyChangedEventManager.Purge(Object,Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: RemoveHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  nameWithType: PropertyChangedEventManager.RemoveHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.RemoveHandler(INotifyPropertyChanged,EventHandler<PropertyChangedEventArgs>,String)
- uid: System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: RemoveListener(INotifyPropertyChanged,IWeakEventListener,String)
  nameWithType: PropertyChangedEventManager.RemoveListener(INotifyPropertyChanged,IWeakEventListener,String)
  fullName: System.ComponentModel.PropertyChangedEventManager.RemoveListener(INotifyPropertyChanged,IWeakEventListener,String)
- uid: System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: StartListening(Object)
  nameWithType: PropertyChangedEventManager.StartListening(Object)
  fullName: System.ComponentModel.PropertyChangedEventManager.StartListening(Object)
- uid: System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: StopListening(Object)
  nameWithType: PropertyChangedEventManager.StopListening(Object)
  fullName: System.ComponentModel.PropertyChangedEventManager.StopListening(Object)
- uid: System.ComponentModel.PropertyChangedEventManager.AddHandler*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: AddHandler
  nameWithType: PropertyChangedEventManager.AddHandler
- uid: System.ComponentModel.PropertyChangedEventManager.AddListener*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: AddListener
  nameWithType: PropertyChangedEventManager.AddListener
- uid: System.ComponentModel.PropertyChangedEventManager.NewListenerList*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: NewListenerList
  nameWithType: PropertyChangedEventManager.NewListenerList
- uid: System.ComponentModel.PropertyChangedEventManager.Purge*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: Purge
  nameWithType: PropertyChangedEventManager.Purge
- uid: System.ComponentModel.PropertyChangedEventManager.RemoveHandler*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: RemoveHandler
  nameWithType: PropertyChangedEventManager.RemoveHandler
- uid: System.ComponentModel.PropertyChangedEventManager.RemoveListener*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: RemoveListener
  nameWithType: PropertyChangedEventManager.RemoveListener
- uid: System.ComponentModel.PropertyChangedEventManager.StartListening*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: StartListening
  nameWithType: PropertyChangedEventManager.StartListening
- uid: System.ComponentModel.PropertyChangedEventManager.StopListening*
  parent: System.ComponentModel.PropertyChangedEventManager
  isExternal: false
  name: StopListening
  nameWithType: PropertyChangedEventManager.StopListening
