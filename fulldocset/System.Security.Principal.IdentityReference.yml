### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.IdentityReference
  id: IdentityReference
  children:
  - System.Security.Principal.IdentityReference.Equals(System.Object)
  - System.Security.Principal.IdentityReference.GetHashCode
  - System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.ToString
  - System.Security.Principal.IdentityReference.Translate(System.Type)
  - System.Security.Principal.IdentityReference.Value
  langs:
  - csharp
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
  type: Class
  summary: "Reprezentuje tożsamości i jest klasą bazową dla <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> i <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> klasy. Ta klasa nie ma konstruktora publicznego, a nie może być dziedziczona."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public abstract class IdentityReference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: IdentityReference.Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Zwraca wartość wskazującą, czy określony obiekt jest równa to wystąpienie <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> klasy."
  syntax:
    content: public abstract bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Obiekt do porównania z tym <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> wystąpienia lub odwołanie o wartości null."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> o </code> jest obiekt o takim samym podstawowy typ i wartość, jak to <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> wystąpienia; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.IdentityReference.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: IdentityReference.GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Pełni rolę funkcji skrótu dla <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>. GetHashCode są odpowiednie do użycia w mieszania struktury algorytmów i danych, takich jak tablicy skrótów."
  syntax:
    content: public abstract int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Wartość skrótu dla tego <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> obiektu."
  overload: System.Security.Principal.IdentityReference.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: IsValidTargetType(Type)
  nameWithType: IdentityReference.IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Zwraca wartość wskazującą, czy określony typ jest typem nieprawidłowa Translacja <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> klasy."
  syntax:
    content: public abstract bool IsValidTargetType (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "Typ ważności, którego dotyczy zapytanie jako konwersji <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>. Następujące typy elementów docelowych są prawidłowe:<xref href=&quot;System.Security.Principal.NTAccount&quot;></xref><xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli <code> targetType </code> jest typem nieprawidłowa Translacja <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> klasy; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.IdentityReference.IsValidTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  id: op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: op_Equality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Equality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Equality(IdentityReference,IdentityReference)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Porównuje dwa <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> określają, czy są one takie same obiekty. Są one traktowane jako równe, gdy mają taką samą nazwę kanoniczną reprezentację jak zwracany przez <xref:System.Security.Principal.IdentityReference.Value*>Właściwości lub jeśli są <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Principal.IdentityReference.Value*>"
  syntax:
    content: public static bool op_Equality (System.Security.Principal.IdentityReference left, System.Security.Principal.IdentityReference right);
    parameters:
    - id: left
      type: System.Security.Principal.IdentityReference
      description: "Po lewej stronie <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> operandu na potrzeby porównania równości. Ten parametr może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: right
      type: System.Security.Principal.IdentityReference
      description: "Prawo <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> operandu na potrzeby porównania równości. Ten parametr może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.IdentityReference.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  id: op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: op_Inequality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Porównuje dwa <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> określają, czy nie są takie same obiekty. Ich nie są uważane za taki sam, jeśli mają inną nazwę kanoniczną reprezentacje niż ten, który został zwrócony przez <xref:System.Security.Principal.IdentityReference.Value*>Właściwość lub jeśli jest jednym z obiektów <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , a drugi nie.</xref:System.Security.Principal.IdentityReference.Value*>"
  syntax:
    content: public static bool op_Inequality (System.Security.Principal.IdentityReference left, System.Security.Principal.IdentityReference right);
    parameters:
    - id: left
      type: System.Security.Principal.IdentityReference
      description: "Po lewej stronie <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> operandu na potrzeby porównania nierówności. Ten parametr może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: right
      type: System.Security.Principal.IdentityReference
      description: "Prawo <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> operandu na potrzeby porównania nierówności. Ten parametr może być <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.IdentityReference.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.ToString
  id: ToString
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: ToString()
  nameWithType: IdentityReference.ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Zwraca reprezentację ciągu tożsamość reprezentowany przez <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> obiektu."
  syntax:
    content: public abstract string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Tożsamość w formacie ciągu."
  overload: System.Security.Principal.IdentityReference.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Translate(Type)
  nameWithType: IdentityReference.Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Wykonuje translację reprezentowany przez nazwę konta <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> obiektu do innego <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>-typu pochodnego."
  syntax:
    content: public abstract System.Security.Principal.IdentityReference Translate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "Typ docelowy konwersji z <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>."
    return:
      type: System.Security.Principal.IdentityReference
      description: "Przekonwertowana tożsamości."
  overload: System.Security.Principal.IdentityReference.Translate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.Value
  id: Value
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Value
  nameWithType: IdentityReference.Value
  fullName: System.Security.Principal.IdentityReference.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Pobiera wartość tożsamości reprezentowany przez ciąg <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> obiektu."
  syntax:
    content: public abstract string Value { get; }
    return:
      type: System.String
      description: "Wartość ciągu tożsamość reprezentowany przez <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> obiektu."
  overload: System.Security.Principal.IdentityReference.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Equals(Object)
  nameWithType: IdentityReference.Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IdentityReference.GetHashCode
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: GetHashCode()
  nameWithType: IdentityReference.GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: IsValidTargetType(Type)
  nameWithType: IdentityReference.IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Equality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Equality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Equality(IdentityReference,IdentityReference)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Inequality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Inequality(IdentityReference,IdentityReference)
- uid: System.Security.Principal.IdentityReference.ToString
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: ToString()
  nameWithType: IdentityReference.ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Translate(Type)
  nameWithType: IdentityReference.Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(Type)
- uid: System.Security.Principal.IdentityReference.Value
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Value
  nameWithType: IdentityReference.Value
  fullName: System.Security.Principal.IdentityReference.Value
- uid: System.Security.Principal.IdentityReference.Equals*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Equals
  nameWithType: IdentityReference.Equals
- uid: System.Security.Principal.IdentityReference.GetHashCode*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: GetHashCode
  nameWithType: IdentityReference.GetHashCode
- uid: System.Security.Principal.IdentityReference.IsValidTargetType*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: IsValidTargetType
  nameWithType: IdentityReference.IsValidTargetType
- uid: System.Security.Principal.IdentityReference.op_Equality*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Equality
  nameWithType: IdentityReference.op_Equality
- uid: System.Security.Principal.IdentityReference.op_Inequality*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Inequality
  nameWithType: IdentityReference.op_Inequality
- uid: System.Security.Principal.IdentityReference.ToString*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: ToString
  nameWithType: IdentityReference.ToString
- uid: System.Security.Principal.IdentityReference.Translate*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Translate
  nameWithType: IdentityReference.Translate
- uid: System.Security.Principal.IdentityReference.Value*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Value
  nameWithType: IdentityReference.Value
