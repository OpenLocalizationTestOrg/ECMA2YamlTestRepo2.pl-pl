### YamlMime:ManagedReference
items:
- uid: System.Web.HttpServerUtility
  id: HttpServerUtility
  children:
  - System.Web.HttpServerUtility.ClearError
  - System.Web.HttpServerUtility.CreateObject(System.String)
  - System.Web.HttpServerUtility.CreateObject(System.Type)
  - System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)
  - System.Web.HttpServerUtility.Execute(System.String)
  - System.Web.HttpServerUtility.Execute(System.String,System.Boolean)
  - System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)
  - System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  - System.Web.HttpServerUtility.GetLastError
  - System.Web.HttpServerUtility.HtmlDecode(System.String)
  - System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.HtmlEncode(System.String)
  - System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.MachineName
  - System.Web.HttpServerUtility.MapPath(System.String)
  - System.Web.HttpServerUtility.ScriptTimeout
  - System.Web.HttpServerUtility.Transfer(System.String)
  - System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)
  - System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)
  - System.Web.HttpServerUtility.TransferRequest(System.String)
  - System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)
  - System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  - System.Web.HttpServerUtility.UrlDecode(System.String)
  - System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.UrlEncode(System.String)
  - System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.UrlPathEncode(System.String)
  - System.Web.HttpServerUtility.UrlTokenDecode(System.String)
  - System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])
  langs:
  - csharp
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
  type: Class
  summary: "Udostępnia metody pomocnicze do przetwarzania żądań sieci Web."
  remarks: "Metody i właściwości klasy HttpServerUtility są dostępne za pośrednictwem wewnętrznego <xref:System.Web.HttpContext.Server%2A>Obiekt udostępniany przez platformę ASP.NET.</xref:System.Web.HttpContext.Server%2A>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192870).  \n  \n The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method and the <xref:System.Web.HttpServerUtility.UrlEncode%2A> method of the HttpServerUtility class. The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method helps ensure that any user-supplied string input will be rendered as static text in browsers instead of executable script or HTML elements. The <xref:System.Web.HttpServerUtility.UrlEncode%2A> method encodes URLs so that they are correctly transmitted in the HTTP stream.  \n  \n [!code-cs[System.Web.HttpServerUtility1#1](~/add/codesnippet/csharp/t-system.web.httpserveru_1.aspx)]\n [!code-vb[System.Web.HttpServerUtility1#1](~/add/codesnippet/visualbasic/t-system.web.httpserveru_1.aspx)]"
  syntax:
    content: public sealed class HttpServerUtility
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.ClearError
  id: ClearError
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: ClearError()
  nameWithType: HttpServerUtility.ClearError()
  fullName: System.Web.HttpServerUtility.ClearError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Czyści poprzedniego wyjątku."
  remarks: ''
  example:
  - "The following example clears the last exception that was thrown.  \n  \n [!code-cs[Classic HttpServerUtility.ClearError Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_6_1.cs)]\n [!code-vb[Classic HttpServerUtility.ClearError Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_6_1.vb)]"
  syntax:
    content: public void ClearError ();
    parameters: []
  overload: System.Web.HttpServerUtility.ClearError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.CreateObject(System.String)
  id: CreateObject(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: CreateObject(String)
  nameWithType: HttpServerUtility.CreateObject(String)
  fullName: System.Web.HttpServerUtility.CreateObject(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Tworzy wystąpienie obiektu COM, identyfikowany przez identyfikator programowy obiektu (ProgID) serwera."
  remarks: ''
  example:
  - "The following example creates an object by using the object's ProgID.  \n  \n [!code-vb[Classic HttpServerUtility.CreateObject Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_4_1.vb)]\n [!code-cs[Classic HttpServerUtility.CreateObject Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_4_1.cs)]"
  syntax:
    content: public object CreateObject (string progID);
    parameters:
    - id: progID
      type: System.String
      description: "Klasa lub typ obiektu do utworzenia wystąpienia."
    return:
      type: System.Object
      description: "Nowy obiekt."
  overload: System.Web.HttpServerUtility.CreateObject*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Nie można utworzyć wystąpienia obiektu."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.CreateObject(System.Type)
  id: CreateObject(System.Type)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: CreateObject(Type)
  nameWithType: HttpServerUtility.CreateObject(Type)
  fullName: System.Web.HttpServerUtility.CreateObject(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Tworzy wystąpienie obiektu COM identyfikowanych według typu obiektu serwera."
  syntax:
    content: public object CreateObject (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>reprezentujący obiekt do utworzenia.</xref:System.Type>"
    return:
      type: System.Object
      description: "Nowy obiekt."
  overload: System.Web.HttpServerUtility.CreateObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)
  id: CreateObjectFromClsid(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: CreateObjectFromClsid(String)
  nameWithType: HttpServerUtility.CreateObjectFromClsid(String)
  fullName: System.Web.HttpServerUtility.CreateObjectFromClsid(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Tworzy wystąpienie obiektu COM, identyfikowany przez identyfikator klasy obiektu (CLSID) serwera."
  remarks: ''
  example:
  - "The following example demonstrates how to use the CreateObjectFromClsid method to create a server instance of a COM object.  \n  \n [!code-cs[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_2_1.cs)]\n [!code-vb[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_2_1.vb)]"
  syntax:
    content: public object CreateObjectFromClsid (string clsid);
    parameters:
    - id: clsid
      type: System.String
      description: "Identyfikator klasy obiektu do utworzenia wystąpienia."
    return:
      type: System.Object
      description: "Nowy obiekt."
  overload: System.Web.HttpServerUtility.CreateObjectFromClsid*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Nie można utworzyć wystąpienia obiektu."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String)
  id: Execute(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String)
  nameWithType: HttpServerUtility.Execute(String)
  fullName: System.Web.HttpServerUtility.Execute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Program obsługi dla określonej ścieżki wirtualnej jest wykonywany w kontekście bieżącego żądania."
  remarks: "Metody Execute kontynuuje wykonywanie oryginalnego strony po zakończeniu wykonywania nowej strony. <xref:System.Web.HttpServerUtility.Transfer%2A>Metody bezwarunkowo przenosi wykonanie do innego programu obsługi.</xref:System.Web.HttpServerUtility.Transfer%2A>       Program ASP.NET nie sprawdza, czy bieżący użytkownik jest autoryzowany do wyświetlenia zasobu realizowane przez metody Execute. Mimo że logiki autoryzację i uwierzytelnianie ASP.NET jest uruchamiany przed wywołaniem oryginalne obsługi zasobów, ASP.NET bezpośrednio wywołuje program obsługi wskazywanym przez metody Execute i nie zostanie uruchomiona ponownie logiki uwierzytelniania i autoryzacji dla nowego zasobu. Jeśli zasady zabezpieczeń aplikacji wymaga klientów ma odpowiednie uprawnienia dostępu do zasobu, należy wymusić ponowna autoryzacja lub mechanizm niestandardowych kontroli dostępu aplikacji.       Ponowna autoryzacja można wymusić za pomocą <xref:System.Web.HttpResponse.Redirect%2A>metody zamiast metody Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>wykonuje przekierowanie po stronie klienta, w którym przeglądarka żąda nowego zasobu.</xref:System.Web.HttpResponse.Redirect%2A> Ponieważ ta przekierowania jest nowe żądanie wejścia do systemu, podlega całą logikę uwierzytelniania i autoryzacji zasad zabezpieczeń zarówno usługi Internet Information Services (IIS), jak i platformy ASP.NET.       Można sprawdzić, czy użytkownik ma uprawnienia do wyświetlania zasobów poprzez wykorzystanie metody autoryzacji niestandardowej, która używa <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metody, zanim aplikacja wywołuje metody Execute.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example displays the .aspx page \"Updateinfo.aspx\" in the current directory. Program execution returns to the starting page after the Updateinfo.aspx page is displayed.  \n  \n [!code-vb[Classic HttpServerUtility.Execute Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_15_1.vb)]\n [!code-cs[Classic HttpServerUtility.Execute Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_15_1.cs)]"
  syntax:
    content: public void Execute (string path);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka adresu URL do wykonania."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>path</code> is not a virtual path."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String,System.Boolean)
  id: Execute(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String,Boolean)
  nameWithType: HttpServerUtility.Execute(String,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje w kontekście bieżącego żądania programu obsługi dla określonej ścieżki wirtualnej i określa, czy wyczyścić <> </> *> i <> </> *> kolekcji."
  remarks: ''
  example:
  - "The following example shows how to execute the .aspx page `Updateinfo.aspx` in the current request and preserve the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections. Program execution returns to the starting page after `Updateinfo.aspx` is displayed.  \n  \n [!code-vb[HttpServerUtility.Execute#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_16_1.aspx)]\n [!code-cs[HttpServerUtility.Execute#1](~/add/codesnippet/csharp/m-system.web.httpserveru_16_1.aspx)]"
  syntax:
    content: public void Execute (string path, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka adresu URL do wykonania."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zachować <> </> *> i <> </> *> kolekcji; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>path</code> is not a virtual path."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)
  id: Execute(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String,TextWriter)
  nameWithType: HttpServerUtility.Execute(String,TextWriter)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Program obsługi dla określonej ścieżki wirtualnej jest wykonywany w kontekście bieżącego żądania. A <xref:System.IO.TextWriter>przechwytuje dane wyjściowe z obsługi wykonanego.</xref:System.IO.TextWriter>"
  remarks: "Metody Execute kontynuuje wykonywanie oryginalnego żądania po zakończeniu wykonywania określonej ścieżki wirtualnej. <xref:System.Web.HttpServerUtility.Transfer%2A>Metody bezwarunkowo przenosi wykonanie do innego programu obsługi.</xref:System.Web.HttpServerUtility.Transfer%2A>       Program ASP.NET nie sprawdza, czy bieżący użytkownik jest autoryzowany do wyświetlenia zasobu realizowane przez metody Execute. Mimo że logiki autoryzację i uwierzytelnianie ASP.NET jest uruchamiany przed wywołaniem oryginalne obsługi zasobów, ASP.NET bezpośrednio wywołuje program obsługi wskazywanym przez metody Execute i nie zostanie uruchomiona ponownie logiki uwierzytelniania i autoryzacji dla nowego zasobu. Jeśli zasady zabezpieczeń aplikacji wymaga klientów ma odpowiednie uprawnienia dostępu do zasobu, należy wymusić ponowna autoryzacja lub mechanizm niestandardowych kontroli dostępu aplikacji.       Ponowna autoryzacja można wymusić za pomocą <xref:System.Web.HttpResponse.Redirect%2A>metody zamiast metody Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>wykonuje przekierowanie po stronie klienta, w którym przeglądarka żąda nowego zasobu.</xref:System.Web.HttpResponse.Redirect%2A> Ponieważ ta przekierowania jest nowe żądanie wejścia do systemu, podlega całą logikę uwierzytelniania i autoryzacji zasad zabezpieczeń zarówno usługi Internet Information Services (IIS), jak i platformy ASP.NET.       Można sprawdzić, czy użytkownik ma uprawnienia do wyświetlania zasobów poprzez wykorzystanie metody autoryzacji niestandardowej, która używa <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metody, zanim aplikacja wywołuje metody Execute.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`. It writes the HTML stream received from `writer` to the HTTP output stream.  \n  \n [!code-cs[Classic HttpServerUtility.Execute1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_12_1.cs)]\n [!code-vb[Classic HttpServerUtility.Execute1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_12_1.vb)]"
  syntax:
    content: public void Execute (string path, System.IO.TextWriter writer);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka adresu URL do wykonania."
    - id: writer
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Do przechwytywania danych wyjściowych.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>path</code> is not a virtual path."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)
  id: Execute(System.String,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(String,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Program obsługi dla określonej ścieżki wirtualnej jest wykonywany w kontekście bieżącego żądania. A <xref:System.IO.TextWriter>przechwytywania dane wyjściowe strony i parametrem logicznym Określa, czy wyczyścić <> </> *> i <> </> *> kolekcje.</xref:System.IO.TextWriter>"
  remarks: "<xref:System.Web.HttpServerUtility.Execute%2A>Metoda kontynuuje wykonywanie oryginalnego żądania po zakończeniu wykonywania określonej ścieżki wirtualnej.</xref:System.Web.HttpServerUtility.Execute%2A> <xref:System.Web.HttpServerUtility.Transfer%2A>Metody bezwarunkowo przenosi wykonanie do innego programu obsługi.</xref:System.Web.HttpServerUtility.Transfer%2A>       Program ASP.NET nie sprawdza, czy bieżący użytkownik jest autoryzowany do wyświetlenia zasobu realizowane przez metody Execute. Mimo że logiki autoryzację i uwierzytelnianie ASP.NET jest uruchamiany przed wywołaniem oryginalne obsługi zasobów, ASP.NET bezpośrednio wywołuje program obsługi wskazywanym przez metody Execute i nie zostanie uruchomiona ponownie logiki uwierzytelniania i autoryzacji dla nowego zasobu. Jeśli zasady zabezpieczeń aplikacji wymaga klientów ma odpowiednie uprawnienia dostępu do zasobu, należy wymusić ponowna autoryzacja lub mechanizm niestandardowych kontroli dostępu aplikacji.       Ponowna autoryzacja można wymusić za pomocą <xref:System.Web.HttpResponse.Redirect%2A>metody zamiast metody Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>wykonuje przekierowanie po stronie klienta, w którym przeglądarka żąda nowego zasobu.</xref:System.Web.HttpResponse.Redirect%2A> Ponieważ ta przekierowania jest nowe żądanie wejścia do systemu, podlega całą logikę uwierzytelniania i autoryzacji zasad zabezpieczeń zarówno usługi Internet Information Services (IIS), jak i platformy ASP.NET.       Można sprawdzić, czy użytkownik ma uprawnienia do wyświetlania zasobów poprzez wykorzystanie metody autoryzacji niestandardowej, która używa <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metody, zanim aplikacja wywołuje metody Execute.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`. It writes the HTML stream received from `writer` to the HTTP output stream. The contents of the <xref:System.Web.HttpRequest.Form%2A> and <xref:System.Web.HttpRequest.QueryString%2A> collections are preserved.  \n  \n [!code-cs[HttpServerUtility.Execute02#1](~/add/codesnippet/csharp/0d13d28c-0070-4c47-b943-_1.aspx)]\n [!code-vb[HttpServerUtility.Execute02#1](~/add/codesnippet/visualbasic/0d13d28c-0070-4c47-b943-_1.aspx)]"
  syntax:
    content: public void Execute (string path, System.IO.TextWriter writer, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka adresu URL do wykonania."
    - id: writer
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Do przechwytywania danych wyjściowych.</xref:System.IO.TextWriter>"
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zachować <> </> *> i <> </> *> kolekcji; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).  \n  \n \\- or -  \n  \n <code>path</code> ends with a period (.).  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>nie jest ścieżką wirtualną."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  id: Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(IHttpHandler,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Program obsługi dla określonej ścieżki wirtualnej jest wykonywany w kontekście bieżącego żądania. A <xref:System.IO.TextWriter>dane wyjściowe Przechwytywanie obsługi wykonane i parametrem logicznym Określa, czy wyczyścić <> </> *> i <> </> *> kolekcje.</xref:System.IO.TextWriter>"
  remarks: "Można pisać niestandardowe programy obsługi HTTP do przetwarzania określonych, wstępnie zdefiniowanych typów żądań HTTP w dowolnym języku zgodnym z typowych specyfikacji języka (CLS). Kod wykonywalny, który jest zdefiniowany w klasach programu obsługi HTTP zamiast z konwencjonalnej stron ASP (nazywany także klasyczne środowisko ASP) lub stron ASP.NET odpowiada te określone żądania. Programów obsługi HTTP Zezwalaj na potrzeby interakcji z niskiego poziomu żądań i odpowiedzi usługi serwera sieci Web, na którym działa program Internet Information Services (IIS), które udostępniają funkcje, które są podobne do rozszerzenia ISAPI, ale z prostszych model programowania.       Program ASP.NET nie sprawdza, czy bieżący użytkownik jest autoryzowany do wyświetlania zasobów, która jest dostarczana przez metody Execute. Mimo że logiki autoryzację i uwierzytelnianie ASP.NET jest uruchamiany przed wywołaniem oryginalne obsługi zasobów, ASP.NET bezpośrednio wywołuje program obsługi, który jest wskazywany przez metody Execute i nie zostanie uruchomiona ponownie logiki uwierzytelniania i autoryzacji dla nowego zasobu. Jeśli zasady zabezpieczeń aplikacji wymaga klientów ma odpowiednich uprawnień do uzyskania dostępu do zasobu, należy wymusić ponowna autoryzacja lub mechanizm niestandardowych kontroli dostępu aplikacji.       Ponowna autoryzacja można wymusić za pomocą <xref:System.Web.HttpResponse.Redirect%2A>metody zamiast metody Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>Wykonuje przekierowanie po stronie klienta, w którym przeglądarka żąda nowego zasobu.</xref:System.Web.HttpResponse.Redirect%2A> Ponieważ ta przekierowania jest nowe żądanie wejścia do systemu, podlega całą logikę uwierzytelniania i autoryzacji zasad zabezpieczeń zarówno usług IIS i platformy ASP.NET.       Można sprawdzić, czy użytkownik ma uprawnienia do wyświetlania zasobów poprzez wykorzystanie metody autoryzacji niestandardowej, która używa <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metody, zanim aplikacja wywołuje metody Execute.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  syntax:
    content: public void Execute (System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "Program obsługi HTTP, który implementuje <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> transferu bieżącego żądania."
    - id: writer
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Do przechwytywania danych wyjściowych.</xref:System.IO.TextWriter>"
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zachować <> </> *> i <> </> *> kolekcji; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Wystąpił błąd podczas wykonywania program obsługi określony przez <code> handler </code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>handler</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.GetLastError
  id: GetLastError
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: GetLastError()
  nameWithType: HttpServerUtility.GetLastError()
  fullName: System.Web.HttpServerUtility.GetLastError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zwraca poprzedni wyjątek."
  remarks: ''
  example:
  - "The following example prints a description of the application's last error to the HTTP output stream. It prints \"No Errors\" if no errors have been encountered.  \n  \n [!code-vb[Classic HttpServerUtility.GetLastError Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_8_1.vb)]\n [!code-cs[Classic HttpServerUtility.GetLastError Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_8_1.cs)]"
  syntax:
    content: public Exception GetLastError ();
    parameters: []
    return:
      type: System.Exception
      description: "Poprzedni wyjątek został zgłoszony."
  overload: System.Web.HttpServerUtility.GetLastError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String)
  id: HtmlDecode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlDecode(String)
  nameWithType: HttpServerUtility.HtmlDecode(String)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dekoduje ciąg kodowany w formacie HTML i zwraca Dekodowany ciąg."
  remarks: "HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag. When the characters are HTML encoded, they are converted to the strings `<` and `>`, which causes the browser to display the less than sign and greater than sign correctly. HtmlDecode decodes text that has been transmitted to the server.  \n  \n This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, this method uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> to decode strings.  \n  \n In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property. In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.  \n  \n Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values."
  example:
  - "The following example contains the function `LoadDecodedFile`, which decodes the data from a file and copies it into one string.  \n  \n [!code-cs[Classic HttpServerUtility.HtmlDecode Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_14_1.aspx)]\n [!code-vb[Classic HttpServerUtility.HtmlDecode Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_14_1.aspx)]"
  syntax:
    content: public string HtmlDecode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Ciąg HTML do zdekodowania."
    return:
      type: System.String
      description: "Tekst zdekodowana."
  overload: System.Web.HttpServerUtility.HtmlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)
  id: HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dekoduje ciąg kodowany w formacie HTML i wysyła dane wyjściowe do powstałe w ten sposób <xref:System.IO.TextWriter>strumienia wyjściowego.</xref:System.IO.TextWriter>"
  remarks: "HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag. When the characters are HTML encoded, they are converted to the strings `<` and `>`, which causes the browser to display the less than sign and greater than sign correctly.  \n  \n <xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.  \n  \n <xref:System.Web.HttpServerUtility.HtmlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, <xref:System.Web.HttpServerUtility.HtmlDecode%2A> uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> to decode strings.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  example:
  - "The following example decodes a string that has been HTML-encoded for transmission over HTTP. It decodes the supplied string named `EncodedString` which contains the text \"This is a &lt;Test String&gt;.\", and copies it into the string named `DecodedString` as \"This is a \\<Test String>.\".  \n  \n [!code-vb[Classic HttpServerUtility.HtmlDecode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_1_1.vb)]\n [!code-cs[Classic HttpServerUtility.HtmlDecode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_1_1.cs)]"
  syntax:
    content: public void HtmlDecode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "Ciąg HTML do zdekodowania."
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Strumienia wyjściowego, który zawiera Dekodowany ciąg.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.HtmlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String)
  id: HtmlEncode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlEncode(String)
  nameWithType: HttpServerUtility.HtmlEncode(String)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ciąg koduje HTML i zwraca ciąg kodowany jako."
  remarks: "HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag. When the characters are HTML encoded, they are converted to the strings `<` and `>`, which causes the browser to display the less than sign and greater than sign correctly.  \n  \n This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, this method uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> to encode strings.  \n  \n In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property. In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.  \n  \n Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values."
  example:
  - "The following example shows how to HTML-encode a value that potentially codes unsafe code. The code resides in the code-behind file for a web page. The value to encode is hard-coded in this example only to simplify the example and show the type of value you might HTML-encode. Typically, you would HTML-encode a value that you received from the user or the request. `Result` refers to a `Literal` control.  \n  \n [!code-cs[System.Web.HttpServerUtility.HtmlEncode#1](~/add/codesnippet/csharp/m-system.web.httpserveru_10_1.cs)]\n [!code-vb[System.Web.HttpServerUtility.HtmlEncode#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_10_1.vb)]  \n  \n The next example is similar to the previous example except it shows how to HTML-encode a value from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.HtmlEncode#2](~/add/codesnippet/csharp/m-system.web.httpserveru_10_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.HtmlEncode#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_10_2.vb)]"
  syntax:
    content: public string HtmlEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Ciąg tekstowy do kodowania."
    return:
      type: System.String
      description: "Tekst kodowany w formacie HTML."
  overload: System.Web.HttpServerUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)
  id: HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ciąg koduje HTML i wysyła wynikowe dane wyjściowe do <xref:System.IO.TextWriter>strumienia wyjściowego.</xref:System.IO.TextWriter>"
  remarks: "HTML encoding ensures that text will be correctly displayed in the browser, not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as an opening or closing bracket of an HTML tag. The HTML encoding of these two characters is `<` and `>`, respectively, which causes the browser to display the less than sign and greater than sign correctly.  \n  \n <xref:System.Web.HttpServerUtility.HtmlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, <xref:System.Web.HttpServerUtility.HtmlEncode%2A> uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> to encode strings.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  example:
  - "The following example encodes a string for transmission by HTTP. It encodes the string named `TestString`, which contains the text \"This is a \\<Test String>.\", and copies it into the string named `EncodedString` as \"This is a &lt;Test String&gt;.\".  \n  \n [!code-vb[Classic HttpServerUtility.HtmlEncode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_7_1.vb)]\n [!code-cs[Classic HttpServerUtility.HtmlEncode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_7_1.cs)]"
  syntax:
    content: public void HtmlEncode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "Ciąg do zakodowania."
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Strumienia wyjściowego, który zawiera ciąg zakodowany.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.MachineName
  id: MachineName
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: MachineName
  nameWithType: HttpServerUtility.MachineName
  fullName: System.Web.HttpServerUtility.MachineName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera nazwę komputera serwera."
  remarks: ''
  example:
  - "The following example stores the server's computer name as a string variable.  \n  \n [!code-vb[Classic HttpServerUtility.MachineName Example#1](~/add/codesnippet/visualbasic/p-system.web.httpserveru_0_1.vb)]\n [!code-cs[Classic HttpServerUtility.MachineName Example#1](~/add/codesnippet/csharp/p-system.web.httpserveru_0_1.cs)]"
  syntax:
    content: public string MachineName { get; }
    return:
      type: System.String
      description: "Nazwa komputera lokalnego."
  overload: System.Web.HttpServerUtility.MachineName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Nie można odnaleźć nazwy komputera."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: HttpServerUtility.MapPath(String)
  fullName: System.Web.HttpServerUtility.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Zwraca ścieżka fizyczna do pliku, który odpowiada do określonej ścieżki wirtualnej."
  remarks: "If `path` is `null`, the MapPath method returns the full physical path of the directory that contains the current request for the path. The relative path does not need to specify an existing file or folder for this method to return a value. However, you cannot specify a path outside of the Web application.  \n  \n> [!IMPORTANT]\n>  The MapPath method potentially contains sensitive information about the hosting environment. The return value should not be displayed to users.  \n  \n A Web application that resides at `C:\\ExampleSites\\TestMapPath` would return the following results:  \n  \n|Request from|`path`|Returned value|  \n|------------------|------------|--------------------|  \n|RootLevelPage.aspx|`null`|C:\\ExampleSites\\TestMapPath|  \n|RootLevelPage.aspx|\"/DownOneLevel/DownLevelPage.aspx\"|C:\\ExampleSites\\TestMapPath\\DownOneLevel\\DownLevelPage.aspx|  \n|RootLevelPage.aspx|\"/NotRealFolder\"|C:\\ExampleSites\\TestMapPath\\NotRealFolder|  \n|RootLevelPage.aspx|\"../OutsideApplication\"|<xref:System.Web.HttpException>|  \n|/DownOneLevel/DownLevelPage.aspx|`null`|C:\\ExampleSites\\TestMapPath\\DownOneLevel|  \n|/DownOneLevel/DownLevelPage.aspx|\"../RootLevelPage.aspx\"|C:\\ExampleSites\\TestMapPath\\RootLevelPage.aspx|"
  example:
  - "The following example shows how to retrieve the physical file of a relative virtual path. The code resides in the code-behind file for a web page and utilizes the default `Server` object.  \n  \n [!code-cs[System.Web.HttpServerUtility.MapPath#1](~/add/codesnippet/csharp/m-system.web.httpserveru_5_1.cs)]\n [!code-vb[System.Web.HttpServerUtility.MapPath#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_5_1.vb)]  \n  \n The next example is similar to the previous example except it shows how to retrieve a physical path from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.MapPath#2](~/add/codesnippet/csharp/m-system.web.httpserveru_5_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.MapPath#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_5_2.vb)]"
  syntax:
    content: public string MapPath (string path);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka wirtualna aplikacji sieci Web."
    return:
      type: System.String
      description: "Ścieżka fizyczna do pliku na serwerze sieci Web, która odpowiada <code> path </code>."
  overload: System.Web.HttpServerUtility.MapPath*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=&quot;System.Web.HttpContext&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.ScriptTimeout
  id: ScriptTimeout
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: ScriptTimeout
  nameWithType: HttpServerUtility.ScriptTimeout
  fullName: System.Web.HttpServerUtility.ScriptTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Pobiera i ustawia wartość limitu czasu żądania w sekundach."
  remarks: "W pliku Web.config można ustawić właściwości ScriptTimeout przez ustawienie `executionTimeout` atrybut elementu. Ustawienie limitu czasu programowo z właściwością ScriptTimeout ma pierwszeństwo przed ustawieniem pliku Web.config.      > [!NOTE] > Jeśli ustawisz `debug` atrybutu elementu `true` w pliku Web.config wartość ScriptTimeout zostaną zignorowane."
  example:
  - "The following example sets the request time-out period to 60 seconds.  \n  \n [!code-vb[Classic HttpServerUtility.ScriptTimeout Example#1](~/add/codesnippet/visualbasic/p-system.web.httpserveru_1_1.vb)]\n [!code-cs[Classic HttpServerUtility.ScriptTimeout Example#1](~/add/codesnippet/csharp/p-system.web.httpserveru_1_1.cs)]"
  syntax:
    content: public int ScriptTimeout { get; set; }
    return:
      type: System.Int32
      description: "Ustawienie wartości limitu czasu dla żądania."
  overload: System.Web.HttpServerUtility.ScriptTimeout*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=&quot;System.Web.HttpContext&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Limit czasu jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> lub, w przeciwnym razie nie można ustawić."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Transfer(System.String)
  id: Transfer(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Transfer(String)
  nameWithType: HttpServerUtility.Transfer(String)
  fullName: System.Web.HttpServerUtility.Transfer(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dla bieżącego żądania kończy wykonywanie bieżącej strony i uruchamia wykonywanie nowej strony przy użyciu określonej ścieżki adresu URL strony."
  remarks: "Strona przekazanego powinna być innej strony .aspx. Na przykład transferu do strony ASP lub .asmx jest nieprawidłowy. Metoda transferu zachowuje <xref:System.Web.HttpRequest.QueryString%2A>i <xref:System.Web.HttpRequest.Form%2A>Kolekcje.</xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A>       Transfer wywołania <xref:System.Web.HttpResponse.End%2A>, które zwraca <xref:System.Threading.ThreadAbortException>wyjątek po zakończeniu.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A>       Program ASP.NET nie sprawdza, czy bieżący użytkownik jest autoryzowany do wyświetlenia zasobu realizowane przez metodę transferu. Mimo że logiki autoryzację i uwierzytelnianie ASP.NET jest uruchamiany przed wywołaniem oryginalne obsługi zasobów, ASP.NET bezpośrednio wywołuje program obsługi wskazywanym przez metodę transferu i nie zostanie uruchomiona ponownie logiki uwierzytelniania i autoryzacji dla nowego zasobu. Jeśli zasady zabezpieczeń aplikacji wymaga klientów ma odpowiednie uprawnienia dostępu do zasobu, należy wymusić ponowna autoryzacja lub mechanizm niestandardowych kontroli dostępu aplikacji.       Ponowna autoryzacja można wymusić za pomocą <xref:System.Web.HttpResponse.Redirect%2A>metody zamiast metody transferu.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>Metoda wykonuje przekierowanie po stronie klienta, w którym przeglądarka żąda nowego zasobu.</xref:System.Web.HttpResponse.Redirect%2A> Ponieważ ta przekierowania jest nowe żądanie wejścia do systemu, podlega całą logikę uwierzytelniania i autoryzacji zasad zabezpieczeń zarówno usługi Internet Information Services (IIS), jak i platformy ASP.NET.       Można sprawdzić, czy użytkownik ma uprawnienia do wyświetlania zasobów poprzez wykorzystanie metody autoryzacji niestandardowej, która używa <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metody, zanim aplikacja wywołuje metodę transferu.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  syntax:
    content: public void Transfer (string path);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka adresu URL nowej strony na serwerze do wykonania."
  overload: System.Web.HttpServerUtility.Transfer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)
  id: Transfer(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Transfer(String,Boolean)
  nameWithType: HttpServerUtility.Transfer(String,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Kończy wykonywanie bieżącej strony i rozpoczyna się wykonanie nowej strony przy użyciu określonej ścieżki adresu URL strony. Określa, czy wyczyścić <> </> *> i <> </> *> kolekcji."
  remarks: "Strona przekazanego powinna być innej strony .aspx. Na przykład transferu do strony ASP lub .asmx jest nieprawidłowy.       Transfer wywołania <xref:System.Web.HttpResponse.End%2A>, które zwraca <xref:System.Threading.ThreadAbortException>wyjątek po zakończeniu.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A>       Jeśli ustawisz `preserveForm` parametr `true`, strony docelowej będą mogli uzyskać dostępu do stanu widoku poprzedniej strony za pomocą <xref:System.Web.UI.Page.PreviousPage%2A>Właściwości.</xref:System.Web.UI.Page.PreviousPage%2A>       Ze względów bezpieczeństwa należy przechowywać `enableViewStateMac` ustawić atrybutu `true`. Program ASP.NET nie sprawdza, czy bieżący użytkownik jest autoryzowany do wyświetlenia zasobu realizowane przez metodę transferu. Mimo że logiki autoryzację i uwierzytelnianie ASP.NET jest uruchamiany przed wywołaniem oryginalne obsługi zasobów, ASP.NET bezpośrednio wywołuje program obsługi wskazywanym przez metodę transferu i nie zostanie uruchomiona ponownie logiki uwierzytelniania i autoryzacji dla nowego zasobu. Jeśli zasady zabezpieczeń aplikacji wymaga klientów ma odpowiednie uprawnienia dostępu do zasobu, należy wymusić ponowna autoryzacja lub mechanizm niestandardowych kontroli dostępu aplikacji.       Ponowna autoryzacja można wymusić za pomocą <xref:System.Web.HttpResponse.Redirect%2A>metody zamiast metody transferu.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>Metoda wykonuje przekierowanie po stronie klienta, w którym przeglądarka żąda nowego zasobu.</xref:System.Web.HttpResponse.Redirect%2A> Ponieważ ta przekierowania jest nowe żądanie wejścia do systemu, podlega całą logikę uwierzytelniania i autoryzacji zasad zabezpieczeń zarówno usługi Internet Information Services (IIS), jak i platformy ASP.NET.       Można sprawdzić, czy użytkownik ma uprawnienia do wyświetlania zasobów poprzez wykorzystanie metody autoryzacji niestandardowej, która używa <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metody, zanim aplikacja wywołuje metodę transferu.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example executes a new page in the same directory as the current page.  \n  \n [!code-cs[Classic HttpServerUtility.Transfer Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_3_1.cs)]\n [!code-vb[Classic HttpServerUtility.Transfer Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_3_1.vb)]"
  syntax:
    content: public void Transfer (string path, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka adresu URL nowej strony na serwerze do wykonania."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zachować <> </> *> i <> </> *> kolekcji; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Transfer*
  exceptions:
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "Bieżącego żądania strony jest wywołaniem zwrotnym."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)
  id: Transfer(System.Web.IHttpHandler,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Transfer(IHttpHandler,Boolean)
  nameWithType: HttpServerUtility.Transfer(IHttpHandler,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(IHttpHandler,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Kończy wykonywanie bieżącej strony i rozpoczyna się wykonanie nowe żądanie przy użyciu niestandardowy program obsługi HTTP, który implementuje <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interfejsu i określa, czy wyczyścić <> </> *> i <> </> *> kolekcji."
  remarks: "Można pisać niestandardowe programy obsługi HTTP do przetwarzania określonych, wstępnie zdefiniowanych typów żądań HTTP w dowolnym języku zgodnym z typowych specyfikacji języka (CLS). Kod wykonywalny, który jest zdefiniowany w klasach programu obsługi HTTP zamiast z konwencjonalnej stron ASP (nazywany także klasyczne środowisko ASP) lub stron ASP.NET odpowiada te określone żądania. Programów obsługi HTTP Zezwalaj na potrzeby interakcji z niskiego poziomu żądań i odpowiedzi usługi serwera sieci Web, na którym działa program Internet Information Services (IIS), które udostępniają funkcje, które są podobne do rozszerzenia ISAPI, ale z prostszych model programowania.       Jeśli ustawisz `preserveForm` parametr `true`, strony docelowej będą mogli uzyskać dostępu do stanu widoku poprzedniej strony za pomocą <xref:System.Web.UI.Page.PreviousPage%2A>Właściwości.</xref:System.Web.UI.Page.PreviousPage%2A>       Ze względów bezpieczeństwa należy przechowywać `enableViewStateMac` ustawić atrybutu `true`. Program ASP.NET nie sprawdza, czy bieżący użytkownik jest autoryzowany do wyświetlenia zasobu dostarczonych przez <xref:System.Web.HttpServerUtility.Transfer%2A>metody.</xref:System.Web.HttpServerUtility.Transfer%2A> Mimo że logiki autoryzację i uwierzytelnianie ASP.NET jest uruchamiany przed wywołaniem oryginalne obsługi zasobów, ASP.NET bezpośrednio wywołuje program obsługi wskazywanym przez metodę transferu i nie zostanie uruchomiona ponownie logiki uwierzytelniania i autoryzacji dla nowego zasobu. Jeśli zasady zabezpieczeń aplikacji wymaga klientów ma odpowiednie uprawnienia dostępu do zasobu, należy wymusić ponowna autoryzacja lub mechanizm niestandardowych kontroli dostępu aplikacji.       Ponowna autoryzacja można wymusić za pomocą <xref:System.Web.HttpResponse.Redirect%2A>metody zamiast metody transferu.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>Metoda wykonuje przekierowanie po stronie klienta, w którym przeglądarka żąda nowego zasobu.</xref:System.Web.HttpResponse.Redirect%2A> Ponieważ ta przekierowania jest nowe żądanie wejścia do systemu, podlega całą logikę uwierzytelniania i autoryzacji zasad zabezpieczeń zarówno usług IIS i platformy ASP.NET.       Można sprawdzić, czy użytkownik ma uprawnienia do wyświetlania zasobów poprzez wykorzystanie metody autoryzacji niestandardowej, która używa <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metody, zanim aplikacja wywołuje metodę transferu.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  syntax:
    content: public void Transfer (System.Web.IHttpHandler handler, bool preserveForm);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "Program obsługi HTTP, który implementuje <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> transferu bieżącego żądania."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zachować <> </> *> i <> </> *> kolekcji; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Transfer*
  exceptions:
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "Bieżącego żądania strony jest wywołaniem zwrotnym."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String)
  id: TransferRequest(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String)
  nameWithType: HttpServerUtility.TransferRequest(String)
  fullName: System.Web.HttpServerUtility.TransferRequest(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje asynchroniczny wykonanie określonego adresu URL."
  remarks: "Przeciążenie tej metody wymaga <xref:System.Web.HttpServerUtility.TransferRequest%2A>przeciążenia z `preserveForm` ustawiona `false`, `method` ustawiona `null`, `headers` ustawiona `null`i `preserveUser` ustawiona `true`.</xref:System.Web.HttpServerUtility.TransferRequest%2A> Aby uzyskać więcej informacji, zobacz sekcję &quot;Uwagi&quot; w <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>przeciążenia.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>"
  syntax:
    content: public void TransferRequest (string path);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka adresu URL nowej strony na serwerze do wykonania."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Żądanie wymaga trybu zintegrowanego potoku [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Serwer nie jest dostępna do obsługi żądania."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code> Parametr jest nieprawidłowy."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)
  id: TransferRequest(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje asynchroniczny wykonanie określonego adresu URL i zachowuje parametrów ciągu zapytania."
  remarks: "Wywołuje tego przeciążenia <xref:System.Web.HttpServerUtility.TransferRequest%2A>przeciążenia z `preserveForm` parametru ustawioną wartość przekazano, `method` ustawiona `null`, `headers` ustawiona `null`i `preserveUser` ustawiona `true`.</xref:System.Web.HttpServerUtility.TransferRequest%2A> Aby uzyskać więcej informacji zobacz sekcję &quot;Uwagi&quot; w <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>       Metody TransferRequest wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void TransferRequest (string path, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka adresu URL nowej strony na serwerze do wykonania."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zachować <> </> *> kolekcji; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> wyczyść <> </> *> kolekcji."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Żądanie wymaga trybu zintegrowanego potoku [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Serwer nie jest dostępna do obsługi żądania."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code> Parametr jest nieprawidłowy."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  id: TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String,Boolean,String,NameValueCollection)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje asynchroniczny wykonanie określonego adresu URL za pomocą określonej metody HTTP i nagłówków."
  remarks: "Ta metoda jest używana podczas uruchamiania w trybie zintegrowanym potoku [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] umożliwia przetwarzanie żądań do można przenosić od jednego zasobu typu do drugiego podczas wykonywania żądania docelowych z kontekstu żądania poprawne. Na przykład metody TransferRequest metoda służy do transferowania żądanie strony ASPX na żądanie strony XML.       Metoda metody TransferRequest wykonuje asynchroniczne podrzędnych wykonanie określonego adresu URL z następujących warunków: - Jeśli `path` parametr określa ciąg zapytania, będzie on używany jako nowe parametry zapytania. Jeśli ciąg zapytania nie jest włączone, ciąg zapytania żądania będą ponownie używane.      -Jeśli `method` parametr jest określony, będzie on używany. Jeśli jest `null`, zostanie użyta metoda HTTP oryginalnego żądania.      -Jeśli `preserveForm` parametr jest `true`, bieżącej treści jednostki żądania będą dostępne na żądanie docelowe. Umożliwia wpisów formularza i przekazuje je do przeniesienia.      — Jeśli tożsamości użytkownika jest obecnie ustawiona dla oryginalnego żądania, tożsamość zostanie przeniesiona do nowego żądania. Dzięki temu uwierzytelnianych żądań ponownego używania wynik uwierzytelniania dla nowego żądania. Jeśli nie chcesz, aby użytkownik, który ma zostać przesłany, Ustaw użytkownika `null` na oryginalne żądanie przed przeniesieniem.      -Jeśli `headers` parametr jest określony, nowe żądanie będzie wykonywane za pomocą określonego nagłówków. Może służyć do modyfikowania nagłówki żądania i pliki cookie dla nowego żądania lub Dodaj specjalne nagłówek, który określa, gdzie otrzymano oryginalne żądanie.           Ta metoda wywołuje <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29>przeciążenie metody z `preserveUser` ustawiona `true`.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29>"
  syntax:
    content: public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka adresu URL nowej strony na serwerze do wykonania."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zachować <> </> *> kolekcji; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> wyczyść <> </> *> kolekcji."
    - id: method
      type: System.String
      description: "Metoda HTTP do użycia podczas wykonywania nowe żądanie."
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> nagłówków żądania dla nowego żądania."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Żądanie wymaga [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] działają w trybie zintegrowanym."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Serwer nie jest dostępna do obsługi żądania."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code> Parametr jest nieprawidłowy."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  id: TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Wykonuje asynchroniczne wykonanie określonego adresu URL przy użyciu określonej metody HTTP, nagłówki i ścieżkę, a opcjonalnie zachowuje wartości formularza i tożsamości użytkownika."
  remarks: "Aby uzyskać więcej informacji zobacz sekcję &quot;Uwagi&quot; w <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>"
  syntax:
    content: public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser);
    parameters:
    - id: path
      type: System.String
      description: "Ścieżka."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zachować <> </> *> kolekcji; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> wyczyść <> </> *> kolekcji."
    - id: method
      type: System.String
      description: "Metoda HTTP do użycia w nowe żądanie."
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> obiekt, który zawiera nagłówki żądania dla nowego żądania."
    - id: preserveUser
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby zachować tożsamość użytkownika; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Inne przeciążenia metody tej metody wywołać tego przeciążenia z tym parametrem ustawioną <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Żądanie wymaga trybu zintegrowanego potoku [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Serwer nie jest dostępna do obsługi żądania."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code> Parametr jest nieprawidłowy."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlDecode(System.String)
  id: UrlDecode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlDecode(String)
  nameWithType: HttpServerUtility.UrlDecode(String)
  fullName: System.Web.HttpServerUtility.UrlDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adres URL dekoduje ciągiem i zwraca Dekodowany ciąg."
  remarks: "Kodowanie adresu URL zapewnia wszystkie przeglądarki poprawnie przekazuje tekstu w ciągach adresu URL. Znaki, takie jak znak zapytania (?), znaku handlowego &quot;i&quot; (&), ukośnika (/), a spacje może być obcięty lub uszkodzony przez niektóre przeglądarki. W związku z tym te znaki muszą być kodowane w `<a>` znaczników lub w zapytaniu ciągi, gdzie ciągi mogą być ponownie wysyłane przez przeglądarki w ciągu żądania.       Jest to wygodny sposób dostępu do <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>metody w czasie wykonywania w aplikacji ASP.NET.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName> Wewnętrznie ta metoda używa <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>zdekodować ciągów.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>       W pliku CodeBehind dla strony sieci web platformy ASP.NET, należy uzyskać dostęp do wystąpienia <xref:System.Web.HttpServerUtility>klasy za pomocą `Server` właściwości.</xref:System.Web.HttpServerUtility> W klasie, która nie znajduje się w pliku związanym z kodem, użyj `HttpContext.Current.Server` Aby uzyskać dostęp do wystąpienia <xref:System.Web.HttpServerUtility>klasy.</xref:System.Web.HttpServerUtility>       Poza aplikacją sieci web, użyj <xref:System.Net.WebUtility>klasy do kodowania i dekodowania wartości.</xref:System.Net.WebUtility>"
  example:
  - "The following example shows how to URL-decode a value that is retrieved from the query string. The code resides in the code-behind file for a web page. `ReturnPage` refers to a `HyperLink` control.  \n  \n [!code-vb[System.Web.HttpServerUtility.UrlDecode#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_9_1.vb)]\n [!code-cs[System.Web.HttpServerUtility.UrlDecode#1](~/add/codesnippet/csharp/m-system.web.httpserveru_9_1.cs)]  \n  \n The next example is similar to the previous example except it shows how to URL-decode a value from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.UrlDecode#2](~/add/codesnippet/csharp/m-system.web.httpserveru_9_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.UrlDecode#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_9_2.vb)]"
  syntax:
    content: public string UrlDecode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Ciąg tekstowy do zdekodowania."
    return:
      type: System.String
      description: "Tekst zdekodowana."
  overload: System.Web.HttpServerUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)
  id: UrlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dekoduje ciąg HTML odebrane w adresie URL, a następnie wysyła dane wyjściowe do powstałe w ten sposób <xref:System.IO.TextWriter>strumienia wyjściowego.</xref:System.IO.TextWriter>"
  remarks: "Kodowanie adresu URL zapewnia wszystkie przeglądarki poprawnie przekazuje tekstu w ciągach adresu URL. Znaki, takie jak znak zapytania (?), znaku handlowego &quot;i&quot; (&), ukośnika (/), a spacje może być obcięty lub uszkodzony przez niektóre przeglądarki. W związku z tym te znaki muszą być kodowane w `<a>` znaczników lub w zapytaniu ciągi, gdzie ciągi mogą być ponownie wysyłane przez przeglądarki w ciągu żądania.       <xref:System.Web.HttpServerUtility.UrlDecode%2A>jest to wygodny sposób dostępu <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>metody w czasie wykonywania w aplikacji ASP.NET.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName></xref:System.Web.HttpServerUtility.UrlDecode%2A> Wewnętrznie <xref:System.Web.HttpServerUtility.UrlDecode%2A>używa <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>zdekodować ciągów.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName> </xref:System.Web.HttpServerUtility.UrlDecode%2A>       Do kodowania i dekodowania wartości spoza aplikacji sieci web, użyj <xref:System.Net.WebUtility>klasy.</xref:System.Net.WebUtility>"
  example:
  - "The following example decodes the string named `EncodedString` (received in a URL) into the string named `DecodedString`.  \n  \n [!code-vb[Classic HttpServerUtility.UrlDecode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_11_1.vb)]\n [!code-cs[Classic HttpServerUtility.UrlDecode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_11_1.cs)]"
  syntax:
    content: public void UrlDecode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "Ciąg HTML do zdekodowania."
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Strumienia wyjściowego, który zawiera Dekodowany ciąg.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlEncode(System.String)
  id: UrlEncode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlEncode(String)
  nameWithType: HttpServerUtility.UrlEncode(String)
  fullName: System.Web.HttpServerUtility.UrlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ciąg koduje adresu URL i zwraca ciąg kodowany jako."
  remarks: "Kodowanie adresu URL zapewnia wszystkie przeglądarki poprawnie przekazuje tekstu w ciągach adresu URL. Znaki, takie jak znak zapytania (?), znaku handlowego &quot;i&quot; (&), ukośnika (/), a spacje może być obcięty lub uszkodzony przez niektóre przeglądarki. W związku z tym te znaki muszą być kodowane w `<a>` znaczników lub w zapytaniu ciągi, gdzie ciągi mogą być ponownie wysyłane przez przeglądarki w ciągu żądania.       Jest to wygodny sposób dostępu do <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>metody w czasie wykonywania w aplikacji ASP.NET.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName> Wewnętrznie ta metoda używa <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>do kodowania ciągów.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>       W pliku CodeBehind dla strony sieci web platformy ASP.NET, należy uzyskać dostęp do wystąpienia <xref:System.Web.HttpServerUtility>klasy za pomocą `Server` właściwości.</xref:System.Web.HttpServerUtility> W klasie, która nie znajduje się w pliku związanym z kodem, użyj `HttpContext.Current.Server` Aby uzyskać dostęp do wystąpienia <xref:System.Web.HttpServerUtility>klasy.</xref:System.Web.HttpServerUtility>       Poza aplikacją sieci web, użyj <xref:System.Net.WebUtility>klasy do kodowania i dekodowania wartości.</xref:System.Net.WebUtility>"
  example:
  - "The following example shows how to URL-encode a value that is used as a query string value of a hyperlink. The code resides in the code-behind file for a web page. The value to encode is hard-coded in this example only to simplify the example and show the type of value you might URL-encode. Typically, you would URL-encode a value that you received from the user or the request. `NextPage` refers to a `HyperLink` control.  \n  \n [!code-cs[System.Web.HttpServerUtility.UrlEncode#1](~/add/codesnippet/csharp/m-system.web.httpserveru_0_1.cs)]\n [!code-vb[System.Web.HttpServerUtility.UrlEncode#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_0_1.vb)]  \n  \n The next example is similar to the previous example except it shows how to URL-encode a value from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.UrlEncode#2](~/add/codesnippet/csharp/m-system.web.httpserveru_0_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.UrlEncode#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_0_2.vb)]"
  syntax:
    content: public string UrlEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Tekst do kodowania adresu URL."
    return:
      type: System.String
      description: "Tekst zakodowane w adresie URL."
  overload: System.Web.HttpServerUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)
  id: UrlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ciąg koduje adresu URL i wysyła wynikowe dane wyjściowe do <xref:System.IO.TextWriter>strumienia wyjściowego.</xref:System.IO.TextWriter>"
  remarks: "Kodowanie adresu URL zapewnia wszystkie przeglądarki poprawnie przekazuje tekstu w ciągach adresu URL. Znaki, takie jak znak zapytania (?), znaku handlowego &quot;i&quot; (&), ukośnika (/), a spacje może być obcięty lub uszkodzony przez niektóre przeglądarki. W związku z tym te znaki muszą być kodowane w `<a>` znaczników lub w zapytaniu ciągi, gdzie ciągi mogą być ponownie wysyłane przez przeglądarki w ciągu żądania.       <xref:System.Web.HttpServerUtility.UrlEncode%2A>jest to wygodny sposób dostępu <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>metody w czasie wykonywania w aplikacji ASP.NET.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName></xref:System.Web.HttpServerUtility.UrlEncode%2A> Wewnętrznie <xref:System.Web.HttpServerUtility.UrlEncode%2A>używa <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>do kodowania ciągów.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName> </xref:System.Web.HttpServerUtility.UrlEncode%2A>       Do kodowania i dekodowania wartości spoza aplikacji sieci web, użyj <xref:System.Net.WebUtility>klasy.</xref:System.Net.WebUtility>"
  example:
  - "The following example encodes a string for transmission by HTTP. It encodes the string named `TestString`, which contains the text \"This is a \\<Test String>.\", and copies it into the string named `EncodedString` as \"This+is+a+%3cTest+String%3e.\".  \n  \n [!code-cs[Classic HttpServerUtility.UrlEncode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_13_1.cs)]\n [!code-vb[Classic HttpServerUtility.UrlEncode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_13_1.vb)]"
  syntax:
    content: public void UrlEncode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "Ciąg tekstowy do kodowania."
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>Strumienia wyjściowego, który zawiera ciąg zakodowany.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlPathEncode(System.String)
  id: UrlPathEncode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlPathEncode(String)
  nameWithType: HttpServerUtility.UrlPathEncode(String)
  fullName: System.Web.HttpServerUtility.UrlPathEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Nie używaj; przeznaczone tylko dla zgodność z przeglądarkami. Użyj <xref:System.Web.HttpServerUtility.UrlEncode*>.</xref:System.Web.HttpServerUtility.UrlEncode*>"
  syntax:
    content: public string UrlPathEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Tekst do kodowania adresu URL."
    return:
      type: System.String
      description: "Tekst zakodowane w adresie URL."
  overload: System.Web.HttpServerUtility.UrlPathEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlTokenDecode(System.String)
  id: UrlTokenDecode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlTokenDecode(String)
  nameWithType: HttpServerUtility.UrlTokenDecode(String)
  fullName: System.Web.HttpServerUtility.UrlTokenDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Dekoduje tokenem ciągu adresu URL, do jego tablicy bajtów równoważne przy użyciu podstawowych cyfr 64."
  remarks: "Metoda UrlTokenDecode konwertuje tokenem ciągu adresu URL, który koduje dane binarne jako podstawowych cyfr 64, na jej reprezentację tablicy bajtów równoważne. Odszyfrować tokeny przesyłane na adres URL i zakodowane przy użyciu <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>.</xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> za pomocą metody UrlTokenDecode       Metoda UrlTokenDecode zwróci tablicy bajtowej puste, jeśli `input` parametr ma długość mniejszą niż jeden."
  syntax:
    content: public static byte[] UrlTokenDecode (string input);
    parameters:
    - id: input
      type: System.String
      description: "Token ciągu adresu URL do zdekodowania."
    return:
      type: System.Byte[]
      description: "Tablica bajtów zawierająca dekodowane token ciągu adresu URL."
  overload: System.Web.HttpServerUtility.UrlTokenDecode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> input </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])
  id: UrlTokenEncode(System.Byte[])
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlTokenEncode(Byte[])
  nameWithType: HttpServerUtility.UrlTokenEncode(Byte[])
  fullName: System.Web.HttpServerUtility.UrlTokenEncode(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Koduje tablicy bajtów w reprezentacji równoważne ciągu przy użyciu podstawowych cyfr 64, można używać w celu przesłania go na adres URL."
  remarks: "Metoda UrlTokenEncode konwertuje tablicę bajtów na równoważne reprezentację zakodowane za pomocą podstawowych cyfr 64. Wynikowy ciąg tokenu można przesyłane na adres URL.       Zwraca pusty ciąg UrlTokenEncode w przypadku `input` parametr ma długość mniejszą niż jeden."
  syntax:
    content: public static string UrlTokenEncode (byte[] input);
    parameters:
    - id: input
      type: System.Byte[]
      description: "Tablica bajtów do kodowania."
    return:
      type: System.String
      description: "Ciąg zawierający zakodowany token Jeśli tablica bajtów *długość* jest większa niż jeden; w przeciwnym razie ciąg pusty (&quot;&quot;)."
  overload: System.Web.HttpServerUtility.UrlTokenEncode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Wartość <code> input </code> parametr jest <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ApplicationException
  parent: System
  isExternal: false
  name: ApplicationException
  nameWithType: ApplicationException
  fullName: System.ApplicationException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Web.HttpServerUtility.ClearError
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ClearError()
  nameWithType: HttpServerUtility.ClearError()
  fullName: System.Web.HttpServerUtility.ClearError()
- uid: System.Web.HttpServerUtility.CreateObject(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObject(String)
  nameWithType: HttpServerUtility.CreateObject(String)
  fullName: System.Web.HttpServerUtility.CreateObject(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpServerUtility.CreateObject(System.Type)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObject(Type)
  nameWithType: HttpServerUtility.CreateObject(Type)
  fullName: System.Web.HttpServerUtility.CreateObject(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObjectFromClsid(String)
  nameWithType: HttpServerUtility.CreateObjectFromClsid(String)
  fullName: System.Web.HttpServerUtility.CreateObjectFromClsid(String)
- uid: System.Web.HttpServerUtility.Execute(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String)
  nameWithType: HttpServerUtility.Execute(String)
  fullName: System.Web.HttpServerUtility.Execute(String)
- uid: System.Web.HttpServerUtility.Execute(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String,Boolean)
  nameWithType: HttpServerUtility.Execute(String,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String,TextWriter)
  nameWithType: HttpServerUtility.Execute(String,TextWriter)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(String,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter,Boolean)
- uid: System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(IHttpHandler,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpServerUtility.GetLastError
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: GetLastError()
  nameWithType: HttpServerUtility.GetLastError()
  fullName: System.Web.HttpServerUtility.GetLastError()
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlDecode(String)
  nameWithType: HttpServerUtility.HtmlDecode(String)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String)
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String,TextWriter)
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlEncode(String)
  nameWithType: HttpServerUtility.HtmlEncode(String)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String)
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String,TextWriter)
- uid: System.Web.HttpServerUtility.MachineName
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MachineName
  nameWithType: HttpServerUtility.MachineName
  fullName: System.Web.HttpServerUtility.MachineName
- uid: System.Web.HttpServerUtility.MapPath(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MapPath(String)
  nameWithType: HttpServerUtility.MapPath(String)
  fullName: System.Web.HttpServerUtility.MapPath(String)
- uid: System.Web.HttpServerUtility.ScriptTimeout
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ScriptTimeout
  nameWithType: HttpServerUtility.ScriptTimeout
  fullName: System.Web.HttpServerUtility.ScriptTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpServerUtility.Transfer(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer(String)
  nameWithType: HttpServerUtility.Transfer(String)
  fullName: System.Web.HttpServerUtility.Transfer(String)
- uid: System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer(String,Boolean)
  nameWithType: HttpServerUtility.Transfer(String,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(String,Boolean)
- uid: System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer(IHttpHandler,Boolean)
  nameWithType: HttpServerUtility.Transfer(IHttpHandler,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(IHttpHandler,Boolean)
- uid: System.Web.HttpServerUtility.TransferRequest(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String)
  nameWithType: HttpServerUtility.TransferRequest(String)
  fullName: System.Web.HttpServerUtility.TransferRequest(String)
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean)
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String,Boolean,String,NameValueCollection)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
- uid: System.Web.HttpServerUtility.UrlDecode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlDecode(String)
  nameWithType: HttpServerUtility.UrlDecode(String)
  fullName: System.Web.HttpServerUtility.UrlDecode(String)
- uid: System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlDecode(String,TextWriter)
- uid: System.Web.HttpServerUtility.UrlEncode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlEncode(String)
  nameWithType: HttpServerUtility.UrlEncode(String)
  fullName: System.Web.HttpServerUtility.UrlEncode(String)
- uid: System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlEncode(String,TextWriter)
- uid: System.Web.HttpServerUtility.UrlPathEncode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlPathEncode(String)
  nameWithType: HttpServerUtility.UrlPathEncode(String)
  fullName: System.Web.HttpServerUtility.UrlPathEncode(String)
- uid: System.Web.HttpServerUtility.UrlTokenDecode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenDecode(String)
  nameWithType: HttpServerUtility.UrlTokenDecode(String)
  fullName: System.Web.HttpServerUtility.UrlTokenDecode(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenEncode(Byte[])
  nameWithType: HttpServerUtility.UrlTokenEncode(Byte[])
  fullName: System.Web.HttpServerUtility.UrlTokenEncode(Byte[])
- uid: System.Web.HttpServerUtility.ClearError*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ClearError
  nameWithType: HttpServerUtility.ClearError
- uid: System.Web.HttpServerUtility.CreateObject*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObject
  nameWithType: HttpServerUtility.CreateObject
- uid: System.Web.HttpServerUtility.CreateObjectFromClsid*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObjectFromClsid
  nameWithType: HttpServerUtility.CreateObjectFromClsid
- uid: System.Web.HttpServerUtility.Execute*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute
  nameWithType: HttpServerUtility.Execute
- uid: System.Web.HttpServerUtility.GetLastError*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: GetLastError
  nameWithType: HttpServerUtility.GetLastError
- uid: System.Web.HttpServerUtility.HtmlDecode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlDecode
  nameWithType: HttpServerUtility.HtmlDecode
- uid: System.Web.HttpServerUtility.HtmlEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlEncode
  nameWithType: HttpServerUtility.HtmlEncode
- uid: System.Web.HttpServerUtility.MachineName*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MachineName
  nameWithType: HttpServerUtility.MachineName
- uid: System.Web.HttpServerUtility.MapPath*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MapPath
  nameWithType: HttpServerUtility.MapPath
- uid: System.Web.HttpServerUtility.ScriptTimeout*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ScriptTimeout
  nameWithType: HttpServerUtility.ScriptTimeout
- uid: System.Web.HttpServerUtility.Transfer*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer
  nameWithType: HttpServerUtility.Transfer
- uid: System.Web.HttpServerUtility.TransferRequest*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest
  nameWithType: HttpServerUtility.TransferRequest
- uid: System.Web.HttpServerUtility.UrlDecode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlDecode
  nameWithType: HttpServerUtility.UrlDecode
- uid: System.Web.HttpServerUtility.UrlEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlEncode
  nameWithType: HttpServerUtility.UrlEncode
- uid: System.Web.HttpServerUtility.UrlPathEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlPathEncode
  nameWithType: HttpServerUtility.UrlPathEncode
- uid: System.Web.HttpServerUtility.UrlTokenDecode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenDecode
  nameWithType: HttpServerUtility.UrlTokenDecode
- uid: System.Web.HttpServerUtility.UrlTokenEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenEncode
  nameWithType: HttpServerUtility.UrlTokenEncode
