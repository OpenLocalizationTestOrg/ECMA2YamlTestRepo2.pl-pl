### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.BuildEngine.BuildItemGroup
  id: BuildItemGroup
  children:
  - Microsoft.Build.BuildEngine.BuildItemGroup.#ctor
  - Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String)
  - Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String,System.Boolean)
  - Microsoft.Build.BuildEngine.BuildItemGroup.Clear
  - Microsoft.Build.BuildEngine.BuildItemGroup.Clone(System.Boolean)
  - Microsoft.Build.BuildEngine.BuildItemGroup.Condition
  - Microsoft.Build.BuildEngine.BuildItemGroup.Count
  - Microsoft.Build.BuildEngine.BuildItemGroup.GetEnumerator
  - Microsoft.Build.BuildEngine.BuildItemGroup.IsImported
  - Microsoft.Build.BuildEngine.BuildItemGroup.Item(System.Int32)
  - Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItem(Microsoft.Build.BuildEngine.BuildItem)
  - Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItemAt(System.Int32)
  - Microsoft.Build.BuildEngine.BuildItemGroup.ToArray
  langs:
  - csharp
  name: BuildItemGroup
  nameWithType: BuildItemGroup
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup
  type: Class
  summary: "Reprezentuje kolekcję <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> obiektów."
  remarks: "Obiekt BuildItemGroup może reprezentować element w projekcie lub wirtualnych Kolekcja elementów, zawierający elementy utworzone po dokonaniu oceny symboli wieloznacznych w `Include` i `Exclude` atrybuty `Item` element."
  example:
  - "The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildItem>, BuildItemGroup, and <xref:Microsoft.Build.BuildEngine.BuildItemGroupCollection> classes are used to add, remove, and change items in the project.  \n  \n [!code-vb[msbuild_AddNewItem#1](~/add/codesnippet/visualbasic/AddNewItem/Module1.vb#1)]\n [!code-cs[msbuild_AddNewItem#1](~/add/codesnippet/csharp/AddNewItem/Program.cs#1)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("BuildItemGroup (Count = { Count }, Condition = { Condition })")]

      public class BuildItemGroup : System.Collections.IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.#ctor
  id: '#ctor'
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: BuildItemGroup()
  nameWithType: BuildItemGroup.BuildItemGroup()
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.BuildItemGroup()
  type: Constructor
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Inicjuje nowe wystąpienie <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref> klasy."
  syntax:
    content: public BuildItemGroup ();
    parameters: []
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String)
  id: AddNewItem(System.String,System.String)
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: AddNewItem(String,String)
  nameWithType: BuildItemGroup.AddNewItem(String,String)
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(String,String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Dodaje nowy <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> z określonym <> </> *> i <> </> *> wartości właściwości do <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>."
  remarks: ''
  example:
  - "The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildItemGroupCollection> classes are used to add, remove, and change items in the project.  \n  \n [!code-vb[msbuild_AddNewItem#1](~/add/codesnippet/visualbasic/AddNewItem/Module1.vb#1)]\n [!code-cs[msbuild_AddNewItem#1](~/add/codesnippet/csharp/AddNewItem/Program.cs#1)]"
  syntax:
    content: public Microsoft.Build.BuildEngine.BuildItem AddNewItem (string itemName, string itemInclude);
    parameters:
    - id: itemName
      type: System.String
      description: "<xref:Microsoft.Build.BuildEngine.BuildItem.Name*>Wartości właściwości, aby przypisać nowe <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>.</xref:Microsoft.Build.BuildEngine.BuildItem.Name*>"
    - id: itemInclude
      type: System.String
      description: "<xref:Microsoft.Build.BuildEngine.BuildItem.Include*>Wartości właściwości, aby przypisać nowe <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>.</xref:Microsoft.Build.BuildEngine.BuildItem.Include*>"
    return:
      type: Microsoft.Build.BuildEngine.BuildItem
      description: "The new <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;></xref>."
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String,System.Boolean)
  id: AddNewItem(System.String,System.String,System.Boolean)
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: AddNewItem(String,String,Boolean)
  nameWithType: BuildItemGroup.AddNewItem(String,String,Boolean)
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Dodaje nowy <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> z określonym <> </> *> i <> </> *> wartości właściwości do <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>, co pozwala określić, czy <xref:Microsoft.Build.BuildEngine.BuildItem.Include*>wartość właściwości jest traktowany jako literał.</xref:Microsoft.Build.BuildEngine.BuildItem.Include*>"
  syntax:
    content: public Microsoft.Build.BuildEngine.BuildItem AddNewItem (string itemName, string itemInclude, bool treatItemIncludeAsLiteral);
    parameters:
    - id: itemName
      type: System.String
      description: "<xref:Microsoft.Build.BuildEngine.BuildItem.Name*>Wartości właściwości, aby przypisać nowe <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>.</xref:Microsoft.Build.BuildEngine.BuildItem.Name*>"
    - id: itemInclude
      type: System.String
      description: "<xref:Microsoft.Build.BuildEngine.BuildItem.Include*>Wartości właściwości, aby przypisać nowe <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref>.</xref:Microsoft.Build.BuildEngine.BuildItem.Include*>"
    - id: treatItemIncludeAsLiteral
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>traktowanie `itemInclude` parametru jako wartości literału; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: Microsoft.Build.BuildEngine.BuildItem
      description: "The new <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;></xref>."
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Clear
  id: Clear
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: Clear()
  nameWithType: BuildItemGroup.Clear()
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.Clear()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Usuwa <xref:Microsoft.Build.BuildEngine.BuildItemGroup.Condition*>wartości właściwości i wszystkie <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> obiektów z <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>.</xref:Microsoft.Build.BuildEngine.BuildItemGroup.Condition*>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.Clear*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Clone(System.Boolean)
  id: Clone(System.Boolean)
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: Clone(Boolean)
  nameWithType: BuildItemGroup.Clone(Boolean)
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.Clone(Boolean)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Tworzy kopię bezpośrednich lub płytka <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>."
  remarks: "Płytka kopia <xref:Microsoft.Build.BuildEngine.BuildItemGroup>odwołuje się do tej samej grupy właściwość co oryginalne.</xref:Microsoft.Build.BuildEngine.BuildItemGroup> Modyfikacji płytka kopia zostaną uwzględnione w obu kopii.       Głębokie kopię <xref:Microsoft.Build.BuildEngine.BuildItemGroup>tworzy nowy element XML odwołują się tak, aby obie kopie <xref:Microsoft.Build.BuildEngine.BuildItemGroup>mogą być modyfikowane niezależnie.</xref:Microsoft.Build.BuildEngine.BuildItemGroup> </xref:Microsoft.Build.BuildEngine.BuildItemGroup>       Jeśli <xref:Microsoft.Build.BuildEngine.BuildItemGroup>odpowiada bezpośrednio do elementu w projekcie (zamiast odpowiadający zbiór elementów utworzonych po dokonaniu oceny symboli wieloznacznych w `Include` i `Exclude` atrybuty `Item` elementu), tylko głębokość kopie są dozwolone.</xref:Microsoft.Build.BuildEngine.BuildItemGroup>"
  syntax:
    content: public Microsoft.Build.BuildEngine.BuildItemGroup Clone (bool deepClone);
    parameters:
    - id: deepClone
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Aby utworzyć kopię bezpośrednich <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: Microsoft.Build.BuildEngine.BuildItemGroup
      description: "Kopię <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>."
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.Clone*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Condition
  id: Condition
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: Condition
  nameWithType: BuildItemGroup.Condition
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.Condition
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Pobiera lub ustawia `Condition` grupy elementów wartość atrybutu."
  syntax:
    content: public string Condition { get; set; }
    return:
      type: System.String
      description: "`Condition` Wartość Grupa atrybutu."
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.Condition*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Count
  id: Count
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: Count
  nameWithType: BuildItemGroup.Count
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.Count
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Pobiera wartość wskazującą liczbę <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> obiekty w <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Wartość całkowitą reprezentującą liczbę <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> obiekty w <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>."
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.Count*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: BuildItemGroup.GetEnumerator()
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.GetEnumerator()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Pobiera moduł wyliczający, który dokonuje iteracji <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>."
  remarks: "Ta metoda umożliwia obiekt wywołujący do używania `foreach` instrukcja języka C# (`for each` w [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]) do iteracji poszczególnych <xref:Microsoft.Build.BuildEngine.BuildItem>obiektów w <xref:Microsoft.Build.BuildEngine.BuildItemGroup>.</xref:Microsoft.Build.BuildEngine.BuildItemGroup> </xref:Microsoft.Build.BuildEngine.BuildItem>"
  example:
  - "The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildProperty><xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> classes to list all the items and properties in the project.  \n  \n [!code-vb[msbuild_ListItemsAndProperties#1](~/add/codesnippet/visualbasic/ListItemAndPropertiesVB/Module1.vb#1)]\n [!code-cs[msbuild_ListItemsAndProperties#1](~/add/codesnippet/csharp/ListItemAndPropertiesCS/Program.cs#1)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Dla całego <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.IsImported
  id: IsImported
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: IsImported
  nameWithType: BuildItemGroup.IsImported
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.IsImported
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Pobiera lub ustawia wartość wskazującą, czy grupa została zaimportowana do projektu."
  syntax:
    content: public bool IsImported { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Jeśli grupa elementów zostały zaimportowane do projektu; w przeciwnym razie <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.IsImported*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: BuildItemGroup.Item(Int32)
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.Item(Int32)
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Pobiera lub ustawia <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> obiektu w tym <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>."
  syntax:
    content: public Microsoft.Build.BuildEngine.BuildItem this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> obiekt, aby pobrać lub ustawić."
    return:
      type: Microsoft.Build.BuildEngine.BuildItem
      description: "A <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;></xref> object in this <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;></xref>."
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.Item*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItem(Microsoft.Build.BuildEngine.BuildItem)
  id: RemoveItem(Microsoft.Build.BuildEngine.BuildItem)
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: RemoveItem(BuildItem)
  nameWithType: BuildItemGroup.RemoveItem(BuildItem)
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItem(BuildItem)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Usuwa określony <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> z <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>."
  remarks: ''
  example:
  - "The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildItemGroupCollection> classes are used to add, remove, and change items in the project.  \n  \n [!code-vb[msbuild_AddNewItem#1](~/add/codesnippet/visualbasic/AddNewItem/Module1.vb#1)]\n [!code-cs[msbuild_AddNewItem#1](~/add/codesnippet/csharp/AddNewItem/Program.cs#1)]"
  syntax:
    content: public void RemoveItem (Microsoft.Build.BuildEngine.BuildItem itemToRemove);
    parameters:
    - id: itemToRemove
      type: Microsoft.Build.BuildEngine.BuildItem
      description: "<xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> Do usunięcia."
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItemAt(System.Int32)
  id: RemoveItemAt(System.Int32)
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: RemoveItemAt(Int32)
  nameWithType: BuildItemGroup.RemoveItemAt(Int32)
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItemAt(Int32)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Usuwa <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> pod określonym indeksem z <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>."
  syntax:
    content: public void RemoveItemAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Liczony od zera indeks <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> obiektu do usunięcia."
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItemAt*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.ToArray
  id: ToArray
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  langs:
  - csharp
  name: ToArray()
  nameWithType: BuildItemGroup.ToArray()
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.ToArray()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: "Kopie <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> obiekty w <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref> do nowej tablicy."
  syntax:
    content: public Microsoft.Build.BuildEngine.BuildItem[] ToArray ();
    parameters: []
    return:
      type: Microsoft.Build.BuildEngine.BuildItem[]
      description: "Nowe tablica zawierająca <xref href=&quot;Microsoft.Build.BuildEngine.BuildItem&quot;> </xref> obiektów skopiowanych z <xref href=&quot;Microsoft.Build.BuildEngine.BuildItemGroup&quot;> </xref>."
  overload: Microsoft.Build.BuildEngine.BuildItemGroup.ToArray*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.#ctor
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: BuildItemGroup()
  nameWithType: BuildItemGroup.BuildItemGroup()
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.BuildItemGroup()
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String)
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: AddNewItem(String,String)
  nameWithType: BuildItemGroup.AddNewItem(String,String)
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(String,String)
- uid: Microsoft.Build.BuildEngine.BuildItem
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildItem
  nameWithType: BuildItem
  fullName: Microsoft.Build.BuildEngine.BuildItem
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(System.String,System.String,System.Boolean)
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: AddNewItem(String,String,Boolean)
  nameWithType: BuildItemGroup.AddNewItem(String,String,Boolean)
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Clear
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: Clear()
  nameWithType: BuildItemGroup.Clear()
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.Clear()
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Clone(System.Boolean)
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: Clone(Boolean)
  nameWithType: BuildItemGroup.Clone(Boolean)
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.Clone(Boolean)
- uid: Microsoft.Build.BuildEngine.BuildItemGroup
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildItemGroup
  nameWithType: BuildItemGroup
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Condition
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: Condition
  nameWithType: BuildItemGroup.Condition
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.Condition
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Count
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: Count
  nameWithType: BuildItemGroup.Count
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.GetEnumerator
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: GetEnumerator()
  nameWithType: BuildItemGroup.GetEnumerator()
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.IsImported
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: IsImported
  nameWithType: BuildItemGroup.IsImported
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.IsImported
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Item(System.Int32)
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: Item(Int32)
  nameWithType: BuildItemGroup.Item(Int32)
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.Item(Int32)
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItem(Microsoft.Build.BuildEngine.BuildItem)
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: RemoveItem(BuildItem)
  nameWithType: BuildItemGroup.RemoveItem(BuildItem)
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItem(BuildItem)
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItemAt(System.Int32)
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: RemoveItemAt(Int32)
  nameWithType: BuildItemGroup.RemoveItemAt(Int32)
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItemAt(Int32)
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.ToArray
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: ToArray()
  nameWithType: BuildItemGroup.ToArray()
  fullName: Microsoft.Build.BuildEngine.BuildItemGroup.ToArray()
- uid: Microsoft.Build.BuildEngine.BuildItem[]
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildItem
  nameWithType: BuildItem
  fullName: Microsoft.Build.BuildEngine.BuildItem[]
  spec.csharp:
  - uid: Microsoft.Build.BuildEngine.BuildItem
    name: BuildItem
    nameWithType: BuildItem
    fullName: BuildItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.#ctor*
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: BuildItemGroup
  nameWithType: BuildItemGroup.BuildItemGroup
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.AddNewItem*
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: AddNewItem
  nameWithType: BuildItemGroup.AddNewItem
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Clear*
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: Clear
  nameWithType: BuildItemGroup.Clear
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Clone*
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: Clone
  nameWithType: BuildItemGroup.Clone
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Condition*
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: Condition
  nameWithType: BuildItemGroup.Condition
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Count*
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: Count
  nameWithType: BuildItemGroup.Count
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.GetEnumerator*
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: GetEnumerator
  nameWithType: BuildItemGroup.GetEnumerator
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.IsImported*
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: IsImported
  nameWithType: BuildItemGroup.IsImported
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.Item*
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: Item
  nameWithType: BuildItemGroup.Item
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItem*
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: RemoveItem
  nameWithType: BuildItemGroup.RemoveItem
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.RemoveItemAt*
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: RemoveItemAt
  nameWithType: BuildItemGroup.RemoveItemAt
- uid: Microsoft.Build.BuildEngine.BuildItemGroup.ToArray*
  parent: Microsoft.Build.BuildEngine.BuildItemGroup
  isExternal: false
  name: ToArray
  nameWithType: BuildItemGroup.ToArray
