### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Evaluation.ProjectItem
  id: ProjectItem
  children:
  - Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  - Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  - Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  - Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.IsImported
  - Microsoft.Build.Evaluation.ProjectItem.ItemType
  - Microsoft.Build.Evaluation.ProjectItem.Metadata
  - Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  - Microsoft.Build.Evaluation.ProjectItem.Project
  - Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  - Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  - Microsoft.Build.Evaluation.ProjectItem.Xml
  langs:
  - csharp
  name: ProjectItem
  nameWithType: ProjectItem
  fullName: Microsoft.Build.Evaluation.ProjectItem
  type: Class
  summary: "Reprezentuje element ocenionych projektu czasu projektowania."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} [{UnevaluatedInclude}] #DirectMetadata={DirectMetadataCount}")]

      public class ProjectItem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  id: DirectMetadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Pobiera moduł wyliczający przez wszystkie metadane elementu."
  remarks: "Nie zawiera metadanych z definicji elementu. Nie ma wbudowanych metadanych, takich jak &quot;FullPath&quot;."
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata> DirectMetadata { get; }
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}
      description: "Zwraca moduł wyliczający we wszystkich metadanych elementu, w którym nigdy nie może mieć wartości null."
  overload: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  id: DirectMetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Pobiera liczbę metadanych dla tego elementu."
  remarks: "Nie zawiera metadanych z definicji elementu. Nie ma wbudowanych metadanych, takich jak &quot;FullPath&quot;."
  syntax:
    content: public int DirectMetadataCount { get; }
    return:
      type: System.Int32
      description: "Zwraca liczbę metadanych dla tego elementu."
  overload: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  id: EvaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Pobiera oceniana wartość atrybutu Uwzględnij."
  remarks: "Znaki ucieczki nie są zainstalowane."
  syntax:
    content: public string EvaluatedInclude { get; }
    return:
      type: System.String
      description: "Zwraca wartość ocenionych atrybutu Uwzględnij."
  overload: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  id: GetMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: GetMetadata(String)
  nameWithType: ProjectItem.GetMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Pobiera wartość ocenionych danego metadanych dla tego elementu."
  remarks: "Mogą obejmować metadane z definicji elementu. Nie ma wbudowanych metadanych, takich jak &quot;FullPath&quot;."
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa metadanych, którego wartość jest pobierana."
    return:
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "Pobiera wartość ocenionych danego metadanych dla tego elementu. Zwraca wartość null, jeśli nie istnieją metadane o podanej nazwie."
  overload: Microsoft.Build.Evaluation.ProjectItem.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  id: GetMetadataValue(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: GetMetadataValue(String)
  nameWithType: ProjectItem.GetMetadataValue(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Pobierz ocenionych wartość danego metadanych dla tego elementu, w tym metadanych pochodzących z definicji elementu."
  remarks: "Aby ustalić, czy istnieją metadane, czy ma ona wartość lub nie, należy użyć <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.</xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>       Ta metoda może służyć do uzyskania dostępu do wartości wbudowanych metadanych, takich jak &quot;FullPath&quot;."
  syntax:
    content: public string GetMetadataValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa metadanych, którego wartość jest pobierana."
    return:
      type: System.String
      description: "Zwraca wartość ocenionych danego metadanych dla tego elementu, w tym metadanych pochodzących z definicji elementu. Zwraca pusty ciąg, jeśli nie istnieją metadane o podanej nazwie."
  overload: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  id: HasMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: HasMetadata(String)
  nameWithType: ProjectItem.HasMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Określa, czy ten element jest zdefiniowany metadanych o podanej nazwie."
  remarks: "Zawiera wbudowane metadanych i metadanych pochodzących z definicji elementu."
  syntax:
    content: public bool HasMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa metadanych, które mają być wyszukiwane."
    return:
      type: System.Boolean
      description: "Zwraca wartość true, jeśli metadanych o podanej nazwie jest zdefiniowany dla tego elementu; wartość false w przeciwnym razie."
  overload: Microsoft.Build.Evaluation.ProjectItem.HasMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported
  id: IsImported
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: IsImported
  nameWithType: ProjectItem.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectItem.IsImported
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Określa ten element pochodzi z importowanego pliku."
  syntax:
    content: public bool IsImported { get; }
    return:
      type: System.Boolean
      description: "Zwraca wartość true, jeśli ten element pochodzi z importowanego pliku; wartość false w przeciwnym razie."
  overload: Microsoft.Build.Evaluation.ProjectItem.IsImported*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType
  id: ItemType
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: ItemType
  nameWithType: ProjectItem.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectItem.ItemType
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Pobiera lub ustawia typ tego elementu."
  syntax:
    content: public string ItemType { get; set; }
    return:
      type: System.String
      description: "Zwraca typ elementu."
  overload: Microsoft.Build.Evaluation.ProjectItem.ItemType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata
  id: Metadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Metadata
  nameWithType: ProjectItem.Metadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.Metadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Pobiera wszystkie metadane dla tego elementu, w tym metadanych pochodzących z definicji elementu."
  remarks: "Nie ma wbudowanych metadanych, takich jak &quot;FullPath&quot;.       Aby dodać, usunąć lub zmienić wartości wbudowanych metadanych, należy użyć <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A>do <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A> </xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A>"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata> Metadata { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
      description: "Zwraca wszystkie metadane dla tego elementu, w tym metadanych pochodzących z definicji elementu."
  overload: Microsoft.Build.Evaluation.ProjectItem.Metadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  id: MetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Pobiera liczbę metadanych dla tego elementu, w tym wszystkie metadane pochodzące z definicje elementów i wszystkich wbudowanych metadanych."
  syntax:
    content: public int MetadataCount { get; }
    return:
      type: System.Int32
      description: "Zwraca liczbę metadanych dla tego elementu, w tym wszystkie metadane pochodzące z definicje elementów i wszystkich wbudowanych metadanych."
  overload: Microsoft.Build.Evaluation.ProjectItem.MetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Project
  id: Project
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Project
  nameWithType: ProjectItem.Project
  fullName: Microsoft.Build.Evaluation.ProjectItem.Project
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Pobiera projektu, który zawiera ten element projektu."
  remarks: "Elementy projektu zawsze znajdują się w projekcie."
  syntax:
    content: public Microsoft.Build.Evaluation.Project Project { get; }
    return:
      type: Microsoft.Build.Evaluation.Project
      description: "Zwraca projektu, który zawiera ten element projektu."
  overload: Microsoft.Build.Evaluation.ProjectItem.Project*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  id: RemoveMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: RemoveMetadata(String)
  nameWithType: ProjectItem.RemoveMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Usuwa wszystkie metadane o podanej nazwie."
  remarks: "Zgłasza InvalidArgumentException, jeśli nazwa metadanych odwołuje się do wbudowanych metadanych, takich jak &quot;FullPath&quot;.       Generuje wyjątek InvalidOperationException, jeśli nazwa metadanych odwołuje się do metadanych, który pochodzi z definicji elementu."
  syntax:
    content: public bool RemoveMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa metadanych do usunięcia."
    return:
      type: System.Boolean
      description: "Zwraca wartość true, jeśli istnieje metadanych o podanej nazwie przed odbiorem; wartość false w przeciwnym razie."
  overload: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  id: Rename(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Rename(String)
  nameWithType: ProjectItem.Rename(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.Rename(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Zmienia nazwę elementu do podanej nazwie."
  remarks: "Równoważne ustawienie <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A>wartość.</xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> Ogólnie rzecz biorąc oceny nie występuje, ponieważ może to spowodować kilka pozycji, której nie ma znaczenia w kontekście zmiana nazwy pojedynczy element. Jednak jeśli element nie jest konieczne można podzielić, a nowa wartość jest dokładnie jeden element, jego ocenionych atrybutu Uwzględnij zostanie zaktualizowany przy ocenionych wartości."
  syntax:
    content: public void Rename (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nowa nazwa elementu."
  overload: Microsoft.Build.Evaluation.ProjectItem.Rename*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  id: SetMetadataValue(System.String,System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: SetMetadataValue(String,String)
  nameWithType: ProjectItem.SetMetadataValue(String,String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Dodaje metadane o podanej nazwie i wartości unevaluated do elementu."
  remarks: "Aktualizuje wartości istniejące metadane, jeśli istnieje już metadanych o podanej nazwie w elemencie, tak długo, jak nie pochodzi z definicji elementu. Aktualizuje ocenionych projektu, ale nie wpływa na niczego więcej w projekcie do ponownej oceny.       Na przykład jeśli fragment metadanych o nazwie &quot;m&quot; zostanie dodany na element typu &quot;i&quot;, nie dotyczy &quot;j&quot;, który jest oceniany z &quot;@(j->&quot;% (m)&quot;)&quot; do ponownej oceny. Również jeśli unevaluated wartość &quot;m&quot; jest ustawiona na coś, co jest modyfikowany przez oceny, takie jak &quot;$(p)&quot;, wartość ocenionych zostanie ustawiona do dosłownie &quot;$(p)&quot; do ponownej oceny.       Znaki specjalne w unevaluated wartość powinna być konwertowane na znaki ucieczki."
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);
    parameters:
    - id: name
      type: System.String
      description: "Nazwa metadanych do dodania."
    - id: unevaluatedValue
      type: System.String
      description: "Unevaluated wartość metadanych do dodania."
    return:
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "Zwraca nowe metadane. Jeśli metadane o podanej nazwie już istnieje, zwraca metadanych."
  overload: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  id: UnevaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Pobiera lub ustawia wartość unevaluated atrybutu Uwzględnij."
  syntax:
    content: public string UnevaluatedInclude { get; set; }
    return:
      type: System.String
      description: "Zwraca wartość unevaluated atrybutu Uwzględnij."
  overload: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml
  id: Xml
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Xml
  nameWithType: ProjectItem.Xml
  fullName: Microsoft.Build.Evaluation.ProjectItem.Xml
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Pobiera element elementu, który jest skojarzony z tym elementem."
  syntax:
    content: public Microsoft.Build.Construction.ProjectItemElement Xml { get; }
    return:
      type: Microsoft.Build.Construction.ProjectItemElement
      description: "Zwraca element elementu, który jest skojarzony z tym elementem, który nigdy nie może mieć wartości null."
  overload: Microsoft.Build.Evaluation.ProjectItem.Xml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectMetadata>
  nameWithType: IEnumerable<ProjectMetadata>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectMetadata
    name: ProjectMetadata
    nameWithType: ProjectMetadata
    fullName: ProjectMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadata(String)
  nameWithType: ProjectItem.GetMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(String)
- uid: Microsoft.Build.Evaluation.ProjectMetadata
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectMetadata
  nameWithType: ProjectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadataValue(String)
  nameWithType: ProjectItem.GetMetadataValue(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: HasMetadata(String)
  nameWithType: ProjectItem.HasMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: IsImported
  nameWithType: ProjectItem.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectItem.IsImported
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: ItemType
  nameWithType: ProjectItem.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectItem.ItemType
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Metadata
  nameWithType: ProjectItem.Metadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.Metadata
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectMetadata>
  nameWithType: ICollection<ProjectMetadata>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectMetadata
    name: ProjectMetadata
    nameWithType: ProjectMetadata
    fullName: ProjectMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.Project
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Project
  nameWithType: ProjectItem.Project
  fullName: Microsoft.Build.Evaluation.ProjectItem.Project
- uid: Microsoft.Build.Evaluation.Project
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.Evaluation.Project
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: RemoveMetadata(String)
  nameWithType: ProjectItem.RemoveMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Rename(String)
  nameWithType: ProjectItem.Rename(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.Rename(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: SetMetadataValue(String,String)
  nameWithType: ProjectItem.SetMetadataValue(String,String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(String,String)
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Xml
  nameWithType: ProjectItem.Xml
  fullName: Microsoft.Build.Evaluation.ProjectItem.Xml
- uid: Microsoft.Build.Construction.ProjectItemElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectItemElement
  nameWithType: ProjectItemElement
  fullName: Microsoft.Build.Construction.ProjectItemElement
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadata
  nameWithType: ProjectItem.GetMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadataValue
  nameWithType: ProjectItem.GetMetadataValue
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: HasMetadata
  nameWithType: ProjectItem.HasMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: IsImported
  nameWithType: ProjectItem.IsImported
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: ItemType
  nameWithType: ProjectItem.ItemType
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Metadata
  nameWithType: ProjectItem.Metadata
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.Project*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Project
  nameWithType: ProjectItem.Project
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: RemoveMetadata
  nameWithType: ProjectItem.RemoveMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Rename
  nameWithType: ProjectItem.Rename
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: SetMetadataValue
  nameWithType: ProjectItem.SetMetadataValue
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Xml
  nameWithType: ProjectItem.Xml
